{
  "version": 3,
  "sources": ["../../../../node_modules/ohash/dist/shared/ohash.D__AXeF1.mjs", "../../../../node_modules/reka-ui/src/shared/arrays.ts", "../../../../node_modules/reka-ui/src/shared/browser.ts", "../../../../node_modules/reka-ui/src/shared/clamp.ts", "../../../../node_modules/reka-ui/src/shared/createContext.ts", "../../../../node_modules/reka-ui/src/shared/getActiveElement.ts", "../../../../node_modules/reka-ui/src/shared/handleAndDispatchCustomEvent.ts", "../../../../node_modules/reka-ui/src/shared/nullish.ts", "../../../../node_modules/reka-ui/src/shared/isValueEqualOrExist.ts", "../../../../node_modules/reka-ui/src/shared/renderSlotFragments.ts", "../../../../node_modules/reka-ui/src/shared/useArrowNavigation.ts", "../../../../node_modules/reka-ui/src/ConfigProvider/ConfigProvider.vue", "../../../../node_modules/reka-ui/src/ConfigProvider/ConfigProvider.vue", "../../../../node_modules/defu/dist/defu.mjs", "../../../../node_modules/reka-ui/src/shared/useBodyScrollLock.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/utils.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/GregorianCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/weekStartData.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/queries.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/conversion.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/manipulation.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/string.ts", "../../../../node_modules/@swc/helpers/esm/_check_private_redeclaration.js", "../../../../node_modules/@swc/helpers/esm/_class_private_field_init.js", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/CalendarDate.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/JapaneseCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/BuddhistCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/TaiwanCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/PersianCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/IndianCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/IslamicCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/HebrewCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/calendars/EthiopicCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/createCalendar.ts", "../../../../node_modules/@internationalized/date/dist/packages/@internationalized/date/src/DateFormatter.ts", "../../../../node_modules/reka-ui/src/date/comparators.ts", "../../../../node_modules/reka-ui/src/shared/date/comparators.ts", "../../../../node_modules/reka-ui/src/date/utils.ts", "../../../../node_modules/reka-ui/src/shared/date/utils.ts", "../../../../node_modules/reka-ui/src/date/calendar.ts", "../../../../node_modules/reka-ui/src/shared/useDateFormatter.ts", "../../../../node_modules/reka-ui/src/shared/useDirection.ts", "../../../../node_modules/reka-ui/src/shared/useEmitAsProps.ts", "../../../../node_modules/reka-ui/src/shared/useFilter.ts", "../../../../node_modules/reka-ui/src/shared/useFocusGuards.ts", "../../../../node_modules/reka-ui/src/shared/useFormControl.ts", "../../../../node_modules/reka-ui/src/shared/useForwardExpose.ts", "../../../../node_modules/reka-ui/src/shared/useForwardProps.ts", "../../../../node_modules/reka-ui/src/shared/useForwardPropsEmits.ts", "../../../../node_modules/reka-ui/src/shared/useGraceArea.ts", "../../../../node_modules/aria-hidden/dist/es2015/index.js", "../../../../node_modules/reka-ui/src/shared/useHideOthers.ts", "../../../../node_modules/reka-ui/src/shared/useId.ts", "../../../../node_modules/reka-ui/src/shared/useKbd.ts", "../../../../node_modules/reka-ui/src/shared/useLocale.ts", "../../../../node_modules/reka-ui/src/shared/useSelectionBehavior.ts", "../../../../node_modules/reka-ui/src/shared/useSize.ts", "../../../../node_modules/reka-ui/src/shared/useStateMachine.ts", "../../../../node_modules/reka-ui/src/shared/useTypeahead.ts", "../../../../node_modules/reka-ui/src/shared/withDefault.ts", "../../../../node_modules/reka-ui/src/Presence/usePresence.ts", "../../../../node_modules/reka-ui/src/Presence/Presence.ts", "../../../../node_modules/reka-ui/src/Primitive/Slot.ts", "../../../../node_modules/reka-ui/src/Primitive/Primitive.ts", "../../../../node_modules/reka-ui/src/Primitive/usePrimitiveElement.ts", "../../../../node_modules/reka-ui/src/Collapsible/CollapsibleRoot.vue", "../../../../node_modules/reka-ui/src/Collapsible/CollapsibleRoot.vue", "../../../../node_modules/reka-ui/src/Collapsible/CollapsibleContent.vue", "../../../../node_modules/reka-ui/src/Collapsible/CollapsibleContent.vue", "../../../../node_modules/reka-ui/src/Collapsible/CollapsibleTrigger.vue", "../../../../node_modules/reka-ui/src/Collapsible/CollapsibleTrigger.vue", "../../../../node_modules/reka-ui/src/shared/useSingleOrMultipleValue.ts", "../../../../node_modules/reka-ui/src/Accordion/AccordionRoot.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionRoot.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionItem.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionItem.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionContent.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionContent.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionHeader.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionHeader.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionTrigger.vue", "../../../../node_modules/reka-ui/src/Accordion/AccordionTrigger.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogRoot.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogRoot.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogClose.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogClose.vue", "../../../../node_modules/reka-ui/src/DismissableLayer/utils.ts", "../../../../node_modules/reka-ui/src/DismissableLayer/DismissableLayer.vue", "../../../../node_modules/reka-ui/src/DismissableLayer/DismissableLayer.vue", "../../../../node_modules/reka-ui/src/DismissableLayer/DismissableLayerBranch.vue", "../../../../node_modules/reka-ui/src/DismissableLayer/DismissableLayerBranch.vue", "../../../../node_modules/reka-ui/src/FocusScope/stack.ts", "../../../../node_modules/reka-ui/src/FocusScope/utils.ts", "../../../../node_modules/reka-ui/src/FocusScope/FocusScope.vue", "../../../../node_modules/reka-ui/src/FocusScope/FocusScope.vue", "../../../../node_modules/reka-ui/src/Menu/utils.ts", "../../../../node_modules/reka-ui/src/Dialog/utils.ts", "../../../../node_modules/reka-ui/src/Dialog/DialogContentImpl.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogContentImpl.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogContentModal.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogContentModal.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogContentNonModal.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogContentNonModal.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogContent.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogContent.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogDescription.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogDescription.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogOverlayImpl.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogOverlayImpl.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogOverlay.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogOverlay.vue", "../../../../node_modules/reka-ui/src/Teleport/Teleport.vue", "../../../../node_modules/reka-ui/src/Teleport/Teleport.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogPortal.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogPortal.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogTitle.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogTitle.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogTrigger.vue", "../../../../node_modules/reka-ui/src/Dialog/DialogTrigger.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogAction.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogAction.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogContent.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogContent.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogCancel.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogCancel.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogDescription.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogDescription.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogOverlay.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogOverlay.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogPortal.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogPortal.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogRoot.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogRoot.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogTitle.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogTitle.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogTrigger.vue", "../../../../node_modules/reka-ui/src/AlertDialog/AlertDialogTrigger.vue", "../../../../node_modules/reka-ui/src/AspectRatio/AspectRatio.vue", "../../../../node_modules/reka-ui/src/AspectRatio/AspectRatio.vue", "../../../../node_modules/reka-ui/src/Avatar/AvatarRoot.vue", "../../../../node_modules/reka-ui/src/Avatar/AvatarRoot.vue", "../../../../node_modules/reka-ui/src/Avatar/AvatarFallback.vue", "../../../../node_modules/reka-ui/src/Avatar/AvatarFallback.vue", "../../../../node_modules/reka-ui/src/Avatar/utils.ts", "../../../../node_modules/reka-ui/src/Avatar/AvatarImage.vue", "../../../../node_modules/reka-ui/src/Avatar/AvatarImage.vue", "../../../../node_modules/reka-ui/src/shared/date/parts.ts", "../../../../node_modules/reka-ui/src/shared/date/placeholders.ts", "../../../../node_modules/reka-ui/src/shared/date/parser.ts", "../../../../node_modules/reka-ui/src/shared/date/segment.ts", "../../../../node_modules/reka-ui/src/shared/date/useDateField.ts", "../../../../node_modules/reka-ui/src/Calendar/useCalendar.ts", "../../../../node_modules/reka-ui/src/Calendar/CalendarRoot.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarRoot.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarCell.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarCell.vue", "../../../../node_modules/reka-ui/src/Calendar/utils.ts", "../../../../node_modules/reka-ui/src/Calendar/CalendarCellTrigger.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarCellTrigger.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarGrid.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarGrid.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarGridBody.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarGridBody.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarGridHead.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarGridHead.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarGridRow.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarGridRow.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarHeadCell.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarHeadCell.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarHeader.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarHeader.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarHeading.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarHeading.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarNext.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarNext.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarPrev.vue", "../../../../node_modules/reka-ui/src/Calendar/CalendarPrev.vue", "../../../../node_modules/reka-ui/src/Collection/Collection.ts", "../../../../node_modules/reka-ui/src/RovingFocus/utils.ts", "../../../../node_modules/reka-ui/src/RovingFocus/RovingFocusGroup.vue", "../../../../node_modules/reka-ui/src/RovingFocus/RovingFocusGroup.vue", "../../../../node_modules/reka-ui/src/RovingFocus/RovingFocusItem.vue", "../../../../node_modules/reka-ui/src/RovingFocus/RovingFocusItem.vue", "../../../../node_modules/reka-ui/src/VisuallyHidden/VisuallyHidden.vue", "../../../../node_modules/reka-ui/src/VisuallyHidden/VisuallyHidden.vue", "../../../../node_modules/reka-ui/src/VisuallyHidden/VisuallyHiddenInputBubble.vue", "../../../../node_modules/reka-ui/src/VisuallyHidden/VisuallyHiddenInputBubble.vue", "../../../../node_modules/reka-ui/src/VisuallyHidden/VisuallyHiddenInput.vue", "../../../../node_modules/reka-ui/src/VisuallyHidden/VisuallyHiddenInput.vue", "../../../../node_modules/reka-ui/src/Checkbox/CheckboxGroupRoot.vue", "../../../../node_modules/reka-ui/src/Checkbox/CheckboxGroupRoot.vue", "../../../../node_modules/reka-ui/src/Checkbox/utils.ts", "../../../../node_modules/reka-ui/src/Checkbox/CheckboxRoot.vue", "../../../../node_modules/reka-ui/src/Checkbox/CheckboxRoot.vue", "../../../../node_modules/reka-ui/src/Checkbox/CheckboxIndicator.vue", "../../../../node_modules/reka-ui/src/Checkbox/CheckboxIndicator.vue", "../../../../node_modules/reka-ui/src/Popper/PopperRoot.vue", "../../../../node_modules/reka-ui/src/Popper/PopperRoot.vue", "../../../../node_modules/reka-ui/src/Popper/PopperAnchor.vue", "../../../../node_modules/reka-ui/src/Popper/PopperAnchor.vue", "../../../../node_modules/reka-ui/src/shared/component/Arrow.vue", "../../../../node_modules/reka-ui/src/shared/component/Arrow.vue", "../../../../node_modules/reka-ui/src/Popper/utils.ts", "../../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs", "../../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs", "../../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs", "../../../../node_modules/@floating-ui/vue/dist/floating-ui.vue.mjs", "../../../../node_modules/reka-ui/src/Popper/PopperContent.vue", "../../../../node_modules/reka-ui/src/Popper/PopperContent.vue", "../../../../node_modules/reka-ui/src/Popper/PopperArrow.vue", "../../../../node_modules/reka-ui/src/Popper/PopperArrow.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxAnchor.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxAnchor.vue", "../../../../node_modules/reka-ui/src/Listbox/utils.ts", "../../../../node_modules/reka-ui/src/Listbox/ListboxRoot.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxRoot.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxContent.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxContent.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxFilter.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxFilter.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxGroup.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxGroup.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxGroupLabel.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxGroupLabel.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxItem.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxItem.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxItemIndicator.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxItemIndicator.vue", "../../../../node_modules/@tanstack/virtual-core/src/utils.ts", "../../../../node_modules/@tanstack/virtual-core/src/index.ts", "../../../../node_modules/@tanstack/vue-virtual/src/index.ts", "../../../../node_modules/reka-ui/src/Listbox/ListboxVirtualizer.vue", "../../../../node_modules/reka-ui/src/Listbox/ListboxVirtualizer.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxRoot.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxRoot.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxContentImpl.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxContentImpl.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxArrow.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxArrow.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxCancel.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxCancel.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxContent.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxContent.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxEmpty.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxEmpty.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxGroup.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxGroup.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxInput.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxInput.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxItem.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxItem.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxItemIndicator.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxItemIndicator.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxLabel.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxLabel.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxPortal.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxPortal.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxSeparator.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxSeparator.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxTrigger.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxTrigger.vue", "../../../../node_modules/reka-ui/src/shared/useNonce.ts", "../../../../node_modules/reka-ui/src/Combobox/ComboboxViewport.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxViewport.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxVirtualizer.vue", "../../../../node_modules/reka-ui/src/Combobox/ComboboxVirtualizer.vue", "../../../../node_modules/reka-ui/src/Menu/MenuAnchor.vue", "../../../../node_modules/reka-ui/src/Menu/MenuAnchor.vue", "../../../../node_modules/reka-ui/src/Menu/MenuArrow.vue", "../../../../node_modules/reka-ui/src/Menu/MenuArrow.vue", "../../../../node_modules/reka-ui/src/shared/useIsUsingKeyboard.ts", "../../../../node_modules/reka-ui/src/Menu/MenuRoot.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRoot.vue", "../../../../node_modules/reka-ui/src/Menu/MenuContentImpl.vue", "../../../../node_modules/reka-ui/src/Menu/MenuContentImpl.vue", "../../../../node_modules/reka-ui/src/Menu/MenuItemImpl.vue", "../../../../node_modules/reka-ui/src/Menu/MenuItemImpl.vue", "../../../../node_modules/reka-ui/src/Menu/MenuItem.vue", "../../../../node_modules/reka-ui/src/Menu/MenuItem.vue", "../../../../node_modules/reka-ui/src/Menu/MenuItemIndicator.vue", "../../../../node_modules/reka-ui/src/Menu/MenuItemIndicator.vue", "../../../../node_modules/reka-ui/src/Menu/MenuCheckboxItem.vue", "../../../../node_modules/reka-ui/src/Menu/MenuCheckboxItem.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRootContentModal.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRootContentModal.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRootContentNonModal.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRootContentNonModal.vue", "../../../../node_modules/reka-ui/src/Menu/MenuContent.vue", "../../../../node_modules/reka-ui/src/Menu/MenuContent.vue", "../../../../node_modules/reka-ui/src/Menu/MenuGroup.vue", "../../../../node_modules/reka-ui/src/Menu/MenuGroup.vue", "../../../../node_modules/reka-ui/src/Menu/MenuLabel.vue", "../../../../node_modules/reka-ui/src/Menu/MenuLabel.vue", "../../../../node_modules/reka-ui/src/Menu/MenuPortal.vue", "../../../../node_modules/reka-ui/src/Menu/MenuPortal.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRadioGroup.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRadioGroup.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRadioItem.vue", "../../../../node_modules/reka-ui/src/Menu/MenuRadioItem.vue", "../../../../node_modules/reka-ui/src/Menu/MenuSeparator.vue", "../../../../node_modules/reka-ui/src/Menu/MenuSeparator.vue", "../../../../node_modules/reka-ui/src/Menu/MenuSub.vue", "../../../../node_modules/reka-ui/src/Menu/MenuSub.vue", "../../../../node_modules/reka-ui/src/Menu/MenuSubContent.vue", "../../../../node_modules/reka-ui/src/Menu/MenuSubContent.vue", "../../../../node_modules/reka-ui/src/Menu/MenuSubTrigger.vue", "../../../../node_modules/reka-ui/src/Menu/MenuSubTrigger.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuArrow.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuArrow.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuCheckboxItem.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuCheckboxItem.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuRoot.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuRoot.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuContent.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuContent.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuGroup.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuGroup.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuItem.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuItem.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuItemIndicator.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuItemIndicator.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuLabel.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuLabel.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuPortal.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuPortal.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuRadioGroup.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuRadioGroup.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuRadioItem.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuRadioItem.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuSeparator.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuSeparator.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuSub.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuSub.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuSubContent.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuSubContent.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuSubTrigger.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuSubTrigger.vue", "../../../../node_modules/reka-ui/src/ContextMenu/utils.ts", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuTrigger.vue", "../../../../node_modules/reka-ui/src/ContextMenu/ContextMenuTrigger.vue", "../../../../node_modules/reka-ui/src/DateField/DateFieldRoot.vue", "../../../../node_modules/reka-ui/src/DateField/DateFieldRoot.vue", "../../../../node_modules/reka-ui/src/DateField/DateFieldInput.vue", "../../../../node_modules/reka-ui/src/DateField/DateFieldInput.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverRoot.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverRoot.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverAnchor.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverAnchor.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerAnchor.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerAnchor.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverArrow.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverArrow.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerArrow.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerArrow.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerRoot.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerRoot.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerCalendar.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerCalendar.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerCell.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerCell.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerCellTrigger.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerCellTrigger.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverClose.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverClose.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerClose.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerClose.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverContentImpl.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverContentImpl.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverContentModal.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverContentModal.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverContentNonModal.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverContentNonModal.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverContent.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverContent.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverPortal.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverPortal.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerContent.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerContent.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerField.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerField.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerGrid.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerGrid.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerGridBody.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerGridBody.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerGridHead.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerGridHead.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerGridRow.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerGridRow.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerHeadCell.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerHeadCell.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerHeader.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerHeader.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerHeading.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerHeading.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerInput.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerInput.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerNext.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerNext.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerPrev.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerPrev.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverTrigger.vue", "../../../../node_modules/reka-ui/src/Popover/PopoverTrigger.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerTrigger.vue", "../../../../node_modules/reka-ui/src/DatePicker/DatePickerTrigger.vue", "../../../../node_modules/reka-ui/src/DateRangeField/DateRangeFieldRoot.vue", "../../../../node_modules/reka-ui/src/DateRangeField/DateRangeFieldRoot.vue", "../../../../node_modules/reka-ui/src/DateRangeField/DateRangeFieldInput.vue", "../../../../node_modules/reka-ui/src/DateRangeField/DateRangeFieldInput.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerAnchor.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerAnchor.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerArrow.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerArrow.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerRoot.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerRoot.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/useRangeCalendar.ts", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarRoot.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarRoot.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerCalendar.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerCalendar.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarCell.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarCell.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerCell.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerCell.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarCellTrigger.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarCellTrigger.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerCellTrigger.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerCellTrigger.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerClose.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerClose.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerContent.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerContent.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerField.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerField.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarGrid.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarGrid.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerGrid.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerGrid.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarGridBody.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarGridBody.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerGridBody.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerGridBody.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarGridHead.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarGridHead.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerGridHead.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerGridHead.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarGridRow.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarGridRow.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerGridRow.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerGridRow.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarHeadCell.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarHeadCell.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerHeadCell.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerHeadCell.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarHeader.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarHeader.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerHeader.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerHeader.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarHeading.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarHeading.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerHeading.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerHeading.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerInput.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerInput.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarNext.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarNext.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerNext.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerNext.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarPrev.vue", "../../../../node_modules/reka-ui/src/RangeCalendar/RangeCalendarPrev.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerPrev.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerPrev.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerTrigger.vue", "../../../../node_modules/reka-ui/src/DateRangePicker/DateRangePickerTrigger.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuArrow.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuArrow.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuCheckboxItem.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuCheckboxItem.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuRoot.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuRoot.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuContent.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuContent.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuGroup.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuGroup.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuItem.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuItem.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuItemIndicator.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuItemIndicator.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuLabel.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuLabel.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuPortal.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuPortal.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuRadioGroup.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuRadioGroup.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuRadioItem.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuRadioItem.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuSeparator.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuSeparator.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuSub.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuSub.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuSubContent.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuSubContent.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuSubTrigger.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuSubTrigger.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuTrigger.vue", "../../../../node_modules/reka-ui/src/DropdownMenu/DropdownMenuTrigger.vue", "../../../../node_modules/reka-ui/src/Editable/EditableRoot.vue", "../../../../node_modules/reka-ui/src/Editable/EditableRoot.vue", "../../../../node_modules/reka-ui/src/Editable/EditableArea.vue", "../../../../node_modules/reka-ui/src/Editable/EditableArea.vue", "../../../../node_modules/reka-ui/src/Editable/EditableCancelTrigger.vue", "../../../../node_modules/reka-ui/src/Editable/EditableCancelTrigger.vue", "../../../../node_modules/reka-ui/src/Editable/EditableEditTrigger.vue", "../../../../node_modules/reka-ui/src/Editable/EditableEditTrigger.vue", "../../../../node_modules/reka-ui/src/Editable/EditableInput.vue", "../../../../node_modules/reka-ui/src/Editable/EditableInput.vue", "../../../../node_modules/reka-ui/src/Editable/EditablePreview.vue", "../../../../node_modules/reka-ui/src/Editable/EditablePreview.vue", "../../../../node_modules/reka-ui/src/Editable/EditableSubmitTrigger.vue", "../../../../node_modules/reka-ui/src/Editable/EditableSubmitTrigger.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardArrow.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardArrow.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardRoot.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardRoot.vue", "../../../../node_modules/reka-ui/src/HoverCard/utils.ts", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardContentImpl.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardContentImpl.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardContent.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardContent.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardPortal.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardPortal.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardTrigger.vue", "../../../../node_modules/reka-ui/src/HoverCard/HoverCardTrigger.vue", "../../../../node_modules/reka-ui/src/Label/Label.vue", "../../../../node_modules/reka-ui/src/Label/Label.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarArrow.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarArrow.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarCheckboxItem.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarCheckboxItem.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarRoot.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarRoot.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarMenu.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarMenu.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarContent.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarContent.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarGroup.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarGroup.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarItem.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarItem.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarItemIndicator.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarItemIndicator.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarLabel.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarLabel.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarPortal.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarPortal.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarRadioGroup.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarRadioGroup.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarRadioItem.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarRadioItem.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarSeparator.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarSeparator.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarSub.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarSub.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarSubContent.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarSubContent.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarSubTrigger.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarSubTrigger.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarTrigger.vue", "../../../../node_modules/reka-ui/src/Menubar/MenubarTrigger.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuRoot.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuRoot.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/utils.ts", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuItem.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuItem.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuContentImpl.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuContentImpl.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuContent.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuContent.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuIndicator.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuIndicator.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuLink.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuLink.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuList.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuList.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuSub.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuSub.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuTrigger.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuTrigger.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuViewport.vue", "../../../../node_modules/reka-ui/src/NavigationMenu/NavigationMenuViewport.vue", "../../../../node_modules/@internationalized/number/dist/packages/@internationalized/number/src/NumberFormatter.ts", "../../../../node_modules/@internationalized/number/dist/packages/@internationalized/number/src/NumberParser.ts", "../../../../node_modules/reka-ui/src/NumberField/utils.ts", "../../../../node_modules/reka-ui/src/NumberField/NumberFieldRoot.vue", "../../../../node_modules/reka-ui/src/NumberField/NumberFieldRoot.vue", "../../../../node_modules/reka-ui/src/NumberField/NumberFieldDecrement.vue", "../../../../node_modules/reka-ui/src/NumberField/NumberFieldDecrement.vue", "../../../../node_modules/reka-ui/src/NumberField/NumberFieldIncrement.vue", "../../../../node_modules/reka-ui/src/NumberField/NumberFieldIncrement.vue", "../../../../node_modules/reka-ui/src/NumberField/NumberFieldInput.vue", "../../../../node_modules/reka-ui/src/NumberField/NumberFieldInput.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationEllipsis.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationEllipsis.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationRoot.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationRoot.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationFirst.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationFirst.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationLast.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationLast.vue", "../../../../node_modules/reka-ui/src/Pagination/utils.ts", "../../../../node_modules/reka-ui/src/Pagination/PaginationList.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationList.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationListItem.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationListItem.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationNext.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationNext.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationPrev.vue", "../../../../node_modules/reka-ui/src/Pagination/PaginationPrev.vue", "../../../../node_modules/reka-ui/src/PinInput/PinInputRoot.vue", "../../../../node_modules/reka-ui/src/PinInput/PinInputRoot.vue", "../../../../node_modules/reka-ui/src/PinInput/PinInputInput.vue", "../../../../node_modules/reka-ui/src/PinInput/PinInputInput.vue", "../../../../node_modules/reka-ui/src/Progress/ProgressRoot.vue", "../../../../node_modules/reka-ui/src/Progress/ProgressRoot.vue", "../../../../node_modules/reka-ui/src/Progress/ProgressIndicator.vue", "../../../../node_modules/reka-ui/src/Progress/ProgressIndicator.vue", "../../../../node_modules/reka-ui/src/RadioGroup/utils.ts", "../../../../node_modules/reka-ui/src/RadioGroup/Radio.vue", "../../../../node_modules/reka-ui/src/RadioGroup/Radio.vue", "../../../../node_modules/reka-ui/src/RadioGroup/RadioGroupRoot.vue", "../../../../node_modules/reka-ui/src/RadioGroup/RadioGroupRoot.vue", "../../../../node_modules/reka-ui/src/RadioGroup/RadioGroupItem.vue", "../../../../node_modules/reka-ui/src/RadioGroup/RadioGroupItem.vue", "../../../../node_modules/reka-ui/src/RadioGroup/RadioGroupIndicator.vue", "../../../../node_modules/reka-ui/src/RadioGroup/RadioGroupIndicator.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaRoot.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaRoot.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaCornerImpl.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaCornerImpl.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaCorner.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaCorner.vue", "../../../../node_modules/reka-ui/src/ScrollArea/utils.ts", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarX.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarX.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarY.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarY.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarAuto.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarAuto.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarHover.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarHover.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarScroll.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarScroll.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbar.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbar.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarVisible.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarVisible.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarImpl.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaScrollbarImpl.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaThumb.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaThumb.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaViewport.vue", "../../../../node_modules/reka-ui/src/ScrollArea/ScrollAreaViewport.vue", "../../../../node_modules/reka-ui/src/Select/BubbleSelect.vue", "../../../../node_modules/reka-ui/src/Select/BubbleSelect.vue", "../../../../node_modules/reka-ui/src/Select/utils.ts", "../../../../node_modules/reka-ui/src/Select/SelectRoot.vue", "../../../../node_modules/reka-ui/src/Select/SelectRoot.vue", "../../../../node_modules/reka-ui/src/Select/SelectPopperPosition.vue", "../../../../node_modules/reka-ui/src/Select/SelectPopperPosition.vue", "../../../../node_modules/reka-ui/src/Select/SelectContentImpl.vue", "../../../../node_modules/reka-ui/src/Select/SelectContentImpl.vue", "../../../../node_modules/reka-ui/src/Select/SelectItemAlignedPosition.vue", "../../../../node_modules/reka-ui/src/Select/SelectItemAlignedPosition.vue", "../../../../node_modules/reka-ui/src/Select/SelectArrow.vue", "../../../../node_modules/reka-ui/src/Select/SelectArrow.vue", "../../../../node_modules/reka-ui/src/Select/SelectProvider.vue", "../../../../node_modules/reka-ui/src/Select/SelectProvider.vue", "../../../../node_modules/reka-ui/src/Select/SelectContent.vue", "../../../../node_modules/reka-ui/src/Select/SelectContent.vue", "../../../../node_modules/reka-ui/src/Select/SelectGroup.vue", "../../../../node_modules/reka-ui/src/Select/SelectGroup.vue", "../../../../node_modules/reka-ui/src/Select/SelectIcon.vue", "../../../../node_modules/reka-ui/src/Select/SelectIcon.vue", "../../../../node_modules/reka-ui/src/Select/SelectItem.vue", "../../../../node_modules/reka-ui/src/Select/SelectItem.vue", "../../../../node_modules/reka-ui/src/Select/SelectItemIndicator.vue", "../../../../node_modules/reka-ui/src/Select/SelectItemIndicator.vue", "../../../../node_modules/reka-ui/src/Select/SelectItemText.vue", "../../../../node_modules/reka-ui/src/Select/SelectItemText.vue", "../../../../node_modules/reka-ui/src/Select/SelectLabel.vue", "../../../../node_modules/reka-ui/src/Select/SelectLabel.vue", "../../../../node_modules/reka-ui/src/Select/SelectPortal.vue", "../../../../node_modules/reka-ui/src/Select/SelectPortal.vue", "../../../../node_modules/reka-ui/src/Select/SelectScrollButtonImpl.vue", "../../../../node_modules/reka-ui/src/Select/SelectScrollButtonImpl.vue", "../../../../node_modules/reka-ui/src/Select/SelectScrollDownButton.vue", "../../../../node_modules/reka-ui/src/Select/SelectScrollDownButton.vue", "../../../../node_modules/reka-ui/src/Select/SelectScrollUpButton.vue", "../../../../node_modules/reka-ui/src/Select/SelectScrollUpButton.vue", "../../../../node_modules/reka-ui/src/Select/SelectSeparator.vue", "../../../../node_modules/reka-ui/src/Select/SelectSeparator.vue", "../../../../node_modules/reka-ui/src/Select/SelectTrigger.vue", "../../../../node_modules/reka-ui/src/Select/SelectTrigger.vue", "../../../../node_modules/reka-ui/src/Select/SelectValue.vue", "../../../../node_modules/reka-ui/src/Select/SelectValue.vue", "../../../../node_modules/reka-ui/src/Select/SelectViewport.vue", "../../../../node_modules/reka-ui/src/Select/SelectViewport.vue", "../../../../node_modules/reka-ui/src/shared/component/BaseSeparator.vue", "../../../../node_modules/reka-ui/src/shared/component/BaseSeparator.vue", "../../../../node_modules/reka-ui/src/Separator/Separator.vue", "../../../../node_modules/reka-ui/src/Separator/Separator.vue", "../../../../node_modules/reka-ui/src/Slider/utils.ts", "../../../../node_modules/reka-ui/src/Slider/SliderHorizontal.vue", "../../../../node_modules/reka-ui/src/Slider/SliderHorizontal.vue", "../../../../node_modules/reka-ui/src/Slider/SliderVertical.vue", "../../../../node_modules/reka-ui/src/Slider/SliderVertical.vue", "../../../../node_modules/reka-ui/src/Slider/SliderRoot.vue", "../../../../node_modules/reka-ui/src/Slider/SliderRoot.vue", "../../../../node_modules/reka-ui/src/Slider/SliderImpl.vue", "../../../../node_modules/reka-ui/src/Slider/SliderImpl.vue", "../../../../node_modules/reka-ui/src/Slider/SliderRange.vue", "../../../../node_modules/reka-ui/src/Slider/SliderRange.vue", "../../../../node_modules/reka-ui/src/Slider/SliderThumbImpl.vue", "../../../../node_modules/reka-ui/src/Slider/SliderThumbImpl.vue", "../../../../node_modules/reka-ui/src/Slider/SliderThumb.vue", "../../../../node_modules/reka-ui/src/Slider/SliderThumb.vue", "../../../../node_modules/reka-ui/src/Slider/SliderTrack.vue", "../../../../node_modules/reka-ui/src/Slider/SliderTrack.vue", "../../../../node_modules/reka-ui/src/Splitter/utils/assert.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/dom.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/events.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/calculate.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/callPanelCallbacks.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/debounce.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/constants.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/compare.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/resizePanel.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/layout.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/pivot.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/rects.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/stackingOrder.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/registry.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/style.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/validation.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/composables/useWindowSplitterPanelGroupBehavior.ts", "../../../../node_modules/reka-ui/src/Splitter/utils/storage.ts", "../../../../node_modules/reka-ui/src/Splitter/SplitterGroup.vue", "../../../../node_modules/reka-ui/src/Splitter/SplitterGroup.vue", "../../../../node_modules/reka-ui/src/Splitter/SplitterPanel.vue", "../../../../node_modules/reka-ui/src/Splitter/SplitterPanel.vue", "../../../../node_modules/reka-ui/src/Splitter/utils/composables/useWindowSplitterBehavior.ts", "../../../../node_modules/reka-ui/src/Splitter/SplitterResizeHandle.vue", "../../../../node_modules/reka-ui/src/Splitter/SplitterResizeHandle.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperRoot.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperRoot.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperItem.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperItem.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperDescription.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperDescription.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperIndicator.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperIndicator.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperSeparator.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperSeparator.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperTitle.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperTitle.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperTrigger.vue", "../../../../node_modules/reka-ui/src/Stepper/StepperTrigger.vue", "../../../../node_modules/reka-ui/src/Switch/SwitchRoot.vue", "../../../../node_modules/reka-ui/src/Switch/SwitchRoot.vue", "../../../../node_modules/reka-ui/src/Switch/SwitchThumb.vue", "../../../../node_modules/reka-ui/src/Switch/SwitchThumb.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsRoot.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsRoot.vue", "../../../../node_modules/reka-ui/src/Tabs/utils.ts", "../../../../node_modules/reka-ui/src/Tabs/TabsContent.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsContent.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsIndicator.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsIndicator.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsList.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsList.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsTrigger.vue", "../../../../node_modules/reka-ui/src/Tabs/TabsTrigger.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputRoot.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputRoot.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputClear.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputClear.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputInput.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputInput.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputItem.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputItem.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputItemDelete.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputItemDelete.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputItemText.vue", "../../../../node_modules/reka-ui/src/TagsInput/TagsInputItemText.vue", "../../../../node_modules/reka-ui/src/TimeField/TimeFieldRoot.vue", "../../../../node_modules/reka-ui/src/TimeField/TimeFieldRoot.vue", "../../../../node_modules/reka-ui/src/TimeField/TimeFieldInput.vue", "../../../../node_modules/reka-ui/src/TimeField/TimeFieldInput.vue", "../../../../node_modules/reka-ui/src/Toast/ToastAnnounceExclude.vue", "../../../../node_modules/reka-ui/src/Toast/ToastAnnounceExclude.vue", "../../../../node_modules/reka-ui/src/Toast/ToastProvider.vue", "../../../../node_modules/reka-ui/src/Toast/ToastProvider.vue", "../../../../node_modules/reka-ui/src/Toast/ToastAnnounce.vue", "../../../../node_modules/reka-ui/src/Toast/ToastAnnounce.vue", "../../../../node_modules/reka-ui/src/Toast/utils.ts", "../../../../node_modules/reka-ui/src/Toast/ToastRootImpl.vue", "../../../../node_modules/reka-ui/src/Toast/ToastRootImpl.vue", "../../../../node_modules/reka-ui/src/Toast/ToastClose.vue", "../../../../node_modules/reka-ui/src/Toast/ToastClose.vue", "../../../../node_modules/reka-ui/src/Toast/ToastAction.vue", "../../../../node_modules/reka-ui/src/Toast/ToastAction.vue", "../../../../node_modules/reka-ui/src/Toast/ToastDescription.vue", "../../../../node_modules/reka-ui/src/Toast/ToastDescription.vue", "../../../../node_modules/reka-ui/src/Toast/ToastPortal.vue", "../../../../node_modules/reka-ui/src/Toast/ToastPortal.vue", "../../../../node_modules/reka-ui/src/Toast/ToastRoot.vue", "../../../../node_modules/reka-ui/src/Toast/ToastRoot.vue", "../../../../node_modules/reka-ui/src/Toast/ToastTitle.vue", "../../../../node_modules/reka-ui/src/Toast/ToastTitle.vue", "../../../../node_modules/reka-ui/src/Toast/FocusProxy.vue", "../../../../node_modules/reka-ui/src/Toast/FocusProxy.vue", "../../../../node_modules/reka-ui/src/Toast/ToastViewport.vue", "../../../../node_modules/reka-ui/src/Toast/ToastViewport.vue", "../../../../node_modules/reka-ui/src/ToggleGroup/ToggleGroupRoot.vue", "../../../../node_modules/reka-ui/src/ToggleGroup/ToggleGroupRoot.vue", "../../../../node_modules/reka-ui/src/Toggle/Toggle.vue", "../../../../node_modules/reka-ui/src/Toggle/Toggle.vue", "../../../../node_modules/reka-ui/src/ToggleGroup/ToggleGroupItem.vue", "../../../../node_modules/reka-ui/src/ToggleGroup/ToggleGroupItem.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarButton.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarButton.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarLink.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarLink.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarRoot.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarRoot.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarSeparator.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarSeparator.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarToggleGroup.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarToggleGroup.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarToggleItem.vue", "../../../../node_modules/reka-ui/src/Toolbar/ToolbarToggleItem.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipArrow.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipArrow.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipProvider.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipProvider.vue", "../../../../node_modules/reka-ui/src/Tooltip/utils.ts", "../../../../node_modules/reka-ui/src/Tooltip/TooltipRoot.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipRoot.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipContentImpl.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipContentImpl.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipContentHoverable.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipContentHoverable.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipContent.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipContent.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipPortal.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipPortal.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipTrigger.vue", "../../../../node_modules/reka-ui/src/Tooltip/TooltipTrigger.vue", "../../../../node_modules/reka-ui/src/Tree/utils.ts", "../../../../node_modules/reka-ui/src/Tree/TreeRoot.vue", "../../../../node_modules/reka-ui/src/Tree/TreeRoot.vue", "../../../../node_modules/reka-ui/src/Tree/TreeItem.vue", "../../../../node_modules/reka-ui/src/Tree/TreeItem.vue", "../../../../node_modules/reka-ui/src/Tree/TreeVirtualizer.vue", "../../../../node_modules/reka-ui/src/Tree/TreeVirtualizer.vue", "../../../../node_modules/reka-ui/src/Viewport/Viewport.vue", "../../../../node_modules/reka-ui/src/Viewport/Viewport.vue"],
  "sourcesContent": ["function serialize(o){return typeof o==\"string\"?`'${o}'`:new c().serialize(o)}const c=/*@__PURE__*/function(){class o{#t=new Map;compare(t,r){const e=typeof t,n=typeof r;return e===\"string\"&&n===\"string\"?t.localeCompare(r):e===\"number\"&&n===\"number\"?t-r:String.prototype.localeCompare.call(this.serialize(t,true),this.serialize(r,true))}serialize(t,r){if(t===null)return \"null\";switch(typeof t){case \"string\":return r?t:`'${t}'`;case \"bigint\":return `${t}n`;case \"object\":return this.$object(t);case \"function\":return this.$function(t)}return String(t)}serializeObject(t){const r=Object.prototype.toString.call(t);if(r!==\"[object Object]\")return this.serializeBuiltInType(r.length<10?`unknown:${r}`:r.slice(8,-1),t);const e=t.constructor,n=e===Object||e===void 0?\"\":e.name;if(n!==\"\"&&globalThis[n]===e)return this.serializeBuiltInType(n,t);if(typeof t.toJSON==\"function\"){const i=t.toJSON();return n+(i!==null&&typeof i==\"object\"?this.$object(i):`(${this.serialize(i)})`)}return this.serializeObjectEntries(n,Object.entries(t))}serializeBuiltInType(t,r){const e=this[\"$\"+t];if(e)return e.call(this,r);if(typeof r?.entries==\"function\")return this.serializeObjectEntries(t,r.entries());throw new Error(`Cannot serialize ${t}`)}serializeObjectEntries(t,r){const e=Array.from(r).sort((i,a)=>this.compare(i[0],a[0]));let n=`${t}{`;for(let i=0;i<e.length;i++){const[a,l]=e[i];n+=`${this.serialize(a,true)}:${this.serialize(l)}`,i<e.length-1&&(n+=\",\");}return n+\"}\"}$object(t){let r=this.#t.get(t);return r===void 0&&(this.#t.set(t,`#${this.#t.size}`),r=this.serializeObject(t),this.#t.set(t,r)),r}$function(t){const r=Function.prototype.toString.call(t);return r.slice(-15)===\"[native code] }\"?`${t.name||\"\"}()[native]`:`${t.name}(${t.length})${r.replace(/\\s*\\n\\s*/g,\"\")}`}$Array(t){let r=\"[\";for(let e=0;e<t.length;e++)r+=this.serialize(t[e]),e<t.length-1&&(r+=\",\");return r+\"]\"}$Date(t){try{return `Date(${t.toISOString()})`}catch{return \"Date(null)\"}}$ArrayBuffer(t){return `ArrayBuffer[${new Uint8Array(t).join(\",\")}]`}$Set(t){return `Set${this.$Array(Array.from(t).sort((r,e)=>this.compare(r,e)))}`}$Map(t){return this.serializeObjectEntries(\"Map\",t.entries())}}for(const s of [\"Error\",\"RegExp\",\"URL\"])o.prototype[\"$\"+s]=function(t){return `${s}(${t})`};for(const s of [\"Int8Array\",\"Uint8Array\",\"Uint8ClampedArray\",\"Int16Array\",\"Uint16Array\",\"Int32Array\",\"Uint32Array\",\"Float32Array\",\"Float64Array\"])o.prototype[\"$\"+s]=function(t){return `${s}[${t.join(\",\")}]`};for(const s of [\"BigInt64Array\",\"BigUint64Array\"])o.prototype[\"$\"+s]=function(t){return `${s}[${t.join(\"n,\")}${t.length>0?\"n\":\"\"}]`};return o}();\n\nfunction isEqual(object1, object2) {\n  if (object1 === object2) {\n    return true;\n  }\n  if (serialize(object1) === serialize(object2)) {\n    return true;\n  }\n  return false;\n}\n\nexport { isEqual as i, serialize as s };\n", "import { isEqual } from 'ohash'\n\n/**\n * The function `areEqual` compares two arrays and returns true if they are equal in length and have\n * the same elements at corresponding indexes.\n * @param {any[]} arrayA - An array of any type of elements.\n * @param {any[]} arrayB - It looks like you haven't provided the value for `arrayB`. Could you please\n * provide the arrayB value so that I can assist you further?\n * @returns The function `areEqual` is returning a boolean value, either `true` if the two input arrays\n * `arrayA` and `arrayB` are equal, or `false` if they are not equal.\n */\nexport function areEqual(arrayA: any[], arrayB: any[]): boolean {\n  if (arrayA.length !== arrayB.length)\n    return false\n\n  for (let index = 0; index < arrayA.length; index++) {\n    if (arrayA[index] !== arrayB[index])\n      return false\n  }\n\n  return true\n}\n\n/**\n * Splits an array into chunks of a given size.\n * @param arr The array to split.\n * @param size The size of each chunk.\n * @returns An array of arrays, where each sub-array has `size` elements from the original array.\n * @example ```ts\n * const arr = [1, 2, 3, 4, 5, 6, 7, 8];\n * const chunks = chunk(arr, 3);\n * // chunks = [[1, 2, 3], [4, 5, 6], [7, 8]]\n * ```\n */\nexport function chunk<T>(arr: T[], size: number): T[][] {\n  const result = []\n  for (let i = 0; i < arr.length; i += size)\n    result.push(arr.slice(i, i + size))\n\n  return result\n}\n\n/**\n * The function `findValuesBetween` takes an array and two values, then returns a subarray containing\n * elements between the first occurrence of the start value and the first occurrence of the end value\n * in the array.\n * @param {T[]} array - The `array` parameter is an array of values of type `T`.\n * @param {T} start - The `start` parameter is the value that marks the beginning of the range you want\n * to find in the array.\n * @param {T} end - The `end` parameter in the `findValuesBetween` function represents the end value\n * that you want to find in the array. This function will return a subarray of values that are between\n * the `start` and `end` values in the original array.\n * @returns The `findValuesBetween` function returns an array of values from the input array that are\n * between the `start` and `end` values (inclusive). If either the `start` or `end` values are not\n * found in the input array, an empty array is returned.\n */\nexport function findValuesBetween<T>(array: T[], start: T, end: T) {\n  const startIndex = array.findIndex(i => isEqual(i, start))\n  const endIndex = array.findIndex(i => isEqual(i, end))\n  if (startIndex === -1 || endIndex === -1)\n    return []\n\n  const [minIndex, maxIndex] = [startIndex, endIndex].sort((a, b) => a - b)\n\n  return array.slice(minIndex, maxIndex + 1)\n}\n", "export const isBrowser = typeof document !== 'undefined'\n", "/**\n * The `clamp` function restricts a number within a specified range by returning the value itself if it\n * falls within the range, or the closest boundary value if it exceeds the range.\n * @param {number} value - The `value` parameter represents the number that you want to clamp within\n * the specified range defined by `min` and `max` values.\n * @param {number} min - If the `value` parameter is less than the `min` value, the\n * function will return the `min` value.\n * @param {number} max - If the `value` parameter is greater than the `max` value,\n * the function will return `max`.\n * @returns The `clamp` function returns the value of `value` constrained within the range defined by\n * `min` and `max`.\n */\nexport function clamp(value: number, min: number = Number.NEGATIVE_INFINITY, max: number = Number.POSITIVE_INFINITY): number {\n  return Math.min(max, Math.max(min, value))\n}\n\n/**\n * The function `roundToStepPrecision` rounds a number to a specified precision step.\n * @param {number} value - The `value` parameter is the number that you want to round to a specific\n * precision based on the `step` parameter.\n * @param {number} step - The `step` parameter in the `roundToStepPrecision` function represents the\n * interval at which you want to round the `value`. For example, if `step` is 0.5, the `value` will be\n * rounded to the nearest half.\n * @returns the `roundedValue` after rounding it to the precision specified by the `step`.\n */\nexport function roundToStepPrecision(value: number, step: number) {\n  let roundedValue = value\n  const stepString = step.toString()\n  const pointIndex = stepString.indexOf('.')\n  const precision = pointIndex >= 0 ? stepString.length - pointIndex : 0\n  if (precision > 0) {\n    const pow = 10 ** precision\n    roundedValue = Math.round(roundedValue * pow) / pow\n  }\n  return roundedValue\n}\n\n/**\n * The function `snapValueToStep` snaps a given value to the nearest step within a specified range.\n * @param {number} value - The `value` parameter represents the number that you want to snap to the\n * nearest step value.\n * @param {number | undefined} min - The `min` parameter represents the minimum value that the `value`\n * should be snapped to. If `value` is less than `min`, it will be snapped to `min`. If `min` is not\n * provided (undefined), then the snapping will not consider a minimum value.\n * @param {number | undefined} max - The `max` parameter represents the maximum value that the `value`\n * should be snapped to. It ensures that the snapped value does not exceed this maximum value.\n * @param {number} step - The `step` parameter in the `snapValueToStep` function represents the\n * interval at which the `value` should be snapped to. It determines the granularity of the snapping\n * operation. For example, if `step` is 5, the `value` will be snapped to the nearest multiple of\n * @returns a number that has been snapped to the nearest step value within the specified range of minimum and maximum values.\n */\nexport function snapValueToStep(value: number, min: number | undefined, max: number | undefined, step: number): number {\n  min = Number(min)\n  max = Number(max)\n  const remainder = ((value - (Number.isNaN(min) ? 0 : min)) % step)\n  let snappedValue = roundToStepPrecision(Math.abs(remainder) * 2 >= step\n    ? value + Math.sign(remainder) * (step - Math.abs(remainder))\n    : value - remainder, step)\n\n  if (!Number.isNaN(min)) {\n    if (snappedValue < min)\n      snappedValue = min\n    else if (!Number.isNaN(max) && snappedValue > max)\n      snappedValue = min + Math.floor(roundToStepPrecision((max - min) / step, step)) * step\n  }\n  else if (!Number.isNaN(max) && snappedValue > max) {\n    snappedValue = Math.floor(roundToStepPrecision(max / step, step)) * step\n  }\n\n  // correct floating point behavior by rounding to step precision\n  snappedValue = roundToStepPrecision(snappedValue, step)\n\n  return snappedValue\n}\n", "import type { InjectionKey } from 'vue'\nimport { inject, provide } from 'vue'\n\n/**\n * @param providerComponentName - The name(s) of the component(s) providing the context.\n *\n * There are situations where context can come from multiple components. In such cases, you might need to give an array of component names to provide your context, instead of just a single string.\n *\n * @param contextName The description for injection key symbol.\n */\nexport function createContext<ContextValue>(\n  providerComponentName: string | string[],\n  contextName?: string,\n) {\n  const symbolDescription\n    = typeof providerComponentName === 'string' && !contextName\n      ? `${providerComponentName}Context`\n      : contextName\n\n  const injectionKey: InjectionKey<ContextValue | null> = Symbol(symbolDescription)\n\n  /**\n   * @param fallback The context value to return if the injection fails.\n   *\n   * @throws When context injection failed and no fallback is specified.\n   * This happens when the component injecting the context is not a child of the root component providing the context.\n   */\n  const injectContext = <\n    T extends ContextValue | null | undefined = ContextValue,\n  >(\n    fallback?: T,\n  ): T extends null ? ContextValue | null : ContextValue => {\n    const context = inject(injectionKey, fallback)\n    if (context)\n      return context\n\n    if (context === null)\n      return context as any\n\n    throw new Error(\n      `Injection \\`${injectionKey.toString()}\\` not found. Component must be used within ${\n        Array.isArray(providerComponentName)\n          ? `one of the following components: ${providerComponentName.join(\n            ', ',\n          )}`\n          : `\\`${providerComponentName}\\``\n      }`,\n    )\n  }\n\n  const provideContext = (contextValue: ContextValue) => {\n    provide(injectionKey, contextValue)\n    return contextValue\n  }\n\n  return [injectContext, provideContext] as const\n}\n", "export function getActiveElement(): Element | null {\r\n  let activeElement = document.activeElement\r\n  if (activeElement == null) {\r\n    return null\r\n  }\r\n\r\n  while (activeElement != null && activeElement.shadowRoot != null && activeElement.shadowRoot.activeElement != null) {\r\n    activeElement = activeElement.shadowRoot.activeElement\r\n  }\r\n\r\n  return activeElement\r\n}\r\n", "export function handleAndDispatchCustomEvent<\n  E extends CustomEvent,\n  OriginalEvent extends Event,\n>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D>\n    ? D\n    : never),\n) {\n  const target = detail.originalEvent.target\n  const event = new CustomEvent(name, {\n    bubbles: false,\n    cancelable: true,\n    detail,\n  })\n  if (handler)\n    target.addEventListener(name, handler as EventListener, { once: true })\n\n  target.dispatchEvent(event)\n}\n", "export function isNullish(value: any): value is null | undefined {\n  return value === null || value === undefined\n}\n", "import { isEqual } from 'ohash'\nimport { isNullish } from './nullish'\n\n/**\n * The function `isValueEqualOrExist` checks if a value is equal to or exists in another value or\n * array.\n * @param {T | T[] | undefined} base - It represents the base value that you want to compare with the `current` value.\n * @param {T | T[] | undefined} current - The `current` parameter represents the current value that you want to compare with the `base` value or values.\n * @returns The `isValueEqualOrExist` function returns a boolean value. It checks if the `base` value\n * is equal to the `current` value or if the `current` value exists within the `base` value. The\n * function handles cases where `base` can be a single value, an array of values, or undefined.\n */\nexport function isValueEqualOrExist<T>(base: T | T[] | undefined, current: T | T[] | undefined) {\n  if (isNullish(base))\n    return false\n  if (Array.isArray(base)) {\n    return base.some(val => isEqual(val, current))\n  }\n  else {\n    return isEqual(base, current)\n  }\n}\n", "import type { VNode } from 'vue'\nimport { Fragment } from 'vue'\n\nexport function renderSlotFragments(children?: VNode[]): VNode[] {\n  if (!children)\n    return []\n  return children.flatMap((child) => {\n    if (child.type === Fragment)\n      return renderSlotFragments(child.children as VNode[])\n\n    return [child]\n  })\n}\n", "import type { Direction } from './types'\n\ntype ArrowKeyOptions = 'horizontal' | 'vertical' | 'both'\n\ninterface ArrowNavigationOptions {\n  /**\n   * The arrow key options to allow navigation\n   *\n   * @defaultValue \"both\"\n   */\n  arrowKeyOptions?: ArrowKeyOptions\n\n  /**\n   * The attribute name to find the collection items in the parent element.\n   *\n   * @defaultValue \"data-reka-collection-item\"\n   */\n  attributeName?: string\n\n  /**\n   * The parent element where contains all the collection items, this will collect every item to be used when nav\n   * It will be ignored if attributeName is provided\n   *\n   * @defaultValue []\n   */\n  itemsArray?: HTMLElement[]\n\n  /**\n   * Allow loop navigation. If false, it will stop at the first and last element\n   *\n   * @defaultValue true\n   */\n  loop?: boolean\n\n  /**\n   * The orientation of the collection\n   *\n   * @defaultValue \"ltr\"\n   */\n  dir?: Direction\n\n  /**\n   * Prevent the scroll when navigating. This happens when the direction of the\n   * key matches the scroll direction of any ancestor scrollable elements.\n   *\n   * @defaultValue true\n   */\n  preventScroll?: boolean\n\n  /**\n   * By default all currentElement would trigger navigation. If `true`, currentElement nodeName in the ignore list will return null\n   *\n   * @defaultValue false\n   */\n  enableIgnoredElement?: boolean\n\n  /**\n   * Focus the element after navigation\n   *\n   * @defaultValue false\n   */\n  focus?: boolean\n}\n\nconst ignoredElement = ['INPUT', 'TEXTAREA']\n\n/**\n * Allow arrow navigation for every html element with data-reka-collection-item tag\n *\n * @param e               Keyboard event\n * @param currentElement  Event initiator element or any element that wants to handle the navigation\n * @param parentElement   Parent element where contains all the collection items, this will collect every item to be used when nav\n * @param options         further options\n * @returns               the navigated html element or null if none\n */\nexport function useArrowNavigation(\n  e: KeyboardEvent,\n  currentElement: HTMLElement,\n  parentElement: HTMLElement | undefined,\n  options: ArrowNavigationOptions = {},\n): HTMLElement | null {\n  if (!currentElement || (options.enableIgnoredElement && ignoredElement.includes(currentElement.nodeName)))\n    return null\n\n  const {\n    arrowKeyOptions = 'both',\n    attributeName = '[data-reka-collection-item]',\n    itemsArray = [],\n    loop = true,\n    dir = 'ltr',\n    preventScroll = true,\n    focus = false,\n  } = options\n\n  const [right, left, up, down, home, end] = [\n    e.key === 'ArrowRight',\n    e.key === 'ArrowLeft',\n    e.key === 'ArrowUp',\n    e.key === 'ArrowDown',\n    e.key === 'Home',\n    e.key === 'End',\n  ]\n  const goingVertical = up || down\n  const goingHorizontal = right || left\n  if (\n    !home\n    && !end\n    && ((!goingVertical && !goingHorizontal)\n      || (arrowKeyOptions === 'vertical' && goingHorizontal)\n      || (arrowKeyOptions === 'horizontal' && goingVertical))\n  ) {\n    return null\n  }\n\n  const allCollectionItems: HTMLElement[] = parentElement\n    ? Array.from(parentElement.querySelectorAll(attributeName))\n    : itemsArray\n\n  if (!allCollectionItems.length)\n    return null\n\n  if (preventScroll)\n    e.preventDefault()\n\n  let item: HTMLElement | null = null\n\n  if (goingHorizontal || goingVertical) {\n    const goForward = goingVertical ? down : dir === 'ltr' ? right : left\n    item = findNextFocusableElement(allCollectionItems, currentElement, {\n      goForward,\n      loop,\n    })\n  }\n  else if (home) {\n    item = allCollectionItems.at(0) || null\n  }\n  else if (end) {\n    item = allCollectionItems.at(-1) || null\n  }\n\n  if (focus)\n    item?.focus()\n\n  return item\n}\n\ninterface FindNextFocusableElementOptions {\n  /**\n   * Whether to search forwards or backwards.\n   */\n  goForward: boolean\n  /**\n   * Whether to allow looping the search. If false, it will stop at the first/last element.\n   *\n   * @default true\n   */\n  loop?: boolean\n}\n\n/**\n * Recursive function to find the next focusable element to avoid disabled elements\n *\n * @param elements Elements to navigate\n * @param currentElement Current active element\n * @param options\n * @returns next focusable element\n */\nfunction findNextFocusableElement(\n  elements: HTMLElement[],\n  currentElement: HTMLElement,\n  options: FindNextFocusableElementOptions,\n  iterations = elements.length,\n): HTMLElement | null {\n  if (--iterations === 0)\n    return null\n\n  const index = elements.indexOf(currentElement)\n  const newIndex = options.goForward ? index + 1 : index - 1\n\n  if (!options.loop && (newIndex < 0 || newIndex >= elements.length))\n    return null\n\n  const adjustedNewIndex = (newIndex + elements.length) % elements.length\n  const candidate = elements[adjustedNewIndex]\n  if (!candidate)\n    return null\n\n  const isDisabled\n    = candidate.hasAttribute('disabled')\n      && candidate.getAttribute('disabled') !== 'false'\n  if (isDisabled) {\n    return findNextFocusableElement(\n      elements,\n      candidate,\n      options,\n      iterations,\n    )\n  }\n  return candidate\n}\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction, ScrollBodyOption } from '@/shared/types'\nimport { createContext } from '@/shared'\n\ninterface ConfigProviderContextValue {\n  dir?: Ref<Direction>\n  locale?: Ref<string>\n  scrollBody?: Ref<boolean | ScrollBodyOption>\n  nonce?: Ref<string | undefined>\n  useId?: () => string\n}\n\nexport const [injectConfigProviderContext, provideConfigProviderContext]\n  = createContext<ConfigProviderContextValue>('ConfigProvider')\n\nexport interface ConfigProviderProps {\n  /**\n   * The global reading direction of your application. This will be inherited by all primitives.\n   * @defaultValue 'ltr'\n   */\n  dir?: Direction\n  /**\n   * The global locale of your application. This will be inherited by all primitives.\n   * @defaultValue 'en'\n   */\n  locale?: string\n  /**\n   * The global scroll body behavior of your application. This will be inherited by the related primitives.\n   * @type boolean | ScrollBodyOption\n   */\n  scrollBody?: boolean | ScrollBodyOption\n  /**\n   * The global `nonce` value of your application. This will be inherited by the related primitives.\n   * @type string\n   */\n  nonce?: string\n  /**\n   * The global `useId` injection as a workaround for preventing hydration issue.\n   */\n  useId?: () => string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { toRefs } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ConfigProviderProps>(), {\n  dir: 'ltr',\n  locale: 'en',\n  scrollBody: true,\n  nonce: undefined,\n  useId: undefined,\n})\n\nconst { dir, locale, scrollBody, nonce } = toRefs(props)\n\nprovideConfigProviderContext({\n  dir,\n  locale,\n  scrollBody,\n  nonce,\n  useId: props.useId,\n})\n</script>\n\n<template>\n  <slot />\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction, ScrollBodyOption } from '@/shared/types'\nimport { createContext } from '@/shared'\n\ninterface ConfigProviderContextValue {\n  dir?: Ref<Direction>\n  locale?: Ref<string>\n  scrollBody?: Ref<boolean | ScrollBodyOption>\n  nonce?: Ref<string | undefined>\n  useId?: () => string\n}\n\nexport const [injectConfigProviderContext, provideConfigProviderContext]\n  = createContext<ConfigProviderContextValue>('ConfigProvider')\n\nexport interface ConfigProviderProps {\n  /**\n   * The global reading direction of your application. This will be inherited by all primitives.\n   * @defaultValue 'ltr'\n   */\n  dir?: Direction\n  /**\n   * The global locale of your application. This will be inherited by all primitives.\n   * @defaultValue 'en'\n   */\n  locale?: string\n  /**\n   * The global scroll body behavior of your application. This will be inherited by the related primitives.\n   * @type boolean | ScrollBodyOption\n   */\n  scrollBody?: boolean | ScrollBodyOption\n  /**\n   * The global `nonce` value of your application. This will be inherited by the related primitives.\n   * @type string\n   */\n  nonce?: string\n  /**\n   * The global `useId` injection as a workaround for preventing hydration issue.\n   */\n  useId?: () => string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { toRefs } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ConfigProviderProps>(), {\n  dir: 'ltr',\n  locale: 'en',\n  scrollBody: true,\n  nonce: undefined,\n  useId: undefined,\n})\n\nconst { dir, locale, scrollBody, nonce } = toRefs(props)\n\nprovideConfigProviderContext({\n  dir,\n  locale,\n  scrollBody,\n  nonce,\n  useId: props.useId,\n})\n</script>\n\n<template>\n  <slot />\n</template>\n", "function isPlainObject(value) {\n  if (value === null || typeof value !== \"object\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  if (prototype !== null && prototype !== Object.prototype && Object.getPrototypeOf(prototype) !== null) {\n    return false;\n  }\n  if (Symbol.iterator in value) {\n    return false;\n  }\n  if (Symbol.toStringTag in value) {\n    return Object.prototype.toString.call(value) === \"[object Module]\";\n  }\n  return true;\n}\n\nfunction _defu(baseObject, defaults, namespace = \".\", merger) {\n  if (!isPlainObject(defaults)) {\n    return _defu(baseObject, {}, namespace, merger);\n  }\n  const object = Object.assign({}, defaults);\n  for (const key in baseObject) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = baseObject[key];\n    if (value === null || value === void 0) {\n      continue;\n    }\n    if (merger && merger(object, key, value, namespace)) {\n      continue;\n    }\n    if (Array.isArray(value) && Array.isArray(object[key])) {\n      object[key] = [...value, ...object[key]];\n    } else if (isPlainObject(value) && isPlainObject(object[key])) {\n      object[key] = _defu(\n        value,\n        object[key],\n        (namespace ? `${namespace}.` : \"\") + key.toString(),\n        merger\n      );\n    } else {\n      object[key] = value;\n    }\n  }\n  return object;\n}\nfunction createDefu(merger) {\n  return (...arguments_) => (\n    // eslint-disable-next-line unicorn/no-array-reduce\n    arguments_.reduce((p, c) => _defu(p, c, \"\", merger), {})\n  );\n}\nconst defu = createDefu();\nconst defuFn = createDefu((object, key, currentValue) => {\n  if (object[key] !== void 0 && typeof currentValue === \"function\") {\n    object[key] = currentValue(object[key]);\n    return true;\n  }\n});\nconst defuArrayFn = createDefu((object, key, currentValue) => {\n  if (Array.isArray(object[key]) && typeof currentValue === \"function\") {\n    object[key] = currentValue(object[key]);\n    return true;\n  }\n});\n\nexport { createDefu, defu as default, defu, defuArrayFn, defuFn };\n", "import type { Fn } from '@vueuse/shared'\nimport {\n  createSharedComposable,\n  useEventListener,\n} from '@vueuse/core'\nimport { isClient, isIOS, tryOnBeforeUnmount } from '@vueuse/shared'\nimport { defu } from 'defu'\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { injectConfigProviderContext } from '@/ConfigProvider/ConfigProvider.vue'\n\nconst useBodyLockStackCount = createSharedComposable(() => {\n  const map = ref<Map<string, boolean>>(new Map())\n  const initialOverflow = ref<string | undefined>()\n\n  const locked = computed(() => {\n    for (const value of map.value.values()) {\n      if (value)\n        return true\n    }\n    return false\n  })\n\n  const context = injectConfigProviderContext({\n    scrollBody: ref(true),\n  })\n\n  let stopTouchMoveListener: Fn | null = null\n\n  const resetBodyStyle = () => {\n    document.body.style.paddingRight = ''\n    document.body.style.marginRight = ''\n    document.body.style.pointerEvents = ''\n    document.documentElement.style.removeProperty('--scrollbar-width')\n    document.body.style.overflow = initialOverflow.value ?? ''\n    isIOS && stopTouchMoveListener?.()\n\n    initialOverflow.value = undefined\n  }\n\n  watch(locked, (val, oldVal) => {\n    if (!isClient)\n      return\n\n    if (!val) {\n      if (oldVal)\n        resetBodyStyle()\n      return\n    }\n\n    if (initialOverflow.value === undefined)\n      initialOverflow.value = document.body.style.overflow\n\n    const verticalScrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n    const defaultConfig = { padding: verticalScrollbarWidth, margin: 0 }\n\n    const config = context.scrollBody?.value\n      ? typeof context.scrollBody.value === 'object'\n        ? defu({\n            padding: context.scrollBody.value.padding === true ? verticalScrollbarWidth : context.scrollBody.value.padding,\n            margin: context.scrollBody.value.margin === true ? verticalScrollbarWidth : context.scrollBody.value.margin,\n          }, defaultConfig)\n        : defaultConfig\n      : ({ padding: 0, margin: 0 })\n\n    if (verticalScrollbarWidth > 0) {\n      document.body.style.paddingRight = typeof config.padding === 'number' ? `${config.padding}px` : String(config.padding)\n      document.body.style.marginRight = typeof config.margin === 'number' ? `${config.margin}px` : String(config.margin)\n      document.documentElement.style.setProperty('--scrollbar-width', `${verticalScrollbarWidth}px`)\n      document.body.style.overflow = 'hidden'\n    }\n\n    if (isIOS) {\n      stopTouchMoveListener = useEventListener(\n        document,\n        'touchmove',\n        (e: TouchEvent) => preventDefault(e),\n        { passive: false },\n      )\n    }\n\n    // let dismissibleLayer set previous pointerEvent first\n    nextTick(() => {\n      document.body.style.pointerEvents = 'none'\n      document.body.style.overflow = 'hidden'\n    })\n  }, { immediate: true, flush: 'sync' })\n\n  return map\n})\n\nexport function useBodyScrollLock(initialState?: boolean | undefined) {\n  const id = Math.random().toString(36).substring(2, 7) // just simple random id, need not to be cryptographically secure\n  const map = useBodyLockStackCount()\n\n  map.value.set(id, initialState ?? false)\n\n  const locked = computed({\n    get: () => map.value.get(id) ?? false,\n    set: value => map.value.set(id, value),\n  })\n\n  tryOnBeforeUnmount(() => {\n    map.value.delete(id)\n  })\n\n  return locked\n}\n\n// Adapt from https://github.com/vueuse/vueuse/blob/main/packages/core/useScrollLock/index.ts#L28C10-L28C24\nfunction checkOverflowScroll(ele: Element): boolean {\n  const style = window.getComputedStyle(ele)\n  if (\n    style.overflowX === 'scroll'\n    || style.overflowY === 'scroll'\n    || (style.overflowX === 'auto' && ele.clientWidth < ele.scrollWidth)\n    || (style.overflowY === 'auto' && ele.clientHeight < ele.scrollHeight)\n  ) {\n    return true\n  }\n  else {\n    const parent = ele.parentNode\n\n    if (!(parent instanceof Element) || parent.tagName === 'BODY')\n      return false\n\n    return checkOverflowScroll(parent)\n  }\n}\n\nfunction preventDefault(rawEvent: TouchEvent): boolean {\n  const e = rawEvent || window.event\n\n  const _target = e.target\n\n  // Do not prevent if element or parentNodes have overflow: scroll set.\n  if (_target instanceof Element && checkOverflowScroll(_target))\n    return false\n\n  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n  if (e.touches.length > 1)\n    return true\n\n  if (e.preventDefault && e.cancelable)\n    e.preventDefault()\n\n  return false\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type Mutable<T> = {\n  -readonly[P in keyof T]: T[P]\n};\n\nexport function mod(amount: number, numerator: number): number {\n  return amount - numerator * Math.floor(amount / numerator);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod, Mutable} from '../utils';\n\nconst EPOCH = 1721426; // 001/01/03 Julian C.E.\nexport function gregorianToJulianDay(era: string, year: number, month: number, day: number): number {\n  year = getExtendedYear(era, year);\n\n  let y1 = year - 1;\n  let monthOffset = -2;\n  if (month <= 2) {\n    monthOffset = 0;\n  } else if (isLeapYear(year)) {\n    monthOffset = -1;\n  }\n\n  return (\n    EPOCH -\n    1 +\n    365 * y1 +\n    Math.floor(y1 / 4) -\n    Math.floor(y1 / 100) +\n    Math.floor(y1 / 400) +\n    Math.floor((367 * month - 362) / 12 + monthOffset + day)\n  );\n}\n\nexport function isLeapYear(year: number): boolean {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nexport function getExtendedYear(era: string, year: number): number {\n  return era === 'BC' ? 1 - year : year;\n}\n\nexport function fromExtendedYear(year: number): [string, number] {\n  let era = 'AD';\n  if (year <= 0) {\n    era = 'BC';\n    year = 1 - year;\n  }\n\n  return [era, year];\n}\n\nconst daysInMonth = {\n  standard: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n  leapyear: [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n};\n\n/**\n * The Gregorian calendar is the most commonly used calendar system in the world. It supports two eras: BC, and AD.\n * Years always contain 12 months, and 365 or 366 days depending on whether it is a leap year.\n */\nexport class GregorianCalendar implements Calendar {\n  identifier: CalendarIdentifier = 'gregory';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let jd0 = jd;\n    let depoch = jd0 - EPOCH;\n    let quadricent = Math.floor(depoch / 146097);\n    let dqc = mod(depoch, 146097);\n    let cent = Math.floor(dqc / 36524);\n    let dcent = mod(dqc, 36524);\n    let quad = Math.floor(dcent / 1461);\n    let dquad = mod(dcent, 1461);\n    let yindex = Math.floor(dquad / 365);\n\n    let extendedYear = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);\n    let [era, year] = fromExtendedYear(extendedYear);\n    let yearDay = jd0 - gregorianToJulianDay(era, year, 1, 1);\n    let leapAdj = 2;\n    if (jd0 < gregorianToJulianDay(era, year, 3, 1)) {\n      leapAdj = 0;\n    } else if (isLeapYear(year)) {\n      leapAdj = 1;\n    }\n    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);\n    let day = jd0 - gregorianToJulianDay(era, year, month, 1) + 1;\n\n    return new CalendarDate(era, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return gregorianToJulianDay(date.era, date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return daysInMonth[isLeapYear(date.year) ? 'leapyear' : 'standard'][date.month - 1];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getMonthsInYear(date: AnyCalendarDate): number {\n    return 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 366 : 365;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getYearsInEra(date: AnyCalendarDate): number {\n    return 9999;\n  }\n\n  getEras(): string[] {\n    return ['BC', 'AD'];\n  }\n\n  isInverseEra(date: AnyCalendarDate): boolean {\n    return date.era === 'BC';\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>): void {\n    if (date.year <= 0) {\n      date.era = date.era === 'BC' ? 'AD' : 'BC';\n      date.year = 1 - date.year;\n    }\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Data from https://github.com/unicode-cldr/cldr-core/blob/master/supplemental/weekData.json\n// Locales starting on Sunday have been removed for compression.\nexport const weekStartData = {\n  '001': 1,\n  AD: 1,\n  AE: 6,\n  AF: 6,\n  AI: 1,\n  AL: 1,\n  AM: 1,\n  AN: 1,\n  AR: 1,\n  AT: 1,\n  AU: 1,\n  AX: 1,\n  AZ: 1,\n  BA: 1,\n  BE: 1,\n  BG: 1,\n  BH: 6,\n  BM: 1,\n  BN: 1,\n  BY: 1,\n  CH: 1,\n  CL: 1,\n  CM: 1,\n  CN: 1,\n  CR: 1,\n  CY: 1,\n  CZ: 1,\n  DE: 1,\n  DJ: 6,\n  DK: 1,\n  DZ: 6,\n  EC: 1,\n  EE: 1,\n  EG: 6,\n  ES: 1,\n  FI: 1,\n  FJ: 1,\n  FO: 1,\n  FR: 1,\n  GB: 1,\n  GE: 1,\n  GF: 1,\n  GP: 1,\n  GR: 1,\n  HR: 1,\n  HU: 1,\n  IE: 1,\n  IQ: 6,\n  IR: 6,\n  IS: 1,\n  IT: 1,\n  JO: 6,\n  KG: 1,\n  KW: 6,\n  KZ: 1,\n  LB: 1,\n  LI: 1,\n  LK: 1,\n  LT: 1,\n  LU: 1,\n  LV: 1,\n  LY: 6,\n  MC: 1,\n  MD: 1,\n  ME: 1,\n  MK: 1,\n  MN: 1,\n  MQ: 1,\n  MV: 5,\n  MY: 1,\n  NL: 1,\n  NO: 1,\n  NZ: 1,\n  OM: 6,\n  PL: 1,\n  QA: 6,\n  RE: 1,\n  RO: 1,\n  RS: 1,\n  RU: 1,\n  SD: 6,\n  SE: 1,\n  SI: 1,\n  SK: 1,\n  SM: 1,\n  SY: 6,\n  TJ: 1,\n  TM: 1,\n  TR: 1,\n  UA: 1,\n  UY: 1,\n  UZ: 1,\n  VA: 1,\n  VN: 1,\n  XK: 1\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyCalendarDate, AnyTime, Calendar} from './types';\nimport {CalendarDate, CalendarDateTime, ZonedDateTime} from './CalendarDate';\nimport {fromAbsolute, toAbsolute, toCalendar, toCalendarDate} from './conversion';\nimport {weekStartData} from './weekStartData';\n\ntype DateValue = CalendarDate | CalendarDateTime | ZonedDateTime;\n\n/** Returns whether the given dates occur on the same day, regardless of the time or calendar system. */\nexport function isSameDay(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;\n}\n\n/** Returns whether the given dates occur in the same month, using the calendar system of the first date. */\nexport function isSameMonth(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  // In the Japanese calendar, months can span multiple eras/years, so only compare the first of the month.\n  a = startOfMonth(a);\n  b = startOfMonth(b);\n  return a.era === b.era && a.year === b.year && a.month === b.month;\n}\n\n/** Returns whether the given dates occur in the same year, using the calendar system of the first date. */\nexport function isSameYear(a: DateValue, b: DateValue): boolean {\n  b = toCalendar(b, a.calendar);\n  a = startOfYear(a);\n  b = startOfYear(b);\n  return a.era === b.era && a.year === b.year;\n}\n\n/** Returns whether the given dates occur on the same day, and are of the same calendar system. */\nexport function isEqualDay(a: DateValue, b: DateValue): boolean {\n  return isEqualCalendar(a.calendar, b.calendar) && isSameDay(a, b);\n}\n\n/** Returns whether the given dates occur in the same month, and are of the same calendar system. */\nexport function isEqualMonth(a: DateValue, b: DateValue): boolean {\n  return isEqualCalendar(a.calendar, b.calendar) && isSameMonth(a, b);\n}\n\n/** Returns whether the given dates occur in the same year, and are of the same calendar system. */\nexport function isEqualYear(a: DateValue, b: DateValue): boolean {\n  return isEqualCalendar(a.calendar, b.calendar) && isSameYear(a, b);\n}\n\n/** Returns whether two calendars are the same. */\nexport function isEqualCalendar(a: Calendar, b: Calendar): boolean {\n  return a.isEqual?.(b) ?? b.isEqual?.(a) ?? a.identifier === b.identifier;\n}\n\n/** Returns whether the date is today in the given time zone. */\nexport function isToday(date: DateValue, timeZone: string): boolean {\n  return isSameDay(date, today(timeZone));\n}\n\nconst DAY_MAP = {\n  sun: 0,\n  mon: 1,\n  tue: 2,\n  wed: 3,\n  thu: 4,\n  fri: 5,\n  sat: 6\n};\n\ntype DayOfWeek = 'sun' | 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat';\n\n/**\n * Returns the day of week for the given date and locale. Days are numbered from zero to six,\n * where zero is the first day of the week in the given locale. For example, in the United States,\n * the first day of the week is Sunday, but in France it is Monday.\n */\nexport function getDayOfWeek(date: DateValue, locale: string, firstDayOfWeek?: DayOfWeek): number {\n  let julian = date.calendar.toJulianDay(date);\n\n  // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n  let weekStart = firstDayOfWeek ? DAY_MAP[firstDayOfWeek] : getWeekStart(locale);\n  let dayOfWeek = Math.ceil(julian + 1 - weekStart) % 7;\n  if (dayOfWeek < 0) {\n    dayOfWeek += 7;\n  }\n\n  return dayOfWeek;\n}\n\n/** Returns the current time in the given time zone. */\nexport function now(timeZone: string): ZonedDateTime {\n  return fromAbsolute(Date.now(), timeZone);\n}\n\n/** Returns today's date in the given time zone. */\nexport function today(timeZone: string): CalendarDate {\n  return toCalendarDate(now(timeZone));\n}\n\nexport function compareDate(a: AnyCalendarDate, b: AnyCalendarDate): number {\n  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);\n}\n\nexport function compareTime(a: AnyTime, b: AnyTime): number {\n  return timeToMs(a) - timeToMs(b);\n}\n\nfunction timeToMs(a: AnyTime): number {\n  return a.hour * 60 * 60 * 1000 + a.minute * 60 * 1000 + a.second * 1000 + a.millisecond;\n}\n\n/**\n * Returns the number of hours in the given date and time zone.\n * Usually this is 24, but it could be 23 or 25 if the date is on a daylight saving transition.\n */\nexport function getHoursInDay(a: CalendarDate, timeZone: string): number {\n  let ms = toAbsolute(a, timeZone);\n  let tomorrow = a.add({days: 1});\n  let tomorrowMs = toAbsolute(tomorrow, timeZone);\n  return (tomorrowMs - ms) / 3600000;\n}\n\nlet localTimeZone: string | null = null;\n\n/** Returns the time zone identifier for the current user. */\nexport function getLocalTimeZone(): string {\n  if (localTimeZone == null) {\n    localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  return localTimeZone!;\n}\n\n/** Sets the time zone identifier for the current user. */\nexport function setLocalTimeZone(timeZone: string): void {\n  localTimeZone = timeZone;\n}\n\n/** Resets the time zone identifier for the current user. */\nexport function resetLocalTimeZone(): void {\n  localTimeZone = null;\n}\n\n/** Returns the first date of the month for the given date. */\nexport function startOfMonth(date: ZonedDateTime): ZonedDateTime;\nexport function startOfMonth(date: CalendarDateTime): CalendarDateTime;\nexport function startOfMonth(date: CalendarDate): CalendarDate;\nexport function startOfMonth(date: DateValue): DateValue;\nexport function startOfMonth(date: DateValue): DateValue {\n  // Use `subtract` instead of `set` so we don't get constrained in an era.\n  return date.subtract({days: date.day - 1});\n}\n\n/** Returns the last date of the month for the given date. */\nexport function endOfMonth(date: ZonedDateTime): ZonedDateTime;\nexport function endOfMonth(date: CalendarDateTime): CalendarDateTime;\nexport function endOfMonth(date: CalendarDate): CalendarDate;\nexport function endOfMonth(date: DateValue): DateValue;\nexport function endOfMonth(date: DateValue): DateValue {\n  return date.add({days: date.calendar.getDaysInMonth(date) - date.day});\n}\n\n/** Returns the first day of the year for the given date. */\nexport function startOfYear(date: ZonedDateTime): ZonedDateTime;\nexport function startOfYear(date: CalendarDateTime): CalendarDateTime;\nexport function startOfYear(date: CalendarDate): CalendarDate;\nexport function startOfYear(date: DateValue): DateValue;\nexport function startOfYear(date: DateValue): DateValue {\n  return startOfMonth(date.subtract({months: date.month - 1}));\n}\n\n/** Returns the last day of the year for the given date. */\nexport function endOfYear(date: ZonedDateTime): ZonedDateTime;\nexport function endOfYear(date: CalendarDateTime): CalendarDateTime;\nexport function endOfYear(date: CalendarDate): CalendarDate;\nexport function endOfYear(date: DateValue): DateValue;\nexport function endOfYear(date: DateValue): DateValue {\n  return endOfMonth(date.add({months: date.calendar.getMonthsInYear(date) - date.month}));\n}\n\nexport function getMinimumMonthInYear(date: AnyCalendarDate): number {\n  if (date.calendar.getMinimumMonthInYear) {\n    return date.calendar.getMinimumMonthInYear(date);\n  }\n\n  return 1;\n}\n\nexport function getMinimumDayInMonth(date: AnyCalendarDate): number {\n  if (date.calendar.getMinimumDayInMonth) {\n    return date.calendar.getMinimumDayInMonth(date);\n  }\n\n  return 1;\n}\n\n/** Returns the first date of the week for the given date and locale. */\nexport function startOfWeek(date: ZonedDateTime, locale: string, firstDayOfWeek?: DayOfWeek): ZonedDateTime;\nexport function startOfWeek(date: CalendarDateTime, locale: string, firstDayOfWeek?: DayOfWeek): CalendarDateTime;\nexport function startOfWeek(date: CalendarDate, locale: string, firstDayOfWeek?: DayOfWeek): CalendarDate;\nexport function startOfWeek(date: DateValue, locale: string, firstDayOfWeek?: DayOfWeek): DateValue;\nexport function startOfWeek(date: DateValue, locale: string, firstDayOfWeek?: DayOfWeek): DateValue {\n  let dayOfWeek = getDayOfWeek(date, locale, firstDayOfWeek);\n  return date.subtract({days: dayOfWeek});\n}\n\n/** Returns the last date of the week for the given date and locale. */\nexport function endOfWeek(date: ZonedDateTime, locale: string, firstDayOfWeek?: DayOfWeek): ZonedDateTime;\nexport function endOfWeek(date: CalendarDateTime, locale: string, firstDayOfWeek?: DayOfWeek): CalendarDateTime;\nexport function endOfWeek(date: CalendarDate, locale: string, firstDayOfWeek?: DayOfWeek): CalendarDate;\nexport function endOfWeek(date: DateValue, locale: string, firstDayOfWeek?: DayOfWeek): DateValue;\nexport function endOfWeek(date: DateValue, locale: string, firstDayOfWeek?: DayOfWeek): DateValue {\n  return startOfWeek(date, locale, firstDayOfWeek).add({days: 6});\n}\n\nconst cachedRegions = new Map<string, string>();\nconst cachedWeekInfo = new Map<string, {firstDay: number}>();\n\nfunction getRegion(locale: string): string | undefined {\n  // If the Intl.Locale API is available, use it to get the region for the locale.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // Constructing an Intl.Locale is expensive, so cache the result.\n    let region = cachedRegions.get(locale);\n    if (!region) {\n      // @ts-ignore\n      region = new Intl.Locale(locale).maximize().region;\n      if (region) {\n        cachedRegions.set(locale, region);\n      }\n    }\n    return region;\n  }\n\n  // If not, just try splitting the string.\n  // If the second part of the locale string is 'u',\n  // then this is a unicode extension, so ignore it.\n  // Otherwise, it should be the region.\n  let part = locale.split('-')[1];\n  return part === 'u' ? undefined : part;\n}\n\nfunction getWeekStart(locale: string): number {\n  // TODO: use Intl.Locale for this once browsers support the weekInfo property\n  // https://github.com/tc39/proposal-intl-locale-info\n  let weekInfo = cachedWeekInfo.get(locale);\n  if (!weekInfo) {\n    if (Intl.Locale) {\n      // @ts-ignore\n      let localeInst = new Intl.Locale(locale);\n      if ('getWeekInfo' in localeInst) {\n        // @ts-expect-error\n        weekInfo = localeInst.getWeekInfo();\n        if (weekInfo) {\n          cachedWeekInfo.set(locale, weekInfo);\n          return weekInfo.firstDay;\n        }\n      }\n    }\n    let region = getRegion(locale);\n    if (locale.includes('-fw-')) {\n      // pull the value for the attribute fw from strings such as en-US-u-ca-iso8601-fw-tue or en-US-u-ca-iso8601-fw-mon-nu-thai\n      // where the fw attribute could be followed by another unicode locale extension or not\n      let day = locale.split('-fw-')[1].split('-')[0];\n      if (day === 'mon') {\n        weekInfo = {firstDay: 1};\n      } else if (day === 'tue') {\n        weekInfo = {firstDay: 2};\n      } else if (day === 'wed') {\n        weekInfo = {firstDay: 3};\n      } else if (day === 'thu') {\n        weekInfo = {firstDay: 4};\n      } else if (day === 'fri') {\n        weekInfo = {firstDay: 5};\n      } else if (day === 'sat') {\n        weekInfo = {firstDay: 6};\n      } else {\n        weekInfo = {firstDay: 0};\n      }\n    } else if (locale.includes('-ca-iso8601')) {\n      weekInfo = {firstDay: 1};\n    } else {\n      weekInfo = {firstDay: region ? weekStartData[region] || 0 : 0};\n    }\n    cachedWeekInfo.set(locale, weekInfo);\n  }\n\n  return weekInfo.firstDay;\n}\n\n/** Returns the number of weeks in the given month and locale. */\nexport function getWeeksInMonth(date: DateValue, locale: string, firstDayOfWeek?: DayOfWeek): number {\n  let days = date.calendar.getDaysInMonth(date);\n  return Math.ceil((getDayOfWeek(startOfMonth(date), locale, firstDayOfWeek) + days) / 7);\n}\n\n/** Returns the lesser of the two provider dates. */\nexport function minDate<A extends DateValue, B extends DateValue>(a?: A | null, b?: B | null): A | B | null | undefined {\n  if (a && b) {\n    return a.compare(b) <= 0 ? a : b;\n  }\n\n  return a || b;\n}\n\n/** Returns the greater of the two provider dates. */\nexport function maxDate<A extends DateValue, B extends DateValue>(a?: A | null, b?: B | null): A | B | null | undefined {\n  if (a && b) {\n    return a.compare(b) >= 0 ? a : b;\n  }\n\n  return a || b;\n}\n\nconst WEEKEND_DATA = {\n  AF: [4, 5],\n  AE: [5, 6],\n  BH: [5, 6],\n  DZ: [5, 6],\n  EG: [5, 6],\n  IL: [5, 6],\n  IQ: [5, 6],\n  IR: [5, 5],\n  JO: [5, 6],\n  KW: [5, 6],\n  LY: [5, 6],\n  OM: [5, 6],\n  QA: [5, 6],\n  SA: [5, 6],\n  SD: [5, 6],\n  SY: [5, 6],\n  YE: [5, 6]\n};\n\n/** Returns whether the given date is on a weekend in the given locale. */\nexport function isWeekend(date: DateValue, locale: string): boolean {\n  let julian = date.calendar.toJulianDay(date);\n\n  // If julian is negative, then julian % 7 will be negative, so we adjust\n  // accordingly.  Julian day 0 is Monday.\n  let dayOfWeek = Math.ceil(julian + 1) % 7;\n  if (dayOfWeek < 0) {\n    dayOfWeek += 7;\n  }\n\n  let region = getRegion(locale);\n  // Use Intl.Locale for this once weekInfo is supported.\n  // https://github.com/tc39/proposal-intl-locale-info\n  let [start, end] = WEEKEND_DATA[region!] || [6, 0];\n  return dayOfWeek === start || dayOfWeek === end;\n}\n\n/** Returns whether the given date is on a weekday in the given locale. */\nexport function isWeekday(date: DateValue, locale: string): boolean {\n  return !isWeekend(date, locale);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from the TC39 Temporal proposal.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, AnyDateTime, AnyTime, Calendar, DateFields, Disambiguation, TimeFields} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {constrain} from './manipulation';\nimport {getExtendedYear, GregorianCalendar} from './calendars/GregorianCalendar';\nimport {getLocalTimeZone, isEqualCalendar} from './queries';\nimport {Mutable} from './utils';\n\nexport function epochFromDate(date: AnyDateTime): number {\n  date = toCalendar(date, new GregorianCalendar());\n  let year = getExtendedYear(date.era, date.year);\n  return epochFromParts(year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);\n}\n\nfunction epochFromParts(year: number, month: number, day: number, hour: number, minute: number, second: number, millisecond: number): number {\n  // Note: Date.UTC() interprets one and two-digit years as being in the\n  // 20th century, so don't use it\n  let date = new Date();\n  date.setUTCHours(hour, minute, second, millisecond);\n  date.setUTCFullYear(year, month - 1, day);\n  return date.getTime();\n}\n\nexport function getTimeZoneOffset(ms: number, timeZone: string): number {\n  // Fast path for UTC.\n  if (timeZone === 'UTC') {\n    return 0;\n  }\n\n  // Fast path: for local timezone after 1970, use native Date.\n  if (ms > 0 && timeZone === getLocalTimeZone()) {\n    return new Date(ms).getTimezoneOffset() * -60 * 1000;\n  }\n\n  let {year, month, day, hour, minute, second} = getTimeZoneParts(ms, timeZone);\n  let utc = epochFromParts(year, month, day, hour, minute, second, 0);\n  return utc - Math.floor(ms / 1000) * 1000;\n}\n\nconst formattersByTimeZone = new Map<string, Intl.DateTimeFormat>();\n\nfunction getTimeZoneParts(ms: number, timeZone: string) {\n  let formatter = formattersByTimeZone.get(timeZone);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat('en-US', {\n      timeZone,\n      hour12: false,\n      era: 'short',\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    });\n\n    formattersByTimeZone.set(timeZone, formatter);\n  }\n\n  let parts = formatter.formatToParts(new Date(ms));\n  let namedParts: {[name: string]: string} = {};\n  for (let part of parts) {\n    if (part.type !== 'literal') {\n      namedParts[part.type] = part.value;\n    }\n  }\n\n\n  return {\n    // Firefox returns B instead of BC... https://bugzilla.mozilla.org/show_bug.cgi?id=1752253\n    year: namedParts.era === 'BC' || namedParts.era === 'B' ? -namedParts.year + 1 : +namedParts.year,\n    month: +namedParts.month,\n    day: +namedParts.day,\n    hour: namedParts.hour === '24' ? 0 : +namedParts.hour, // bugs.chromium.org/p/chromium/issues/detail?id=1045791\n    minute: +namedParts.minute,\n    second: +namedParts.second\n  };\n}\n\nconst DAYMILLIS = 86400000;\n\nexport function possibleAbsolutes(date: CalendarDateTime, timeZone: string): number[] {\n  let ms = epochFromDate(date);\n  let earlier = ms - getTimeZoneOffset(ms - DAYMILLIS, timeZone);\n  let later = ms - getTimeZoneOffset(ms + DAYMILLIS, timeZone);\n  return getValidWallTimes(date, timeZone, earlier, later);\n}\n\nfunction getValidWallTimes(date: CalendarDateTime, timeZone: string, earlier: number, later: number): number[] {\n  let found = earlier === later ? [earlier] : [earlier, later];\n  return found.filter(absolute => isValidWallTime(date, timeZone, absolute));\n}\n\nfunction isValidWallTime(date: CalendarDateTime, timeZone: string, absolute: number) {\n  let parts = getTimeZoneParts(absolute, timeZone);\n  return date.year === parts.year\n    && date.month === parts.month\n    && date.day === parts.day\n    && date.hour === parts.hour\n    && date.minute === parts.minute\n    && date.second === parts.second;\n}\n\nexport function toAbsolute(date: CalendarDate | CalendarDateTime, timeZone: string, disambiguation: Disambiguation = 'compatible'): number {\n  let dateTime = toCalendarDateTime(date);\n\n  // Fast path: if the time zone is UTC, use native Date.\n  if (timeZone === 'UTC') {\n    return epochFromDate(dateTime);\n  }\n\n  // Fast path: if the time zone is the local timezone and disambiguation is compatible, use native Date.\n  if (timeZone === getLocalTimeZone() && disambiguation === 'compatible') {\n    dateTime = toCalendar(dateTime, new GregorianCalendar());\n\n    // Don't use Date constructor here because two-digit years are interpreted in the 20th century.\n    let date = new Date();\n    let year = getExtendedYear(dateTime.era, dateTime.year);\n    date.setFullYear(year, dateTime.month - 1, dateTime.day);\n    date.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n    return date.getTime();\n  }\n\n  let ms = epochFromDate(dateTime);\n  let offsetBefore = getTimeZoneOffset(ms - DAYMILLIS, timeZone);\n  let offsetAfter = getTimeZoneOffset(ms + DAYMILLIS, timeZone);\n  let valid = getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);\n\n  if (valid.length === 1) {\n    return valid[0];\n  }\n\n  if (valid.length > 1) {\n    switch (disambiguation) {\n      // 'compatible' means 'earlier' for \"fall back\" transitions\n      case 'compatible':\n      case 'earlier':\n        return valid[0];\n      case 'later':\n        return valid[valid.length - 1];\n      case 'reject':\n        throw new RangeError('Multiple possible absolute times found');\n    }\n  }\n\n  switch (disambiguation) {\n    case 'earlier':\n      return Math.min(ms - offsetBefore, ms - offsetAfter);\n    // 'compatible' means 'later' for \"spring forward\" transitions\n    case 'compatible':\n    case 'later':\n      return Math.max(ms - offsetBefore, ms - offsetAfter);\n    case 'reject':\n      throw new RangeError('No such absolute time found');\n  }\n}\n\nexport function toDate(dateTime: CalendarDate | CalendarDateTime, timeZone: string, disambiguation: Disambiguation = 'compatible'): Date {\n  return new Date(toAbsolute(dateTime, timeZone, disambiguation));\n}\n\n/**\n * Takes a Unix epoch (milliseconds since 1970) and converts it to the provided time zone.\n */\nexport function fromAbsolute(ms: number, timeZone: string): ZonedDateTime {\n  let offset = getTimeZoneOffset(ms, timeZone);\n  let date = new Date(ms + offset);\n  let year = date.getUTCFullYear();\n  let month = date.getUTCMonth() + 1;\n  let day = date.getUTCDate();\n  let hour = date.getUTCHours();\n  let minute = date.getUTCMinutes();\n  let second = date.getUTCSeconds();\n  let millisecond = date.getUTCMilliseconds();\n\n  return new ZonedDateTime(year < 1 ? 'BC' : 'AD', year < 1 ? -year + 1 : year, month, day, timeZone, offset, hour, minute, second, millisecond);\n}\n\n/**\n * Takes a `Date` object and converts it to the provided time zone.\n */\nexport function fromDate(date: Date, timeZone: string): ZonedDateTime {\n  return fromAbsolute(date.getTime(), timeZone);\n}\n\nexport function fromDateToLocal(date: Date): ZonedDateTime {\n  return fromDate(date, getLocalTimeZone());\n}\n\n/** Converts a value with date components such as a `CalendarDateTime` or `ZonedDateTime` into a `CalendarDate`. */\nexport function toCalendarDate(dateTime: AnyCalendarDate): CalendarDate {\n  return new CalendarDate(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);\n}\n\nexport function toDateFields(date: AnyCalendarDate): DateFields {\n  return {\n    era: date.era,\n    year: date.year,\n    month: date.month,\n    day: date.day\n  };\n}\n\nexport function toTimeFields(date: AnyTime): TimeFields {\n  return {\n    hour: date.hour,\n    minute: date.minute,\n    second: date.second,\n    millisecond: date.millisecond\n  };\n}\n\n/**\n * Converts a date value to a `CalendarDateTime`. An optional `Time` value can be passed to set the time\n * of the resulting value, otherwise it will default to midnight.\n */\nexport function toCalendarDateTime(date: CalendarDate | CalendarDateTime | ZonedDateTime, time?: AnyTime): CalendarDateTime {\n  let hour = 0, minute = 0, second = 0, millisecond = 0;\n  if ('timeZone' in date) {\n    ({hour, minute, second, millisecond} = date);\n  } else if ('hour' in date && !time) {\n    return date;\n  }\n\n  if (time) {\n    ({hour, minute, second, millisecond} = time);\n  }\n\n  return new CalendarDateTime(\n    date.calendar,\n    date.era,\n    date.year,\n    date.month,\n    date.day,\n    hour,\n    minute,\n    second,\n    millisecond\n  );\n}\n\n/** Extracts the time components from a value containing a date and time. */\nexport function toTime(dateTime: CalendarDateTime | ZonedDateTime): Time {\n  return new Time(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);\n}\n\n/** Converts a date from one calendar system to another. */\nexport function toCalendar<T extends AnyCalendarDate>(date: T, calendar: Calendar): T {\n  if (isEqualCalendar(date.calendar, calendar)) {\n    return date;\n  }\n\n  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));\n  let copy: Mutable<T> = date.copy();\n  copy.calendar = calendar;\n  copy.era = calendarDate.era;\n  copy.year = calendarDate.year;\n  copy.month = calendarDate.month;\n  copy.day = calendarDate.day;\n  constrain(copy);\n  return copy;\n}\n\n/**\n * Converts a date value to a `ZonedDateTime` in the provided time zone. The `disambiguation` option can be set\n * to control how values that fall on daylight saving time changes are interpreted.\n */\nexport function toZoned(date: CalendarDate | CalendarDateTime | ZonedDateTime, timeZone: string, disambiguation?: Disambiguation): ZonedDateTime {\n  if (date instanceof ZonedDateTime) {\n    if (date.timeZone === timeZone) {\n      return date;\n    }\n\n    return toTimeZone(date, timeZone);\n  }\n\n  let ms = toAbsolute(date, timeZone, disambiguation);\n  return fromAbsolute(ms, timeZone);\n}\n\nexport function zonedToDate(date: ZonedDateTime): Date {\n  let ms = epochFromDate(date) - date.offset;\n  return new Date(ms);\n}\n\n/** Converts a `ZonedDateTime` from one time zone to another. */\nexport function toTimeZone(date: ZonedDateTime, timeZone: string): ZonedDateTime {\n  let ms = epochFromDate(date) - date.offset;\n  return toCalendar(fromAbsolute(ms, timeZone), date.calendar);\n}\n\n/** Converts the given `ZonedDateTime` into the user's local time zone. */\nexport function toLocalTimeZone(date: ZonedDateTime): ZonedDateTime {\n  return toTimeZone(date, getLocalTimeZone());\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyCalendarDate, AnyDateTime, AnyTime, CycleOptions, CycleTimeOptions, DateDuration, DateField, DateFields, DateTimeDuration, Disambiguation, TimeDuration, TimeField, TimeFields} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {epochFromDate, fromAbsolute, toAbsolute, toCalendar, toCalendarDateTime} from './conversion';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nconst ONE_HOUR = 3600000;\n\nexport function add(date: CalendarDateTime, duration: DateTimeDuration): CalendarDateTime;\nexport function add(date: CalendarDate, duration: DateDuration): CalendarDate;\nexport function add(date: CalendarDate | CalendarDateTime, duration: DateTimeDuration): CalendarDate | CalendarDateTime;\nexport function add(date: CalendarDate | CalendarDateTime, duration: DateTimeDuration): Mutable<AnyCalendarDate | AnyDateTime> {\n  let mutableDate: Mutable<AnyCalendarDate | AnyDateTime> = date.copy();\n  let days = 'hour' in mutableDate ? addTimeFields(mutableDate, duration) : 0;\n\n  addYears(mutableDate, duration.years || 0);\n  if (mutableDate.calendar.balanceYearMonth) {\n    mutableDate.calendar.balanceYearMonth(mutableDate, date);\n  }\n\n  mutableDate.month += duration.months || 0;\n\n  balanceYearMonth(mutableDate);\n  constrainMonthDay(mutableDate);\n\n  mutableDate.day += (duration.weeks || 0) * 7;\n  mutableDate.day += duration.days || 0;\n  mutableDate.day += days;\n\n  balanceDay(mutableDate);\n\n  if (mutableDate.calendar.balanceDate) {\n    mutableDate.calendar.balanceDate(mutableDate);\n  }\n\n  // Constrain in case adding ended up with a date outside the valid range for the calendar system.\n  // The behavior here is slightly different than when constraining in the `set` function in that\n  // we adjust smaller fields to their minimum/maximum values rather than constraining each field\n  // individually. This matches the general behavior of `add` vs `set` regarding how fields are balanced.\n  if (mutableDate.year < 1) {\n    mutableDate.year = 1;\n    mutableDate.month = 1;\n    mutableDate.day = 1;\n  }\n\n  let maxYear = mutableDate.calendar.getYearsInEra(mutableDate);\n  if (mutableDate.year > maxYear) {\n    let isInverseEra = mutableDate.calendar.isInverseEra?.(mutableDate);\n    mutableDate.year = maxYear;\n    mutableDate.month = isInverseEra ? 1 : mutableDate.calendar.getMonthsInYear(mutableDate);\n    mutableDate.day = isInverseEra ? 1 : mutableDate.calendar.getDaysInMonth(mutableDate);\n  }\n\n  if (mutableDate.month < 1) {\n    mutableDate.month = 1;\n    mutableDate.day = 1;\n  }\n\n  let maxMonth = mutableDate.calendar.getMonthsInYear(mutableDate);\n  if (mutableDate.month > maxMonth) {\n    mutableDate.month = maxMonth;\n    mutableDate.day = mutableDate.calendar.getDaysInMonth(mutableDate);\n  }\n\n  mutableDate.day = Math.max(1, Math.min(mutableDate.calendar.getDaysInMonth(mutableDate), mutableDate.day));\n  return mutableDate;\n}\n\nfunction addYears(date: Mutable<AnyCalendarDate>, years: number) {\n  if (date.calendar.isInverseEra?.(date)) {\n    years = -years;\n  }\n\n  date.year += years;\n}\n\nfunction balanceYearMonth(date: Mutable<AnyCalendarDate>) {\n  while (date.month < 1) {\n    addYears(date, -1);\n    date.month += date.calendar.getMonthsInYear(date);\n  }\n\n  let monthsInYear = 0;\n  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {\n    date.month -= monthsInYear;\n    addYears(date, 1);\n  }\n}\n\nfunction balanceDay(date: Mutable<AnyCalendarDate>) {\n  while (date.day < 1) {\n    date.month--;\n    balanceYearMonth(date);\n    date.day += date.calendar.getDaysInMonth(date);\n  }\n\n  while (date.day > date.calendar.getDaysInMonth(date)) {\n    date.day -= date.calendar.getDaysInMonth(date);\n    date.month++;\n    balanceYearMonth(date);\n  }\n}\n\nfunction constrainMonthDay(date: Mutable<AnyCalendarDate>) {\n  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));\n  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));\n}\n\nexport function constrain(date: Mutable<AnyCalendarDate>): void {\n  if (date.calendar.constrainDate) {\n    date.calendar.constrainDate(date);\n  }\n\n  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));\n  constrainMonthDay(date);\n}\n\nexport function invertDuration(duration: DateTimeDuration): DateTimeDuration {\n  let inverseDuration = {};\n  for (let key in duration) {\n    if (typeof duration[key] === 'number') {\n      inverseDuration[key] = -duration[key];\n    }\n  }\n\n  return inverseDuration;\n}\n\nexport function subtract(date: CalendarDateTime, duration: DateTimeDuration): CalendarDateTime;\nexport function subtract(date: CalendarDate, duration: DateDuration): CalendarDate;\nexport function subtract(date: CalendarDate | CalendarDateTime, duration: DateTimeDuration): CalendarDate | CalendarDateTime {\n  return add(date, invertDuration(duration));\n}\n\nexport function set(date: CalendarDateTime, fields: DateFields): CalendarDateTime;\nexport function set(date: CalendarDate, fields: DateFields): CalendarDate;\nexport function set(date: CalendarDate | CalendarDateTime, fields: DateFields): Mutable<AnyCalendarDate> {\n  let mutableDate: Mutable<AnyCalendarDate> = date.copy();\n\n  if (fields.era != null) {\n    mutableDate.era = fields.era;\n  }\n\n  if (fields.year != null) {\n    mutableDate.year = fields.year;\n  }\n\n  if (fields.month != null) {\n    mutableDate.month = fields.month;\n  }\n\n  if (fields.day != null) {\n    mutableDate.day = fields.day;\n  }\n\n  constrain(mutableDate);\n  return mutableDate;\n}\n\nexport function setTime(value: CalendarDateTime, fields: TimeFields): CalendarDateTime;\nexport function setTime(value: Time, fields: TimeFields): Time;\nexport function setTime(value: Time | CalendarDateTime, fields: TimeFields): Mutable<Time | CalendarDateTime> {\n  let mutableValue: Mutable<Time | CalendarDateTime> = value.copy();\n\n  if (fields.hour != null) {\n    mutableValue.hour = fields.hour;\n  }\n\n  if (fields.minute != null) {\n    mutableValue.minute = fields.minute;\n  }\n\n  if (fields.second != null) {\n    mutableValue.second = fields.second;\n  }\n\n  if (fields.millisecond != null) {\n    mutableValue.millisecond = fields.millisecond;\n  }\n\n  constrainTime(mutableValue);\n  return mutableValue;\n}\n\nfunction balanceTime(time: Mutable<AnyTime>): number {\n  time.second += Math.floor(time.millisecond / 1000);\n  time.millisecond = nonNegativeMod(time.millisecond, 1000);\n\n  time.minute += Math.floor(time.second / 60);\n  time.second = nonNegativeMod(time.second, 60);\n\n  time.hour += Math.floor(time.minute / 60);\n  time.minute = nonNegativeMod(time.minute, 60);\n\n  let days = Math.floor(time.hour / 24);\n  time.hour = nonNegativeMod(time.hour, 24);\n\n  return days;\n}\n\nexport function constrainTime(time: Mutable<AnyTime>): void {\n  time.millisecond = Math.max(0, Math.min(time.millisecond, 1000));\n  time.second = Math.max(0, Math.min(time.second, 59));\n  time.minute = Math.max(0, Math.min(time.minute, 59));\n  time.hour = Math.max(0, Math.min(time.hour, 23));\n}\n\nfunction nonNegativeMod(a: number, b: number) {\n  let result = a % b;\n  if (result < 0) {\n    result += b;\n  }\n  return result;\n}\n\nfunction addTimeFields(time: Mutable<AnyTime>, duration: TimeDuration): number {\n  time.hour += duration.hours || 0;\n  time.minute += duration.minutes || 0;\n  time.second += duration.seconds || 0;\n  time.millisecond += duration.milliseconds || 0;\n  return balanceTime(time);\n}\n\nexport function addTime(time: Time, duration: TimeDuration): Time {\n  let res = time.copy();\n  addTimeFields(res, duration);\n  return res;\n}\n\nexport function subtractTime(time: Time, duration: TimeDuration): Time {\n  return addTime(time, invertDuration(duration));\n}\n\nexport function cycleDate(value: CalendarDateTime, field: DateField, amount: number, options?: CycleOptions): CalendarDateTime;\nexport function cycleDate(value: CalendarDate, field: DateField, amount: number, options?: CycleOptions): CalendarDate;\nexport function cycleDate(value: CalendarDate | CalendarDateTime, field: DateField, amount: number, options?: CycleOptions): Mutable<CalendarDate | CalendarDateTime> {\n  let mutable: Mutable<CalendarDate | CalendarDateTime> = value.copy();\n\n  switch (field) {\n    case 'era': {\n      let eras = value.calendar.getEras();\n      let eraIndex = eras.indexOf(value.era);\n      if (eraIndex < 0) {\n        throw new Error('Invalid era: ' + value.era);\n      }\n      eraIndex = cycleValue(eraIndex, amount, 0, eras.length - 1, options?.round);\n      mutable.era = eras[eraIndex];\n\n      // Constrain the year and other fields within the era, so the era doesn't change when we balance below.\n      constrain(mutable);\n      break;\n    }\n    case 'year': {\n      if (mutable.calendar.isInverseEra?.(mutable)) {\n        amount = -amount;\n      }\n\n      // The year field should not cycle within the era as that can cause weird behavior affecting other fields.\n      // We need to also allow values < 1 so that decrementing goes to the previous era. If we get -Infinity back\n      // we know we wrapped around after reaching 9999 (the maximum), so set the year back to 1.\n      mutable.year = cycleValue(value.year, amount, -Infinity, 9999, options?.round);\n      if (mutable.year === -Infinity) {\n        mutable.year = 1;\n      }\n\n      if (mutable.calendar.balanceYearMonth) {\n        mutable.calendar.balanceYearMonth(mutable, value);\n      }\n      break;\n    }\n    case 'month':\n      mutable.month = cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options?.round);\n      break;\n    case 'day':\n      mutable.day = cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options?.round);\n      break;\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  if (value.calendar.balanceDate) {\n    value.calendar.balanceDate(mutable);\n  }\n\n  constrain(mutable);\n  return mutable;\n}\n\nexport function cycleTime(value: CalendarDateTime, field: TimeField, amount: number, options?: CycleTimeOptions): CalendarDateTime;\nexport function cycleTime(value: Time, field: TimeField, amount: number, options?: CycleTimeOptions): Time;\nexport function cycleTime(value: Time | CalendarDateTime, field: TimeField, amount: number, options?: CycleTimeOptions): Mutable<Time | CalendarDateTime> {\n  let mutable: Mutable<Time | CalendarDateTime> = value.copy();\n\n  switch (field) {\n    case 'hour': {\n      let hours = value.hour;\n      let min = 0;\n      let max = 23;\n      if (options?.hourCycle === 12) {\n        let isPM = hours >= 12;\n        min = isPM ? 12 : 0;\n        max = isPM ? 23 : 11;\n      }\n      mutable.hour = cycleValue(hours, amount, min, max, options?.round);\n      break;\n    }\n    case 'minute':\n      mutable.minute = cycleValue(value.minute, amount, 0, 59, options?.round);\n      break;\n    case 'second':\n      mutable.second = cycleValue(value.second, amount, 0, 59, options?.round);\n      break;\n    case 'millisecond':\n      mutable.millisecond = cycleValue(value.millisecond, amount, 0, 999, options?.round);\n      break;\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n\n  return mutable;\n}\n\nfunction cycleValue(value: number, amount: number, min: number, max: number, round = false) {\n  if (round) {\n    value += Math.sign(amount);\n\n    if (value < min) {\n      value = max;\n    }\n\n    let div = Math.abs(amount);\n    if (amount > 0) {\n      value = Math.ceil(value / div) * div;\n    } else {\n      value = Math.floor(value / div) * div;\n    }\n\n    if (value > max) {\n      value = min;\n    }\n  } else {\n    value += amount;\n    if (value < min) {\n      value = max - (min - value - 1);\n    } else if (value > max) {\n      value = min + (value - max - 1);\n    }\n  }\n\n  return value;\n}\n\nexport function addZoned(dateTime: ZonedDateTime, duration: DateTimeDuration): ZonedDateTime {\n  let ms: number;\n  if ((duration.years != null && duration.years !== 0) || (duration.months != null && duration.months !== 0) || (duration.weeks != null && duration.weeks !== 0) || (duration.days != null && duration.days !== 0)) {\n    let res = add(toCalendarDateTime(dateTime), {\n      years: duration.years,\n      months: duration.months,\n      weeks: duration.weeks,\n      days: duration.days\n    });\n\n    // Changing the date may change the timezone offset, so we need to recompute\n    // using the 'compatible' disambiguation.\n    ms = toAbsolute(res, dateTime.timeZone);\n  } else {\n    // Otherwise, preserve the offset of the original date.\n    ms = epochFromDate(dateTime) - dateTime.offset;\n  }\n\n  // Perform time manipulation in milliseconds rather than on the original time fields to account for DST.\n  // For example, adding one hour during a DST transition may result in the hour field staying the same or\n  // skipping an hour. This results in the offset field changing value instead of the specified field.\n  ms += duration.milliseconds || 0;\n  ms += (duration.seconds || 0) * 1000;\n  ms += (duration.minutes || 0) * 60 * 1000;\n  ms += (duration.hours || 0) * 60 * 60 * 1000;\n\n  let res = fromAbsolute(ms, dateTime.timeZone);\n  return toCalendar(res, dateTime.calendar);\n}\n\nexport function subtractZoned(dateTime: ZonedDateTime, duration: DateTimeDuration): ZonedDateTime {\n  return addZoned(dateTime, invertDuration(duration));\n}\n\nexport function cycleZoned(dateTime: ZonedDateTime, field: DateField | TimeField, amount: number, options?: CycleTimeOptions): ZonedDateTime {\n  // For date fields, we want the time to remain consistent and the UTC offset to potentially change to account for DST changes.\n  // For time fields, we want the time to change by the amount given. This may result in the hour field staying the same, but the UTC\n  // offset changing in the case of a backward DST transition, or skipping an hour in the case of a forward DST transition.\n  switch (field) {\n    case 'hour': {\n      let min = 0;\n      let max = 23;\n      if (options?.hourCycle === 12) {\n        let isPM = dateTime.hour >= 12;\n        min = isPM ? 12 : 0;\n        max = isPM ? 23 : 11;\n      }\n\n      // The minimum and maximum hour may be affected by daylight saving time.\n      // For example, it might jump forward at midnight, and skip 1am.\n      // Or it might end at midnight and repeat the 11pm hour. To handle this, we get\n      // the possible absolute times for the min and max, and find the maximum range\n      // that is within the current day.\n      let plainDateTime = toCalendarDateTime(dateTime);\n      let minDate = toCalendar(setTime(plainDateTime, {hour: min}), new GregorianCalendar());\n      let minAbsolute = [toAbsolute(minDate, dateTime.timeZone, 'earlier'), toAbsolute(minDate, dateTime.timeZone, 'later')]\n        .filter(ms => fromAbsolute(ms, dateTime.timeZone).day === minDate.day)[0];\n\n      let maxDate = toCalendar(setTime(plainDateTime, {hour: max}), new GregorianCalendar());\n      let maxAbsolute = [toAbsolute(maxDate, dateTime.timeZone, 'earlier'), toAbsolute(maxDate, dateTime.timeZone, 'later')]\n        .filter(ms => fromAbsolute(ms, dateTime.timeZone).day === maxDate.day).pop()!;\n\n      // Since hours may repeat, we need to operate on the absolute time in milliseconds.\n      // This is done in hours from the Unix epoch so that cycleValue works correctly,\n      // and then converted back to milliseconds.\n      let ms = epochFromDate(dateTime) - dateTime.offset;\n      let hours = Math.floor(ms / ONE_HOUR);\n      let remainder = ms % ONE_HOUR;\n      ms = cycleValue(\n        hours,\n        amount,\n        Math.floor(minAbsolute / ONE_HOUR),\n        Math.floor(maxAbsolute / ONE_HOUR),\n        options?.round\n      ) * ONE_HOUR + remainder;\n\n      // Now compute the new timezone offset, and convert the absolute time back to local time.\n      return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n    }\n    case 'minute':\n    case 'second':\n    case 'millisecond':\n      // @ts-ignore\n      return cycleTime(dateTime, field, amount, options);\n    case 'era':\n    case 'year':\n    case 'month':\n    case 'day': {\n      let res = cycleDate(toCalendarDateTime(dateTime), field, amount, options);\n      let ms = toAbsolute(res, dateTime.timeZone);\n      return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n    }\n    default:\n      throw new Error('Unsupported field ' + field);\n  }\n}\n\nexport function setZoned(dateTime: ZonedDateTime, fields: DateFields & TimeFields, disambiguation?: Disambiguation): ZonedDateTime {\n  // Set the date/time fields, and recompute the UTC offset to account for DST changes.\n  // We also need to validate by converting back to a local time in case hours are skipped during forward DST transitions.\n  let plainDateTime = toCalendarDateTime(dateTime);\n  let res = setTime(set(plainDateTime, fields), fields);\n\n  // If the resulting plain date time values are equal, return the original time.\n  // We don't want to change the offset when setting the time to the same value.\n  if (res.compare(plainDateTime) === 0) {\n    return dateTime;\n  }\n\n  let ms = toAbsolute(res, dateTime.timeZone, disambiguation);\n  return toCalendar(fromAbsolute(ms, dateTime.timeZone), dateTime.calendar);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AnyDateTime, DateTimeDuration, Disambiguation} from './types';\nimport {CalendarDate, CalendarDateTime, Time, ZonedDateTime} from './CalendarDate';\nimport {epochFromDate, fromAbsolute, possibleAbsolutes, toAbsolute, toCalendar, toCalendarDateTime, toTimeZone} from './conversion';\nimport {getLocalTimeZone} from './queries';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {Mutable} from './utils';\n\nconst TIME_RE = /^(\\d{2})(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst DATE_RE = /^([+-]\\d{6}|\\d{4})-(\\d{2})-(\\d{2})$/;\nconst DATE_TIME_RE = /^([+-]\\d{6}|\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?$/;\nconst ZONED_DATE_TIME_RE = /^([+-]\\d{6}|\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:([+-]\\d{2})(?::?(\\d{2}))?(?::?(\\d{2}))?)?\\[(.*?)\\]$/;\nconst ABSOLUTE_RE = /^([+-]\\d{6}|\\d{4})-(\\d{2})-(\\d{2})(?:T(\\d{2}))?(?::(\\d{2}))?(?::(\\d{2}))?(\\.\\d+)?(?:(?:([+-]\\d{2})(?::?(\\d{2}))?)|Z)$/;\nconst DATE_TIME_DURATION_RE =\n    /^((?<negative>-)|\\+)?P((?<years>\\d*)Y)?((?<months>\\d*)M)?((?<weeks>\\d*)W)?((?<days>\\d*)D)?((?<time>T)((?<hours>\\d*[.,]?\\d{1,9})H)?((?<minutes>\\d*[.,]?\\d{1,9})M)?((?<seconds>\\d*[.,]?\\d{1,9})S)?)?$/;\nconst requiredDurationTimeGroups = ['hours', 'minutes', 'seconds'];\nconst requiredDurationGroups = ['years', 'months', 'weeks', 'days', ...requiredDurationTimeGroups];\n\n/** Parses an ISO 8601 time string. */\nexport function parseTime(value: string): Time {\n  let m = value.match(TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 time string: ' + value);\n  }\n\n  return new Time(\n    parseNumber(m[1], 0, 23),\n    m[2] ? parseNumber(m[2], 0, 59) : 0,\n    m[3] ? parseNumber(m[3], 0, 59) : 0,\n    m[4] ? parseNumber(m[4], 0, Infinity) * 1000 : 0\n  );\n}\n\n/** Parses an ISO 8601 date string, with no time components. */\nexport function parseDate(value: string): CalendarDate {\n  let m = value.match(DATE_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date string: ' + value);\n  }\n\n  let date: Mutable<CalendarDate> = new CalendarDate(\n    parseNumber(m[1], 0, 9999),\n    parseNumber(m[2], 1, 12),\n    1\n  );\n\n  date.day = parseNumber(m[3], 1, date.calendar.getDaysInMonth(date));\n  return date as CalendarDate;\n}\n\n/** Parses an ISO 8601 date and time string, with no time zone. */\nexport function parseDateTime(value: string): CalendarDateTime {\n  let m = value.match(DATE_TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let year = parseNumber(m[1], -9999, 9999);\n  let era = year < 1 ? 'BC' : 'AD';\n\n  let date: Mutable<CalendarDateTime> = new CalendarDateTime(\n    era,\n    year < 1 ? -year + 1 : year,\n    parseNumber(m[2], 1, 12),\n    1,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n  return date as CalendarDateTime;\n}\n\n/**\n * Parses an ISO 8601 date and time string with a time zone extension and optional UTC offset\n * (e.g. \"2021-11-07T00:45[America/Los_Angeles]\" or \"2021-11-07T00:45-07:00[America/Los_Angeles]\").\n * Ambiguous times due to daylight saving time transitions are resolved according to the `disambiguation`\n * parameter.\n */\nexport function parseZonedDateTime(value: string, disambiguation?: Disambiguation): ZonedDateTime {\n  let m = value.match(ZONED_DATE_TIME_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let year = parseNumber(m[1], -9999, 9999);\n  let era = year < 1 ? 'BC' : 'AD';\n\n  let date: Mutable<ZonedDateTime> = new ZonedDateTime(\n    era,\n    year < 1 ? -year + 1 : year,\n    parseNumber(m[2], 1, 12),\n    1,\n    m[11],\n    0,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n\n  let plainDateTime = toCalendarDateTime(date as ZonedDateTime);\n\n  let ms: number;\n  if (m[8]) {\n    let hourOffset = parseNumber(m[8], -23, 23);\n    date.offset = Math.sign(hourOffset) * (Math.abs(hourOffset) * 60 * 60 * 1000 + parseNumber(m[9] ?? '0', 0, 59) * 60 * 1000 + parseNumber(m[10] ?? '0', 0, 59) * 1000);\n    ms = epochFromDate(date as ZonedDateTime) - date.offset;\n\n    // Validate offset against parsed date.\n    let absolutes = possibleAbsolutes(plainDateTime, date.timeZone);\n    if (!absolutes.includes(ms)) {\n      throw new Error(`Offset ${offsetToString(date.offset)} is invalid for ${dateTimeToString(date)} in ${date.timeZone}`);\n    }\n  } else {\n    // Convert to absolute and back to fix invalid times due to DST.\n    ms = toAbsolute(toCalendarDateTime(plainDateTime), date.timeZone, disambiguation);\n  }\n\n  return fromAbsolute(ms, date.timeZone);\n}\n\n/**\n * Parses an ISO 8601 date and time string with a UTC offset (e.g. \"2021-11-07T07:45:00Z\"\n * or \"2021-11-07T07:45:00-07:00\"). The result is converted to the provided time zone.\n */\nexport function parseAbsolute(value: string, timeZone: string): ZonedDateTime {\n  let m = value.match(ABSOLUTE_RE);\n  if (!m) {\n    throw new Error('Invalid ISO 8601 date time string: ' + value);\n  }\n\n  let year = parseNumber(m[1], -9999, 9999);\n  let era = year < 1 ? 'BC' : 'AD';\n\n  let date: Mutable<ZonedDateTime> = new ZonedDateTime(\n    era,\n    year < 1 ? -year + 1 : year,\n    parseNumber(m[2], 1, 12),\n    1,\n    timeZone,\n    0,\n    m[4] ? parseNumber(m[4], 0, 23) : 0,\n    m[5] ? parseNumber(m[5], 0, 59) : 0,\n    m[6] ? parseNumber(m[6], 0, 59) : 0,\n    m[7] ? parseNumber(m[7], 0, Infinity) * 1000 : 0\n  );\n\n  date.day = parseNumber(m[3], 0, date.calendar.getDaysInMonth(date));\n\n  if (m[8]) {\n    date.offset = parseNumber(m[8], -23, 23) * 60 * 60 * 1000 + parseNumber(m[9] ?? '0', 0, 59) * 60 * 1000;\n  }\n\n  return toTimeZone(date as ZonedDateTime, timeZone);\n}\n\n/**\n * Parses an ISO 8601 date and time string with a UTC offset (e.g. \"2021-11-07T07:45:00Z\"\n * or \"2021-11-07T07:45:00-07:00\"). The result is converted to the user's local time zone.\n */\nexport function parseAbsoluteToLocal(value: string): ZonedDateTime {\n  return parseAbsolute(value, getLocalTimeZone());\n}\n\nfunction parseNumber(value: string, min: number, max: number) {\n  let val = Number(value);\n  if (val < min || val > max) {\n    throw new RangeError(`Value out of range: ${min} <= ${val} <= ${max}`);\n  }\n\n  return val;\n}\n\nexport function timeToString(time: Time): string {\n  return `${String(time.hour).padStart(2, '0')}:${String(time.minute).padStart(2, '0')}:${String(time.second).padStart(2, '0')}${time.millisecond ? String(time.millisecond / 1000).slice(1) : ''}`;\n}\n\nexport function dateToString(date: CalendarDate): string {\n  let gregorianDate = toCalendar(date, new GregorianCalendar());\n  let year: string;\n  if (gregorianDate.era === 'BC') {\n    year = gregorianDate.year === 1\n      ? '0000'\n      : '-' + String(Math.abs(1 - gregorianDate.year)).padStart(6, '00');\n  } else {\n    year = String(gregorianDate.year).padStart(4, '0');\n  }\n  return `${year}-${String(gregorianDate.month).padStart(2, '0')}-${String(gregorianDate.day).padStart(2, '0')}`;\n}\n\nexport function dateTimeToString(date: AnyDateTime): string {\n  // @ts-ignore\n  return `${dateToString(date)}T${timeToString(date)}`;\n}\n\nfunction offsetToString(offset: number) {\n  let sign = Math.sign(offset) < 0 ? '-' : '+';\n  offset = Math.abs(offset);\n  let offsetHours = Math.floor(offset / (60 * 60 * 1000));\n  let offsetMinutes = Math.floor((offset % (60 * 60 * 1000)) / (60 * 1000));\n  let offsetSeconds = Math.floor((offset % (60 * 60 * 1000)) % (60 * 1000) / 1000);\n  let stringOffset = `${sign}${String(offsetHours).padStart(2, '0')}:${String(offsetMinutes).padStart(2, '0')}`;\n  if (offsetSeconds !== 0) {\n    stringOffset += `:${String(offsetSeconds).padStart(2, '0')}`;\n  }\n\n  return stringOffset;\n}\n\nexport function zonedDateTimeToString(date: ZonedDateTime): string {\n  return `${dateTimeToString(date)}${offsetToString(date.offset)}[${date.timeZone}]`;\n}\n\n/**\n * Parses an ISO 8601 duration string (e.g. \"P3Y6M6W4DT12H30M5S\").\n * @param value An ISO 8601 duration string.\n * @returns A DateTimeDuration object.\n */\nexport function parseDuration(value: string): Required<DateTimeDuration> {\n  const match = value.match(DATE_TIME_DURATION_RE);\n\n  if (!match) {\n    throw new Error(`Invalid ISO 8601 Duration string: ${value}`);\n  }\n\n  const parseDurationGroup = (\n    group: string | undefined,\n    isNegative: boolean\n  ): number => {\n    if (!group) {\n      return 0;\n    }\n    try {\n      const sign = isNegative ? -1 : 1;\n      return sign * Number(group.replace(',', '.'));\n    } catch {\n      throw new Error(`Invalid ISO 8601 Duration string: ${value}`);\n    }\n  };\n\n  const isNegative = !!match.groups?.negative;\n\n  const hasRequiredGroups = requiredDurationGroups.some(group => match.groups?.[group]);\n\n  if (!hasRequiredGroups) {\n    throw new Error(`Invalid ISO 8601 Duration string: ${value}`);\n  }\n\n  const durationStringIncludesTime = match.groups?.time;\n\n  if (durationStringIncludesTime) {\n    const hasRequiredDurationTimeGroups = requiredDurationTimeGroups.some(group => match.groups?.[group]);\n    if (!hasRequiredDurationTimeGroups) {\n      throw new Error(`Invalid ISO 8601 Duration string: ${value}`);\n    }\n  }\n\n  const duration: Mutable<DateTimeDuration> = {\n    years: parseDurationGroup(match.groups?.years, isNegative),\n    months: parseDurationGroup(match.groups?.months, isNegative),\n    weeks: parseDurationGroup(match.groups?.weeks, isNegative),\n    days: parseDurationGroup(match.groups?.days, isNegative),\n    hours: parseDurationGroup(match.groups?.hours, isNegative),\n    minutes: parseDurationGroup(match.groups?.minutes, isNegative),\n    seconds: parseDurationGroup(match.groups?.seconds, isNegative)\n  };\n\n  if (duration.hours !== undefined && ((duration.hours % 1) !== 0) && (duration.minutes || duration.seconds)) {\n    throw new Error(`Invalid ISO 8601 Duration string: ${value} - only the smallest unit can be fractional`);\n  }\n\n  if (duration.minutes !== undefined && ((duration.minutes % 1) !== 0) && duration.seconds) {\n    throw new Error(`Invalid ISO 8601 Duration string: ${value} - only the smallest unit can be fractional`);\n  }\n\n  return duration as Required<DateTimeDuration>;\n}\n", "function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n", "import { _ as _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nfunction _class_private_field_init(obj, privateMap, value) {\n    _check_private_redeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nexport { _class_private_field_init as _ };\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {add, addTime, addZoned, constrain, constrainTime, cycleDate, cycleTime, cycleZoned, set, setTime, setZoned, subtract, subtractTime, subtractZoned} from './manipulation';\nimport {AnyCalendarDate, AnyTime, Calendar, CycleOptions, CycleTimeOptions, DateDuration, DateField, DateFields, DateTimeDuration, Disambiguation, TimeDuration, TimeField, TimeFields} from './types';\nimport {compareDate, compareTime} from './queries';\nimport {dateTimeToString, dateToString, timeToString, zonedDateTimeToString} from './string';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {toCalendarDateTime, toDate, toZoned, zonedToDate} from './conversion';\n\nfunction shiftArgs(args: any[]) {\n  let calendar: Calendar = typeof args[0] === 'object'\n    ? args.shift()\n    : new GregorianCalendar();\n\n  let era: string;\n  if (typeof args[0] === 'string') {\n    era = args.shift();\n  } else {\n    let eras = calendar.getEras();\n    era = eras[eras.length - 1];\n  }\n\n  let year = args.shift();\n  let month = args.shift();\n  let day = args.shift();\n\n  return [calendar, era, year, month, day];\n}\n\n/** A CalendarDate represents a date without any time components in a specific calendar system. */\nexport class CalendarDate {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  // i.e. a ZonedDateTime should not be be passable to a parameter that expects CalendarDate.\n  // If that behavior is desired, use the AnyCalendarDate interface instead.\n  // @ts-ignore\n  #type;\n  /** The calendar system associated with this date, e.g. Gregorian. */\n  public readonly calendar: Calendar;\n  /** The calendar era for this date, e.g. \"BC\" or \"AD\". */\n  public readonly era: string;\n  /** The year of this date within the era. */\n  public readonly year: number;\n  /**\n   * The month number within the year. Note that some calendar systems such as Hebrew\n   * may have a variable number of months per year. Therefore, month numbers may not\n   * always correspond to the same month names in different years.\n   */\n  public readonly month: number;\n  /** The day number within the month. */\n  public readonly day: number;\n\n  constructor(year: number, month: number, day: number);\n  constructor(era: string, year: number, month: number, day: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n\n    constrain(this);\n  }\n\n  /** Returns a copy of this date. */\n  copy(): CalendarDate {\n    if (this.era) {\n      return new CalendarDate(this.calendar, this.era, this.year, this.month, this.day);\n    } else {\n      return new CalendarDate(this.calendar, this.year, this.month, this.day);\n    }\n  }\n\n  /** Returns a new `CalendarDate` with the given duration added to it. */\n  add(duration: DateDuration): CalendarDate {\n    return add(this, duration);\n  }\n\n  /** Returns a new `CalendarDate` with the given duration subtracted from it. */\n  subtract(duration: DateDuration): CalendarDate {\n    return subtract(this, duration);\n  }\n\n  /** Returns a new `CalendarDate` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n  set(fields: DateFields): CalendarDate {\n    return set(this, fields);\n  }\n\n  /**\n   * Returns a new `CalendarDate` with the given field adjusted by a specified amount.\n   * When the resulting value reaches the limits of the field, it wraps around.\n   */\n  cycle(field: DateField, amount: number, options?: CycleOptions): CalendarDate {\n    return cycleDate(this, field, amount, options);\n  }\n\n  /** Converts the date to a native JavaScript Date object, with the time set to midnight in the given time zone. */\n  toDate(timeZone: string): Date {\n    return toDate(this, timeZone);\n  }\n\n  /** Converts the date to an ISO 8601 formatted string. */\n  toString(): string {\n    return dateToString(this);\n  }\n\n  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n  compare(b: AnyCalendarDate): number {\n    return compareDate(this, b);\n  }\n}\n\n/** A Time represents a clock time without any date components. */\nexport class Time {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  // @ts-ignore\n  #type;\n  /** The hour, numbered from 0 to 23. */\n  public readonly hour: number;\n  /** The minute in the hour. */\n  public readonly minute: number;\n  /** The second in the minute. */\n  public readonly second: number;\n  /** The millisecond in the second. */\n  public readonly millisecond: number;\n\n  constructor(\n    hour: number = 0,\n    minute: number = 0,\n    second: number = 0,\n    millisecond: number = 0\n  ) {\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond;\n    constrainTime(this);\n  }\n\n  /** Returns a copy of this time. */\n  copy(): Time {\n    return new Time(this.hour, this.minute, this.second, this.millisecond);\n  }\n\n  /** Returns a new `Time` with the given duration added to it. */\n  add(duration: TimeDuration): Time {\n    return addTime(this, duration);\n  }\n\n  /** Returns a new `Time` with the given duration subtracted from it. */\n  subtract(duration: TimeDuration): Time {\n    return subtractTime(this, duration);\n  }\n\n  /** Returns a new `Time` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n  set(fields: TimeFields): Time {\n    return setTime(this, fields);\n  }\n\n  /**\n   * Returns a new `Time` with the given field adjusted by a specified amount.\n   * When the resulting value reaches the limits of the field, it wraps around.\n   */\n  cycle(field: TimeField, amount: number, options?: CycleTimeOptions): Time {\n    return cycleTime(this, field, amount, options);\n  }\n\n  /** Converts the time to an ISO 8601 formatted string. */\n  toString(): string {\n    return timeToString(this);\n  }\n\n  /** Compares this time with another. A negative result indicates that this time is before the given one, and a positive time indicates that it is after. */\n  compare(b: AnyTime): number {\n    return compareTime(this, b);\n  }\n}\n\n/** A CalendarDateTime represents a date and time without a time zone, in a specific calendar system. */\nexport class CalendarDateTime {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  // @ts-ignore\n  #type;\n  /** The calendar system associated with this date, e.g. Gregorian. */\n  public readonly calendar: Calendar;\n  /** The calendar era for this date, e.g. \"BC\" or \"AD\". */\n  public readonly era: string;\n  /** The year of this date within the era. */\n  public readonly year: number;\n  /**\n   * The month number within the year. Note that some calendar systems such as Hebrew\n   * may have a variable number of months per year. Therefore, month numbers may not\n   * always correspond to the same month names in different years.\n   */\n  public readonly month: number;\n  /** The day number within the month. */\n  public readonly day: number;\n  /** The hour in the day, numbered from 0 to 23. */\n  public readonly hour: number;\n  /** The minute in the hour. */\n  public readonly minute: number;\n  /** The second in the minute. */\n  public readonly second: number;\n  /** The millisecond in the second. */\n  public readonly millisecond: number;\n\n  constructor(year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(era: string, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n\n    constrain(this);\n  }\n\n  /** Returns a copy of this date. */\n  copy(): CalendarDateTime {\n    if (this.era) {\n      return new CalendarDateTime(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    } else {\n      return new CalendarDateTime(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\n    }\n  }\n\n  /** Returns a new `CalendarDateTime` with the given duration added to it. */\n  add(duration: DateTimeDuration): CalendarDateTime {\n    return add(this, duration);\n  }\n\n  /** Returns a new `CalendarDateTime` with the given duration subtracted from it. */\n  subtract(duration: DateTimeDuration): CalendarDateTime {\n    return subtract(this, duration);\n  }\n\n  /** Returns a new `CalendarDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n  set(fields: DateFields & TimeFields): CalendarDateTime {\n    return set(setTime(this, fields), fields);\n  }\n\n  /**\n   * Returns a new `CalendarDateTime` with the given field adjusted by a specified amount.\n   * When the resulting value reaches the limits of the field, it wraps around.\n   */\n  cycle(field: DateField | TimeField, amount: number, options?: CycleTimeOptions): CalendarDateTime {\n    switch (field) {\n      case 'era':\n      case 'year':\n      case 'month':\n      case 'day':\n        return cycleDate(this, field, amount, options);\n      default:\n        return cycleTime(this, field, amount, options);\n    }\n  }\n\n  /** Converts the date to a native JavaScript Date object in the given time zone. */\n  toDate(timeZone: string, disambiguation?: Disambiguation): Date {\n    return toDate(this, timeZone, disambiguation);\n  }\n\n  /** Converts the date to an ISO 8601 formatted string. */\n  toString(): string {\n    return dateTimeToString(this);\n  }\n\n  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n  compare(b: CalendarDate | CalendarDateTime | ZonedDateTime): number {\n    let res = compareDate(this, b);\n    if (res === 0) {\n      return compareTime(this, toCalendarDateTime(b));\n    }\n\n    return res;\n  }\n}\n\n/** A ZonedDateTime represents a date and time in a specific time zone and calendar system. */\nexport class ZonedDateTime {\n  // This prevents TypeScript from allowing other types with the same fields to match.\n  // @ts-ignore\n  #type;\n  /** The calendar system associated with this date, e.g. Gregorian. */\n  public readonly calendar: Calendar;\n  /** The calendar era for this date, e.g. \"BC\" or \"AD\". */\n  public readonly era: string;\n  /** The year of this date within the era. */\n  public readonly year: number;\n  /**\n   * The month number within the year. Note that some calendar systems such as Hebrew\n   * may have a variable number of months per year. Therefore, month numbers may not\n   * always correspond to the same month names in different years.\n   */\n  public readonly month: number;\n  /** The day number within the month. */\n  public readonly day: number;\n  /** The hour in the day, numbered from 0 to 23. */\n  public readonly hour: number;\n  /** The minute in the hour. */\n  public readonly minute: number;\n  /** The second in the minute. */\n  public readonly second: number;\n  /** The millisecond in the second. */\n  public readonly millisecond: number;\n  /** The IANA time zone identifier that this date and time is represented in. */\n  public readonly timeZone: string;\n  /** The UTC offset for this time, in milliseconds. */\n  public readonly offset: number;\n\n  constructor(year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(era: string, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(calendar: Calendar, era: string, year: number, month: number, day: number, timeZone: string, offset: number, hour?: number, minute?: number, second?: number, millisecond?: number);\n  constructor(...args: any[]) {\n    let [calendar, era, year, month, day] = shiftArgs(args);\n    let timeZone = args.shift();\n    let offset = args.shift();\n    this.calendar = calendar;\n    this.era = era;\n    this.year = year;\n    this.month = month;\n    this.day = day;\n    this.timeZone = timeZone;\n    this.offset = offset;\n    this.hour = args.shift() || 0;\n    this.minute = args.shift() || 0;\n    this.second = args.shift() || 0;\n    this.millisecond = args.shift() || 0;\n\n    constrain(this);\n  }\n\n  /** Returns a copy of this date. */\n  copy(): ZonedDateTime {\n    if (this.era) {\n      return new ZonedDateTime(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    } else {\n      return new ZonedDateTime(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);\n    }\n  }\n\n  /** Returns a new `ZonedDateTime` with the given duration added to it. */\n  add(duration: DateTimeDuration): ZonedDateTime {\n    return addZoned(this, duration);\n  }\n\n  /** Returns a new `ZonedDateTime` with the given duration subtracted from it. */\n  subtract(duration: DateTimeDuration): ZonedDateTime {\n    return subtractZoned(this, duration);\n  }\n\n  /** Returns a new `ZonedDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */\n  set(fields: DateFields & TimeFields, disambiguation?: Disambiguation): ZonedDateTime {\n    return setZoned(this, fields, disambiguation);\n  }\n\n  /**\n   * Returns a new `ZonedDateTime` with the given field adjusted by a specified amount.\n   * When the resulting value reaches the limits of the field, it wraps around.\n   */\n  cycle(field: DateField | TimeField, amount: number, options?: CycleTimeOptions): ZonedDateTime {\n    return cycleZoned(this, field, amount, options);\n  }\n\n  /** Converts the date to a native JavaScript Date object. */\n  toDate(): Date {\n    return zonedToDate(this);\n  }\n\n   /** Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier. */\n  toString(): string {\n    return zonedDateTimeToString(this);\n  }\n\n   /** Converts the date to an ISO 8601 formatted string in UTC. */\n  toAbsoluteString(): string {\n    return this.toDate().toISOString();\n  }\n\n  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */\n  compare(b: CalendarDate | CalendarDateTime | ZonedDateTime): number {\n    // TODO: Is this a bad idea??\n    return this.toDate().getTime() - toZoned(b, this.timeZone).toDate().getTime();\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from the TC39 Temporal proposal.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst ERA_START_DATES = [[1868, 9, 8], [1912, 7, 30], [1926, 12, 25], [1989, 1, 8], [2019, 5, 1]];\nconst ERA_END_DATES = [[1912, 7, 29], [1926, 12, 24], [1989, 1, 7], [2019, 4, 30]];\nconst ERA_ADDENDS = [1867, 1911, 1925, 1988, 2018];\nconst ERA_NAMES = ['meiji', 'taisho', 'showa', 'heisei', 'reiwa'];\n\nfunction findEraFromGregorianDate(date: AnyCalendarDate) {\n  const idx = ERA_START_DATES.findIndex(([year, month, day]) => {\n    if (date.year < year) {\n      return true;\n    }\n\n    if (date.year === year && date.month < month) {\n      return true;\n    }\n\n    if (date.year === year && date.month === month && date.day < day) {\n      return true;\n    }\n\n    return false;\n  });\n\n  if (idx === -1) {\n    return ERA_START_DATES.length - 1;\n  }\n\n  if (idx === 0) {\n    return 0;\n  }\n\n  return idx - 1;\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let eraAddend = ERA_ADDENDS[ERA_NAMES.indexOf(date.era)];\n  if (!eraAddend) {\n    throw new Error('Unknown era: ' + date.era);\n  }\n\n  return new CalendarDate(\n    date.year + eraAddend,\n    date.month,\n    date.day\n  );\n}\n\n/**\n * The Japanese calendar is based on the Gregorian calendar, but with eras for the reign of each Japanese emperor.\n * Whenever a new emperor ascends to the throne, a new era begins and the year starts again from 1.\n * Note that eras before 1868 (Gregorian) are not currently supported by this implementation.\n */\nexport class JapaneseCalendar extends GregorianCalendar {\n  identifier: CalendarIdentifier = 'japanese';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd);\n    let era = findEraFromGregorianDate(date);\n\n    return new CalendarDate(\n      this,\n      ERA_NAMES[era],\n      date.year - ERA_ADDENDS[era],\n      date.month,\n      date.day\n    );\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>): void {\n    let gregorianDate = toGregorian(date);\n    let era = findEraFromGregorianDate(gregorianDate);\n\n    if (ERA_NAMES[era] !== date.era) {\n      date.era = ERA_NAMES[era];\n      date.year = gregorianDate.year - ERA_ADDENDS[era];\n    }\n\n    // Constrain in case we went before the first supported era.\n    this.constrainDate(date);\n  }\n\n  constrainDate(date: Mutable<AnyCalendarDate>): void {\n    let idx = ERA_NAMES.indexOf(date.era);\n    let end = ERA_END_DATES[idx];\n    if (end != null) {\n      let [endYear, endMonth, endDay] = end;\n\n      // Constrain the year to the maximum possible value in the era.\n      // Then constrain the month and day fields within that.\n      let maxYear = endYear - ERA_ADDENDS[idx];\n      date.year = Math.max(1, Math.min(maxYear, date.year));\n      if (date.year === maxYear) {\n        date.month = Math.min(endMonth, date.month);\n\n        if (date.month === endMonth) {\n          date.day = Math.min(endDay, date.day);\n        }\n      }\n    }\n\n    if (date.year === 1 && idx >= 0) {\n      let [, startMonth, startDay] = ERA_START_DATES[idx];\n      date.month = Math.max(startMonth, date.month);\n\n      if (date.month === startMonth) {\n        date.day = Math.max(startDay, date.day);\n      }\n    }\n  }\n\n  getEras(): string[] {\n    return ERA_NAMES;\n  }\n\n  getYearsInEra(date: AnyCalendarDate): number {\n    // Get the number of years in the era, taking into account the date's month and day fields.\n    let era = ERA_NAMES.indexOf(date.era);\n    let cur = ERA_START_DATES[era];\n    let next = ERA_START_DATES[era + 1];\n    if (next == null) {\n      // 9999 gregorian is the maximum year allowed.\n      return 9999 - cur[0] + 1;\n    }\n\n    let years = next[0] - cur[0];\n\n    if (date.month < next[1] || (date.month === next[1] && date.day < next[2])) {\n      years++;\n    }\n\n    return years;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return super.getDaysInMonth(toGregorian(date));\n  }\n\n  getMinimumMonthInYear(date: AnyCalendarDate): number {\n    let start = getMinimums(date);\n    return start ? start[1] : 1;\n  }\n\n  getMinimumDayInMonth(date: AnyCalendarDate): number {\n    let start = getMinimums(date);\n    return start && date.month === start[1] ? start[2] : 1;\n  }\n}\n\nfunction getMinimums(date: AnyCalendarDate) {\n  if (date.year === 1) {\n    let idx = ERA_NAMES.indexOf(date.era);\n    return ERA_START_DATES[idx];\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {fromExtendedYear, getExtendedYear, GregorianCalendar} from './GregorianCalendar';\n\nconst BUDDHIST_ERA_START = -543;\n\n/**\n * The Buddhist calendar is the same as the Gregorian calendar, but counts years\n * starting from the birth of Buddha in 543 BC (Gregorian). It supports only one\n * era, identified as 'BE'.\n */\nexport class BuddhistCalendar extends GregorianCalendar {\n  identifier: CalendarIdentifier = 'buddhist';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let gregorianDate = super.fromJulianDay(jd);\n    let year = getExtendedYear(gregorianDate.era, gregorianDate.year);\n    return new CalendarDate(\n      this,\n      year - BUDDHIST_ERA_START,\n      gregorianDate.month,\n      gregorianDate.day\n    );\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  getEras(): string[] {\n    return ['BE'];\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return super.getDaysInMonth(toGregorian(date));\n  }\n\n  balanceDate(): void {}\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let [era, year] = fromExtendedYear(date.year + BUDDHIST_ERA_START);\n  return new CalendarDate(\n    era,\n    year,\n    date.month,\n    date.day\n  );\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {fromExtendedYear, getExtendedYear, GregorianCalendar} from './GregorianCalendar';\nimport {Mutable} from '../utils';\n\nconst TAIWAN_ERA_START = 1911;\n\nfunction gregorianYear(date: AnyCalendarDate) {\n  return date.era === 'minguo'\n    ? date.year + TAIWAN_ERA_START\n    : 1 - date.year + TAIWAN_ERA_START;\n}\n\nfunction gregorianToTaiwan(year: number): [string, number] {\n  let y = year - TAIWAN_ERA_START;\n  if (y > 0) {\n    return ['minguo', y];\n  } else {\n    return ['before_minguo', 1 - y];\n  }\n}\n\n/**\n * The Taiwanese calendar is the same as the Gregorian calendar, but years\n * are numbered starting from 1912 (Gregorian). Two eras are supported:\n * 'before_minguo' and 'minguo'.\n */\nexport class TaiwanCalendar extends GregorianCalendar {\n  identifier: CalendarIdentifier = 'roc'; // Republic of China\n\n  fromJulianDay(jd: number): CalendarDate {\n    let date = super.fromJulianDay(jd);\n    let extendedYear = getExtendedYear(date.era, date.year);\n    let [era, year] = gregorianToTaiwan(extendedYear);\n    return new CalendarDate(this, era, year, date.month, date.day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return super.toJulianDay(toGregorian(date));\n  }\n\n  getEras(): string[] {\n    return ['before_minguo', 'minguo'];\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>): void {\n    let [era, year] = gregorianToTaiwan(gregorianYear(date));\n    date.era = era;\n    date.year = year;\n  }\n\n  isInverseEra(date: AnyCalendarDate): boolean {\n    return date.era === 'before_minguo';\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return super.getDaysInMonth(toGregorian(date));\n  }\n\n  getYearsInEra(date: AnyCalendarDate): number {\n    return date.era === 'before_minguo' ? 9999 : 9999 - TAIWAN_ERA_START;\n  }\n}\n\nfunction toGregorian(date: AnyCalendarDate) {\n  let [era, year] = fromExtendedYear(gregorianYear(date));\n  return new CalendarDate(\n    era,\n    year,\n    date.month,\n    date.day\n  );\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod} from '../utils';\n\nconst PERSIAN_EPOCH = 1948320;\n\n// Number of days from the start of the year to the start of each month.\nconst MONTH_START = [\n  0, // Farvardin\n  31, // Ordibehesht\n  62, // Khordad\n  93, // Tir\n  124, // Mordad\n  155, // Shahrivar\n  186, // Mehr\n  216, // Aban\n  246, // Azar\n  276, // Dey\n  306, // Bahman\n  336  // Esfand\n];\n\n/**\n * The Persian calendar is the main calendar used in Iran and Afghanistan. It has 12 months\n * in each year, the first 6 of which have 31 days, and the next 5 have 30 days. The 12th month\n * has either 29 or 30 days depending on whether it is a leap year. The Persian year starts\n * around the March equinox.\n */\nexport class PersianCalendar implements Calendar {\n  identifier: CalendarIdentifier = 'persian';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let daysSinceEpoch = jd - PERSIAN_EPOCH;\n    let year = 1 + Math.floor((33 * daysSinceEpoch + 3) / 12053);\n    let farvardin1 = 365 * (year - 1) + Math.floor((8 * year + 21) / 33);\n    let dayOfYear = daysSinceEpoch - farvardin1;\n    let month = dayOfYear < 216\n      ? Math.floor(dayOfYear / 31)\n      : Math.floor((dayOfYear - 6) / 30);\n    let day = dayOfYear - MONTH_START[month] + 1;\n    return new CalendarDate(this, year, month + 1, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    let jd = PERSIAN_EPOCH - 1 + 365 * (date.year - 1) + Math.floor((8 * date.year + 21) / 33);\n    jd += MONTH_START[date.month - 1];\n    jd += date.day;\n    return jd;\n  }\n\n  getMonthsInYear(): number {\n    return 12;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.month <= 6) {\n      return 31;\n    }\n\n    if (date.month <= 11) {\n      return 30;\n    }\n\n    let isLeapYear = mod(25 * date.year + 11, 33) < 8;\n    return isLeapYear ? 30 : 29;\n  }\n\n  getEras(): string[] {\n    return ['AP'];\n  }\n\n  getYearsInEra(): number {\n    // 9378-10-10 persian is 9999-12-31 gregorian.\n    // Round down to 9377 to set the maximum full year.\n    return 9377;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {fromExtendedYear, GregorianCalendar, gregorianToJulianDay, isLeapYear} from './GregorianCalendar';\n\n// Starts in 78 AD,\nconst INDIAN_ERA_START = 78;\n\n// The Indian year starts 80 days later than the Gregorian year.\nconst INDIAN_YEAR_START = 80;\n\n/**\n * The Indian National Calendar is similar to the Gregorian calendar, but with\n * years numbered since the Saka era in 78 AD (Gregorian). There are 12 months\n * in each year, with either 30 or 31 days. Only one era identifier is supported: 'saka'.\n */\nexport class IndianCalendar extends GregorianCalendar {\n  identifier: CalendarIdentifier = 'indian';\n\n  fromJulianDay(jd: number): CalendarDate {\n    // Gregorian date for Julian day\n    let date = super.fromJulianDay(jd);\n\n    // Year in Saka era\n    let indianYear = date.year - INDIAN_ERA_START;\n\n    // Day number in Gregorian year (starting from 0)\n    let yDay = jd - gregorianToJulianDay(date.era, date.year, 1, 1);\n\n    let leapMonth: number;\n    if (yDay < INDIAN_YEAR_START) {\n      //  Day is at the end of the preceding Saka year\n      indianYear--;\n\n      // Days in leapMonth this year, previous Gregorian year\n      leapMonth = isLeapYear(date.year - 1) ? 31 : 30;\n      yDay += leapMonth + (31 * 5) + (30 * 3) + 10;\n    } else {\n      // Days in leapMonth this year\n      leapMonth = isLeapYear(date.year) ? 31 : 30;\n      yDay -= INDIAN_YEAR_START;\n    }\n\n    let indianMonth: number;\n    let indianDay: number;\n    if (yDay < leapMonth) {\n      indianMonth = 1;\n      indianDay = yDay + 1;\n    } else {\n      let mDay = yDay - leapMonth;\n      if (mDay < (31 * 5)) {\n        indianMonth = Math.floor(mDay / 31) + 2;\n        indianDay = (mDay % 31) + 1;\n      } else {\n        mDay -= 31 * 5;\n        indianMonth = Math.floor(mDay / 30) + 7;\n        indianDay = (mDay % 30) + 1;\n      }\n    }\n\n    return new CalendarDate(this, indianYear, indianMonth, indianDay);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    let extendedYear = date.year + INDIAN_ERA_START;\n    let [era, year] = fromExtendedYear(extendedYear);\n\n    let leapMonth: number;\n    let jd: number;\n    if (isLeapYear(year)) {\n      leapMonth = 31;\n      jd = gregorianToJulianDay(era, year, 3, 21);\n    } else {\n      leapMonth = 30;\n      jd = gregorianToJulianDay(era, year, 3, 22);\n    }\n\n    if (date.month === 1) {\n      return jd + date.day - 1;\n    }\n\n    jd += leapMonth + Math.min(date.month - 2, 5) * 31;\n\n    if (date.month >= 8) {\n      jd += (date.month - 7) * 30;\n    }\n\n    jd += date.day - 1;\n    return jd;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.month === 1 && isLeapYear(date.year + INDIAN_ERA_START)) {\n      return 31;\n    }\n\n    if (date.month >= 2 && date.month <= 6) {\n      return 31;\n    }\n\n    return 30;\n  }\n\n  getYearsInEra(): number {\n    // 9999-12-31 gregorian is 9920-10-10 indian.\n    // Round down to 9919 for the last full year.\n    return 9919;\n  }\n\n  getEras(): string[] {\n    return ['saka'];\n  }\n\n  balanceDate(): void {}\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\n\nconst CIVIL_EPOC = 1948440; // CE 622 July 16 Friday (Julian calendar) / CE 622 July 19 (Gregorian calendar)\nconst ASTRONOMICAL_EPOC = 1948439; // CE 622 July 15 Thursday (Julian calendar)\nconst UMALQURA_YEAR_START = 1300;\nconst UMALQURA_YEAR_END = 1600;\nconst UMALQURA_START_DAYS = 460322;\n\nfunction islamicToJulianDay(epoch: number, year: number, month: number, day: number): number {\n  return day +\n    Math.ceil(29.5 * (month - 1)) +\n    (year - 1) * 354 +\n    Math.floor((3 + 11 * year) / 30) +\n    epoch - 1;\n}\n\nfunction julianDayToIslamic(calendar: Calendar, epoch: number, jd: number) {\n  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);\n  let month = Math.min(12, Math.ceil((jd - (29 + islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);\n  let day = jd - islamicToJulianDay(epoch, year, month, 1) + 1;\n\n  return new CalendarDate(calendar, year, month, day);\n}\n\nfunction isLeapYear(year: number): boolean {\n  return (14 + 11 * year) % 30 < 11;\n}\n\n/**\n * The Islamic calendar, also known as the \"Hijri\" calendar, is used throughout much of the Arab world.\n * The civil variant uses simple arithmetic rules rather than astronomical calculations to approximate\n * the traditional calendar, which is based on sighting of the crescent moon. It uses Friday, July 16 622 CE (Julian) as the epoch.\n * Each year has 12 months, with either 354 or 355 days depending on whether it is a leap year.\n * Learn more about the available Islamic calendars [here](https://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types).\n */\nexport class IslamicCivilCalendar implements Calendar {\n  identifier: CalendarIdentifier = 'islamic-civil';\n\n  fromJulianDay(jd: number): CalendarDate {\n    return julianDayToIslamic(this, CIVIL_EPOC, jd);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return islamicToJulianDay(CIVIL_EPOC, date.year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let length = 29 + date.month % 2;\n    if (date.month === 12 && isLeapYear(date.year)) {\n      length++;\n    }\n\n    return length;\n  }\n\n  getMonthsInYear(): number {\n    return 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 355 : 354;\n  }\n\n  getYearsInEra(): number {\n    // 9999 gregorian\n    return 9665;\n  }\n\n  getEras(): string[] {\n    return ['AH'];\n  }\n}\n\n/**\n * The Islamic calendar, also known as the \"Hijri\" calendar, is used throughout much of the Arab world.\n * The tabular variant uses simple arithmetic rules rather than astronomical calculations to approximate\n * the traditional calendar, which is based on sighting of the crescent moon. It uses Thursday, July 15 622 CE (Julian) as the epoch.\n * Each year has 12 months, with either 354 or 355 days depending on whether it is a leap year.\n * Learn more about the available Islamic calendars [here](https://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types).\n */\nexport class IslamicTabularCalendar extends IslamicCivilCalendar {\n  identifier: CalendarIdentifier = 'islamic-tbla';\n\n  fromJulianDay(jd: number): CalendarDate {\n    return julianDayToIslamic(this, ASTRONOMICAL_EPOC, jd);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    return islamicToJulianDay(ASTRONOMICAL_EPOC, date.year, date.month, date.day);\n  }\n}\n\n// Generated by scripts/generate-umalqura.js\nconst UMALQURA_DATA = 'qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=';\nlet UMALQURA_MONTHLENGTH: Uint16Array;\nlet UMALQURA_YEAR_START_TABLE: Uint32Array;\n\nfunction umalquraYearStart(year: number): number {\n  return UMALQURA_START_DAYS + UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START];\n}\n\nfunction umalquraMonthLength(year: number, month: number): number {\n  let idx = (year - UMALQURA_YEAR_START);\n  let mask = (0x01 << (11 - (month - 1)));\n  if ((UMALQURA_MONTHLENGTH[idx] & mask) === 0) {\n    return 29;\n  } else {\n    return 30;\n  }\n}\n\nfunction umalquraMonthStart(year: number, month: number): number {\n  let day = umalquraYearStart(year);\n  for (let i = 1; i < month; i++) {\n    day += umalquraMonthLength(year, i);\n  }\n  return day;\n}\n\nfunction umalquraYearLength(year: number): number {\n  return UMALQURA_YEAR_START_TABLE[year + 1 - UMALQURA_YEAR_START] - UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START];\n}\n\n/**\n * The Islamic calendar, also known as the \"Hijri\" calendar, is used throughout much of the Arab world.\n * The Umalqura variant is primarily used in Saudi Arabia. It is a lunar calendar, based on astronomical\n * calculations that predict the sighting of a crescent moon. Month and year lengths vary between years\n * depending on these calculations.\n * Learn more about the available Islamic calendars [here](https://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types).\n */\nexport class IslamicUmalquraCalendar extends IslamicCivilCalendar {\n  identifier: CalendarIdentifier = 'islamic-umalqura';\n\n  constructor() {\n    super();\n    if (!UMALQURA_MONTHLENGTH) {\n      UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob(UMALQURA_DATA), c => c.charCodeAt(0)).buffer);\n    }\n\n    if (!UMALQURA_YEAR_START_TABLE) {\n      UMALQURA_YEAR_START_TABLE = new Uint32Array(UMALQURA_YEAR_END - UMALQURA_YEAR_START + 1);\n\n      let yearStart = 0;\n      for (let year = UMALQURA_YEAR_START; year <= UMALQURA_YEAR_END; year++) {\n        UMALQURA_YEAR_START_TABLE[year - UMALQURA_YEAR_START] = yearStart;\n        for (let i = 1; i <= 12; i++) {\n          yearStart += umalquraMonthLength(year, i);\n        }\n      }\n    }\n  }\n\n  fromJulianDay(jd: number): CalendarDate {\n    let days = jd - CIVIL_EPOC;\n    let startDays = umalquraYearStart(UMALQURA_YEAR_START);\n    let endDays = umalquraYearStart(UMALQURA_YEAR_END);\n    if (days < startDays || days > endDays) {\n      return super.fromJulianDay(jd);\n    } else {\n      let y = UMALQURA_YEAR_START - 1;\n      let m = 1;\n      let d = 1;\n      while (d > 0) {\n        y++;\n        d = days - umalquraYearStart(y) + 1;\n        let yearLength = umalquraYearLength(y);\n        if (d === yearLength) {\n          m = 12;\n          break;\n        } else if (d < yearLength) {\n          let monthLength = umalquraMonthLength(y, m);\n          m = 1;\n          while (d > monthLength) {\n            d -= monthLength;\n            m++;\n            monthLength = umalquraMonthLength(y, m);\n          }\n          break;\n        }\n      }\n\n      return new CalendarDate(this, y, m, (days - umalquraMonthStart(y, m) + 1));\n    }\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.toJulianDay(date);\n    }\n\n    return CIVIL_EPOC + umalquraMonthStart(date.year, date.month) + (date.day - 1);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.getDaysInMonth(date);\n    }\n\n    return umalquraMonthLength(date.year, date.month);\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    if (date.year < UMALQURA_YEAR_START || date.year > UMALQURA_YEAR_END) {\n      return super.getDaysInYear(date);\n    }\n\n    return umalquraYearLength(date.year);\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {mod, Mutable} from '../utils';\n\nconst HEBREW_EPOCH = 347997;\n\n// Hebrew date calculations are performed in terms of days, hours, and\n// \"parts\" (or halakim), which are 1/1080 of an hour, or 3 1/3 seconds.\nconst HOUR_PARTS = 1080;\nconst DAY_PARTS  = 24 * HOUR_PARTS;\n\n// An approximate value for the length of a lunar month.\n// It is used to calculate the approximate year and month of a given\n// absolute date.\nconst MONTH_DAYS = 29;\nconst MONTH_FRACT = 12 * HOUR_PARTS + 793;\nconst MONTH_PARTS = MONTH_DAYS * DAY_PARTS + MONTH_FRACT;\n\nfunction isLeapYear(year: number) {\n  return mod(year * 7 + 1, 19) < 7;\n}\n\n// Test for delay of start of new year and to avoid\n// Sunday, Wednesday, and Friday as start of the new year.\nfunction hebrewDelay1(year: number) {\n  let months = Math.floor((235 * year - 234) / 19);\n  let parts = 12084 + 13753 * months;\n  let day = months * 29 + Math.floor(parts / 25920);\n\n  if (mod(3 * (day + 1), 7) < 3) {\n    day += 1;\n  }\n\n  return day;\n}\n\n// Check for delay in start of new year due to length of adjacent years\nfunction hebrewDelay2(year: number) {\n  let last = hebrewDelay1(year - 1);\n  let present = hebrewDelay1(year);\n  let next = hebrewDelay1(year + 1);\n\n  if (next - present === 356) {\n    return 2;\n  }\n\n  if (present - last === 382) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction startOfYear(year: number) {\n  return hebrewDelay1(year) + hebrewDelay2(year);\n}\n\nfunction getDaysInYear(year: number) {\n  return startOfYear(year + 1) - startOfYear(year);\n}\n\nfunction getYearType(year: number) {\n  let yearLength = getDaysInYear(year);\n\n  if (yearLength > 380) {\n    yearLength -= 30; // Subtract length of leap month.\n  }\n\n  switch (yearLength) {\n    case 353:\n      return 0; // deficient\n    case 354:\n      return 1; // normal\n    case 355:\n      return 2; // complete\n  }\n}\n\nfunction getDaysInMonth(year: number, month: number): number {\n  // Normalize month numbers from 1 - 13, even on non-leap years\n  if (month >= 6 && !isLeapYear(year)) {\n    month++;\n  }\n\n  // First of all, dispose of fixed-length 29 day months\n  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13) {\n    return 29;\n  }\n\n  let yearType = getYearType(year);\n\n  // If it's Heshvan, days depend on length of year\n  if (month === 2) {\n    return yearType === 2 ? 30 : 29;\n  }\n\n  // Similarly, Kislev varies with the length of year\n  if (month === 3) {\n    return yearType === 0 ? 29 : 30;\n  }\n\n  // Adar I only exists in leap years\n  if (month === 6) {\n    return isLeapYear(year) ? 30 : 0;\n  }\n\n  return 30;\n}\n\n/**\n * The Hebrew calendar is used in Israel and around the world by the Jewish faith.\n * Years include either 12 or 13 months depending on whether it is a leap year.\n * In leap years, an extra month is inserted at month 6.\n */\nexport class HebrewCalendar implements Calendar {\n  identifier: CalendarIdentifier = 'hebrew';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let d = jd - HEBREW_EPOCH;\n    let m = (d * DAY_PARTS) / MONTH_PARTS;           // Months (approx)\n    let year = Math.floor((19 * m + 234) / 235) + 1; // Years (approx)\n    let ys = startOfYear(year);                      // 1st day of year\n    let dayOfYear = Math.floor(d - ys);\n\n    // Because of the postponement rules, it's possible to guess wrong.  Fix it.\n    while (dayOfYear < 1) {\n      year--;\n      ys = startOfYear(year);\n      dayOfYear = Math.floor(d - ys);\n    }\n\n    // Now figure out which month we're in, and the date within that month\n    let month = 1;\n    let monthStart = 0;\n    while (monthStart < dayOfYear) {\n      monthStart += getDaysInMonth(year, month);\n      month++;\n    }\n\n    month--;\n    monthStart -= getDaysInMonth(year, month);\n\n    let day = dayOfYear - monthStart;\n    return new CalendarDate(this, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    let jd = startOfYear(date.year);\n    for (let month = 1; month < date.month; month++) {\n      jd += getDaysInMonth(date.year, month);\n    }\n\n    return jd + date.day + HEBREW_EPOCH;\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return getDaysInMonth(date.year, date.month);\n  }\n\n  getMonthsInYear(date: AnyCalendarDate): number {\n    return isLeapYear(date.year) ? 13 : 12;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return getDaysInYear(date.year);\n  }\n\n  getYearsInEra(): number {\n    // 6239 gregorian\n    return 9999;\n  }\n\n  getEras(): string[] {\n    return ['AM'];\n  }\n\n  balanceYearMonth(date: Mutable<AnyCalendarDate>, previousDate: AnyCalendarDate): void {\n    // Keep date in the same month when switching between leap years and non leap years\n    if (previousDate.year !== date.year) {\n      if (isLeapYear(previousDate.year) && !isLeapYear(date.year) && previousDate.month > 6) {\n        date.month--;\n      } else if (!isLeapYear(previousDate.year) && isLeapYear(date.year) && previousDate.month > 6) {\n        date.month++;\n      }\n    }\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from ICU.\n// Original licensing can be found in the NOTICE file in the root directory of this source tree.\n\nimport {AnyCalendarDate, Calendar, CalendarIdentifier} from '../types';\nimport {CalendarDate} from '../CalendarDate';\nimport {Mutable} from '../utils';\n\nconst ETHIOPIC_EPOCH = 1723856;\nconst COPTIC_EPOCH = 1824665;\n\n// The delta between Amete Alem 1 and Amete Mihret 1\n// AA 5501 = AM 1\nconst AMETE_MIHRET_DELTA = 5500;\n\nfunction ceToJulianDay(epoch: number, year: number, month: number, day: number): number {\n  return (\n    epoch                   // difference from Julian epoch to 1,1,1\n    + 365 * year            // number of days from years\n    + Math.floor(year / 4)  // extra day of leap year\n    + 30 * (month - 1)      // number of days from months (1 based)\n    + day - 1               // number of days for present month (1 based)\n  );\n}\n\nfunction julianDayToCE(epoch: number, jd: number) {\n  let year = Math.floor((4 * (jd - epoch)) / 1461);\n  let month = 1 + Math.floor((jd - ceToJulianDay(epoch, year, 1, 1)) / 30);\n  let day = jd + 1 - ceToJulianDay(epoch, year, month, 1);\n  return [year, month, day];\n}\n\nfunction getLeapDay(year: number) {\n  return Math.floor((year % 4) / 3);\n}\n\nfunction getDaysInMonth(year: number, month: number) {\n  // The Ethiopian and Coptic calendars have 13 months, 12 of 30 days each and\n  // an intercalary month at the end of the year of 5 or 6 days, depending whether\n  // the year is a leap year or not. The Leap Year follows the same rules as the\n  // Julian Calendar so that the extra month always has six days in the year before\n  // a Julian Leap Year.\n  if (month % 13 !== 0) {\n    // not intercalary month\n    return 30;\n  } else {\n    // intercalary month 5 days + possible leap day\n    return getLeapDay(year) + 5;\n  }\n}\n\n/**\n * The Ethiopic calendar system is the official calendar used in Ethiopia.\n * It includes 12 months of 30 days each, plus 5 or 6 intercalary days depending\n * on whether it is a leap year. Two eras are supported: 'AA' and 'AM'.\n */\nexport class EthiopicCalendar implements Calendar {\n  identifier: CalendarIdentifier = 'ethiopic';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let [year, month, day] = julianDayToCE(ETHIOPIC_EPOCH, jd);\n    let era = 'AM';\n    if (year <= 0) {\n      era = 'AA';\n      year += AMETE_MIHRET_DELTA;\n    }\n\n    return new CalendarDate(this, era, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'AA') {\n      year -= AMETE_MIHRET_DELTA;\n    }\n\n    return ceToJulianDay(ETHIOPIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    return getDaysInMonth(date.year, date.month);\n  }\n\n  getMonthsInYear(): number {\n    return 13;\n  }\n\n  getDaysInYear(date: AnyCalendarDate): number {\n    return 365 + getLeapDay(date.year);\n  }\n\n  getYearsInEra(date: AnyCalendarDate): number {\n    // 9999-12-31 gregorian is 9992-20-02 ethiopic.\n    // Round down to 9991 for the last full year.\n    // AA 9999-01-01 ethiopic is 4506-09-30 gregorian.\n    return date.era === 'AA' ? 9999 : 9991;\n  }\n\n  getEras(): string[] {\n    return ['AA', 'AM'];\n  }\n}\n\n/**\n * The Ethiopic (Amete Alem) calendar is the same as the modern Ethiopic calendar,\n * except years were measured from a different epoch. Only one era is supported: 'AA'.\n */\nexport class EthiopicAmeteAlemCalendar extends EthiopicCalendar {\n  identifier: CalendarIdentifier = 'ethioaa'; // also known as 'ethiopic-amete-alem' in ICU\n\n  fromJulianDay(jd: number): CalendarDate {\n    let [year, month, day] = julianDayToCE(ETHIOPIC_EPOCH, jd);\n    year += AMETE_MIHRET_DELTA;\n    return new CalendarDate(this, 'AA', year, month, day);\n  }\n\n  getEras(): string[] {\n    return ['AA'];\n  }\n\n  getYearsInEra(): number {\n    // 9999-13-04 ethioaa is the maximum date, which is equivalent to 4506-09-29 gregorian.\n    return 9999;\n  }\n}\n\n/**\n * The Coptic calendar is similar to the Ethiopic calendar.\n * It includes 12 months of 30 days each, plus 5 or 6 intercalary days depending\n * on whether it is a leap year. Two eras are supported: 'BCE' and 'CE'.\n */\nexport class CopticCalendar extends EthiopicCalendar {\n  identifier: CalendarIdentifier = 'coptic';\n\n  fromJulianDay(jd: number): CalendarDate {\n    let [year, month, day] = julianDayToCE(COPTIC_EPOCH, jd);\n    let era = 'CE';\n    if (year <= 0) {\n      era = 'BCE';\n      year = 1 - year;\n    }\n\n    return new CalendarDate(this, era, year, month, day);\n  }\n\n  toJulianDay(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'BCE') {\n      year = 1 - year;\n    }\n\n    return ceToJulianDay(COPTIC_EPOCH, year, date.month, date.day);\n  }\n\n  getDaysInMonth(date: AnyCalendarDate): number {\n    let year = date.year;\n    if (date.era === 'BCE') {\n      year = 1 - year;\n    }\n\n    return getDaysInMonth(year, date.month);\n  }\n\n  isInverseEra(date: AnyCalendarDate): boolean {\n    return date.era === 'BCE';\n  }\n\n  balanceDate(date: Mutable<AnyCalendarDate>): void {\n    if (date.year <= 0) {\n      date.era = date.era === 'BCE' ? 'CE' : 'BCE';\n      date.year = 1 - date.year;\n    }\n  }\n\n  getEras(): string[] {\n    return ['BCE', 'CE'];\n  }\n\n  getYearsInEra(date: AnyCalendarDate): number {\n    // 9999-12-30 gregorian is 9716-02-20 coptic.\n    // Round down to 9715 for the last full year.\n    // BCE 9999-01-01 coptic is BC 9716-06-15 gregorian.\n    return date.era === 'BCE' ? 9999 : 9715;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BuddhistCalendar} from './calendars/BuddhistCalendar';\nimport {Calendar, CalendarIdentifier} from './types';\nimport {CopticCalendar, EthiopicAmeteAlemCalendar, EthiopicCalendar} from './calendars/EthiopicCalendar';\nimport {GregorianCalendar} from './calendars/GregorianCalendar';\nimport {HebrewCalendar} from './calendars/HebrewCalendar';\nimport {IndianCalendar} from './calendars/IndianCalendar';\nimport {IslamicCivilCalendar, IslamicTabularCalendar, IslamicUmalquraCalendar} from './calendars/IslamicCalendar';\nimport {JapaneseCalendar} from './calendars/JapaneseCalendar';\nimport {PersianCalendar} from './calendars/PersianCalendar';\nimport {TaiwanCalendar} from './calendars/TaiwanCalendar';\n\n/** Creates a `Calendar` instance from a Unicode calendar identifier string. */\nexport function createCalendar(name: CalendarIdentifier): Calendar {\n  switch (name) {\n    case 'buddhist':\n      return new BuddhistCalendar();\n    case 'ethiopic':\n      return new EthiopicCalendar();\n    case 'ethioaa':\n      return new EthiopicAmeteAlemCalendar();\n    case 'coptic':\n      return new CopticCalendar();\n    case 'hebrew':\n      return new HebrewCalendar();\n    case 'indian':\n      return new IndianCalendar();\n    case 'islamic-civil':\n      return new IslamicCivilCalendar();\n    case 'islamic-tbla':\n      return new IslamicTabularCalendar();\n    case 'islamic-umalqura':\n      return new IslamicUmalquraCalendar();\n    case 'japanese':\n      return new JapaneseCalendar();\n    case 'persian':\n      return new PersianCalendar();\n    case 'roc':\n      return new TaiwanCalendar();\n    case 'gregory':\n    default:\n      return new GregorianCalendar();\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet formatterCache = new Map<string, Intl.DateTimeFormat>();\n\ninterface DateRangeFormatPart extends Intl.DateTimeFormatPart {\n  source: 'startRange' | 'endRange' | 'shared'\n}\n\n/** A wrapper around Intl.DateTimeFormat that fixes various browser bugs, and polyfills new features. */\nexport class DateFormatter implements Intl.DateTimeFormat {\n  private formatter: Intl.DateTimeFormat;\n  private options: Intl.DateTimeFormatOptions;\n  private resolvedHourCycle: Intl.DateTimeFormatOptions['hourCycle'];\n\n  constructor(locale: string, options: Intl.DateTimeFormatOptions = {}) {\n    this.formatter = getCachedDateFormatter(locale, options);\n    this.options = options;\n  }\n\n  /** Formats a date as a string according to the locale and format options passed to the constructor. */\n  format(value: Date): string {\n    return this.formatter.format(value);\n  }\n\n  /** Formats a date to an array of parts such as separators, numbers, punctuation, and more. */\n  formatToParts(value: Date): Intl.DateTimeFormatPart[] {\n    return this.formatter.formatToParts(value);\n  }\n\n  /** Formats a date range as a string. */\n  formatRange(start: Date, end: Date): string {\n    // @ts-ignore\n    if (typeof this.formatter.formatRange === 'function') {\n      // @ts-ignore\n      return this.formatter.formatRange(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    // Very basic fallback for old browsers.\n    return `${this.formatter.format(start)} – ${this.formatter.format(end)}`;\n  }\n\n  /** Formats a date range as an array of parts. */\n  formatRangeToParts(start: Date, end: Date): DateRangeFormatPart[] {\n    // @ts-ignore\n    if (typeof this.formatter.formatRangeToParts === 'function') {\n      // @ts-ignore\n      return this.formatter.formatRangeToParts(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    let startParts = this.formatter.formatToParts(start);\n    let endParts = this.formatter.formatToParts(end);\n    return [\n      ...startParts.map(p => ({...p, source: 'startRange'} as DateRangeFormatPart)),\n      {type: 'literal', value: ' – ', source: 'shared'},\n      ...endParts.map(p => ({...p, source: 'endRange'} as DateRangeFormatPart))\n    ];\n  }\n\n  /** Returns the resolved formatting options based on the values passed to the constructor. */\n  resolvedOptions(): Intl.ResolvedDateTimeFormatOptions {\n    let resolvedOptions = this.formatter.resolvedOptions();\n    if (hasBuggyResolvedHourCycle()) {\n      if (!this.resolvedHourCycle) {\n        this.resolvedHourCycle = getResolvedHourCycle(resolvedOptions.locale, this.options);\n      }\n      resolvedOptions.hourCycle = this.resolvedHourCycle;\n      resolvedOptions.hour12 = this.resolvedHourCycle === 'h11' || this.resolvedHourCycle === 'h12';\n    }\n\n    // Safari uses a different name for the Ethiopic (Amete Alem) calendar.\n    // https://bugs.webkit.org/show_bug.cgi?id=241564\n    if (resolvedOptions.calendar === 'ethiopic-amete-alem') {\n      resolvedOptions.calendar = 'ethioaa';\n    }\n\n    return resolvedOptions;\n  }\n}\n\n// There are multiple bugs involving the hour12 and hourCycle options in various browser engines.\n//   - Chrome [1] (and the ECMA 402 spec [2]) resolve hour12: false in English and other locales to h24 (24:00 - 23:59)\n//     rather than h23 (00:00 - 23:59). Same can happen with hour12: true in French, which Chrome resolves to h11 (00:00 - 11:59)\n//     rather than h12 (12:00 - 11:59).\n//   - WebKit returns an incorrect hourCycle resolved option in the French locale due to incorrect parsing of 'h' literal\n//     in the resolved pattern. It also formats incorrectly when specifying the hourCycle option for the same reason. [3]\n// [1] https://bugs.chromium.org/p/chromium/issues/detail?id=1045791\n// [2] https://github.com/tc39/ecma402/issues/402\n// [3] https://bugs.webkit.org/show_bug.cgi?id=229313\n\n// https://github.com/unicode-org/cldr/blob/018b55eff7ceb389c7e3fc44e2f657eae3b10b38/common/supplemental/supplementalData.xml#L4774-L4802\nconst hour12Preferences = {\n  true: {\n    // Only Japanese uses the h11 style for 12 hour time. All others use h12.\n    ja: 'h11'\n  },\n  false: {\n    // All locales use h23 for 24 hour time. None use h24.\n  }\n};\n\nfunction getCachedDateFormatter(locale: string, options: Intl.DateTimeFormatOptions = {}): Intl.DateTimeFormat {\n  // Work around buggy hour12 behavior in Chrome / ECMA 402 spec by using hourCycle instead.\n  // Only apply the workaround if the issue is detected, because the hourCycle option is buggy in Safari.\n  if (typeof options.hour12 === 'boolean' && hasBuggyHour12Behavior()) {\n    options = {...options};\n    let pref = hour12Preferences[String(options.hour12)][locale.split('-')[0]];\n    let defaultHourCycle = options.hour12 ? 'h12' : 'h23';\n    options.hourCycle = pref ?? defaultHourCycle;\n    delete options.hour12;\n  }\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (formatterCache.has(cacheKey)) {\n    return formatterCache.get(cacheKey)!;\n  }\n\n  let numberFormatter = new Intl.DateTimeFormat(locale, options);\n  formatterCache.set(cacheKey, numberFormatter);\n  return numberFormatter;\n}\n\nlet _hasBuggyHour12Behavior: boolean | null = null;\nfunction hasBuggyHour12Behavior() {\n  if (_hasBuggyHour12Behavior == null) {\n    _hasBuggyHour12Behavior = new Intl.DateTimeFormat('en-US', {\n      hour: 'numeric',\n      hour12: false\n    }).format(new Date(2020, 2, 3, 0)) === '24';\n  }\n\n  return _hasBuggyHour12Behavior;\n}\n\nlet _hasBuggyResolvedHourCycle: boolean | null = null;\nfunction hasBuggyResolvedHourCycle() {\n  if (_hasBuggyResolvedHourCycle == null) {\n    _hasBuggyResolvedHourCycle = new Intl.DateTimeFormat('fr', {\n      hour: 'numeric',\n      hour12: false\n    }).resolvedOptions().hourCycle === 'h12';\n  }\n\n  return _hasBuggyResolvedHourCycle;\n}\n\nfunction getResolvedHourCycle(locale: string, options: Intl.DateTimeFormatOptions) {\n  if (!options.timeStyle && !options.hour) {\n    return undefined;\n  }\n\n  // Work around buggy results in resolved hourCycle and hour12 options in WebKit.\n  // Format the minimum possible hour and maximum possible hour in a day and parse the results.\n  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, '');\n  locale += (locale.includes('-u-') ? '' : '-u') + '-nu-latn';\n  let formatter = getCachedDateFormatter(locale, {\n    ...options,\n    timeZone: undefined // use local timezone\n  });\n\n  let min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find(p => p.type === 'hour')!.value, 10);\n  let max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find(p => p.type === 'hour')!.value, 10);\n\n  if (min === 0 && max === 23) {\n    return 'h23';\n  }\n\n  if (min === 24 && max === 23) {\n    return 'h24';\n  }\n\n  if (min === 0 && max === 11) {\n    return 'h11';\n  }\n\n  if (min === 12 && max === 11) {\n    return 'h12';\n  }\n\n  throw new Error('Unexpected hour cycle result');\n}\n", "import type { DateValue } from '@internationalized/date'\nimport type { Matcher } from './types'\nimport { CalendarDateTime, getDayOfWeek, getLocalTimeZone, parseDate, parseDateTime, parseZonedDateTime, toCalendar, ZonedDateTime } from '@internationalized/date'\n\n/**\n * Given a date string and a reference `DateValue` object, parse the\n * string to the same type as the reference object.\n *\n * Useful for parsing strings from data attributes, which are always\n * strings, to the same type being used by the date component.\n */\nexport function parseStringToDateValue(dateStr: string, referenceVal: DateValue): DateValue {\n  let dateValue: DateValue\n  if (isZonedDateTime(referenceVal))\n    dateValue = parseZonedDateTime(dateStr)\n\n  else if (isCalendarDateTime(referenceVal))\n    dateValue = parseDateTime(dateStr)\n\n  else\n    dateValue = parseDate(dateStr)\n\n  return dateValue.calendar !== referenceVal.calendar ? toCalendar(dateValue, referenceVal.calendar) : dateValue\n}\n\n/**\n * Given a `DateValue` object, convert it to a native `Date` object.\n * If a timezone is provided, the date will be converted to that timezone.\n * If no timezone is provided, the date will be converted to the local timezone.\n */\nexport function toDate(dateValue: DateValue, tz: string = getLocalTimeZone()) {\n  if (isZonedDateTime(dateValue))\n    return dateValue.toDate()\n  else\n    return dateValue.toDate(tz)\n}\n\nexport function isCalendarDateTime(dateValue: DateValue): dateValue is CalendarDateTime {\n  return dateValue instanceof CalendarDateTime\n}\n\nexport function isZonedDateTime(dateValue: DateValue): dateValue is ZonedDateTime {\n  return dateValue instanceof ZonedDateTime\n}\n\nexport function hasTime(dateValue: DateValue) {\n  return isCalendarDateTime(dateValue) || isZonedDateTime(dateValue)\n}\n\n/**\n * Given a date, return the number of days in the month.\n */\nexport function getDaysInMonth(date: Date | DateValue) {\n  if (date instanceof Date) {\n    const year = date.getFullYear()\n    const month = date.getMonth() + 1\n    /**\n     * By using zero as the day, we get the\n     * last day of the previous month, which\n     * is the month we originally passed in.\n     */\n    return new Date(year, month, 0).getDate()\n  }\n  else {\n    return date.set({ day: 100 }).day\n  }\n}\n\n/**\n * Determine if a date is before the reference date.\n * @param dateToCompare - is this date before the `referenceDate`\n * @param referenceDate - is the `dateToCompare` before this date\n *\n * @see {@link isBeforeOrSame} for inclusive\n */\nexport function isBefore(dateToCompare: DateValue, referenceDate: DateValue) {\n  return dateToCompare.compare(referenceDate) < 0\n}\n\n/**\n * Determine if a date is after the reference date.\n * @param dateToCompare - is this date after the `referenceDate`\n * @param referenceDate - is the `dateToCompare` after this date\n *\n * @see {@link isAfterOrSame} for inclusive\n */\nexport function isAfter(dateToCompare: DateValue, referenceDate: DateValue) {\n  return dateToCompare.compare(referenceDate) > 0\n}\n\n/**\n * Determine if a date is before or the same as the reference date.\n *\n * @param dateToCompare - the date to compare\n * @param referenceDate - the reference date to make the comparison against\n *\n * @see {@link isBefore} for non-inclusive\n */\nexport function isBeforeOrSame(dateToCompare: DateValue, referenceDate: DateValue) {\n  return dateToCompare.compare(referenceDate) <= 0\n}\n\n/**\n * Determine if a date is after or the same as the reference date.\n *\n * @param dateToCompare - is this date after or the same as the `referenceDate`\n * @param referenceDate - is the `dateToCompare` after or the same as this date\n *\n * @see {@link isAfter} for non-inclusive\n */\nexport function isAfterOrSame(dateToCompare: DateValue, referenceDate: DateValue) {\n  return dateToCompare.compare(referenceDate) >= 0\n}\n\n/**\n * Determine if a date is inclusively between a start and end reference date.\n *\n * @param date - is this date inclusively between the `start` and `end` dates\n * @param start - the start reference date to make the comparison against\n * @param end - the end reference date to make the comparison against\n *\n * @see {@link isBetween} for non-inclusive\n */\nexport function isBetweenInclusive(date: DateValue, start: DateValue, end: DateValue) {\n  return isAfterOrSame(date, start) && isBeforeOrSame(date, end)\n}\n\n/**\n * Determine if a date is between a start and end reference date.\n *\n * @param date - is this date between the `start` and `end` dates\n * @param start - the start reference date to make the comparison against\n * @param end - the end reference date to make the comparison against\n *\n * @see {@link isBetweenInclusive} for inclusive\n */\nexport function isBetween(date: DateValue, start: DateValue, end: DateValue) {\n  return isAfter(date, start) && isBefore(date, end)\n}\n\nexport function getLastFirstDayOfWeek<T extends DateValue = DateValue>(\n  date: T,\n  firstDayOfWeek: number,\n  locale: string,\n): T {\n  const day = getDayOfWeek(date, locale)\n\n  if (firstDayOfWeek > day)\n    return date.subtract({ days: day + 7 - firstDayOfWeek }) as T\n\n  if (firstDayOfWeek === day)\n    return date as T\n\n  return date.subtract({ days: day - firstDayOfWeek }) as T\n}\n\nexport function getNextLastDayOfWeek<T extends DateValue = DateValue>(\n  date: T,\n  firstDayOfWeek: number,\n  locale: string,\n): T {\n  const day = getDayOfWeek(date, locale)\n  const lastDayOfWeek = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1\n\n  if (day === lastDayOfWeek)\n    return date as T\n\n  if (day > lastDayOfWeek)\n    return date.add({ days: 7 - day + lastDayOfWeek }) as T\n\n  return date.add({ days: lastDayOfWeek - day }) as T\n}\n\nexport function areAllDaysBetweenValid(\n  start: DateValue,\n  end: DateValue,\n  isUnavailable: Matcher | undefined,\n  isDisabled: Matcher | undefined,\n  isHighlightable?: Matcher | undefined,\n) {\n  if (isUnavailable === undefined && isDisabled === undefined && isHighlightable === undefined)\n    return true\n\n  let dCurrent = start.add({ days: 1 })\n  if ((isDisabled?.(dCurrent) || isUnavailable?.(dCurrent))\n    && !isHighlightable?.(dCurrent)) {\n    return false\n  }\n\n  const dEnd = end\n  while (dCurrent.compare(dEnd) < 0) {\n    dCurrent = dCurrent.add({ days: 1 })\n    if ((isDisabled?.(dCurrent) || isUnavailable?.(dCurrent))\n      && !isHighlightable?.(dCurrent)) {\n      return false\n    }\n  }\n  return true\n}\n", "/*\n  * Implementation ported from https://github.com/melt-ui/melt-ui/blob/develop/src/lib/internal/helpers/date/utils.ts\n*/\n\nimport type { DateValue, ZonedDateTime } from '@internationalized/date'\nimport { CalendarDate, CalendarDateTime, createCalendar, DateFormatter, Time, toCalendar } from '@internationalized/date'\n\nexport type TimeValue = Time | CalendarDateTime | ZonedDateTime\n\nexport type Granularity = 'day' | 'hour' | 'minute' | 'second'\nexport type TimeGranularity = 'hour' | 'minute' | 'second'\n\ntype GetDefaultDateProps = {\n  defaultValue?: DateValue | DateValue[] | undefined\n  defaultPlaceholder?: DateValue | undefined\n  granularity?: Granularity\n  locale?: string\n}\n\n/**\n * A helper function used throughout the various date builders\n * to generate a default `DateValue` using the `defaultValue`,\n * `defaultPlaceholder`, and `granularity` props.\n *\n * It's important to match the `DateValue` type being used\n * elsewhere in the builder, so they behave according to the\n * behavior the user expects based on the props they've provided.\n *\n */\nexport function getDefaultDate(props: GetDefaultDateProps): DateValue {\n  const { defaultValue, defaultPlaceholder, granularity = 'day', locale = 'en' } = props\n\n  if (Array.isArray(defaultValue) && defaultValue.length)\n    return defaultValue.at(-1)!.copy()\n\n  if (defaultValue && !Array.isArray(defaultValue))\n    return defaultValue.copy()\n\n  if (defaultPlaceholder)\n    return defaultPlaceholder.copy()\n\n  const date = new Date()\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const day = date.getDate()\n  const calendarDateTimeGranularities = ['hour', 'minute', 'second']\n\n  const defaultFormatter = new DateFormatter(locale)\n  const calendar = createCalendar(defaultFormatter.resolvedOptions().calendar)\n\n  if (calendarDateTimeGranularities.includes(granularity ?? 'day'))\n    return toCalendar(new CalendarDateTime(year, month, day, 0, 0, 0), calendar)\n\n  return toCalendar(new CalendarDate(year, month, day), calendar)\n}\n\ntype GetDefaultTimeProps = {\n  defaultValue?: TimeValue | undefined\n  defaultPlaceholder?: TimeValue | undefined\n}\n\nexport function getDefaultTime(props: GetDefaultTimeProps): TimeValue {\n  const { defaultValue, defaultPlaceholder } = props\n\n  if (defaultValue) {\n    return defaultValue.copy()\n  }\n\n  if (defaultPlaceholder) {\n    return defaultPlaceholder.copy()\n  }\n\n  return new Time(0, 0, 0)\n}\n", "/**\n * Splits an array into chunks of a given size.\n * @param arr The array to split.\n * @param size The size of each chunk.\n * @returns An array of arrays, where each sub-array has `size` elements from the original array.\n * @example ```ts\n * const arr = [1, 2, 3, 4, 5, 6, 7, 8];\n * const chunks = chunk(arr, 3);\n * // chunks = [[1, 2, 3], [4, 5, 6], [7, 8]]\n * ```\n */\nexport function chunk<T>(arr: T[], size: number): T[][] {\n  const result = []\n  for (let i = 0; i < arr.length; i += size)\n    result.push(arr.slice(i, i + size))\n\n  return result\n}\n", "import type { Granularity } from './comparators'\nimport type { DateStep, HourCycle } from './types'\nimport { defu } from 'defu'\n\nexport function getOptsByGranularity(granularity: Granularity, hourCycle: HourCycle, isTimeValue: boolean = false) {\n  const opts: Intl.DateTimeFormatOptions = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    timeZoneName: 'short',\n    hourCycle: normalizeHourCycle(hourCycle),\n    hour12: normalizeHour12(hourCycle),\n  }\n  if (isTimeValue) {\n    delete opts.year\n    delete opts.month\n    delete opts.day\n  }\n\n  if (granularity === 'day') {\n    delete opts.second\n    delete opts.hour\n    delete opts.minute\n    delete opts.timeZoneName\n  }\n  if (granularity === 'hour') {\n    delete opts.minute\n    delete opts.second\n  }\n\n  if (granularity === 'minute')\n    delete opts.second\n\n  return opts\n}\n\ntype GetDefaultDateStepProps = {\n  step?: DateStep\n}\n\nexport function normalizeDateStep(props?: GetDefaultDateStepProps): DateStep {\n  return defu(props?.step, {\n    year: 1,\n    month: 1,\n    day: 1,\n    hour: 1,\n    minute: 1,\n    second: 1,\n    millisecond: 1,\n  } satisfies DateStep)\n}\n\nexport function handleCalendarInitialFocus(calendar: HTMLElement) {\n  const selectedDay = calendar.querySelector<HTMLElement>('[data-selected]')\n  if (selectedDay)\n    return selectedDay.focus()\n\n  const today = calendar.querySelector<HTMLElement>('[data-today]')\n  if (today)\n    return today.focus()\n\n  const firstDay = calendar.querySelector<HTMLElement>('[data-reka-calendar-day]')\n  if (firstDay)\n    return firstDay.focus()\n}\n\nexport function normalizeHourCycle(hourCycle: HourCycle) {\n  if (hourCycle === 24)\n    return 'h23'\n  if (hourCycle === 12)\n    return 'h11'\n  return undefined\n}\n\nexport function normalizeHour12(hourCycle: HourCycle) {\n  if (hourCycle === 24)\n    return false\n  if (hourCycle === 12)\n    return true\n  return undefined\n}\n", "/*\n * Implementation ported from from from https://github.com/melt-ui/melt-ui/blob/develop/src/lib/builders/calendar/create.ts\n*/\n\nimport type { DateValue, DayOfWeek } from '@internationalized/date'\nimport type { Grid } from './types'\nimport type { DateRange } from '@/shared'\nimport { CalendarDate, endOfMonth, endOfYear, getDayOfWeek, startOfMonth, startOfYear } from '@internationalized/date'\nimport { getDaysInMonth, getLastFirstDayOfWeek, getNextLastDayOfWeek } from './comparators'\nimport { chunk } from './utils'\n\nexport type WeekDayFormat = 'narrow' | 'short' | 'long'\n\nexport type CreateSelectProps = {\n  /**\n   * The date object representing the date (usually the first day of the month/year).\n   */\n  dateObj: DateValue\n}\n\nexport type CreateMonthProps = {\n  /**\n   * The date object representing the month's date (usually the first day of the month).\n   */\n  dateObj: DateValue\n\n  /**\n   * The day of the week to start the calendar on (0 for Sunday, 1 for Monday, etc.).\n   */\n  weekStartsOn: number\n\n  /**\n   * Whether to always render 6 weeks in the calendar, even if the month doesn't\n   * span 6 weeks.\n   */\n  fixedWeeks: boolean\n\n  /**\n   * The locale to use when creating the calendar month.\n   */\n  locale: string\n}\n\n/**\n * Retrieves an array of date values representing the days between\n * the provided start and end dates.\n */\nexport function getDaysBetween(start: DateValue, end: DateValue) {\n  const days: DateValue[] = []\n  let dCurrent = start.add({ days: 1 })\n  const dEnd = end\n  while (dCurrent.compare(dEnd) < 0) {\n    days.push(dCurrent)\n    dCurrent = dCurrent.add({ days: 1 })\n  }\n  return days\n}\n\nexport function createMonth(props: CreateMonthProps): Grid<DateValue> {\n  const { dateObj, weekStartsOn, fixedWeeks, locale } = props\n  const daysInMonth = getDaysInMonth(dateObj)\n\n  const datesArray = Array.from({ length: daysInMonth }, (_, i) => dateObj.set({ day: i + 1 }))\n\n  const firstDayOfMonth = startOfMonth(dateObj)\n  const lastDayOfMonth = endOfMonth(dateObj)\n\n  const lastSunday = getLastFirstDayOfWeek(firstDayOfMonth, weekStartsOn, locale)\n  const nextSaturday = getNextLastDayOfWeek(lastDayOfMonth, weekStartsOn, locale)\n\n  const lastMonthDays = getDaysBetween(lastSunday.subtract({ days: 1 }), firstDayOfMonth)\n  const nextMonthDays = getDaysBetween(lastDayOfMonth, nextSaturday.add({ days: 1 }))\n\n  const totalDays = lastMonthDays.length + datesArray.length + nextMonthDays.length\n\n  if (fixedWeeks && totalDays < 42) {\n    const extraDays = 42 - totalDays\n\n    let startFrom = nextMonthDays[nextMonthDays.length - 1]\n\n    if (!startFrom)\n      startFrom = endOfMonth(dateObj)\n\n    const extraDaysArray = Array.from({ length: extraDays }, (_, i) => {\n      const incr = i + 1\n      return startFrom.add({ days: incr })\n    })\n    nextMonthDays.push(...extraDaysArray)\n  }\n\n  const allDays = lastMonthDays.concat(datesArray, nextMonthDays)\n\n  const weeks = chunk(allDays, 7)\n\n  return {\n    value: dateObj,\n    cells: allDays,\n    rows: weeks,\n  }\n}\n\ntype SetMonthProps = CreateMonthProps & {\n  numberOfMonths: number | undefined\n  currentMonths?: Grid<DateValue>[]\n}\n\ntype SetYearProps = CreateSelectProps & {\n  numberOfMonths?: number\n  pagedNavigation?: boolean\n}\n\ntype SetDecadeProps = CreateSelectProps & {\n  startIndex?: number\n  endIndex: number\n}\n\nexport function startOfDecade(dateObj: DateValue) {\n  // round to the lowest nearest 10 when building the decade\n  return startOfYear(dateObj.subtract({ years: dateObj.year - Math.floor(dateObj.year / 10) * 10 }).set({ day: 1, month: 1 }))\n}\n\nexport function endOfDecade(dateObj: DateValue) {\n  // round to the lowest nearest 10 when building the decade\n  return endOfYear(dateObj.add({ years: Math.ceil((dateObj.year + 1) / 10) * 10 - dateObj.year - 1 }).set({ day: 35, month: 12 }))\n}\n\nexport function createDecade(props: SetDecadeProps): DateValue[] {\n  const { dateObj, startIndex, endIndex } = props\n\n  const decadeArray = Array.from({ length: Math.abs(startIndex ?? 0) + endIndex }, (_, i) =>\n    i <= Math.abs((startIndex ?? 0))\n      ? dateObj.subtract({ years: i }).set({ day: 1, month: 1 })\n      : dateObj.add({ years: i - endIndex }).set({ day: 1, month: 1 }))\n\n  decadeArray.sort((a: DateValue, b: DateValue) => a.year - b.year)\n\n  return decadeArray\n}\n\nexport function createYear(props: SetYearProps): DateValue[] {\n  const { dateObj, numberOfMonths = 1, pagedNavigation = false } = props\n\n  if (numberOfMonths && pagedNavigation) {\n    const monthsArray = Array.from({ length: Math.floor(12 / numberOfMonths) }, (_, i) => startOfMonth(dateObj.set({ month: i * numberOfMonths + 1 })))\n\n    return monthsArray\n  }\n\n  const monthsArray = Array.from({ length: 12 }, (_, i) => startOfMonth(dateObj.set({ month: i + 1 })))\n  return monthsArray\n}\n\nexport function createMonths(props: SetMonthProps) {\n  const { numberOfMonths, dateObj, ...monthProps } = props\n\n  const months: Grid<DateValue>[] = []\n\n  if (!numberOfMonths || numberOfMonths === 1) {\n    months.push(\n      createMonth({\n        ...monthProps,\n        dateObj,\n      }),\n    )\n    return months\n  }\n\n  months.push(\n    createMonth({\n      ...monthProps,\n      dateObj,\n    }),\n  )\n\n  // Create all the months, starting with the current month\n  for (let i = 1; i < numberOfMonths; i++) {\n    const nextMonth = dateObj.add({ months: i })\n    months.push(\n      createMonth({\n        ...monthProps,\n        dateObj: nextMonth,\n      }),\n    )\n  }\n\n  return months\n}\n\nexport function createYearRange({ start, end }: DateRange): DateValue[] {\n  const years: DateValue[] = []\n\n  if (!start || !end)\n    return years\n\n  let current = startOfYear(start)\n\n  while (current.compare(end) <= 0) {\n    years.push(current)\n    // Move to the first day of the next year\n    current = startOfYear(current.add({ years: 1 }))\n  }\n\n  return years\n}\n\nexport function createDateRange({ start, end }: DateRange): DateValue[] {\n  const dates: DateValue[] = []\n\n  if (!start || !end)\n    return dates\n\n  let current = start\n\n  while (current.compare(end) <= 0) {\n    dates.push(current)\n    current = current.add({ days: 1 })\n  }\n\n  return dates\n}\n\n/**\n * Returns the locale-specific week number\n */\nexport function getWeekNumber(date: DateValue, locale: string = 'en-US', firstDayOfWeek?: DayOfWeek): number {\n  const firstDayOfYear = new CalendarDate(date.year, 1, 1)\n\n  const firstDayOfYearWeekday = getDayOfWeek(firstDayOfYear, locale, firstDayOfWeek)\n\n  const firstWeekStart = firstDayOfYear.subtract({ days: firstDayOfYearWeekday })\n\n  // If date is before the first week start It belongs to the last week of the previous year\n  if (date.compare(firstWeekStart) < 0) {\n    const prevYearDate = new CalendarDate(date.year - 1, 12, 31)\n    return getWeekNumber(prevYearDate, locale, firstDayOfWeek)\n  }\n\n  const days = getDaysBetween(firstWeekStart, date)\n\n  // Week number is days divided by 7 plus 1\n  return Math.floor(days.length / 7) + 1\n}\n", "/*\n  * Implementation ported from https://github.com/melt-ui/melt-ui/blob/develop/src/lib/internal/helpers/date/formatter.ts\n*/\n\nimport type { DateValue, ZonedDateTime } from '@internationalized/date'\nimport { DateFormatter, getLocalTimeZone, today } from '@internationalized/date'\nimport { ref } from 'vue'\nimport { hasTime, isZonedDateTime, toDate } from '@/date'\n\nexport interface DateFormatterOptions extends Intl.DateTimeFormatOptions {\n  calendar?: string\n}\n\nexport type Formatter = {\n  getLocale: () => string\n  setLocale: (newLocale: string) => void\n  custom: (date: Date, options: DateFormatterOptions) => string\n  selectedDate: (date: DateValue, includeTime?: boolean) => string\n  dayOfWeek: (date: Date, length?: DateFormatterOptions['weekday']) => string\n  fullMonthAndYear: (date: Date, options?: DateFormatterOptions) => string\n  fullMonth: (date: Date, options?: DateFormatterOptions) => string\n  fullYear: (date: Date, options?: DateFormatterOptions) => string\n  dayPeriod: (date: Date) => string\n  part: (dateObj: DateValue, type: Intl.DateTimeFormatPartTypes, options?: DateFormatterOptions) => string\n  toParts: (date: DateValue, options?: DateFormatterOptions) => Intl.DateTimeFormatPart[]\n  getMonths: () => { label: string, value: number }[]\n}\n\n/**\n * Creates a wrapper around the `DateFormatter`, which is\n * an improved version of the {@link Intl.DateTimeFormat} API,\n * that is used internally by the various date builders to\n * easily format dates in a consistent way.\n *\n * @see [DateFormatter](https://react-spectrum.adobe.com/internationalized/date/DateFormatter.html)\n */\nexport function useDateFormatter(initialLocale: string, opts: DateFormatterOptions = {}): Formatter {\n  const locale = ref(initialLocale)\n\n  function getLocale() {\n    return locale.value\n  }\n\n  function setLocale(newLocale: string) {\n    locale.value = newLocale\n  }\n\n  function custom(date: Date, options: DateFormatterOptions) {\n    return new DateFormatter(locale.value, { ...opts, ...options }).format(date)\n  }\n\n  function selectedDate(date: DateValue, includeTime = true) {\n    if (hasTime(date) && includeTime) {\n      return custom(toDate(date), {\n        dateStyle: 'long',\n        timeStyle: 'long',\n      })\n    }\n    else {\n      return custom(toDate(date), {\n        dateStyle: 'long',\n      })\n    }\n  }\n\n  function fullMonthAndYear(date: Date, options: DateFormatterOptions = {}) {\n    return new DateFormatter(locale.value, { ...opts, month: 'long', year: 'numeric', ...options }).format(date)\n  }\n\n  function fullMonth(date: Date, options: DateFormatterOptions = {}) {\n    return new DateFormatter(locale.value, { ...opts, month: 'long', ...options }).format(date)\n  }\n\n  function getMonths() {\n    const defaultDate = today(getLocalTimeZone())\n    const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    return months.map(item => ({ label: fullMonth(toDate(defaultDate.set({ month: item }))), value: item }))\n  }\n\n  function fullYear(date: Date, options: DateFormatterOptions = {}) {\n    return new DateFormatter(locale.value, { ...opts, year: 'numeric', ...options }).format(date)\n  }\n\n  function toParts(date: DateValue, options?: DateFormatterOptions) {\n    if (isZonedDateTime(date)) {\n      return new DateFormatter(locale.value, {\n        ...opts,\n        ...options,\n        timeZone: (date as ZonedDateTime).timeZone,\n      }).formatToParts(toDate(date))\n    }\n    else {\n      return new DateFormatter(locale.value, { ...opts, ...options }).formatToParts(toDate(date))\n    }\n  }\n\n  function dayOfWeek(date: Date, length: DateFormatterOptions['weekday'] = 'narrow') {\n    return new DateFormatter(locale.value, { ...opts, weekday: length }).format(date)\n  }\n\n  function dayPeriod(date: Date) {\n    const parts = new DateFormatter(locale.value, {\n      ...opts,\n      hour: 'numeric',\n      minute: 'numeric',\n    }).formatToParts(date)\n    const value = parts.find(p => p.type === 'dayPeriod')?.value\n    // Day period can be \"AM\"/\"PM\" or \"a.m.\"/\"p.m.\" in some locales\n    if (value === 'PM' || value === 'p.m.')\n      return 'PM'\n\n    return 'AM'\n  }\n\n  const defaultPartOptions: DateFormatterOptions = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  }\n\n  function part(\n    dateObj: DateValue,\n    type: Intl.DateTimeFormatPartTypes,\n    options: DateFormatterOptions = {},\n  ) {\n    const opts = { ...defaultPartOptions, ...options }\n    const parts = toParts(dateObj, opts)\n    const part = parts.find(p => p.type === type)\n    return part ? part.value : ''\n  }\n\n  return {\n    setLocale,\n    getLocale,\n    fullMonth,\n    fullYear,\n    fullMonthAndYear,\n    toParts,\n    custom,\n    part,\n    dayPeriod,\n    selectedDate,\n    dayOfWeek,\n    getMonths,\n  }\n}\n", "import type { Ref } from 'vue'\nimport type { Direction } from './types'\nimport { computed, ref } from 'vue'\nimport { injectConfigProviderContext } from '@/ConfigProvider/ConfigProvider.vue'\n\nexport function useDirection(dir?: Ref<Direction | undefined>) {\n  const context = injectConfigProviderContext({\n    dir: ref('ltr'),\n  })\n  return computed(() => dir?.value || context.dir?.value || 'ltr')\n}\n", "import { camelize, getCurrentInstance, toHandlerKey } from 'vue'\n\n// Vue doesn't have emits forwarding, in order to bind the emits we have to convert events into `onXXX` handlers\n// issue: https://github.com/vuejs/core/issues/5917\n/**\n * The `useEmitAsProps` function is a TypeScript utility that converts emitted events into props for a\n * Vue component.\n * @param emit - The `emit` parameter is a function that is used to emit events from a component. It\n * takes two parameters: `name` which is the name of the event to be emitted, and `...args` which are\n * the arguments to be passed along with the event.\n * @returns The function `useEmitAsProps` returns an object that maps event names to functions that\n * call the `emit` function with the corresponding event name and arguments.\n */\nexport function useEmitAsProps<Name extends string>(\n  emit: (name: Name, ...args: any[]) => void,\n) {\n  const vm = getCurrentInstance()\n\n  const events = vm?.type.emits as Name[]\n  const result: Record<string, any> = {}\n\n  if (!events?.length) {\n    console.warn(\n      `No emitted event found. Please check component: ${vm?.type.__name}`,\n    )\n  }\n\n  events?.forEach((ev) => {\n    result[toHandlerKey(camelize(ev))] = (...arg: any) => emit(ev, ...arg)\n  })\n  return result\n}\n", "import type { MaybeRef } from 'vue'\nimport { computed, unref } from 'vue'\n\n/**\n * Provides locale-aware string filtering functions.\n * Uses `Intl.Collator` for comparison to ensure proper Unicode handling.\n *\n * @param options - Optional collator options to customize comparison behavior.\n *   See [Intl.CollatorOptions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Collator/Collator#options) for details.\n * @returns An object with methods to check if a string starts with, ends with, or contains a substring.\n *\n * @example\n * const { startsWith, endsWith, contains } = useFilter();\n *\n * startsWith('hello', 'he'); // true\n * endsWith('hello', 'lo'); // true\n * contains('hello', 'ell'); // true\n */\nexport function useFilter(options?: MaybeRef<Intl.CollatorOptions>) {\n  const computedOptions = computed(() => unref(options))\n  const collator = computed(() => new Intl.Collator('en', { usage: 'search', ...computedOptions.value }))\n\n  const startsWith = (string: string, substring: string) => {\n    if (substring.length === 0)\n      return true\n\n    string = string.normalize('NFC')\n    substring = substring.normalize('NFC')\n    return collator.value.compare(string.slice(0, substring.length), substring) === 0\n  }\n\n  const endsWith = (string: string, substring: string) => {\n    if (substring.length === 0)\n      return true\n\n    string = string.normalize('NFC')\n    substring = substring.normalize('NFC')\n    return collator.value.compare(string.slice(-substring.length), substring) === 0\n  }\n\n  const contains = (string: string, substring: string) => {\n    if (substring.length === 0)\n      return true\n\n    string = string.normalize('NFC')\n    substring = substring.normalize('NFC')\n\n    let scan = 0\n    const sliceLen = substring.length\n    for (; scan + sliceLen <= string.length; scan++) {\n      const slice = string.slice(scan, scan + sliceLen)\n      if (collator.value.compare(substring, slice) === 0)\n        return true\n    }\n\n    return false\n  }\n\n  return {\n    startsWith,\n    endsWith,\n    contains,\n  }\n}\n", "import { isClient } from '@vueuse/shared'\nimport { watchEffect } from 'vue'\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nexport function useFocusGuards() {\n  watchEffect((cleanupFn) => {\n    if (!isClient)\n      return\n    const edgeGuards = document.querySelectorAll('[data-reka-focus-guard]')\n    document.body.insertAdjacentElement(\n      'afterbegin',\n      edgeGuards[0] ?? createFocusGuard(),\n    )\n    document.body.insertAdjacentElement(\n      'beforeend',\n      edgeGuards[1] ?? createFocusGuard(),\n    )\n    count++\n\n    cleanupFn(() => {\n      if (count === 1) {\n        document\n          .querySelectorAll('[data-reka-focus-guard]')\n          .forEach(node => node.remove())\n      }\n      count--\n    })\n  })\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span')\n  element.setAttribute('data-reka-focus-guard', '')\n  element.tabIndex = 0\n  element.style.outline = 'none'\n  element.style.opacity = '0'\n  element.style.position = 'fixed'\n  element.style.pointerEvents = 'none'\n  return element\n}\n", "import type { MaybeElementRef } from '@vueuse/core'\nimport { toValue, unrefElement } from '@vueuse/core'\nimport { computed } from 'vue'\n\nexport function useFormControl(el: MaybeElementRef) {\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  return computed(() => toValue(el) ? Boolean(unrefElement(el)?.closest('form')) : true)\n}\n", "import type { ComponentPublicInstance } from 'vue'\n// reference: https://github.com/vuejs/rfcs/issues/258#issuecomment-1068697672\nimport { unrefElement } from '@vueuse/core'\nimport { computed, getCurrentInstance, ref } from 'vue'\n\nexport function useForwardExpose<T extends ComponentPublicInstance>() {\n  const instance = getCurrentInstance()!\n\n  const currentRef = ref<Element | T | null>()\n  const currentElement = computed<HTMLElement>(() => {\n    // $el could be text/comment for non-single root normal or text root, thus we retrieve the nextElementSibling\n    // @ts-expect-error ignore ts error\n    return ['#text', '#comment'].includes(currentRef.value?.$el.nodeName) ? currentRef.value?.$el.nextElementSibling : unrefElement(currentRef)\n  })\n\n  // Do give us credit if you reference our code :D\n  // localExpose should only be assigned once else will create infinite loop\n  const localExpose: Record<string, any> | null = Object.assign({}, instance.exposed)\n  const ret: Record<string, any> = {}\n\n  // retrieve props for current instance\n  for (const key in instance.props) {\n    Object.defineProperty(ret, key, {\n      enumerable: true,\n      configurable: true,\n      get: () => instance.props[key],\n    })\n  }\n\n  // retrieve default exposed value\n  if (Object.keys(localExpose).length > 0) {\n    for (const key in localExpose) {\n      Object.defineProperty(ret, key, {\n        enumerable: true,\n        configurable: true,\n        get: () => localExpose![key],\n      })\n    }\n  }\n\n  // retrieve original first root element\n  Object.defineProperty(ret, '$el', {\n    enumerable: true,\n    configurable: true,\n    get: () => instance.vnode.el,\n  })\n  instance.exposed = ret\n\n  function forwardRef(ref: Element | T | null) {\n    currentRef.value = ref\n\n    if (!ref)\n      return\n\n    // retrieve the forwarded element\n    Object.defineProperty(ret, '$el', {\n      enumerable: true,\n      configurable: true,\n      get: () => (ref instanceof Element ? ref : ref.$el),\n    })\n\n    instance.exposed = ret\n  }\n\n  return { forwardRef, currentRef, currentElement }\n}\n", "import type { MaybeRefOrGetter } from 'vue'\nimport { camelize, computed, getCurrentInstance, toRef } from 'vue'\n\ninterface PropOptions {\n  type?: any\n  required?: boolean\n  default?: any\n}\n\n/**\n * The `useForwardProps` function in TypeScript takes in a set of props and returns a computed value\n * that combines default props with assigned props from the current instance.\n * @param {T} props - The `props` parameter is an object that represents the props passed to a\n * component.\n * @returns computed value that combines the default props, preserved props, and assigned props.\n */\nexport function useForwardProps<T extends Record<string, any>>(props: MaybeRefOrGetter<T>) {\n  const vm = getCurrentInstance()\n  // Default value for declared props\n  const defaultProps = Object.keys(vm?.type.props ?? {}).reduce((prev, curr) => {\n    const defaultValue = (vm?.type.props[curr] as PropOptions).default\n    if (defaultValue !== undefined)\n      prev[curr as keyof T] = defaultValue\n    return prev\n  }, {} as T)\n\n  const refProps = toRef(props)\n  return computed(() => {\n    const preservedProps = {} as T\n    const assignedProps = vm?.vnode.props ?? {}\n\n    Object.keys(assignedProps).forEach((key) => {\n      preservedProps[camelize(key) as keyof T] = assignedProps[key]\n    })\n\n    // Only return value from the props parameter\n    return Object.keys({ ...defaultProps, ...preservedProps }).reduce((prev, curr) => {\n      if (refProps.value[curr] !== undefined)\n        prev[curr as keyof T] = refProps.value[curr]\n      return prev\n    }, {} as T)\n  })\n}\n", "import type { MaybeRefOrGetter } from 'vue'\nimport { computed } from 'vue'\nimport { useEmitAsProps } from './useEmitAsProps'\nimport { useForwardProps } from './useForwardProps'\n\n/**\n * The function `useForwardPropsEmits` takes in props and an optional emit function, and returns a\n * computed object that combines the parsed props and emits as props.\n * @param {T} props - The `props` parameter is of type `T`, which is a generic type that extends the\n * parameters of the `useForwardProps` function. It represents the props object that is passed to the\n * `useForwardProps` function.\n * @param [emit] - The `emit` parameter is a function that can be used to emit events. It takes two\n * arguments: `name`, which is the name of the event to be emitted, and `args`, which are the arguments\n * to be passed along with the event.\n * @returns a computed property that combines the parsed\n * props and emits as props.\n */\nexport function useForwardPropsEmits<T extends Record<string, any>, Name extends string>(props: MaybeRefOrGetter<T>, emit?: (name: Name, ...args: any[]) => void) {\n  const parsedProps = useForwardProps(props)\n  const emitsAsProps = emit ? useEmitAsProps(emit) : {}\n\n  return computed(() => ({\n    ...parsedProps.value,\n    ...emitsAsProps,\n  }))\n}\n", "import type { Ref } from 'vue'\nimport type { Side } from '@/Popper/utils'\nimport { createEventHook, refAutoReset } from '@vueuse/shared'\nimport { ref, watchEffect } from 'vue'\n\nexport function useGraceArea(triggerElement: Ref<HTMLElement | undefined>, containerElement: Ref<HTMLElement | undefined>) {\n// Reset the inTransit state if idle/scrolled.\n  const isPointerInTransit = refAutoReset(false, 300)\n\n  const pointerGraceArea = ref<Polygon | null>(null)\n  const pointerExit = createEventHook<void>()\n\n  function handleRemoveGraceArea() {\n    pointerGraceArea.value = null\n    isPointerInTransit.value = false\n  }\n\n  function handleCreateGraceArea(event: PointerEvent, hoverTarget: HTMLElement) {\n    const currentTarget = event.currentTarget as HTMLElement\n    const exitPoint = { x: event.clientX, y: event.clientY }\n    const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect())\n    const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide)\n    const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect())\n    const graceArea = getHull([...paddedExitPoints, ...hoverTargetPoints])\n    pointerGraceArea.value = graceArea\n    isPointerInTransit.value = true\n  }\n\n  watchEffect((cleanupFn) => {\n    if (triggerElement.value && containerElement.value) {\n      const handleTriggerLeave = (event: PointerEvent) => handleCreateGraceArea(event, containerElement.value!)\n      const handleContentLeave = (event: PointerEvent) => handleCreateGraceArea(event, triggerElement.value!)\n\n      triggerElement.value.addEventListener('pointerleave', handleTriggerLeave)\n      containerElement.value.addEventListener('pointerleave', handleContentLeave)\n\n      cleanupFn(() => {\n        triggerElement.value?.removeEventListener('pointerleave', handleTriggerLeave)\n        containerElement.value?.removeEventListener('pointerleave', handleContentLeave)\n      })\n    }\n  })\n\n  watchEffect((cleanupFn) => {\n    if (pointerGraceArea.value) {\n      const handleTrackPointerGrace = (event: PointerEvent) => {\n        if (!pointerGraceArea.value || !(event.target instanceof HTMLElement))\n          return\n\n        const target = event.target\n        const pointerPosition = { x: event.clientX, y: event.clientY }\n        const hasEnteredTarget = triggerElement.value?.contains(target) || containerElement.value?.contains(target)\n        const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea.value)\n        const isAnotherGraceAreaTrigger = !!target.closest('[data-grace-area-trigger]')\n\n        if (hasEnteredTarget) {\n          handleRemoveGraceArea()\n        }\n        else if (isPointerOutsideGraceArea || isAnotherGraceAreaTrigger) {\n          handleRemoveGraceArea()\n          pointerExit.trigger()\n        }\n      }\n      triggerElement.value?.ownerDocument.addEventListener('pointermove', handleTrackPointerGrace)\n\n      cleanupFn(() => triggerElement.value?.ownerDocument.removeEventListener('pointermove', handleTrackPointerGrace))\n    }\n  })\n\n  return {\n    isPointerInTransit,\n    onPointerExit: pointerExit.on,\n  }\n}\n\ninterface Point { x: number, y: number }\n  type Polygon = Point[]\n\nfunction getExitSideFromRect(point: Point, rect: DOMRect): Side {\n  const top = Math.abs(rect.top - point.y)\n  const bottom = Math.abs(rect.bottom - point.y)\n  const right = Math.abs(rect.right - point.x)\n  const left = Math.abs(rect.left - point.x)\n\n  switch (Math.min(top, bottom, right, left)) {\n    case left:\n      return 'left'\n    case right:\n      return 'right'\n    case top:\n      return 'top'\n    case bottom:\n      return 'bottom'\n    default:\n      throw new Error('unreachable')\n  }\n}\n\nfunction getPaddedExitPoints(exitPoint: Point, exitSide: Side, padding = 5) {\n  const paddedExitPoints: Point[] = []\n  switch (exitSide) {\n    case 'top':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y + padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding },\n      )\n      break\n    case 'bottom':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y - padding },\n      )\n      break\n    case 'left':\n      paddedExitPoints.push(\n        { x: exitPoint.x + padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding },\n      )\n      break\n    case 'right':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x - padding, y: exitPoint.y + padding },\n      )\n      break\n  }\n  return paddedExitPoints\n}\n\nfunction getPointsFromRect(rect: DOMRect) {\n  const { top, right, bottom, left } = rect\n  return [\n    { x: left, y: top },\n    { x: right, y: top },\n    { x: right, y: bottom },\n    { x: left, y: bottom },\n  ]\n}\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point\n  let inside = false\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x\n    const yi = polygon[i].y\n    const xj = polygon[j].x\n    const yj = polygon[j].y\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)\n    if (intersect)\n      inside = !inside\n  }\n\n  return inside\n}\n\n// Returns a new array of points representing the convex hull of the given set of points.\n// https://www.nayuki.io/page/convex-hull-algorithm\nfunction getHull<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  const newPoints: Array<P> = points.slice()\n  newPoints.sort((a: Point, b: Point) => {\n    if (a.x < b.x)\n      return -1\n    else if (a.x > b.x)\n      return +1\n    else if (a.y < b.y)\n      return -1\n    else if (a.y > b.y)\n      return +1\n    else return 0\n  })\n  return getHullPresorted(newPoints)\n}\n\n// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\nfunction getHullPresorted<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  if (points.length <= 1)\n    return points.slice()\n\n  const upperHull: Array<P> = []\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i]\n    while (upperHull.length >= 2) {\n      const q = upperHull[upperHull.length - 1]\n      const r = upperHull[upperHull.length - 2]\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n        upperHull.pop()\n      else break\n    }\n    upperHull.push(p)\n  }\n  upperHull.pop()\n\n  const lowerHull: Array<P> = []\n  for (let i = points.length - 1; i >= 0; i--) {\n    const p = points[i]\n    while (lowerHull.length >= 2) {\n      const q = lowerHull[lowerHull.length - 1]\n      const r = lowerHull[lowerHull.length - 2]\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n        lowerHull.pop()\n      else break\n    }\n    lowerHull.push(p)\n  }\n  lowerHull.pop()\n\n  if (\n    upperHull.length === 1\n    && lowerHull.length === 1\n    && upperHull[0].x === lowerHull[0].x\n    && upperHull[0].y === lowerHull[0].y\n  ) {\n    return upperHull\n  }\n\n  else {\n    return upperHull.concat(lowerHull)\n  }\n}\n", "var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n};\nvar counterMap = new WeakMap();\nvar uncontrolledNodes = new WeakMap();\nvar markerMap = {};\nvar lockCount = 0;\nvar unwrapHost = function (node) {\n    return node && (node.host || unwrapHost(node.parentNode));\n};\nvar correctTargets = function (parent, targets) {\n    return targets\n        .map(function (target) {\n        if (parent.contains(target)) {\n            return target;\n        }\n        var correctedTarget = unwrapHost(target);\n        if (correctedTarget && parent.contains(correctedTarget)) {\n            return correctedTarget;\n        }\n        console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');\n        return null;\n    })\n        .filter(function (x) { return Boolean(x); });\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Undo} undo command\n */\nvar applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    if (!markerMap[markerName]) {\n        markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var elementsToStop = new Set(targets);\n    var keep = function (el) {\n        if (!el || elementsToKeep.has(el)) {\n            return;\n        }\n        elementsToKeep.add(el);\n        keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    var deep = function (parent) {\n        if (!parent || elementsToStop.has(parent)) {\n            return;\n        }\n        Array.prototype.forEach.call(parent.children, function (node) {\n            if (elementsToKeep.has(node)) {\n                deep(node);\n            }\n            else {\n                try {\n                    var attr = node.getAttribute(controlAttribute);\n                    var alreadyHidden = attr !== null && attr !== 'false';\n                    var counterValue = (counterMap.get(node) || 0) + 1;\n                    var markerValue = (markerCounter.get(node) || 0) + 1;\n                    counterMap.set(node, counterValue);\n                    markerCounter.set(node, markerValue);\n                    hiddenNodes.push(node);\n                    if (counterValue === 1 && alreadyHidden) {\n                        uncontrolledNodes.set(node, true);\n                    }\n                    if (markerValue === 1) {\n                        node.setAttribute(markerName, 'true');\n                    }\n                    if (!alreadyHidden) {\n                        node.setAttribute(controlAttribute, 'true');\n                    }\n                }\n                catch (e) {\n                    console.error('aria-hidden: cannot operate on ', node, e);\n                }\n            }\n        });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n        hiddenNodes.forEach(function (node) {\n            var counterValue = counterMap.get(node) - 1;\n            var markerValue = markerCounter.get(node) - 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            if (!counterValue) {\n                if (!uncontrolledNodes.has(node)) {\n                    node.removeAttribute(controlAttribute);\n                }\n                uncontrolledNodes.delete(node);\n            }\n            if (!markerValue) {\n                node.removeAttribute(markerName);\n            }\n        });\n        lockCount--;\n        if (!lockCount) {\n            // clear\n            counterMap = new WeakMap();\n            counterMap = new WeakMap();\n            uncontrolledNodes = new WeakMap();\n            markerMap = {};\n        }\n    };\n};\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-aria-hidden'; }\n    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    // we should not hide aria-live elements - https://github.com/theKashey/aria-hidden/issues/10\n    // and script elements, as they have no impact on accessibility.\n    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live], script')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n};\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var inertOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-inert-ed'; }\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n        return function () { return null; };\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n};\n/**\n * @returns if current browser supports inert\n */\nexport var supportsInert = function () {\n    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n};\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Undo} undo command\n */\nexport var suppressOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) { markerName = 'data-suppressed'; }\n    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n};\n", "import type { MaybeElementRef } from '@vueuse/core'\nimport { unrefElement } from '@vueuse/core'\nimport { hideOthers } from 'aria-hidden'\nimport { onUnmounted, watch } from 'vue'\n\n/**\n * The `useHideOthers` function is a TypeScript function that takes a target element reference and\n * hides all other elements in ARIA when the target element is present, and restores the visibility of the\n * hidden elements when the target element is removed.\n * @param {MaybeElementRef} target - The `target` parameter is a reference to the element that you want\n * to hide other elements when it is clicked or focused.\n */\nexport function useHideOthers(target: MaybeElementRef) {\n  let undo: ReturnType<typeof hideOthers>\n  watch(() => unrefElement(target), (el) => {\n    // disable hideOthers on test mode\n    if (import.meta.env.MODE === 'test')\n      return\n    if (el)\n      undo = hideOthers(el)\n    else if (undo)\n      undo()\n  })\n\n  onUnmounted(() => {\n    if (undo)\n      undo()\n  })\n}\n", "import * as vue from 'vue'\n// Inspired from https://github.com/tailwindlabs/headlessui/issues/2913\n// as the alternative, and a fallback for Vue version < 3.5\nimport { injectConfigProviderContext } from '@/ConfigProvider/ConfigProvider.vue'\n\nlet count = 0\n/**\n * The `useId` function generates a unique identifier using a provided deterministic ID or a default\n * one prefixed with \"reka-\", or the provided one via `useId` props from `<ConfigProvider>`.\n * @param {string | null | undefined} [deterministicId] - The `useId` function you provided takes an\n * optional parameter `deterministicId`, which can be a string, null, or undefined. If\n * `deterministicId` is provided, the function will return it. Otherwise, it will generate an id using\n * the `useId` function obtained\n */\nexport function useId(deterministicId?: string | null | undefined, prefix = 'reka') {\n  if (deterministicId)\n    return deterministicId\n\n  if ('useId' in vue) {\n    return `${prefix}-${vue.useId?.()}`\n  }\n\n  const configProviderContext = injectConfigProviderContext({ useId: undefined })\n  \n  if (configProviderContext.useId) {\n    return `${prefix}-${configProviderContext.useId()}`\n  }\n\n  return `${prefix}-${++count}`\n}\n", "export function useKbd() {\n  return {\n    ALT: 'Alt',\n    ARROW_DOWN: 'ArrowDown',\n    ARROW_LEFT: 'ArrowLeft',\n    ARROW_RIGHT: 'ArrowRight',\n    ARROW_UP: 'ArrowUp',\n    BACKSPACE: 'Backspace',\n    CAPS_LOCK: 'CapsLock',\n    CONTROL: 'Control',\n    DELETE: 'Delete',\n    END: 'End',\n    ENTER: 'Enter',\n    ESCAPE: 'Escape',\n    F1: 'F1',\n    F10: 'F10',\n    F11: 'F11',\n    F12: 'F12',\n    F2: 'F2',\n    F3: 'F3',\n    F4: 'F4',\n    F5: 'F5',\n    F6: 'F6',\n    F7: 'F7',\n    F8: 'F8',\n    F9: 'F9',\n    HOME: 'Home',\n    META: 'Meta',\n    PAGE_DOWN: 'PageDown',\n    PAGE_UP: 'PageUp',\n    SHIFT: 'Shift',\n    SPACE: ' ',\n    TAB: 'Tab',\n    CTRL: 'Control',\n    ASTERISK: '*',\n    SPACE_CODE: 'Space',\n  }\n}\n\n/**\n * A wrapper around the internal kbd object to make it easier to use in tests\n * which require the key names to be wrapped in curly braces.\n */\nexport type KbdKeys = keyof ReturnType<typeof useKbd>\n\nexport function useTestKbd() {\n  const kbd = useKbd()\n\n  const initTestKbd: Record<KbdKeys, string> = Object.entries(kbd).reduce((acc, [key, value]) => {\n    acc[key as KbdKeys] = `{${value}}`\n    return acc\n  }, {} as Record<KbdKeys, string>)\n\n  return {\n    ...initTestKbd,\n    SHIFT_TAB: `{Shift>}{${kbd.TAB}}`,\n  }\n}\n", "import type { Ref } from 'vue'\nimport { computed, ref } from 'vue'\nimport { injectConfigProviderContext } from '@/ConfigProvider/ConfigProvider.vue'\n\nexport function useLocale(locale?: Ref<string | undefined>) {\n  const context = injectConfigProviderContext({\n    locale: ref('en'),\n  })\n  return computed(() => locale?.value || context.locale?.value || 'en')\n}\n", "import type { Ref, UnwrapNestedRefs } from 'vue'\nimport { ref } from 'vue'\nimport { findValuesBetween } from './arrays'\n\nexport function useSelectionBehavior<T>(\n  modelValue: Ref<T | T[]>,\n  props: UnwrapNestedRefs<{ multiple?: boolean, selectionBehavior?: 'toggle' | 'replace' }>,\n) {\n  const firstValue = ref()\n\n  const onSelectItem = (val: T, condition: (existingValue: T) => boolean) => {\n    // multiple select\n    if (props.multiple && Array.isArray(modelValue.value)) {\n      if (props.selectionBehavior === 'replace') {\n        modelValue.value = [val]\n        firstValue.value = val\n      }\n      else {\n        const index = modelValue.value.findIndex(v => condition(v))\n        if (index !== -1)\n          modelValue.value = modelValue.value.filter((_, i) => i !== index)\n        else\n          modelValue.value = [...modelValue.value, val]\n      }\n    }\n    // single select\n    else {\n      if (props.selectionBehavior === 'replace') {\n        modelValue.value = { ...val }\n      }\n      else {\n        if (!Array.isArray(modelValue.value) && condition(modelValue.value))\n          modelValue.value = undefined as any\n        else\n          modelValue.value = { ...val }\n      }\n    }\n    return modelValue.value\n  }\n\n  function handleMultipleReplace(intent: 'first' | 'last' | 'prev' | 'next', currentElement: HTMLElement | Element | null, getItems: () => { ref: HTMLElement, value?: any }[], options: any[]) {\n    if (!firstValue?.value || !props.multiple || !Array.isArray(modelValue.value))\n      return\n\n    const collection = getItems().filter(i => i.ref.dataset.disabled !== '')\n    const lastValue = collection.find(i => i.ref === currentElement)?.value\n    if (!lastValue)\n      return\n\n    let value: T[] | null = null\n    switch (intent) {\n      case 'prev':\n      case 'next': {\n        value = findValuesBetween(options, firstValue.value, lastValue)\n        break\n      }\n      case 'first': {\n        value = findValuesBetween(options, firstValue.value, options?.[0])\n        break\n      }\n      case 'last': {\n        value = findValuesBetween(options, firstValue.value, options?.[options.length - 1])\n        break\n      }\n    }\n\n    modelValue.value = value\n  }\n\n  return {\n    firstValue,\n    onSelectItem,\n    handleMultipleReplace,\n  }\n}\n", "import type { MaybeElementRef } from '@vueuse/core'\nimport { unrefElement } from '@vueuse/core'\nimport { computed, onMounted, ref } from 'vue'\n\nexport function useSize(element: MaybeElementRef) {\n  const size = ref<{ width: number, height: number }>()\n  const width = computed(() => size.value?.width ?? 0)\n  const height = computed(() => size.value?.height ?? 0)\n\n  onMounted(() => {\n    const el = unrefElement(element) as HTMLElement\n    if (el) {\n      // provide size as early as possible\n      size.value = { width: el.offsetWidth, height: el.offsetHeight }\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries))\n          return\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length)\n          return\n\n        const entry = entries[0]\n        let width: number\n        let height: number\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry.borderBoxSize\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry)\n            ? borderSizeEntry[0]\n            : borderSizeEntry\n          width = borderSize.inlineSize\n          height = borderSize.blockSize\n        }\n        else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = el.offsetWidth\n          height = el.offsetHeight\n        }\n\n        // temporary disable width/height from resize observer. borderSizeEntry seems to be incorrect\n        size.value = { width, height }\n      })\n\n      resizeObserver.observe(el, { box: 'border-box' })\n\n      return () => resizeObserver.unobserve(el)\n    }\n    else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      size.value = undefined\n    }\n  })\n\n  return {\n    width,\n    height,\n  }\n}\n", "import type { Ref } from 'vue'\nimport { ref } from 'vue'\n\ninterface Machine<S> {\n  [k: string]: { [k: string]: S }\n}\ntype MachineState<T> = keyof T\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (\n  x: infer R\n) => any\n  ? R\n  : never\n\n/**\n * The `useStateMachine` function is a TypeScript function that creates a state machine and returns the\n * current state and a dispatch function to update the state based on events.\n * @param initialState - The `initialState` parameter is the initial state of the state machine. It\n * represents the starting point of the state machine's state.\n * @param machine - The `machine` parameter is an object that represents a state machine. It should\n * have keys that correspond to the possible states of the machine, and the values should be objects\n * that represent the possible events and their corresponding next states.\n * @returns The `useStateMachine` function returns an object with two properties: `state` and\n * `dispatch`.\n */\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>,\n) {\n  const state = ref(initialState) as Ref<MachineState<M>>\n\n  function reducer(event: MachineEvent<M>) {\n    // @ts-expect-error  state.value is keyof M\n    const nextState = machine[state.value][event]\n    return nextState ?? state.value\n  }\n\n  const dispatch = (event: MachineEvent<M>) => {\n    state.value = reducer(event)\n  }\n\n  return {\n    state,\n    dispatch,\n  }\n}\n", "import { refAutoReset } from '@vueuse/shared'\nimport { getActiveElement } from './getActiveElement'\n\nexport function useTypeahead(callback?: (search: string) => void) {\n  // Reset `search` 1 second after it was last updated\n  const search = refAutoReset('', 1000)\n\n  const handleTypeaheadSearch = (key: string, items: { ref: HTMLElement, value?: any }[]) => {\n    search.value = search.value + key\n\n    if (callback) {\n      callback(key)\n    }\n    else {\n      const currentItem = getActiveElement()\n      const itemsWithTextValue = items.map(item => ({\n        ...item,\n        textValue: item.value?.textValue ?? item.ref.textContent?.trim() ?? '',\n      }))\n      const currentMatch = itemsWithTextValue.find(item => item.ref === currentItem)\n      const values = itemsWithTextValue.map(item => item.textValue)\n      const nextMatch = getNextMatch(values, search.value, currentMatch?.textValue)\n\n      const newItem = itemsWithTextValue.find(item => item.textValue === nextMatch)\n\n      if (newItem)\n        (newItem.ref as HTMLElement).focus()\n      return newItem?.ref\n    }\n  }\n\n  const resetTypeahead = () => {\n    search.value = ''\n  }\n\n  return {\n    search,\n    handleTypeaheadSearch,\n    resetTypeahead,\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nexport function wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length])\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nexport function getNextMatch(\n  values: string[],\n  search: string,\n  currentMatch?: string,\n) {\n  const isRepeated\n    = search.length > 1 && Array.from(search).every(char => char === search[0])\n  const normalizedSearch = isRepeated ? search[0] : search\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0))\n  const excludeCurrentMatch = normalizedSearch.length === 1\n  if (excludeCurrentMatch)\n    wrappedValues = wrappedValues.filter(v => v !== currentMatch)\n  const nextMatch = wrappedValues.find(value =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase()),\n  )\n  return nextMatch !== currentMatch ? nextMatch : undefined\n}\n", "import type { ComponentOptionsBase, DefineComponent, VNodeProps } from 'vue'\nimport type { ComponentProps } from 'vue-component-type-helpers'\nimport { h, mergeProps } from 'vue'\nimport { useForwardExpose } from './useForwardExpose'\n\n// TODO: TEST\n\n// From vue next\n// https://github.com/vuejs/core/blob/1f2a652a9d2e3bec472fb1786a4c16d6ccfa1fb1/packages/runtime-core/src/h.ts#L53-L58\ntype RawProps = VNodeProps & {\n  // used to differ from a single VNode object as children\n  __v_isVNode?: never\n  // used to differ from Array children\n  [Symbol.iterator]?: never\n} & Record<string, any>\n\n// types inspired from vue-test-utils\n// https://github.com/vuejs/test-utils/blob/main/src/mount.ts#L36\ninterface MountingOptions<Props> {\n  /**\n   * Default props for the component\n   */\n  props?: (RawProps & Props) | ({} extends Props ? null : never) | ((attrs: Record<string, any>) => (RawProps & Props))\n  /**\n   * Pass attributes into the component\n   */\n  attrs?: Record<string, unknown>\n}\n\nexport function withDefault<\n  T,\n  C = T extends ((...args: any) => any) | (new (...args: any) => any)\n    ? T\n    : T extends { props?: infer Props }\n      ? DefineComponent<\n        Props extends Readonly<(infer PropNames)[]> | (infer PropNames)[]\n          ? { [key in PropNames extends string ? PropNames : string]?: any }\n          : Props\n      >\n      : DefineComponent,\n  P extends ComponentProps<C> = ComponentProps<C>,\n>(\n  originalComponent: T,\n  options?: MountingOptions<P>\n): T\n\nexport function withDefault<T extends ComponentOptionsBase<{}, {}, {}, any, any, any, any, any>>(WrappedComponent: T, options?: MountingOptions<any>) {\n  return ({\n    inheritAttrs: false,\n    name: `${WrappedComponent.__name ?? ''}Wrapper`,\n    setup(_, ctx) {\n      return () => {\n        const optionProps = typeof options?.props === 'function' ? options?.props(ctx.attrs) : options?.props\n        const { forwardRef } = useForwardExpose()\n\n        const mergedProps = mergeProps(optionProps, ctx.attrs)\n        return h(WrappedComponent, { ...mergedProps, ref: forwardRef }, ctx.slots)\n      }\n    },\n  }) as T\n}\n", "import type { Ref } from 'vue'\nimport { useStateMachine } from '@/shared'\nimport { defaultWindow } from '@vueuse/core'\nimport { isClient } from '@vueuse/shared'\nimport { computed, nextTick, onUnmounted, ref, watch } from 'vue'\n\nexport function usePresence(\n  present: Ref<boolean>,\n  node: Ref<HTMLElement | undefined>,\n) {\n  const stylesRef = ref<CSSStyleDeclaration>({} as any)\n  const prevAnimationNameRef = ref<string>('none')\n  const prevPresentRef = ref(present)\n  const initialState = present.value ? 'mounted' : 'unmounted'\n  let timeoutId: number | undefined\n  const ownerWindow = node.value?.ownerDocument.defaultView ?? defaultWindow\n\n  const { state, dispatch } = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  })\n\n  const dispatchCustomEvent = (name: 'enter' | 'after-enter' | 'leave' | 'after-leave') => {\n    // We only dispatch this event because CustomEvent is not available in Node18\n    // https://github.com/unovue/reka-ui/issues/930\n    if (isClient) {\n      const customEvent = new CustomEvent(name, { bubbles: false, cancelable: false })\n      node.value?.dispatchEvent(customEvent)\n    }\n  }\n\n  watch(\n    present,\n    async (currentPresent, prevPresent) => {\n      const hasPresentChanged = prevPresent !== currentPresent\n      await nextTick()\n      if (hasPresentChanged) {\n        const prevAnimationName = prevAnimationNameRef.value\n        const currentAnimationName = getAnimationName(node.value)\n\n        if (currentPresent) {\n          dispatch('MOUNT')\n          dispatchCustomEvent('enter')\n          if (currentAnimationName === 'none')\n            dispatchCustomEvent('after-enter')\n        }\n        else if (\n          currentAnimationName === 'none' || currentAnimationName === 'undefined'\n          || stylesRef.value?.display === 'none'\n        ) {\n          // If there is no exit animation or the element is hidden, animations won't run\n          // so we unmount instantly rv\n          dispatch('UNMOUNT')\n          dispatchCustomEvent('leave')\n          dispatchCustomEvent('after-leave')\n        }\n        else {\n          /**\n           * When `present` changes to `false`, we check changes to animation-name to\n           * determine whether an animation has started. We chose this approach (reading\n           * computed styles) because there is no `animationrun` event and `animationstart`\n           * fires after `animation-delay` has expired which would be too late.\n           */\n          const isAnimating = prevAnimationName !== currentAnimationName\n          if (prevPresent && isAnimating) {\n            dispatch('ANIMATION_OUT')\n            dispatchCustomEvent('leave')\n          }\n          else {\n            dispatch('UNMOUNT')\n            dispatchCustomEvent('after-leave')\n          }\n        }\n      }\n    },\n    { immediate: true },\n  )\n\n  /**\n   * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n   * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n   * make sure we only trigger ANIMATION_END for the currently active animation.\n   */\n  const handleAnimationEnd = (event: AnimationEvent) => {\n    const currentAnimationName = getAnimationName(node.value)\n    const isCurrentAnimation = currentAnimationName.includes(\n      CSS.escape(event.animationName),\n    )\n    const directionName = state.value === 'mounted' ? 'enter' : 'leave'\n    if (event.target === node.value && isCurrentAnimation) {\n      dispatchCustomEvent(`after-${directionName}`)\n      dispatch('ANIMATION_END')\n\n      if (!prevPresentRef.value) {\n        const currentFillMode = node.value.style.animationFillMode\n        node.value.style.animationFillMode = 'forwards'\n        // Reset the style after the node had time to unmount (for cases\n        // where the component chooses not to unmount). Doing this any\n        // sooner than `setTimeout` (e.g. with `requestAnimationFrame`)\n        // still causes a flash.\n        timeoutId = ownerWindow?.setTimeout(() => {\n          if (node.value?.style.animationFillMode === 'forwards') {\n            node.value.style.animationFillMode = currentFillMode\n          }\n        })\n      }\n    }\n    // if no animation, immediately trigger 'ANIMATION_END'\n    if (event.target === node.value && currentAnimationName === 'none')\n      dispatch('ANIMATION_END')\n  }\n  const handleAnimationStart = (event: AnimationEvent) => {\n    if (event.target === node.value) {\n      // if animation occurred, store its name as the previous animation.\n      prevAnimationNameRef.value = getAnimationName(node.value)\n    }\n  }\n\n  const watcher = watch(\n    node,\n    (newNode, oldNode) => {\n      if (newNode) {\n        stylesRef.value = getComputedStyle(newNode)\n        newNode.addEventListener('animationstart', handleAnimationStart)\n        newNode.addEventListener('animationcancel', handleAnimationEnd)\n        newNode.addEventListener('animationend', handleAnimationEnd)\n      }\n      else {\n        // Transition to the unmounted state if the node is removed prematurely.\n        // We avoid doing so during cleanup as the node may change but still exist.\n        dispatch('ANIMATION_END')\n\n        if (timeoutId !== undefined)\n          ownerWindow?.clearTimeout(timeoutId)\n        oldNode?.removeEventListener('animationstart', handleAnimationStart)\n        oldNode?.removeEventListener('animationcancel', handleAnimationEnd)\n        oldNode?.removeEventListener('animationend', handleAnimationEnd)\n      }\n    },\n    { immediate: true },\n  )\n\n  const stateWatcher = watch(state, () => {\n    const currentAnimationName = getAnimationName(node.value)\n    prevAnimationNameRef.value\n      = state.value === 'mounted' ? currentAnimationName : 'none'\n  })\n\n  onUnmounted(() => {\n    watcher()\n    stateWatcher()\n  })\n\n  const isPresent = computed(() =>\n    ['mounted', 'unmountSuspended'].includes(state.value),\n  )\n\n  return {\n    isPresent,\n  }\n}\n\nfunction getAnimationName(node?: HTMLElement) {\n  return node ? getComputedStyle(node).animationName || 'none' : 'none'\n}\n", "import type {\n  SlotsType,\n  VNode,\n} from 'vue'\nimport { unrefElement } from '@vueuse/core'\nimport {\n  defineComponent,\n  getCurrentInstance,\n  h,\n  ref,\n  toRefs,\n} from 'vue'\nimport { renderSlotFragments } from '@/shared'\nimport { usePresence } from './usePresence'\n\nexport interface PresenceProps {\n  /**\n   * Conditional to mount or unmount the child element. Similar to `v-if`\n   *\n   * @required true\n   */\n  present: boolean\n  /**\n   * Force the element to render all the time.\n   *\n   * Useful for programmatically render grandchild component with the exposed `present`\n   *\n   * @defaultValue false\n   */\n  forceMount?: boolean\n}\n\nexport default defineComponent({\n  name: 'Presence',\n  props: {\n    present: {\n      type: Boolean,\n      required: true,\n    },\n    forceMount: {\n      type: Boolean,\n    },\n  },\n  slots: {} as SlotsType<{\n    default: (opts: { present: boolean }) => any\n  }>,\n  setup(props, { slots, expose }) {\n    const { present, forceMount } = toRefs(props)\n\n    const node = ref<HTMLElement>()\n    // Mount composables once to prevent duplicated eventListener\n    const { isPresent } = usePresence(present, node)\n    expose({ present: isPresent })\n\n    let children = slots.default({ present: isPresent.value })\n    children = renderSlotFragments(children || [])\n    const instance = getCurrentInstance()\n\n    if (children && children?.length > 1) {\n      const componentName = instance?.parent?.type.name\n        ? `<${instance.parent.type.name} />`\n        : 'component'\n\n      throw new Error(\n        [\n          `Detected an invalid children for \\`${componentName}\\` for  \\`Presence\\` component.`,\n          '',\n          'Note: Presence works similarly to `v-if` directly, but it waits for animation/transition to finished before unmounting. So it expect only one direct child of valid VNode type.',\n          'You can apply a few solutions:',\n          [\n            'Provide a single child element so that `presence` directive attach correctly.',\n            'Ensure the first child is an actual element instead of a raw text node or comment node.',\n          ]\n            .map(line => `  - ${line}`)\n            .join('\\n'),\n        ].join('\\n'),\n      )\n    }\n\n    return () => {\n      if (forceMount.value || present.value || isPresent.value) {\n        return h(slots.default({ present: isPresent.value })[0] as VNode, {\n          ref: (v) => {\n            const el = unrefElement(v as HTMLElement)\n            if (typeof el?.hasAttribute === 'undefined')\n              return el\n\n            // special case to handle animation for PopperContent\n            if (el?.hasAttribute('data-reka-popper-content-wrapper'))\n              node.value = el.firstElementChild as HTMLElement\n            else\n              node.value = el\n\n            return el\n          },\n        })\n      }\n      else { return null }\n    }\n  },\n})\n", "import { cloneVNode, Comment, defineComponent, mergeProps } from 'vue'\nimport { renderSlotFragments } from '@/shared'\n\nexport const Slot = defineComponent({\n  name: 'PrimitiveSlot',\n  inheritAttrs: false,\n  setup(_, { attrs, slots }) {\n    return () => {\n      if (!slots.default)\n        return null\n\n      const children = renderSlotFragments(slots.default())\n      const firstNonCommentChildrenIndex = children.findIndex(child => child.type !== Comment)\n      if (firstNonCommentChildrenIndex === -1)\n        return children\n\n      const firstNonCommentChildren = children[firstNonCommentChildrenIndex]\n\n      // Remove props ref from being inferred\n      delete firstNonCommentChildren.props?.ref\n\n      // Manually merge props to ensure `firstNonCommentChildren.props`\n      // has higher priority than `attrs` and can override `attrs`.\n      // Otherwise `cloneVNode(firstNonCommentChildren, attrs)` will\n      // prioritize `attrs` and override `firstNonCommentChildren.props`.\n      const mergedProps = firstNonCommentChildren.props\n        ? mergeProps(attrs, firstNonCommentChildren.props)\n        : attrs\n      const cloned = cloneVNode({ ...firstNonCommentChildren, props: {} }, mergedProps)\n\n      if (children.length === 1)\n        return cloned\n\n      children[firstNonCommentChildrenIndex] = cloned\n      return children\n    }\n  },\n})\n", "import type { Component, PropType } from 'vue'\nimport { defineComponent, h } from 'vue'\nimport { Slot } from './Slot'\n\nexport type AsTag =\n  | 'a'\n  | 'button'\n  | 'div'\n  | 'form'\n  | 'h2'\n  | 'h3'\n  | 'img'\n  | 'input'\n  | 'label'\n  | 'li'\n  | 'nav'\n  | 'ol'\n  | 'p'\n  | 'span'\n  | 'svg'\n  | 'ul'\n  | 'template'\n  | ({} & string) // any other string\n\nexport interface PrimitiveProps {\n  /**\n   * Change the default rendered element for the one passed as a child, merging their props and behavior.\n   *\n   * Read our [Composition](https://www.reka-ui.com/docs/guides/composition) guide for more details.\n   */\n  asChild?: boolean\n  /**\n   * The element or component this component should render as. Can be overwritten by `asChild`.\n   * @defaultValue \"div\"\n   */\n  as?: AsTag | Component\n}\n\n// For self closing tags, don't provide default slots because of hydration issue\nconst SELF_CLOSING_TAGS = ['area', 'img', 'input']\n\nexport const Primitive = defineComponent({\n  name: 'Primitive',\n  inheritAttrs: false,\n  props: {\n    asChild: {\n      type: Boolean,\n      default: false,\n    },\n    as: {\n      type: [String, Object] as PropType<AsTag | Component>,\n      default: 'div',\n    },\n  },\n  setup(props, { attrs, slots }) {\n    const asTag = props.asChild ? 'template' : props.as\n\n    if (typeof asTag === 'string' && SELF_CLOSING_TAGS.includes(asTag))\n      return () => h(asTag, attrs)\n\n    if (asTag !== 'template')\n      return () => h(props.as, attrs, { default: slots.default })\n\n    return () => h(Slot, attrs, { default: slots.default })\n  },\n})\n", "import type { ComponentPublicInstance } from 'vue'\nimport { unrefElement } from '@vueuse/core'\nimport { computed, ref } from 'vue'\n\nexport function usePrimitiveElement<T extends ComponentPublicInstance>() {\n  const primitiveElement = ref<T>()\n  const currentElement = computed<HTMLElement>(() => ['#text', '#comment'].includes(primitiveElement.value?.$el.nodeName) ? primitiveElement.value?.$el.nextElementSibling : unrefElement(primitiveElement))\n\n  return {\n    primitiveElement,\n    currentElement,\n  }\n}\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { toRefs } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface CollapsibleRootProps extends PrimitiveProps {\n  /** The open state of the collapsible when it is initially rendered. <br> Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /** The controlled open state of the collapsible. Can be binded with `v-model`. */\n  open?: boolean\n  /** When `true`, prevents the user from interacting with the collapsible. */\n  disabled?: boolean\n  /** When `true`, the element will be unmounted on closed state. */\n  unmountOnHide?: boolean\n}\n\nexport type CollapsibleRootEmits = {\n  /** Event handler called when the open state of the collapsible changes. */\n  'update:open': [value: boolean]\n}\n\ninterface CollapsibleRootContext {\n  contentId: string\n  disabled?: Ref<boolean>\n  open: Ref<boolean>\n  unmountOnHide: Ref<boolean>\n  onOpenToggle: () => void\n}\n\nexport const [injectCollapsibleRootContext, provideCollapsibleRootContext]\n  = createContext<CollapsibleRootContext>('CollapsibleRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CollapsibleRootProps>(), {\n  open: undefined,\n  defaultOpen: false,\n  unmountOnHide: true,\n})\n\nconst emit = defineEmits<CollapsibleRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst { disabled, unmountOnHide } = toRefs(props)\n\nprovideCollapsibleRootContext({\n  contentId: '',\n  disabled,\n  open,\n  unmountOnHide,\n  onOpenToggle: () => {\n    if (disabled.value)\n      return\n\n    open.value = !open.value\n  },\n})\n\ndefineExpose({ open })\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"props.asChild\"\n    :data-state=\"open ? 'open' : 'closed'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n  >\n    <slot :open=\"open\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { toRefs } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface CollapsibleRootProps extends PrimitiveProps {\n  /** The open state of the collapsible when it is initially rendered. <br> Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /** The controlled open state of the collapsible. Can be binded with `v-model`. */\n  open?: boolean\n  /** When `true`, prevents the user from interacting with the collapsible. */\n  disabled?: boolean\n  /** When `true`, the element will be unmounted on closed state. */\n  unmountOnHide?: boolean\n}\n\nexport type CollapsibleRootEmits = {\n  /** Event handler called when the open state of the collapsible changes. */\n  'update:open': [value: boolean]\n}\n\ninterface CollapsibleRootContext {\n  contentId: string\n  disabled?: Ref<boolean>\n  open: Ref<boolean>\n  unmountOnHide: Ref<boolean>\n  onOpenToggle: () => void\n}\n\nexport const [injectCollapsibleRootContext, provideCollapsibleRootContext]\n  = createContext<CollapsibleRootContext>('CollapsibleRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CollapsibleRootProps>(), {\n  open: undefined,\n  defaultOpen: false,\n  unmountOnHide: true,\n})\n\nconst emit = defineEmits<CollapsibleRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst { disabled, unmountOnHide } = toRefs(props)\n\nprovideCollapsibleRootContext({\n  contentId: '',\n  disabled,\n  open,\n  unmountOnHide,\n  onOpenToggle: () => {\n    if (disabled.value)\n      return\n\n    open.value = !open.value\n  },\n})\n\ndefineExpose({ open })\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"props.asChild\"\n    :data-state=\"open ? 'open' : 'closed'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n  >\n    <slot :open=\"open\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CollapsibleContentProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n\nexport type CollapsibleContentEmits = {\n  contentFound: [void]\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\nimport { Presence } from '@/Presence'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\nimport { injectCollapsibleRootContext } from './CollapsibleRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<CollapsibleContentProps>()\nconst emits = defineEmits<CollapsibleContentEmits>()\n\nconst rootContext = injectCollapsibleRootContext()\nrootContext.contentId ||= useId(undefined, 'reka-collapsible-content')\n\nconst presentRef = ref<InstanceType<typeof Presence>>()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst width = ref(0)\nconst height = ref(0)\n\n// when opening we want it to immediately open to retrieve dimensions\n// when closing we delay `present` to retrieve dimensions before closing\nconst isOpen = computed(() => rootContext.open.value)\nconst isMountAnimationPrevented = ref(isOpen.value)\nconst currentStyle = ref<Record<string, string>>()\n\nwatch(\n  () => [isOpen.value, presentRef.value?.present],\n  async () => {\n    await nextTick()\n    const node = currentElement.value\n    if (!node)\n      return\n    currentStyle.value = currentStyle.value || {\n      transitionDuration: node.style.transitionDuration,\n      animationName: node.style.animationName,\n    }\n    // block any animations/transitions so the element renders at its full dimensions\n    node.style.transitionDuration = '0s'\n    node.style.animationName = 'none'\n\n    // get width and height from full dimensions\n    const rect = node.getBoundingClientRect()\n    height.value = rect.height\n    width.value = rect.width\n\n    // kick off any animations/transitions that were originally set up if it isn't the initial mount\n    if (!isMountAnimationPrevented.value) {\n      node.style.transitionDuration = currentStyle.value.transitionDuration\n      node.style.animationName = currentStyle.value.animationName\n    }\n  },\n  {\n    immediate: true,\n  },\n)\n\nconst skipAnimation = computed(() => isMountAnimationPrevented.value && rootContext.open.value)\n\nonMounted(() => {\n  requestAnimationFrame(() => {\n    isMountAnimationPrevented.value = false\n  })\n})\n\nuseEventListener(currentElement, 'beforematch', (ev) => {\n  requestAnimationFrame(() => {\n    rootContext.onOpenToggle()\n    emits('contentFound')\n  })\n})\n</script>\n\n<template>\n  <Presence\n    v-slot=\"{ present }\"\n    ref=\"presentRef\"\n    :present=\"forceMount || rootContext.open.value\"\n    :force-mount=\"true\"\n  >\n    <Primitive\n      v-bind=\"$attrs\"\n      :id=\"rootContext.contentId\"\n      :ref=\"forwardRef\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      :hidden=\"!present ? rootContext.unmountOnHide.value ? '' : 'until-found' : undefined\"\n      :data-state=\"skipAnimation ? undefined : rootContext.open.value ? 'open' : 'closed'\"\n      :data-disabled=\"rootContext.disabled?.value ? '' : undefined\"\n      :style=\"{\n        [`--reka-collapsible-content-height`]: `${height}px`,\n        [`--reka-collapsible-content-width`]: `${width}px`,\n      }\"\n    >\n      <slot v-if=\"rootContext.unmountOnHide.value ? present : true\" />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CollapsibleContentProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n\nexport type CollapsibleContentEmits = {\n  contentFound: [void]\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\nimport { Presence } from '@/Presence'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\nimport { injectCollapsibleRootContext } from './CollapsibleRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<CollapsibleContentProps>()\nconst emits = defineEmits<CollapsibleContentEmits>()\n\nconst rootContext = injectCollapsibleRootContext()\nrootContext.contentId ||= useId(undefined, 'reka-collapsible-content')\n\nconst presentRef = ref<InstanceType<typeof Presence>>()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst width = ref(0)\nconst height = ref(0)\n\n// when opening we want it to immediately open to retrieve dimensions\n// when closing we delay `present` to retrieve dimensions before closing\nconst isOpen = computed(() => rootContext.open.value)\nconst isMountAnimationPrevented = ref(isOpen.value)\nconst currentStyle = ref<Record<string, string>>()\n\nwatch(\n  () => [isOpen.value, presentRef.value?.present],\n  async () => {\n    await nextTick()\n    const node = currentElement.value\n    if (!node)\n      return\n    currentStyle.value = currentStyle.value || {\n      transitionDuration: node.style.transitionDuration,\n      animationName: node.style.animationName,\n    }\n    // block any animations/transitions so the element renders at its full dimensions\n    node.style.transitionDuration = '0s'\n    node.style.animationName = 'none'\n\n    // get width and height from full dimensions\n    const rect = node.getBoundingClientRect()\n    height.value = rect.height\n    width.value = rect.width\n\n    // kick off any animations/transitions that were originally set up if it isn't the initial mount\n    if (!isMountAnimationPrevented.value) {\n      node.style.transitionDuration = currentStyle.value.transitionDuration\n      node.style.animationName = currentStyle.value.animationName\n    }\n  },\n  {\n    immediate: true,\n  },\n)\n\nconst skipAnimation = computed(() => isMountAnimationPrevented.value && rootContext.open.value)\n\nonMounted(() => {\n  requestAnimationFrame(() => {\n    isMountAnimationPrevented.value = false\n  })\n})\n\nuseEventListener(currentElement, 'beforematch', (ev) => {\n  requestAnimationFrame(() => {\n    rootContext.onOpenToggle()\n    emits('contentFound')\n  })\n})\n</script>\n\n<template>\n  <Presence\n    v-slot=\"{ present }\"\n    ref=\"presentRef\"\n    :present=\"forceMount || rootContext.open.value\"\n    :force-mount=\"true\"\n  >\n    <Primitive\n      v-bind=\"$attrs\"\n      :id=\"rootContext.contentId\"\n      :ref=\"forwardRef\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      :hidden=\"!present ? rootContext.unmountOnHide.value ? '' : 'until-found' : undefined\"\n      :data-state=\"skipAnimation ? undefined : rootContext.open.value ? 'open' : 'closed'\"\n      :data-disabled=\"rootContext.disabled?.value ? '' : undefined\"\n      :style=\"{\n        [`--reka-collapsible-content-height`]: `${height}px`,\n        [`--reka-collapsible-content-width`]: `${width}px`,\n      }\"\n    >\n      <slot v-if=\"rootContext.unmountOnHide.value ? present : true\" />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface CollapsibleTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectCollapsibleRootContext } from './CollapsibleRoot.vue'\n\nconst props = withDefaults(defineProps<CollapsibleTriggerProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst rootContext = injectCollapsibleRootContext()\n</script>\n\n<template>\n  <Primitive\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as=\"as\"\n    :as-child=\"props.asChild\"\n    :aria-controls=\"rootContext.contentId\"\n    :aria-expanded=\"rootContext.open.value\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    :data-disabled=\"rootContext.disabled?.value ? '' : undefined\"\n    :disabled=\"rootContext.disabled?.value\"\n    @click=\"rootContext.onOpenToggle\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface CollapsibleTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectCollapsibleRootContext } from './CollapsibleRoot.vue'\n\nconst props = withDefaults(defineProps<CollapsibleTriggerProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst rootContext = injectCollapsibleRootContext()\n</script>\n\n<template>\n  <Primitive\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as=\"as\"\n    :as-child=\"props.asChild\"\n    :aria-controls=\"rootContext.contentId\"\n    :aria-expanded=\"rootContext.open.value\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    :data-disabled=\"rootContext.disabled?.value ? '' : undefined\"\n    :disabled=\"rootContext.disabled?.value\"\n    @click=\"rootContext.onOpenToggle\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "import type { Ref } from 'vue'\nimport type { AcceptableValue, SingleOrMultipleProps } from './types'\nimport { useVModel } from '@vueuse/core'\nimport { isEqual } from 'ohash'\nimport { computed } from 'vue'\nimport { isValueEqualOrExist } from './isValueEqualOrExist'\n\n/**\n * Validates the props and it makes sure that the types are coherent with each other\n *\n * 1. If type, defaultValue, and modelValue are all undefined, throw an error.\n * 2. If modelValue and defaultValue are defined and not of the same type, throw an error.\n * 3. If type is defined:\n *    a. If type is 'single' and either modelValue or defaultValue is an array, log an error and return 'multiple'.\n *    b. If type is 'multiple' and neither modelValue nor defaultValue is an array, log an error and return 'single'.\n * 4. Return 'multiple' if modelValue is an array, else return 'single'.\n */\nfunction validateProps({ type, defaultValue, modelValue }: SingleOrMultipleProps) {\n  const value = modelValue || defaultValue\n  const canTypeBeInferred = modelValue !== undefined || defaultValue !== undefined\n\n  if (canTypeBeInferred)\n    return Array.isArray(value) ? 'multiple' : 'single'\n  else\n    return type ?? 'single' // always fallback to `single`\n}\n\nfunction getDefaultType({ type, defaultValue, modelValue }: SingleOrMultipleProps) {\n  if (type)\n    return type\n\n  return validateProps({ type, defaultValue, modelValue })\n}\n\nfunction getDefaultValue({ type, defaultValue }: SingleOrMultipleProps) {\n  if (defaultValue !== undefined)\n    return defaultValue\n\n  return (type === 'single') ? undefined : []\n}\n\nexport function useSingleOrMultipleValue<P extends SingleOrMultipleProps, Name extends string>(\n  props: P,\n  emits: (name: Name, ...args: any[]) => void,\n) {\n  const type = computed(() => getDefaultType(props))\n  const modelValue = useVModel(props, 'modelValue', emits, {\n    defaultValue: getDefaultValue(props),\n    passive: (props.modelValue === undefined) as false,\n    deep: true,\n  }) as Ref<AcceptableValue | AcceptableValue[] | undefined>\n\n  function changeModelValue(value: AcceptableValue) {\n    if (type.value === 'single') {\n      modelValue.value = isEqual(value, modelValue.value) ? undefined : value\n    }\n    else {\n      const modelValueArray = Array.isArray(modelValue.value) ? [...(modelValue.value as AcceptableValue[] || [])] : [modelValue.value].filter(Boolean)\n      if (isValueEqualOrExist(modelValueArray, value)) {\n        const index = modelValueArray.findIndex(i => isEqual(i, value))\n        modelValueArray.splice(index, 1)\n      }\n      else {\n        modelValueArray.push(value)\n      }\n      modelValue.value = modelValueArray\n    }\n  }\n\n  const isSingle = computed(() => type.value === 'single')\n\n  return {\n    modelValue,\n    changeModelValue,\n    isSingle,\n  }\n}\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, DataOrientation, Direction, SingleOrMultipleProps, SingleOrMultipleType } from '@/shared/types'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface AccordionRootProps<T = string | string[]>\n  extends PrimitiveProps, SingleOrMultipleProps<T> {\n  /**\n   * When type is \"single\", allows closing content when clicking trigger for an open item.\n   * When type is \"multiple\", this prop has no effect.\n   *\n   * @defaultValue false\n   */\n  collapsible?: boolean\n\n  /**\n   * When `true`, prevents the user from interacting with the accordion and all its items\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean\n\n  /**\n   * The reading direction of the accordion when applicable. If omitted, assumes LTR (left-to-right) reading mode.\n   *\n   * @defaultValue \"ltr\"\n   */\n  dir?: Direction\n\n  /**\n   * The orientation of the accordion.\n   *\n   * @defaultValue \"vertical\"\n   */\n  orientation?: DataOrientation\n\n  /**\n   * When `true`, the element will be unmounted on closed state.\n   *\n   * @defaultValue `true`\n   */\n  unmountOnHide?: boolean\n}\n\nexport type AccordionRootEmits<T extends SingleOrMultipleType = SingleOrMultipleType> = {\n  /**\n   * Event handler called when the expanded state of an item changes\n   */\n  'update:modelValue': [value: (T extends 'single' ? string : string[]) | undefined]\n}\n\nexport type AccordionRootContext<P extends AccordionRootProps> = {\n  disabled: Ref<P['disabled']>\n  direction: Ref<P['dir']>\n  orientation: P['orientation']\n  parentElement: Ref<HTMLElement | undefined>\n  changeModelValue: (value: string) => void\n  isSingle: ComputedRef<boolean>\n  modelValue: Ref<AcceptableValue | AcceptableValue[] | undefined>\n  collapsible: boolean\n  unmountOnHide: Ref<boolean>\n}\n\nexport const [injectAccordionRootContext, provideAccordionRootContext]\n  = createContext<AccordionRootContext<AccordionRootProps>>('AccordionRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends (string | string[]), ExplicitType extends SingleOrMultipleType\">\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useSingleOrMultipleValue } from '@/shared/useSingleOrMultipleValue'\n\nconst props = withDefaults(defineProps<AccordionRootProps<T>>(), {\n  disabled: false,\n  orientation: 'vertical',\n  collapsible: false,\n  unmountOnHide: true,\n})\n\nconst emits = defineEmits<AccordionRootEmits<ExplicitType>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current active value */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { dir, disabled, unmountOnHide } = toRefs(props)\nconst direction = useDirection(dir)\n\nconst { modelValue, changeModelValue, isSingle } = useSingleOrMultipleValue(props, emits)\n\nconst { forwardRef, currentElement: parentElement } = useForwardExpose()\n\nprovideAccordionRootContext({\n  disabled,\n  direction,\n  orientation: props.orientation,\n  parentElement,\n  isSingle,\n  collapsible: props.collapsible,\n  modelValue,\n  changeModelValue,\n  unmountOnHide,\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot :model-value=\"modelValue\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, DataOrientation, Direction, SingleOrMultipleProps, SingleOrMultipleType } from '@/shared/types'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface AccordionRootProps<T = string | string[]>\n  extends PrimitiveProps, SingleOrMultipleProps<T> {\n  /**\n   * When type is \"single\", allows closing content when clicking trigger for an open item.\n   * When type is \"multiple\", this prop has no effect.\n   *\n   * @defaultValue false\n   */\n  collapsible?: boolean\n\n  /**\n   * When `true`, prevents the user from interacting with the accordion and all its items\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean\n\n  /**\n   * The reading direction of the accordion when applicable. If omitted, assumes LTR (left-to-right) reading mode.\n   *\n   * @defaultValue \"ltr\"\n   */\n  dir?: Direction\n\n  /**\n   * The orientation of the accordion.\n   *\n   * @defaultValue \"vertical\"\n   */\n  orientation?: DataOrientation\n\n  /**\n   * When `true`, the element will be unmounted on closed state.\n   *\n   * @defaultValue `true`\n   */\n  unmountOnHide?: boolean\n}\n\nexport type AccordionRootEmits<T extends SingleOrMultipleType = SingleOrMultipleType> = {\n  /**\n   * Event handler called when the expanded state of an item changes\n   */\n  'update:modelValue': [value: (T extends 'single' ? string : string[]) | undefined]\n}\n\nexport type AccordionRootContext<P extends AccordionRootProps> = {\n  disabled: Ref<P['disabled']>\n  direction: Ref<P['dir']>\n  orientation: P['orientation']\n  parentElement: Ref<HTMLElement | undefined>\n  changeModelValue: (value: string) => void\n  isSingle: ComputedRef<boolean>\n  modelValue: Ref<AcceptableValue | AcceptableValue[] | undefined>\n  collapsible: boolean\n  unmountOnHide: Ref<boolean>\n}\n\nexport const [injectAccordionRootContext, provideAccordionRootContext]\n  = createContext<AccordionRootContext<AccordionRootProps>>('AccordionRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends (string | string[]), ExplicitType extends SingleOrMultipleType\">\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useSingleOrMultipleValue } from '@/shared/useSingleOrMultipleValue'\n\nconst props = withDefaults(defineProps<AccordionRootProps<T>>(), {\n  disabled: false,\n  orientation: 'vertical',\n  collapsible: false,\n  unmountOnHide: true,\n})\n\nconst emits = defineEmits<AccordionRootEmits<ExplicitType>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current active value */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { dir, disabled, unmountOnHide } = toRefs(props)\nconst direction = useDirection(dir)\n\nconst { modelValue, changeModelValue, isSingle } = useSingleOrMultipleValue(props, emits)\n\nconst { forwardRef, currentElement: parentElement } = useForwardExpose()\n\nprovideAccordionRootContext({\n  disabled,\n  direction,\n  orientation: props.orientation,\n  parentElement,\n  isSingle,\n  collapsible: props.collapsible,\n  modelValue,\n  changeModelValue,\n  unmountOnHide,\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot :model-value=\"modelValue\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, VNodeRef } from 'vue'\nimport type { CollapsibleRootProps } from '../Collapsible'\nimport { createContext, useArrowNavigation, useForwardExpose } from '@/shared'\nimport { injectAccordionRootContext } from './AccordionRoot.vue'\n\nenum AccordionItemState {\n  Open = 'open',\n  Closed = 'closed',\n}\n\nexport interface AccordionItemProps\n  extends Omit<CollapsibleRootProps, 'open' | 'defaultOpen' | 'onOpenChange'> {\n  /**\n   * Whether or not an accordion item is disabled from user interaction.\n   * When `true`, prevents the user from interacting with the item.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean\n  /**\n   * A string value for the accordion item. All items within an accordion should use a unique value.\n   */\n  value: string\n}\n\ninterface AccordionItemContext {\n  open: ComputedRef<boolean>\n  dataState: ComputedRef<AccordionItemState>\n  disabled: ComputedRef<boolean>\n  dataDisabled: ComputedRef<'' | undefined>\n  triggerId: string\n  currentRef: VNodeRef\n  currentElement: ComputedRef<HTMLElement | undefined>\n  value: ComputedRef<string>\n}\n\nexport const [injectAccordionItemContext, provideAccordionItemContext]\n  = createContext<AccordionItemContext>('AccordionItem')\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { CollapsibleRoot } from '@/Collapsible'\n\nconst props = defineProps<AccordionItemProps>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst rootContext = injectAccordionRootContext()\n\nconst open = computed(() =>\n  rootContext.isSingle.value\n    ? props.value === rootContext.modelValue.value\n    : Array.isArray(rootContext.modelValue.value)\n      && rootContext.modelValue.value.includes(props.value),\n)\n\nconst disabled = computed(() => {\n  return (rootContext.disabled.value || props.disabled)\n})\n\nconst dataDisabled = computed(() => (disabled.value ? '' : undefined))\n\nconst dataState = computed(() =>\n  open.value ? AccordionItemState.Open : AccordionItemState.Closed,\n)\n\ndefineExpose({ open, dataDisabled })\nconst { currentRef, currentElement } = useForwardExpose()\n\nprovideAccordionItemContext({\n  open,\n  dataState,\n  disabled,\n  dataDisabled,\n  triggerId: '',\n  currentRef,\n  currentElement,\n  value: computed(() => props.value),\n})\n\nfunction handleArrowKey(e: KeyboardEvent) {\n  const target = e.target as HTMLElement\n  const allCollectionItems: HTMLElement[] = Array.from(rootContext.parentElement.value?.querySelectorAll('[data-reka-collection-item]') ?? [])\n\n  const collectionItemIndex = allCollectionItems.findIndex(item => item === target)\n  if (collectionItemIndex === -1)\n    return null\n\n  useArrowNavigation(\n    e,\n    target,\n    rootContext.parentElement.value!,\n    {\n      arrowKeyOptions: rootContext.orientation,\n      dir: rootContext.direction.value,\n      focus: true,\n    },\n  )\n}\n</script>\n\n<template>\n  <CollapsibleRoot\n    :data-orientation=\"rootContext.orientation\"\n    :data-disabled=\"dataDisabled\"\n    :data-state=\"dataState\"\n    :disabled=\"disabled\"\n    :open=\"open\"\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    :unmount-on-hide=\"rootContext.unmountOnHide.value\"\n    @keydown.up.down.left.right.home.end=\"handleArrowKey\"\n  >\n    <slot :open=\"open\" />\n  </CollapsibleRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, VNodeRef } from 'vue'\nimport type { CollapsibleRootProps } from '../Collapsible'\nimport { createContext, useArrowNavigation, useForwardExpose } from '@/shared'\nimport { injectAccordionRootContext } from './AccordionRoot.vue'\n\nenum AccordionItemState {\n  Open = 'open',\n  Closed = 'closed',\n}\n\nexport interface AccordionItemProps\n  extends Omit<CollapsibleRootProps, 'open' | 'defaultOpen' | 'onOpenChange'> {\n  /**\n   * Whether or not an accordion item is disabled from user interaction.\n   * When `true`, prevents the user from interacting with the item.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean\n  /**\n   * A string value for the accordion item. All items within an accordion should use a unique value.\n   */\n  value: string\n}\n\ninterface AccordionItemContext {\n  open: ComputedRef<boolean>\n  dataState: ComputedRef<AccordionItemState>\n  disabled: ComputedRef<boolean>\n  dataDisabled: ComputedRef<'' | undefined>\n  triggerId: string\n  currentRef: VNodeRef\n  currentElement: ComputedRef<HTMLElement | undefined>\n  value: ComputedRef<string>\n}\n\nexport const [injectAccordionItemContext, provideAccordionItemContext]\n  = createContext<AccordionItemContext>('AccordionItem')\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { CollapsibleRoot } from '@/Collapsible'\n\nconst props = defineProps<AccordionItemProps>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst rootContext = injectAccordionRootContext()\n\nconst open = computed(() =>\n  rootContext.isSingle.value\n    ? props.value === rootContext.modelValue.value\n    : Array.isArray(rootContext.modelValue.value)\n      && rootContext.modelValue.value.includes(props.value),\n)\n\nconst disabled = computed(() => {\n  return (rootContext.disabled.value || props.disabled)\n})\n\nconst dataDisabled = computed(() => (disabled.value ? '' : undefined))\n\nconst dataState = computed(() =>\n  open.value ? AccordionItemState.Open : AccordionItemState.Closed,\n)\n\ndefineExpose({ open, dataDisabled })\nconst { currentRef, currentElement } = useForwardExpose()\n\nprovideAccordionItemContext({\n  open,\n  dataState,\n  disabled,\n  dataDisabled,\n  triggerId: '',\n  currentRef,\n  currentElement,\n  value: computed(() => props.value),\n})\n\nfunction handleArrowKey(e: KeyboardEvent) {\n  const target = e.target as HTMLElement\n  const allCollectionItems: HTMLElement[] = Array.from(rootContext.parentElement.value?.querySelectorAll('[data-reka-collection-item]') ?? [])\n\n  const collectionItemIndex = allCollectionItems.findIndex(item => item === target)\n  if (collectionItemIndex === -1)\n    return null\n\n  useArrowNavigation(\n    e,\n    target,\n    rootContext.parentElement.value!,\n    {\n      arrowKeyOptions: rootContext.orientation,\n      dir: rootContext.direction.value,\n      focus: true,\n    },\n  )\n}\n</script>\n\n<template>\n  <CollapsibleRoot\n    :data-orientation=\"rootContext.orientation\"\n    :data-disabled=\"dataDisabled\"\n    :data-state=\"dataState\"\n    :disabled=\"disabled\"\n    :open=\"open\"\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    :unmount-on-hide=\"rootContext.unmountOnHide.value\"\n    @keydown.up.down.left.right.home.end=\"handleArrowKey\"\n  >\n    <slot :open=\"open\" />\n  </CollapsibleRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { CollapsibleContentProps } from '../Collapsible'\n\nexport interface AccordionContentProps extends CollapsibleContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { useForwardExpose } from '@/shared'\nimport { CollapsibleContent } from '../Collapsible'\nimport { injectAccordionItemContext } from './AccordionItem.vue'\nimport { injectAccordionRootContext } from './AccordionRoot.vue'\n\nconst props = defineProps<AccordionContentProps>()\n\nconst rootContext = injectAccordionRootContext()\nconst itemContext = injectAccordionItemContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <CollapsibleContent\n    role=\"region\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n    :force-mount=\"props.forceMount\"\n    :aria-labelledby=\"itemContext.triggerId\"\n    :data-state=\"itemContext.dataState.value\"\n    :data-disabled=\"itemContext.dataDisabled.value\"\n    :data-orientation=\"rootContext.orientation\"\n    style=\"\n      --reka-accordion-content-width: var(--reka-collapsible-content-width);\n      --reka-accordion-content-height: var(--reka-collapsible-content-height);\n    \"\n    @content-found=\"rootContext.changeModelValue(itemContext.value.value)\"\n  >\n    <slot />\n  </CollapsibleContent>\n</template>\n", "<script lang=\"ts\">\nimport type { CollapsibleContentProps } from '../Collapsible'\n\nexport interface AccordionContentProps extends CollapsibleContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { useForwardExpose } from '@/shared'\nimport { CollapsibleContent } from '../Collapsible'\nimport { injectAccordionItemContext } from './AccordionItem.vue'\nimport { injectAccordionRootContext } from './AccordionRoot.vue'\n\nconst props = defineProps<AccordionContentProps>()\n\nconst rootContext = injectAccordionRootContext()\nconst itemContext = injectAccordionItemContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <CollapsibleContent\n    role=\"region\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n    :force-mount=\"props.forceMount\"\n    :aria-labelledby=\"itemContext.triggerId\"\n    :data-state=\"itemContext.dataState.value\"\n    :data-disabled=\"itemContext.dataDisabled.value\"\n    :data-orientation=\"rootContext.orientation\"\n    style=\"\n      --reka-accordion-content-width: var(--reka-collapsible-content-width);\n      --reka-accordion-content-height: var(--reka-collapsible-content-height);\n    \"\n    @content-found=\"rootContext.changeModelValue(itemContext.value.value)\"\n  >\n    <slot />\n  </CollapsibleContent>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface AccordionHeaderProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectAccordionItemContext } from './AccordionItem.vue'\nimport { injectAccordionRootContext } from './AccordionRoot.vue'\n\nconst props = withDefaults(defineProps<AccordionHeaderProps>(), {\n  as: 'h3',\n})\n\nconst rootContext = injectAccordionRootContext()\nconst itemContext = injectAccordionItemContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    :data-orientation=\"rootContext.orientation\"\n    :data-state=\"itemContext.dataState.value\"\n    :data-disabled=\"itemContext.dataDisabled.value\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface AccordionHeaderProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectAccordionItemContext } from './AccordionItem.vue'\nimport { injectAccordionRootContext } from './AccordionRoot.vue'\n\nconst props = withDefaults(defineProps<AccordionHeaderProps>(), {\n  as: 'h3',\n})\n\nconst rootContext = injectAccordionRootContext()\nconst itemContext = injectAccordionItemContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    :data-orientation=\"rootContext.orientation\"\n    :data-state=\"itemContext.dataState.value\"\n    :data-disabled=\"itemContext.dataDisabled.value\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface AccordionTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { CollapsibleTrigger } from '@/Collapsible'\nimport { useId } from '@/shared'\nimport { injectAccordionItemContext } from './AccordionItem.vue'\n\nimport { injectAccordionRootContext } from './AccordionRoot.vue'\n\nconst props = defineProps<AccordionTriggerProps>()\n\nconst rootContext = injectAccordionRootContext()\nconst itemContext = injectAccordionItemContext()\n\nitemContext.triggerId ||= useId(undefined, 'reka-accordion-trigger')\nfunction changeItem() {\n  const triggerDisabled = rootContext.isSingle.value && itemContext.open.value && !rootContext.collapsible\n  if (itemContext.disabled.value || triggerDisabled)\n    return\n\n  rootContext.changeModelValue(itemContext.value.value)\n}\n</script>\n\n<template>\n  <CollapsibleTrigger\n    :id=\"itemContext.triggerId\"\n    :ref=\"itemContext.currentRef\"\n    data-reka-collection-item\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    :aria-disabled=\"itemContext.disabled.value || undefined\"\n    :aria-expanded=\"itemContext.open.value || false\"\n    :data-disabled=\"itemContext.dataDisabled.value\"\n    :data-orientation=\"rootContext.orientation\"\n    :data-state=\"itemContext.dataState.value\"\n    :disabled=\"itemContext.disabled.value\"\n    @click=\"changeItem\"\n  >\n    <slot />\n  </CollapsibleTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface AccordionTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { CollapsibleTrigger } from '@/Collapsible'\nimport { useId } from '@/shared'\nimport { injectAccordionItemContext } from './AccordionItem.vue'\n\nimport { injectAccordionRootContext } from './AccordionRoot.vue'\n\nconst props = defineProps<AccordionTriggerProps>()\n\nconst rootContext = injectAccordionRootContext()\nconst itemContext = injectAccordionItemContext()\n\nitemContext.triggerId ||= useId(undefined, 'reka-accordion-trigger')\nfunction changeItem() {\n  const triggerDisabled = rootContext.isSingle.value && itemContext.open.value && !rootContext.collapsible\n  if (itemContext.disabled.value || triggerDisabled)\n    return\n\n  rootContext.changeModelValue(itemContext.value.value)\n}\n</script>\n\n<template>\n  <CollapsibleTrigger\n    :id=\"itemContext.triggerId\"\n    :ref=\"itemContext.currentRef\"\n    data-reka-collection-item\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    :aria-disabled=\"itemContext.disabled.value || undefined\"\n    :aria-expanded=\"itemContext.open.value || false\"\n    :data-disabled=\"itemContext.dataDisabled.value\"\n    :data-orientation=\"rootContext.orientation\"\n    :data-state=\"itemContext.dataState.value\"\n    :disabled=\"itemContext.disabled.value\"\n    @click=\"changeItem\"\n  >\n    <slot />\n  </CollapsibleTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext } from '@/shared'\n\nexport interface DialogRootProps {\n  /** The controlled open state of the dialog. Can be binded as `v-model:open`. */\n  open?: boolean\n  /** The open state of the dialog when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /**\n   * The modality of the dialog When set to `true`, <br>\n   * interaction with outside elements will be disabled and only dialog content will be visible to screen readers.\n   */\n  modal?: boolean\n}\n\nexport type DialogRootEmits = {\n  /** Event handler called when the open state of the dialog changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface DialogRootContext {\n  open: Readonly<Ref<boolean>>\n  modal: Ref<boolean>\n  openModal: () => void\n  onOpenChange: (value: boolean) => void\n  onOpenToggle: () => void\n  triggerElement: Ref<HTMLElement | undefined>\n  contentElement: Ref<HTMLElement | undefined>\n  contentId: string\n  titleId: string\n  descriptionId: string\n}\n\nexport const [injectDialogRootContext, provideDialogRootContext]\n  = createContext<DialogRootContext>('DialogRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<DialogRootProps>(), {\n  open: undefined,\n  defaultOpen: false,\n  modal: true,\n})\nconst emit = defineEmits<DialogRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n    /** Close the dialog */\n    close: () => void\n  }) => any\n}>()\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst triggerElement = ref<HTMLElement>()\nconst contentElement = ref<HTMLElement>()\nconst { modal } = toRefs(props)\n\nprovideDialogRootContext({\n  open,\n  modal,\n  openModal: () => {\n    open.value = true\n  },\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  onOpenToggle: () => {\n    open.value = !open.value\n  },\n  contentId: '',\n  titleId: '',\n  descriptionId: '',\n  triggerElement,\n  contentElement,\n})\n</script>\n\n<template>\n  <slot\n    :open=\"open\"\n    :close=\"() => open = false\"\n  />\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext } from '@/shared'\n\nexport interface DialogRootProps {\n  /** The controlled open state of the dialog. Can be binded as `v-model:open`. */\n  open?: boolean\n  /** The open state of the dialog when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /**\n   * The modality of the dialog When set to `true`, <br>\n   * interaction with outside elements will be disabled and only dialog content will be visible to screen readers.\n   */\n  modal?: boolean\n}\n\nexport type DialogRootEmits = {\n  /** Event handler called when the open state of the dialog changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface DialogRootContext {\n  open: Readonly<Ref<boolean>>\n  modal: Ref<boolean>\n  openModal: () => void\n  onOpenChange: (value: boolean) => void\n  onOpenToggle: () => void\n  triggerElement: Ref<HTMLElement | undefined>\n  contentElement: Ref<HTMLElement | undefined>\n  contentId: string\n  titleId: string\n  descriptionId: string\n}\n\nexport const [injectDialogRootContext, provideDialogRootContext]\n  = createContext<DialogRootContext>('DialogRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<DialogRootProps>(), {\n  open: undefined,\n  defaultOpen: false,\n  modal: true,\n})\nconst emit = defineEmits<DialogRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n    /** Close the dialog */\n    close: () => void\n  }) => any\n}>()\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst triggerElement = ref<HTMLElement>()\nconst contentElement = ref<HTMLElement>()\nconst { modal } = toRefs(props)\n\nprovideDialogRootContext({\n  open,\n  modal,\n  openModal: () => {\n    open.value = true\n  },\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  onOpenToggle: () => {\n    open.value = !open.value\n  },\n  contentId: '',\n  titleId: '',\n  descriptionId: '',\n  triggerElement,\n  contentElement,\n})\n</script>\n\n<template>\n  <slot\n    :open=\"open\"\n    :close=\"() => open = false\"\n  />\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface DialogCloseProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = withDefaults(defineProps<DialogCloseProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst rootContext = injectDialogRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    @click=\"rootContext.onOpenChange(false)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface DialogCloseProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = withDefaults(defineProps<DialogCloseProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst rootContext = injectDialogRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    @click=\"rootContext.onOpenChange(false)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "import type { MaybeRefOrGetter, Ref } from 'vue'\nimport { isClient } from '@vueuse/shared'\nimport { nextTick, ref, toValue, watchEffect } from 'vue'\nimport { handleAndDispatchCustomEvent } from '@/shared'\n\nexport type PointerDownOutsideEvent = CustomEvent<{\n  originalEvent: PointerEvent\n}>\nexport type FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>\n\nexport const DISMISSABLE_LAYER_NAME = 'DismissableLayer'\nexport const CONTEXT_UPDATE = 'dismissableLayer.update'\nexport const POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside'\nexport const FOCUS_OUTSIDE = 'dismissableLayer.focusOutside'\n\nfunction isLayerExist(layerElement: HTMLElement, targetElement: HTMLElement) {\n  const targetLayer = targetElement.closest(\n    '[data-dismissable-layer]',\n  )\n\n  const mainLayer = layerElement.dataset.dismissableLayer === ''\n    ? layerElement\n    : layerElement.querySelector(\n      '[data-dismissable-layer]',\n    ) as HTMLElement\n\n  const nodeList = Array.from(\n    layerElement.ownerDocument.querySelectorAll('[data-dismissable-layer]'),\n  )\n\n  if (targetLayer && (mainLayer === targetLayer || nodeList.indexOf(mainLayer) < nodeList.indexOf(targetLayer))\n  ) {\n    return true\n  }\n  else {\n    return false\n  }\n}\n\n/**\n * Listens for `pointerdown` outside a DOM subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nexport function usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  element?: Ref<HTMLElement | undefined>,\n  enabled: MaybeRefOrGetter<boolean> = true,\n) {\n  const ownerDocument: Document\n    = element?.value?.ownerDocument ?? globalThis?.document\n\n  const isPointerInsideDOMTree = ref(false)\n  const handleClickRef = ref(() => {})\n\n  watchEffect((cleanupFn) => {\n    if (!isClient || !toValue(enabled))\n      return\n    const handlePointerDown = async (event: PointerEvent) => {\n      const target = event.target as HTMLElement | undefined\n\n      if (!element?.value || !target)\n        return\n\n      if (isLayerExist(element.value, target)) {\n        isPointerInsideDOMTree.value = false\n        return\n      }\n\n      if (event.target && !isPointerInsideDOMTree.value) {\n        const eventDetail = { originalEvent: event }\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            onPointerDownOutside,\n            eventDetail,\n          )\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executes events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.value)\n          handleClickRef.value = handleAndDispatchPointerDownOutsideEvent\n          ownerDocument.addEventListener('click', handleClickRef.value, {\n            once: true,\n          })\n        }\n        else {\n          handleAndDispatchPointerDownOutsideEvent()\n        }\n      }\n      else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.value)\n      }\n      isPointerInsideDOMTree.value = false\n    }\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown)\n    }, 0)\n\n    cleanupFn(() => {\n      window.clearTimeout(timerId)\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown)\n      ownerDocument.removeEventListener('click', handleClickRef.value)\n    })\n  })\n\n  return {\n    onPointerDownCapture: () => {\n      if (!toValue(enabled))\n        return\n      isPointerInsideDOMTree.value = true\n    },\n  }\n}\n\n/**\n * Listens for when focus happens outside a DOM subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nexport function useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  element?: Ref<HTMLElement | undefined>,\n  enabled: MaybeRefOrGetter<boolean> = true,\n) {\n  const ownerDocument: Document\n    = element?.value?.ownerDocument ?? globalThis?.document\n\n  const isFocusInsideDOMTree = ref(false)\n  watchEffect((cleanupFn) => {\n    if (!isClient || !toValue(enabled))\n      return\n    const handleFocus = async (event: FocusEvent) => {\n      if (!element?.value)\n        return\n\n      await nextTick()\n      await nextTick()\n      const target = event.target as HTMLElement | undefined\n      if (!element.value || !target || isLayerExist(element.value, target))\n        return\n\n      if (event.target && !isFocusInsideDOMTree.value) {\n        const eventDetail = { originalEvent: event }\n        handleAndDispatchCustomEvent(\n          FOCUS_OUTSIDE,\n          onFocusOutside,\n          eventDetail,\n        )\n      }\n    }\n\n    ownerDocument.addEventListener('focusin', handleFocus)\n\n    cleanupFn(() => ownerDocument.removeEventListener('focusin', handleFocus))\n  })\n\n  return {\n    onFocusCapture: () => {\n      if (!toValue(enabled))\n        return\n\n      isFocusInsideDOMTree.value = true\n    },\n    onBlurCapture: () => {\n      if (!toValue(enabled))\n        return\n\n      isFocusInsideDOMTree.value = false\n    },\n  }\n}\n\nexport function dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE)\n  document.dispatchEvent(event)\n}\n", "<script lang=\"ts\">\nimport type {\n  FocusOutsideEvent,\n  PointerDownOutsideEvent,\n} from './utils'\n\nimport type { PrimitiveProps } from '@/Primitive'\nimport {\n  computed,\n  nextTick,\n  reactive,\n  watchEffect,\n} from 'vue'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DismissableLayerProps extends PrimitiveProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean\n}\n\nexport type DismissableLayerEmits = {\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  escapeKeyDown: [event: KeyboardEvent]\n  /**\n   * Event handler called when a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  pointerDownOutside: [event: PointerDownOutsideEvent]\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  focusOutside: [ event: FocusOutsideEvent]\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  interactOutside: [ event: PointerDownOutsideEvent | FocusOutsideEvent]\n}\n\nexport type DismissableLayerPrivateEmits = DismissableLayerEmits & {\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  dismiss: []\n}\n\nexport const context = reactive({\n  layersRoot: new Set<HTMLElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<HTMLElement>(),\n  branches: new Set<HTMLElement>(),\n})\n</script>\n\n<script setup lang=\"ts\">\nimport { onKeyStroke } from '@vueuse/core'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport {\n  useFocusOutside,\n  usePointerDownOutside,\n} from './utils'\n\nconst props = withDefaults(defineProps<DismissableLayerProps>(), {\n  disableOutsidePointerEvents: false,\n})\n\nconst emits = defineEmits<DismissableLayerPrivateEmits>()\n\nconst { forwardRef, currentElement: layerElement } = useForwardExpose()\nconst ownerDocument = computed(\n  () => layerElement.value?.ownerDocument ?? globalThis.document,\n)\n\nconst layers = computed(() => context.layersRoot)\n\nconst index = computed(() => {\n  return layerElement.value\n    ? Array.from(layers.value).indexOf(layerElement.value)\n    : -1\n})\n\nconst isBodyPointerEventsDisabled = computed(() => {\n  return context.layersWithOutsidePointerEventsDisabled.size > 0\n})\n\nconst isPointerEventsEnabled = computed(() => {\n  const localLayers = Array.from(layers.value)\n  const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1)\n  const highestLayerWithOutsidePointerEventsDisabledIndex = localLayers.indexOf(highestLayerWithOutsidePointerEventsDisabled)\n\n  return index.value >= highestLayerWithOutsidePointerEventsDisabledIndex\n})\n\nconst pointerDownOutside = usePointerDownOutside(async (event) => {\n  const isPointerDownOnBranch = [...context.branches].some(branch =>\n    branch?.contains(event.target as HTMLElement),\n  )\n\n  if (!isPointerEventsEnabled.value || isPointerDownOnBranch)\n    return\n  emits('pointerDownOutside', event)\n  emits('interactOutside', event)\n  await nextTick()\n  if (!event.defaultPrevented)\n    emits('dismiss')\n}, layerElement)\n\nconst focusOutside = useFocusOutside((event) => {\n  const isFocusInBranch = [...context.branches].some(branch =>\n    branch?.contains(event.target as HTMLElement),\n  )\n\n  if (isFocusInBranch)\n    return\n  emits('focusOutside', event)\n  emits('interactOutside', event)\n  if (!event.defaultPrevented)\n    emits('dismiss')\n}, layerElement)\n\nonKeyStroke('Escape', (event) => {\n  const isHighestLayer = index.value === layers.value.size - 1\n  if (!isHighestLayer)\n    return\n  emits('escapeKeyDown', event)\n  if (!event.defaultPrevented)\n    emits('dismiss')\n})\n\nlet originalBodyPointerEvents: string\nwatchEffect((cleanupFn) => {\n  if (!layerElement.value)\n    return\n  if (props.disableOutsidePointerEvents) {\n    if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n      originalBodyPointerEvents = ownerDocument.value.body.style.pointerEvents\n      ownerDocument.value.body.style.pointerEvents = 'none'\n    }\n    context.layersWithOutsidePointerEventsDisabled.add(layerElement.value)\n  }\n  layers.value.add(layerElement.value)\n\n  cleanupFn(() => {\n    if (\n      props.disableOutsidePointerEvents\n      && context.layersWithOutsidePointerEventsDisabled.size === 1\n    ) {\n      ownerDocument.value.body.style.pointerEvents = originalBodyPointerEvents\n    }\n  })\n})\n\nwatchEffect((cleanupFn) => {\n  cleanupFn(() => {\n    if (!layerElement.value)\n      return\n    layers.value.delete(layerElement.value)\n    context.layersWithOutsidePointerEventsDisabled.delete(layerElement.value)\n  })\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    data-dismissable-layer\n    :style=\"{\n      pointerEvents: isBodyPointerEventsDisabled\n        ? isPointerEventsEnabled\n          ? 'auto'\n          : 'none'\n        : undefined,\n    }\"\n    @focus.capture=\"focusOutside.onFocusCapture\"\n    @blur.capture=\"focusOutside.onBlurCapture\"\n    @pointerdown.capture=\"pointerDownOutside.onPointerDownCapture\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  FocusOutsideEvent,\n  PointerDownOutsideEvent,\n} from './utils'\n\nimport type { PrimitiveProps } from '@/Primitive'\nimport {\n  computed,\n  nextTick,\n  reactive,\n  watchEffect,\n} from 'vue'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DismissableLayerProps extends PrimitiveProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean\n}\n\nexport type DismissableLayerEmits = {\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  escapeKeyDown: [event: KeyboardEvent]\n  /**\n   * Event handler called when a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  pointerDownOutside: [event: PointerDownOutsideEvent]\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  focusOutside: [ event: FocusOutsideEvent]\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  interactOutside: [ event: PointerDownOutsideEvent | FocusOutsideEvent]\n}\n\nexport type DismissableLayerPrivateEmits = DismissableLayerEmits & {\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  dismiss: []\n}\n\nexport const context = reactive({\n  layersRoot: new Set<HTMLElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<HTMLElement>(),\n  branches: new Set<HTMLElement>(),\n})\n</script>\n\n<script setup lang=\"ts\">\nimport { onKeyStroke } from '@vueuse/core'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport {\n  useFocusOutside,\n  usePointerDownOutside,\n} from './utils'\n\nconst props = withDefaults(defineProps<DismissableLayerProps>(), {\n  disableOutsidePointerEvents: false,\n})\n\nconst emits = defineEmits<DismissableLayerPrivateEmits>()\n\nconst { forwardRef, currentElement: layerElement } = useForwardExpose()\nconst ownerDocument = computed(\n  () => layerElement.value?.ownerDocument ?? globalThis.document,\n)\n\nconst layers = computed(() => context.layersRoot)\n\nconst index = computed(() => {\n  return layerElement.value\n    ? Array.from(layers.value).indexOf(layerElement.value)\n    : -1\n})\n\nconst isBodyPointerEventsDisabled = computed(() => {\n  return context.layersWithOutsidePointerEventsDisabled.size > 0\n})\n\nconst isPointerEventsEnabled = computed(() => {\n  const localLayers = Array.from(layers.value)\n  const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1)\n  const highestLayerWithOutsidePointerEventsDisabledIndex = localLayers.indexOf(highestLayerWithOutsidePointerEventsDisabled)\n\n  return index.value >= highestLayerWithOutsidePointerEventsDisabledIndex\n})\n\nconst pointerDownOutside = usePointerDownOutside(async (event) => {\n  const isPointerDownOnBranch = [...context.branches].some(branch =>\n    branch?.contains(event.target as HTMLElement),\n  )\n\n  if (!isPointerEventsEnabled.value || isPointerDownOnBranch)\n    return\n  emits('pointerDownOutside', event)\n  emits('interactOutside', event)\n  await nextTick()\n  if (!event.defaultPrevented)\n    emits('dismiss')\n}, layerElement)\n\nconst focusOutside = useFocusOutside((event) => {\n  const isFocusInBranch = [...context.branches].some(branch =>\n    branch?.contains(event.target as HTMLElement),\n  )\n\n  if (isFocusInBranch)\n    return\n  emits('focusOutside', event)\n  emits('interactOutside', event)\n  if (!event.defaultPrevented)\n    emits('dismiss')\n}, layerElement)\n\nonKeyStroke('Escape', (event) => {\n  const isHighestLayer = index.value === layers.value.size - 1\n  if (!isHighestLayer)\n    return\n  emits('escapeKeyDown', event)\n  if (!event.defaultPrevented)\n    emits('dismiss')\n})\n\nlet originalBodyPointerEvents: string\nwatchEffect((cleanupFn) => {\n  if (!layerElement.value)\n    return\n  if (props.disableOutsidePointerEvents) {\n    if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n      originalBodyPointerEvents = ownerDocument.value.body.style.pointerEvents\n      ownerDocument.value.body.style.pointerEvents = 'none'\n    }\n    context.layersWithOutsidePointerEventsDisabled.add(layerElement.value)\n  }\n  layers.value.add(layerElement.value)\n\n  cleanupFn(() => {\n    if (\n      props.disableOutsidePointerEvents\n      && context.layersWithOutsidePointerEventsDisabled.size === 1\n    ) {\n      ownerDocument.value.body.style.pointerEvents = originalBodyPointerEvents\n    }\n  })\n})\n\nwatchEffect((cleanupFn) => {\n  cleanupFn(() => {\n    if (!layerElement.value)\n      return\n    layers.value.delete(layerElement.value)\n    context.layersWithOutsidePointerEventsDisabled.delete(layerElement.value)\n  })\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    data-dismissable-layer\n    :style=\"{\n      pointerEvents: isBodyPointerEventsDisabled\n        ? isPointerEventsEnabled\n          ? 'auto'\n          : 'none'\n        : undefined,\n    }\"\n    @focus.capture=\"focusOutside.onFocusCapture\"\n    @blur.capture=\"focusOutside.onBlurCapture\"\n    @pointerdown.capture=\"pointerDownOutside.onPointerDownCapture\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DismissableLayerBranchProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted, onUnmounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { context } from './DismissableLayer.vue'\n\nconst props = defineProps<DismissableLayerBranchProps>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nonMounted(() => {\n  context.branches.add(currentElement.value)\n})\nonUnmounted(() => {\n  context.branches.delete(currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DismissableLayerBranchProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted, onUnmounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { context } from './DismissableLayer.vue'\n\nconst props = defineProps<DismissableLayerBranchProps>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nonMounted(() => {\n  context.branches.add(currentElement.value)\n})\nonUnmounted(() => {\n  context.branches.delete(currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "import { createGlobalState } from '@vueuse/core'\nimport { ref } from 'vue'\n\ninterface FocusScopeAPI {\n  paused: boolean\n  pause: () => void\n  resume: () => void\n}\n\nconst useFocusStackState = createGlobalState(() => {\n  const stack = ref<FocusScopeAPI[]>([])\n  return stack\n})\n\nexport function createFocusScopesStack() {\n  /** A stack of focus scopes, with the active one at the top */\n  const stack = useFocusStackState()\n\n  return {\n    add(focusScope: FocusScopeAPI) {\n      // pause the currently active focus scope (at the top of the stack)\n      const activeFocusScope = stack.value[0]\n      if (focusScope !== activeFocusScope)\n        activeFocusScope?.pause()\n\n      // remove in case it already exists (because we'll re-add it at the top of the stack)\n      stack.value = arrayRemove(stack.value, focusScope)\n      stack.value.unshift(focusScope)\n    },\n\n    remove(focusScope: FocusScopeAPI) {\n      stack.value = arrayRemove(stack.value, focusScope)\n      stack.value[0]?.resume()\n    },\n  }\n}\n\nexport function arrayRemove<T>(array: T[], item: T) {\n  const updatedArray = [...array]\n  const index = updatedArray.indexOf(item)\n  if (index !== -1)\n    updatedArray.splice(index, 1)\n\n  return updatedArray\n}\n\nexport function removeLinks(items: HTMLElement[]) {\n  return items.filter(item => item.tagName !== 'A')\n}\n", "import { getActiveElement } from '@/shared'\n\nexport const AUTOFOCUS_ON_MOUNT = 'focusScope.autoFocusOnMount'\nexport const AUTOFOCUS_ON_UNMOUNT = 'focusScope.autoFocusOnUnmount'\nexport const EVENT_OPTIONS = { bubbles: false, cancelable: true }\n\ntype FocusableTarget = HTMLElement | { focus: () => void }\n\n/**\n * Attempts focusing the first element in a list of candidates.\n * Stops when focus has actually moved.\n */\nexport function focusFirst(candidates: HTMLElement[], { select = false } = {}) {\n  const previouslyFocusedElement = getActiveElement()\n  for (const candidate of candidates) {\n    focus(candidate, { select })\n    if (getActiveElement() !== previouslyFocusedElement)\n      return true\n  }\n}\n\n/**\n * Returns the first and last tabbable elements inside a container.\n */\nexport function getTabbableEdges(container: HTMLElement) {\n  const candidates = getTabbableCandidates(container)\n  const first = findVisible(candidates, container)\n  const last = findVisible(candidates.reverse(), container)\n  return [first, last] as const\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nexport function getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = []\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden'\n      if (node.disabled || node.hidden || isHiddenInput)\n        return NodeFilter.FILTER_SKIP\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0\n        ? NodeFilter.FILTER_ACCEPT\n        : NodeFilter.FILTER_SKIP\n    },\n  })\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement)\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes\n}\n\n/**\n * Returns the first visible element in a list.\n * NOTE: Only checks visibility up to the `container`.\n */\nexport function findVisible(elements: HTMLElement[], container: HTMLElement) {\n  for (const element of elements) {\n    // we stop checking if it's hidden at the `container` level (excluding)\n    if (!isHidden(element, { upTo: container }))\n      return element\n  }\n}\n\nexport function isHidden(node: HTMLElement, { upTo }: { upTo?: HTMLElement }) {\n  if (getComputedStyle(node).visibility === 'hidden')\n    return true\n  while (node) {\n    // we stop at `upTo` (excluding it)\n    if (upTo !== undefined && node === upTo)\n      return false\n    if (getComputedStyle(node).display === 'none')\n      return true\n    node = node.parentElement as HTMLElement\n  }\n  return false\n}\n\nexport function isSelectableInput(\n  element: any,\n): element is FocusableTarget & { select: () => void } {\n  return element instanceof HTMLInputElement && 'select' in element\n}\n\nexport function focus(\n  element?: FocusableTarget | null,\n  { select = false } = {},\n) {\n  // only focus if that element is focusable\n  if (element && element.focus) {\n    const previouslyFocusedElement = getActiveElement()\n    // NOTE: we prevent scrolling on focus, to minimize jarring transitions for users\n    element.focus({ preventScroll: true })\n    // only select if its not the same element, it supports selection and we need to select\n    if (\n      element !== previouslyFocusedElement\n      && isSelectableInput(element)\n      && select\n    ) {\n      element.select()\n    }\n  }\n}\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { getActiveElement, useForwardExpose } from '@/shared'\n\nexport type FocusScopeEmits = {\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  mountAutoFocus: [event: Event]\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  unmountAutoFocus: [event: Event]\n}\n\nexport interface FocusScopeProps extends PrimitiveProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { isClient } from '@vueuse/shared'\nimport { nextTick, reactive, ref, watchEffect } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { createFocusScopesStack, removeLinks } from './stack'\nimport {\n  AUTOFOCUS_ON_MOUNT,\n  AUTOFOCUS_ON_UNMOUNT,\n  EVENT_OPTIONS,\n  focus,\n  focusFirst,\n  getTabbableCandidates,\n  getTabbableEdges,\n} from './utils'\n\nconst props = withDefaults(defineProps<FocusScopeProps>(), {\n  loop: false,\n  trapped: false,\n})\nconst emits = defineEmits<FocusScopeEmits>()\n\nconst { currentRef, currentElement } = useForwardExpose()\nconst lastFocusedElementRef = ref<HTMLElement | null>(null)\nconst focusScopesStack = createFocusScopesStack()\n\nconst focusScope = reactive({\n  paused: false,\n  pause() {\n    this.paused = true\n  },\n  resume() {\n    this.paused = false\n  },\n})\n\nwatchEffect((cleanupFn) => {\n  if (!isClient)\n    return\n  const container = currentElement.value\n  if (!props.trapped)\n    return\n\n  function handleFocusIn(event: FocusEvent) {\n    if (focusScope.paused || !container)\n      return\n    const target = event.target as HTMLElement | null\n    if (container.contains(target))\n      lastFocusedElementRef.value = target\n    else focus(lastFocusedElementRef.value, { select: true })\n  }\n\n  function handleFocusOut(event: FocusEvent) {\n    if (focusScope.paused || !container)\n      return\n    const relatedTarget = event.relatedTarget as HTMLElement | null\n\n    // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n    //\n    // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n    // 2. In Google Chrome, when the focused element is removed from the DOM.\n    //\n    // We let the browser do its thing here because:\n    //\n    // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n    // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n    //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n    if (relatedTarget === null)\n      return\n\n    // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n    // that is outside the container, we move focus to the last valid focused element inside.\n    if (!container.contains(relatedTarget))\n      focus(lastFocusedElementRef.value, { select: true })\n  }\n\n  // When the focused element gets removed from the DOM, browsers move focus\n  // back to the document.body. In this case, we move focus to the container\n  // to keep focus trapped correctly.\n  // -- related: https://github.com/unovue/reka-ui/issues/518\n  // Reka UI tentative solution:\n  // instead of leaning on document.activeElement, we use lastFocusedElementRef.value to check\n  // if the element still exist inside the container,\n  // if not then we focus to the container\n  function handleMutations(mutations: MutationRecord[]) {\n    const isLastFocusedElementExist = container.contains(lastFocusedElementRef.value)\n    if (!isLastFocusedElementExist)\n      focus(container)\n  }\n\n  document.addEventListener('focusin', handleFocusIn)\n  document.addEventListener('focusout', handleFocusOut)\n  const mutationObserver = new MutationObserver(handleMutations)\n  if (container)\n    mutationObserver.observe(container, { childList: true, subtree: true })\n\n  cleanupFn(() => {\n    document.removeEventListener('focusin', handleFocusIn)\n    document.removeEventListener('focusout', handleFocusOut)\n    mutationObserver.disconnect()\n  })\n})\n\nwatchEffect(async (cleanupFn) => {\n  const container = currentElement.value\n\n  await nextTick()\n  if (!container)\n    return\n  focusScopesStack.add(focusScope)\n  const previouslyFocusedElement = getActiveElement() as HTMLElement | null\n  const hasFocusedCandidate = container.contains(previouslyFocusedElement)\n\n  if (!hasFocusedCandidate) {\n    const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS)\n    container.addEventListener(AUTOFOCUS_ON_MOUNT, (ev: Event) =>\n      emits('mountAutoFocus', ev))\n    container.dispatchEvent(mountEvent)\n\n    if (!mountEvent.defaultPrevented) {\n      focusFirst(removeLinks(getTabbableCandidates(container)), {\n        select: true,\n      })\n      if (getActiveElement() === previouslyFocusedElement)\n        focus(container)\n    }\n  }\n\n  cleanupFn(() => {\n    container.removeEventListener(AUTOFOCUS_ON_MOUNT, (ev: Event) =>\n      emits('mountAutoFocus', ev))\n\n    const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS)\n    const unmountEventHandler = (ev: Event) => {\n      emits('unmountAutoFocus', ev)\n    }\n    container.addEventListener(AUTOFOCUS_ON_UNMOUNT, unmountEventHandler)\n    container.dispatchEvent(unmountEvent)\n\n    setTimeout(() => {\n      if (!unmountEvent.defaultPrevented)\n        focus(previouslyFocusedElement ?? document.body, { select: true })\n\n      // we need to remove the listener after we `dispatchEvent`\n      container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, unmountEventHandler)\n\n      focusScopesStack.remove(focusScope)\n    }, 0)\n  })\n})\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  if (!props.loop && !props.trapped)\n    return\n  if (focusScope.paused)\n    return\n\n  const isTabKey\n    = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey\n  const focusedElement = getActiveElement() as HTMLElement | null\n\n  if (isTabKey && focusedElement) {\n    const container = event.currentTarget as HTMLElement\n    const [first, last] = getTabbableEdges(container)\n    const hasTabbableElementsInside = first && last\n\n    // we can only wrap focus if we have tabbable edges\n    if (!hasTabbableElementsInside) {\n      if (focusedElement === container)\n        event.preventDefault()\n    }\n    else {\n      if (!event.shiftKey && focusedElement === last) {\n        event.preventDefault()\n        if (props.loop)\n          focus(first, { select: true })\n      }\n      else if (event.shiftKey && focusedElement === first) {\n        event.preventDefault()\n        if (props.loop)\n          focus(last, { select: true })\n      }\n    }\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    ref=\"currentRef\"\n    tabindex=\"-1\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    @keydown=\"handleKeyDown\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { getActiveElement, useForwardExpose } from '@/shared'\n\nexport type FocusScopeEmits = {\n  /**\n   * Event handler called when auto-focusing on mount.\n   * Can be prevented.\n   */\n  mountAutoFocus: [event: Event]\n\n  /**\n   * Event handler called when auto-focusing on unmount.\n   * Can be prevented.\n   */\n  unmountAutoFocus: [event: Event]\n}\n\nexport interface FocusScopeProps extends PrimitiveProps {\n  /**\n   * When `true`, tabbing from last item will focus first tabbable\n   * and shift+tab from first item will focus last tababble.\n   * @defaultValue false\n   */\n  loop?: boolean\n\n  /**\n   * When `true`, focus cannot escape the focus scope via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapped?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { isClient } from '@vueuse/shared'\nimport { nextTick, reactive, ref, watchEffect } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { createFocusScopesStack, removeLinks } from './stack'\nimport {\n  AUTOFOCUS_ON_MOUNT,\n  AUTOFOCUS_ON_UNMOUNT,\n  EVENT_OPTIONS,\n  focus,\n  focusFirst,\n  getTabbableCandidates,\n  getTabbableEdges,\n} from './utils'\n\nconst props = withDefaults(defineProps<FocusScopeProps>(), {\n  loop: false,\n  trapped: false,\n})\nconst emits = defineEmits<FocusScopeEmits>()\n\nconst { currentRef, currentElement } = useForwardExpose()\nconst lastFocusedElementRef = ref<HTMLElement | null>(null)\nconst focusScopesStack = createFocusScopesStack()\n\nconst focusScope = reactive({\n  paused: false,\n  pause() {\n    this.paused = true\n  },\n  resume() {\n    this.paused = false\n  },\n})\n\nwatchEffect((cleanupFn) => {\n  if (!isClient)\n    return\n  const container = currentElement.value\n  if (!props.trapped)\n    return\n\n  function handleFocusIn(event: FocusEvent) {\n    if (focusScope.paused || !container)\n      return\n    const target = event.target as HTMLElement | null\n    if (container.contains(target))\n      lastFocusedElementRef.value = target\n    else focus(lastFocusedElementRef.value, { select: true })\n  }\n\n  function handleFocusOut(event: FocusEvent) {\n    if (focusScope.paused || !container)\n      return\n    const relatedTarget = event.relatedTarget as HTMLElement | null\n\n    // A `focusout` event with a `null` `relatedTarget` will happen in at least two cases:\n    //\n    // 1. When the user switches app/tabs/windows/the browser itself loses focus.\n    // 2. In Google Chrome, when the focused element is removed from the DOM.\n    //\n    // We let the browser do its thing here because:\n    //\n    // 1. The browser already keeps a memory of what's focused for when the page gets refocused.\n    // 2. In Google Chrome, if we try to focus the deleted focused element (as per below), it\n    //    throws the CPU to 100%, so we avoid doing anything for this reason here too.\n    if (relatedTarget === null)\n      return\n\n    // If the focus has moved to an actual legitimate element (`relatedTarget !== null`)\n    // that is outside the container, we move focus to the last valid focused element inside.\n    if (!container.contains(relatedTarget))\n      focus(lastFocusedElementRef.value, { select: true })\n  }\n\n  // When the focused element gets removed from the DOM, browsers move focus\n  // back to the document.body. In this case, we move focus to the container\n  // to keep focus trapped correctly.\n  // -- related: https://github.com/unovue/reka-ui/issues/518\n  // Reka UI tentative solution:\n  // instead of leaning on document.activeElement, we use lastFocusedElementRef.value to check\n  // if the element still exist inside the container,\n  // if not then we focus to the container\n  function handleMutations(mutations: MutationRecord[]) {\n    const isLastFocusedElementExist = container.contains(lastFocusedElementRef.value)\n    if (!isLastFocusedElementExist)\n      focus(container)\n  }\n\n  document.addEventListener('focusin', handleFocusIn)\n  document.addEventListener('focusout', handleFocusOut)\n  const mutationObserver = new MutationObserver(handleMutations)\n  if (container)\n    mutationObserver.observe(container, { childList: true, subtree: true })\n\n  cleanupFn(() => {\n    document.removeEventListener('focusin', handleFocusIn)\n    document.removeEventListener('focusout', handleFocusOut)\n    mutationObserver.disconnect()\n  })\n})\n\nwatchEffect(async (cleanupFn) => {\n  const container = currentElement.value\n\n  await nextTick()\n  if (!container)\n    return\n  focusScopesStack.add(focusScope)\n  const previouslyFocusedElement = getActiveElement() as HTMLElement | null\n  const hasFocusedCandidate = container.contains(previouslyFocusedElement)\n\n  if (!hasFocusedCandidate) {\n    const mountEvent = new CustomEvent(AUTOFOCUS_ON_MOUNT, EVENT_OPTIONS)\n    container.addEventListener(AUTOFOCUS_ON_MOUNT, (ev: Event) =>\n      emits('mountAutoFocus', ev))\n    container.dispatchEvent(mountEvent)\n\n    if (!mountEvent.defaultPrevented) {\n      focusFirst(removeLinks(getTabbableCandidates(container)), {\n        select: true,\n      })\n      if (getActiveElement() === previouslyFocusedElement)\n        focus(container)\n    }\n  }\n\n  cleanupFn(() => {\n    container.removeEventListener(AUTOFOCUS_ON_MOUNT, (ev: Event) =>\n      emits('mountAutoFocus', ev))\n\n    const unmountEvent = new CustomEvent(AUTOFOCUS_ON_UNMOUNT, EVENT_OPTIONS)\n    const unmountEventHandler = (ev: Event) => {\n      emits('unmountAutoFocus', ev)\n    }\n    container.addEventListener(AUTOFOCUS_ON_UNMOUNT, unmountEventHandler)\n    container.dispatchEvent(unmountEvent)\n\n    setTimeout(() => {\n      if (!unmountEvent.defaultPrevented)\n        focus(previouslyFocusedElement ?? document.body, { select: true })\n\n      // we need to remove the listener after we `dispatchEvent`\n      container.removeEventListener(AUTOFOCUS_ON_UNMOUNT, unmountEventHandler)\n\n      focusScopesStack.remove(focusScope)\n    }, 0)\n  })\n})\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  if (!props.loop && !props.trapped)\n    return\n  if (focusScope.paused)\n    return\n\n  const isTabKey\n    = event.key === 'Tab' && !event.altKey && !event.ctrlKey && !event.metaKey\n  const focusedElement = getActiveElement() as HTMLElement | null\n\n  if (isTabKey && focusedElement) {\n    const container = event.currentTarget as HTMLElement\n    const [first, last] = getTabbableEdges(container)\n    const hasTabbableElementsInside = first && last\n\n    // we can only wrap focus if we have tabbable edges\n    if (!hasTabbableElementsInside) {\n      if (focusedElement === container)\n        event.preventDefault()\n    }\n    else {\n      if (!event.shiftKey && focusedElement === last) {\n        event.preventDefault()\n        if (props.loop)\n          focus(first, { select: true })\n      }\n      else if (event.shiftKey && focusedElement === first) {\n        event.preventDefault()\n        if (props.loop)\n          focus(last, { select: true })\n      }\n    }\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    ref=\"currentRef\"\n    tabindex=\"-1\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    @keydown=\"handleKeyDown\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "import { getActiveElement } from '@/shared'\n\nexport type CheckedState = boolean | 'indeterminate'\nexport type Direction = 'ltr' | 'rtl'\n\nexport const ITEM_NAME = 'MenuItem'\nexport const ITEM_SELECT = 'menu.itemSelect'\nexport const SELECTION_KEYS = ['Enter', ' ']\nexport const FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home']\nexport const LAST_KEYS = ['ArrowUp', 'PageDown', 'End']\nexport const FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS]\nexport const SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n}\nexport const SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n}\n\nexport function getOpenState(open: boolean) {\n  return open ? 'open' : 'closed'\n}\n\nexport function isIndeterminate(\n  checked?: CheckedState,\n): checked is 'indeterminate' {\n  return checked === 'indeterminate'\n}\n\nexport function getCheckedState(checked: CheckedState) {\n  return isIndeterminate(checked)\n    ? 'indeterminate'\n    : checked\n      ? 'checked'\n      : 'unchecked'\n}\n\nexport function focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = getActiveElement()\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)\n      return\n    candidate.focus()\n    if (getActiveElement() !== PREVIOUSLY_FOCUSED_ELEMENT)\n      return\n  }\n}\n\nexport interface Point {\n  x: number\n  y: number\n}\nexport type Polygon = Point[]\nexport type Side = 'left' | 'right'\nexport interface GraceIntent {\n  area: Polygon\n  side: Side\n}\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nexport function isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point\n  let inside = false\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x\n    const yi = polygon[i].y\n    const xj = polygon[j].x\n    const yj = polygon[j].y\n\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)\n    if (intersect)\n      inside = !inside\n  }\n\n  return inside\n}\n\nexport function isPointerInGraceArea(event: PointerEvent, area?: Polygon) {\n  if (!area)\n    return false\n  const cursorPos = { x: event.clientX, y: event.clientY }\n  return isPointInPolygon(cursorPos, area)\n}\n\nexport function isMouseEvent(event: PointerEvent) {\n  return event.pointerType === 'mouse'\n}\n", "import type { Ref } from 'vue'\nimport { onMounted } from 'vue'\n\nconst DEFAULT_TITLE_NAME = 'DialogTitle'\nconst DEFAULT_CONTENT_NAME = 'DialogContent'\n\nexport type WarningProps = {\n  titleName?: string\n  contentName?: string\n  componentLink?: string\n  titleId: string\n  descriptionId: string\n  contentElement: Ref<HTMLElement | undefined>\n}\n\nexport function useWarning({\n  titleName = DEFAULT_TITLE_NAME,\n  contentName = DEFAULT_CONTENT_NAME,\n  componentLink = 'dialog.html#title',\n  titleId,\n  descriptionId,\n  contentElement,\n}: WarningProps) {\n  const TITLE_MESSAGE = `Warning: \\`${contentName}\\` requires a \\`${titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://www.reka-ui.com/docs/components/${componentLink}`\n\n  const DESCRIPTION_MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby=\"undefined\"\\` for ${contentName}.`\n\n  onMounted(() => {\n    const hasTitle = document.getElementById(titleId)\n    if (!hasTitle)\n      console.warn(TITLE_MESSAGE)\n\n    const describedById = contentElement.value?.getAttribute('aria-describedby')\n    // if we have an id and the user hasn't set aria-describedby=\"undefined\"\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId)\n      if (!hasDescription)\n        console.warn(DESCRIPTION_MESSAGE)\n    }\n  })\n}\n", "<script lang=\"ts\">\nimport type {\n  DismissableLayerEmits,\n  DismissableLayerProps,\n} from '@/DismissableLayer'\nimport { getActiveElement, useForwardExpose, useId } from '@/shared'\n\nexport type DialogContentImplEmits = DismissableLayerEmits & {\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  openAutoFocus: [event: Event]\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  closeAutoFocus: [event: Event]\n}\n\nexport interface DialogContentImplProps extends DismissableLayerProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling transntion with Vue native transition or other animation libraries.\n   */\n  forceMount?: boolean\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { FocusScope } from '@/FocusScope'\nimport { getOpenState } from '@/Menu/utils'\nimport { injectDialogRootContext } from './DialogRoot.vue'\nimport { useWarning } from './utils'\n\nconst props = defineProps<DialogContentImplProps>()\nconst emits = defineEmits<DialogContentImplEmits>()\n\nconst rootContext = injectDialogRootContext()\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\n\nrootContext.titleId ||= useId(undefined, 'reka-dialog-title')\nrootContext.descriptionId ||= useId(undefined, 'reka-dialog-description')\n\nonMounted(() => {\n  rootContext.contentElement = contentElement\n\n  // Preserve the `DialogTrigger` element in case it was triggered programmatically\n  if (getActiveElement() !== document.body)\n    rootContext.triggerElement.value = getActiveElement() as HTMLElement\n})\n\nif (process.env.NODE_ENV !== 'production') {\n  useWarning({\n    titleName: 'DialogTitle',\n    contentName: 'DialogContent',\n    componentLink: 'dialog.html#title',\n    titleId: rootContext.titleId,\n    descriptionId: rootContext.descriptionId,\n    contentElement,\n  })\n}\n</script>\n\n<template>\n  <FocusScope\n    as-child\n    loop\n    :trapped=\"props.trapFocus\"\n    @mount-auto-focus=\"emits('openAutoFocus', $event)\"\n    @unmount-auto-focus=\"emits('closeAutoFocus', $event)\"\n  >\n    <DismissableLayer\n      :id=\"rootContext.contentId\"\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :disable-outside-pointer-events=\"disableOutsidePointerEvents\"\n      role=\"dialog\"\n      :aria-describedby=\"rootContext.descriptionId\"\n      :aria-labelledby=\"rootContext.titleId\"\n      :data-state=\"getOpenState(rootContext.open.value)\"\n      v-bind=\"$attrs\"\n      @dismiss=\"rootContext.onOpenChange(false)\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @focus-outside=\"emits('focusOutside', $event)\"\n      @interact-outside=\"emits('interactOutside', $event)\"\n      @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n    >\n      <slot />\n    </DismissableLayer>\n  </FocusScope>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DismissableLayerEmits,\n  DismissableLayerProps,\n} from '@/DismissableLayer'\nimport { getActiveElement, useForwardExpose, useId } from '@/shared'\n\nexport type DialogContentImplEmits = DismissableLayerEmits & {\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  openAutoFocus: [event: Event]\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  closeAutoFocus: [event: Event]\n}\n\nexport interface DialogContentImplProps extends DismissableLayerProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling transntion with Vue native transition or other animation libraries.\n   */\n  forceMount?: boolean\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { FocusScope } from '@/FocusScope'\nimport { getOpenState } from '@/Menu/utils'\nimport { injectDialogRootContext } from './DialogRoot.vue'\nimport { useWarning } from './utils'\n\nconst props = defineProps<DialogContentImplProps>()\nconst emits = defineEmits<DialogContentImplEmits>()\n\nconst rootContext = injectDialogRootContext()\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\n\nrootContext.titleId ||= useId(undefined, 'reka-dialog-title')\nrootContext.descriptionId ||= useId(undefined, 'reka-dialog-description')\n\nonMounted(() => {\n  rootContext.contentElement = contentElement\n\n  // Preserve the `DialogTrigger` element in case it was triggered programmatically\n  if (getActiveElement() !== document.body)\n    rootContext.triggerElement.value = getActiveElement() as HTMLElement\n})\n\nif (process.env.NODE_ENV !== 'production') {\n  useWarning({\n    titleName: 'DialogTitle',\n    contentName: 'DialogContent',\n    componentLink: 'dialog.html#title',\n    titleId: rootContext.titleId,\n    descriptionId: rootContext.descriptionId,\n    contentElement,\n  })\n}\n</script>\n\n<template>\n  <FocusScope\n    as-child\n    loop\n    :trapped=\"props.trapFocus\"\n    @mount-auto-focus=\"emits('openAutoFocus', $event)\"\n    @unmount-auto-focus=\"emits('closeAutoFocus', $event)\"\n  >\n    <DismissableLayer\n      :id=\"rootContext.contentId\"\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :disable-outside-pointer-events=\"disableOutsidePointerEvents\"\n      role=\"dialog\"\n      :aria-describedby=\"rootContext.descriptionId\"\n      :aria-labelledby=\"rootContext.titleId\"\n      :data-state=\"getOpenState(rootContext.open.value)\"\n      v-bind=\"$attrs\"\n      @dismiss=\"rootContext.onOpenChange(false)\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @focus-outside=\"emits('focusOutside', $event)\"\n      @interact-outside=\"emits('interactOutside', $event)\"\n      @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n    >\n      <slot />\n    </DismissableLayer>\n  </FocusScope>\n</template>\n", "<script setup lang=\"ts\">\nimport type { DialogContentImplEmits, DialogContentImplProps } from './DialogContentImpl.vue'\nimport { useEmitAsProps, useForwardExpose, useHideOthers } from '@/shared'\nimport DialogContentImpl from './DialogContentImpl.vue'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = defineProps<DialogContentImplProps>()\nconst emits = defineEmits<DialogContentImplEmits>()\n\nconst rootContext = injectDialogRootContext()\n\nconst emitsAsProps = useEmitAsProps(emits)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nuseHideOthers(currentElement)\n</script>\n\n<template>\n  <DialogContentImpl\n    v-bind=\"{ ...props, ...emitsAsProps }\"\n    :ref=\"forwardRef\"\n    :trap-focus=\"rootContext.open.value\"\n    :disable-outside-pointer-events=\"true\"\n    @close-auto-focus=\"\n      (event) => {\n        if (!event.defaultPrevented) {\n          event.preventDefault();\n          rootContext.triggerElement.value?.focus();\n        }\n      }\n    \"\n    @pointer-down-outside=\"\n      (event) => {\n        const originalEvent = event.detail.originalEvent;\n        const ctrlLeftClick\n          = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n        // If the event is a right-click, we shouldn't close because\n        // it is effectively as if we right-clicked the `Overlay`.\n        if (isRightClick) event.preventDefault();\n      }\n    \"\n    @focus-outside=\"\n      (event) => {\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        event.preventDefault();\n      }\n    \"\n  >\n    <slot />\n  </DialogContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { DialogContentImplEmits, DialogContentImplProps } from './DialogContentImpl.vue'\nimport { useEmitAsProps, useForwardExpose, useHideOthers } from '@/shared'\nimport DialogContentImpl from './DialogContentImpl.vue'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = defineProps<DialogContentImplProps>()\nconst emits = defineEmits<DialogContentImplEmits>()\n\nconst rootContext = injectDialogRootContext()\n\nconst emitsAsProps = useEmitAsProps(emits)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nuseHideOthers(currentElement)\n</script>\n\n<template>\n  <DialogContentImpl\n    v-bind=\"{ ...props, ...emitsAsProps }\"\n    :ref=\"forwardRef\"\n    :trap-focus=\"rootContext.open.value\"\n    :disable-outside-pointer-events=\"true\"\n    @close-auto-focus=\"\n      (event) => {\n        if (!event.defaultPrevented) {\n          event.preventDefault();\n          rootContext.triggerElement.value?.focus();\n        }\n      }\n    \"\n    @pointer-down-outside=\"\n      (event) => {\n        const originalEvent = event.detail.originalEvent;\n        const ctrlLeftClick\n          = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n        // If the event is a right-click, we shouldn't close because\n        // it is effectively as if we right-clicked the `Overlay`.\n        if (isRightClick) event.preventDefault();\n      }\n    \"\n    @focus-outside=\"\n      (event) => {\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        event.preventDefault();\n      }\n    \"\n  >\n    <slot />\n  </DialogContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { DialogContentImplEmits, DialogContentImplProps } from './DialogContentImpl.vue'\nimport { ref } from 'vue'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\nimport DialogContentImpl from './DialogContentImpl.vue'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = defineProps<DialogContentImplProps>()\nconst emits = defineEmits<DialogContentImplEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n\nconst rootContext = injectDialogRootContext()\nconst hasInteractedOutsideRef = ref(false)\nconst hasPointerDownOutsideRef = ref(false)\n</script>\n\n<template>\n  <DialogContentImpl\n    v-bind=\"{ ...props, ...emitsAsProps }\"\n    :trap-focus=\"false\"\n    :disable-outside-pointer-events=\"false\"\n    @close-auto-focus=\"\n      (event) => {\n        if (!event.defaultPrevented) {\n          if (!hasInteractedOutsideRef) rootContext.triggerElement.value?.focus();\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        }\n\n        hasInteractedOutsideRef = false;\n        hasPointerDownOutsideRef = false;\n      }\n    \"\n    @interact-outside=\"(event) => {\n      if (!event.defaultPrevented) {\n        hasInteractedOutsideRef = true;\n        if (event.detail.originalEvent.type === 'pointerdown') {\n          hasPointerDownOutsideRef = true;\n        }\n      }\n\n      // Prevent dismissing when clicking the trigger.\n      // As the trigger is already setup to close, without doing so would\n      // cause it to close and immediately open.\n      const target = event.target as HTMLElement;\n      const targetIsTrigger = rootContext.triggerElement.value?.contains(target);\n      if (targetIsTrigger) event.preventDefault();\n\n      // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n      // we will get the pointer down outside event on the trigger, but then a subsequent\n      // focus outside event on the container, we ignore any focus outside event when we've\n      // already had a pointer down outside event.\n      if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef) {\n        event.preventDefault();\n      }\n    }\"\n  >\n    <slot />\n  </DialogContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { DialogContentImplEmits, DialogContentImplProps } from './DialogContentImpl.vue'\nimport { ref } from 'vue'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\nimport DialogContentImpl from './DialogContentImpl.vue'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = defineProps<DialogContentImplProps>()\nconst emits = defineEmits<DialogContentImplEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n\nconst rootContext = injectDialogRootContext()\nconst hasInteractedOutsideRef = ref(false)\nconst hasPointerDownOutsideRef = ref(false)\n</script>\n\n<template>\n  <DialogContentImpl\n    v-bind=\"{ ...props, ...emitsAsProps }\"\n    :trap-focus=\"false\"\n    :disable-outside-pointer-events=\"false\"\n    @close-auto-focus=\"\n      (event) => {\n        if (!event.defaultPrevented) {\n          if (!hasInteractedOutsideRef) rootContext.triggerElement.value?.focus();\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        }\n\n        hasInteractedOutsideRef = false;\n        hasPointerDownOutsideRef = false;\n      }\n    \"\n    @interact-outside=\"(event) => {\n      if (!event.defaultPrevented) {\n        hasInteractedOutsideRef = true;\n        if (event.detail.originalEvent.type === 'pointerdown') {\n          hasPointerDownOutsideRef = true;\n        }\n      }\n\n      // Prevent dismissing when clicking the trigger.\n      // As the trigger is already setup to close, without doing so would\n      // cause it to close and immediately open.\n      const target = event.target as HTMLElement;\n      const targetIsTrigger = rootContext.triggerElement.value?.contains(target);\n      if (targetIsTrigger) event.preventDefault();\n\n      // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n      // we will get the pointer down outside event on the trigger, but then a subsequent\n      // focus outside event on the container, we ignore any focus outside event when we've\n      // already had a pointer down outside event.\n      if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef) {\n        event.preventDefault();\n      }\n    }\"\n  >\n    <slot />\n  </DialogContentImpl>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DialogContentImplEmits,\n  DialogContentImplProps,\n} from './DialogContentImpl.vue'\n\nexport type DialogContentEmits = DialogContentImplEmits\n\nexport interface DialogContentProps extends Omit<DialogContentImplProps, 'trapFocus'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\nimport DialogContentModal from './DialogContentModal.vue'\nimport DialogContentNonModal from './DialogContentNonModal.vue'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = defineProps<DialogContentProps>()\nconst emits = defineEmits<DialogContentEmits>()\n\nconst rootContext = injectDialogRootContext()\n\nconst emitsAsProps = useEmitAsProps(emits)\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <DialogContentModal\n      v-if=\"rootContext.modal.value\"\n      :ref=\"forwardRef\"\n      v-bind=\"{ ...props, ...emitsAsProps, ...$attrs }\"\n    >\n      <slot />\n    </DialogContentModal>\n    <DialogContentNonModal\n      v-else\n      :ref=\"forwardRef\"\n      v-bind=\"{ ...props, ...emitsAsProps, ...$attrs }\"\n    >\n      <slot />\n    </DialogContentNonModal>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DialogContentImplEmits,\n  DialogContentImplProps,\n} from './DialogContentImpl.vue'\n\nexport type DialogContentEmits = DialogContentImplEmits\n\nexport interface DialogContentProps extends Omit<DialogContentImplProps, 'trapFocus'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\nimport DialogContentModal from './DialogContentModal.vue'\nimport DialogContentNonModal from './DialogContentNonModal.vue'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = defineProps<DialogContentProps>()\nconst emits = defineEmits<DialogContentEmits>()\n\nconst rootContext = injectDialogRootContext()\n\nconst emitsAsProps = useEmitAsProps(emits)\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <DialogContentModal\n      v-if=\"rootContext.modal.value\"\n      :ref=\"forwardRef\"\n      v-bind=\"{ ...props, ...emitsAsProps, ...$attrs }\"\n    >\n      <slot />\n    </DialogContentModal>\n    <DialogContentNonModal\n      v-else\n      :ref=\"forwardRef\"\n      v-bind=\"{ ...props, ...emitsAsProps, ...$attrs }\"\n    >\n      <slot />\n    </DialogContentNonModal>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DialogDescriptionProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = withDefaults(defineProps<DialogDescriptionProps>(), { as: 'p' })\n\nuseForwardExpose()\nconst rootContext = injectDialogRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"rootContext.descriptionId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DialogDescriptionProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = withDefaults(defineProps<DialogDescriptionProps>(), { as: 'p' })\n\nuseForwardExpose()\nconst rootContext = injectDialogRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"rootContext.descriptionId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface DialogOverlayImplProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\ndefineProps<DialogOverlayImplProps>()\nconst rootContext = injectDialogRootContext()\n\nuseBodyScrollLock(true)\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    style=\"pointer-events: auto\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface DialogOverlayImplProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\ndefineProps<DialogOverlayImplProps>()\nconst rootContext = injectDialogRootContext()\n\nuseBodyScrollLock(true)\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    style=\"pointer-events: auto\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogOverlayImplProps } from './DialogOverlayImpl.vue'\nimport { useForwardExpose } from '@/shared'\nimport DialogOverlayImpl from './DialogOverlayImpl.vue'\n\nexport interface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\ndefineProps<DialogOverlayProps>()\nconst rootContext = injectDialogRootContext()\n\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <Presence\n    v-if=\"rootContext?.modal.value\"\n    :present=\"forceMount || rootContext.open.value\"\n  >\n    <DialogOverlayImpl\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n    >\n      <slot />\n    </DialogOverlayImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogOverlayImplProps } from './DialogOverlayImpl.vue'\nimport { useForwardExpose } from '@/shared'\nimport DialogOverlayImpl from './DialogOverlayImpl.vue'\n\nexport interface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\ndefineProps<DialogOverlayProps>()\nconst rootContext = injectDialogRootContext()\n\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <Presence\n    v-if=\"rootContext?.modal.value\"\n    :present=\"forceMount || rootContext.open.value\"\n  >\n    <DialogOverlayImpl\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n    >\n      <slot />\n    </DialogOverlayImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nexport interface TeleportProps {\n  /**\n   * Vue native teleport component prop `:to`\n   *\n   * {@link https://vuejs.org/guide/built-ins/teleport.html#basic-usage}\n   */\n  to?: string | HTMLElement\n  /**\n   * Disable teleport and render the component inline\n   *\n   * {@link https://vuejs.org/guide/built-ins/teleport.html#disabling-teleport}\n   */\n  disabled?: boolean\n  /**\n   * Defer the resolving of a Teleport target until other parts of the\n   * application have mounted (requires Vue 3.5.0+)\n   *\n   * {@link https://vuejs.org/guide/built-ins/teleport.html#deferred-teleport}\n   */\n  defer?: boolean\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useMounted } from '@vueuse/core'\n\nwithDefaults(defineProps<TeleportProps>(), {\n  to: 'body',\n})\n\nconst isMounted = useMounted()\n</script>\n\n<template>\n  <Teleport\n    v-if=\"isMounted || forceMount\"\n    :to=\"to\"\n    :disabled=\"disabled\"\n    :defer=\"defer\"\n  >\n    <slot />\n  </Teleport>\n</template>\n", "<script lang=\"ts\">\nexport interface TeleportProps {\n  /**\n   * Vue native teleport component prop `:to`\n   *\n   * {@link https://vuejs.org/guide/built-ins/teleport.html#basic-usage}\n   */\n  to?: string | HTMLElement\n  /**\n   * Disable teleport and render the component inline\n   *\n   * {@link https://vuejs.org/guide/built-ins/teleport.html#disabling-teleport}\n   */\n  disabled?: boolean\n  /**\n   * Defer the resolving of a Teleport target until other parts of the\n   * application have mounted (requires Vue 3.5.0+)\n   *\n   * {@link https://vuejs.org/guide/built-ins/teleport.html#deferred-teleport}\n   */\n  defer?: boolean\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useMounted } from '@vueuse/core'\n\nwithDefaults(defineProps<TeleportProps>(), {\n  to: 'body',\n})\n\nconst isMounted = useMounted()\n</script>\n\n<template>\n  <Teleport\n    v-if=\"isMounted || forceMount\"\n    :to=\"to\"\n    :disabled=\"disabled\"\n    :defer=\"defer\"\n  >\n    <slot />\n  </Teleport>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface DialogPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<DialogPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface DialogPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<DialogPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DialogTitleProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = withDefaults(defineProps<DialogTitleProps>(), { as: 'h2' })\nconst rootContext = injectDialogRootContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"rootContext.titleId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DialogTitleProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = withDefaults(defineProps<DialogTitleProps>(), { as: 'h2' })\nconst rootContext = injectDialogRootContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"rootContext.titleId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface DialogTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = withDefaults(defineProps<DialogTriggerProps>(), {\n  as: 'button',\n})\nconst rootContext = injectDialogRootContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nrootContext.contentId ||= useId(undefined, 'reka-dialog-content')\nonMounted(() => {\n  rootContext.triggerElement.value = currentElement.value\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    aria-haspopup=\"dialog\"\n    :aria-expanded=\"rootContext.open.value || false\"\n    :aria-controls=\"rootContext.open.value ? rootContext.contentId : undefined\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    @click=\"rootContext.onOpenToggle\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface DialogTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\nimport { injectDialogRootContext } from './DialogRoot.vue'\n\nconst props = withDefaults(defineProps<DialogTriggerProps>(), {\n  as: 'button',\n})\nconst rootContext = injectDialogRootContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nrootContext.contentId ||= useId(undefined, 'reka-dialog-content')\nonMounted(() => {\n  rootContext.triggerElement.value = currentElement.value\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    aria-haspopup=\"dialog\"\n    :aria-expanded=\"rootContext.open.value || false\"\n    :aria-controls=\"rootContext.open.value ? rootContext.contentId : undefined\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    @click=\"rootContext.onOpenToggle\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogCloseProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogActionProps extends DialogCloseProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogClose } from '@/Dialog'\n\nconst props = withDefaults(defineProps<AlertDialogActionProps>(), { as: 'button' })\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogClose v-bind=\"props\">\n    <slot />\n  </DialogClose>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogCloseProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogActionProps extends DialogCloseProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogClose } from '@/Dialog'\n\nconst props = withDefaults(defineProps<AlertDialogActionProps>(), { as: 'button' })\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogClose v-bind=\"props\">\n    <slot />\n  </DialogClose>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DialogContentEmits,\n  DialogContentProps,\n} from '@/Dialog'\nimport { createContext, useEmitAsProps, useForwardExpose } from '@/shared'\n\ninterface AlertDialogContentContext {\n  onCancelElementChange: (el: HTMLElement | undefined) => void\n}\n\nexport const [injectAlertDialogContentContext, provideAlertDialogContentContext]\n  = createContext<AlertDialogContentContext>('AlertDialogContent')\n\nexport type AlertDialogContentEmits = DialogContentEmits\nexport interface AlertDialogContentProps extends DialogContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, ref } from 'vue'\nimport { DialogContent } from '@/Dialog'\n\nconst props = defineProps<AlertDialogContentProps>()\nconst emits = defineEmits<AlertDialogContentEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n\nconst cancelElement = ref<HTMLElement | undefined>()\n\nprovideAlertDialogContentContext({\n  onCancelElementChange: (el) => {\n    cancelElement.value = el\n  },\n})\n</script>\n\n<template>\n  <DialogContent\n    v-bind=\"{ ...props, ...emitsAsProps }\"\n    role=\"alertdialog\"\n    @pointer-down-outside.prevent\n    @interact-outside.prevent\n    @open-auto-focus=\"\n      () => {\n        nextTick(() => {\n          cancelElement?.focus({\n            preventScroll: true,\n          });\n        });\n      }\n    \"\n  >\n    <slot />\n  </DialogContent>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DialogContentEmits,\n  DialogContentProps,\n} from '@/Dialog'\nimport { createContext, useEmitAsProps, useForwardExpose } from '@/shared'\n\ninterface AlertDialogContentContext {\n  onCancelElementChange: (el: HTMLElement | undefined) => void\n}\n\nexport const [injectAlertDialogContentContext, provideAlertDialogContentContext]\n  = createContext<AlertDialogContentContext>('AlertDialogContent')\n\nexport type AlertDialogContentEmits = DialogContentEmits\nexport interface AlertDialogContentProps extends DialogContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, ref } from 'vue'\nimport { DialogContent } from '@/Dialog'\n\nconst props = defineProps<AlertDialogContentProps>()\nconst emits = defineEmits<AlertDialogContentEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n\nconst cancelElement = ref<HTMLElement | undefined>()\n\nprovideAlertDialogContentContext({\n  onCancelElementChange: (el) => {\n    cancelElement.value = el\n  },\n})\n</script>\n\n<template>\n  <DialogContent\n    v-bind=\"{ ...props, ...emitsAsProps }\"\n    role=\"alertdialog\"\n    @pointer-down-outside.prevent\n    @interact-outside.prevent\n    @open-auto-focus=\"\n      () => {\n        nextTick(() => {\n          cancelElement?.focus({\n            preventScroll: true,\n          });\n        });\n      }\n    \"\n  >\n    <slot />\n  </DialogContent>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogCloseProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogCancelProps extends DialogCloseProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { DialogClose } from '@/Dialog'\nimport { injectAlertDialogContentContext } from './AlertDialogContent.vue'\n\nconst props = withDefaults(defineProps<AlertDialogCancelProps>(), { as: 'button' })\nconst contentContext = injectAlertDialogContentContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nonMounted(() => {\n  contentContext.onCancelElementChange(currentElement.value)\n})\n</script>\n\n<template>\n  <DialogClose\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n  >\n    <slot />\n  </DialogClose>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogCloseProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogCancelProps extends DialogCloseProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { DialogClose } from '@/Dialog'\nimport { injectAlertDialogContentContext } from './AlertDialogContent.vue'\n\nconst props = withDefaults(defineProps<AlertDialogCancelProps>(), { as: 'button' })\nconst contentContext = injectAlertDialogContentContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nonMounted(() => {\n  contentContext.onCancelElementChange(currentElement.value)\n})\n</script>\n\n<template>\n  <DialogClose\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n  >\n    <slot />\n  </DialogClose>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogDescriptionProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogDescriptionProps extends DialogDescriptionProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogDescription } from '@/Dialog'\n\nconst props = withDefaults(defineProps<AlertDialogDescriptionProps>(), { as: 'p' })\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogDescription v-bind=\"props\">\n    <slot />\n  </DialogDescription>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogDescriptionProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogDescriptionProps extends DialogDescriptionProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogDescription } from '@/Dialog'\n\nconst props = withDefaults(defineProps<AlertDialogDescriptionProps>(), { as: 'p' })\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogDescription v-bind=\"props\">\n    <slot />\n  </DialogDescription>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogOverlayProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogOverlayProps extends DialogOverlayProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogOverlay } from '@/Dialog'\n\nconst props = defineProps<AlertDialogOverlayProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogOverlay v-bind=\"props\">\n    <slot />\n  </DialogOverlay>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogOverlayProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogOverlayProps extends DialogOverlayProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogOverlay } from '@/Dialog'\n\nconst props = defineProps<AlertDialogOverlayProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogOverlay v-bind=\"props\">\n    <slot />\n  </DialogOverlay>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface AlertDialogPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<AlertDialogPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface AlertDialogPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<AlertDialogPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DialogRootEmits,\n  DialogRootProps,\n} from '@/Dialog'\n\nexport type AlertDialogEmits = DialogRootEmits\nexport interface AlertDialogProps extends Omit<DialogRootProps, 'modal'> {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogRoot } from '@/Dialog'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nconst props = defineProps<AlertDialogProps>()\nconst emits = defineEmits<AlertDialogEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogRoot\n    v-slot=\"slotProps\"\n    v-bind=\"forwarded\"\n    :modal=\"true\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </DialogRoot>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DialogRootEmits,\n  DialogRootProps,\n} from '@/Dialog'\n\nexport type AlertDialogEmits = DialogRootEmits\nexport interface AlertDialogProps extends Omit<DialogRootProps, 'modal'> {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogRoot } from '@/Dialog'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nconst props = defineProps<AlertDialogProps>()\nconst emits = defineEmits<AlertDialogEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogRoot\n    v-slot=\"slotProps\"\n    v-bind=\"forwarded\"\n    :modal=\"true\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </DialogRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogTitleProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogTitleProps extends DialogTitleProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogTitle } from '@/Dialog'\n\nconst props = withDefaults(defineProps<AlertDialogTitleProps>(), { as: 'h2' })\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogTitle v-bind=\"props\">\n    <slot />\n  </DialogTitle>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogTitleProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogTitleProps extends DialogTitleProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogTitle } from '@/Dialog'\n\nconst props = withDefaults(defineProps<AlertDialogTitleProps>(), { as: 'h2' })\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogTitle v-bind=\"props\">\n    <slot />\n  </DialogTitle>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogTriggerProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogTriggerProps extends DialogTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogTrigger } from '@/Dialog'\n\nconst props = withDefaults(defineProps<AlertDialogTriggerProps>(), { as: 'button' })\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogTrigger v-bind=\"props\">\n    <slot />\n  </DialogTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { DialogTriggerProps } from '@/Dialog'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AlertDialogTriggerProps extends DialogTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { DialogTrigger } from '@/Dialog'\n\nconst props = withDefaults(defineProps<AlertDialogTriggerProps>(), { as: 'button' })\nuseForwardExpose()\n</script>\n\n<template>\n  <DialogTrigger v-bind=\"props\">\n    <slot />\n  </DialogTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AspectRatioProps extends PrimitiveProps {\n  /**\n   * The desired ratio. Eg: 16/9\n   * @defaultValue 1\n   */\n  ratio?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<AspectRatioProps>(), {\n  ratio: 1,\n})\ndefineSlots<{\n  default?: (props: {\n    /** Current aspect ratio (in %) */\n    aspect: typeof aspect.value\n  }) => any\n}>()\n\nconst { forwardRef } = useForwardExpose()\n\nconst aspect = computed(() => {\n  return (1 / props.ratio) * 100\n})\n</script>\n\n<template>\n  <div\n    :style=\"`position: relative; width: 100%; padding-bottom: ${aspect}%`\"\n    data-reka-aspect-ratio-wrapper\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      style=\"position: absolute; inset: 0px\"\n      v-bind=\"$attrs\"\n    >\n      <slot :aspect=\"aspect\" />\n    </Primitive>\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AspectRatioProps extends PrimitiveProps {\n  /**\n   * The desired ratio. Eg: 16/9\n   * @defaultValue 1\n   */\n  ratio?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<AspectRatioProps>(), {\n  ratio: 1,\n})\ndefineSlots<{\n  default?: (props: {\n    /** Current aspect ratio (in %) */\n    aspect: typeof aspect.value\n  }) => any\n}>()\n\nconst { forwardRef } = useForwardExpose()\n\nconst aspect = computed(() => {\n  return (1 / props.ratio) * 100\n})\n</script>\n\n<template>\n  <div\n    :style=\"`position: relative; width: 100%; padding-bottom: ${aspect}%`\"\n    data-reka-aspect-ratio-wrapper\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      style=\"position: absolute; inset: 0px\"\n      v-bind=\"$attrs\"\n    >\n      <slot :aspect=\"aspect\" />\n    </Primitive>\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { ImageLoadingStatus } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface AvatarRootProps extends PrimitiveProps {}\n\nexport type AvatarRootContext = {\n  imageLoadingStatus: Ref<ImageLoadingStatus>\n}\n\nexport const [injectAvatarRootContext, provideAvatarRootContext]\n  = createContext<AvatarRootContext>('AvatarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nwithDefaults(defineProps<AvatarRootProps>(), {\n  as: 'span',\n})\n\nuseForwardExpose()\n\nprovideAvatarRootContext({\n  imageLoadingStatus: ref<ImageLoadingStatus>('idle'),\n})\n</script>\n\n<template>\n  <Primitive\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { ImageLoadingStatus } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface AvatarRootProps extends PrimitiveProps {}\n\nexport type AvatarRootContext = {\n  imageLoadingStatus: Ref<ImageLoadingStatus>\n}\n\nexport const [injectAvatarRootContext, provideAvatarRootContext]\n  = createContext<AvatarRootContext>('AvatarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nwithDefaults(defineProps<AvatarRootProps>(), {\n  as: 'span',\n})\n\nuseForwardExpose()\n\nprovideAvatarRootContext({\n  imageLoadingStatus: ref<ImageLoadingStatus>('idle'),\n})\n</script>\n\n<template>\n  <Primitive\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { isClient } from '@vueuse/shared'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AvatarFallbackProps extends PrimitiveProps {\n  /** Useful for delaying rendering so it only appears for those with slower connections. */\n  delayMs?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, watchEffect } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectAvatarRootContext } from './AvatarRoot.vue'\n\nconst props = withDefaults(defineProps<AvatarFallbackProps>(), {\n  as: 'span',\n})\n\nconst rootContext = injectAvatarRootContext()\nuseForwardExpose()\n\nconst canRender = ref(props.delayMs === undefined)\n\nwatchEffect((onCleanup) => {\n  if (props.delayMs && isClient) {\n    const timerId = window.setTimeout(() => {\n      canRender.value = true\n    }, props.delayMs)\n\n    onCleanup(() => {\n      window.clearTimeout(timerId)\n    })\n  }\n})\n</script>\n\n<template>\n  <Primitive\n    v-if=\"canRender && rootContext.imageLoadingStatus.value !== 'loaded'\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { isClient } from '@vueuse/shared'\nimport { useForwardExpose } from '@/shared'\n\nexport interface AvatarFallbackProps extends PrimitiveProps {\n  /** Useful for delaying rendering so it only appears for those with slower connections. */\n  delayMs?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, watchEffect } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectAvatarRootContext } from './AvatarRoot.vue'\n\nconst props = withDefaults(defineProps<AvatarFallbackProps>(), {\n  as: 'span',\n})\n\nconst rootContext = injectAvatarRootContext()\nuseForwardExpose()\n\nconst canRender = ref(props.delayMs === undefined)\n\nwatchEffect((onCleanup) => {\n  if (props.delayMs && isClient) {\n    const timerId = window.setTimeout(() => {\n      canRender.value = true\n    }, props.delayMs)\n\n    onCleanup(() => {\n      window.clearTimeout(timerId)\n    })\n  }\n})\n</script>\n\n<template>\n  <Primitive\n    v-if=\"canRender && rootContext.imageLoadingStatus.value !== 'loaded'\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "import type { ImgHTMLAttributes, Ref } from 'vue'\nimport { isClient } from '@vueuse/shared'\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\n\nexport type ImageLoadingStatus = 'idle' | 'loading' | 'loaded' | 'error'\n\nfunction resolveLoadingStatus(image: HTMLImageElement | null, src?: string): ImageLoadingStatus {\n  if (!image) {\n    return 'idle'\n  }\n  if (!src) {\n    return 'error'\n  }\n  if (image.src !== src) {\n    image.src = src\n  }\n  return image.complete && image.naturalWidth > 0 ? 'loaded' : 'loading'\n}\n\nexport function useImageLoadingStatus(src: Ref<string>, { referrerPolicy, crossOrigin }: { referrerPolicy?: Ref<ImgHTMLAttributes['referrerpolicy']>, crossOrigin?: Ref<ImgHTMLAttributes['crossorigin']> } = {}) {\n  const isMounted = ref(false)\n  const imageRef = ref<HTMLImageElement | null>(null)\n  const image = computed(() => {\n    if (!isMounted.value) {\n      return null\n    }\n    if (!imageRef.value && isClient) {\n      imageRef.value = new window.Image()\n    }\n    return imageRef.value\n  })\n\n  const loadingStatus = ref<ImageLoadingStatus>(resolveLoadingStatus(image.value, src.value))\n\n  const updateStatus = (status: ImageLoadingStatus) => () => {\n    if (isMounted.value)\n      loadingStatus.value = status\n  }\n\n  onMounted(() => {\n    isMounted.value = true\n\n    watchEffect((onCleanup) => {\n      const img = image.value\n      if (!img)\n        return\n\n      loadingStatus.value = resolveLoadingStatus(img, src.value)\n\n      const handleLoad = updateStatus('loaded')\n      const handleError = updateStatus('error')\n\n      img.addEventListener('load', handleLoad)\n      img.addEventListener('error', handleError)\n\n      if (referrerPolicy?.value)\n        img.referrerPolicy = referrerPolicy.value\n      if (typeof crossOrigin?.value === 'string')\n        img.crossOrigin = crossOrigin.value\n\n      onCleanup(() => {\n        img.removeEventListener('load', handleLoad)\n        img.removeEventListener('error', handleError)\n      })\n    })\n  })\n\n  onUnmounted(() => {\n    isMounted.value = false\n  })\n\n  return loadingStatus\n}\n", "<script lang=\"ts\">\nimport type { ImageLoadingStatus } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport type AvatarImageEmits = {\n  /**\n   * A callback providing information about the loading status of the image. <br>\n   * This is useful in case you want to control more precisely what to render as the image is loading.\n   */\n  loadingStatusChange: [value: ImageLoadingStatus]\n}\nexport interface AvatarImageProps extends PrimitiveProps {\n  src: string\n  referrerPolicy?: ImgHTMLAttributes['referrerpolicy']\n  crossOrigin?: ImgHTMLAttributes['crossorigin']\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { ImgHTMLAttributes } from 'vue'\nimport { toRefs, watch } from 'vue'\nimport { Primitive } from '../Primitive'\nimport { injectAvatarRootContext } from './AvatarRoot.vue'\nimport { useImageLoadingStatus } from './utils'\n\nconst props = withDefaults(defineProps<AvatarImageProps>(), { as: 'img' })\nconst emits = defineEmits<AvatarImageEmits>()\n\nconst { src, referrerPolicy, crossOrigin } = toRefs(props)\nuseForwardExpose()\nconst rootContext = injectAvatarRootContext()\n\nconst imageLoadingStatus = useImageLoadingStatus(src, { referrerPolicy, crossOrigin })\n\nwatch(\n  imageLoadingStatus,\n  (newValue) => {\n    emits('loadingStatusChange', newValue)\n    if (newValue !== 'idle')\n      rootContext.imageLoadingStatus.value = newValue\n  },\n  { immediate: true },\n)\n</script>\n\n<template>\n  <Primitive\n    v-show=\"imageLoadingStatus === 'loaded'\"\n    role=\"img\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :src=\"src\"\n    :referrer-policy=\"referrerPolicy\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ImageLoadingStatus } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport type AvatarImageEmits = {\n  /**\n   * A callback providing information about the loading status of the image. <br>\n   * This is useful in case you want to control more precisely what to render as the image is loading.\n   */\n  loadingStatusChange: [value: ImageLoadingStatus]\n}\nexport interface AvatarImageProps extends PrimitiveProps {\n  src: string\n  referrerPolicy?: ImgHTMLAttributes['referrerpolicy']\n  crossOrigin?: ImgHTMLAttributes['crossorigin']\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { ImgHTMLAttributes } from 'vue'\nimport { toRefs, watch } from 'vue'\nimport { Primitive } from '../Primitive'\nimport { injectAvatarRootContext } from './AvatarRoot.vue'\nimport { useImageLoadingStatus } from './utils'\n\nconst props = withDefaults(defineProps<AvatarImageProps>(), { as: 'img' })\nconst emits = defineEmits<AvatarImageEmits>()\n\nconst { src, referrerPolicy, crossOrigin } = toRefs(props)\nuseForwardExpose()\nconst rootContext = injectAvatarRootContext()\n\nconst imageLoadingStatus = useImageLoadingStatus(src, { referrerPolicy, crossOrigin })\n\nwatch(\n  imageLoadingStatus,\n  (newValue) => {\n    emits('loadingStatusChange', newValue)\n    if (newValue !== 'idle')\n      rootContext.imageLoadingStatus.value = newValue\n  },\n  { immediate: true },\n)\n</script>\n\n<template>\n  <Primitive\n    v-show=\"imageLoadingStatus === 'loaded'\"\n    role=\"img\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :src=\"src\"\n    :referrer-policy=\"referrerPolicy\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "/*\n  * Implementation ported from https://github.com/melt-ui/melt-ui/blob/develop/src/lib/builders/date-field/_internal/helpers.ts\n*/\n\nimport type { DateSegmentPart, EditableSegmentPart, SegmentPart, TimeSegmentPart } from './types'\n\nexport const DATE_SEGMENT_PARTS = ['day', 'month', 'year'] as const\nexport const TIME_SEGMENT_PARTS = ['hour', 'minute', 'second', 'dayPeriod'] as const\nexport const NON_EDITABLE_SEGMENT_PARTS = ['literal', 'timeZoneName'] as const\nexport const EDITABLE_SEGMENT_PARTS = [...DATE_SEGMENT_PARTS, ...TIME_SEGMENT_PARTS] as const\nexport const EDITABLE_TIME_SEGMENT_PARTS = [...TIME_SEGMENT_PARTS] as const\nexport const ALL_SEGMENT_PARTS = [\n  ...EDITABLE_SEGMENT_PARTS,\n  ...NON_EDITABLE_SEGMENT_PARTS,\n] as const\nexport const ALL_EXCEPT_LITERAL_PARTS = ALL_SEGMENT_PARTS.filter(part => part !== 'literal')\n\nexport function isDateSegmentPart(part: unknown): part is DateSegmentPart {\n  return DATE_SEGMENT_PARTS.includes(part as DateSegmentPart)\n}\n\nexport function isTimeSegmentPart(part: unknown): part is TimeSegmentPart {\n  return TIME_SEGMENT_PARTS.includes(part as TimeSegmentPart)\n}\n\nexport function isSegmentPart(part: string): part is EditableSegmentPart {\n  return EDITABLE_SEGMENT_PARTS.includes(part as EditableSegmentPart)\n}\n\nexport function isAnySegmentPart(part: unknown): part is SegmentPart {\n  return ALL_SEGMENT_PARTS.includes(part as EditableSegmentPart)\n}\n", "/*\n * Implementation ported from from from https://github.com/melt-ui/melt-ui/blob/develop/src/lib/internal/helpers/date/placeholders.ts\n*/\n\nconst supportedLocales = [\n  'ach',\n  'af',\n  'am',\n  'an',\n  'ar',\n  'ast',\n  'az',\n  'be',\n  'bg',\n  'bn',\n  'br',\n  'bs',\n  'ca',\n  'cak',\n  'ckb',\n  'cs',\n  'cy',\n  'da',\n  'de',\n  'dsb',\n  'el',\n  'en',\n  'eo',\n  'es',\n  'et',\n  'eu',\n  'fa',\n  'ff',\n  'fi',\n  'fr',\n  'fy',\n  'ga',\n  'gd',\n  'gl',\n  'he',\n  'hr',\n  'hsb',\n  'hu',\n  'ia',\n  'id',\n  'it',\n  'ja',\n  'ka',\n  'kk',\n  'kn',\n  'ko',\n  'lb',\n  'lo',\n  'lt',\n  'lv',\n  'meh',\n  'ml',\n  'ms',\n  'nl',\n  'nn',\n  'no',\n  'oc',\n  'pl',\n  'pt',\n  'rm',\n  'ro',\n  'ru',\n  'sc',\n  'scn',\n  'sk',\n  'sl',\n  'sr',\n  'sv',\n  'szl',\n  'tg',\n  'th',\n  'tr',\n  'uk',\n  'zh-CN',\n  'zh-TW',\n] as const\n\nconst placeholderFields = ['year', 'month', 'day'] as const\n\ntype PlaceholderField = (typeof placeholderFields)[number]\nexport type SupportedLocale = (typeof supportedLocales)[number]\nexport type PlaceholderMap = Record<SupportedLocale, Record<PlaceholderField, string>>\n\nconst placeholders: PlaceholderMap = {\n  'ach': { year: 'mwaka', month: 'dwe', day: 'nino' },\n  'af': { year: 'jjjj', month: 'mm', day: 'dd' },\n  'am': { year: 'ዓዓዓዓ', month: 'ሚሜ', day: 'ቀቀ' },\n  'an': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'ar': { year: 'سنة', month: 'شهر', day: 'يوم' },\n  'ast': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'az': { year: 'iiii', month: 'aa', day: 'gg' },\n  'be': { year: 'гггг', month: 'мм', day: 'дд' },\n  'bg': { year: 'гггг', month: 'мм', day: 'дд' },\n  'bn': { year: 'yyyy', month: 'মিমি', day: 'dd' },\n  'br': { year: 'bbbb', month: 'mm', day: 'dd' },\n  'bs': { year: 'gggg', month: 'mm', day: 'dd' },\n  'ca': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'cak': { year: 'jjjj', month: 'ii', day: 'q\\'q\\'' },\n  'ckb': { year: 'ساڵ', month: 'مانگ', day: 'ڕۆژ' },\n  'cs': { year: 'rrrr', month: 'mm', day: 'dd' },\n  'cy': { year: 'bbbb', month: 'mm', day: 'dd' },\n  'da': { year: 'åååå', month: 'mm', day: 'dd' },\n  'de': { year: 'jjjj', month: 'mm', day: 'tt' },\n  'dsb': { year: 'llll', month: 'mm', day: 'źź' },\n  'el': { year: 'εεεε', month: 'μμ', day: 'ηη' },\n  'en': { year: 'yyyy', month: 'mm', day: 'dd' },\n  'eo': { year: 'jjjj', month: 'mm', day: 'tt' },\n  'es': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'et': { year: 'aaaa', month: 'kk', day: 'pp' },\n  'eu': { year: 'uuuu', month: 'hh', day: 'ee' },\n  'fa': { year: 'سال', month: 'ماه', day: 'روز' },\n  'ff': { year: 'hhhh', month: 'll', day: 'ññ' },\n  'fi': { year: 'vvvv', month: 'kk', day: 'pp' },\n  'fr': { year: 'aaaa', month: 'mm', day: 'jj' },\n  'fy': { year: 'jjjj', month: 'mm', day: 'dd' },\n  'ga': { year: 'bbbb', month: 'mm', day: 'll' },\n  'gd': { year: 'bbbb', month: 'mm', day: 'll' },\n  'gl': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'he': { year: 'שנה', month: 'חודש', day: 'יום' },\n  'hr': { year: 'gggg', month: 'mm', day: 'dd' },\n  'hsb': { year: 'llll', month: 'mm', day: 'dd' },\n  'hu': { year: 'éééé', month: 'hh', day: 'nn' },\n  'ia': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'id': { year: 'tttt', month: 'bb', day: 'hh' },\n  'it': { year: 'aaaa', month: 'mm', day: 'gg' },\n  'ja': { year: ' 年 ', month: '月', day: '日' },\n  'ka': { year: 'წწწწ', month: 'თთ', day: 'რრ' },\n  'kk': { year: 'жжжж', month: 'аа', day: 'кк' },\n  'kn': { year: 'ವವವವ', month: 'ಮಿಮೀ', day: 'ದಿದಿ' },\n  'ko': { year: '연도', month: '월', day: '일' },\n  'lb': { year: 'jjjj', month: 'mm', day: 'dd' },\n  'lo': { year: 'ປປປປ', month: 'ດດ', day: 'ວວ' },\n  'lt': { year: 'mmmm', month: 'mm', day: 'dd' },\n  'lv': { year: 'gggg', month: 'mm', day: 'dd' },\n  'meh': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'ml': { year: 'വർഷം', month: 'മാസം', day: 'തീയതി' },\n  'ms': { year: 'tttt', month: 'mm', day: 'hh' },\n  'nl': { year: 'jjjj', month: 'mm', day: 'dd' },\n  'nn': { year: 'åååå', month: 'mm', day: 'dd' },\n  'no': { year: 'åååå', month: 'mm', day: 'dd' },\n  'oc': { year: 'aaaa', month: 'mm', day: 'jj' },\n  'pl': { year: 'rrrr', month: 'mm', day: 'dd' },\n  'pt': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'rm': { year: 'oooo', month: 'mm', day: 'dd' },\n  'ro': { year: 'aaaa', month: 'll', day: 'zz' },\n  'ru': { year: 'гггг', month: 'мм', day: 'дд' },\n  'sc': { year: 'aaaa', month: 'mm', day: 'dd' },\n  'scn': { year: 'aaaa', month: 'mm', day: 'jj' },\n  'sk': { year: 'rrrr', month: 'mm', day: 'dd' },\n  'sl': { year: 'llll', month: 'mm', day: 'dd' },\n  'sr': { year: 'гггг', month: 'мм', day: 'дд' },\n  'sv': { year: 'åååå', month: 'mm', day: 'dd' },\n  'szl': { year: 'rrrr', month: 'mm', day: 'dd' },\n  'tg': { year: 'сссс', month: 'мм', day: 'рр' },\n  'th': { year: 'ปปปป', month: 'ดด', day: 'วว' },\n  'tr': { year: 'yyyy', month: 'aa', day: 'gg' },\n  'uk': { year: 'рррр', month: 'мм', day: 'дд' },\n  'zh-CN': { year: '年', month: '月', day: '日' },\n  'zh-TW': { year: '年', month: '月', day: '日' },\n}\n\nfunction getPlaceholderObj(locale: SupportedLocale | (string & {})) {\n  if (!isSupportedLocale(locale)) {\n    const localeLanguage = getLocaleLanguage(locale)\n    if (!isSupportedLocale(localeLanguage))\n      return placeholders.en\n\n    else\n      return placeholders[localeLanguage]\n  }\n  else {\n    return placeholders[locale]\n  }\n}\n\ntype Field = 'era' | 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second' | 'dayPeriod'\n\nexport function getPlaceholder(\n  field: Field,\n  value: string,\n  locale: SupportedLocale | (string & {}),\n) {\n  if (isPlaceholderField(field))\n    return getPlaceholderObj(locale)[field]\n\n  if (isDefaultField(field))\n    return value\n\n  if (isTimeField(field))\n    return '––'\n\n  return ''\n}\n\nfunction isSupportedLocale(locale: string): locale is SupportedLocale {\n  return supportedLocales.includes(locale as SupportedLocale)\n}\n\nfunction isPlaceholderField(field: unknown): field is PlaceholderField {\n  return placeholderFields.includes(field as PlaceholderField)\n}\n\nfunction isTimeField(field: unknown): field is 'hour' | 'minute' | 'second' {\n  return field === 'hour' || field === 'minute' || field === 'second'\n}\n\nfunction isDefaultField(field: unknown): field is 'era' | 'dayPeriod' {\n  return field === 'era' || field === 'dayPeriod'\n}\n\nfunction getLocaleLanguage(locale: string) {\n  if (Intl.Locale)\n    return new Intl.Locale(locale).language\n\n  return locale.split('-')[0]\n}\n", "import type { DateFields, DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { Formatter } from '@/shared'\nimport type { DateSegmentPart, Granularity, HourCycle, SegmentContentObj, SegmentPart, SegmentValueObj, TimeSegmentPart } from '@/shared/date'\nimport { isZonedDateTime, toDate } from '@/date'\nimport { DATE_SEGMENT_PARTS, EDITABLE_SEGMENT_PARTS, getOptsByGranularity, getPlaceholder, isDateSegmentPart, isSegmentPart, normalizeHourCycle, TIME_SEGMENT_PARTS } from '@/shared/date'\n\nconst calendarDateTimeGranularities = ['hour', 'minute', 'second']\n\ntype SyncDateSegmentValuesProps = {\n  value: DateValue\n  formatter: Formatter\n}\n\ntype SyncTimeSegmentValuesProps = {\n  value: DateValue\n  formatter: Formatter\n}\n\nexport function syncTimeSegmentValues(props: SyncTimeSegmentValuesProps) {\n  return Object.fromEntries(TIME_SEGMENT_PARTS.map((part) => {\n    if (part === 'dayPeriod')\n      return [part, props.formatter.dayPeriod(toDate(props.value))]\n    return [part, props.value[part as keyof DateValue]]\n  })) as SegmentValueObj\n}\n\nexport function syncSegmentValues(props: SyncDateSegmentValuesProps) {\n  const { formatter } = props\n\n  const dateValues = DATE_SEGMENT_PARTS.map((part) => {\n    return [part, props.value[part]]\n  })\n  if ('hour' in props.value) {\n    const timeValues = syncTimeSegmentValues({ value: props.value, formatter })\n\n    return { ...Object.fromEntries(dateValues), ...timeValues } as SegmentValueObj\n  }\n\n  return Object.fromEntries(dateValues) as SegmentValueObj\n}\n\nexport function initializeTimeSegmentValues(granularity: 'hour' | 'minute' | 'second'): SegmentValueObj {\n  return Object.fromEntries(\n    TIME_SEGMENT_PARTS.map((part) => {\n      if (part === 'dayPeriod')\n        return [part, 'AM']\n      return [part, null]\n    }).filter(([key]) => {\n      if (key === 'literal' || key === null)\n        return false\n      if (granularity === 'minute' && key === 'second')\n        return false\n      if (granularity === 'hour' && (key === 'second' || key === 'minute'))\n        return false\n      else return true\n    }),\n  )\n}\n\nexport function initializeSegmentValues(granularity: Granularity): SegmentValueObj {\n  const initialParts = EDITABLE_SEGMENT_PARTS.map((part) => {\n    if (part === 'dayPeriod')\n      return [part, 'AM']\n\n    return [part, null]\n  }).filter(([key]) => {\n    if (key === 'literal' || key === null)\n      return false\n    if (granularity === 'minute' && key === 'second')\n      return false\n    if (granularity === 'hour' && (key === 'second' || key === 'minute'))\n      return false\n    if (granularity === 'day')\n      return !calendarDateTimeGranularities.includes(key) && key !== 'dayPeriod'\n    else return true\n  })\n\n  return Object.fromEntries(initialParts)\n}\n\ntype SharedContentProps = {\n  granularity: Granularity\n  dateRef: DateValue\n  formatter: Formatter\n  hideTimeZone: boolean\n  hourCycle: HourCycle\n  isTimeValue?: boolean\n}\n\ntype CreateContentObjProps = SharedContentProps & {\n  segmentValues: SegmentValueObj\n  locale: Ref<string>\n}\n\ntype CreateContentArrProps = SharedContentProps & {\n  contentObj: SegmentContentObj\n}\n\nfunction createContentObj(props: CreateContentObjProps) {\n  const { segmentValues, formatter, locale } = props\n  function getPartContent(part: DateSegmentPart | TimeSegmentPart) {\n    if ('hour' in segmentValues) {\n      const value = segmentValues[part]\n      if (value !== null) {\n        if (part === 'day') {\n          return formatter.part(props.dateRef.set({\n            [part as keyof DateFields]: value,\n            /**\n             * Edge case for the day field:\n             *\n             * 1. If the month is filled,\n             *   we need to ensure that the day snaps to the maximum value of that month.\n             * 2. If the month is not filled,\n             *   we default to the month with the maximum number of days (here just using January, 31 days),\n             *   so that user can input any possible day.\n             */\n            month: segmentValues.month ?? 1,\n          }), part, { hourCycle: normalizeHourCycle(props.hourCycle) })\n        }\n        return formatter.part(props.dateRef.set({ [part]: value }), part, {\n          hourCycle: normalizeHourCycle(props.hourCycle),\n        })\n      }\n      else {\n        return getPlaceholder(part, '', locale.value)\n      }\n    }\n    else {\n      if (isDateSegmentPart(part)) {\n        const value = segmentValues[part]\n        if (value !== null) {\n          if (part === 'day') {\n            return formatter.part(props.dateRef.set({\n              [part]: value,\n              // Same logic as above for the day field\n              month: segmentValues.month ?? 1,\n            }), part)\n          }\n\n          return formatter.part(props.dateRef.set({ [part]: value }), part)\n        }\n\n        else {\n          return getPlaceholder(part, '', locale.value)\n        }\n      }\n      return ''\n    }\n  }\n\n  const content = Object.keys(segmentValues).reduce((obj, part) => {\n    if (!isSegmentPart(part))\n      return obj\n    if ('hour' in segmentValues && part === 'dayPeriod') {\n      const value = segmentValues[part]\n\n      if (value !== null)\n        obj[part] = value\n\n      else\n        obj[part] = getPlaceholder(part, 'AM', locale.value)\n    }\n    else {\n      obj[part] = getPartContent(part)\n    }\n\n    return obj\n  }, {} as SegmentContentObj)\n\n  return content\n}\n\nfunction createContentArr(props: CreateContentArrProps) {\n  const { granularity, formatter, contentObj, hideTimeZone, hourCycle, isTimeValue } = props\n  const parts = formatter.toParts(props.dateRef, getOptsByGranularity(granularity, hourCycle, isTimeValue))\n\n  const segmentContentArr = parts\n    .map((part) => {\n      const defaultParts = ['literal', 'timeZoneName', null]\n\n      if (defaultParts.includes(part.type) || !isSegmentPart(part.type)) {\n        return {\n          part: part.type,\n          value: part.value,\n        }\n      }\n\n      return {\n        part: part.type,\n        value: contentObj[part.type],\n      }\n    })\n    .filter((segment): segment is { part: SegmentPart, value: string } => {\n      if (segment.part === null || segment.value === null)\n        return false\n      if (segment.part === 'timeZoneName' && (!isZonedDateTime(props.dateRef) || hideTimeZone))\n        return false\n\n      return true\n    })\n\n  return segmentContentArr\n}\n\ntype CreateContentProps = CreateContentObjProps\n\nexport function createContent(props: CreateContentProps) {\n  const contentObj = createContentObj(props)\n\n  const contentArr = createContentArr({\n    contentObj,\n    ...props,\n  })\n\n  return {\n    obj: contentObj,\n    arr: contentArr,\n  }\n}\n", "import { useKbd } from '@/shared'\n\nexport function isSegmentNavigationKey(key: string) {\n  const kbd = useKbd()\n  if (key === kbd.ARROW_RIGHT || key === kbd.ARROW_LEFT)\n    return true\n  return false\n}\n\nexport function isNumberString(value: string) {\n  if (Number.isNaN(Number.parseInt(value)))\n    return false\n  return true\n}\n\nexport function isAcceptableSegmentKey(key: string) {\n  const kbd = useKbd()\n  const acceptableSegmentKeys = [\n    kbd.ENTER,\n    kbd.ARROW_UP,\n    kbd.ARROW_DOWN,\n    kbd.ARROW_LEFT,\n    kbd.ARROW_RIGHT,\n    kbd.BACKSPACE,\n    kbd.SPACE,\n    'a',\n    'A',\n    'p',\n    'P',\n  ]\n  if (acceptableSegmentKeys.includes(key))\n    return true\n  if (isNumberString(key))\n    return true\n  return false\n}\n\nexport function getSegmentElements(parentElement: HTMLElement): Element[] {\n  return Array.from(parentElement.querySelectorAll('[data-reka-date-field-segment]')).filter(item => item.getAttribute('data-reka-date-field-segment') !== 'literal')\n}\n\nexport function getTimeFieldSegmentElements(parentElement: HTMLElement): Element[] {\n  return Array.from(parentElement.querySelectorAll('[data-reka-time-field-segment]')).filter(item => item.getAttribute('data-reka-time-field-segment') !== 'literal')\n}\n", "import type { CalendarDateTime, CycleTimeOptions, DateFields, DateValue, TimeFields } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { AnyExceptLiteral, DateStep, HourCycle, SegmentPart, SegmentValueObj } from './types'\nimport type { Formatter } from '@/shared'\nimport { computed } from 'vue'\nimport { getDaysInMonth, toDate } from '@/date'\nimport { useKbd } from '@/shared'\nimport { isAcceptableSegmentKey, isNumberString, isSegmentNavigationKey } from './segment'\n\ntype MinuteSecondIncrementProps = {\n  e: KeyboardEvent\n  part: keyof TimeFields\n  dateRef: DateValue\n  prevValue: number | null\n}\n\ntype DateTimeValueIncrementation = {\n  e: KeyboardEvent\n  part: keyof Omit<DateFields, 'era'> | keyof TimeFields\n  dateRef: DateValue\n  prevValue: number | null\n  hourCycle?: HourCycle\n}\n\ntype SegmentAttrProps = {\n  disabled: boolean\n  segmentValues: SegmentValueObj\n  hourCycle: HourCycle\n  placeholder: DateValue\n  formatter: Formatter\n}\n\nfunction commonSegmentAttrs(props: SegmentAttrProps) {\n  return {\n    role: 'spinbutton',\n    contenteditable: true,\n    tabindex: props.disabled ? undefined : 0,\n    spellcheck: false,\n    inputmode: 'numeric',\n    autocorrect: 'off',\n    enterkeyhint: 'next',\n    style: 'caret-color: transparent;',\n  }\n}\n\nfunction daySegmentAttrs(props: SegmentAttrProps) {\n  const { segmentValues, placeholder } = props\n  const isEmpty = segmentValues.day === null\n  const date = segmentValues.day ? placeholder.set({ day: segmentValues.day }) : placeholder\n\n  const valueNow = date.day\n  const valueMin = 1\n  const valueMax = getDaysInMonth(date)\n  const valueText = isEmpty ? 'Empty' : `${valueNow}`\n\n  return {\n    ...commonSegmentAttrs(props),\n    'aria-label': 'day,',\n    'aria-valuemin': valueMin,\n    'aria-valuemax': valueMax,\n    'aria-valuenow': valueNow,\n    'aria-valuetext': valueText,\n    'data-placeholder': isEmpty ? '' : undefined,\n  }\n}\n\nfunction monthSegmentAttrs(props: SegmentAttrProps) {\n  const { segmentValues, placeholder, formatter } = props\n  const isEmpty = segmentValues.month === null\n  const date = segmentValues.month\n    ? placeholder.set({ month: segmentValues.month })\n    : placeholder\n  const valueNow = date.month\n  const valueMin = 1\n  const valueMax = 12\n  const valueText = isEmpty ? 'Empty' : `${valueNow} - ${formatter.fullMonth(toDate(date))}`\n\n  return {\n    ...commonSegmentAttrs(props),\n    'aria-label': 'month, ',\n    'contenteditable': true,\n    'aria-valuemin': valueMin,\n    'aria-valuemax': valueMax,\n    'aria-valuenow': valueNow,\n    'aria-valuetext': valueText,\n    'data-placeholder': isEmpty ? '' : undefined,\n  }\n}\n\nfunction yearSegmentAttrs(props: SegmentAttrProps) {\n  const { segmentValues, placeholder } = props\n  const isEmpty = segmentValues.year === null\n  const date = segmentValues.year ? placeholder.set({ year: segmentValues.year }) : placeholder\n  const valueMin = 1\n  const valueMax = 9999\n  const valueNow = date.year\n  const valueText = isEmpty ? 'Empty' : `${valueNow}`\n\n  return {\n    ...commonSegmentAttrs(props),\n    'aria-label': 'year, ',\n    'aria-valuemin': valueMin,\n    'aria-valuemax': valueMax,\n    'aria-valuenow': valueNow,\n    'aria-valuetext': valueText,\n    'data-placeholder': isEmpty ? '' : undefined,\n  }\n}\n\nfunction hourSegmentAttrs(props: SegmentAttrProps) {\n  const { segmentValues, hourCycle, placeholder } = props\n\n  if (!('hour' in segmentValues) || !('hour' in placeholder))\n    return {}\n  const isEmpty = segmentValues.hour === null\n  const date = segmentValues.hour ? placeholder.set({ hour: segmentValues.hour }) : placeholder\n  const valueMin = hourCycle === 12 ? 1 : 0\n  const valueMax = hourCycle === 12 ? 12 : 23\n  const valueNow = date.hour\n  const valueText = isEmpty ? 'Empty' : `${valueNow} ${segmentValues.dayPeriod ?? ''}`\n\n  return {\n    ...commonSegmentAttrs(props),\n    'aria-label': 'hour, ',\n    'aria-valuemin': valueMin,\n    'aria-valuemax': valueMax,\n    'aria-valuenow': valueNow,\n    'aria-valuetext': valueText,\n    'data-placeholder': isEmpty ? '' : undefined,\n  }\n}\n\nfunction minuteSegmentAttrs(props: SegmentAttrProps) {\n  const { segmentValues, placeholder } = props\n  if (!('minute' in segmentValues) || !('minute' in placeholder))\n    return {}\n  const isEmpty = segmentValues.minute === null\n  const date = segmentValues.minute\n    ? placeholder.set({ minute: segmentValues.minute })\n    : placeholder\n  const valueNow = date.minute\n  const valueMin = 0\n  const valueMax = 59\n  const valueText = isEmpty ? 'Empty' : `${valueNow}`\n\n  return {\n    ...commonSegmentAttrs(props),\n    'aria-label': 'minute, ',\n    'aria-valuemin': valueMin,\n    'aria-valuemax': valueMax,\n    'aria-valuenow': valueNow,\n    'aria-valuetext': valueText,\n    'data-placeholder': isEmpty ? '' : undefined,\n  }\n}\n\nfunction secondSegmentAttrs(props: SegmentAttrProps) {\n  const { segmentValues, placeholder } = props\n  if (!('second' in segmentValues) || !('second' in placeholder))\n    return {}\n  const isEmpty = segmentValues.second === null\n  const date = segmentValues.second\n    ? placeholder.set({ second: segmentValues.second })\n    : placeholder\n  const valueNow = date.second\n  const valueMin = 0\n  const valueMax = 59\n  const valueText = isEmpty ? 'Empty' : `${valueNow}`\n\n  return {\n    ...commonSegmentAttrs(props),\n    'aria-label': 'second, ',\n    'aria-valuemin': valueMin,\n    'aria-valuemax': valueMax,\n    'aria-valuenow': valueNow,\n    'aria-valuetext': valueText,\n    'data-placeholder': isEmpty ? '' : undefined,\n  }\n}\n\nfunction dayPeriodSegmentAttrs(props: SegmentAttrProps) {\n  const { segmentValues } = props\n  if (!('dayPeriod' in segmentValues))\n    return {}\n\n  const valueMin = 0\n  const valueMax = 12\n  const valueNow = segmentValues.hour ? (segmentValues.hour > 12 ? segmentValues.hour - 12 : segmentValues.hour) : 0\n  const valueText = segmentValues.dayPeriod ?? 'AM'\n\n  return {\n    ...commonSegmentAttrs(props),\n    'inputmode': 'text',\n    'aria-label': 'AM/PM',\n    'aria-valuemin': valueMin,\n    'aria-valuemax': valueMax,\n    'aria-valuenow': valueNow,\n    'aria-valuetext': valueText,\n  }\n}\n\nfunction literalSegmentAttrs(_props: SegmentAttrProps) {\n  return {\n    'aria-hidden': true,\n    'data-segment': 'literal',\n  }\n}\n\nfunction timeZoneSegmentAttrs(props: SegmentAttrProps) {\n  return {\n    'role': 'textbox',\n    'aria-label': 'timezone, ',\n    'data-readonly': true,\n    'data-segment': 'timeZoneName',\n    'tabindex': props.disabled ? undefined : 0,\n    'style': 'caret-color: transparent;',\n  }\n}\n\nfunction eraSegmentAttrs(props: SegmentAttrProps) {\n  const { segmentValues, placeholder } = props\n\n  const valueMin = 0\n  const valueMax = 0\n  const valueNow = 0\n  const valueText = 'era' in segmentValues ? segmentValues.era : placeholder.era\n\n  return {\n    ...commonSegmentAttrs(props),\n    'aria-label': 'era',\n    'aria-valuemin': valueMin,\n    'aria-valuemax': valueMax,\n    'aria-valuenow': valueNow,\n    'aria-valuetext': valueText,\n  }\n}\n\nexport const segmentBuilders = {\n  day: {\n    attrs: daySegmentAttrs,\n  },\n  month: {\n    attrs: monthSegmentAttrs,\n  },\n  year: {\n    attrs: yearSegmentAttrs,\n  },\n  hour: {\n    attrs: hourSegmentAttrs,\n  },\n  minute: {\n    attrs: minuteSegmentAttrs,\n  },\n  second: {\n    attrs: secondSegmentAttrs,\n  },\n  dayPeriod: {\n    attrs: dayPeriodSegmentAttrs,\n  },\n  literal: {\n    attrs: literalSegmentAttrs,\n  },\n  timeZoneName: {\n    attrs: timeZoneSegmentAttrs,\n  },\n  era: {\n    attrs: eraSegmentAttrs,\n  },\n}\n\nexport type UseDateFieldProps = {\n  hasLeftFocus: Ref<boolean>\n  lastKeyZero: Ref<boolean>\n  placeholder: Ref<DateValue>\n  hourCycle: HourCycle\n  step: Ref<DateStep>\n  formatter: Formatter\n  segmentValues: Ref<SegmentValueObj>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  part: SegmentPart\n  modelValue: Ref<DateValue | undefined>\n  focusNext: () => void\n}\n\nexport function useDateField(props: UseDateFieldProps) {\n  const kbd = useKbd()\n\n  function minuteSecondIncrementation({ e, part, dateRef, prevValue }: MinuteSecondIncrementProps): number {\n    const step = props.step.value[part] ?? 1\n    const sign = e.key === kbd.ARROW_UP ? step : -step\n    const min = 0\n    const max = 59\n\n    if (prevValue === null)\n      return sign > 0 ? min : max\n\n    const cycleArgs: [keyof TimeFields, number] = [part, sign]\n    return (dateRef as CalendarDateTime).set({ [part]: prevValue }).cycle(...cycleArgs)[part]\n  }\n\n  function deleteValue(prevValue: number | null) {\n    props.hasLeftFocus.value = false\n    if (prevValue === null)\n      return prevValue\n\n    const str = prevValue.toString()\n    if (str.length === 1) {\n      props.modelValue.value = undefined\n      return null\n    }\n\n    return Number.parseInt(str.slice(0, -1))\n  }\n  function dateTimeValueIncrementation({ e, part, dateRef, prevValue, hourCycle }: DateTimeValueIncrementation): number {\n    const step = props.step.value[part] ?? 1\n    const sign = e.key === kbd.ARROW_UP ? step : -step\n\n    if (prevValue === null)\n      return dateRef[part as keyof Omit<DateFields, 'era'>]\n\n    if (part === 'hour' && 'hour' in dateRef) {\n      const cycleArgs: [keyof DateFields | keyof TimeFields, number, CycleTimeOptions?] = [part, sign, { hourCycle }]\n      return dateRef.set({ [part as keyof DateValue]: prevValue }).cycle(...cycleArgs)[part]\n    }\n\n    const cycleArgs: [keyof DateFields, number] = [part as keyof DateFields, sign]\n    if (part === 'day') {\n      return dateRef.set({\n        [part as keyof DateValue]: prevValue,\n        /**\n         * Edge case for the day field:\n         *\n         * 1. If the month is filled,\n         *   we need to ensure that the day snaps to the maximum value of that month.\n         * 2. If the month is not filled,\n         *   we default to the month with the maximum number of days (here just using January, 31 days),\n         *   so that user can input any possible day.\n         */\n        month: props.segmentValues.value.month ?? 1,\n      }).cycle(...cycleArgs)[part as keyof Omit<DateFields, 'era'>]\n    }\n\n    return dateRef.set({ [part as keyof DateValue]: prevValue }).cycle(...cycleArgs)[part as keyof Omit<DateFields, 'era'>]\n  }\n  function updateDayOrMonth(max: number, num: number, prev: number | null) {\n    let moveToNext = false\n    const maxStart = Math.floor(max / 10)\n\n    /**\n     * If the user has left the segment, we want to reset the\n     * `prev` value so that we can start the segment over again\n     * when the user types a number.\n     */\n    if (props.hasLeftFocus.value) {\n      props.hasLeftFocus.value = false\n      prev = null\n    }\n\n    if (prev === null) {\n    /**\n     * If the user types a 0 as the first number, we want\n     * to keep track of that so that when they type the next\n     * number, we can move to the next segment.\n     */\n\n      if (num === 0) {\n        props.lastKeyZero.value = true\n        return { value: null, moveToNext }\n      }\n      /**\n       * If the last key was a 0, or if the first number is\n       * greater than the max start digit (0-3 in most cases), then\n       * we want to move to the next segment, since it's not possible\n       * to continue typing a valid number in this segment.\n       */\n\n      if (props.lastKeyZero.value || num > maxStart) {\n      // move to next\n        moveToNext = true\n      }\n      props.lastKeyZero.value = false\n      /**\n       * If none of the above conditions are met, then we can just\n       * return the number as the segment value and continue typing\n       * in this segment.\n       */\n      return { value: num, moveToNext }\n    }\n\n    /**\n     * If the number of digits is 2, or if the total with the existing digit\n     * and the pressed digit is greater than the maximum value for this\n     * month, then we will reset the segment as if the user had pressed the\n     * backspace key and then typed the number.\n     */\n    const digits = prev.toString().length\n    const total = Number.parseInt(prev.toString() + num.toString())\n    /**\n     * If the number of digits is 2, or if the total with the existing digit\n     * and the pressed digit is greater than the maximum value for this\n     * month, then we will reset the segment as if the user had pressed the\n     * backspace key and then typed the number.\n     */\n\n    if (digits === 2 || total > max) {\n    /**\n     * As we're doing elsewhere, we're checking if the number is greater\n     * than the max start digit (0-3 in most months), and if so, we're\n     * going to move to the next segment.\n     */\n      if (num > maxStart || total > max) {\n      // move to next\n        moveToNext = true\n      }\n      return { value: num, moveToNext }\n    }\n    // move to next\n    moveToNext = true\n    return { value: total, moveToNext }\n  }\n\n  function updateMinuteOrSecond(num: number, prev: number | null) {\n    const max = 59\n    let moveToNext = false\n    const maxStart = Math.floor(max / 10)\n\n    /**\n     * If the user has left the segment, we want to reset the\n     * `prev` value so that we can start the segment over again\n     * when the user types a number.\n     */\n    if (props.hasLeftFocus.value) {\n      props.hasLeftFocus.value = false\n      prev = null\n    }\n\n    if (prev === null) {\n    /**\n     * If the user types a 0 as the first number, we want\n     * to keep track of that so that when they type the next\n     * number, we can move to the next segment.\n     */\n\n      if (num === 0) {\n        props.lastKeyZero.value = true\n        return { value: 0, moveToNext }\n      }\n      /**\n       * If the last key was a 0, or if the first number is\n       * greater than the max start digit (0-3 in most cases), then\n       * we want to move to the next segment, since it's not possible\n       * to continue typing a valid number in this segment.\n       */\n\n      if (props.lastKeyZero.value || num > maxStart) {\n      // move to next\n        moveToNext = true\n      }\n      props.lastKeyZero.value = false\n      /**\n       * If none of the above conditions are met, then we can just\n       * return the number as the segment value and continue typing\n       * in this segment.\n       */\n      return { value: num, moveToNext }\n    }\n\n    /**\n     * If the number of digits is 2, or if the total with the existing digit\n     * and the pressed digit is greater than the maximum value for this\n     * month, then we will reset the segment as if the user had pressed the\n     * backspace key and then typed the number.\n     */\n    const digits = prev.toString().length\n    const total = Number.parseInt(prev.toString() + num.toString())\n\n    /**\n     * If the number of digits is 2, or if the total with the existing digit\n     * and the pressed digit is greater than the maximum value for this\n     * month, then we will reset the segment as if the user had pressed the\n     * backspace key and then typed the number.\n     */\n\n    if (digits === 2 || total > max) {\n    /**\n     * As we're doing elsewhere, we're checking if the number is greater\n     * than the max start digit (0-3 in most months), and if so, we're\n     * going to move to the next segment.\n     */\n      if (num > maxStart) {\n      // move to next\n        moveToNext = true\n      }\n      return { value: num, moveToNext }\n    }\n    // move to next\n    moveToNext = true\n    return { value: total, moveToNext }\n  }\n\n  function updateHour(num: number, prev: number | null) {\n    const max = 24\n    let moveToNext = false\n    const maxStart = Math.floor(max / 10)\n\n    /**\n     * If the user has left the segment, we want to reset the\n     * `prev` value so that we can start the segment over again\n     * when the user types a number.\n     */\n    // probably not implement, kind of weird\n    if (props.hasLeftFocus.value) {\n      props.hasLeftFocus.value = false\n      prev = null\n    }\n\n    if (prev === null) {\n    /**\n     * If the user types a 0 as the first number, we want\n     * to keep track of that so that when they type the next\n     * number, we can move to the next segment.\n     */\n\n      if (num === 0) {\n        props.lastKeyZero.value = true\n        return { value: 0, moveToNext }\n      }\n      /**\n       * If the last key was a 0, or if the first number is\n       * greater than the max start digit (0-3 in most cases), then\n       * we want to move to the next segment, since it's not possible\n       * to continue typing a valid number in this segment.\n       */\n\n      if (props.lastKeyZero.value || num > maxStart) {\n      // move to next\n        moveToNext = true\n      }\n      props.lastKeyZero.value = false\n      /**\n       * If none of the above conditions are met, then we can just\n       * return the number as the segment value and continue typing\n       * in this segment.\n       */\n      return { value: num, moveToNext }\n    }\n\n    /**\n     * If the number of digits is 2, or if the total with the existing digit\n     * and the pressed digit is greater than the maximum value for this\n     * month, then we will reset the segment as if the user had pressed the\n     * backspace key and then typed the number.\n     */\n    const digits = prev.toString().length\n    const total = Number.parseInt(prev.toString() + num.toString())\n\n    /**\n     * If the number of digits is 2, or if the total with the existing digit\n     * and the pressed digit is greater than the maximum value for this\n     * month, then we will reset the segment as if the user had pressed the\n     * backspace key and then typed the number.\n     */\n\n    if (digits === 2 || total > max) {\n    /**\n     * As we're doing elsewhere, we're checking if the number is greater\n     * than the max start digit (0-3 in most months), and if so, we're\n     * going to move to the next segment.\n     */\n      if (num > maxStart) {\n      // move to next\n        moveToNext = true\n      }\n      return { value: num, moveToNext }\n    }\n    // move to next\n    moveToNext = true\n    return { value: total, moveToNext }\n  }\n\n  function updateYear(num: number, prev: number | null) {\n    let moveToNext = false\n\n    /**\n     * If the user has left the segment, we want to reset the\n     * `prev` value so that we can start the segment over again\n     * when the user types a number.\n     */\n    // probably not implement, kind of weird\n    if (props.hasLeftFocus.value) {\n      props.hasLeftFocus.value = false\n      prev = null\n    }\n\n    if (prev === null)\n      return { value: num === 0 ? 1 : num, moveToNext }\n\n    const str = prev.toString() + num.toString()\n\n    if (str.length > 4)\n      return { value: num === 0 ? 1 : num, moveToNext }\n\n    if (str.length === 4)\n      moveToNext = true\n\n    const int = Number.parseInt(str)\n    return { value: int, moveToNext }\n  }\n\n  const attributes = computed(() => segmentBuilders[props.part]?.attrs({\n    disabled: props.disabled.value,\n    placeholder: props.placeholder.value,\n    hourCycle: props.hourCycle,\n    segmentValues: props.segmentValues.value,\n    formatter: props.formatter,\n  }) ?? {})\n\n  // TODO: look into abstracting segment keydown functions since they have the same structure (checks -> arrow_up, arrow_down update -> number string update -> move to next -> backspace update)\n  function handleDaySegmentKeydown(e: KeyboardEvent) {\n    if (!isAcceptableSegmentKey(e.key) || isSegmentNavigationKey(e.key))\n      return\n\n    const prevValue = props.segmentValues.value.day\n\n    if (e.key === kbd.ARROW_DOWN || e.key === kbd.ARROW_UP) {\n      props.segmentValues.value.day = dateTimeValueIncrementation({ e, part: 'day', dateRef: props.placeholder.value, prevValue })\n      return\n    }\n\n    if (isNumberString(e.key)) {\n      const num = Number.parseInt(e.key)\n      const segmentMonthValue = props.segmentValues.value.month\n\n      const daysInMonth = segmentMonthValue\n        ? getDaysInMonth(props.placeholder.value.set({ month: segmentMonthValue }))\n        // if the month is not set, we default to the maximum number of days in a month\n        // so that user can input any possible day\n        : 31\n\n      const { value, moveToNext } = updateDayOrMonth(daysInMonth, num, prevValue)\n\n      props.segmentValues.value.day = value\n\n      if (moveToNext)\n        props.focusNext()\n    }\n\n    if (e.key === kbd.BACKSPACE) {\n      props.hasLeftFocus.value = false\n      props.segmentValues.value.day = deleteValue(prevValue)\n    }\n  }\n\n  function handleMonthSegmentKeydown(e: KeyboardEvent) {\n    if (!isAcceptableSegmentKey(e.key) || isSegmentNavigationKey(e.key))\n      return\n\n    const prevValue = props.segmentValues.value.month\n\n    if (e.key === kbd.ARROW_DOWN || e.key === kbd.ARROW_UP) {\n      props.segmentValues.value.month = dateTimeValueIncrementation({ e, part: 'month', dateRef: props.placeholder.value, prevValue })\n      return\n    }\n\n    if (isNumberString(e.key)) {\n      const num = Number.parseInt(e.key)\n      const { value, moveToNext } = updateDayOrMonth(12, num, prevValue)\n\n      props.segmentValues.value.month = value\n\n      if (moveToNext)\n        props.focusNext()\n    }\n\n    if (e.key === kbd.BACKSPACE) {\n      props.hasLeftFocus.value = false\n      props.segmentValues.value.month = deleteValue(prevValue)\n    }\n  }\n\n  function handleYearSegmentKeydown(e: KeyboardEvent) {\n    if (!isAcceptableSegmentKey(e.key) || isSegmentNavigationKey(e.key))\n      return\n\n    const prevValue = props.segmentValues.value.year\n\n    if (e.key === kbd.ARROW_DOWN || e.key === kbd.ARROW_UP) {\n      props.segmentValues.value.year = dateTimeValueIncrementation({ e, part: 'year', dateRef: props.placeholder.value, prevValue })\n      return\n    }\n\n    if (isNumberString(e.key)) {\n      const num = Number.parseInt(e.key)\n      const { value, moveToNext } = updateYear(num, prevValue)\n\n      props.segmentValues.value.year = value\n\n      if (moveToNext)\n        props.focusNext()\n    }\n\n    if (e.key === kbd.BACKSPACE) {\n      props.hasLeftFocus.value = false\n      props.segmentValues.value.year = deleteValue(prevValue)\n    }\n  }\n\n  function handleHourSegmentKeydown(e: KeyboardEvent) {\n    const dateRef = props.placeholder.value\n    if (!isAcceptableSegmentKey(e.key) || isSegmentNavigationKey(e.key) || !('hour' in dateRef) || !('hour' in props.segmentValues.value))\n      return\n\n    const prevValue = props.segmentValues.value.hour\n\n    const hourCycle = props.hourCycle\n\n    if (e.key === kbd.ARROW_UP || e.key === kbd.ARROW_DOWN) {\n      props.segmentValues.value.hour = dateTimeValueIncrementation({ e, part: 'hour', dateRef: props.placeholder.value, prevValue, hourCycle })\n\n      if ('dayPeriod' in props.segmentValues.value) {\n        if (props.segmentValues.value.hour < 12)\n          props.segmentValues.value.dayPeriod = 'AM'\n        else if (props.segmentValues.value.hour)\n          props.segmentValues.value.dayPeriod = 'PM'\n      }\n\n      return\n    }\n\n    if (isNumberString(e.key)) {\n      const num = Number.parseInt(e.key)\n      const { value, moveToNext } = updateHour(num, prevValue)\n\n      if ('dayPeriod' in props.segmentValues.value && value && value > 12)\n        props.segmentValues.value.dayPeriod = 'PM'\n      else if ('dayPeriod' in props.segmentValues.value && value)\n        props.segmentValues.value.dayPeriod = 'AM'\n\n      props.segmentValues.value.hour = value\n\n      if (moveToNext)\n        props.focusNext()\n    }\n\n    if (e.key === kbd.BACKSPACE) {\n      props.hasLeftFocus.value = false\n      props.segmentValues.value.hour = deleteValue(prevValue)\n    }\n  }\n\n  function handleMinuteSegmentKeydown(e: KeyboardEvent) {\n    const dateRef = props.placeholder.value\n\n    if (!isAcceptableSegmentKey(e.key) || isSegmentNavigationKey(e.key) || !('minute' in dateRef) || !('minute' in props.segmentValues.value))\n      return\n\n    const prevValue = props.segmentValues.value.minute\n\n    if (e.key === kbd.ARROW_UP || e.key === kbd.ARROW_DOWN) {\n      props.segmentValues.value.minute = minuteSecondIncrementation({ e, part: 'minute', dateRef: props.placeholder.value, prevValue })\n    }\n\n    if (isNumberString(e.key)) {\n      const num = Number.parseInt(e.key)\n\n      const { value, moveToNext } = updateMinuteOrSecond(num, prevValue)\n\n      props.segmentValues.value.minute = value\n\n      if (moveToNext)\n        props.focusNext()\n    }\n\n    if (e.key === kbd.BACKSPACE) {\n      props.hasLeftFocus.value = false\n      props.segmentValues.value.minute = deleteValue(prevValue)\n    }\n  }\n\n  function handleSecondSegmentKeydown(e: KeyboardEvent) {\n    const dateRef = props.placeholder.value\n\n    if (!isAcceptableSegmentKey(e.key) || isSegmentNavigationKey(e.key) || !('second' in dateRef) || !('second' in props.segmentValues.value))\n      return\n\n    const prevValue = props.segmentValues.value.second\n\n    if (e.key === kbd.ARROW_UP || e.key === kbd.ARROW_DOWN) {\n      props.segmentValues.value.second = minuteSecondIncrementation({ e, part: 'second', dateRef: props.placeholder.value, prevValue })\n    }\n\n    if (isNumberString(e.key)) {\n      const num = Number.parseInt(e.key)\n      const { value, moveToNext } = updateMinuteOrSecond(num, prevValue)\n\n      props.segmentValues.value.second = value\n\n      if (moveToNext)\n        props.focusNext()\n    }\n\n    if (e.key === kbd.BACKSPACE) {\n      props.hasLeftFocus.value = false\n      props.segmentValues.value.second = deleteValue(prevValue)\n    }\n  }\n\n  function handleDayPeriodSegmentKeydown(e: KeyboardEvent) {\n    if (((!isAcceptableSegmentKey(e.key) || isSegmentNavigationKey(e.key)) && e.key !== 'a' && e.key !== 'p') || !('hour' in props.placeholder.value) || !('dayPeriod' in props.segmentValues.value))\n      return\n\n    if (e.key === kbd.ARROW_UP || e.key === kbd.ARROW_DOWN) {\n      if (props.segmentValues.value.dayPeriod === 'AM') {\n        props.segmentValues.value.dayPeriod = 'PM'\n        props.segmentValues.value.hour = props.segmentValues.value.hour! + 12\n        return\n      }\n      props.segmentValues.value.dayPeriod = 'AM'\n      props.segmentValues.value.hour = props.segmentValues.value.hour! - 12\n      return\n    }\n\n    if (['a', 'A'].includes(e.key) && props.segmentValues.value.dayPeriod !== 'AM') {\n      props.segmentValues.value.dayPeriod = 'AM'\n      props.segmentValues.value.hour = props.segmentValues.value.hour! - 12\n      return\n    }\n\n    if (['p', 'P'].includes(e.key) && props.segmentValues.value.dayPeriod !== 'PM') {\n      props.segmentValues.value.dayPeriod = 'PM'\n      props.segmentValues.value.hour = props.segmentValues.value.hour! + 12\n    }\n  }\n\n  function handleSegmentClick(e: MouseEvent) {\n    const disabled = props.disabled.value\n    if (disabled)\n      e.preventDefault()\n  }\n\n  function handleSegmentKeydown(e: KeyboardEvent) {\n    const disabled = props.disabled.value\n    const readonly = props.readonly.value\n    if (e.key !== kbd.TAB)\n      e.preventDefault()\n\n    if (disabled || readonly)\n      return\n    const segmentKeydownHandlers = {\n      day: handleDaySegmentKeydown,\n      month: handleMonthSegmentKeydown,\n      year: handleYearSegmentKeydown,\n      hour: handleHourSegmentKeydown,\n      minute: handleMinuteSegmentKeydown,\n      second: handleSecondSegmentKeydown,\n      dayPeriod: handleDayPeriodSegmentKeydown,\n      timeZoneName: () => {},\n    } as const\n\n    segmentKeydownHandlers[props.part as keyof typeof segmentKeydownHandlers](e)\n\n    if (![kbd.ARROW_LEFT, kbd.ARROW_RIGHT].includes(e.key) && e.key !== kbd.TAB && e.key !== kbd.SHIFT && isAcceptableSegmentKey(e.key)) {\n      if (Object.values(props.segmentValues.value).every(item => item !== null)) {\n        const updateObject = { ...props.segmentValues.value as Record<AnyExceptLiteral, number> }\n\n        let dateRef = props.placeholder.value.copy()\n\n        Object.keys(updateObject).forEach((part) => {\n          const value = updateObject[part as AnyExceptLiteral]\n          dateRef = dateRef.set({ [part]: value })\n        })\n\n        props.modelValue.value = dateRef.copy()\n      }\n    }\n  }\n\n  return {\n    handleSegmentClick,\n    handleSegmentKeydown,\n    attributes,\n  }\n}\n", "/*\n  * Adapted from https://github.com/melt-ui/melt-ui/blob/develop/src/lib/builders/calendar/create.ts\n*/\n\nimport type { DateFields, DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { Grid, Matcher, WeekDayFormat } from '@/date'\nimport type { DateFormatterOptions } from '@/shared/useDateFormatter'\nimport { isEqualMonth, isSameDay } from '@internationalized/date'\nimport { computed, ref, watch } from 'vue'\nimport { createMonths, getDaysInMonth, isAfter, isBefore, toDate } from '@/date'\nimport { useDateFormatter } from '@/shared'\n\nexport type UseCalendarProps = {\n  locale: Ref<string>\n  placeholder: Ref<DateValue>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  fixedWeeks: Ref<boolean>\n  numberOfMonths: Ref<number>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n  disabled: Ref<boolean>\n  weekdayFormat: Ref<WeekDayFormat>\n  pagedNavigation: Ref<boolean>\n  isDateDisabled?: Matcher\n  isDateUnavailable?: Matcher\n  calendarLabel: Ref<string | undefined>\n  nextPage: Ref<((placeholder: DateValue) => DateValue) | undefined>\n  prevPage: Ref<((placeholder: DateValue) => DateValue) | undefined>\n}\n\nexport type UseCalendarStateProps = {\n  isDateDisabled: Matcher\n  isDateUnavailable: Matcher\n  date: Ref<DateValue | DateValue[] | undefined>\n}\n\nexport function useCalendarState(props: UseCalendarStateProps) {\n  function isDateSelected(dateObj: DateValue) {\n    if (Array.isArray(props.date.value))\n      return props.date.value.some(d => isSameDay(d, dateObj))\n\n    else if (!props.date.value)\n      return false\n\n    else\n      return isSameDay(props.date.value, dateObj)\n  }\n\n  const isInvalid = computed(\n    () => {\n      if (Array.isArray(props.date.value)) {\n        if (!props.date.value.length)\n          return false\n        for (const dateObj of props.date.value) {\n          if (props.isDateDisabled?.(dateObj))\n            return true\n          if (props.isDateUnavailable?.(dateObj))\n            return true\n        }\n      }\n      else {\n        if (!props.date.value)\n          return false\n        if (props.isDateDisabled?.(props.date.value))\n          return true\n        if (props.isDateUnavailable?.(props.date.value))\n          return true\n      }\n      return false\n    },\n  )\n\n  return {\n    isDateSelected,\n    isInvalid,\n  }\n}\n\nfunction handleNextDisabled(lastPeriodInView: DateValue, nextPageFunc: (date: DateValue) => DateValue): DateValue {\n  const firstPeriodOfNextPage = nextPageFunc(lastPeriodInView)\n  const diff = firstPeriodOfNextPage.compare(lastPeriodInView)\n  const duration: DateFields = {}\n  if (diff >= 7)\n    duration.day = 1\n  if (diff >= getDaysInMonth(lastPeriodInView))\n    duration.month = 1\n  return firstPeriodOfNextPage.set({ ...duration })\n}\nfunction handlePrevDisabled(firstPeriodInView: DateValue, prevPageFunc: (date: DateValue) => DateValue): DateValue {\n  const lastPeriodOfPrevPage = prevPageFunc(firstPeriodInView)\n  const diff = firstPeriodInView.compare(lastPeriodOfPrevPage)\n  const duration: DateFields = {}\n  if (diff >= 7)\n    duration.day = 35\n  if (diff >= getDaysInMonth(firstPeriodInView))\n    duration.month = 13\n  return lastPeriodOfPrevPage.set({ ...duration })\n}\nfunction handleNextPage(date: DateValue, nextPageFunc: (date: DateValue) => DateValue): DateValue {\n  return nextPageFunc(date)\n}\n\nfunction handlePrevPage(date: DateValue, prevPageFunc: (date: DateValue) => DateValue): DateValue {\n  return prevPageFunc(date)\n}\n\nexport function useCalendar(props: UseCalendarProps) {\n  const formatter = useDateFormatter(props.locale.value)\n\n  const headingFormatOptions = computed(() => {\n    const options: DateFormatterOptions = {\n      calendar: props.placeholder.value.calendar.identifier,\n    }\n\n    if (props.placeholder.value.calendar.identifier === 'gregory' && props.placeholder.value.era === 'BC')\n      options.era = 'short'\n\n    return options\n  })\n\n  const grid = ref<Grid<DateValue>[]>(createMonths({\n    dateObj: props.placeholder.value,\n    weekStartsOn: props.weekStartsOn.value,\n    locale: props.locale.value,\n    fixedWeeks: props.fixedWeeks.value,\n    numberOfMonths: props.numberOfMonths.value,\n  })) as Ref<Grid<DateValue>[]>\n\n  const visibleView = computed(() => {\n    return grid.value.map(month => month.value)\n  })\n\n  function isOutsideVisibleView(date: DateValue) {\n    return !visibleView.value.some(month => isEqualMonth(date, month))\n  }\n\n  const isNextButtonDisabled = (nextPageFunc?: (date: DateValue) => DateValue) => {\n    if (!props.maxValue.value || !grid.value.length)\n      return false\n    if (props.disabled.value)\n      return true\n\n    const lastPeriodInView = grid.value[grid.value.length - 1].value\n\n    if (!nextPageFunc && !props.nextPage.value) {\n      const firstPeriodOfNextPage = lastPeriodInView.add({ months: 1 }).set({ day: 1 })\n      return isAfter(firstPeriodOfNextPage, props.maxValue.value)\n    }\n\n    const firstPeriodOfNextPage = handleNextDisabled(lastPeriodInView, nextPageFunc || props.nextPage.value!)\n    return isAfter(firstPeriodOfNextPage, props.maxValue.value)\n  }\n\n  const isPrevButtonDisabled = (prevPageFunc?: (date: DateValue) => DateValue) => {\n    if (!props.minValue.value || !grid.value.length)\n      return false\n    if (props.disabled.value)\n      return true\n    const firstPeriodInView = grid.value[0].value\n\n    if (!prevPageFunc && !props.prevPage.value) {\n      const lastPeriodOfPrevPage = firstPeriodInView.subtract({ months: 1 }).set({ day: 35 })\n      return isBefore(lastPeriodOfPrevPage, props.minValue.value)\n    }\n\n    const lastPeriodOfPrevPage = handlePrevDisabled(firstPeriodInView, prevPageFunc || props.prevPage.value!)\n    return isBefore(lastPeriodOfPrevPage, props.minValue.value)\n  }\n\n  function isDateDisabled(dateObj: DateValue) {\n    if (props.isDateDisabled?.(dateObj) || props.disabled.value)\n      return true\n    if (props.maxValue.value && isAfter(dateObj, props.maxValue.value))\n      return true\n    if (props.minValue.value && isBefore(dateObj, props.minValue.value))\n      return true\n    return false\n  }\n\n  const isDateUnavailable = (date: DateValue) => {\n    if (props.isDateUnavailable?.(date))\n      return true\n    return false\n  }\n\n  const weekdays = computed(() => {\n    if (!grid.value.length)\n      return []\n    return grid.value[0].rows[0].map((date) => {\n      return formatter.dayOfWeek(toDate(date), props.weekdayFormat.value)\n    })\n  })\n\n  const nextPage = (nextPageFunc?: (date: DateValue) => DateValue) => {\n    const firstDate = grid.value[0].value\n\n    if (!nextPageFunc && !props.nextPage.value) {\n      const newDate = firstDate.add({ months: props.pagedNavigation.value ? props.numberOfMonths.value : 1 })\n\n      const newGrid = createMonths({\n        dateObj: newDate,\n        weekStartsOn: props.weekStartsOn.value,\n        locale: props.locale.value,\n        fixedWeeks: props.fixedWeeks.value,\n        numberOfMonths: props.numberOfMonths.value,\n      })\n\n      grid.value = newGrid\n\n      props.placeholder.value = newGrid[0].value.set({ day: 1 })\n      return\n    }\n\n    const newDate = handleNextPage(firstDate, nextPageFunc || props.nextPage.value!)\n    const newGrid = createMonths({\n      dateObj: newDate,\n      weekStartsOn: props.weekStartsOn.value,\n      locale: props.locale.value,\n      fixedWeeks: props.fixedWeeks.value,\n      numberOfMonths: props.numberOfMonths.value,\n    })\n\n    grid.value = newGrid\n\n    const duration: DateFields = {}\n\n    // Do not adjust the placeholder if the nextPageFunc is defined (overwrite)\n    if (!nextPageFunc) {\n      const diff = newGrid[0].value.compare(firstDate)\n      if (diff >= getDaysInMonth(firstDate))\n        duration.day = 1\n\n      if (diff >= 365)\n        duration.month = 1\n    }\n\n    props.placeholder.value = newGrid[0].value.set({ ...duration })\n  }\n\n  const prevPage = (prevPageFunc?: (date: DateValue) => DateValue) => {\n    const firstDate = grid.value[0].value\n\n    if (!prevPageFunc && !props.prevPage.value) {\n      const newDate = firstDate.subtract({ months: props.pagedNavigation.value ? props.numberOfMonths.value : 1 })\n\n      const newGrid = createMonths({\n        dateObj: newDate,\n        weekStartsOn: props.weekStartsOn.value,\n        locale: props.locale.value,\n        fixedWeeks: props.fixedWeeks.value,\n        numberOfMonths: props.numberOfMonths.value,\n      })\n\n      grid.value = newGrid\n\n      props.placeholder.value = newGrid[0].value.set({ day: 1 })\n      return\n    }\n\n    const newDate = handlePrevPage(firstDate, prevPageFunc || props.prevPage.value!)\n    const newGrid = createMonths({\n      dateObj: newDate,\n      weekStartsOn: props.weekStartsOn.value,\n      locale: props.locale.value,\n      fixedWeeks: props.fixedWeeks.value,\n      numberOfMonths: props.numberOfMonths.value,\n    })\n\n    grid.value = newGrid\n\n    const duration: DateFields = {}\n\n    // Do not adjust the placeholder if the prevPageFunc is defined (overwrite)\n    if (!prevPageFunc) {\n      const diff = firstDate.compare(newGrid[0].value)\n      if (diff >= getDaysInMonth(firstDate))\n        duration.day = 1\n\n      if (diff >= 365)\n        duration.month = 1\n    }\n\n    props.placeholder.value = newGrid[0].value.set({ ...duration })\n  }\n\n  watch(props.placeholder, (value) => {\n    if (visibleView.value.some(month => isEqualMonth(month, value)))\n      return\n    grid.value = createMonths({\n      dateObj: value,\n      weekStartsOn: props.weekStartsOn.value,\n      locale: props.locale.value,\n      fixedWeeks: props.fixedWeeks.value,\n      numberOfMonths: props.numberOfMonths.value,\n    })\n  })\n\n  watch([props.locale, props.weekStartsOn, props.fixedWeeks, props.numberOfMonths], () => {\n    grid.value = createMonths({\n      dateObj: props.placeholder.value,\n      weekStartsOn: props.weekStartsOn.value,\n      locale: props.locale.value,\n      fixedWeeks: props.fixedWeeks.value,\n      numberOfMonths: props.numberOfMonths.value,\n    })\n  })\n\n  const headingValue = computed(() => {\n    if (!grid.value.length)\n      return ''\n\n    if (props.locale.value !== formatter.getLocale())\n      formatter.setLocale(props.locale.value)\n\n    if (grid.value.length === 1) {\n      const month = grid.value[0].value\n      return `${formatter.fullMonthAndYear(toDate(month), headingFormatOptions.value)}`\n    }\n\n    const startMonth = toDate(grid.value[0].value)\n    const endMonth = toDate(grid.value[grid.value.length - 1].value)\n\n    const startMonthName = formatter.fullMonth(startMonth, headingFormatOptions.value)\n    const endMonthName = formatter.fullMonth(endMonth, headingFormatOptions.value)\n    const startMonthYear = formatter.fullYear(startMonth, headingFormatOptions.value)\n    const endMonthYear = formatter.fullYear(endMonth, headingFormatOptions.value)\n\n    const content\n    = startMonthYear === endMonthYear\n      ? `${startMonthName} - ${endMonthName} ${endMonthYear}`\n      : `${startMonthName} ${startMonthYear} - ${endMonthName} ${endMonthYear}`\n\n    return content\n  })\n\n  const fullCalendarLabel = computed(() => `${props.calendarLabel.value ?? 'Event Date'}, ${headingValue.value}`)\n\n  return {\n    isDateDisabled,\n    isDateUnavailable,\n    isNextButtonDisabled,\n    isPrevButtonDisabled,\n    grid,\n    weekdays,\n    visibleView,\n    isOutsideVisibleView,\n    formatter,\n    nextPage,\n    prevPage,\n    headingValue,\n    fullCalendarLabel,\n  }\n}\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\n\nimport type { Ref } from 'vue'\nimport type { Grid, Matcher, WeekDayFormat } from '@/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nimport type { Formatter } from '@/shared'\nimport type { Direction } from '@/shared/types'\nimport { isEqualDay, isSameDay } from '@internationalized/date'\nimport { createContext, useDirection, useLocale } from '@/shared'\nimport { getDefaultDate, handleCalendarInitialFocus } from '@/shared/date'\nimport { useCalendar, useCalendarState } from './useCalendar'\n\ntype CalendarRootContext = {\n  locale: Ref<string>\n  modelValue: Ref<DateValue | DateValue[] | undefined>\n  placeholder: Ref<DateValue>\n  pagedNavigation: Ref<boolean>\n  preventDeselect: Ref<boolean>\n  grid: Ref<Grid<DateValue>[]>\n  weekDays: Ref<string[]>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  weekdayFormat: Ref<WeekDayFormat>\n  fixedWeeks: Ref<boolean>\n  multiple: Ref<boolean>\n  numberOfMonths: Ref<number>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  initialFocus: Ref<boolean>\n  onDateChange: (date: DateValue) => void\n  onPlaceholderChange: (date: DateValue) => void\n  fullCalendarLabel: Ref<string>\n  parentElement: Ref<HTMLElement | undefined>\n  headingValue: Ref<string>\n  isInvalid: Ref<boolean>\n  isDateDisabled: Matcher\n  isDateSelected: Matcher\n  isDateUnavailable?: Matcher\n  isOutsideVisibleView: (date: DateValue) => boolean\n  prevPage: (prevPageFunc?: (date: DateValue) => DateValue) => void\n  nextPage: (nextPageFunc?: (date: DateValue) => DateValue) => void\n  isNextButtonDisabled: (nextPageFunc?: (date: DateValue) => DateValue) => boolean\n  isPrevButtonDisabled: (prevPageFunc?: (date: DateValue) => DateValue) => boolean\n  formatter: Formatter\n  dir: Ref<Direction>\n  disableDaysOutsideCurrentView: Ref<boolean>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n}\n\nexport interface CalendarRootProps extends PrimitiveProps {\n  /** The default value for the calendar */\n  defaultValue?: DateValue\n  /** The default placeholder date */\n  defaultPlaceholder?: DateValue\n  /** The placeholder date, which is used to determine what month to display when no date is selected */\n  placeholder?: DateValue\n  /** This property causes the previous and next buttons to navigate by the number of months displayed at once, rather than one month */\n  pagedNavigation?: boolean\n  /** Whether or not to prevent the user from deselecting a date without selecting another date first */\n  preventDeselect?: boolean\n  /** The day of the week to start the calendar on */\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6\n  /** The format to use for the weekday strings provided via the weekdays slot prop */\n  weekdayFormat?: WeekDayFormat\n  /** The accessible label for the calendar */\n  calendarLabel?: string\n  /** Whether or not to always display 6 weeks in the calendar */\n  fixedWeeks?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: DateValue\n  /** The minimum date that can be selected */\n  minValue?: DateValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** The number of months to display at once */\n  numberOfMonths?: number\n  /** Whether the calendar is disabled */\n  disabled?: boolean\n  /** Whether the calendar is readonly */\n  readonly?: boolean\n  /** If true, the calendar will focus the selected day, today, or the first day of the month depending on what is visible when the calendar is mounted */\n  initialFocus?: boolean\n  /** A function that returns whether or not a date is disabled */\n  isDateDisabled?: Matcher\n  /** A function that returns whether or not a date is unavailable */\n  isDateUnavailable?: Matcher\n  /** The reading direction of the calendar when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** A function that returns the next page of the calendar. It receives the current placeholder as an argument inside the component. */\n  nextPage?: (placeholder: DateValue) => DateValue\n  /** A function that returns the previous page of the calendar. It receives the current placeholder as an argument inside the component. */\n  prevPage?: (placeholder: DateValue) => DateValue\n  /** The controlled checked state of the calendar */\n  modelValue?: DateValue | DateValue[] | undefined\n  /** Whether multiple dates can be selected */\n  multiple?: boolean\n  /** Whether or not to disable days outside the current view. */\n  disableDaysOutsideCurrentView?: boolean\n}\n\nexport type CalendarRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateValue | undefined]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n}\n\nexport const [injectCalendarRootContext, provideCalendarRootContext]\n  = createContext<CalendarRootContext>('CalendarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { onMounted, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarRootProps>(), {\n  defaultValue: undefined,\n  as: 'div',\n  pagedNavigation: false,\n  preventDeselect: false,\n  weekStartsOn: 0,\n  weekdayFormat: 'narrow',\n  fixedWeeks: false,\n  multiple: false,\n  numberOfMonths: 1,\n  disabled: false,\n  readonly: false,\n  initialFocus: false,\n  placeholder: undefined,\n  isDateDisabled: undefined,\n  isDateUnavailable: undefined,\n  disableDaysOutsideCurrentView: false,\n})\nconst emits = defineEmits<CalendarRootEmits>()\ndefineSlots<{\n  default?: (props: {\n    /** The current date of the placeholder */\n    date: DateValue\n    /** The grid of dates */\n    grid: Grid<DateValue>[]\n    /** The days of the week */\n    weekDays: string[]\n    /** The start of the week */\n    weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6\n    /** The calendar locale */\n    locale: string\n    /** Whether or not to always display 6 weeks in the calendar */\n    fixedWeeks: boolean\n    /** The current date of the calendar */\n    modelValue: DateValue | DateValue[] | undefined\n  }) => any\n}>()\n\nconst {\n  disabled,\n  readonly,\n  initialFocus,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  multiple,\n  minValue,\n  maxValue,\n  numberOfMonths,\n  preventDeselect,\n  isDateDisabled: propsIsDateDisabled,\n  isDateUnavailable: propsIsDateUnavailable,\n  calendarLabel,\n  defaultValue,\n  nextPage: propsNextPage,\n  prevPage: propsPrevPage,\n  dir: propDir,\n  locale: propLocale,\n  disableDaysOutsideCurrentView,\n} = toRefs(props)\n\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst locale = useLocale(propLocale)\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateValue | DateValue[] | undefined>\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  defaultValue: modelValue.value,\n  locale: props.locale,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nfunction onPlaceholderChange(value: DateValue) {\n  placeholder.value = value.copy()\n}\n\nconst {\n  fullCalendarLabel,\n  headingValue,\n  isDateDisabled,\n  isDateUnavailable,\n  isNextButtonDisabled,\n  isPrevButtonDisabled,\n  weekdays,\n  isOutsideVisibleView,\n  nextPage,\n  prevPage,\n  formatter,\n  grid,\n} = useCalendar({\n  locale,\n  placeholder,\n  weekStartsOn,\n  fixedWeeks,\n  numberOfMonths,\n  minValue,\n  maxValue,\n  disabled,\n  weekdayFormat,\n  pagedNavigation,\n  isDateDisabled: propsIsDateDisabled.value,\n  isDateUnavailable: propsIsDateUnavailable.value,\n  calendarLabel,\n  nextPage: propsNextPage,\n  prevPage: propsPrevPage,\n})\n\nconst {\n  isInvalid,\n  isDateSelected,\n} = useCalendarState({\n  date: modelValue,\n  isDateDisabled,\n  isDateUnavailable,\n})\n\nwatch(modelValue, (_modelValue) => {\n  if (Array.isArray(_modelValue) && _modelValue.length) {\n    const lastValue = _modelValue[_modelValue.length - 1]\n    if (lastValue && !isEqualDay(placeholder.value, lastValue))\n      onPlaceholderChange(lastValue)\n  }\n  else if (!Array.isArray(_modelValue) && _modelValue && !isEqualDay(placeholder.value, _modelValue)) {\n    onPlaceholderChange(_modelValue)\n  }\n})\n\nfunction onDateChange(value: DateValue) {\n  if (!multiple.value) {\n    if (!modelValue.value) {\n      modelValue.value = value.copy()\n      return\n    }\n\n    if (!preventDeselect.value && isEqualDay(modelValue.value as DateValue, value)) {\n      placeholder.value = value.copy()\n      modelValue.value = undefined\n    }\n    else { modelValue.value = value.copy() }\n  }\n  else if (!modelValue.value) {\n    modelValue.value = [value.copy()]\n  }\n  else if (Array.isArray(modelValue.value)) {\n    const index = modelValue.value.findIndex(date => isSameDay(date, value))\n    if (index === -1) {\n      modelValue.value = [...modelValue.value, value]\n    }\n    else if (!preventDeselect.value) {\n      const next = modelValue.value.filter(date => !isSameDay(date, value))\n      if (!next.length) {\n        placeholder.value = value.copy()\n        modelValue.value = undefined\n        return\n      }\n      modelValue.value = next.map(date => date.copy())\n    }\n  }\n}\n\nonMounted(() => {\n  if (initialFocus.value)\n    handleCalendarInitialFocus(parentElement.value)\n})\n\nprovideCalendarRootContext({\n  isDateUnavailable,\n  dir,\n  isDateDisabled,\n  locale,\n  formatter,\n  modelValue,\n  placeholder,\n  disabled,\n  initialFocus,\n  pagedNavigation,\n  grid,\n  weekDays: weekdays,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  multiple,\n  numberOfMonths,\n  readonly,\n  preventDeselect,\n  fullCalendarLabel,\n  headingValue,\n  isInvalid,\n  isDateSelected,\n  isNextButtonDisabled,\n  isPrevButtonDisabled,\n  isOutsideVisibleView,\n  nextPage,\n  prevPage,\n  parentElement,\n  onPlaceholderChange,\n  onDateChange,\n  disableDaysOutsideCurrentView,\n  minValue,\n  maxValue,\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"application\"\n    :aria-label=\"fullCalendarLabel\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n  >\n    <slot\n      :date=\"placeholder\"\n      :grid=\"grid\"\n      :week-days=\"weekdays\"\n      :week-starts-on=\"weekStartsOn\"\n      :locale=\"locale\"\n      :fixed-weeks=\"fixedWeeks\"\n      :model-value=\"modelValue\"\n    />\n    <div\n      style=\"border: 0px; clip: rect(0px, 0px, 0px, 0px); clip-path: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; white-space: nowrap; width: 1px;\"\n    >\n      <div\n        role=\"heading\"\n        aria-level=\"2\"\n      >\n        {{ fullCalendarLabel }}\n      </div>\n    </div>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\n\nimport type { Ref } from 'vue'\nimport type { Grid, Matcher, WeekDayFormat } from '@/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nimport type { Formatter } from '@/shared'\nimport type { Direction } from '@/shared/types'\nimport { isEqualDay, isSameDay } from '@internationalized/date'\nimport { createContext, useDirection, useLocale } from '@/shared'\nimport { getDefaultDate, handleCalendarInitialFocus } from '@/shared/date'\nimport { useCalendar, useCalendarState } from './useCalendar'\n\ntype CalendarRootContext = {\n  locale: Ref<string>\n  modelValue: Ref<DateValue | DateValue[] | undefined>\n  placeholder: Ref<DateValue>\n  pagedNavigation: Ref<boolean>\n  preventDeselect: Ref<boolean>\n  grid: Ref<Grid<DateValue>[]>\n  weekDays: Ref<string[]>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  weekdayFormat: Ref<WeekDayFormat>\n  fixedWeeks: Ref<boolean>\n  multiple: Ref<boolean>\n  numberOfMonths: Ref<number>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  initialFocus: Ref<boolean>\n  onDateChange: (date: DateValue) => void\n  onPlaceholderChange: (date: DateValue) => void\n  fullCalendarLabel: Ref<string>\n  parentElement: Ref<HTMLElement | undefined>\n  headingValue: Ref<string>\n  isInvalid: Ref<boolean>\n  isDateDisabled: Matcher\n  isDateSelected: Matcher\n  isDateUnavailable?: Matcher\n  isOutsideVisibleView: (date: DateValue) => boolean\n  prevPage: (prevPageFunc?: (date: DateValue) => DateValue) => void\n  nextPage: (nextPageFunc?: (date: DateValue) => DateValue) => void\n  isNextButtonDisabled: (nextPageFunc?: (date: DateValue) => DateValue) => boolean\n  isPrevButtonDisabled: (prevPageFunc?: (date: DateValue) => DateValue) => boolean\n  formatter: Formatter\n  dir: Ref<Direction>\n  disableDaysOutsideCurrentView: Ref<boolean>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n}\n\nexport interface CalendarRootProps extends PrimitiveProps {\n  /** The default value for the calendar */\n  defaultValue?: DateValue\n  /** The default placeholder date */\n  defaultPlaceholder?: DateValue\n  /** The placeholder date, which is used to determine what month to display when no date is selected */\n  placeholder?: DateValue\n  /** This property causes the previous and next buttons to navigate by the number of months displayed at once, rather than one month */\n  pagedNavigation?: boolean\n  /** Whether or not to prevent the user from deselecting a date without selecting another date first */\n  preventDeselect?: boolean\n  /** The day of the week to start the calendar on */\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6\n  /** The format to use for the weekday strings provided via the weekdays slot prop */\n  weekdayFormat?: WeekDayFormat\n  /** The accessible label for the calendar */\n  calendarLabel?: string\n  /** Whether or not to always display 6 weeks in the calendar */\n  fixedWeeks?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: DateValue\n  /** The minimum date that can be selected */\n  minValue?: DateValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** The number of months to display at once */\n  numberOfMonths?: number\n  /** Whether the calendar is disabled */\n  disabled?: boolean\n  /** Whether the calendar is readonly */\n  readonly?: boolean\n  /** If true, the calendar will focus the selected day, today, or the first day of the month depending on what is visible when the calendar is mounted */\n  initialFocus?: boolean\n  /** A function that returns whether or not a date is disabled */\n  isDateDisabled?: Matcher\n  /** A function that returns whether or not a date is unavailable */\n  isDateUnavailable?: Matcher\n  /** The reading direction of the calendar when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** A function that returns the next page of the calendar. It receives the current placeholder as an argument inside the component. */\n  nextPage?: (placeholder: DateValue) => DateValue\n  /** A function that returns the previous page of the calendar. It receives the current placeholder as an argument inside the component. */\n  prevPage?: (placeholder: DateValue) => DateValue\n  /** The controlled checked state of the calendar */\n  modelValue?: DateValue | DateValue[] | undefined\n  /** Whether multiple dates can be selected */\n  multiple?: boolean\n  /** Whether or not to disable days outside the current view. */\n  disableDaysOutsideCurrentView?: boolean\n}\n\nexport type CalendarRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateValue | undefined]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n}\n\nexport const [injectCalendarRootContext, provideCalendarRootContext]\n  = createContext<CalendarRootContext>('CalendarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { onMounted, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarRootProps>(), {\n  defaultValue: undefined,\n  as: 'div',\n  pagedNavigation: false,\n  preventDeselect: false,\n  weekStartsOn: 0,\n  weekdayFormat: 'narrow',\n  fixedWeeks: false,\n  multiple: false,\n  numberOfMonths: 1,\n  disabled: false,\n  readonly: false,\n  initialFocus: false,\n  placeholder: undefined,\n  isDateDisabled: undefined,\n  isDateUnavailable: undefined,\n  disableDaysOutsideCurrentView: false,\n})\nconst emits = defineEmits<CalendarRootEmits>()\ndefineSlots<{\n  default?: (props: {\n    /** The current date of the placeholder */\n    date: DateValue\n    /** The grid of dates */\n    grid: Grid<DateValue>[]\n    /** The days of the week */\n    weekDays: string[]\n    /** The start of the week */\n    weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6\n    /** The calendar locale */\n    locale: string\n    /** Whether or not to always display 6 weeks in the calendar */\n    fixedWeeks: boolean\n    /** The current date of the calendar */\n    modelValue: DateValue | DateValue[] | undefined\n  }) => any\n}>()\n\nconst {\n  disabled,\n  readonly,\n  initialFocus,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  multiple,\n  minValue,\n  maxValue,\n  numberOfMonths,\n  preventDeselect,\n  isDateDisabled: propsIsDateDisabled,\n  isDateUnavailable: propsIsDateUnavailable,\n  calendarLabel,\n  defaultValue,\n  nextPage: propsNextPage,\n  prevPage: propsPrevPage,\n  dir: propDir,\n  locale: propLocale,\n  disableDaysOutsideCurrentView,\n} = toRefs(props)\n\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst locale = useLocale(propLocale)\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateValue | DateValue[] | undefined>\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  defaultValue: modelValue.value,\n  locale: props.locale,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nfunction onPlaceholderChange(value: DateValue) {\n  placeholder.value = value.copy()\n}\n\nconst {\n  fullCalendarLabel,\n  headingValue,\n  isDateDisabled,\n  isDateUnavailable,\n  isNextButtonDisabled,\n  isPrevButtonDisabled,\n  weekdays,\n  isOutsideVisibleView,\n  nextPage,\n  prevPage,\n  formatter,\n  grid,\n} = useCalendar({\n  locale,\n  placeholder,\n  weekStartsOn,\n  fixedWeeks,\n  numberOfMonths,\n  minValue,\n  maxValue,\n  disabled,\n  weekdayFormat,\n  pagedNavigation,\n  isDateDisabled: propsIsDateDisabled.value,\n  isDateUnavailable: propsIsDateUnavailable.value,\n  calendarLabel,\n  nextPage: propsNextPage,\n  prevPage: propsPrevPage,\n})\n\nconst {\n  isInvalid,\n  isDateSelected,\n} = useCalendarState({\n  date: modelValue,\n  isDateDisabled,\n  isDateUnavailable,\n})\n\nwatch(modelValue, (_modelValue) => {\n  if (Array.isArray(_modelValue) && _modelValue.length) {\n    const lastValue = _modelValue[_modelValue.length - 1]\n    if (lastValue && !isEqualDay(placeholder.value, lastValue))\n      onPlaceholderChange(lastValue)\n  }\n  else if (!Array.isArray(_modelValue) && _modelValue && !isEqualDay(placeholder.value, _modelValue)) {\n    onPlaceholderChange(_modelValue)\n  }\n})\n\nfunction onDateChange(value: DateValue) {\n  if (!multiple.value) {\n    if (!modelValue.value) {\n      modelValue.value = value.copy()\n      return\n    }\n\n    if (!preventDeselect.value && isEqualDay(modelValue.value as DateValue, value)) {\n      placeholder.value = value.copy()\n      modelValue.value = undefined\n    }\n    else { modelValue.value = value.copy() }\n  }\n  else if (!modelValue.value) {\n    modelValue.value = [value.copy()]\n  }\n  else if (Array.isArray(modelValue.value)) {\n    const index = modelValue.value.findIndex(date => isSameDay(date, value))\n    if (index === -1) {\n      modelValue.value = [...modelValue.value, value]\n    }\n    else if (!preventDeselect.value) {\n      const next = modelValue.value.filter(date => !isSameDay(date, value))\n      if (!next.length) {\n        placeholder.value = value.copy()\n        modelValue.value = undefined\n        return\n      }\n      modelValue.value = next.map(date => date.copy())\n    }\n  }\n}\n\nonMounted(() => {\n  if (initialFocus.value)\n    handleCalendarInitialFocus(parentElement.value)\n})\n\nprovideCalendarRootContext({\n  isDateUnavailable,\n  dir,\n  isDateDisabled,\n  locale,\n  formatter,\n  modelValue,\n  placeholder,\n  disabled,\n  initialFocus,\n  pagedNavigation,\n  grid,\n  weekDays: weekdays,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  multiple,\n  numberOfMonths,\n  readonly,\n  preventDeselect,\n  fullCalendarLabel,\n  headingValue,\n  isInvalid,\n  isDateSelected,\n  isNextButtonDisabled,\n  isPrevButtonDisabled,\n  isOutsideVisibleView,\n  nextPage,\n  prevPage,\n  parentElement,\n  onPlaceholderChange,\n  onDateChange,\n  disableDaysOutsideCurrentView,\n  minValue,\n  maxValue,\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"application\"\n    :aria-label=\"fullCalendarLabel\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n  >\n    <slot\n      :date=\"placeholder\"\n      :grid=\"grid\"\n      :week-days=\"weekdays\"\n      :week-starts-on=\"weekStartsOn\"\n      :locale=\"locale\"\n      :fixed-weeks=\"fixedWeeks\"\n      :model-value=\"modelValue\"\n    />\n    <div\n      style=\"border: 0px; clip: rect(0px, 0px, 0px, 0px); clip-path: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; white-space: nowrap; width: 1px;\"\n    >\n      <div\n        role=\"heading\"\n        aria-level=\"2\"\n      >\n        {{ fullCalendarLabel }}\n      </div>\n    </div>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarCellProps extends PrimitiveProps {\n  /** The date value for the cell */\n  date: DateValue\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nwithDefaults(defineProps<CalendarCellProps>(), { as: 'td' })\nconst rootContext = injectCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"gridcell\"\n    :aria-selected=\"rootContext.isDateSelected(date) ? true : undefined\"\n    :aria-disabled=\"rootContext.isDateDisabled(date) || rootContext.isDateUnavailable?.(date) || rootContext.disableDaysOutsideCurrentView.value\"\n    :data-disabled=\"rootContext.isDateDisabled(date) || rootContext.disableDaysOutsideCurrentView.value ? '' : undefined\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarCellProps extends PrimitiveProps {\n  /** The date value for the cell */\n  date: DateValue\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nwithDefaults(defineProps<CalendarCellProps>(), { as: 'td' })\nconst rootContext = injectCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"gridcell\"\n    :aria-selected=\"rootContext.isDateSelected(date) ? true : undefined\"\n    :aria-disabled=\"rootContext.isDateDisabled(date) || rootContext.isDateUnavailable?.(date) || rootContext.disableDaysOutsideCurrentView.value\"\n    :data-disabled=\"rootContext.isDateDisabled(date) || rootContext.disableDaysOutsideCurrentView.value ? '' : undefined\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "export const SELECTOR\n  = '[data-reka-calendar-cell-trigger]:not([data-outside-view]):not([data-outside-visible-view])'\nexport function getSelectableCells(calendar: HTMLElement): HTMLElement[] {\n  return Array.from(calendar.querySelectorAll(SELECTOR)) ?? []\n}\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport {\n\n  getLocalTimeZone,\n  isSameDay,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date'\nimport { computed, nextTick } from 'vue'\nimport { getDaysInMonth, parseStringToDateValue, toDate } from '@/date'\nimport { useKbd } from '@/shared'\nimport { getSelectableCells } from './utils'\n\nexport interface CalendarCellTriggerProps extends PrimitiveProps {\n  /** The date value provided to the cell trigger */\n  day: DateValue\n  /** The month in which the cell is rendered */\n  month: DateValue\n}\n\nexport interface CalendarCellTriggerSlot {\n  default?: (props: {\n    /** Current day */\n    dayValue: string\n    /** Current disable state */\n    disabled: boolean\n    /** Current selected state */\n    selected: boolean\n    /** Current today state */\n    today: boolean\n    /** Current outside view state */\n    outsideView: boolean\n    /** Current outside visible view state */\n    outsideVisibleView: boolean\n    /** Current unavailable state */\n    unavailable: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarCellTriggerProps>(), {\n  as: 'div',\n})\n\ndefineSlots<CalendarCellTriggerSlot>()\n\nconst kbd = useKbd()\nconst rootContext = injectCalendarRootContext()\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst dayValue = computed(() => props.day.day.toLocaleString(rootContext.locale.value))\n\nconst labelText = computed(() => {\n  return rootContext.formatter.custom(toDate(props.day), {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n  })\n})\n\nconst isUnavailable = computed(() =>\n  rootContext.isDateUnavailable?.(props.day) ?? false,\n)\nconst isDateToday = computed(() => {\n  return isToday(props.day, getLocalTimeZone())\n})\nconst isOutsideView = computed(() => {\n  return !isSameMonth(props.day, props.month)\n})\n\nconst isOutsideVisibleView = computed(() =>\n  rootContext.isOutsideVisibleView(props.day),\n)\n\nconst isDisabled = computed(() => rootContext.isDateDisabled(props.day) || (rootContext.disableDaysOutsideCurrentView.value && isOutsideView.value))\n\nconst isFocusedDate = computed(() => {\n  return !rootContext.disabled.value && isSameDay(props.day, rootContext.placeholder.value)\n})\nconst isSelectedDate = computed(() => rootContext.isDateSelected(props.day))\n\nfunction changeDate(date: DateValue) {\n  if (rootContext.readonly.value)\n    return\n  if (rootContext.isDateDisabled(date) || rootContext.isDateUnavailable?.(date))\n    return\n\n  rootContext.onDateChange(date)\n}\n\nfunction handleClick() {\n  if (isDisabled.value)\n    return\n  changeDate(props.day)\n}\n\nfunction handleArrowKey(e: KeyboardEvent) {\n  if (isDisabled.value)\n    return\n  e.preventDefault()\n  e.stopPropagation()\n  const parentElement = rootContext.parentElement.value!\n  const indexIncrementation = 7\n  const sign = rootContext.dir.value === 'rtl' ? -1 : 1\n  switch (e.code) {\n    case kbd.ARROW_RIGHT:\n      shiftFocus(currentElement.value, sign)\n      break\n    case kbd.ARROW_LEFT:\n      shiftFocus(currentElement.value, -sign)\n      break\n    case kbd.ARROW_UP:\n      shiftFocus(currentElement.value, -indexIncrementation)\n      break\n    case kbd.ARROW_DOWN:\n      shiftFocus(currentElement.value, indexIncrementation)\n      break\n    case kbd.ENTER:\n    case kbd.SPACE_CODE:\n      changeDate(props.day)\n  }\n\n  function shiftFocus(node: HTMLElement, add: number) {\n    const allCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n    if (!allCollectionItems.length)\n      return\n\n    const index = allCollectionItems.indexOf(node)\n    const newIndex = index + add\n\n    if (newIndex >= 0 && newIndex < allCollectionItems.length) {\n      const newDate = allCollectionItems[newIndex].getAttribute('data-value')\n      const newDateValue = parseStringToDateValue(newDate!, rootContext.placeholder.value)\n      const minValue = rootContext.minValue.value\n      const maxValue = rootContext.maxValue.value\n      if ((minValue && newDateValue.compare(minValue) < 0) || (maxValue && newDateValue.compare(maxValue) > 0))\n        return\n\n      if (allCollectionItems[newIndex].hasAttribute('data-disabled')) {\n        shiftFocus(allCollectionItems[newIndex], add)\n      }\n      rootContext.onPlaceholderChange(newDateValue)\n      allCollectionItems[newIndex].focus()\n      return\n    }\n\n    if (newIndex < 0) {\n      if (rootContext.isPrevButtonDisabled())\n        return\n      rootContext.prevPage()\n      nextTick(() => {\n        const newCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n        if (!newCollectionItems.length)\n          return\n        if (!rootContext.pagedNavigation.value && rootContext.numberOfMonths.value > 1) {\n        // Placeholder is set to first month of the new page\n          const numberOfDays = getDaysInMonth(rootContext.placeholder.value)\n          const computedIndex = numberOfDays - Math.abs(newIndex)\n          if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n            shiftFocus(newCollectionItems[computedIndex], add)\n          }\n          const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n          newCollectionItems[\n            computedIndex\n          ].focus()\n\n          rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n          return\n        }\n        const computedIndex = newCollectionItems.length - Math.abs(newIndex)\n        if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n          shiftFocus(newCollectionItems[computedIndex], add)\n        }\n        const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n        rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n        newCollectionItems[\n          computedIndex\n        ].focus()\n      })\n      return\n    }\n\n    if (newIndex >= allCollectionItems.length) {\n      if (rootContext.isNextButtonDisabled())\n        return\n      rootContext.nextPage()\n      nextTick(() => {\n        const newCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n        if (!newCollectionItems.length)\n          return\n\n        if (!rootContext.pagedNavigation.value && rootContext.numberOfMonths.value > 1) {\n        // Placeholder is set to first month of the new page\n          const numberOfDays = getDaysInMonth(\n            rootContext.placeholder.value.add({ months: rootContext.numberOfMonths.value - 1 }),\n          )\n\n          const computedIndex = newIndex - allCollectionItems.length + (newCollectionItems.length - numberOfDays)\n\n          if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n            shiftFocus(newCollectionItems[computedIndex], add)\n          }\n          const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n          rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n          newCollectionItems[computedIndex].focus()\n          return\n        }\n\n        const computedIndex = newIndex - allCollectionItems.length\n        if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n          shiftFocus(newCollectionItems[computedIndex], add)\n        }\n\n        const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n        rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n\n        newCollectionItems[computedIndex].focus()\n      })\n    }\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    v-bind=\"props\"\n    role=\"button\"\n    :aria-label=\"labelText\"\n    data-reka-calendar-cell-trigger\n    :aria-disabled=\"isDisabled || isUnavailable ? true : undefined\"\n    :data-selected=\"isSelectedDate ? true : undefined\"\n    :data-value=\"day.toString()\"\n    :data-disabled=\"isDisabled ? '' : undefined\"\n    :data-unavailable=\"isUnavailable ? '' : undefined\"\n    :data-today=\"isDateToday ? '' : undefined\"\n    :data-outside-view=\"isOutsideView ? '' : undefined\"\n    :data-outside-visible-view=\"isOutsideVisibleView ? '' : undefined\"\n    :data-focused=\"isFocusedDate ? '' : undefined\"\n    :tabindex=\"isFocusedDate ? 0 : isOutsideView || isDisabled ? undefined : -1\"\n    @click=\"handleClick\"\n    @keydown.up.down.left.right.space.enter=\"handleArrowKey\"\n    @keydown.enter.prevent\n  >\n    <slot\n      :day-value=\"dayValue\"\n      :disabled=\"isDisabled\"\n      :today=\"isDateToday\"\n      :selected=\"isSelectedDate\"\n      :outside-view=\"isOutsideView\"\n      :outside-visible-view=\"isOutsideVisibleView\"\n      :unavailable=\"isUnavailable\"\n    >\n      {{ dayValue }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport {\n\n  getLocalTimeZone,\n  isSameDay,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date'\nimport { computed, nextTick } from 'vue'\nimport { getDaysInMonth, parseStringToDateValue, toDate } from '@/date'\nimport { useKbd } from '@/shared'\nimport { getSelectableCells } from './utils'\n\nexport interface CalendarCellTriggerProps extends PrimitiveProps {\n  /** The date value provided to the cell trigger */\n  day: DateValue\n  /** The month in which the cell is rendered */\n  month: DateValue\n}\n\nexport interface CalendarCellTriggerSlot {\n  default?: (props: {\n    /** Current day */\n    dayValue: string\n    /** Current disable state */\n    disabled: boolean\n    /** Current selected state */\n    selected: boolean\n    /** Current today state */\n    today: boolean\n    /** Current outside view state */\n    outsideView: boolean\n    /** Current outside visible view state */\n    outsideVisibleView: boolean\n    /** Current unavailable state */\n    unavailable: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarCellTriggerProps>(), {\n  as: 'div',\n})\n\ndefineSlots<CalendarCellTriggerSlot>()\n\nconst kbd = useKbd()\nconst rootContext = injectCalendarRootContext()\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst dayValue = computed(() => props.day.day.toLocaleString(rootContext.locale.value))\n\nconst labelText = computed(() => {\n  return rootContext.formatter.custom(toDate(props.day), {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric',\n  })\n})\n\nconst isUnavailable = computed(() =>\n  rootContext.isDateUnavailable?.(props.day) ?? false,\n)\nconst isDateToday = computed(() => {\n  return isToday(props.day, getLocalTimeZone())\n})\nconst isOutsideView = computed(() => {\n  return !isSameMonth(props.day, props.month)\n})\n\nconst isOutsideVisibleView = computed(() =>\n  rootContext.isOutsideVisibleView(props.day),\n)\n\nconst isDisabled = computed(() => rootContext.isDateDisabled(props.day) || (rootContext.disableDaysOutsideCurrentView.value && isOutsideView.value))\n\nconst isFocusedDate = computed(() => {\n  return !rootContext.disabled.value && isSameDay(props.day, rootContext.placeholder.value)\n})\nconst isSelectedDate = computed(() => rootContext.isDateSelected(props.day))\n\nfunction changeDate(date: DateValue) {\n  if (rootContext.readonly.value)\n    return\n  if (rootContext.isDateDisabled(date) || rootContext.isDateUnavailable?.(date))\n    return\n\n  rootContext.onDateChange(date)\n}\n\nfunction handleClick() {\n  if (isDisabled.value)\n    return\n  changeDate(props.day)\n}\n\nfunction handleArrowKey(e: KeyboardEvent) {\n  if (isDisabled.value)\n    return\n  e.preventDefault()\n  e.stopPropagation()\n  const parentElement = rootContext.parentElement.value!\n  const indexIncrementation = 7\n  const sign = rootContext.dir.value === 'rtl' ? -1 : 1\n  switch (e.code) {\n    case kbd.ARROW_RIGHT:\n      shiftFocus(currentElement.value, sign)\n      break\n    case kbd.ARROW_LEFT:\n      shiftFocus(currentElement.value, -sign)\n      break\n    case kbd.ARROW_UP:\n      shiftFocus(currentElement.value, -indexIncrementation)\n      break\n    case kbd.ARROW_DOWN:\n      shiftFocus(currentElement.value, indexIncrementation)\n      break\n    case kbd.ENTER:\n    case kbd.SPACE_CODE:\n      changeDate(props.day)\n  }\n\n  function shiftFocus(node: HTMLElement, add: number) {\n    const allCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n    if (!allCollectionItems.length)\n      return\n\n    const index = allCollectionItems.indexOf(node)\n    const newIndex = index + add\n\n    if (newIndex >= 0 && newIndex < allCollectionItems.length) {\n      const newDate = allCollectionItems[newIndex].getAttribute('data-value')\n      const newDateValue = parseStringToDateValue(newDate!, rootContext.placeholder.value)\n      const minValue = rootContext.minValue.value\n      const maxValue = rootContext.maxValue.value\n      if ((minValue && newDateValue.compare(minValue) < 0) || (maxValue && newDateValue.compare(maxValue) > 0))\n        return\n\n      if (allCollectionItems[newIndex].hasAttribute('data-disabled')) {\n        shiftFocus(allCollectionItems[newIndex], add)\n      }\n      rootContext.onPlaceholderChange(newDateValue)\n      allCollectionItems[newIndex].focus()\n      return\n    }\n\n    if (newIndex < 0) {\n      if (rootContext.isPrevButtonDisabled())\n        return\n      rootContext.prevPage()\n      nextTick(() => {\n        const newCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n        if (!newCollectionItems.length)\n          return\n        if (!rootContext.pagedNavigation.value && rootContext.numberOfMonths.value > 1) {\n        // Placeholder is set to first month of the new page\n          const numberOfDays = getDaysInMonth(rootContext.placeholder.value)\n          const computedIndex = numberOfDays - Math.abs(newIndex)\n          if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n            shiftFocus(newCollectionItems[computedIndex], add)\n          }\n          const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n          newCollectionItems[\n            computedIndex\n          ].focus()\n\n          rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n          return\n        }\n        const computedIndex = newCollectionItems.length - Math.abs(newIndex)\n        if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n          shiftFocus(newCollectionItems[computedIndex], add)\n        }\n        const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n        rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n        newCollectionItems[\n          computedIndex\n        ].focus()\n      })\n      return\n    }\n\n    if (newIndex >= allCollectionItems.length) {\n      if (rootContext.isNextButtonDisabled())\n        return\n      rootContext.nextPage()\n      nextTick(() => {\n        const newCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n        if (!newCollectionItems.length)\n          return\n\n        if (!rootContext.pagedNavigation.value && rootContext.numberOfMonths.value > 1) {\n        // Placeholder is set to first month of the new page\n          const numberOfDays = getDaysInMonth(\n            rootContext.placeholder.value.add({ months: rootContext.numberOfMonths.value - 1 }),\n          )\n\n          const computedIndex = newIndex - allCollectionItems.length + (newCollectionItems.length - numberOfDays)\n\n          if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n            shiftFocus(newCollectionItems[computedIndex], add)\n          }\n          const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n          rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n          newCollectionItems[computedIndex].focus()\n          return\n        }\n\n        const computedIndex = newIndex - allCollectionItems.length\n        if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n          shiftFocus(newCollectionItems[computedIndex], add)\n        }\n\n        const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n        rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n\n        newCollectionItems[computedIndex].focus()\n      })\n    }\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    v-bind=\"props\"\n    role=\"button\"\n    :aria-label=\"labelText\"\n    data-reka-calendar-cell-trigger\n    :aria-disabled=\"isDisabled || isUnavailable ? true : undefined\"\n    :data-selected=\"isSelectedDate ? true : undefined\"\n    :data-value=\"day.toString()\"\n    :data-disabled=\"isDisabled ? '' : undefined\"\n    :data-unavailable=\"isUnavailable ? '' : undefined\"\n    :data-today=\"isDateToday ? '' : undefined\"\n    :data-outside-view=\"isOutsideView ? '' : undefined\"\n    :data-outside-visible-view=\"isOutsideVisibleView ? '' : undefined\"\n    :data-focused=\"isFocusedDate ? '' : undefined\"\n    :tabindex=\"isFocusedDate ? 0 : isOutsideView || isDisabled ? undefined : -1\"\n    @click=\"handleClick\"\n    @keydown.up.down.left.right.space.enter=\"handleArrowKey\"\n    @keydown.enter.prevent\n  >\n    <slot\n      :day-value=\"dayValue\"\n      :disabled=\"isDisabled\"\n      :today=\"isDateToday\"\n      :selected=\"isSelectedDate\"\n      :outside-view=\"isOutsideView\"\n      :outside-visible-view=\"isOutsideVisibleView\"\n      :unavailable=\"isUnavailable\"\n    >\n      {{ dayValue }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarGridProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarGridProps>(), { as: 'table' })\n\nconst rootContext = injectCalendarRootContext()\nconst disabled = computed(() => rootContext.disabled.value ? true : undefined)\nconst readonly = computed(() => rootContext.readonly.value ? true : undefined)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    tabindex=\"-1\"\n    role=\"grid\"\n    :aria-readonly=\"readonly\"\n    :aria-disabled=\"disabled\"\n    :data-readonly=\"readonly && ''\"\n    :data-disabled=\"disabled && ''\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarGridProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarGridProps>(), { as: 'table' })\n\nconst rootContext = injectCalendarRootContext()\nconst disabled = computed(() => rootContext.disabled.value ? true : undefined)\nconst readonly = computed(() => rootContext.readonly.value ? true : undefined)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    tabindex=\"-1\"\n    role=\"grid\"\n    :aria-readonly=\"readonly\"\n    :aria-disabled=\"disabled\"\n    :data-readonly=\"readonly && ''\"\n    :data-disabled=\"disabled && ''\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarGridBodyProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarGridBodyProps>(), { as: 'tbody' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarGridBodyProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarGridBodyProps>(), { as: 'tbody' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarGridHeadProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarGridHeadProps>(), { as: 'thead' })\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-hidden=\"true\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarGridHeadProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarGridHeadProps>(), { as: 'thead' })\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-hidden=\"true\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarGridRowProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarGridRowProps>(), { as: 'tr' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarGridRowProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarGridRowProps>(), { as: 'tr' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarHeadCellProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarHeadCellProps>(), { as: 'th' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarHeadCellProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarHeadCellProps>(), { as: 'th' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarHeaderProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarHeaderProps>(), { as: 'div' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarHeaderProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<CalendarHeaderProps>(), { as: 'div' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarHeadingProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarHeadingProps>(), { as: 'div' })\n\ndefineSlots<{\n  default?: (props: {\n    /** Current month and year */\n    headingValue: string\n  }) => any\n}>()\n\nconst rootContext = injectCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n  >\n    <slot :heading-value=\"rootContext.headingValue.value\">\n      {{ rootContext.headingValue.value }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarHeadingProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarHeadingProps>(), { as: 'div' })\n\ndefineSlots<{\n  default?: (props: {\n    /** Current month and year */\n    headingValue: string\n  }) => any\n}>()\n\nconst rootContext = injectCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n  >\n    <slot :heading-value=\"rootContext.headingValue.value\">\n      {{ rootContext.headingValue.value }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarNextProps extends PrimitiveProps {\n  /** The function to be used for the next page. Overwrites the `nextPage` function set on the `CalendarRoot`. */\n  nextPage?: (placeholder: DateValue) => DateValue\n}\n\nexport interface CalendarNextSlot {\n  default?: (props: {\n    /** Current disable state */\n    disabled: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarNextProps>(), { as: 'button', step: 'month' })\ndefineSlots<CalendarNextSlot>()\n\nconst disabled = computed(() => rootContext.disabled.value || rootContext.isNextButtonDisabled(props.nextPage))\n\nconst rootContext = injectCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    aria-label=\"Next page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-disabled=\"disabled || undefined\"\n    :data-disabled=\"disabled || undefined\"\n    :disabled=\"disabled\"\n    @click=\"rootContext.nextPage(props.nextPage)\"\n  >\n    <slot :disabled>\n      Next page\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarNextProps extends PrimitiveProps {\n  /** The function to be used for the next page. Overwrites the `nextPage` function set on the `CalendarRoot`. */\n  nextPage?: (placeholder: DateValue) => DateValue\n}\n\nexport interface CalendarNextSlot {\n  default?: (props: {\n    /** Current disable state */\n    disabled: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarNextProps>(), { as: 'button', step: 'month' })\ndefineSlots<CalendarNextSlot>()\n\nconst disabled = computed(() => rootContext.disabled.value || rootContext.isNextButtonDisabled(props.nextPage))\n\nconst rootContext = injectCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    aria-label=\"Next page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-disabled=\"disabled || undefined\"\n    :data-disabled=\"disabled || undefined\"\n    :disabled=\"disabled\"\n    @click=\"rootContext.nextPage(props.nextPage)\"\n  >\n    <slot :disabled>\n      Next page\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarPrevProps extends PrimitiveProps {\n  /** The function to be used for the prev page. Overwrites the `prevPage` function set on the `CalendarRoot`. */\n  prevPage?: (placeholder: DateValue) => DateValue\n}\n\nexport interface CalendarPrevSlot {\n  default?: (props: {\n    /** Current disable state */\n    disabled: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarPrevProps>(), { as: 'button', step: 'month' })\ndefineSlots<CalendarPrevSlot>()\n\nconst disabled = computed(() => rootContext.disabled.value || rootContext.isPrevButtonDisabled(props.prevPage))\n\nconst rootContext = injectCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    aria-label=\"Previous page\"\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-disabled=\"disabled || undefined\"\n    :data-disabled=\"disabled || undefined\"\n    :disabled=\"disabled\"\n    @click=\"rootContext.prevPage(props.prevPage)\"\n  >\n    <slot :disabled>\n      Prev page\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface CalendarPrevProps extends PrimitiveProps {\n  /** The function to be used for the prev page. Overwrites the `prevPage` function set on the `CalendarRoot`. */\n  prevPage?: (placeholder: DateValue) => DateValue\n}\n\nexport interface CalendarPrevSlot {\n  default?: (props: {\n    /** Current disable state */\n    disabled: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectCalendarRootContext } from './CalendarRoot.vue'\n\nconst props = withDefaults(defineProps<CalendarPrevProps>(), { as: 'button', step: 'month' })\ndefineSlots<CalendarPrevSlot>()\n\nconst disabled = computed(() => rootContext.disabled.value || rootContext.isPrevButtonDisabled(props.prevPage))\n\nconst rootContext = injectCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    aria-label=\"Previous page\"\n    :as=\"props.as\"\n    :as-child=\"props.asChild\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-disabled=\"disabled || undefined\"\n    :data-disabled=\"disabled || undefined\"\n    :disabled=\"disabled\"\n    @click=\"rootContext.prevPage(props.prevPage)\"\n  >\n    <slot :disabled>\n      Prev page\n    </slot>\n  </Primitive>\n</template>\n", "import type { Ref } from 'vue'\nimport { computed, defineComponent, h, inject, markRaw, provide, ref, watch, watchEffect } from 'vue'\nimport { Slot, usePrimitiveElement } from '@/Primitive'\n\ninterface CollectionContext<ItemData = {}> {\n  collectionRef: Ref<HTMLElement | undefined>\n  itemMap: Ref<Map<HTMLElement, { ref: HTMLElement, value?: any } & ItemData>>\n}\n\nconst ITEM_DATA_ATTR = 'data-reka-collection-item'\n\nexport function useCollection<ItemData = {}>(options: { key?: string, isProvider?: boolean } = {}) {\n  const { key = '', isProvider = false } = options\n  const injectionKey = `${key}CollectionProvider`\n  let context: CollectionContext<ItemData>\n\n  if (isProvider) {\n    const itemMap = ref<Map<HTMLElement, { ref: HTMLElement } & ItemData>>(new Map())\n    const collectionRef = ref<HTMLElement>()\n\n    context = {\n      collectionRef,\n      itemMap,\n    } as CollectionContext<ItemData>\n    provide(injectionKey, context)\n  }\n  else {\n    context = inject(injectionKey) as CollectionContext<ItemData>\n  }\n\n  const getItems = (includeDisabledItem = false) => {\n    const collectionNode = context.collectionRef.value\n    if (!collectionNode)\n      return []\n    const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`))\n    const items = Array.from(context.itemMap.value.values())\n    const orderedItems = items.sort(\n      (a, b) => orderedNodes.indexOf(a.ref) - orderedNodes.indexOf(b.ref),\n    )\n\n    if (includeDisabledItem)\n      return orderedItems\n    else\n      return orderedItems.filter(i => i.ref.dataset.disabled !== '')\n  }\n\n  const CollectionSlot = defineComponent({\n    name: 'CollectionSlot',\n    setup(_, { slots }) {\n      const { primitiveElement, currentElement } = usePrimitiveElement()\n      watch(currentElement, () => {\n        context.collectionRef.value = currentElement.value\n      })\n      return () => h(Slot, { ref: primitiveElement }, slots)\n    },\n  })\n\n  const CollectionItem = defineComponent({\n    name: 'CollectionItem',\n    inheritAttrs: false,\n    props: {\n      value: {\n        // It accepts any value\n        validator: () => true,\n      },\n    },\n    setup(props, { slots, attrs }) {\n      const { primitiveElement, currentElement } = usePrimitiveElement()\n\n      watchEffect((cleanupFn) => {\n        if (currentElement.value) {\n          const key = markRaw(currentElement.value)\n          // @ts-expect-error ignore assignment of unknown to any\n          context.itemMap.value.set(key, { ref: currentElement.value!, value: props.value })\n          cleanupFn(() => context.itemMap.value.delete(key))\n        }\n      })\n\n      return () => h(Slot, { ...attrs, [ITEM_DATA_ATTR]: '', ref: primitiveElement }, slots)\n    },\n  })\n\n  const reactiveItems = computed(() => Array.from(context.itemMap.value.values()))\n  const itemMapSize = computed(() => context.itemMap.value.size)\n\n  return { getItems, reactiveItems, itemMapSize, CollectionSlot, CollectionItem }\n}\n", "import { getActiveElement } from '@/shared'\n\nexport type Orientation = 'horizontal' | 'vertical'\nexport type Direction = 'ltr' | 'rtl'\n\nexport const ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus'\nexport const EVENT_OPTIONS = { bubbles: false, cancelable: true }\n\nexport const MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev',\n  ArrowUp: 'prev',\n  ArrowRight: 'next',\n  ArrowDown: 'next',\n  PageUp: 'first',\n  Home: 'first',\n  PageDown: 'last',\n  End: 'last',\n}\n\nexport function getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl')\n    return key\n  return key === 'ArrowLeft'\n    ? 'ArrowRight'\n    : key === 'ArrowRight'\n      ? 'ArrowLeft'\n      : key\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next'\n\nexport function getFocusIntent(\n  event: KeyboardEvent,\n  orientation?: Orientation,\n  dir?: Direction,\n) {\n  const key = getDirectionAwareKey(event.key, dir)\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key))\n    return undefined\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key))\n    return undefined\n  return MAP_KEY_TO_FOCUS_INTENT[key]\n}\n\nexport function focusFirst(candidates: HTMLElement[], preventScroll = false) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = getActiveElement()\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT)\n      return\n    candidate.focus({ preventScroll })\n    if (getActiveElement() !== PREVIOUSLY_FOCUSED_ELEMENT)\n      return\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nexport function wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length])\n}\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type {\n  Direction,\n  Orientation,\n} from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useDirection } from '@/shared'\n\nexport interface RovingFocusGroupProps extends PrimitiveProps {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean\n  /** The controlled value of the current stop item. Can be binded as `v-model`. */\n  currentTabStopId?: string | null\n  /**\n   * The value of the current stop item.\n   *\n   * Use when you do not need to control the state of the stop item.\n   */\n  defaultCurrentTabStopId?: string\n  /**\n   * When `true`, will prevent scrolling to the focus item when focused.\n   */\n  preventScrollOnEntryFocus?: boolean\n}\n\nexport type RovingFocusGroupEmits = {\n  'entryFocus': [event: Event]\n  'update:currentTabStopId': [value: string | null | undefined]\n}\n\ninterface RovingContext {\n  orientation: Ref<Orientation | undefined>\n  dir: Ref<Direction>\n  loop: Ref<boolean>\n  currentTabStopId: Ref<string | null | undefined>\n  onItemFocus: (tabStopId: string) => void\n  onItemShiftTab: () => void\n  onFocusableItemAdd: () => void\n  onFocusableItemRemove: () => void\n}\n\nexport const [injectRovingFocusGroupContext, provideRovingFocusGroupContext]\n  = createContext<RovingContext>('RovingFocusGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { ENTRY_FOCUS, EVENT_OPTIONS, focusFirst } from './utils'\n\nconst props = withDefaults(defineProps<RovingFocusGroupProps>(), {\n  loop: false,\n  orientation: undefined,\n  preventScrollOnEntryFocus: false,\n})\nconst emits = defineEmits<RovingFocusGroupEmits>()\n\nconst { loop, orientation, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst currentTabStopId = useVModel(props, 'currentTabStopId', emits, {\n  defaultValue: props.defaultCurrentTabStopId,\n  passive: (props.currentTabStopId === undefined) as false,\n})\nconst isTabbingBackOut = ref(false)\nconst isClickFocus = ref(false)\nconst focusableItemsCount = ref(0)\n\nconst { getItems, CollectionSlot } = useCollection({ isProvider: true })\n\nfunction handleFocus(event: FocusEvent) {\n  // We normally wouldn't need this check, because we already check\n  // that the focus is on the current target and not bubbling to it.\n  // We do this because Safari doesn't focus buttons when clicked, and\n  // instead, the wrapper will get focused and not through a bubbling event.\n  const isKeyboardFocus = !isClickFocus.value\n\n  if (\n    event.currentTarget\n    && event.target === event.currentTarget\n    && isKeyboardFocus\n    && !isTabbingBackOut.value\n  ) {\n    const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS)\n    event.currentTarget.dispatchEvent(entryFocusEvent)\n    emits('entryFocus', entryFocusEvent)\n\n    if (!entryFocusEvent.defaultPrevented) {\n      const items = getItems().map(i => i.ref).filter(i => i.dataset.disabled !== '')\n      const activeItem = items.find(item => item.getAttribute('data-active') === '')\n      const highlightedItem = items.find(item => item.getAttribute('data-highlighted') === '')\n      const currentItem = items.find(\n        item => item.id === currentTabStopId.value,\n      )\n      const candidateItems = [activeItem, highlightedItem, currentItem, ...items].filter(\n        Boolean,\n      ) as typeof items\n      focusFirst(candidateItems, props.preventScrollOnEntryFocus)\n    }\n  }\n  isClickFocus.value = false\n}\n\nfunction handleMouseUp() {\n  // reset `isClickFocus` after 1 tick because handleFocus might not triggered due to focused element\n  setTimeout(() => {\n    isClickFocus.value = false\n  }, 1)\n}\n\ndefineExpose({\n  getItems,\n})\n\nprovideRovingFocusGroupContext({\n  loop,\n  dir,\n  orientation,\n  currentTabStopId,\n  onItemFocus: (tabStopId) => {\n    currentTabStopId.value = tabStopId\n  },\n  onItemShiftTab: () => {\n    isTabbingBackOut.value = true\n  },\n  onFocusableItemAdd: () => {\n    focusableItemsCount.value++\n  },\n  onFocusableItemRemove: () => {\n    focusableItemsCount.value--\n  },\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      :tabindex=\"isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0\"\n      :data-orientation=\"orientation\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :dir=\"dir\"\n      style=\"outline: none\"\n      @mousedown=\"isClickFocus = true\"\n      @mouseup=\"handleMouseUp\"\n      @focus=\"handleFocus\"\n      @blur=\"isTabbingBackOut = false\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type {\n  Direction,\n  Orientation,\n} from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useDirection } from '@/shared'\n\nexport interface RovingFocusGroupProps extends PrimitiveProps {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean\n  /** The controlled value of the current stop item. Can be binded as `v-model`. */\n  currentTabStopId?: string | null\n  /**\n   * The value of the current stop item.\n   *\n   * Use when you do not need to control the state of the stop item.\n   */\n  defaultCurrentTabStopId?: string\n  /**\n   * When `true`, will prevent scrolling to the focus item when focused.\n   */\n  preventScrollOnEntryFocus?: boolean\n}\n\nexport type RovingFocusGroupEmits = {\n  'entryFocus': [event: Event]\n  'update:currentTabStopId': [value: string | null | undefined]\n}\n\ninterface RovingContext {\n  orientation: Ref<Orientation | undefined>\n  dir: Ref<Direction>\n  loop: Ref<boolean>\n  currentTabStopId: Ref<string | null | undefined>\n  onItemFocus: (tabStopId: string) => void\n  onItemShiftTab: () => void\n  onFocusableItemAdd: () => void\n  onFocusableItemRemove: () => void\n}\n\nexport const [injectRovingFocusGroupContext, provideRovingFocusGroupContext]\n  = createContext<RovingContext>('RovingFocusGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { ENTRY_FOCUS, EVENT_OPTIONS, focusFirst } from './utils'\n\nconst props = withDefaults(defineProps<RovingFocusGroupProps>(), {\n  loop: false,\n  orientation: undefined,\n  preventScrollOnEntryFocus: false,\n})\nconst emits = defineEmits<RovingFocusGroupEmits>()\n\nconst { loop, orientation, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst currentTabStopId = useVModel(props, 'currentTabStopId', emits, {\n  defaultValue: props.defaultCurrentTabStopId,\n  passive: (props.currentTabStopId === undefined) as false,\n})\nconst isTabbingBackOut = ref(false)\nconst isClickFocus = ref(false)\nconst focusableItemsCount = ref(0)\n\nconst { getItems, CollectionSlot } = useCollection({ isProvider: true })\n\nfunction handleFocus(event: FocusEvent) {\n  // We normally wouldn't need this check, because we already check\n  // that the focus is on the current target and not bubbling to it.\n  // We do this because Safari doesn't focus buttons when clicked, and\n  // instead, the wrapper will get focused and not through a bubbling event.\n  const isKeyboardFocus = !isClickFocus.value\n\n  if (\n    event.currentTarget\n    && event.target === event.currentTarget\n    && isKeyboardFocus\n    && !isTabbingBackOut.value\n  ) {\n    const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS)\n    event.currentTarget.dispatchEvent(entryFocusEvent)\n    emits('entryFocus', entryFocusEvent)\n\n    if (!entryFocusEvent.defaultPrevented) {\n      const items = getItems().map(i => i.ref).filter(i => i.dataset.disabled !== '')\n      const activeItem = items.find(item => item.getAttribute('data-active') === '')\n      const highlightedItem = items.find(item => item.getAttribute('data-highlighted') === '')\n      const currentItem = items.find(\n        item => item.id === currentTabStopId.value,\n      )\n      const candidateItems = [activeItem, highlightedItem, currentItem, ...items].filter(\n        Boolean,\n      ) as typeof items\n      focusFirst(candidateItems, props.preventScrollOnEntryFocus)\n    }\n  }\n  isClickFocus.value = false\n}\n\nfunction handleMouseUp() {\n  // reset `isClickFocus` after 1 tick because handleFocus might not triggered due to focused element\n  setTimeout(() => {\n    isClickFocus.value = false\n  }, 1)\n}\n\ndefineExpose({\n  getItems,\n})\n\nprovideRovingFocusGroupContext({\n  loop,\n  dir,\n  orientation,\n  currentTabStopId,\n  onItemFocus: (tabStopId) => {\n    currentTabStopId.value = tabStopId\n  },\n  onItemShiftTab: () => {\n    isTabbingBackOut.value = true\n  },\n  onFocusableItemAdd: () => {\n    focusableItemsCount.value++\n  },\n  onFocusableItemRemove: () => {\n    focusableItemsCount.value--\n  },\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      :tabindex=\"isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0\"\n      :data-orientation=\"orientation\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :dir=\"dir\"\n      style=\"outline: none\"\n      @mousedown=\"isClickFocus = true\"\n      @mouseup=\"handleMouseUp\"\n      @focus=\"handleFocus\"\n      @blur=\"isTabbingBackOut = false\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RovingFocusItemProps extends PrimitiveProps {\n  tabStopId?: string\n  /**\n   * When `false`, item will not be focusable.\n   * @defaultValue `true`\n   */\n  focusable?: boolean\n  /** When `true`, item will be initially focused. */\n  active?: boolean\n  /** When `true`, shift + arrow key will allow focusing on next/previous item. */\n  allowShiftKey?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, onMounted, onUnmounted } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { useId } from '@/shared'\nimport { injectRovingFocusGroupContext } from './RovingFocusGroup.vue'\nimport { focusFirst, getFocusIntent, wrapArray } from './utils'\n\nconst props = withDefaults(defineProps<RovingFocusItemProps>(), {\n  focusable: true,\n  as: 'span',\n})\n\nconst context = injectRovingFocusGroupContext()\nconst randomId = useId()\nconst id = computed(() => props.tabStopId || randomId)\nconst isCurrentTabStop = computed(\n  () => context.currentTabStopId.value === id.value,\n)\n\nconst { getItems, CollectionItem } = useCollection()\n\nonMounted(() => {\n  if (props.focusable)\n    context.onFocusableItemAdd()\n})\nonUnmounted(() => {\n  if (props.focusable)\n    context.onFocusableItemRemove()\n})\n\nfunction handleKeydown(event: KeyboardEvent) {\n  if (event.key === 'Tab' && event.shiftKey) {\n    context.onItemShiftTab()\n    return\n  }\n\n  if (event.target !== event.currentTarget)\n    return\n\n  const focusIntent = getFocusIntent(\n    event,\n    context.orientation.value,\n    context.dir.value,\n  )\n\n  if (focusIntent !== undefined) {\n    if (event.metaKey || event.ctrlKey || event.altKey || (props.allowShiftKey ? false : event.shiftKey))\n      return\n    event.preventDefault()\n    let candidateNodes = [...getItems().map(i => i.ref).filter(i => i.dataset.disabled !== '')]\n\n    if (focusIntent === 'last') {\n      candidateNodes.reverse()\n    }\n    else if (focusIntent === 'prev' || focusIntent === 'next') {\n      if (focusIntent === 'prev')\n        candidateNodes.reverse()\n      const currentIndex = candidateNodes.indexOf(\n        event.currentTarget as HTMLElement,\n      )\n\n      candidateNodes = context.loop.value\n        ? wrapArray(candidateNodes, currentIndex + 1)\n        : candidateNodes.slice(currentIndex + 1)\n    }\n\n    nextTick(() => focusFirst(candidateNodes))\n  }\n}\n</script>\n\n<template>\n  <CollectionItem>\n    <Primitive\n      :tabindex=\"isCurrentTabStop ? 0 : -1\"\n      :data-orientation=\"context.orientation.value\"\n      :data-active=\"active ? '' : undefined\"\n      :data-disabled=\"!focusable ? '' : undefined\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      @mousedown=\"\n        (event) => {\n          // We prevent focusing non-focusable items on `mousedown`.\n          // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n          if (!focusable) event.preventDefault();\n          // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n          else context.onItemFocus(id);\n        }\n      \"\n      @focus=\"context.onItemFocus(id)\"\n      @keydown=\"handleKeydown\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RovingFocusItemProps extends PrimitiveProps {\n  tabStopId?: string\n  /**\n   * When `false`, item will not be focusable.\n   * @defaultValue `true`\n   */\n  focusable?: boolean\n  /** When `true`, item will be initially focused. */\n  active?: boolean\n  /** When `true`, shift + arrow key will allow focusing on next/previous item. */\n  allowShiftKey?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, onMounted, onUnmounted } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { useId } from '@/shared'\nimport { injectRovingFocusGroupContext } from './RovingFocusGroup.vue'\nimport { focusFirst, getFocusIntent, wrapArray } from './utils'\n\nconst props = withDefaults(defineProps<RovingFocusItemProps>(), {\n  focusable: true,\n  as: 'span',\n})\n\nconst context = injectRovingFocusGroupContext()\nconst randomId = useId()\nconst id = computed(() => props.tabStopId || randomId)\nconst isCurrentTabStop = computed(\n  () => context.currentTabStopId.value === id.value,\n)\n\nconst { getItems, CollectionItem } = useCollection()\n\nonMounted(() => {\n  if (props.focusable)\n    context.onFocusableItemAdd()\n})\nonUnmounted(() => {\n  if (props.focusable)\n    context.onFocusableItemRemove()\n})\n\nfunction handleKeydown(event: KeyboardEvent) {\n  if (event.key === 'Tab' && event.shiftKey) {\n    context.onItemShiftTab()\n    return\n  }\n\n  if (event.target !== event.currentTarget)\n    return\n\n  const focusIntent = getFocusIntent(\n    event,\n    context.orientation.value,\n    context.dir.value,\n  )\n\n  if (focusIntent !== undefined) {\n    if (event.metaKey || event.ctrlKey || event.altKey || (props.allowShiftKey ? false : event.shiftKey))\n      return\n    event.preventDefault()\n    let candidateNodes = [...getItems().map(i => i.ref).filter(i => i.dataset.disabled !== '')]\n\n    if (focusIntent === 'last') {\n      candidateNodes.reverse()\n    }\n    else if (focusIntent === 'prev' || focusIntent === 'next') {\n      if (focusIntent === 'prev')\n        candidateNodes.reverse()\n      const currentIndex = candidateNodes.indexOf(\n        event.currentTarget as HTMLElement,\n      )\n\n      candidateNodes = context.loop.value\n        ? wrapArray(candidateNodes, currentIndex + 1)\n        : candidateNodes.slice(currentIndex + 1)\n    }\n\n    nextTick(() => focusFirst(candidateNodes))\n  }\n}\n</script>\n\n<template>\n  <CollectionItem>\n    <Primitive\n      :tabindex=\"isCurrentTabStop ? 0 : -1\"\n      :data-orientation=\"context.orientation.value\"\n      :data-active=\"active ? '' : undefined\"\n      :data-disabled=\"!focusable ? '' : undefined\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      @mousedown=\"\n        (event) => {\n          // We prevent focusing non-focusable items on `mousedown`.\n          // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n          if (!focusable) event.preventDefault();\n          // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n          else context.onItemFocus(id);\n        }\n      \"\n      @focus=\"context.onItemFocus(id)\"\n      @keydown=\"handleKeydown\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface VisuallyHiddenProps extends PrimitiveProps {\n  feature?: 'focusable' | 'fully-hidden'\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nwithDefaults(defineProps<VisuallyHiddenProps>(), { as: 'span', feature: 'focusable' })\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :aria-hidden=\"feature === 'focusable' ? 'true' : undefined\"\n    :data-hidden=\"feature === 'fully-hidden' ? '' : undefined\"\n    :tabindex=\"feature === 'fully-hidden' ? '-1' : undefined\"\n    :style=\"{\n      // See: https://github.com/twbs/bootstrap/blob/a360960b8dfdb4bf48f87539c2243458fa0366f7/scss/mixins/_visually-hidden.scss\n      position: 'absolute',\n      border: 0,\n      width: '1px',\n      height: '1px',\n      padding: 0,\n      margin: '-1px',\n      overflow: 'hidden',\n      clip: 'rect(0, 0, 0, 0)',\n      clipPath: 'inset(50%)',\n      whiteSpace: 'nowrap',\n      wordWrap: 'normal',\n\n      // Prevent causing unnecessary container scroll\n      // @see https://github.com/unovue/reka-ui/issues/2127\n      top: '-1px',\n      left: '-1px',\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface VisuallyHiddenProps extends PrimitiveProps {\n  feature?: 'focusable' | 'fully-hidden'\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nwithDefaults(defineProps<VisuallyHiddenProps>(), { as: 'span', feature: 'focusable' })\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :aria-hidden=\"feature === 'focusable' ? 'true' : undefined\"\n    :data-hidden=\"feature === 'fully-hidden' ? '' : undefined\"\n    :tabindex=\"feature === 'fully-hidden' ? '-1' : undefined\"\n    :style=\"{\n      // See: https://github.com/twbs/bootstrap/blob/a360960b8dfdb4bf48f87539c2243458fa0366f7/scss/mixins/_visually-hidden.scss\n      position: 'absolute',\n      border: 0,\n      width: '1px',\n      height: '1px',\n      padding: 0,\n      margin: '-1px',\n      overflow: 'hidden',\n      clip: 'rect(0, 0, 0, 0)',\n      clipPath: 'inset(50%)',\n      whiteSpace: 'nowrap',\n      wordWrap: 'normal',\n\n      // Prevent causing unnecessary container scroll\n      // @see https://github.com/unovue/reka-ui/issues/2127\n      top: '-1px',\n      left: '-1px',\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nexport interface VisuallyHiddenInputBubbleProps<T> {\n  name: string\n  value: T\n  checked?: boolean\n  required?: boolean\n  disabled?: boolean\n  feature?: VisuallyHiddenProps['feature']\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T\">\nimport type { VisuallyHiddenProps } from './VisuallyHidden.vue'\nimport { computed, watch } from 'vue'\nimport { usePrimitiveElement } from '@/Primitive'\nimport VisuallyHidden from './VisuallyHidden.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<VisuallyHiddenInputBubbleProps<T>>(), {\n  feature: 'fully-hidden',\n  checked: undefined,\n})\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst valueState = computed(() => props.checked ?? props.value)\n\nwatch(valueState, (cur, prev) => {\n  if (!currentElement.value)\n    return\n\n  const input = currentElement.value as HTMLInputElement\n  const inputProto = window.HTMLInputElement.prototype\n  const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value') as PropertyDescriptor\n  const setValue = descriptor.set\n  if (setValue && cur !== prev) {\n    const inputEvent = new Event('input', { bubbles: true })\n    const changeEvent = new Event('change', { bubbles: true })\n    setValue.call(input, cur)\n    input.dispatchEvent(inputEvent)\n    input.dispatchEvent(changeEvent)\n  }\n})\n</script>\n\n<template>\n  <VisuallyHidden\n    ref=\"primitiveElement\"\n    v-bind=\"{ ...props, ...$attrs }\"\n    as=\"input\"\n  />\n</template>\n", "<script lang=\"ts\">\nexport interface VisuallyHiddenInputBubbleProps<T> {\n  name: string\n  value: T\n  checked?: boolean\n  required?: boolean\n  disabled?: boolean\n  feature?: VisuallyHiddenProps['feature']\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T\">\nimport type { VisuallyHiddenProps } from './VisuallyHidden.vue'\nimport { computed, watch } from 'vue'\nimport { usePrimitiveElement } from '@/Primitive'\nimport VisuallyHidden from './VisuallyHidden.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<VisuallyHiddenInputBubbleProps<T>>(), {\n  feature: 'fully-hidden',\n  checked: undefined,\n})\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst valueState = computed(() => props.checked ?? props.value)\n\nwatch(valueState, (cur, prev) => {\n  if (!currentElement.value)\n    return\n\n  const input = currentElement.value as HTMLInputElement\n  const inputProto = window.HTMLInputElement.prototype\n  const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value') as PropertyDescriptor\n  const setValue = descriptor.set\n  if (setValue && cur !== prev) {\n    const inputEvent = new Event('input', { bubbles: true })\n    const changeEvent = new Event('change', { bubbles: true })\n    setValue.call(input, cur)\n    input.dispatchEvent(inputEvent)\n    input.dispatchEvent(changeEvent)\n  }\n})\n</script>\n\n<template>\n  <VisuallyHidden\n    ref=\"primitiveElement\"\n    v-bind=\"{ ...props, ...$attrs }\"\n    as=\"input\"\n  />\n</template>\n", "<script setup lang=\"ts\" generic=\"T\">\nimport type { VisuallyHiddenInputBubbleProps } from './VisuallyHiddenInputBubble.vue'\nimport { computed } from 'vue'\nimport VisuallyHiddenInputBubble from './VisuallyHiddenInputBubble.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<VisuallyHiddenInputBubbleProps<T>>(), {\n  feature: 'fully-hidden',\n  checked: undefined,\n})\n\nconst isFormArrayEmptyAndRequired = computed(() =>\n  typeof props.value === 'object'\n  && Array.isArray(props.value)\n  && props.value.length === 0\n  && props.required,\n)\n\nconst parsedValue = computed(() => {\n  // if primitive value\n  if (typeof props.value === 'string' || typeof props.value === 'number' || typeof props.value === 'boolean' || props.value === null || props.value === undefined) {\n    return [{ name: props.name, value: props.value }]\n  }\n\n  // if array value\n  else if (typeof props.value === 'object' && Array.isArray(props.value)) {\n    return props.value.flatMap((obj, index) => {\n      // if item in array is object\n      if (typeof obj === 'object')\n        return Object.entries(obj).map(([key, value]) => ({ name: `${props.name}[${index}][${key}]`, value }))\n      // if item in array is not object, may be primitive\n      else\n        return ({ name: `${props.name}[${index}]`, value: obj })\n    })\n  }\n\n  // if object value\n  else if (props.value !== null && typeof props.value === 'object' && !Array.isArray(props.value)) {\n    return Object.entries(props.value as object).map(([key, value]) => ({ name: `${props.name}[${key}]`, value }))\n  }\n\n  return []\n})\n</script>\n\n<template>\n  <!-- We render single input if it's required -->\n  <VisuallyHiddenInputBubble\n    v-if=\"isFormArrayEmptyAndRequired\"\n    :key=\"name\"\n    v-bind=\"{ ...props, ...$attrs }\"\n    :name=\"name\"\n    :value=\"value\"\n  />\n\n  <VisuallyHiddenInputBubble\n    v-for=\"parsed in parsedValue\"\n    v-else\n    :key=\"parsed.name\"\n    v-bind=\"{ ...props, ...$attrs }\"\n    :name=\"parsed.name\"\n    :value=\"parsed.value\"\n  />\n</template>\n", "<script setup lang=\"ts\" generic=\"T\">\nimport type { VisuallyHiddenInputBubbleProps } from './VisuallyHiddenInputBubble.vue'\nimport { computed } from 'vue'\nimport VisuallyHiddenInputBubble from './VisuallyHiddenInputBubble.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<VisuallyHiddenInputBubbleProps<T>>(), {\n  feature: 'fully-hidden',\n  checked: undefined,\n})\n\nconst isFormArrayEmptyAndRequired = computed(() =>\n  typeof props.value === 'object'\n  && Array.isArray(props.value)\n  && props.value.length === 0\n  && props.required,\n)\n\nconst parsedValue = computed(() => {\n  // if primitive value\n  if (typeof props.value === 'string' || typeof props.value === 'number' || typeof props.value === 'boolean' || props.value === null || props.value === undefined) {\n    return [{ name: props.name, value: props.value }]\n  }\n\n  // if array value\n  else if (typeof props.value === 'object' && Array.isArray(props.value)) {\n    return props.value.flatMap((obj, index) => {\n      // if item in array is object\n      if (typeof obj === 'object')\n        return Object.entries(obj).map(([key, value]) => ({ name: `${props.name}[${index}][${key}]`, value }))\n      // if item in array is not object, may be primitive\n      else\n        return ({ name: `${props.name}[${index}]`, value: obj })\n    })\n  }\n\n  // if object value\n  else if (props.value !== null && typeof props.value === 'object' && !Array.isArray(props.value)) {\n    return Object.entries(props.value as object).map(([key, value]) => ({ name: `${props.name}[${key}]`, value }))\n  }\n\n  return []\n})\n</script>\n\n<template>\n  <!-- We render single input if it's required -->\n  <VisuallyHiddenInputBubble\n    v-if=\"isFormArrayEmptyAndRequired\"\n    :key=\"name\"\n    v-bind=\"{ ...props, ...$attrs }\"\n    :name=\"name\"\n    :value=\"value\"\n  />\n\n  <VisuallyHiddenInputBubble\n    v-for=\"parsed in parsedValue\"\n    v-else\n    :key=\"parsed.name\"\n    v-bind=\"{ ...props, ...$attrs }\"\n    :name=\"parsed.name\"\n    :value=\"parsed.value\"\n  />\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { RovingFocusGroupProps } from '@/RovingFocus'\nimport type { AcceptableValue, FormFieldProps } from '@/shared/types'\nimport { useVModel } from '@vueuse/core'\nimport { computed, toRefs } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { createContext, useDirection, useFormControl } from '@/shared'\n\nexport interface CheckboxGroupRootProps<T = AcceptableValue> extends Pick<RovingFocusGroupProps, 'as' | 'asChild' | 'dir' | 'orientation' | 'loop'>, FormFieldProps {\n  /** The value of the checkbox when it is initially rendered. Use when you do not need to control its value. */\n  defaultValue?: T[]\n  /** The controlled value of the checkbox. Can be binded with v-model. */\n  modelValue?: T[]\n  /** When `false`, navigating through the items using arrow keys will be disabled. */\n  rovingFocus?: boolean\n  /** When `true`, prevents the user from interacting with the checkboxes */\n  disabled?: boolean\n}\n\nexport type CheckboxGroupRootEmits<T = AcceptableValue> = {\n  /** Event handler called when the value of the checkbox changes. */\n  'update:modelValue': [value: T[]]\n}\n\ninterface CheckboxGroupRootContext {\n  modelValue: Ref<AcceptableValue[]>\n  rovingFocus: Ref<boolean>\n  disabled: Ref<boolean>\n}\n\nexport const [injectCheckboxGroupRootContext, provideCheckboxGroupRootContext]\n  = createContext<CheckboxGroupRootContext>('CheckboxGroupRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\nconst props = withDefaults(defineProps<CheckboxGroupRootProps<T>>(), {\n  rovingFocus: true,\n})\nconst emits = defineEmits<CheckboxGroupRootEmits<T>>()\n\nconst { disabled, rovingFocus, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst isFormControl = useFormControl(currentElement)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? [],\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<T[]>\n\nconst rovingFocusProps = computed(() => {\n  return rovingFocus.value ? { loop: props.loop, dir: dir.value, orientation: props.orientation } : {}\n})\n\nprovideCheckboxGroupRootContext({\n  modelValue,\n  rovingFocus,\n  disabled,\n})\n</script>\n\n<template>\n  <component\n    :is=\"rovingFocus ? RovingFocusGroup : Primitive\"\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    v-bind=\"rovingFocusProps\"\n  >\n    <slot />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      :name=\"name\"\n      :value=\"modelValue\"\n      :required=\"required\"\n    />\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { RovingFocusGroupProps } from '@/RovingFocus'\nimport type { AcceptableValue, FormFieldProps } from '@/shared/types'\nimport { useVModel } from '@vueuse/core'\nimport { computed, toRefs } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { createContext, useDirection, useFormControl } from '@/shared'\n\nexport interface CheckboxGroupRootProps<T = AcceptableValue> extends Pick<RovingFocusGroupProps, 'as' | 'asChild' | 'dir' | 'orientation' | 'loop'>, FormFieldProps {\n  /** The value of the checkbox when it is initially rendered. Use when you do not need to control its value. */\n  defaultValue?: T[]\n  /** The controlled value of the checkbox. Can be binded with v-model. */\n  modelValue?: T[]\n  /** When `false`, navigating through the items using arrow keys will be disabled. */\n  rovingFocus?: boolean\n  /** When `true`, prevents the user from interacting with the checkboxes */\n  disabled?: boolean\n}\n\nexport type CheckboxGroupRootEmits<T = AcceptableValue> = {\n  /** Event handler called when the value of the checkbox changes. */\n  'update:modelValue': [value: T[]]\n}\n\ninterface CheckboxGroupRootContext {\n  modelValue: Ref<AcceptableValue[]>\n  rovingFocus: Ref<boolean>\n  disabled: Ref<boolean>\n}\n\nexport const [injectCheckboxGroupRootContext, provideCheckboxGroupRootContext]\n  = createContext<CheckboxGroupRootContext>('CheckboxGroupRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\nconst props = withDefaults(defineProps<CheckboxGroupRootProps<T>>(), {\n  rovingFocus: true,\n})\nconst emits = defineEmits<CheckboxGroupRootEmits<T>>()\n\nconst { disabled, rovingFocus, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst isFormControl = useFormControl(currentElement)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? [],\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<T[]>\n\nconst rovingFocusProps = computed(() => {\n  return rovingFocus.value ? { loop: props.loop, dir: dir.value, orientation: props.orientation } : {}\n})\n\nprovideCheckboxGroupRootContext({\n  modelValue,\n  rovingFocus,\n  disabled,\n})\n</script>\n\n<template>\n  <component\n    :is=\"rovingFocus ? RovingFocusGroup : Primitive\"\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    v-bind=\"rovingFocusProps\"\n  >\n    <slot />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      :name=\"name\"\n      :value=\"modelValue\"\n      :required=\"required\"\n    />\n  </component>\n</template>\n", "export type CheckedState = boolean | 'indeterminate'\n\nexport function isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate'\n}\n\nexport function getState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked'\n}\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { CheckedState } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, FormFieldProps } from '@/shared/types'\nimport { useVModel } from '@vueuse/core'\nimport { createContext, isNullish, isValueEqualOrExist, useFormControl, useForwardExpose } from '@/shared'\nimport { injectCheckboxGroupRootContext } from './CheckboxGroupRoot.vue'\n\nexport interface CheckboxRootProps extends PrimitiveProps, FormFieldProps {\n  /** The value of the checkbox when it is initially rendered. Use when you do not need to control its value. */\n  defaultValue?: boolean | 'indeterminate'\n  /** The controlled value of the checkbox. Can be binded with v-model. */\n  modelValue?: boolean | 'indeterminate' | null\n  /** When `true`, prevents the user from interacting with the checkbox */\n  disabled?: boolean\n  /**\n   * The value given as data when submitted with a `name`.\n   *  @defaultValue \"on\"\n   */\n  value?: AcceptableValue\n  /** Id of the element */\n  id?: string\n}\n\nexport type CheckboxRootEmits = {\n  /** Event handler called when the value of the checkbox changes. */\n  'update:modelValue': [value: boolean | 'indeterminate']\n}\n\ninterface CheckboxRootContext {\n  disabled: Ref<boolean>\n  state: Ref<CheckedState>\n}\n\nexport const [injectCheckboxRootContext, provideCheckboxRootContext]\n  = createContext<CheckboxRootContext>('CheckboxRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { isEqual } from 'ohash'\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport { getState, isIndeterminate } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<CheckboxRootProps>(), {\n  modelValue: undefined,\n  value: 'on',\n  as: 'button',\n})\nconst emits = defineEmits<CheckboxRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current value */\n    modelValue: typeof modelValue.value\n    /** Current state */\n    state: typeof checkboxState.value\n  }) => any\n}>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst checkboxGroupContext = injectCheckboxGroupRootContext(null)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<CheckedState>\n\nconst disabled = computed(() => checkboxGroupContext?.disabled.value || props.disabled)\n\nconst checkboxState = computed<CheckedState>(() => {\n  if (!isNullish(checkboxGroupContext?.modelValue.value)) {\n    return isValueEqualOrExist(checkboxGroupContext.modelValue.value, props.value)\n  }\n  else {\n    return modelValue.value === 'indeterminate' ? 'indeterminate' : modelValue.value\n  }\n})\n\nfunction handleClick() {\n  if (!isNullish(checkboxGroupContext?.modelValue.value)) {\n    const modelValueArray = [...(checkboxGroupContext.modelValue.value || [])]\n    if (isValueEqualOrExist(modelValueArray, props.value)) {\n      const index = modelValueArray.findIndex(i => isEqual(i, props.value))\n      modelValueArray.splice(index, 1)\n    }\n    else {\n      modelValueArray.push(props.value)\n    }\n    checkboxGroupContext.modelValue.value = modelValueArray\n  }\n  else {\n    modelValue.value = isIndeterminate(modelValue.value) ? true : !modelValue.value\n  }\n}\n\nconst isFormControl = useFormControl(currentElement)\nconst ariaLabel = computed(() => props.id && currentElement.value\n  ? (document.querySelector(`[for=\"${props.id}\"]`) as HTMLLabelElement)?.innerText\n  : undefined)\n\nprovideCheckboxRootContext({\n  disabled,\n  state: checkboxState,\n})\n</script>\n\n<template>\n  <component\n    v-bind=\"$attrs\"\n    :is=\"checkboxGroupContext?.rovingFocus.value ? RovingFocusItem : Primitive\"\n    :id=\"id\"\n    :ref=\"forwardRef\"\n    role=\"checkbox\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-checked=\"isIndeterminate(checkboxState) ? 'mixed' : checkboxState\"\n    :aria-required=\"required\"\n    :aria-label=\"$attrs['aria-label'] || ariaLabel\"\n    :data-state=\"getState(checkboxState)\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :disabled=\"disabled\"\n    :focusable=\"checkboxGroupContext?.rovingFocus.value ? !disabled : undefined\"\n    @keydown.enter.prevent=\"() => {\n      // According to WAI ARIA, Checkboxes don't activate on enter keypress\n    }\"\n    @click=\"handleClick\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :state=\"checkboxState\"\n    />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name && !checkboxGroupContext\"\n      type=\"checkbox\"\n      :checked=\"!!checkboxState\"\n      :name=\"name\"\n      :value=\"value\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { CheckedState } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, FormFieldProps } from '@/shared/types'\nimport { useVModel } from '@vueuse/core'\nimport { createContext, isNullish, isValueEqualOrExist, useFormControl, useForwardExpose } from '@/shared'\nimport { injectCheckboxGroupRootContext } from './CheckboxGroupRoot.vue'\n\nexport interface CheckboxRootProps extends PrimitiveProps, FormFieldProps {\n  /** The value of the checkbox when it is initially rendered. Use when you do not need to control its value. */\n  defaultValue?: boolean | 'indeterminate'\n  /** The controlled value of the checkbox. Can be binded with v-model. */\n  modelValue?: boolean | 'indeterminate' | null\n  /** When `true`, prevents the user from interacting with the checkbox */\n  disabled?: boolean\n  /**\n   * The value given as data when submitted with a `name`.\n   *  @defaultValue \"on\"\n   */\n  value?: AcceptableValue\n  /** Id of the element */\n  id?: string\n}\n\nexport type CheckboxRootEmits = {\n  /** Event handler called when the value of the checkbox changes. */\n  'update:modelValue': [value: boolean | 'indeterminate']\n}\n\ninterface CheckboxRootContext {\n  disabled: Ref<boolean>\n  state: Ref<CheckedState>\n}\n\nexport const [injectCheckboxRootContext, provideCheckboxRootContext]\n  = createContext<CheckboxRootContext>('CheckboxRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { isEqual } from 'ohash'\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport { getState, isIndeterminate } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<CheckboxRootProps>(), {\n  modelValue: undefined,\n  value: 'on',\n  as: 'button',\n})\nconst emits = defineEmits<CheckboxRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current value */\n    modelValue: typeof modelValue.value\n    /** Current state */\n    state: typeof checkboxState.value\n  }) => any\n}>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst checkboxGroupContext = injectCheckboxGroupRootContext(null)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<CheckedState>\n\nconst disabled = computed(() => checkboxGroupContext?.disabled.value || props.disabled)\n\nconst checkboxState = computed<CheckedState>(() => {\n  if (!isNullish(checkboxGroupContext?.modelValue.value)) {\n    return isValueEqualOrExist(checkboxGroupContext.modelValue.value, props.value)\n  }\n  else {\n    return modelValue.value === 'indeterminate' ? 'indeterminate' : modelValue.value\n  }\n})\n\nfunction handleClick() {\n  if (!isNullish(checkboxGroupContext?.modelValue.value)) {\n    const modelValueArray = [...(checkboxGroupContext.modelValue.value || [])]\n    if (isValueEqualOrExist(modelValueArray, props.value)) {\n      const index = modelValueArray.findIndex(i => isEqual(i, props.value))\n      modelValueArray.splice(index, 1)\n    }\n    else {\n      modelValueArray.push(props.value)\n    }\n    checkboxGroupContext.modelValue.value = modelValueArray\n  }\n  else {\n    modelValue.value = isIndeterminate(modelValue.value) ? true : !modelValue.value\n  }\n}\n\nconst isFormControl = useFormControl(currentElement)\nconst ariaLabel = computed(() => props.id && currentElement.value\n  ? (document.querySelector(`[for=\"${props.id}\"]`) as HTMLLabelElement)?.innerText\n  : undefined)\n\nprovideCheckboxRootContext({\n  disabled,\n  state: checkboxState,\n})\n</script>\n\n<template>\n  <component\n    v-bind=\"$attrs\"\n    :is=\"checkboxGroupContext?.rovingFocus.value ? RovingFocusItem : Primitive\"\n    :id=\"id\"\n    :ref=\"forwardRef\"\n    role=\"checkbox\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-checked=\"isIndeterminate(checkboxState) ? 'mixed' : checkboxState\"\n    :aria-required=\"required\"\n    :aria-label=\"$attrs['aria-label'] || ariaLabel\"\n    :data-state=\"getState(checkboxState)\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :disabled=\"disabled\"\n    :focusable=\"checkboxGroupContext?.rovingFocus.value ? !disabled : undefined\"\n    @keydown.enter.prevent=\"() => {\n      // According to WAI ARIA, Checkboxes don't activate on enter keypress\n    }\"\n    @click=\"handleClick\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :state=\"checkboxState\"\n    />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name && !checkboxGroupContext\"\n      type=\"checkbox\"\n      :checked=\"!!checkboxState\"\n      :name=\"name\"\n      :value=\"value\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface CheckboxIndicatorProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { injectCheckboxRootContext } from './CheckboxRoot.vue'\nimport { getState, isIndeterminate } from './utils'\n\nwithDefaults(defineProps<CheckboxIndicatorProps>(), {\n  as: 'span',\n})\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectCheckboxRootContext()\n</script>\n\n<template>\n  <Presence\n    :present=\"forceMount || isIndeterminate(rootContext.state.value) || rootContext.state.value === true\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :data-state=\"getState(rootContext.state.value)\"\n      :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n      :style=\"{ pointerEvents: 'none' }\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface CheckboxIndicatorProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { injectCheckboxRootContext } from './CheckboxRoot.vue'\nimport { getState, isIndeterminate } from './utils'\n\nwithDefaults(defineProps<CheckboxIndicatorProps>(), {\n  as: 'span',\n})\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectCheckboxRootContext()\n</script>\n\n<template>\n  <Presence\n    :present=\"forceMount || isIndeterminate(rootContext.state.value) || rootContext.state.value === true\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :data-state=\"getState(rootContext.state.value)\"\n      :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n      :style=\"{ pointerEvents: 'none' }\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { ReferenceElement } from '@floating-ui/vue'\nimport type { Ref } from 'vue'\nimport { createContext } from '@/shared'\n\nexport interface Measurable {\n  getBoundingClientRect: () => DOMRect\n}\n\ninterface PopperRootContext {\n  anchor: Ref<ReferenceElement | undefined>\n  onAnchorChange: (element: ReferenceElement | undefined) => void\n}\n\nexport const [injectPopperRootContext, providePopperRootContext]\n  = createContext<PopperRootContext>('PopperRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst anchor = ref<ReferenceElement>()\n\nprovidePopperRootContext({\n  anchor,\n  onAnchorChange: element => anchor.value = element,\n})\n</script>\n\n<template>\n  <slot />\n</template>\n", "<script lang=\"ts\">\nimport type { ReferenceElement } from '@floating-ui/vue'\nimport type { Ref } from 'vue'\nimport { createContext } from '@/shared'\n\nexport interface Measurable {\n  getBoundingClientRect: () => DOMRect\n}\n\ninterface PopperRootContext {\n  anchor: Ref<ReferenceElement | undefined>\n  onAnchorChange: (element: ReferenceElement | undefined) => void\n}\n\nexport const [injectPopperRootContext, providePopperRootContext]\n  = createContext<PopperRootContext>('PopperRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst anchor = ref<ReferenceElement>()\n\nprovidePopperRootContext({\n  anchor,\n  onAnchorChange: element => anchor.value = element,\n})\n</script>\n\n<template>\n  <slot />\n</template>\n", "<script lang=\"ts\">\nimport type { ReferenceElement } from '@floating-ui/vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PopperAnchorProps extends PrimitiveProps {\n  /**\n   *  The reference (or anchor) element that is being referred to for positioning.\n   *\n   *  If not provided will use the current component as anchor.\n   */\n  reference?: ReferenceElement\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { watchPostEffect } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectPopperRootContext } from './PopperRoot.vue'\n\nconst props = defineProps<PopperAnchorProps>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst rootContext = injectPopperRootContext()\n\nwatchPostEffect(() => {\n  rootContext.onAnchorChange(props.reference ?? currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ReferenceElement } from '@floating-ui/vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PopperAnchorProps extends PrimitiveProps {\n  /**\n   *  The reference (or anchor) element that is being referred to for positioning.\n   *\n   *  If not provided will use the current component as anchor.\n   */\n  reference?: ReferenceElement\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { watchPostEffect } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectPopperRootContext } from './PopperRoot.vue'\n\nconst props = defineProps<PopperAnchorProps>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst rootContext = injectPopperRootContext()\n\nwatchPostEffect(() => {\n  rootContext.onAnchorChange(props.reference ?? currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '../useForwardExpose'\n\nexport interface ArrowProps extends PrimitiveProps {\n  /**\n   * The width of the arrow in pixels.\n   *\n   * @defaultValue 10\n   */\n  width?: number\n  /**\n   * The height of the arrow in pixels.\n   *\n   * @defaultValue 5\n   */\n  height?: number\n  /**\n   * When `true`, render the rounded version of arrow. Do not work with `as`/`asChild`\n   *\n   * @defaultValue false\n   */\n  rounded?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<ArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :width=\"width\"\n    :height=\"height\"\n    :viewBox=\"asChild ? undefined : '0 0 12 6'\"\n    :preserveAspectRatio=\"asChild ? undefined : 'none'\"\n  >\n    <slot>\n      <path\n        v-if=\"!rounded\"\n        d=\"M0 0L6 6L12 0\"\n      />\n      <path\n        v-else\n        d=\"M0 0L4.58579 4.58579C5.36683 5.36683 6.63316 5.36684 7.41421 4.58579L12 0\"\n      />\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '../useForwardExpose'\n\nexport interface ArrowProps extends PrimitiveProps {\n  /**\n   * The width of the arrow in pixels.\n   *\n   * @defaultValue 10\n   */\n  width?: number\n  /**\n   * The height of the arrow in pixels.\n   *\n   * @defaultValue 5\n   */\n  height?: number\n  /**\n   * When `true`, render the rounded version of arrow. Do not work with `as`/`asChild`\n   *\n   * @defaultValue false\n   */\n  rounded?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<ArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :width=\"width\"\n    :height=\"height\"\n    :viewBox=\"asChild ? undefined : '0 0 12 6'\"\n    :preserveAspectRatio=\"asChild ? undefined : 'none'\"\n  >\n    <slot>\n      <path\n        v-if=\"!rounded\"\n        d=\"M0 0L6 6L12 0\"\n      />\n      <path\n        v-else\n        d=\"M0 0L4.58579 4.58579C5.36683 5.36683 6.63316 5.36684 7.41421 4.58579L12 0\"\n      />\n    </slot>\n  </Primitive>\n</template>\n", "import type { Middleware, Placement } from '@floating-ui/vue'\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const\n\nexport type Side = (typeof SIDE_OPTIONS)[number]\nexport type Align = (typeof ALIGN_OPTIONS)[number]\n\nexport function isNotNull<T>(value: T | null): value is T {\n  return value !== null\n}\n\nexport function transformOrigin(options: {\n  arrowWidth: number\n  arrowHeight: number\n}): Middleware {\n  return {\n    name: 'transformOrigin',\n    options,\n    fn(data) {\n      const { placement, rects, middlewareData } = data\n\n      const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0\n      const isArrowHidden = cannotCenterArrow\n      const arrowWidth = isArrowHidden ? 0 : options.arrowWidth\n      const arrowHeight = isArrowHidden ? 0 : options.arrowHeight\n\n      const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement)\n      const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[\n        placedAlign\n      ]\n\n      const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2\n      const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2\n\n      let x = ''\n      let y = ''\n\n      if (placedSide === 'bottom') {\n        x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`\n        y = `${-arrowHeight}px`\n      }\n      else if (placedSide === 'top') {\n        x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`\n        y = `${rects.floating.height + arrowHeight}px`\n      }\n      else if (placedSide === 'right') {\n        x = `${-arrowHeight}px`\n        y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`\n      }\n      else if (placedSide === 'left') {\n        x = `${rects.floating.width + arrowHeight}px`\n        y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`\n      }\n      return { data: { x, y } }\n    },\n  }\n}\n\nexport function getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-')\n  return [side as Side, align as Align] as const\n}\n", "/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nconst yAxisSides = /*#__PURE__*/new Set(['top', 'bottom']);\nfunction getSideAxis(placement) {\n  return yAxisSides.has(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nconst lrPlacement = ['left', 'right'];\nconst rlPlacement = ['right', 'left'];\nconst tbPlacement = ['top', 'bottom'];\nconst btPlacement = ['bottom', 'top'];\nfunction getSideList(side, isStart, rtl) {\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rlPlacement : lrPlacement;\n      return isStart ? lrPlacement : rlPlacement;\n    case 'left':\n    case 'right':\n      return isStart ? tbPlacement : btPlacement;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          if (!ignoreCrossAxisOverflow ||\n          // We leave the current main axis only if every placement on that axis\n          // overflows the main axis.\n          overflowsData.every(d => getSideAxis(d.placement) === initialSideAxis ? d.overflows[0] > 0 : true)) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nconst originSides = /*#__PURE__*/new Set(['left', 'top']);\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = originSides.has(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = originSides.has(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nconst invalidOverflowDisplayValues = /*#__PURE__*/new Set(['inline', 'contents']);\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);\n}\nconst tableElements = /*#__PURE__*/new Set(['table', 'td', 'th']);\nfunction isTableElement(element) {\n  return tableElements.has(getNodeName(element));\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (_e) {\n      return false;\n    }\n  });\n}\nconst transformProperties = ['transform', 'translate', 'scale', 'rotate', 'perspective'];\nconst willChangeValues = ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'];\nconst containValues = ['paint', 'layout', 'strict', 'content'];\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return transformProperties.some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some(value => (css.willChange || '').includes(value)) || containValues.some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nconst lastTraversableNodeNames = /*#__PURE__*/new Set(['html', 'body', '#document']);\nfunction isLastTraversableNode(node) {\n  return lastTraversableNodeNames.has(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle as getComputedStyle$1, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle$1(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll) {\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - getWindowScrollBarX(documentElement, htmlRect);\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Safety check: ensure the scrollbar space is reasonable in case this\n// calculation is affected by unusual styles.\n// Most scrollbars leave 15-18px of space.\nconst SCROLLBAR_MAX = 25;\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  const windowScrollbarX = getWindowScrollBarX(html);\n  // <html> `overflow: hidden` + `scrollbar-gutter: stable` reduces the\n  // visual width of the <html> but this is not considered in the size\n  // of `html.clientWidth`.\n  if (windowScrollbarX <= 0) {\n    const doc = html.ownerDocument;\n    const body = doc.body;\n    const bodyStyles = getComputedStyle(body);\n    const bodyMarginInline = doc.compatMode === 'CSS1Compat' ? parseFloat(bodyStyles.marginLeft) + parseFloat(bodyStyles.marginRight) || 0 : 0;\n    const clippingStableScrollbarWidth = Math.abs(html.clientWidth - body.clientWidth - bodyMarginInline);\n    if (clippingStableScrollbarWidth <= SCROLLBAR_MAX) {\n      width -= clippingStableScrollbarWidth;\n    }\n  } else if (windowScrollbarX <= SCROLLBAR_MAX) {\n    // If the <body> scrollbar is on the left, the width needs to be extended\n    // by the scrollbar amount so there isn't extra space on the right.\n    width += windowScrollbarX;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst absoluteOrFixed = /*#__PURE__*/new Set(['absolute', 'fixed']);\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle$1(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && absoluteOrFixed.has(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle$1(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle$1(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n", "import { arrow as arrow$1, computePosition } from '@floating-ui/dom';\nexport { autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/dom';\nimport { isNode, getNodeName } from '@floating-ui/utils/dom';\nimport { unref, computed, ref, shallowRef, watch, getCurrentScope, onScopeDispose, shallowReadonly } from 'vue-demi';\n\nfunction isComponentPublicInstance(target) {\n  return target != null && typeof target === 'object' && '$el' in target;\n}\nfunction unwrapElement(target) {\n  if (isComponentPublicInstance(target)) {\n    const element = target.$el;\n    return isNode(element) && getNodeName(element) === '#comment' ? null : element;\n  }\n  return target;\n}\n\nfunction toValue(source) {\n  return typeof source === 'function' ? source() : unref(source);\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered to the reference element.\n * @param options The arrow options.\n * @see https://floating-ui.com/docs/arrow\n */\nfunction arrow(options) {\n  return {\n    name: 'arrow',\n    options,\n    fn(args) {\n      const element = unwrapElement(toValue(options.element));\n      if (element == null) {\n        return {};\n      }\n      return arrow$1({\n        element,\n        padding: options.padding\n      }).fn(args);\n    }\n  };\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element next to a reference element when it is given a certain CSS positioning strategy.\n * @param reference The reference template ref.\n * @param floating The floating template ref.\n * @param options The floating options.\n * @see https://floating-ui.com/docs/vue\n */\nfunction useFloating(reference, floating, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const whileElementsMountedOption = options.whileElementsMounted;\n  const openOption = computed(() => {\n    var _toValue;\n    return (_toValue = toValue(options.open)) != null ? _toValue : true;\n  });\n  const middlewareOption = computed(() => toValue(options.middleware));\n  const placementOption = computed(() => {\n    var _toValue2;\n    return (_toValue2 = toValue(options.placement)) != null ? _toValue2 : 'bottom';\n  });\n  const strategyOption = computed(() => {\n    var _toValue3;\n    return (_toValue3 = toValue(options.strategy)) != null ? _toValue3 : 'absolute';\n  });\n  const transformOption = computed(() => {\n    var _toValue4;\n    return (_toValue4 = toValue(options.transform)) != null ? _toValue4 : true;\n  });\n  const referenceElement = computed(() => unwrapElement(reference.value));\n  const floatingElement = computed(() => unwrapElement(floating.value));\n  const x = ref(0);\n  const y = ref(0);\n  const strategy = ref(strategyOption.value);\n  const placement = ref(placementOption.value);\n  const middlewareData = shallowRef({});\n  const isPositioned = ref(false);\n  const floatingStyles = computed(() => {\n    const initialStyles = {\n      position: strategy.value,\n      left: '0',\n      top: '0'\n    };\n    if (!floatingElement.value) {\n      return initialStyles;\n    }\n    const xVal = roundByDPR(floatingElement.value, x.value);\n    const yVal = roundByDPR(floatingElement.value, y.value);\n    if (transformOption.value) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + xVal + \"px, \" + yVal + \"px)\",\n        ...(getDPR(floatingElement.value) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy.value,\n      left: xVal + \"px\",\n      top: yVal + \"px\"\n    };\n  });\n  let whileElementsMountedCleanup;\n  function update() {\n    if (referenceElement.value == null || floatingElement.value == null) {\n      return;\n    }\n    const open = openOption.value;\n    computePosition(referenceElement.value, floatingElement.value, {\n      middleware: middlewareOption.value,\n      placement: placementOption.value,\n      strategy: strategyOption.value\n    }).then(position => {\n      x.value = position.x;\n      y.value = position.y;\n      strategy.value = position.strategy;\n      placement.value = position.placement;\n      middlewareData.value = position.middlewareData;\n      /**\n       * The floating element's position may be recomputed while it's closed\n       * but still mounted (such as when transitioning out). To ensure\n       * `isPositioned` will be `false` initially on the next open, avoid\n       * setting it to `true` when `open === false` (must be specified).\n       */\n      isPositioned.value = open !== false;\n    });\n  }\n  function cleanup() {\n    if (typeof whileElementsMountedCleanup === 'function') {\n      whileElementsMountedCleanup();\n      whileElementsMountedCleanup = undefined;\n    }\n  }\n  function attach() {\n    cleanup();\n    if (whileElementsMountedOption === undefined) {\n      update();\n      return;\n    }\n    if (referenceElement.value != null && floatingElement.value != null) {\n      whileElementsMountedCleanup = whileElementsMountedOption(referenceElement.value, floatingElement.value, update);\n      return;\n    }\n  }\n  function reset() {\n    if (!openOption.value) {\n      isPositioned.value = false;\n    }\n  }\n  watch([middlewareOption, placementOption, strategyOption, openOption], update, {\n    flush: 'sync'\n  });\n  watch([referenceElement, floatingElement], attach, {\n    flush: 'sync'\n  });\n  watch(openOption, reset, {\n    flush: 'sync'\n  });\n  if (getCurrentScope()) {\n    onScopeDispose(cleanup);\n  }\n  return {\n    x: shallowReadonly(x),\n    y: shallowReadonly(y),\n    strategy: shallowReadonly(strategy),\n    placement: shallowReadonly(placement),\n    middlewareData: shallowReadonly(middlewareData),\n    isPositioned: shallowReadonly(isPositioned),\n    floatingStyles,\n    update\n  };\n}\n\nexport { arrow, useFloating };\n", "<script lang=\"ts\">\nimport type {\n  Middleware,\n  Placement,\n  ReferenceElement,\n} from '@floating-ui/vue'\nimport type { Ref } from 'vue'\nimport type {\n  Align,\n  Side,\n} from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useForwardExpose, useSize } from '@/shared'\n\nexport const PopperContentPropsDefaultValue = {\n  side: 'bottom' as Side,\n  sideOffset: 0,\n  sideFlip: true,\n  align: 'center' as Align,\n  alignOffset: 0,\n  alignFlip: true,\n  arrowPadding: 0,\n  avoidCollisions: true,\n  collisionBoundary: () => [],\n  collisionPadding: 0,\n  sticky: 'partial' as 'partial' | 'always',\n  hideWhenDetached: false,\n  positionStrategy: 'fixed' as 'absolute' | 'fixed',\n  updatePositionStrategy: 'optimized' as 'optimized' | 'always',\n  prioritizePosition: false,\n}\n\nexport interface PopperContentProps extends PrimitiveProps {\n  /**\n   * The preferred side of the trigger to render against when open.\n   * Will be reversed when collisions occur and avoidCollisions\n   * is enabled.\n   *\n   * @defaultValue \"top\"\n   */\n  side?: Side\n\n  /**\n   * The distance in pixels from the trigger.\n   *\n   * @defaultValue 0\n   */\n  sideOffset?: number\n\n  /**\n   * Flip to the opposite side when colliding with boundary.\n   *\n   * @defaultValue true\n   */\n  sideFlip?: boolean\n\n  /**\n   * The preferred alignment against the trigger.\n   * May change when collisions occur.\n   *\n   * @defaultValue \"center\"\n   */\n  align?: Align\n\n  /**\n   * An offset in pixels from the `start` or `end` alignment options.\n   *\n   * @defaultValue 0\n   */\n  alignOffset?: number\n\n  /**\n   * Flip alignment when colliding with boundary.\n   * May only occur when `prioritizePosition` is true.\n   *\n   * @defaultValue true\n   */\n  alignFlip?: boolean\n\n  /**\n   * When `true`, overrides the side and align preferences\n   * to prevent collisions with boundary edges.\n   *\n   * @defaultValue true\n   */\n  avoidCollisions?: boolean\n\n  /**\n   * The element used as the collision boundary. By default\n   * this is the viewport, though you can provide additional\n   * element(s) to be included in this check.\n   *\n   * @defaultValue []\n   */\n  collisionBoundary?: Element | null | Array<Element | null>\n\n  /**\n   * The distance in pixels from the boundary edges where collision\n   * detection should occur. Accepts a number (same for all sides),\n   * or a partial padding object, for example: { top: 20, left: 20 }.\n   *\n   * @defaultValue 0\n   */\n  collisionPadding?: number | Partial<Record<Side, number>>\n\n  /**\n   * The padding between the arrow and the edges of the content.\n   * If your content has border-radius, this will prevent it from\n   * overflowing the corners.\n   *\n   * @defaultValue 0\n   */\n  arrowPadding?: number\n\n  /**\n   * The sticky behavior on the align axis. `partial` will keep the\n   * content in the boundary as long as the trigger is at least partially\n   * in the boundary whilst \"always\" will keep the content in the boundary\n   * regardless.\n   *\n   * @defaultValue \"partial\"\n   */\n  sticky?: 'partial' | 'always'\n\n  /**\n   * Whether to hide the content when the trigger becomes fully occluded.\n   *\n   * @defaultValue false\n   */\n  hideWhenDetached?: boolean\n\n  /**\n   *  The type of CSS position property to use.\n   */\n  positionStrategy?: 'absolute' | 'fixed'\n\n  /**\n   * Strategy to update the position of the floating element on every animation frame.\n   *\n   * @defaultValue 'optimized'\n   */\n  updatePositionStrategy?: 'optimized' | 'always'\n\n  /**\n   * Whether to disable the update position for the content when the layout shifted.\n   *\n   * @defaultValue false\n   */\n  disableUpdateOnLayoutShift?: boolean\n\n  /**\n   * Force content to be position within the viewport.\n   *\n   * Might overlap the reference element, which may not be desired.\n   *\n   * @defaultValue false\n   */\n  prioritizePosition?: boolean\n\n  /**\n   *  The custom element or virtual element that will be set as the reference\n   *  to position the floating element.\n   *\n   *  If provided, it will replace the default anchor element.\n   */\n  reference?: ReferenceElement\n}\n\nexport interface PopperContentContext {\n  placedSide: Ref<Side>\n  onArrowChange: (arrow: HTMLElement | undefined) => void\n  arrowX?: Ref<number>\n  arrowY?: Ref<number>\n  shouldHideArrow: Ref<boolean>\n}\n\nexport const [injectPopperContentContext, providePopperContentContext]\n  = createContext<PopperContentContext>('PopperContent')\n</script>\n\n<script setup lang=\"ts\">\nimport {\n  autoUpdate,\n  flip,\n  arrow as floatingUIarrow,\n  hide,\n  limitShift,\n  offset,\n  shift,\n  size,\n  useFloating,\n} from '@floating-ui/vue'\nimport { computedEager } from '@vueuse/core'\nimport { computed, ref, watchEffect, watchPostEffect } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectPopperRootContext } from './PopperRoot.vue'\nimport {\n  getSideAndAlignFromPlacement,\n  isNotNull,\n  transformOrigin,\n} from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<PopperContentProps>(), {\n  ...PopperContentPropsDefaultValue,\n})\nconst emits = defineEmits<{\n  placed: [void]\n}>()\n\nconst rootContext = injectPopperRootContext()\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\n\nconst floatingRef = ref<HTMLElement>()\n\nconst arrow = ref<HTMLElement>()\nconst { width: arrowWidth, height: arrowHeight } = useSize(arrow)\n\nconst desiredPlacement = computed(\n  () =>\n    (props.side\n      + (props.align !== 'center' ? `-${props.align}` : '')) as Placement,\n)\n\nconst collisionPadding = computed(() => {\n  return typeof props.collisionPadding === 'number'\n    ? props.collisionPadding\n    : { top: 0, right: 0, bottom: 0, left: 0, ...props.collisionPadding }\n})\n\nconst boundary = computed(() => {\n  return Array.isArray(props.collisionBoundary)\n    ? props.collisionBoundary\n    : [props.collisionBoundary]\n})\n\nconst detectOverflowOptions = computed(() => {\n  return {\n    padding: collisionPadding.value,\n    boundary: boundary.value.filter(isNotNull),\n    // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n    altBoundary: boundary.value.length > 0,\n  }\n})\n\nconst flipOptions = computed(() => {\n  return {\n    mainAxis: props.sideFlip,\n    crossAxis: props.alignFlip,\n  }\n})\n\nconst computedMiddleware = computedEager(() => {\n  return [\n    offset({\n      mainAxis: props.sideOffset + arrowHeight.value,\n      alignmentAxis: props.alignOffset,\n    }),\n    props.prioritizePosition\n    && props.avoidCollisions\n    && flip({\n      ...detectOverflowOptions.value,\n      ...flipOptions.value,\n    }),\n    props.avoidCollisions\n    && shift({\n      mainAxis: true,\n      crossAxis: !!props.prioritizePosition,\n      limiter: props.sticky === 'partial' ? limitShift() : undefined,\n      ...detectOverflowOptions.value,\n    }),\n    !props.prioritizePosition\n    && props.avoidCollisions\n    && flip({\n      ...detectOverflowOptions.value,\n      ...flipOptions.value,\n    }),\n    size({\n      ...detectOverflowOptions.value,\n      apply: ({ elements, rects, availableWidth, availableHeight }) => {\n        const { width: anchorWidth, height: anchorHeight } = rects.reference\n        const contentStyle = elements.floating.style\n        contentStyle.setProperty(\n          '--reka-popper-available-width',\n          `${availableWidth}px`,\n        )\n        contentStyle.setProperty(\n          '--reka-popper-available-height',\n          `${availableHeight}px`,\n        )\n        contentStyle.setProperty(\n          '--reka-popper-anchor-width',\n          `${anchorWidth}px`,\n        )\n        contentStyle.setProperty(\n          '--reka-popper-anchor-height',\n          `${anchorHeight}px`,\n        )\n      },\n    }),\n    arrow.value\n    && floatingUIarrow({ element: arrow.value, padding: props.arrowPadding }),\n    transformOrigin({\n      arrowWidth: arrowWidth.value,\n      arrowHeight: arrowHeight.value,\n    }),\n    props.hideWhenDetached\n    && hide({ strategy: 'referenceHidden', ...detectOverflowOptions.value }),\n  ] as Middleware[]\n})\n\n// If provided custom reference, it will overwrite the default anchor element\nconst reference = computed(() => props.reference ?? rootContext.anchor.value)\n\nconst { floatingStyles, placement, isPositioned, middlewareData, update } = useFloating(\n  reference,\n  floatingRef,\n  {\n    strategy: props.positionStrategy,\n    placement: desiredPlacement,\n    whileElementsMounted: (...args) => {\n      const cleanup = autoUpdate(...args, {\n        layoutShift: !props.disableUpdateOnLayoutShift,\n        animationFrame: props.updatePositionStrategy === 'always',\n      })\n      return cleanup\n    },\n    middleware: computedMiddleware,\n  },\n)\n\nconst placedSide = computed(\n  () => getSideAndAlignFromPlacement(placement.value)[0],\n)\nconst placedAlign = computed(\n  () => getSideAndAlignFromPlacement(placement.value)[1],\n)\n\nwatchPostEffect(() => {\n  if (isPositioned.value)\n    emits('placed')\n})\n\nconst cannotCenterArrow = computed(\n  () => middlewareData.value.arrow?.centerOffset !== 0,\n)\n\nconst contentZIndex = ref('')\nwatchEffect(() => {\n  if (contentElement.value)\n    contentZIndex.value = window.getComputedStyle(contentElement.value).zIndex\n})\n\nconst arrowX = computed(() => middlewareData.value.arrow?.x ?? 0)\nconst arrowY = computed(() => middlewareData.value.arrow?.y ?? 0)\n\nprovidePopperContentContext({\n  placedSide,\n  onArrowChange: element => arrow.value = element,\n  arrowX,\n  arrowY,\n  shouldHideArrow: cannotCenterArrow,\n})\n</script>\n\n<template>\n  <div\n    ref=\"floatingRef\"\n    data-reka-popper-content-wrapper=\"\"\n    :style=\"{\n      ...floatingStyles,\n      transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n      minWidth: 'max-content',\n      zIndex: contentZIndex,\n      ['--reka-popper-transform-origin' as any]: [\n        middlewareData.transformOrigin?.x,\n        middlewareData.transformOrigin?.y,\n      ].join(' '),\n\n      // hide the content if using the hide middleware and should be hidden\n      // set visibility to hidden and disable pointer events so the UI behaves\n      // as if the PopperContent isn't there at all\n      ...(middlewareData.hide?.referenceHidden && {\n        visibility: 'hidden',\n        pointerEvents: 'none',\n      }),\n    }\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      v-bind=\"$attrs\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      :data-side=\"placedSide\"\n      :data-align=\"placedAlign\"\n      :style=\"{\n        // if the PopperContent hasn't been placed yet (not all measurements done)\n        // we prevent animations so that users's animation don't kick in too early referring wrong sides\n        animation: !isPositioned ? 'none' : undefined,\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  Middleware,\n  Placement,\n  ReferenceElement,\n} from '@floating-ui/vue'\nimport type { Ref } from 'vue'\nimport type {\n  Align,\n  Side,\n} from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useForwardExpose, useSize } from '@/shared'\n\nexport const PopperContentPropsDefaultValue = {\n  side: 'bottom' as Side,\n  sideOffset: 0,\n  sideFlip: true,\n  align: 'center' as Align,\n  alignOffset: 0,\n  alignFlip: true,\n  arrowPadding: 0,\n  avoidCollisions: true,\n  collisionBoundary: () => [],\n  collisionPadding: 0,\n  sticky: 'partial' as 'partial' | 'always',\n  hideWhenDetached: false,\n  positionStrategy: 'fixed' as 'absolute' | 'fixed',\n  updatePositionStrategy: 'optimized' as 'optimized' | 'always',\n  prioritizePosition: false,\n}\n\nexport interface PopperContentProps extends PrimitiveProps {\n  /**\n   * The preferred side of the trigger to render against when open.\n   * Will be reversed when collisions occur and avoidCollisions\n   * is enabled.\n   *\n   * @defaultValue \"top\"\n   */\n  side?: Side\n\n  /**\n   * The distance in pixels from the trigger.\n   *\n   * @defaultValue 0\n   */\n  sideOffset?: number\n\n  /**\n   * Flip to the opposite side when colliding with boundary.\n   *\n   * @defaultValue true\n   */\n  sideFlip?: boolean\n\n  /**\n   * The preferred alignment against the trigger.\n   * May change when collisions occur.\n   *\n   * @defaultValue \"center\"\n   */\n  align?: Align\n\n  /**\n   * An offset in pixels from the `start` or `end` alignment options.\n   *\n   * @defaultValue 0\n   */\n  alignOffset?: number\n\n  /**\n   * Flip alignment when colliding with boundary.\n   * May only occur when `prioritizePosition` is true.\n   *\n   * @defaultValue true\n   */\n  alignFlip?: boolean\n\n  /**\n   * When `true`, overrides the side and align preferences\n   * to prevent collisions with boundary edges.\n   *\n   * @defaultValue true\n   */\n  avoidCollisions?: boolean\n\n  /**\n   * The element used as the collision boundary. By default\n   * this is the viewport, though you can provide additional\n   * element(s) to be included in this check.\n   *\n   * @defaultValue []\n   */\n  collisionBoundary?: Element | null | Array<Element | null>\n\n  /**\n   * The distance in pixels from the boundary edges where collision\n   * detection should occur. Accepts a number (same for all sides),\n   * or a partial padding object, for example: { top: 20, left: 20 }.\n   *\n   * @defaultValue 0\n   */\n  collisionPadding?: number | Partial<Record<Side, number>>\n\n  /**\n   * The padding between the arrow and the edges of the content.\n   * If your content has border-radius, this will prevent it from\n   * overflowing the corners.\n   *\n   * @defaultValue 0\n   */\n  arrowPadding?: number\n\n  /**\n   * The sticky behavior on the align axis. `partial` will keep the\n   * content in the boundary as long as the trigger is at least partially\n   * in the boundary whilst \"always\" will keep the content in the boundary\n   * regardless.\n   *\n   * @defaultValue \"partial\"\n   */\n  sticky?: 'partial' | 'always'\n\n  /**\n   * Whether to hide the content when the trigger becomes fully occluded.\n   *\n   * @defaultValue false\n   */\n  hideWhenDetached?: boolean\n\n  /**\n   *  The type of CSS position property to use.\n   */\n  positionStrategy?: 'absolute' | 'fixed'\n\n  /**\n   * Strategy to update the position of the floating element on every animation frame.\n   *\n   * @defaultValue 'optimized'\n   */\n  updatePositionStrategy?: 'optimized' | 'always'\n\n  /**\n   * Whether to disable the update position for the content when the layout shifted.\n   *\n   * @defaultValue false\n   */\n  disableUpdateOnLayoutShift?: boolean\n\n  /**\n   * Force content to be position within the viewport.\n   *\n   * Might overlap the reference element, which may not be desired.\n   *\n   * @defaultValue false\n   */\n  prioritizePosition?: boolean\n\n  /**\n   *  The custom element or virtual element that will be set as the reference\n   *  to position the floating element.\n   *\n   *  If provided, it will replace the default anchor element.\n   */\n  reference?: ReferenceElement\n}\n\nexport interface PopperContentContext {\n  placedSide: Ref<Side>\n  onArrowChange: (arrow: HTMLElement | undefined) => void\n  arrowX?: Ref<number>\n  arrowY?: Ref<number>\n  shouldHideArrow: Ref<boolean>\n}\n\nexport const [injectPopperContentContext, providePopperContentContext]\n  = createContext<PopperContentContext>('PopperContent')\n</script>\n\n<script setup lang=\"ts\">\nimport {\n  autoUpdate,\n  flip,\n  arrow as floatingUIarrow,\n  hide,\n  limitShift,\n  offset,\n  shift,\n  size,\n  useFloating,\n} from '@floating-ui/vue'\nimport { computedEager } from '@vueuse/core'\nimport { computed, ref, watchEffect, watchPostEffect } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectPopperRootContext } from './PopperRoot.vue'\nimport {\n  getSideAndAlignFromPlacement,\n  isNotNull,\n  transformOrigin,\n} from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<PopperContentProps>(), {\n  ...PopperContentPropsDefaultValue,\n})\nconst emits = defineEmits<{\n  placed: [void]\n}>()\n\nconst rootContext = injectPopperRootContext()\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\n\nconst floatingRef = ref<HTMLElement>()\n\nconst arrow = ref<HTMLElement>()\nconst { width: arrowWidth, height: arrowHeight } = useSize(arrow)\n\nconst desiredPlacement = computed(\n  () =>\n    (props.side\n      + (props.align !== 'center' ? `-${props.align}` : '')) as Placement,\n)\n\nconst collisionPadding = computed(() => {\n  return typeof props.collisionPadding === 'number'\n    ? props.collisionPadding\n    : { top: 0, right: 0, bottom: 0, left: 0, ...props.collisionPadding }\n})\n\nconst boundary = computed(() => {\n  return Array.isArray(props.collisionBoundary)\n    ? props.collisionBoundary\n    : [props.collisionBoundary]\n})\n\nconst detectOverflowOptions = computed(() => {\n  return {\n    padding: collisionPadding.value,\n    boundary: boundary.value.filter(isNotNull),\n    // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n    altBoundary: boundary.value.length > 0,\n  }\n})\n\nconst flipOptions = computed(() => {\n  return {\n    mainAxis: props.sideFlip,\n    crossAxis: props.alignFlip,\n  }\n})\n\nconst computedMiddleware = computedEager(() => {\n  return [\n    offset({\n      mainAxis: props.sideOffset + arrowHeight.value,\n      alignmentAxis: props.alignOffset,\n    }),\n    props.prioritizePosition\n    && props.avoidCollisions\n    && flip({\n      ...detectOverflowOptions.value,\n      ...flipOptions.value,\n    }),\n    props.avoidCollisions\n    && shift({\n      mainAxis: true,\n      crossAxis: !!props.prioritizePosition,\n      limiter: props.sticky === 'partial' ? limitShift() : undefined,\n      ...detectOverflowOptions.value,\n    }),\n    !props.prioritizePosition\n    && props.avoidCollisions\n    && flip({\n      ...detectOverflowOptions.value,\n      ...flipOptions.value,\n    }),\n    size({\n      ...detectOverflowOptions.value,\n      apply: ({ elements, rects, availableWidth, availableHeight }) => {\n        const { width: anchorWidth, height: anchorHeight } = rects.reference\n        const contentStyle = elements.floating.style\n        contentStyle.setProperty(\n          '--reka-popper-available-width',\n          `${availableWidth}px`,\n        )\n        contentStyle.setProperty(\n          '--reka-popper-available-height',\n          `${availableHeight}px`,\n        )\n        contentStyle.setProperty(\n          '--reka-popper-anchor-width',\n          `${anchorWidth}px`,\n        )\n        contentStyle.setProperty(\n          '--reka-popper-anchor-height',\n          `${anchorHeight}px`,\n        )\n      },\n    }),\n    arrow.value\n    && floatingUIarrow({ element: arrow.value, padding: props.arrowPadding }),\n    transformOrigin({\n      arrowWidth: arrowWidth.value,\n      arrowHeight: arrowHeight.value,\n    }),\n    props.hideWhenDetached\n    && hide({ strategy: 'referenceHidden', ...detectOverflowOptions.value }),\n  ] as Middleware[]\n})\n\n// If provided custom reference, it will overwrite the default anchor element\nconst reference = computed(() => props.reference ?? rootContext.anchor.value)\n\nconst { floatingStyles, placement, isPositioned, middlewareData, update } = useFloating(\n  reference,\n  floatingRef,\n  {\n    strategy: props.positionStrategy,\n    placement: desiredPlacement,\n    whileElementsMounted: (...args) => {\n      const cleanup = autoUpdate(...args, {\n        layoutShift: !props.disableUpdateOnLayoutShift,\n        animationFrame: props.updatePositionStrategy === 'always',\n      })\n      return cleanup\n    },\n    middleware: computedMiddleware,\n  },\n)\n\nconst placedSide = computed(\n  () => getSideAndAlignFromPlacement(placement.value)[0],\n)\nconst placedAlign = computed(\n  () => getSideAndAlignFromPlacement(placement.value)[1],\n)\n\nwatchPostEffect(() => {\n  if (isPositioned.value)\n    emits('placed')\n})\n\nconst cannotCenterArrow = computed(\n  () => middlewareData.value.arrow?.centerOffset !== 0,\n)\n\nconst contentZIndex = ref('')\nwatchEffect(() => {\n  if (contentElement.value)\n    contentZIndex.value = window.getComputedStyle(contentElement.value).zIndex\n})\n\nconst arrowX = computed(() => middlewareData.value.arrow?.x ?? 0)\nconst arrowY = computed(() => middlewareData.value.arrow?.y ?? 0)\n\nprovidePopperContentContext({\n  placedSide,\n  onArrowChange: element => arrow.value = element,\n  arrowX,\n  arrowY,\n  shouldHideArrow: cannotCenterArrow,\n})\n</script>\n\n<template>\n  <div\n    ref=\"floatingRef\"\n    data-reka-popper-content-wrapper=\"\"\n    :style=\"{\n      ...floatingStyles,\n      transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n      minWidth: 'max-content',\n      zIndex: contentZIndex,\n      ['--reka-popper-transform-origin' as any]: [\n        middlewareData.transformOrigin?.x,\n        middlewareData.transformOrigin?.y,\n      ].join(' '),\n\n      // hide the content if using the hide middleware and should be hidden\n      // set visibility to hidden and disable pointer events so the UI behaves\n      // as if the PopperContent isn't there at all\n      ...(middlewareData.hide?.referenceHidden && {\n        visibility: 'hidden',\n        pointerEvents: 'none',\n      }),\n    }\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      v-bind=\"$attrs\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      :data-side=\"placedSide\"\n      :data-align=\"placedAlign\"\n      :style=\"{\n        // if the PopperContent hasn't been placed yet (not all measurements done)\n        // we prevent animations so that users's animation don't kick in too early referring wrong sides\n        animation: !isPositioned ? 'none' : undefined,\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type { Side } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { ArrowProps } from '@/shared/component/Arrow.vue'\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n}\n\nexport interface PopperArrowProps extends ArrowProps, PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport Arrow from '@/shared/component/Arrow.vue'\nimport { injectPopperContentContext } from './PopperContent.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nwithDefaults(\n  defineProps<PopperArrowProps>(),\n  { as: 'svg' },\n)\n\nconst { forwardRef } = useForwardExpose()\nconst contentContext = injectPopperContentContext()\n\nconst baseSide = computed(() => OPPOSITE_SIDE[contentContext.placedSide.value])\n</script>\n\n<template>\n  <span\n    :ref=\"(el: HTMLElement) => {\n      contentContext.onArrowChange(el)\n      return undefined\n    }\"\n    :style=\"{\n      position: 'absolute',\n      left: contentContext.arrowX?.value ? `${contentContext.arrowX?.value}px` : undefined,\n      top: contentContext.arrowY?.value ? `${contentContext.arrowY?.value}px` : undefined,\n      [baseSide]: 0,\n      transformOrigin: {\n        top: '',\n        right: '0 0',\n        bottom: 'center 0',\n        left: '100% 0',\n      }[contentContext.placedSide.value],\n      transform: {\n        top: 'translateY(100%)',\n        right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n        bottom: `rotate(180deg)`,\n        left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n      }[contentContext.placedSide.value],\n      visibility: contentContext.shouldHideArrow.value ? 'hidden' : undefined,\n    }\"\n  >\n    <Arrow\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :style=\"{\n        display: 'block',\n      }\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :rounded=\"rounded\"\n      :width=\"width\"\n      :height=\"height\"\n    >\n      <slot />\n    </Arrow>\n  </span>\n</template>\n", "<script lang=\"ts\">\nimport type { Side } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { ArrowProps } from '@/shared/component/Arrow.vue'\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n}\n\nexport interface PopperArrowProps extends ArrowProps, PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport Arrow from '@/shared/component/Arrow.vue'\nimport { injectPopperContentContext } from './PopperContent.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nwithDefaults(\n  defineProps<PopperArrowProps>(),\n  { as: 'svg' },\n)\n\nconst { forwardRef } = useForwardExpose()\nconst contentContext = injectPopperContentContext()\n\nconst baseSide = computed(() => OPPOSITE_SIDE[contentContext.placedSide.value])\n</script>\n\n<template>\n  <span\n    :ref=\"(el: HTMLElement) => {\n      contentContext.onArrowChange(el)\n      return undefined\n    }\"\n    :style=\"{\n      position: 'absolute',\n      left: contentContext.arrowX?.value ? `${contentContext.arrowX?.value}px` : undefined,\n      top: contentContext.arrowY?.value ? `${contentContext.arrowY?.value}px` : undefined,\n      [baseSide]: 0,\n      transformOrigin: {\n        top: '',\n        right: '0 0',\n        bottom: 'center 0',\n        left: '100% 0',\n      }[contentContext.placedSide.value],\n      transform: {\n        top: 'translateY(100%)',\n        right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n        bottom: `rotate(180deg)`,\n        left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n      }[contentContext.placedSide.value],\n      visibility: contentContext.shouldHideArrow.value ? 'hidden' : undefined,\n    }\"\n  >\n    <Arrow\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :style=\"{\n        display: 'block',\n      }\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :rounded=\"rounded\"\n      :width=\"width\"\n      :height=\"height\"\n    >\n      <slot />\n    </Arrow>\n  </span>\n</template>\n", "<script lang=\"ts\">\nexport interface ComboboxAnchorProps extends PopperAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { PopperAnchor } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\ndefineProps<ComboboxAnchorProps>()\n\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <PopperAnchor\n    as-child\n    :reference=\"reference\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </Primitive>\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nexport interface ComboboxAnchorProps extends PopperAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { PopperAnchor } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\ndefineProps<ComboboxAnchorProps>()\n\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <PopperAnchor\n    as-child\n    :reference=\"reference\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </Primitive>\n  </PopperAnchor>\n</template>\n", "import { isEqual } from 'ohash'\n\nexport function queryCheckedElement(parentEl: HTMLElement | null) {\n  return parentEl?.querySelector('[data-state=checked]') as HTMLElement | null\n}\n\nexport function valueComparator<T>(value: T | T[] | undefined, currentValue: T, comparator?: string | ((a: T, b: T) => boolean)) {\n  if (value === undefined)\n    return false\n  else if (Array.isArray(value))\n    return value.some(val => compare(val, currentValue, comparator))\n  else\n    return compare(value, currentValue, comparator)\n}\n\nexport function compare<T>(value?: T, currentValue?: T, comparator?: string | ((a: T, b: T) => boolean)) {\n  if (value === undefined || currentValue === undefined)\n    return false\n\n  if (typeof value === 'string')\n    return value === currentValue\n\n  if (typeof comparator === 'function')\n    return comparator(value, currentValue)\n\n  if (typeof comparator === 'string')\n    return value?.[comparator as keyof T] === currentValue?.[comparator as keyof T]\n\n  return isEqual(value, currentValue)\n}\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, DataOrientation, Direction, FormFieldProps } from '@/shared/types'\nimport { usePrimitiveElement } from '@/Primitive'\nimport { getFocusIntent } from '@/RovingFocus/utils'\nimport { createContext, findValuesBetween, useDirection, useFormControl, useKbd, useTypeahead } from '@/shared'\nimport { Primitive } from '..'\n\ntype ListboxRootContext<T> = {\n  modelValue: Ref<T | Array<T> | undefined>\n  onValueChange: (val: T) => void\n  multiple: Ref<boolean>\n  orientation: Ref<DataOrientation>\n  dir: Ref<Direction>\n  disabled: Ref<boolean>\n  highlightOnHover: Ref<boolean>\n  highlightedElement: Ref<HTMLElement | null>\n  isVirtual: Ref<boolean>\n  virtualFocusHook: EventHook<Event | null | undefined>\n  virtualKeydownHook: EventHook<KeyboardEvent>\n  virtualHighlightHook: EventHook<any>\n  by?: string | ((a: T, b: T) => boolean)\n  firstValue?: Ref<T | undefined>\n  selectionBehavior?: Ref<'toggle' | 'replace'>\n\n  focusable: Ref<boolean>\n\n  onLeave: (event: Event) => void\n  onEnter: (event: Event) => void\n  changeHighlight: (el: HTMLElement, scrollIntoView?: boolean) => void\n  onKeydownNavigation: (event: KeyboardEvent) => void\n  onKeydownEnter: (event: KeyboardEvent) => void\n  onKeydownTypeAhead: (event: KeyboardEvent) => void\n  onCompositionStart: () => void\n  onCompositionEnd: () => void\n  highlightFirstItem: () => void\n}\n\nexport const [injectListboxRootContext, provideListboxRootContext]\n  = createContext<ListboxRootContext<AcceptableValue>>('ListboxRoot')\n\nexport interface ListboxRootProps<T = AcceptableValue> extends PrimitiveProps, FormFieldProps {\n  /** The controlled value of the listbox. Can be binded with with `v-model`. */\n  modelValue?: T | Array<T>\n  /** The value of the listbox when initially rendered. Use when you do not need to control the state of the Listbox */\n  defaultValue?: T | Array<T>\n  /** Whether multiple options can be selected or not. */\n  multiple?: boolean\n  /** The orientation of the listbox. <br>Mainly so arrow navigation is done accordingly (left & right vs. up & down) */\n  orientation?: DataOrientation\n  /** The reading direction of the listbox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, prevents the user from interacting with listbox */\n  disabled?: boolean\n  /**\n   * How multiple selection should behave in the collection.\n   * @defaultValue 'toggle'\n   */\n  selectionBehavior?: 'toggle' | 'replace'\n  /** When `true`, hover over item will trigger highlight */\n  highlightOnHover?: boolean\n  /** Use this to compare objects by a particular field, or pass your own comparison function for complete control over how objects are compared. */\n  by?: string | ((a: T, b: T) => boolean)\n}\n\nexport type ListboxRootEmits<T = AcceptableValue> = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: T]\n  /** Event handler when highlighted element changes. */\n  'highlight': [payload: { ref: HTMLElement, value: T } | undefined]\n  /** Event handler called when container is being focused. Can be prevented. */\n  'entryFocus': [event: CustomEvent]\n  /** Event handler called when the mouse leave the container */\n  'leave': [event: Event]\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { EventHook } from '@vueuse/core'\nimport type { Ref } from 'vue'\nimport { createEventHook, useVModel } from '@vueuse/core'\nimport { nextTick, ref, toRefs, watch } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport { compare } from './utils'\n\nconst props = withDefaults(defineProps<ListboxRootProps>(), {\n  selectionBehavior: 'toggle',\n  orientation: 'vertical',\n})\nconst emits = defineEmits<ListboxRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current active value */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { multiple, highlightOnHover, orientation, disabled, selectionBehavior, dir: propDir } = toRefs(props)\nconst { getItems } = useCollection<{ value: T }>({ isProvider: true })\nconst { handleTypeaheadSearch } = useTypeahead()\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst kbd = useKbd()\nconst dir = useDirection(propDir)\n\nconst isFormControl = useFormControl(currentElement)\n\nconst firstValue = ref<T>()\nconst isUserAction = ref(false)\nconst focusable = ref(true)\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? (multiple.value ? [] : undefined),\n  passive: (props.modelValue === undefined) as false,\n  deep: true,\n}) as Ref<T | T[] | undefined>\n\nfunction onValueChange(val: T) {\n  isUserAction.value = true\n  if (props.multiple) {\n    const modelArray = Array.isArray(modelValue.value) ? [...modelValue.value] : []\n    const index = modelArray.findIndex(i => compare(i, val, props.by))\n    if (props.selectionBehavior === 'toggle') {\n      index === -1 ? modelArray.push(val) : modelArray.splice(index, 1)\n      modelValue.value = modelArray\n    }\n    else {\n      modelValue.value = [val]\n      firstValue.value = val\n    }\n  }\n  else {\n    if (props.selectionBehavior === 'toggle') {\n      if (compare(modelValue.value, val, props.by))\n        modelValue.value = undefined\n      else\n        modelValue.value = val\n    }\n    else {\n      modelValue.value = val\n    }\n  }\n  setTimeout(() => {\n    isUserAction.value = false\n  }, 1)\n}\n\nconst highlightedElement = ref<HTMLElement | null>(null)\nconst previousElement = ref<HTMLElement | null>(null)\nconst isVirtual = ref(false)\nconst isComposing = ref(false)\nconst virtualFocusHook = createEventHook<Event | null | undefined>()\nconst virtualKeydownHook = createEventHook<KeyboardEvent>()\nconst virtualHighlightHook = createEventHook<T>()\n\nfunction getCollectionItem() {\n  return getItems().map(i => i.ref).filter(i => i.dataset.disabled !== '')\n}\n\nfunction changeHighlight(el: HTMLElement, scrollIntoView = true) {\n  if (!el)\n    return\n\n  highlightedElement.value = el\n  if (focusable.value)\n    highlightedElement.value.focus()\n  if (scrollIntoView)\n    highlightedElement.value.scrollIntoView({ block: 'nearest' })\n\n  const highlightedItem = getItems().find(i => i.ref === el)\n  emits('highlight', highlightedItem)\n}\n\nfunction highlightItem(value: T) {\n  if (isVirtual.value) {\n    virtualHighlightHook.trigger(value)\n  }\n  else {\n    const item = getItems().find(i => compare(i.value, value, props.by))\n    if (item) {\n      highlightedElement.value = item.ref\n      changeHighlight(item.ref)\n    }\n  }\n}\n\nfunction onKeydownEnter(event: KeyboardEvent) {\n  if (highlightedElement.value && highlightedElement.value.isConnected) {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (!isComposing.value) {\n      highlightedElement.value.click()\n    }\n  }\n}\n\nfunction onKeydownTypeAhead(event: KeyboardEvent) {\n  if (!focusable.value)\n    return\n  isUserAction.value = true\n  if (isVirtual.value) {\n    virtualKeydownHook.trigger(event)\n  }\n  else {\n    const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n\n    if (isMetaKey && event.key === 'a' && multiple.value) {\n      const collection = getItems()\n      const values = collection.map(i => i.value)\n      modelValue.value = [...values]\n      event.preventDefault()\n      changeHighlight(collection[collection.length - 1].ref)\n    }\n    else if (!isMetaKey) {\n      const el = handleTypeaheadSearch(event.key, getItems())\n      if (el)\n        changeHighlight(el)\n    }\n  }\n  setTimeout(() => {\n    isUserAction.value = false\n  }, 1)\n}\n\nfunction onCompositionStart() {\n  isComposing.value = true\n}\nfunction onCompositionEnd() {\n  nextTick(() => {\n    isComposing.value = false\n  })\n}\n\nfunction highlightFirstItem() {\n  nextTick(() => {\n    const event = new KeyboardEvent('keydown', { key: 'PageUp' })\n    onKeydownNavigation(event)\n  })\n}\n\nfunction onLeave(event: Event) {\n  const el = highlightedElement.value\n\n  if ((el as Node)?.isConnected) {\n    previousElement.value = el\n  }\n\n  highlightedElement.value = null\n  emits('leave', event)\n}\n\nfunction onEnter(event: Event) {\n  const entryFocusEvent = new CustomEvent('listbox.entryFocus', { bubbles: false, cancelable: true })\n  event.currentTarget?.dispatchEvent(entryFocusEvent)\n  emits('entryFocus', entryFocusEvent)\n\n  if (entryFocusEvent.defaultPrevented)\n    return\n\n  if (previousElement.value) {\n    changeHighlight(previousElement.value)\n  }\n  else {\n    const el = getCollectionItem()?.[0]\n    changeHighlight(el)\n  }\n}\n\nfunction onKeydownNavigation(event: KeyboardEvent) {\n  const intent = getFocusIntent(event, orientation.value, dir.value)\n  if (!intent)\n    return\n\n  let collection = getCollectionItem()\n  if (highlightedElement.value) {\n    if (intent === 'last') {\n      collection.reverse()\n    }\n    else if (intent === 'prev' || intent === 'next') {\n      if (intent === 'prev')\n        collection.reverse()\n\n      const currentIndex = collection.indexOf(highlightedElement.value)\n      collection = collection.slice(currentIndex + 1)\n    }\n    handleMultipleReplace(event, collection[0])\n  }\n\n  if (collection.length) {\n    const index = !highlightedElement.value && intent === 'prev' ? collection.length - 1 : 0\n    changeHighlight(collection[index])\n  }\n\n  if (isVirtual.value)\n    return virtualKeydownHook.trigger(event)\n}\n\nfunction handleMultipleReplace(event: KeyboardEvent, targetEl: HTMLElement) {\n  if (isVirtual.value || props.selectionBehavior !== 'replace' || !multiple.value || !Array.isArray(modelValue.value))\n    return\n  const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n  if (isMetaKey && !event.shiftKey)\n    return\n\n  if (event.shiftKey) {\n    const collection = getItems().filter(i => i.ref.dataset.disabled !== '')\n    let lastValue = collection.find(i => i.ref === targetEl)?.value\n\n    if (event.key === kbd.END)\n      lastValue = collection[collection.length - 1].value\n    else if (event.key === kbd.HOME)\n      lastValue = collection[0].value\n\n    if (!lastValue || !firstValue.value)\n      return\n\n    const values = findValuesBetween(collection.map(i => i.value), firstValue.value, lastValue)\n    modelValue.value = values\n  }\n}\n\nasync function highlightSelected(event?: Event) {\n  await nextTick()\n  if (isVirtual.value) {\n    // Trigger on nextTick for Virtualizer to be mounted\n    virtualFocusHook.trigger(event)\n  }\n  else {\n    const collection = getCollectionItem()\n    const item = collection.find(i => i.dataset.state === 'checked')\n    if (item)\n      changeHighlight(item)\n    else if (collection.length)\n      changeHighlight(collection[0])\n  }\n}\n\n// watch for only programmatic changes\nwatch(modelValue, () => {\n  if (!isUserAction.value) {\n    nextTick(() => {\n      highlightSelected()\n    })\n  }\n}, { immediate: true, deep: true })\n\ndefineExpose({\n  highlightedElement,\n  highlightItem,\n  highlightFirstItem,\n  highlightSelected,\n  getItems,\n})\n\nprovideListboxRootContext({\n  modelValue,\n  // @ts-expect-error ignoring\n  onValueChange,\n  multiple,\n  orientation,\n  dir,\n  disabled,\n  highlightOnHover,\n  highlightedElement,\n  isVirtual,\n  virtualFocusHook,\n  virtualKeydownHook,\n  virtualHighlightHook,\n  by: props.by,\n  firstValue,\n  selectionBehavior,\n\n  focusable,\n  onLeave,\n  onEnter,\n  changeHighlight,\n  onKeydownEnter,\n  onKeydownNavigation,\n  onKeydownTypeAhead,\n  onCompositionStart,\n  onCompositionEnd,\n  highlightFirstItem,\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :dir=\"dir\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    @pointerleave=\"onLeave\"\n    @focusout=\"async (event: FocusEvent) => {\n      const target = (event.relatedTarget || event.target) as HTMLElement | null\n      await nextTick()\n      if (highlightedElement && currentElement && !currentElement.contains(target)) {\n        onLeave(event)\n      }\n    }\"\n  >\n    <slot :model-value=\"modelValue\" />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      :name=\"name\"\n      :value=\"modelValue\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, DataOrientation, Direction, FormFieldProps } from '@/shared/types'\nimport { usePrimitiveElement } from '@/Primitive'\nimport { getFocusIntent } from '@/RovingFocus/utils'\nimport { createContext, findValuesBetween, useDirection, useFormControl, useKbd, useTypeahead } from '@/shared'\nimport { Primitive } from '..'\n\ntype ListboxRootContext<T> = {\n  modelValue: Ref<T | Array<T> | undefined>\n  onValueChange: (val: T) => void\n  multiple: Ref<boolean>\n  orientation: Ref<DataOrientation>\n  dir: Ref<Direction>\n  disabled: Ref<boolean>\n  highlightOnHover: Ref<boolean>\n  highlightedElement: Ref<HTMLElement | null>\n  isVirtual: Ref<boolean>\n  virtualFocusHook: EventHook<Event | null | undefined>\n  virtualKeydownHook: EventHook<KeyboardEvent>\n  virtualHighlightHook: EventHook<any>\n  by?: string | ((a: T, b: T) => boolean)\n  firstValue?: Ref<T | undefined>\n  selectionBehavior?: Ref<'toggle' | 'replace'>\n\n  focusable: Ref<boolean>\n\n  onLeave: (event: Event) => void\n  onEnter: (event: Event) => void\n  changeHighlight: (el: HTMLElement, scrollIntoView?: boolean) => void\n  onKeydownNavigation: (event: KeyboardEvent) => void\n  onKeydownEnter: (event: KeyboardEvent) => void\n  onKeydownTypeAhead: (event: KeyboardEvent) => void\n  onCompositionStart: () => void\n  onCompositionEnd: () => void\n  highlightFirstItem: () => void\n}\n\nexport const [injectListboxRootContext, provideListboxRootContext]\n  = createContext<ListboxRootContext<AcceptableValue>>('ListboxRoot')\n\nexport interface ListboxRootProps<T = AcceptableValue> extends PrimitiveProps, FormFieldProps {\n  /** The controlled value of the listbox. Can be binded with with `v-model`. */\n  modelValue?: T | Array<T>\n  /** The value of the listbox when initially rendered. Use when you do not need to control the state of the Listbox */\n  defaultValue?: T | Array<T>\n  /** Whether multiple options can be selected or not. */\n  multiple?: boolean\n  /** The orientation of the listbox. <br>Mainly so arrow navigation is done accordingly (left & right vs. up & down) */\n  orientation?: DataOrientation\n  /** The reading direction of the listbox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, prevents the user from interacting with listbox */\n  disabled?: boolean\n  /**\n   * How multiple selection should behave in the collection.\n   * @defaultValue 'toggle'\n   */\n  selectionBehavior?: 'toggle' | 'replace'\n  /** When `true`, hover over item will trigger highlight */\n  highlightOnHover?: boolean\n  /** Use this to compare objects by a particular field, or pass your own comparison function for complete control over how objects are compared. */\n  by?: string | ((a: T, b: T) => boolean)\n}\n\nexport type ListboxRootEmits<T = AcceptableValue> = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: T]\n  /** Event handler when highlighted element changes. */\n  'highlight': [payload: { ref: HTMLElement, value: T } | undefined]\n  /** Event handler called when container is being focused. Can be prevented. */\n  'entryFocus': [event: CustomEvent]\n  /** Event handler called when the mouse leave the container */\n  'leave': [event: Event]\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { EventHook } from '@vueuse/core'\nimport type { Ref } from 'vue'\nimport { createEventHook, useVModel } from '@vueuse/core'\nimport { nextTick, ref, toRefs, watch } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport { compare } from './utils'\n\nconst props = withDefaults(defineProps<ListboxRootProps>(), {\n  selectionBehavior: 'toggle',\n  orientation: 'vertical',\n})\nconst emits = defineEmits<ListboxRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current active value */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { multiple, highlightOnHover, orientation, disabled, selectionBehavior, dir: propDir } = toRefs(props)\nconst { getItems } = useCollection<{ value: T }>({ isProvider: true })\nconst { handleTypeaheadSearch } = useTypeahead()\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst kbd = useKbd()\nconst dir = useDirection(propDir)\n\nconst isFormControl = useFormControl(currentElement)\n\nconst firstValue = ref<T>()\nconst isUserAction = ref(false)\nconst focusable = ref(true)\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? (multiple.value ? [] : undefined),\n  passive: (props.modelValue === undefined) as false,\n  deep: true,\n}) as Ref<T | T[] | undefined>\n\nfunction onValueChange(val: T) {\n  isUserAction.value = true\n  if (props.multiple) {\n    const modelArray = Array.isArray(modelValue.value) ? [...modelValue.value] : []\n    const index = modelArray.findIndex(i => compare(i, val, props.by))\n    if (props.selectionBehavior === 'toggle') {\n      index === -1 ? modelArray.push(val) : modelArray.splice(index, 1)\n      modelValue.value = modelArray\n    }\n    else {\n      modelValue.value = [val]\n      firstValue.value = val\n    }\n  }\n  else {\n    if (props.selectionBehavior === 'toggle') {\n      if (compare(modelValue.value, val, props.by))\n        modelValue.value = undefined\n      else\n        modelValue.value = val\n    }\n    else {\n      modelValue.value = val\n    }\n  }\n  setTimeout(() => {\n    isUserAction.value = false\n  }, 1)\n}\n\nconst highlightedElement = ref<HTMLElement | null>(null)\nconst previousElement = ref<HTMLElement | null>(null)\nconst isVirtual = ref(false)\nconst isComposing = ref(false)\nconst virtualFocusHook = createEventHook<Event | null | undefined>()\nconst virtualKeydownHook = createEventHook<KeyboardEvent>()\nconst virtualHighlightHook = createEventHook<T>()\n\nfunction getCollectionItem() {\n  return getItems().map(i => i.ref).filter(i => i.dataset.disabled !== '')\n}\n\nfunction changeHighlight(el: HTMLElement, scrollIntoView = true) {\n  if (!el)\n    return\n\n  highlightedElement.value = el\n  if (focusable.value)\n    highlightedElement.value.focus()\n  if (scrollIntoView)\n    highlightedElement.value.scrollIntoView({ block: 'nearest' })\n\n  const highlightedItem = getItems().find(i => i.ref === el)\n  emits('highlight', highlightedItem)\n}\n\nfunction highlightItem(value: T) {\n  if (isVirtual.value) {\n    virtualHighlightHook.trigger(value)\n  }\n  else {\n    const item = getItems().find(i => compare(i.value, value, props.by))\n    if (item) {\n      highlightedElement.value = item.ref\n      changeHighlight(item.ref)\n    }\n  }\n}\n\nfunction onKeydownEnter(event: KeyboardEvent) {\n  if (highlightedElement.value && highlightedElement.value.isConnected) {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (!isComposing.value) {\n      highlightedElement.value.click()\n    }\n  }\n}\n\nfunction onKeydownTypeAhead(event: KeyboardEvent) {\n  if (!focusable.value)\n    return\n  isUserAction.value = true\n  if (isVirtual.value) {\n    virtualKeydownHook.trigger(event)\n  }\n  else {\n    const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n\n    if (isMetaKey && event.key === 'a' && multiple.value) {\n      const collection = getItems()\n      const values = collection.map(i => i.value)\n      modelValue.value = [...values]\n      event.preventDefault()\n      changeHighlight(collection[collection.length - 1].ref)\n    }\n    else if (!isMetaKey) {\n      const el = handleTypeaheadSearch(event.key, getItems())\n      if (el)\n        changeHighlight(el)\n    }\n  }\n  setTimeout(() => {\n    isUserAction.value = false\n  }, 1)\n}\n\nfunction onCompositionStart() {\n  isComposing.value = true\n}\nfunction onCompositionEnd() {\n  nextTick(() => {\n    isComposing.value = false\n  })\n}\n\nfunction highlightFirstItem() {\n  nextTick(() => {\n    const event = new KeyboardEvent('keydown', { key: 'PageUp' })\n    onKeydownNavigation(event)\n  })\n}\n\nfunction onLeave(event: Event) {\n  const el = highlightedElement.value\n\n  if ((el as Node)?.isConnected) {\n    previousElement.value = el\n  }\n\n  highlightedElement.value = null\n  emits('leave', event)\n}\n\nfunction onEnter(event: Event) {\n  const entryFocusEvent = new CustomEvent('listbox.entryFocus', { bubbles: false, cancelable: true })\n  event.currentTarget?.dispatchEvent(entryFocusEvent)\n  emits('entryFocus', entryFocusEvent)\n\n  if (entryFocusEvent.defaultPrevented)\n    return\n\n  if (previousElement.value) {\n    changeHighlight(previousElement.value)\n  }\n  else {\n    const el = getCollectionItem()?.[0]\n    changeHighlight(el)\n  }\n}\n\nfunction onKeydownNavigation(event: KeyboardEvent) {\n  const intent = getFocusIntent(event, orientation.value, dir.value)\n  if (!intent)\n    return\n\n  let collection = getCollectionItem()\n  if (highlightedElement.value) {\n    if (intent === 'last') {\n      collection.reverse()\n    }\n    else if (intent === 'prev' || intent === 'next') {\n      if (intent === 'prev')\n        collection.reverse()\n\n      const currentIndex = collection.indexOf(highlightedElement.value)\n      collection = collection.slice(currentIndex + 1)\n    }\n    handleMultipleReplace(event, collection[0])\n  }\n\n  if (collection.length) {\n    const index = !highlightedElement.value && intent === 'prev' ? collection.length - 1 : 0\n    changeHighlight(collection[index])\n  }\n\n  if (isVirtual.value)\n    return virtualKeydownHook.trigger(event)\n}\n\nfunction handleMultipleReplace(event: KeyboardEvent, targetEl: HTMLElement) {\n  if (isVirtual.value || props.selectionBehavior !== 'replace' || !multiple.value || !Array.isArray(modelValue.value))\n    return\n  const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n  if (isMetaKey && !event.shiftKey)\n    return\n\n  if (event.shiftKey) {\n    const collection = getItems().filter(i => i.ref.dataset.disabled !== '')\n    let lastValue = collection.find(i => i.ref === targetEl)?.value\n\n    if (event.key === kbd.END)\n      lastValue = collection[collection.length - 1].value\n    else if (event.key === kbd.HOME)\n      lastValue = collection[0].value\n\n    if (!lastValue || !firstValue.value)\n      return\n\n    const values = findValuesBetween(collection.map(i => i.value), firstValue.value, lastValue)\n    modelValue.value = values\n  }\n}\n\nasync function highlightSelected(event?: Event) {\n  await nextTick()\n  if (isVirtual.value) {\n    // Trigger on nextTick for Virtualizer to be mounted\n    virtualFocusHook.trigger(event)\n  }\n  else {\n    const collection = getCollectionItem()\n    const item = collection.find(i => i.dataset.state === 'checked')\n    if (item)\n      changeHighlight(item)\n    else if (collection.length)\n      changeHighlight(collection[0])\n  }\n}\n\n// watch for only programmatic changes\nwatch(modelValue, () => {\n  if (!isUserAction.value) {\n    nextTick(() => {\n      highlightSelected()\n    })\n  }\n}, { immediate: true, deep: true })\n\ndefineExpose({\n  highlightedElement,\n  highlightItem,\n  highlightFirstItem,\n  highlightSelected,\n  getItems,\n})\n\nprovideListboxRootContext({\n  modelValue,\n  // @ts-expect-error ignoring\n  onValueChange,\n  multiple,\n  orientation,\n  dir,\n  disabled,\n  highlightOnHover,\n  highlightedElement,\n  isVirtual,\n  virtualFocusHook,\n  virtualKeydownHook,\n  virtualHighlightHook,\n  by: props.by,\n  firstValue,\n  selectionBehavior,\n\n  focusable,\n  onLeave,\n  onEnter,\n  changeHighlight,\n  onKeydownEnter,\n  onKeydownNavigation,\n  onKeydownTypeAhead,\n  onCompositionStart,\n  onCompositionEnd,\n  highlightFirstItem,\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :dir=\"dir\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    @pointerleave=\"onLeave\"\n    @focusout=\"async (event: FocusEvent) => {\n      const target = (event.relatedTarget || event.target) as HTMLElement | null\n      await nextTick()\n      if (highlightedElement && currentElement && !currentElement.contains(target)) {\n        onLeave(event)\n      }\n    }\"\n  >\n    <slot :model-value=\"modelValue\" />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      :name=\"name\"\n      :value=\"modelValue\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '..'\nimport { refAutoReset } from '@vueuse/shared'\nimport { Primitive } from '..'\nimport { injectListboxRootContext } from './ListboxRoot.vue'\n\nexport interface ListboxContentProps extends PrimitiveProps { }\n</script>\n\n<script setup lang=\"ts\">\nimport { useCollection } from '@/Collection'\n\ndefineProps<ListboxContentProps>()\n\nconst { CollectionSlot } = useCollection()\nconst rootContext = injectListboxRootContext()\n\nconst isClickFocus = refAutoReset(false, 10)\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      role=\"listbox\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :tabindex=\"rootContext.focusable.value ? rootContext.highlightedElement.value ? '-1' : '0' : undefined\"\n      :aria-orientation=\"rootContext.orientation.value\"\n      :aria-multiselectable=\"!!rootContext.multiple.value\"\n      :data-orientation=\"rootContext.orientation.value\"\n      @mousedown.left=\"isClickFocus = true\"\n      @focus=\"(ev) => {\n        if (isClickFocus)\n          return\n        rootContext.onEnter(ev)\n      }\"\n      @keydown.down.up.left.right.home.end=\"(event: KeyboardEvent) => {\n        if (\n          // when orientation is vertical, ignore left/right\n          (\n            rootContext.orientation.value === 'vertical'\n            && (event.key === 'ArrowLeft' || event.key === 'ArrowRight')\n          )\n          // when orientation is horizontal, ignore up/down\n          || (\n            rootContext.orientation.value === 'horizontal'\n            && (event.key === 'ArrowUp' || event.key === 'ArrowDown')\n          )\n        ) {\n          return\n        }\n\n        event.preventDefault()\n        rootContext.focusable.value ? rootContext.onKeydownNavigation(event) : undefined\n      }\"\n      @keydown.enter=\"rootContext.onKeydownEnter\"\n      @keydown=\"rootContext.onKeydownTypeAhead\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '..'\nimport { refAutoReset } from '@vueuse/shared'\nimport { Primitive } from '..'\nimport { injectListboxRootContext } from './ListboxRoot.vue'\n\nexport interface ListboxContentProps extends PrimitiveProps { }\n</script>\n\n<script setup lang=\"ts\">\nimport { useCollection } from '@/Collection'\n\ndefineProps<ListboxContentProps>()\n\nconst { CollectionSlot } = useCollection()\nconst rootContext = injectListboxRootContext()\n\nconst isClickFocus = refAutoReset(false, 10)\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      role=\"listbox\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :tabindex=\"rootContext.focusable.value ? rootContext.highlightedElement.value ? '-1' : '0' : undefined\"\n      :aria-orientation=\"rootContext.orientation.value\"\n      :aria-multiselectable=\"!!rootContext.multiple.value\"\n      :data-orientation=\"rootContext.orientation.value\"\n      @mousedown.left=\"isClickFocus = true\"\n      @focus=\"(ev) => {\n        if (isClickFocus)\n          return\n        rootContext.onEnter(ev)\n      }\"\n      @keydown.down.up.left.right.home.end=\"(event: KeyboardEvent) => {\n        if (\n          // when orientation is vertical, ignore left/right\n          (\n            rootContext.orientation.value === 'vertical'\n            && (event.key === 'ArrowLeft' || event.key === 'ArrowRight')\n          )\n          // when orientation is horizontal, ignore up/down\n          || (\n            rootContext.orientation.value === 'horizontal'\n            && (event.key === 'ArrowUp' || event.key === 'ArrowDown')\n          )\n        ) {\n          return\n        }\n\n        event.preventDefault()\n        rootContext.focusable.value ? rootContext.onKeydownNavigation(event) : undefined\n      }\"\n      @keydown.enter=\"rootContext.onKeydownEnter\"\n      @keydown=\"rootContext.onKeydownTypeAhead\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '..'\nimport { useVModel } from '@vueuse/core'\nimport { computed, onMounted, onUnmounted, ref, watchSyncEffect } from 'vue'\nimport { usePrimitiveElement } from '@/Primitive'\nimport { Primitive } from '..'\nimport { injectListboxRootContext } from './ListboxRoot.vue'\n\nexport interface ListboxFilterProps extends PrimitiveProps {\n  /** The controlled value of the filter. Can be binded with with v-model. */\n  modelValue?: string\n  /** Focus on element when mounted. */\n  autoFocus?: boolean\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n\nexport type ListboxFilterEmits = {\n  'update:modelValue': [string]\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = withDefaults(defineProps<ListboxFilterProps>(), {\n  as: 'input',\n})\nconst emits = defineEmits<ListboxFilterEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: '',\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst rootContext = injectListboxRootContext()\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst disabled = computed(() => props.disabled || rootContext.disabled.value || false)\n\nconst activedescendant = ref<string | undefined>()\nwatchSyncEffect(() => activedescendant.value = rootContext.highlightedElement.value?.id)\n\nonMounted(() => {\n  rootContext.focusable.value = false\n\n  setTimeout(() => {\n    // make sure all DOM was flush then only capture the focus\n    if (props.autoFocus)\n      currentElement.value?.focus()\n  }, 1)\n})\n\nonUnmounted(() => {\n  rootContext.focusable.value = true\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :value=\"modelValue\"\n    :disabled=\"disabled ? '' : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :aria-disabled=\"disabled ?? undefined\"\n    :aria-activedescendant=\"activedescendant\"\n    type=\"text\"\n    @keydown.down.up.home.end.prevent=\"rootContext.onKeydownNavigation\"\n    @keydown.enter=\"rootContext.onKeydownEnter\"\n    @input=\"(event: InputEvent) => {\n      modelValue = (event.target as HTMLInputElement).value\n      rootContext.highlightFirstItem()\n    }\"\n    @compositionstart=\"rootContext.onCompositionStart\"\n    @compositionend=\"rootContext.onCompositionEnd\"\n  >\n    <slot :model-value=\"modelValue\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '..'\nimport { useVModel } from '@vueuse/core'\nimport { computed, onMounted, onUnmounted, ref, watchSyncEffect } from 'vue'\nimport { usePrimitiveElement } from '@/Primitive'\nimport { Primitive } from '..'\nimport { injectListboxRootContext } from './ListboxRoot.vue'\n\nexport interface ListboxFilterProps extends PrimitiveProps {\n  /** The controlled value of the filter. Can be binded with with v-model. */\n  modelValue?: string\n  /** Focus on element when mounted. */\n  autoFocus?: boolean\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n\nexport type ListboxFilterEmits = {\n  'update:modelValue': [string]\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = withDefaults(defineProps<ListboxFilterProps>(), {\n  as: 'input',\n})\nconst emits = defineEmits<ListboxFilterEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: '',\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst rootContext = injectListboxRootContext()\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst disabled = computed(() => props.disabled || rootContext.disabled.value || false)\n\nconst activedescendant = ref<string | undefined>()\nwatchSyncEffect(() => activedescendant.value = rootContext.highlightedElement.value?.id)\n\nonMounted(() => {\n  rootContext.focusable.value = false\n\n  setTimeout(() => {\n    // make sure all DOM was flush then only capture the focus\n    if (props.autoFocus)\n      currentElement.value?.focus()\n  }, 1)\n})\n\nonUnmounted(() => {\n  rootContext.focusable.value = true\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :value=\"modelValue\"\n    :disabled=\"disabled ? '' : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :aria-disabled=\"disabled ?? undefined\"\n    :aria-activedescendant=\"activedescendant\"\n    type=\"text\"\n    @keydown.down.up.home.end.prevent=\"rootContext.onKeydownNavigation\"\n    @keydown.enter=\"rootContext.onKeydownEnter\"\n    @input=\"(event: InputEvent) => {\n      modelValue = (event.target as HTMLInputElement).value\n      rootContext.highlightFirstItem()\n    }\"\n    @compositionstart=\"rootContext.onCompositionStart\"\n    @compositionend=\"rootContext.onCompositionEnd\"\n  >\n    <slot :model-value=\"modelValue\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useId } from '@/shared'\n\nexport interface ListboxGroupProps extends PrimitiveProps {}\n\ninterface ListboxGroupContext {\n  id: string\n}\n\nexport const [injectListboxGroupContext, provideListboxGroupContext]\n  = createContext<ListboxGroupContext>('ListboxGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ListboxGroupProps>()\n\nconst id = useId(undefined, 'reka-listbox-group')\nprovideListboxGroupContext({ id })\n</script>\n\n<template>\n  <Primitive\n    role=\"group\"\n    v-bind=\"props\"\n    :aria-labelledby=\"id\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useId } from '@/shared'\n\nexport interface ListboxGroupProps extends PrimitiveProps {}\n\ninterface ListboxGroupContext {\n  id: string\n}\n\nexport const [injectListboxGroupContext, provideListboxGroupContext]\n  = createContext<ListboxGroupContext>('ListboxGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ListboxGroupProps>()\n\nconst id = useId(undefined, 'reka-listbox-group')\nprovideListboxGroupContext({ id })\n</script>\n\n<template>\n  <Primitive\n    role=\"group\"\n    v-bind=\"props\"\n    :aria-labelledby=\"id\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ListboxGroupLabelProps extends PrimitiveProps {\n  for?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectListboxGroupContext } from './ListboxGroup.vue'\n\nconst props = withDefaults(defineProps<ListboxGroupLabelProps>(), {\n  as: 'div',\n})\n\nconst groupContext = injectListboxGroupContext({ id: '' })\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"groupContext.id\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ListboxGroupLabelProps extends PrimitiveProps {\n  for?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectListboxGroupContext } from './ListboxGroup.vue'\n\nconst props = withDefaults(defineProps<ListboxGroupLabelProps>(), {\n  as: 'div',\n})\n\nconst groupContext = injectListboxGroupContext({ id: '' })\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"groupContext.id\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport { createContext, handleAndDispatchCustomEvent, useForwardExpose, useId } from '@/shared'\n\nexport interface ListboxItemProps<T = AcceptableValue> extends PrimitiveProps {\n  /** The value given as data when submitted with a `name`. */\n  value: T\n  /** When `true`, prevents the user from interacting with the item. */\n  disabled?: boolean\n}\nexport type SelectEvent<T> = CustomEvent<{ originalEvent: PointerEvent, value?: T }>\n\nexport type ListboxItemEmits<T = AcceptableValue> = {\n  /** Event handler called when the selecting item. <br> It can be prevented by calling `event.preventDefault`. */\n  select: [event: SelectEvent<T>]\n}\n\nconst LISTBOX_SELECT = 'listbox.select'\n\ninterface ListboxItemContext {\n  isSelected: Ref<boolean>\n}\n\nexport const [injectListboxItemContext, provideListboxItemContext]\n  = createContext<ListboxItemContext>('ListboxItem')\n</script>\n\n<script setup lang=\"ts\"  generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '..'\nimport type { AcceptableValue } from '@/shared/types'\nimport { computed } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '..'\nimport { injectListboxRootContext } from './ListboxRoot.vue'\nimport { valueComparator } from './utils'\n\nconst props = withDefaults(defineProps<ListboxItemProps<T>>(), {\n  as: 'div',\n})\nconst emits = defineEmits<ListboxItemEmits<T>>()\n\nconst id = useId(undefined, 'reka-listbox-item')\nconst { CollectionItem } = useCollection()\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectListboxRootContext()\n\nconst isHighlighted = computed(() => currentElement.value === rootContext.highlightedElement.value)\nconst isSelected = computed(() => valueComparator(rootContext.modelValue.value, props.value, rootContext.by))\n\nconst disabled = computed(() => rootContext.disabled.value || props.disabled)\n\nasync function handleSelect(ev: SelectEvent<T>) {\n  emits('select', ev)\n  if (ev?.defaultPrevented)\n    return\n\n  if (!disabled.value && ev) {\n    rootContext.onValueChange(props.value)\n    rootContext.changeHighlight(currentElement.value)\n  }\n}\n\nfunction handleSelectCustomEvent(ev: PointerEvent) {\n  const eventDetail = { originalEvent: ev, value: props.value as T }\n  handleAndDispatchCustomEvent(LISTBOX_SELECT, handleSelect, eventDetail)\n}\n\nprovideListboxItemContext({\n  isSelected,\n})\n</script>\n\n<template>\n  <CollectionItem :value=\"value\">\n    <Primitive\n      :id=\"id\"\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      v-memo=\"[isHighlighted, isSelected]\"\n      role=\"option\"\n      :tabindex=\"rootContext.focusable.value ? isHighlighted ? '0' : '-1' : -1\"\n      :aria-selected=\"isSelected\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :disabled=\"disabled ? '' : undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-highlighted=\"isHighlighted ? '' : undefined\"\n      :data-state=\"isSelected ? 'checked' : 'unchecked'\"\n      @click=\"handleSelectCustomEvent\"\n      @keydown.space.prevent=\"handleSelectCustomEvent\"\n      @pointermove=\"(event) => {\n        if (rootContext.highlightedElement.value === currentElement)\n          return\n\n        if (rootContext.highlightOnHover.value)\n          rootContext.changeHighlight(currentElement, false)\n        else\n          rootContext.focusable.value ? undefined : rootContext.changeHighlight(currentElement, false)\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport { createContext, handleAndDispatchCustomEvent, useForwardExpose, useId } from '@/shared'\n\nexport interface ListboxItemProps<T = AcceptableValue> extends PrimitiveProps {\n  /** The value given as data when submitted with a `name`. */\n  value: T\n  /** When `true`, prevents the user from interacting with the item. */\n  disabled?: boolean\n}\nexport type SelectEvent<T> = CustomEvent<{ originalEvent: PointerEvent, value?: T }>\n\nexport type ListboxItemEmits<T = AcceptableValue> = {\n  /** Event handler called when the selecting item. <br> It can be prevented by calling `event.preventDefault`. */\n  select: [event: SelectEvent<T>]\n}\n\nconst LISTBOX_SELECT = 'listbox.select'\n\ninterface ListboxItemContext {\n  isSelected: Ref<boolean>\n}\n\nexport const [injectListboxItemContext, provideListboxItemContext]\n  = createContext<ListboxItemContext>('ListboxItem')\n</script>\n\n<script setup lang=\"ts\"  generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '..'\nimport type { AcceptableValue } from '@/shared/types'\nimport { computed } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '..'\nimport { injectListboxRootContext } from './ListboxRoot.vue'\nimport { valueComparator } from './utils'\n\nconst props = withDefaults(defineProps<ListboxItemProps<T>>(), {\n  as: 'div',\n})\nconst emits = defineEmits<ListboxItemEmits<T>>()\n\nconst id = useId(undefined, 'reka-listbox-item')\nconst { CollectionItem } = useCollection()\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectListboxRootContext()\n\nconst isHighlighted = computed(() => currentElement.value === rootContext.highlightedElement.value)\nconst isSelected = computed(() => valueComparator(rootContext.modelValue.value, props.value, rootContext.by))\n\nconst disabled = computed(() => rootContext.disabled.value || props.disabled)\n\nasync function handleSelect(ev: SelectEvent<T>) {\n  emits('select', ev)\n  if (ev?.defaultPrevented)\n    return\n\n  if (!disabled.value && ev) {\n    rootContext.onValueChange(props.value)\n    rootContext.changeHighlight(currentElement.value)\n  }\n}\n\nfunction handleSelectCustomEvent(ev: PointerEvent) {\n  const eventDetail = { originalEvent: ev, value: props.value as T }\n  handleAndDispatchCustomEvent(LISTBOX_SELECT, handleSelect, eventDetail)\n}\n\nprovideListboxItemContext({\n  isSelected,\n})\n</script>\n\n<template>\n  <CollectionItem :value=\"value\">\n    <Primitive\n      :id=\"id\"\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      v-memo=\"[isHighlighted, isSelected]\"\n      role=\"option\"\n      :tabindex=\"rootContext.focusable.value ? isHighlighted ? '0' : '-1' : -1\"\n      :aria-selected=\"isSelected\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :disabled=\"disabled ? '' : undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-highlighted=\"isHighlighted ? '' : undefined\"\n      :data-state=\"isSelected ? 'checked' : 'unchecked'\"\n      @click=\"handleSelectCustomEvent\"\n      @keydown.space.prevent=\"handleSelectCustomEvent\"\n      @pointermove=\"(event) => {\n        if (rootContext.highlightedElement.value === currentElement)\n          return\n\n        if (rootContext.highlightOnHover.value)\n          rootContext.changeHighlight(currentElement, false)\n        else\n          rootContext.focusable.value ? undefined : rootContext.changeHighlight(currentElement, false)\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ListboxItemIndicatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectListboxItemContext } from './ListboxItem.vue'\n\nconst props = withDefaults(defineProps<ListboxItemIndicatorProps>(), {\n  as: 'span',\n})\n\nuseForwardExpose()\nconst itemContext = injectListboxItemContext()\n</script>\n\n<template>\n  <Primitive\n    v-if=\"itemContext.isSelected.value\"\n    aria-hidden=\"true\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ListboxItemIndicatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectListboxItemContext } from './ListboxItem.vue'\n\nconst props = withDefaults(defineProps<ListboxItemIndicatorProps>(), {\n  as: 'span',\n})\n\nuseForwardExpose()\nconst itemContext = injectListboxItemContext()\n</script>\n\n<template>\n  <Primitive\n    v-if=\"itemContext.isSelected.value\"\n    aria-hidden=\"true\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "export type NoInfer<A extends any> = [A][A extends any ? 0 : never]\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport function memo<TDeps extends ReadonlyArray<any>, TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: false | string\n    debug?: () => boolean\n    onChange?: (result: TResult) => void\n    initialDeps?: TDeps\n  },\n) {\n  let deps = opts.initialDeps ?? []\n  let result: TResult | undefined\n\n  function memoizedFunction(): TResult {\n    let depTime: number\n    if (opts.key && opts.debug?.()) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug?.()) resultTime = Date.now()\n\n    result = fn(...newDeps)\n\n    if (opts.key && opts.debug?.()) {\n      const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n      const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n      const resultFpsPercentage = resultEndTime / 16\n\n      const pad = (str: number | string, num: number) => {\n        str = String(str)\n        while (str.length < num) {\n          str = ' ' + str\n        }\n        return str\n      }\n\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120),\n            )}deg 100% 31%);`,\n        opts?.key,\n      )\n    }\n\n    opts?.onChange?.(result)\n\n    return result\n  }\n\n  // Attach updateDeps to the function itself\n  memoizedFunction.updateDeps = (newDeps: [...TDeps]) => {\n    deps = newDeps\n  }\n\n  return memoizedFunction\n}\n\nexport function notUndefined<T>(value: T | undefined, msg?: string): T {\n  if (value === undefined) {\n    throw new Error(`Unexpected undefined${msg ? `: ${msg}` : ''}`)\n  } else {\n    return value\n  }\n}\n\nexport const approxEqual = (a: number, b: number) => Math.abs(a - b) < 1.01\n\nexport const debounce = (\n  targetWindow: Window & typeof globalThis,\n  fn: Function,\n  ms: number,\n) => {\n  let timeoutId: number\n  return function (this: any, ...args: Array<any>) {\n    targetWindow.clearTimeout(timeoutId)\n    timeoutId = targetWindow.setTimeout(() => fn.apply(this, args), ms)\n  }\n}\n", "import { approxEqual, debounce, memo, notUndefined } from './utils'\n\nexport * from './utils'\n\n//\n\ntype ScrollDirection = 'forward' | 'backward'\n\ntype ScrollAlignment = 'start' | 'center' | 'end' | 'auto'\n\ntype ScrollBehavior = 'auto' | 'smooth'\n\nexport interface ScrollToOptions {\n  align?: ScrollAlignment\n  behavior?: ScrollBehavior\n}\n\ntype ScrollToOffsetOptions = ScrollToOptions\n\ntype ScrollToIndexOptions = ScrollToOptions\n\nexport interface Range {\n  startIndex: number\n  endIndex: number\n  overscan: number\n  count: number\n}\n\ntype Key = number | string | bigint\n\nexport interface VirtualItem {\n  key: Key\n  index: number\n  start: number\n  end: number\n  size: number\n  lane: number\n}\n\nexport interface Rect {\n  width: number\n  height: number\n}\n\n//\n\nconst getRect = (element: HTMLElement): Rect => {\n  const { offsetWidth, offsetHeight } = element\n  return { width: offsetWidth, height: offsetHeight }\n}\n\nexport const defaultKeyExtractor = (index: number) => index\n\nexport const defaultRangeExtractor = (range: Range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0)\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport const observeElementRect = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n  const targetWindow = instance.targetWindow\n  if (!targetWindow) {\n    return\n  }\n\n  const handler = (rect: Rect) => {\n    const { width, height } = rect\n    cb({ width: Math.round(width), height: Math.round(height) })\n  }\n\n  handler(getRect(element as unknown as HTMLElement))\n\n  if (!targetWindow.ResizeObserver) {\n    return () => {}\n  }\n\n  const observer = new targetWindow.ResizeObserver((entries) => {\n    const run = () => {\n      const entry = entries[0]\n      if (entry?.borderBoxSize) {\n        const box = entry.borderBoxSize[0]\n        if (box) {\n          handler({ width: box.inlineSize, height: box.blockSize })\n          return\n        }\n      }\n      handler(getRect(element as unknown as HTMLElement))\n    }\n\n    instance.options.useAnimationFrameWithResizeObserver\n      ? requestAnimationFrame(run)\n      : run()\n  })\n\n  observer.observe(element, { box: 'border-box' })\n\n  return () => {\n    observer.unobserve(element)\n  }\n}\n\nconst addEventListenerOptions = {\n  passive: true,\n}\n\nexport const observeWindowRect = (\n  instance: Virtualizer<Window, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb({ width: element.innerWidth, height: element.innerHeight })\n  }\n  handler()\n\n  element.addEventListener('resize', handler, addEventListenerOptions)\n\n  return () => {\n    element.removeEventListener('resize', handler)\n  }\n}\n\nconst supportsScrollend =\n  typeof window == 'undefined' ? true : 'onscrollend' in window\n\ntype ObserveOffsetCallBack = (offset: number, isScrolling: boolean) => void\n\nexport const observeElementOffset = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: ObserveOffsetCallBack,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n  const targetWindow = instance.targetWindow\n  if (!targetWindow) {\n    return\n  }\n\n  let offset = 0\n  const fallback =\n    instance.options.useScrollendEvent && supportsScrollend\n      ? () => undefined\n      : debounce(\n          targetWindow,\n          () => {\n            cb(offset, false)\n          },\n          instance.options.isScrollingResetDelay,\n        )\n\n  const createHandler = (isScrolling: boolean) => () => {\n    const { horizontal, isRtl } = instance.options\n    offset = horizontal\n      ? element['scrollLeft'] * ((isRtl && -1) || 1)\n      : element['scrollTop']\n    fallback()\n    cb(offset, isScrolling)\n  }\n  const handler = createHandler(true)\n  const endHandler = createHandler(false)\n  endHandler()\n\n  element.addEventListener('scroll', handler, addEventListenerOptions)\n  const registerScrollendEvent =\n    instance.options.useScrollendEvent && supportsScrollend\n  if (registerScrollendEvent) {\n    element.addEventListener('scrollend', endHandler, addEventListenerOptions)\n  }\n  return () => {\n    element.removeEventListener('scroll', handler)\n    if (registerScrollendEvent) {\n      element.removeEventListener('scrollend', endHandler)\n    }\n  }\n}\n\nexport const observeWindowOffset = (\n  instance: Virtualizer<Window, any>,\n  cb: ObserveOffsetCallBack,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n  const targetWindow = instance.targetWindow\n  if (!targetWindow) {\n    return\n  }\n\n  let offset = 0\n  const fallback =\n    instance.options.useScrollendEvent && supportsScrollend\n      ? () => undefined\n      : debounce(\n          targetWindow,\n          () => {\n            cb(offset, false)\n          },\n          instance.options.isScrollingResetDelay,\n        )\n\n  const createHandler = (isScrolling: boolean) => () => {\n    offset = element[instance.options.horizontal ? 'scrollX' : 'scrollY']\n    fallback()\n    cb(offset, isScrolling)\n  }\n  const handler = createHandler(true)\n  const endHandler = createHandler(false)\n  endHandler()\n\n  element.addEventListener('scroll', handler, addEventListenerOptions)\n  const registerScrollendEvent =\n    instance.options.useScrollendEvent && supportsScrollend\n  if (registerScrollendEvent) {\n    element.addEventListener('scrollend', endHandler, addEventListenerOptions)\n  }\n  return () => {\n    element.removeEventListener('scroll', handler)\n    if (registerScrollendEvent) {\n      element.removeEventListener('scrollend', endHandler)\n    }\n  }\n}\n\nexport const measureElement = <TItemElement extends Element>(\n  element: TItemElement,\n  entry: ResizeObserverEntry | undefined,\n  instance: Virtualizer<any, TItemElement>,\n) => {\n  if (entry?.borderBoxSize) {\n    const box = entry.borderBoxSize[0]\n    if (box) {\n      const size = Math.round(\n        box[instance.options.horizontal ? 'inlineSize' : 'blockSize'],\n      )\n      return size\n    }\n  }\n\n  return (element as unknown as HTMLElement)[\n    instance.options.horizontal ? 'offsetWidth' : 'offsetHeight'\n  ]\n}\n\nexport const windowScroll = <T extends Window>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport const elementScroll = <T extends Element>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport interface VirtualizerOptions<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  // Required from the user\n  count: number\n  getScrollElement: () => TScrollElement | null\n  estimateSize: (index: number) => number\n\n  // Required from the framework adapter (but can be overridden)\n  scrollToFn: (\n    offset: number,\n    options: { adjustments?: number; behavior?: ScrollBehavior },\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => void\n  observeElementRect: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (rect: Rect) => void,\n  ) => void | (() => void)\n  observeElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: ObserveOffsetCallBack,\n  ) => void | (() => void)\n  // Optional\n  debug?: boolean\n  initialRect?: Rect\n  onChange?: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    sync: boolean,\n  ) => void\n  measureElement?: (\n    element: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => number\n  overscan?: number\n  horizontal?: boolean\n  paddingStart?: number\n  paddingEnd?: number\n  scrollPaddingStart?: number\n  scrollPaddingEnd?: number\n  initialOffset?: number | (() => number)\n  getItemKey?: (index: number) => Key\n  rangeExtractor?: (range: Range) => Array<number>\n  scrollMargin?: number\n  gap?: number\n  indexAttribute?: string\n  initialMeasurementsCache?: Array<VirtualItem>\n  lanes?: number\n  isScrollingResetDelay?: number\n  useScrollendEvent?: boolean\n  enabled?: boolean\n  isRtl?: boolean\n  useAnimationFrameWithResizeObserver?: boolean\n}\n\nexport class Virtualizer<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  private unsubs: Array<void | (() => void)> = []\n  options!: Required<VirtualizerOptions<TScrollElement, TItemElement>>\n  scrollElement: TScrollElement | null = null\n  targetWindow: (Window & typeof globalThis) | null = null\n  isScrolling = false\n  measurementsCache: Array<VirtualItem> = []\n  private itemSizeCache = new Map<Key, number>()\n  private pendingMeasuredCacheIndexes: Array<number> = []\n  scrollRect: Rect | null = null\n  scrollOffset: number | null = null\n  scrollDirection: ScrollDirection | null = null\n  private scrollAdjustments = 0\n  shouldAdjustScrollPositionOnItemSizeChange:\n    | undefined\n    | ((\n        item: VirtualItem,\n        delta: number,\n        instance: Virtualizer<TScrollElement, TItemElement>,\n      ) => boolean)\n  elementsCache = new Map<Key, TItemElement>()\n  private observer = (() => {\n    let _ro: ResizeObserver | null = null\n\n    const get = () => {\n      if (_ro) {\n        return _ro\n      }\n\n      if (!this.targetWindow || !this.targetWindow.ResizeObserver) {\n        return null\n      }\n\n      return (_ro = new this.targetWindow.ResizeObserver((entries) => {\n        entries.forEach((entry) => {\n          const run = () => {\n            this._measureElement(entry.target as TItemElement, entry)\n          }\n          this.options.useAnimationFrameWithResizeObserver\n            ? requestAnimationFrame(run)\n            : run()\n        })\n      }))\n    }\n\n    return {\n      disconnect: () => {\n        get()?.disconnect()\n        _ro = null\n      },\n      observe: (target: Element) =>\n        get()?.observe(target, { box: 'border-box' }),\n      unobserve: (target: Element) => get()?.unobserve(target),\n    }\n  })()\n  range: { startIndex: number; endIndex: number } | null = null\n\n  constructor(opts: VirtualizerOptions<TScrollElement, TItemElement>) {\n    this.setOptions(opts)\n  }\n\n  setOptions = (opts: VirtualizerOptions<TScrollElement, TItemElement>) => {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: () => {},\n      measureElement,\n      initialRect: { width: 0, height: 0 },\n      scrollMargin: 0,\n      gap: 0,\n      indexAttribute: 'data-index',\n      initialMeasurementsCache: [],\n      lanes: 1,\n      isScrollingResetDelay: 150,\n      enabled: true,\n      isRtl: false,\n      useScrollendEvent: false,\n      useAnimationFrameWithResizeObserver: false,\n      ...opts,\n    }\n  }\n\n  private notify = (sync: boolean) => {\n    this.options.onChange?.(this, sync)\n  }\n\n  private maybeNotify = memo(\n    () => {\n      this.calculateRange()\n\n      return [\n        this.isScrolling,\n        this.range ? this.range.startIndex : null,\n        this.range ? this.range.endIndex : null,\n      ]\n    },\n    (isScrolling) => {\n      this.notify(isScrolling)\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'maybeNotify',\n      debug: () => this.options.debug,\n      initialDeps: [\n        this.isScrolling,\n        this.range ? this.range.startIndex : null,\n        this.range ? this.range.endIndex : null,\n      ] as [boolean, number | null, number | null],\n    },\n  )\n\n  private cleanup = () => {\n    this.unsubs.filter(Boolean).forEach((d) => d!())\n    this.unsubs = []\n    this.observer.disconnect()\n    this.scrollElement = null\n    this.targetWindow = null\n  }\n\n  _didMount = () => {\n    return () => {\n      this.cleanup()\n    }\n  }\n\n  _willUpdate = () => {\n    const scrollElement = this.options.enabled\n      ? this.options.getScrollElement()\n      : null\n\n    if (this.scrollElement !== scrollElement) {\n      this.cleanup()\n\n      if (!scrollElement) {\n        this.maybeNotify()\n        return\n      }\n\n      this.scrollElement = scrollElement\n\n      if (this.scrollElement && 'ownerDocument' in this.scrollElement) {\n        this.targetWindow = this.scrollElement.ownerDocument.defaultView\n      } else {\n        this.targetWindow = this.scrollElement?.window ?? null\n      }\n\n      this.elementsCache.forEach((cached) => {\n        this.observer.observe(cached)\n      })\n\n      this._scrollToOffset(this.getScrollOffset(), {\n        adjustments: undefined,\n        behavior: undefined,\n      })\n\n      this.unsubs.push(\n        this.options.observeElementRect(this, (rect) => {\n          this.scrollRect = rect\n          this.maybeNotify()\n        }),\n      )\n\n      this.unsubs.push(\n        this.options.observeElementOffset(this, (offset, isScrolling) => {\n          this.scrollAdjustments = 0\n          this.scrollDirection = isScrolling\n            ? this.getScrollOffset() < offset\n              ? 'forward'\n              : 'backward'\n            : null\n          this.scrollOffset = offset\n          this.isScrolling = isScrolling\n\n          this.maybeNotify()\n        }),\n      )\n    }\n  }\n\n  private getSize = () => {\n    if (!this.options.enabled) {\n      this.scrollRect = null\n      return 0\n    }\n\n    this.scrollRect = this.scrollRect ?? this.options.initialRect\n\n    return this.scrollRect[this.options.horizontal ? 'width' : 'height']\n  }\n\n  private getScrollOffset = () => {\n    if (!this.options.enabled) {\n      this.scrollOffset = null\n      return 0\n    }\n\n    this.scrollOffset =\n      this.scrollOffset ??\n      (typeof this.options.initialOffset === 'function'\n        ? this.options.initialOffset()\n        : this.options.initialOffset)\n\n    return this.scrollOffset\n  }\n\n  private getFurthestMeasurement = (\n    measurements: Array<VirtualItem>,\n    index: number,\n  ) => {\n    const furthestMeasurementsFound = new Map<number, true>()\n    const furthestMeasurements = new Map<number, VirtualItem>()\n    for (let m = index - 1; m >= 0; m--) {\n      const measurement = measurements[m]!\n\n      if (furthestMeasurementsFound.has(measurement.lane)) {\n        continue\n      }\n\n      const previousFurthestMeasurement = furthestMeasurements.get(\n        measurement.lane,\n      )\n      if (\n        previousFurthestMeasurement == null ||\n        measurement.end > previousFurthestMeasurement.end\n      ) {\n        furthestMeasurements.set(measurement.lane, measurement)\n      } else if (measurement.end < previousFurthestMeasurement.end) {\n        furthestMeasurementsFound.set(measurement.lane, true)\n      }\n\n      if (furthestMeasurementsFound.size === this.options.lanes) {\n        break\n      }\n    }\n\n    return furthestMeasurements.size === this.options.lanes\n      ? Array.from(furthestMeasurements.values()).sort((a, b) => {\n          if (a.end === b.end) {\n            return a.index - b.index\n          }\n\n          return a.end - b.end\n        })[0]\n      : undefined\n  }\n\n  private getMeasurementOptions = memo(\n    () => [\n      this.options.count,\n      this.options.paddingStart,\n      this.options.scrollMargin,\n      this.options.getItemKey,\n      this.options.enabled,\n    ],\n    (count, paddingStart, scrollMargin, getItemKey, enabled) => {\n      this.pendingMeasuredCacheIndexes = []\n      return {\n        count,\n        paddingStart,\n        scrollMargin,\n        getItemKey,\n        enabled,\n      }\n    },\n    {\n      key: false,\n    },\n  )\n\n  private getMeasurements = memo(\n    () => [this.getMeasurementOptions(), this.itemSizeCache],\n    (\n      { count, paddingStart, scrollMargin, getItemKey, enabled },\n      itemSizeCache,\n    ) => {\n      if (!enabled) {\n        this.measurementsCache = []\n        this.itemSizeCache.clear()\n        return []\n      }\n\n      if (this.measurementsCache.length === 0) {\n        this.measurementsCache = this.options.initialMeasurementsCache\n        this.measurementsCache.forEach((item) => {\n          this.itemSizeCache.set(item.key, item.size)\n        })\n      }\n\n      const min =\n        this.pendingMeasuredCacheIndexes.length > 0\n          ? Math.min(...this.pendingMeasuredCacheIndexes)\n          : 0\n      this.pendingMeasuredCacheIndexes = []\n\n      const measurements = this.measurementsCache.slice(0, min)\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i)\n\n        const furthestMeasurement =\n          this.options.lanes === 1\n            ? measurements[i - 1]\n            : this.getFurthestMeasurement(measurements, i)\n\n        const start = furthestMeasurement\n          ? furthestMeasurement.end + this.options.gap\n          : paddingStart + scrollMargin\n\n        const measuredSize = itemSizeCache.get(key)\n        const size =\n          typeof measuredSize === 'number'\n            ? measuredSize\n            : this.options.estimateSize(i)\n\n        const end = start + size\n\n        const lane = furthestMeasurement\n          ? furthestMeasurement.lane\n          : i % this.options.lanes\n\n        measurements[i] = {\n          index: i,\n          start,\n          size,\n          end,\n          key,\n          lane,\n        }\n      }\n\n      this.measurementsCache = measurements\n\n      return measurements\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug,\n    },\n  )\n\n  calculateRange = memo(\n    () => [\n      this.getMeasurements(),\n      this.getSize(),\n      this.getScrollOffset(),\n      this.options.lanes,\n    ],\n    (measurements, outerSize, scrollOffset, lanes) => {\n      return (this.range =\n        measurements.length > 0 && outerSize > 0\n          ? calculateRange({\n              measurements,\n              outerSize,\n              scrollOffset,\n              lanes,\n            })\n          : null)\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug,\n    },\n  )\n\n  getVirtualIndexes = memo(\n    () => {\n      let startIndex: number | null = null\n      let endIndex: number | null = null\n      const range = this.calculateRange()\n      if (range) {\n        startIndex = range.startIndex\n        endIndex = range.endIndex\n      }\n      this.maybeNotify.updateDeps([this.isScrolling, startIndex, endIndex])\n      return [\n        this.options.rangeExtractor,\n        this.options.overscan,\n        this.options.count,\n        startIndex,\n        endIndex,\n      ]\n    },\n    (rangeExtractor, overscan, count, startIndex, endIndex) => {\n      return startIndex === null || endIndex === null\n        ? []\n        : rangeExtractor({\n            startIndex,\n            endIndex,\n            overscan,\n            count,\n          })\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getVirtualIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  indexFromElement = (node: TItemElement) => {\n    const attributeName = this.options.indexAttribute\n    const indexStr = node.getAttribute(attributeName)\n\n    if (!indexStr) {\n      console.warn(\n        `Missing attribute name '${attributeName}={index}' on measured element.`,\n      )\n      return -1\n    }\n\n    return parseInt(indexStr, 10)\n  }\n\n  private _measureElement = (\n    node: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n  ) => {\n    const index = this.indexFromElement(node)\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n    const key = item.key\n    const prevNode = this.elementsCache.get(key)\n\n    if (prevNode !== node) {\n      if (prevNode) {\n        this.observer.unobserve(prevNode)\n      }\n      this.observer.observe(node)\n      this.elementsCache.set(key, node)\n    }\n\n    if (node.isConnected) {\n      this.resizeItem(index, this.options.measureElement(node, entry, this))\n    }\n  }\n\n  resizeItem = (index: number, size: number) => {\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n    const itemSize = this.itemSizeCache.get(item.key) ?? item.size\n    const delta = size - itemSize\n\n    if (delta !== 0) {\n      if (\n        this.shouldAdjustScrollPositionOnItemSizeChange !== undefined\n          ? this.shouldAdjustScrollPositionOnItemSizeChange(item, delta, this)\n          : item.start < this.getScrollOffset() + this.scrollAdjustments\n      ) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('correction', delta)\n        }\n\n        this._scrollToOffset(this.getScrollOffset(), {\n          adjustments: (this.scrollAdjustments += delta),\n          behavior: undefined,\n        })\n      }\n\n      this.pendingMeasuredCacheIndexes.push(item.index)\n      this.itemSizeCache = new Map(this.itemSizeCache.set(item.key, size))\n\n      this.notify(false)\n    }\n  }\n\n  measureElement = (node: TItemElement | null | undefined) => {\n    if (!node) {\n      this.elementsCache.forEach((cached, key) => {\n        if (!cached.isConnected) {\n          this.observer.unobserve(cached)\n          this.elementsCache.delete(key)\n        }\n      })\n      return\n    }\n\n    this._measureElement(node, undefined)\n  }\n\n  getVirtualItems = memo(\n    () => [this.getVirtualIndexes(), this.getMeasurements()],\n    (indexes, measurements) => {\n      const virtualItems: Array<VirtualItem> = []\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        const i = indexes[k]!\n        const measurement = measurements[i]!\n\n        virtualItems.push(measurement)\n      }\n\n      return virtualItems\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getVirtualItems',\n      debug: () => this.options.debug,\n    },\n  )\n\n  getVirtualItemForOffset = (offset: number) => {\n    const measurements = this.getMeasurements()\n    if (measurements.length === 0) {\n      return undefined\n    }\n    return notUndefined(\n      measurements[\n        findNearestBinarySearch(\n          0,\n          measurements.length - 1,\n          (index: number) => notUndefined(measurements[index]).start,\n          offset,\n        )\n      ],\n    )\n  }\n\n  getOffsetForAlignment = (\n    toOffset: number,\n    align: ScrollAlignment,\n    itemSize = 0,\n  ) => {\n    const size = this.getSize()\n    const scrollOffset = this.getScrollOffset()\n\n    if (align === 'auto') {\n      align = toOffset >= scrollOffset + size ? 'end' : 'start'\n    }\n\n    if (align === 'center') {\n      // When aligning to a particular item (e.g. with scrollToIndex),\n      // adjust offset by the size of the item to center on the item\n      toOffset += (itemSize - size) / 2\n    } else if (align === 'end') {\n      toOffset -= size\n    }\n\n    const maxOffset = this.getTotalSize() + this.options.scrollMargin - size\n\n    return Math.max(Math.min(maxOffset, toOffset), 0)\n  }\n\n  getOffsetForIndex = (index: number, align: ScrollAlignment = 'auto') => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return undefined\n    }\n\n    const size = this.getSize()\n    const scrollOffset = this.getScrollOffset()\n\n    if (align === 'auto') {\n      if (item.end >= scrollOffset + size - this.options.scrollPaddingEnd) {\n        align = 'end'\n      } else if (item.start <= scrollOffset + this.options.scrollPaddingStart) {\n        align = 'start'\n      } else {\n        return [scrollOffset, align] as const\n      }\n    }\n\n    const toOffset =\n      align === 'end'\n        ? item.end + this.options.scrollPaddingEnd\n        : item.start - this.options.scrollPaddingStart\n\n    return [\n      this.getOffsetForAlignment(toOffset, align, item.size),\n      align,\n    ] as const\n  }\n\n  private isDynamicMode = () => this.elementsCache.size > 0\n\n  scrollToOffset = (\n    toOffset: number,\n    { align = 'start', behavior }: ScrollToOffsetOptions = {},\n  ) => {\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  scrollToIndex = (\n    index: number,\n    { align: initialAlign = 'auto', behavior }: ScrollToIndexOptions = {},\n  ) => {\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    let attempts = 0\n    const maxAttempts = 10\n\n    const tryScroll = (currentAlign: ScrollAlignment) => {\n      if (!this.targetWindow) return\n\n      const offsetInfo = this.getOffsetForIndex(index, currentAlign)\n      if (!offsetInfo) {\n        console.warn('Failed to get offset for index:', index)\n        return\n      }\n      const [offset, align] = offsetInfo\n      this._scrollToOffset(offset, { adjustments: undefined, behavior })\n\n      this.targetWindow.requestAnimationFrame(() => {\n        const currentOffset = this.getScrollOffset()\n        const afterInfo = this.getOffsetForIndex(index, align)\n        if (!afterInfo) {\n          console.warn('Failed to get offset for index:', index)\n          return\n        }\n\n        if (!approxEqual(afterInfo[0], currentOffset)) {\n          scheduleRetry(align)\n        }\n      })\n    }\n\n    const scheduleRetry = (align: ScrollAlignment) => {\n      if (!this.targetWindow) return\n\n      attempts++\n      if (attempts < maxAttempts) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('Schedule retry', attempts, maxAttempts)\n        }\n        this.targetWindow.requestAnimationFrame(() => tryScroll(align))\n      } else {\n        console.warn(\n          `Failed to scroll to index ${index} after ${maxAttempts} attempts.`,\n        )\n      }\n    }\n\n    tryScroll(initialAlign)\n  }\n\n  scrollBy = (delta: number, { behavior }: ScrollToOffsetOptions = {}) => {\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.getScrollOffset() + delta, {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  getTotalSize = () => {\n    const measurements = this.getMeasurements()\n\n    let end: number\n    // If there are no measurements, set the end to paddingStart\n    // If there is only one lane, use the last measurement's end\n    // Otherwise find the maximum end value among all measurements\n    if (measurements.length === 0) {\n      end = this.options.paddingStart\n    } else if (this.options.lanes === 1) {\n      end = measurements[measurements.length - 1]?.end ?? 0\n    } else {\n      const endByLane = Array<number | null>(this.options.lanes).fill(null)\n      let endIndex = measurements.length - 1\n      while (endIndex >= 0 && endByLane.some((val) => val === null)) {\n        const item = measurements[endIndex]!\n        if (endByLane[item.lane] === null) {\n          endByLane[item.lane] = item.end\n        }\n\n        endIndex--\n      }\n\n      end = Math.max(...endByLane.filter((val): val is number => val !== null))\n    }\n\n    return Math.max(\n      end - this.options.scrollMargin + this.options.paddingEnd,\n      0,\n    )\n  }\n\n  private _scrollToOffset = (\n    offset: number,\n    {\n      adjustments,\n      behavior,\n    }: {\n      adjustments: number | undefined\n      behavior: ScrollBehavior | undefined\n    },\n  ) => {\n    this.options.scrollToFn(offset, { behavior, adjustments }, this)\n  }\n\n  measure = () => {\n    this.itemSizeCache = new Map()\n    this.notify(false)\n  }\n}\n\nconst findNearestBinarySearch = (\n  low: number,\n  high: number,\n  getCurrentValue: (i: number) => number,\n  value: number,\n) => {\n  while (low <= high) {\n    const middle = ((low + high) / 2) | 0\n    const currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n  lanes,\n}: {\n  measurements: Array<VirtualItem>\n  outerSize: number\n  scrollOffset: number\n  lanes: number\n}) {\n  const lastIndex = measurements.length - 1\n  const getOffset = (index: number) => measurements[index]!.start\n\n  // handle case when item count is less than or equal to lanes\n  if (measurements.length <= lanes) {\n    return {\n      startIndex: 0,\n      endIndex: lastIndex,\n    }\n  }\n\n  let startIndex = findNearestBinarySearch(\n    0,\n    lastIndex,\n    getOffset,\n    scrollOffset,\n  )\n  let endIndex = startIndex\n\n  if (lanes === 1) {\n    while (\n      endIndex < lastIndex &&\n      measurements[endIndex]!.end < scrollOffset + outerSize\n    ) {\n      endIndex++\n    }\n  } else if (lanes > 1) {\n    // Expand forward until we include the visible items from all lanes\n    // which are closer to the end of the virtualizer window\n    const endPerLane = Array(lanes).fill(0)\n    while (\n      endIndex < lastIndex &&\n      endPerLane.some((pos) => pos < scrollOffset + outerSize)\n    ) {\n      const item = measurements[endIndex]!\n      endPerLane[item.lane] = item.end\n      endIndex++\n    }\n\n    // Expand backward until we include all lanes' visible items\n    // closer to the top\n    const startPerLane = Array(lanes).fill(scrollOffset + outerSize)\n    while (startIndex >= 0 && startPerLane.some((pos) => pos >= scrollOffset)) {\n      const item = measurements[startIndex]!\n      startPerLane[item.lane] = item.start\n      startIndex--\n    }\n\n    // Align startIndex to the beginning of its lane\n    startIndex = Math.max(0, startIndex - (startIndex % lanes))\n    // Align endIndex to the end of its lane\n    endIndex = Math.min(lastIndex, endIndex + (lanes - 1 - (endIndex % lanes)))\n  }\n\n  return { startIndex, endIndex }\n}\n", "import {\n  Virtualizer,\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  windowScroll,\n} from '@tanstack/virtual-core'\nimport {\n  computed,\n  onScopeDispose,\n  shallowRef,\n  triggerRef,\n  unref,\n  watch,\n} from 'vue'\nimport type { PartialKeys, VirtualizerOptions } from '@tanstack/virtual-core'\nimport type { Ref } from 'vue'\n\nexport * from '@tanstack/virtual-core'\n\ntype MaybeRef<T> = T | Ref<T>\n\nfunction useVirtualizerBase<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n>(\n  options: MaybeRef<VirtualizerOptions<TScrollElement, TItemElement>>,\n): Ref<Virtualizer<TScrollElement, TItemElement>> {\n  const virtualizer = new Virtualizer(unref(options))\n  const state = shallowRef(virtualizer)\n\n  const cleanup = virtualizer._didMount()\n\n  watch(\n    () => unref(options).getScrollElement(),\n    (el) => {\n      if (el) {\n        virtualizer._willUpdate()\n      }\n    },\n    {\n      immediate: true,\n    },\n  )\n\n  watch(\n    () => unref(options),\n    (options) => {\n      virtualizer.setOptions({\n        ...options,\n        onChange: (instance, sync) => {\n          triggerRef(state)\n          options.onChange?.(instance, sync)\n        },\n      })\n\n      virtualizer._willUpdate()\n      triggerRef(state)\n    },\n    {\n      immediate: true,\n    },\n  )\n\n  onScopeDispose(cleanup)\n\n  return state\n}\n\nexport function useVirtualizer<\n  TScrollElement extends Element,\n  TItemElement extends Element,\n>(\n  options: MaybeRef<\n    PartialKeys<\n      VirtualizerOptions<TScrollElement, TItemElement>,\n      'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n    >\n  >,\n): Ref<Virtualizer<TScrollElement, TItemElement>> {\n  return useVirtualizerBase<TScrollElement, TItemElement>(\n    computed(() => ({\n      observeElementRect: observeElementRect,\n      observeElementOffset: observeElementOffset,\n      scrollToFn: elementScroll,\n      ...unref(options),\n    })),\n  )\n}\n\nexport function useWindowVirtualizer<TItemElement extends Element>(\n  options: MaybeRef<\n    PartialKeys<\n      VirtualizerOptions<Window, TItemElement>,\n      | 'observeElementRect'\n      | 'observeElementOffset'\n      | 'scrollToFn'\n      | 'getScrollElement'\n    >\n  >,\n): Ref<Virtualizer<Window, TItemElement>> {\n  return useVirtualizerBase<Window, TItemElement>(\n    computed(() => ({\n      getScrollElement: () => (typeof document !== 'undefined' ? window : null),\n      observeElementRect: observeWindowRect,\n      observeElementOffset: observeWindowOffset,\n      scrollToFn: windowScroll,\n      initialOffset: () =>\n        typeof document !== 'undefined' ? window.scrollY : 0,\n      ...unref(options),\n    })),\n  )\n}\n", "<script lang=\"ts\">\nexport interface ListboxVirtualizerProps<T extends AcceptableValue = AcceptableValue> {\n  /** List of items */\n  options: T[]\n  /** Number of items rendered outside the visible area */\n  overscan?: number\n  /** Estimated size (in px) of each item */\n  estimateSize?: number\n  /** Text content for each item to achieve type-ahead feature */\n  textContent?: (option: T) => string\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { VirtualItem, Virtualizer } from '@tanstack/vue-virtual'\nimport type { Ref, VNode } from 'vue'\nimport type { AcceptableValue } from '@/shared/types'\nimport { useVirtualizer } from '@tanstack/vue-virtual'\nimport { useParentElement } from '@vueuse/core'\nimport { refAutoReset } from '@vueuse/shared'\nimport { cloneVNode, computed, Fragment, useSlots } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { MAP_KEY_TO_FOCUS_INTENT } from '@/RovingFocus/utils'\nimport { findValuesBetween, getActiveElement } from '@/shared'\nimport { getNextMatch } from '@/shared/useTypeahead'\nimport { injectListboxRootContext } from './ListboxRoot.vue'\nimport { compare, queryCheckedElement } from './utils'\n\nconst props = defineProps<ListboxVirtualizerProps<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    option: T\n    virtualizer: Virtualizer<HTMLElement, Element>\n    virtualItem: VirtualItem\n  }) => any\n}>()\n\nconst slots = useSlots()\nconst rootContext = injectListboxRootContext()\nconst parentEl = useParentElement() as Ref<HTMLElement>\nconst { getItems } = useCollection<{ value: T }>()\n\n// set virtual true when this component mounted\nrootContext.isVirtual.value = true\n\nconst padding = computed(() => {\n  const el = parentEl.value\n  if (!el) {\n    return { start: 0, end: 0 }\n  }\n  else {\n    const styles = window.getComputedStyle(el)\n    return {\n      start: Number.parseFloat(styles.paddingBlockStart || styles.paddingTop),\n      end: Number.parseFloat(styles.paddingBlockEnd || styles.paddingBottom),\n    }\n  }\n})\n\nconst virtualizer = useVirtualizer(\n  {\n    get scrollPaddingStart() { return padding.value.start },\n    get scrollPaddingEnd() { return padding.value.end },\n    get count() { return props.options.length },\n    get horizontal() { return rootContext.orientation.value === 'horizontal' },\n    estimateSize() {\n      return props.estimateSize ?? 28\n    },\n    getScrollElement() { return parentEl.value },\n    overscan: props.overscan ?? 12,\n  },\n)\n\nconst virtualizedItems = computed(() => virtualizer.value.getVirtualItems().map((item) => {\n  const defaultNode = slots.default!({\n    option: props.options[item.index],\n    virtualizer: virtualizer.value,\n    virtualItem: item,\n  })[0]\n\n  const targetNode = defaultNode.type === Fragment && Array.isArray(defaultNode.children)\n    ? defaultNode.children[0] as VNode\n    : defaultNode\n\n  return {\n    item,\n    is: cloneVNode(targetNode, {\n      'key': `${item.key}`,\n      'data-index': item.index,\n      'aria-setsize': props.options.length,\n      'aria-posinset': item.index + 1,\n      'style': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        transform: `translateY(${item.start}px)`,\n        overflowAnchor: 'none',\n      },\n    }),\n  }\n}))\n\nrootContext.virtualFocusHook.on((event) => {\n  const index = props.options.findIndex((option) => {\n    if (Array.isArray(rootContext.modelValue.value))\n      return compare(option, rootContext.modelValue.value[0], rootContext.by)\n    else\n      return compare(option, rootContext.modelValue.value!, rootContext.by)\n  })\n  if (index !== -1) {\n    event?.preventDefault()\n\n    virtualizer.value.scrollToIndex(index, { align: 'start' })\n    requestAnimationFrame(() => {\n      const item = queryCheckedElement(parentEl.value)\n      if (item) {\n        rootContext.changeHighlight(item)\n        if (event)\n          item?.focus()\n      }\n    })\n  }\n  else {\n    rootContext.highlightFirstItem()\n  }\n})\n\nrootContext.virtualHighlightHook.on((value) => {\n  const index = props.options.findIndex((option) => {\n    return compare(option, value, rootContext.by)\n  })\n  virtualizer.value.scrollToIndex(index, { align: 'start' })\n  requestAnimationFrame(() => {\n    const item = queryCheckedElement(parentEl.value)\n    if (item)\n      rootContext.changeHighlight(item)\n  })\n})\n\n// Reset `search` 1 second after it was last updated\nconst search = refAutoReset('', 1000)\nconst optionsWithMetadata = computed(() => {\n  const parseTextContent = (option: T) => {\n    if (props.textContent)\n      return props.textContent(option)\n    else\n      return option?.toString().toLowerCase()\n  }\n\n  return props.options.map((option, index) => ({\n    index,\n    textContent: parseTextContent(option),\n  }))\n})\n\nfunction handleMultipleReplace(event: Event, intent: 'first' | 'last' | 'prev' | 'next') {\n  if (!rootContext.firstValue?.value || !rootContext.multiple.value || !Array.isArray(rootContext.modelValue.value))\n    return\n\n  const collection = getItems().filter(i => i.ref.dataset.disabled !== '')\n  const lastValue = collection.find(i => i.ref === rootContext.highlightedElement.value)?.value\n  if (!lastValue)\n    return\n\n  let value: T[] | null = null\n  switch (intent) {\n    case 'prev':\n    case 'next': {\n      value = findValuesBetween(props.options, rootContext.firstValue.value as T, lastValue)\n      break\n    }\n    case 'first': {\n      value = findValuesBetween(props.options, rootContext.firstValue.value as T, props.options?.[0])\n      break\n    }\n    case 'last': {\n      value = findValuesBetween(props.options, rootContext.firstValue.value as T, props.options?.[props.options.length - 1])\n      break\n    }\n  }\n  rootContext.modelValue.value = value\n}\n\nrootContext.virtualKeydownHook.on((event) => {\n  const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n  const isTabKey = event.key === 'Tab' && !isMetaKey\n  if (isTabKey)\n    return\n\n  let intent = MAP_KEY_TO_FOCUS_INTENT[event.key]\n\n  // Meta + A, select all feature\n  if (isMetaKey && event.key === 'a' && rootContext.multiple.value) {\n    event.preventDefault()\n    rootContext.modelValue.value = [...props.options]\n    // purposely make the focus to last\n    intent = 'last'\n  }\n  else if (event.shiftKey && intent) {\n    handleMultipleReplace(event, intent)\n  }\n\n  if (['first', 'last'].includes(intent)) {\n    event.preventDefault()\n\n    const index = intent === 'first' ? 0 : props.options.length - 1\n    virtualizer.value.scrollToIndex(index)\n    requestAnimationFrame(() => {\n      const items = getItems()\n      const item = intent === 'first' ? items[0] : items[items.length - 1]\n      if (item)\n        rootContext.changeHighlight(item.ref)\n    })\n  }\n  else if (!intent && !isMetaKey) {\n    search.value += event.key\n    const currentIndex = Number(getActiveElement()?.getAttribute('data-index'))\n    const currentMatch = optionsWithMetadata.value[currentIndex].textContent\n    const filteredOptions = optionsWithMetadata.value.map(i => i.textContent ?? '')\n    const next = getNextMatch(filteredOptions, search.value, currentMatch)\n\n    const nextMatch = optionsWithMetadata.value.find(option => option.textContent === next)\n    if (nextMatch) {\n      virtualizer.value.scrollToIndex(nextMatch.index, { align: 'start' })\n      requestAnimationFrame(() => {\n        const item = parentEl.value.querySelector(`[data-index=\"${nextMatch.index}\"]`)\n        if (item instanceof HTMLElement)\n          rootContext.changeHighlight(item)\n      })\n    }\n  }\n})\n</script>\n\n<template>\n  <div\n    data-reka-virtualizer\n    :style=\"{\n      position: 'relative',\n      width: '100%',\n      height: `${virtualizer.getTotalSize()}px`,\n    }\"\n  >\n    <component\n      :is=\"is\"\n      v-for=\"{ is, item } in virtualizedItems\"\n      :key=\"item.index\"\n    />\n  </div>\n</template>\n", "<script lang=\"ts\">\nexport interface ListboxVirtualizerProps<T extends AcceptableValue = AcceptableValue> {\n  /** List of items */\n  options: T[]\n  /** Number of items rendered outside the visible area */\n  overscan?: number\n  /** Estimated size (in px) of each item */\n  estimateSize?: number\n  /** Text content for each item to achieve type-ahead feature */\n  textContent?: (option: T) => string\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { VirtualItem, Virtualizer } from '@tanstack/vue-virtual'\nimport type { Ref, VNode } from 'vue'\nimport type { AcceptableValue } from '@/shared/types'\nimport { useVirtualizer } from '@tanstack/vue-virtual'\nimport { useParentElement } from '@vueuse/core'\nimport { refAutoReset } from '@vueuse/shared'\nimport { cloneVNode, computed, Fragment, useSlots } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { MAP_KEY_TO_FOCUS_INTENT } from '@/RovingFocus/utils'\nimport { findValuesBetween, getActiveElement } from '@/shared'\nimport { getNextMatch } from '@/shared/useTypeahead'\nimport { injectListboxRootContext } from './ListboxRoot.vue'\nimport { compare, queryCheckedElement } from './utils'\n\nconst props = defineProps<ListboxVirtualizerProps<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    option: T\n    virtualizer: Virtualizer<HTMLElement, Element>\n    virtualItem: VirtualItem\n  }) => any\n}>()\n\nconst slots = useSlots()\nconst rootContext = injectListboxRootContext()\nconst parentEl = useParentElement() as Ref<HTMLElement>\nconst { getItems } = useCollection<{ value: T }>()\n\n// set virtual true when this component mounted\nrootContext.isVirtual.value = true\n\nconst padding = computed(() => {\n  const el = parentEl.value\n  if (!el) {\n    return { start: 0, end: 0 }\n  }\n  else {\n    const styles = window.getComputedStyle(el)\n    return {\n      start: Number.parseFloat(styles.paddingBlockStart || styles.paddingTop),\n      end: Number.parseFloat(styles.paddingBlockEnd || styles.paddingBottom),\n    }\n  }\n})\n\nconst virtualizer = useVirtualizer(\n  {\n    get scrollPaddingStart() { return padding.value.start },\n    get scrollPaddingEnd() { return padding.value.end },\n    get count() { return props.options.length },\n    get horizontal() { return rootContext.orientation.value === 'horizontal' },\n    estimateSize() {\n      return props.estimateSize ?? 28\n    },\n    getScrollElement() { return parentEl.value },\n    overscan: props.overscan ?? 12,\n  },\n)\n\nconst virtualizedItems = computed(() => virtualizer.value.getVirtualItems().map((item) => {\n  const defaultNode = slots.default!({\n    option: props.options[item.index],\n    virtualizer: virtualizer.value,\n    virtualItem: item,\n  })[0]\n\n  const targetNode = defaultNode.type === Fragment && Array.isArray(defaultNode.children)\n    ? defaultNode.children[0] as VNode\n    : defaultNode\n\n  return {\n    item,\n    is: cloneVNode(targetNode, {\n      'key': `${item.key}`,\n      'data-index': item.index,\n      'aria-setsize': props.options.length,\n      'aria-posinset': item.index + 1,\n      'style': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        transform: `translateY(${item.start}px)`,\n        overflowAnchor: 'none',\n      },\n    }),\n  }\n}))\n\nrootContext.virtualFocusHook.on((event) => {\n  const index = props.options.findIndex((option) => {\n    if (Array.isArray(rootContext.modelValue.value))\n      return compare(option, rootContext.modelValue.value[0], rootContext.by)\n    else\n      return compare(option, rootContext.modelValue.value!, rootContext.by)\n  })\n  if (index !== -1) {\n    event?.preventDefault()\n\n    virtualizer.value.scrollToIndex(index, { align: 'start' })\n    requestAnimationFrame(() => {\n      const item = queryCheckedElement(parentEl.value)\n      if (item) {\n        rootContext.changeHighlight(item)\n        if (event)\n          item?.focus()\n      }\n    })\n  }\n  else {\n    rootContext.highlightFirstItem()\n  }\n})\n\nrootContext.virtualHighlightHook.on((value) => {\n  const index = props.options.findIndex((option) => {\n    return compare(option, value, rootContext.by)\n  })\n  virtualizer.value.scrollToIndex(index, { align: 'start' })\n  requestAnimationFrame(() => {\n    const item = queryCheckedElement(parentEl.value)\n    if (item)\n      rootContext.changeHighlight(item)\n  })\n})\n\n// Reset `search` 1 second after it was last updated\nconst search = refAutoReset('', 1000)\nconst optionsWithMetadata = computed(() => {\n  const parseTextContent = (option: T) => {\n    if (props.textContent)\n      return props.textContent(option)\n    else\n      return option?.toString().toLowerCase()\n  }\n\n  return props.options.map((option, index) => ({\n    index,\n    textContent: parseTextContent(option),\n  }))\n})\n\nfunction handleMultipleReplace(event: Event, intent: 'first' | 'last' | 'prev' | 'next') {\n  if (!rootContext.firstValue?.value || !rootContext.multiple.value || !Array.isArray(rootContext.modelValue.value))\n    return\n\n  const collection = getItems().filter(i => i.ref.dataset.disabled !== '')\n  const lastValue = collection.find(i => i.ref === rootContext.highlightedElement.value)?.value\n  if (!lastValue)\n    return\n\n  let value: T[] | null = null\n  switch (intent) {\n    case 'prev':\n    case 'next': {\n      value = findValuesBetween(props.options, rootContext.firstValue.value as T, lastValue)\n      break\n    }\n    case 'first': {\n      value = findValuesBetween(props.options, rootContext.firstValue.value as T, props.options?.[0])\n      break\n    }\n    case 'last': {\n      value = findValuesBetween(props.options, rootContext.firstValue.value as T, props.options?.[props.options.length - 1])\n      break\n    }\n  }\n  rootContext.modelValue.value = value\n}\n\nrootContext.virtualKeydownHook.on((event) => {\n  const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n  const isTabKey = event.key === 'Tab' && !isMetaKey\n  if (isTabKey)\n    return\n\n  let intent = MAP_KEY_TO_FOCUS_INTENT[event.key]\n\n  // Meta + A, select all feature\n  if (isMetaKey && event.key === 'a' && rootContext.multiple.value) {\n    event.preventDefault()\n    rootContext.modelValue.value = [...props.options]\n    // purposely make the focus to last\n    intent = 'last'\n  }\n  else if (event.shiftKey && intent) {\n    handleMultipleReplace(event, intent)\n  }\n\n  if (['first', 'last'].includes(intent)) {\n    event.preventDefault()\n\n    const index = intent === 'first' ? 0 : props.options.length - 1\n    virtualizer.value.scrollToIndex(index)\n    requestAnimationFrame(() => {\n      const items = getItems()\n      const item = intent === 'first' ? items[0] : items[items.length - 1]\n      if (item)\n        rootContext.changeHighlight(item.ref)\n    })\n  }\n  else if (!intent && !isMetaKey) {\n    search.value += event.key\n    const currentIndex = Number(getActiveElement()?.getAttribute('data-index'))\n    const currentMatch = optionsWithMetadata.value[currentIndex].textContent\n    const filteredOptions = optionsWithMetadata.value.map(i => i.textContent ?? '')\n    const next = getNextMatch(filteredOptions, search.value, currentMatch)\n\n    const nextMatch = optionsWithMetadata.value.find(option => option.textContent === next)\n    if (nextMatch) {\n      virtualizer.value.scrollToIndex(nextMatch.index, { align: 'start' })\n      requestAnimationFrame(() => {\n        const item = parentEl.value.querySelector(`[data-index=\"${nextMatch.index}\"]`)\n        if (item instanceof HTMLElement)\n          rootContext.changeHighlight(item)\n      })\n    }\n  }\n})\n</script>\n\n<template>\n  <div\n    data-reka-virtualizer\n    :style=\"{\n      position: 'relative',\n      width: '100%',\n      height: `${virtualizer.getTotalSize()}px`,\n    }\"\n  >\n    <component\n      :is=\"is\"\n      v-for=\"{ is, item } in virtualizedItems\"\n      :key=\"item.index\"\n    />\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { ListboxRootProps } from '@/Listbox'\nimport type { AcceptableValue, GenericComponentInstance } from '@/shared/types'\nimport { usePrimitiveElement } from '@/Primitive'\nimport { createContext, useDirection, useFilter } from '@/shared'\n\ntype ComboboxRootContext<T> = {\n  modelValue: Ref<T | Array<T>>\n  multiple: Ref<boolean>\n  disabled: Ref<boolean>\n  open: Ref<boolean>\n  onOpenChange: (value: boolean) => void\n  isUserInputted: Ref<boolean>\n  isVirtual: Ref<boolean>\n  contentId: string\n  inputElement: Ref<HTMLInputElement | undefined>\n  onInputElementChange: (el: HTMLInputElement) => void\n  triggerElement: Ref<HTMLElement | undefined>\n  onTriggerElementChange: (el: HTMLElement) => void\n  highlightedElement: Ref<HTMLElement | undefined>\n  parentElement: Ref<HTMLElement | undefined>\n  resetSearchTermOnSelect: Ref<boolean>\n  onResetSearchTerm: EventHookOn\n  allItems: Ref<Map<string, string>>\n  allGroups: Ref<Map<string, Set<string>>>\n  filterSearch: Ref<string>\n  filterState: ComputedRef<{ count: number, items: Map<string, number>, groups: Set<string> }>\n  ignoreFilter: Ref<boolean>\n  openOnFocus: Ref<boolean>\n  openOnClick: Ref<boolean>\n}\n\nexport const [injectComboboxRootContext, provideComboboxRootContext]\n  = createContext<ComboboxRootContext<AcceptableValue>>('ComboboxRoot')\n\nexport type ComboboxRootEmits<T = AcceptableValue> = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: T]\n  /** Event handler when highlighted element changes. */\n  'highlight': [payload: { ref: HTMLElement, value: T } | undefined]\n  /** Event handler called when the open state of the combobox changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface ComboboxRootProps<T = AcceptableValue> extends Omit<ListboxRootProps<T>, 'orientation' | 'selectionBehavior'> {\n  /** The controlled open state of the Combobox. Can be binded with with `v-model:open`. */\n  open?: boolean\n  /** The open state of the combobox when it is initially rendered. <br> Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /**\n   * Whether to reset the searchTerm when the Combobox input blurred\n   * @defaultValue `true`\n   */\n  resetSearchTermOnBlur?: boolean\n  /**\n   * Whether to reset the searchTerm when the Combobox value is selected\n   * @defaultValue `true`\n   */\n  resetSearchTermOnSelect?: boolean\n  /**\n   * Whether to open the combobox when the input is focused\n   * @defaultValue `false`\n   */\n  openOnFocus?: boolean\n  /**\n   * Whether to open the combobox when the input is clicked\n   * @defaultValue `false`\n   */\n  openOnClick?: boolean\n  /**\n   * When `true`, disable the default filters\n   */\n  ignoreFilter?: boolean\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { EventHookOn } from '@vueuse/core'\nimport { createEventHook, useVModel } from '@vueuse/core'\nimport { computed, getCurrentInstance, nextTick, onMounted, ref, toRefs } from 'vue'\nimport { ListboxRoot } from '@/Listbox'\nimport { PopperRoot } from '@/Popper'\n\nconst props = withDefaults(defineProps<ComboboxRootProps<T>>(), {\n  open: undefined,\n  resetSearchTermOnBlur: true,\n  resetSearchTermOnSelect: true,\n  openOnFocus: false,\n  openOnClick: false,\n})\nconst emits = defineEmits<ComboboxRootEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n    /** Current active value */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { primitiveElement, currentElement: parentElement } = usePrimitiveElement<GenericComponentInstance<typeof ListboxRoot>>()\nconst { multiple, disabled, ignoreFilter, resetSearchTermOnSelect, openOnFocus, openOnClick, dir: propDir } = toRefs(props)\n\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props as ComboboxRootProps<T>, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? (multiple.value ? [] : undefined),\n  passive: (props.modelValue === undefined) as false,\n  deep: true,\n}) as Ref<T | T[]>\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nasync function onOpenChange(val: boolean) {\n  open.value = val\n  filterSearch.value = ''\n\n  if (val) {\n    // make sure dom is ready then only highlight the selected\n    await nextTick()\n    primitiveElement.value?.highlightSelected()\n    isUserInputted.value = true\n  }\n  else {\n    isUserInputted.value = false\n  }\n\n  inputElement.value?.focus()\n  setTimeout(() => {\n    if (!val && props.resetSearchTermOnBlur)\n      resetSearchTerm.trigger()\n  }, 1)\n}\n\nconst resetSearchTerm = createEventHook()\nconst isUserInputted = ref(false)\nconst isVirtual = ref(false)\nconst inputElement = ref<HTMLInputElement>()\nconst triggerElement = ref<HTMLElement>()\n\nconst highlightedElement = computed(() => primitiveElement.value?.highlightedElement ?? undefined)\n\nconst allItems = ref<Map<string, string>>(new Map())\nconst allGroups = ref<Map<string, Set<string>>>(new Map())\n\nconst { contains } = useFilter({ sensitivity: 'base' })\n\nconst filterSearch = ref('')\n\nconst filterState = computed<{\n  count: number\n  items: Map<string, number>\n  groups: Set<string>\n}>((oldValue) => {\n  if (!filterSearch.value || props.ignoreFilter || isVirtual.value) {\n    // Do nothing, each item will know to show itself because search is empty\n    return {\n      count: allItems.value.size,\n      items: oldValue?.items ?? new Map(),\n      groups: oldValue?.groups ?? new Set(allGroups.value.keys()),\n    }\n  }\n\n  let itemCount = 0\n  const filteredItems = new Map<string, number>()\n  const filteredGroups = new Set<string>()\n\n  // Check which items should be included\n  for (const [id, value] of allItems.value) {\n    const score = contains(value, filterSearch.value)\n    filteredItems.set(id, score ? 1 : 0)\n    if (score)\n      itemCount++\n  }\n\n  // Check which groups have at least 1 item shown\n  for (const [groupId, group] of allGroups.value) {\n    for (const itemId of group) {\n      if (filteredItems.get(itemId)! > 0) {\n        filteredGroups.add(groupId)\n        break\n      }\n    }\n  }\n\n  return {\n    count: itemCount,\n    items: filteredItems,\n    groups: filteredGroups,\n  }\n})\n\nconst inst = getCurrentInstance()\nonMounted(() => {\n  if (inst?.exposed) {\n    inst.exposed.highlightItem = primitiveElement.value?.highlightItem\n    inst.exposed.highlightFirstItem = primitiveElement.value?.highlightFirstItem\n    inst.exposed.highlightSelected = primitiveElement.value?.highlightSelected\n  }\n})\n\ndefineExpose({\n  filtered: filterState,\n  highlightedElement,\n  highlightItem: primitiveElement.value?.highlightItem,\n  highlightFirstItem: primitiveElement.value?.highlightFirstItem,\n  highlightSelected: primitiveElement.value?.highlightSelected,\n})\n\nprovideComboboxRootContext({\n  modelValue,\n  multiple,\n  disabled,\n  open,\n  onOpenChange,\n  contentId: '',\n  isUserInputted,\n  isVirtual,\n  inputElement,\n  highlightedElement,\n  onInputElementChange: val => inputElement.value = val,\n  triggerElement,\n  onTriggerElementChange: val => triggerElement.value = val,\n  parentElement,\n  resetSearchTermOnSelect,\n  onResetSearchTerm: resetSearchTerm.on,\n  allItems,\n  allGroups,\n  filterSearch,\n  filterState,\n  ignoreFilter,\n  openOnFocus,\n  openOnClick,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <ListboxRoot\n      ref=\"primitiveElement\"\n      v-bind=\"$attrs\"\n      v-model=\"modelValue\"\n      :style=\"{\n        pointerEvents: open ? 'auto' : undefined,\n      }\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :dir=\"dir\"\n      :multiple=\"multiple\"\n      :name=\"name\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :highlight-on-hover=\"true\"\n      :by=\"props.by as any\"\n      @highlight=\"emits('highlight', $event as any)\"\n    >\n      <slot\n        :open=\"open\"\n        :model-value=\"modelValue\"\n      />\n    </ListboxRoot>\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { ListboxRootProps } from '@/Listbox'\nimport type { AcceptableValue, GenericComponentInstance } from '@/shared/types'\nimport { usePrimitiveElement } from '@/Primitive'\nimport { createContext, useDirection, useFilter } from '@/shared'\n\ntype ComboboxRootContext<T> = {\n  modelValue: Ref<T | Array<T>>\n  multiple: Ref<boolean>\n  disabled: Ref<boolean>\n  open: Ref<boolean>\n  onOpenChange: (value: boolean) => void\n  isUserInputted: Ref<boolean>\n  isVirtual: Ref<boolean>\n  contentId: string\n  inputElement: Ref<HTMLInputElement | undefined>\n  onInputElementChange: (el: HTMLInputElement) => void\n  triggerElement: Ref<HTMLElement | undefined>\n  onTriggerElementChange: (el: HTMLElement) => void\n  highlightedElement: Ref<HTMLElement | undefined>\n  parentElement: Ref<HTMLElement | undefined>\n  resetSearchTermOnSelect: Ref<boolean>\n  onResetSearchTerm: EventHookOn\n  allItems: Ref<Map<string, string>>\n  allGroups: Ref<Map<string, Set<string>>>\n  filterSearch: Ref<string>\n  filterState: ComputedRef<{ count: number, items: Map<string, number>, groups: Set<string> }>\n  ignoreFilter: Ref<boolean>\n  openOnFocus: Ref<boolean>\n  openOnClick: Ref<boolean>\n}\n\nexport const [injectComboboxRootContext, provideComboboxRootContext]\n  = createContext<ComboboxRootContext<AcceptableValue>>('ComboboxRoot')\n\nexport type ComboboxRootEmits<T = AcceptableValue> = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: T]\n  /** Event handler when highlighted element changes. */\n  'highlight': [payload: { ref: HTMLElement, value: T } | undefined]\n  /** Event handler called when the open state of the combobox changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface ComboboxRootProps<T = AcceptableValue> extends Omit<ListboxRootProps<T>, 'orientation' | 'selectionBehavior'> {\n  /** The controlled open state of the Combobox. Can be binded with with `v-model:open`. */\n  open?: boolean\n  /** The open state of the combobox when it is initially rendered. <br> Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /**\n   * Whether to reset the searchTerm when the Combobox input blurred\n   * @defaultValue `true`\n   */\n  resetSearchTermOnBlur?: boolean\n  /**\n   * Whether to reset the searchTerm when the Combobox value is selected\n   * @defaultValue `true`\n   */\n  resetSearchTermOnSelect?: boolean\n  /**\n   * Whether to open the combobox when the input is focused\n   * @defaultValue `false`\n   */\n  openOnFocus?: boolean\n  /**\n   * Whether to open the combobox when the input is clicked\n   * @defaultValue `false`\n   */\n  openOnClick?: boolean\n  /**\n   * When `true`, disable the default filters\n   */\n  ignoreFilter?: boolean\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { EventHookOn } from '@vueuse/core'\nimport { createEventHook, useVModel } from '@vueuse/core'\nimport { computed, getCurrentInstance, nextTick, onMounted, ref, toRefs } from 'vue'\nimport { ListboxRoot } from '@/Listbox'\nimport { PopperRoot } from '@/Popper'\n\nconst props = withDefaults(defineProps<ComboboxRootProps<T>>(), {\n  open: undefined,\n  resetSearchTermOnBlur: true,\n  resetSearchTermOnSelect: true,\n  openOnFocus: false,\n  openOnClick: false,\n})\nconst emits = defineEmits<ComboboxRootEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n    /** Current active value */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { primitiveElement, currentElement: parentElement } = usePrimitiveElement<GenericComponentInstance<typeof ListboxRoot>>()\nconst { multiple, disabled, ignoreFilter, resetSearchTermOnSelect, openOnFocus, openOnClick, dir: propDir } = toRefs(props)\n\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props as ComboboxRootProps<T>, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? (multiple.value ? [] : undefined),\n  passive: (props.modelValue === undefined) as false,\n  deep: true,\n}) as Ref<T | T[]>\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nasync function onOpenChange(val: boolean) {\n  open.value = val\n  filterSearch.value = ''\n\n  if (val) {\n    // make sure dom is ready then only highlight the selected\n    await nextTick()\n    primitiveElement.value?.highlightSelected()\n    isUserInputted.value = true\n  }\n  else {\n    isUserInputted.value = false\n  }\n\n  inputElement.value?.focus()\n  setTimeout(() => {\n    if (!val && props.resetSearchTermOnBlur)\n      resetSearchTerm.trigger()\n  }, 1)\n}\n\nconst resetSearchTerm = createEventHook()\nconst isUserInputted = ref(false)\nconst isVirtual = ref(false)\nconst inputElement = ref<HTMLInputElement>()\nconst triggerElement = ref<HTMLElement>()\n\nconst highlightedElement = computed(() => primitiveElement.value?.highlightedElement ?? undefined)\n\nconst allItems = ref<Map<string, string>>(new Map())\nconst allGroups = ref<Map<string, Set<string>>>(new Map())\n\nconst { contains } = useFilter({ sensitivity: 'base' })\n\nconst filterSearch = ref('')\n\nconst filterState = computed<{\n  count: number\n  items: Map<string, number>\n  groups: Set<string>\n}>((oldValue) => {\n  if (!filterSearch.value || props.ignoreFilter || isVirtual.value) {\n    // Do nothing, each item will know to show itself because search is empty\n    return {\n      count: allItems.value.size,\n      items: oldValue?.items ?? new Map(),\n      groups: oldValue?.groups ?? new Set(allGroups.value.keys()),\n    }\n  }\n\n  let itemCount = 0\n  const filteredItems = new Map<string, number>()\n  const filteredGroups = new Set<string>()\n\n  // Check which items should be included\n  for (const [id, value] of allItems.value) {\n    const score = contains(value, filterSearch.value)\n    filteredItems.set(id, score ? 1 : 0)\n    if (score)\n      itemCount++\n  }\n\n  // Check which groups have at least 1 item shown\n  for (const [groupId, group] of allGroups.value) {\n    for (const itemId of group) {\n      if (filteredItems.get(itemId)! > 0) {\n        filteredGroups.add(groupId)\n        break\n      }\n    }\n  }\n\n  return {\n    count: itemCount,\n    items: filteredItems,\n    groups: filteredGroups,\n  }\n})\n\nconst inst = getCurrentInstance()\nonMounted(() => {\n  if (inst?.exposed) {\n    inst.exposed.highlightItem = primitiveElement.value?.highlightItem\n    inst.exposed.highlightFirstItem = primitiveElement.value?.highlightFirstItem\n    inst.exposed.highlightSelected = primitiveElement.value?.highlightSelected\n  }\n})\n\ndefineExpose({\n  filtered: filterState,\n  highlightedElement,\n  highlightItem: primitiveElement.value?.highlightItem,\n  highlightFirstItem: primitiveElement.value?.highlightFirstItem,\n  highlightSelected: primitiveElement.value?.highlightSelected,\n})\n\nprovideComboboxRootContext({\n  modelValue,\n  multiple,\n  disabled,\n  open,\n  onOpenChange,\n  contentId: '',\n  isUserInputted,\n  isVirtual,\n  inputElement,\n  highlightedElement,\n  onInputElementChange: val => inputElement.value = val,\n  triggerElement,\n  onTriggerElementChange: val => triggerElement.value = val,\n  parentElement,\n  resetSearchTermOnSelect,\n  onResetSearchTerm: resetSearchTerm.on,\n  allItems,\n  allGroups,\n  filterSearch,\n  filterState,\n  ignoreFilter,\n  openOnFocus,\n  openOnClick,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <ListboxRoot\n      ref=\"primitiveElement\"\n      v-bind=\"$attrs\"\n      v-model=\"modelValue\"\n      :style=\"{\n        pointerEvents: open ? 'auto' : undefined,\n      }\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :dir=\"dir\"\n      :multiple=\"multiple\"\n      :name=\"name\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :highlight-on-hover=\"true\"\n      :by=\"props.by as any\"\n      @highlight=\"emits('highlight', $event as any)\"\n    >\n      <slot\n        :open=\"open\"\n        :model-value=\"modelValue\"\n      />\n    </ListboxRoot>\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { DismissableLayerEmits, DismissableLayerProps } from '@/DismissableLayer'\nimport type { PopperContentProps } from '@/Popper'\n\nimport { createContext, useForwardExpose, useForwardProps, useHideOthers } from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\n\nexport type ComboboxContentImplEmits = DismissableLayerEmits\n\nexport interface ComboboxContentImplProps extends PopperContentProps, DismissableLayerProps {\n  /**\n   * The positioning mode to use, <br>\n   * `inline` is the default and you can control the position using CSS. <br>\n   * `popper` positions content in the same way as our other primitives, for example `Popover` or `DropdownMenu`.\n   */\n  position?: 'inline' | 'popper'\n  /** The document.body will be lock, and scrolling will be disabled. */\n  bodyLock?: boolean\n}\n\nexport const [injectComboboxContentContext, provideComboboxContentContext]\n  = createContext<{\n    position: Ref<'inline' | 'popper'>\n  }>('ComboboxContent')\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted, ref, toRefs } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { ListboxContent } from '@/Listbox'\nimport { PopperContent } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxContentImplProps>(), {\n  position: 'inline',\n})\nconst emits = defineEmits<ComboboxContentImplEmits>()\n\nconst { position } = toRefs(props)\nconst rootContext = injectComboboxRootContext()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nuseBodyScrollLock(props.bodyLock)\nuseHideOthers(rootContext.parentElement)\n\nconst pickedProps = computed(() => {\n  if (props.position === 'popper')\n    return props\n  else return {}\n})\n\nconst forwardedProps = useForwardProps(pickedProps.value)\n\nconst popperStyle = {\n  // Ensure border-box for floating-ui calculations\n  'boxSizing': 'border-box',\n  '--reka-combobox-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n  '--reka-combobox-content-available-width':\n        'var(--reka-popper-available-width)',\n  '--reka-combobox-content-available-height':\n        'var(--reka-popper-available-height)',\n  '--reka-combobox-trigger-width': 'var(--reka-popper-anchor-width)',\n  '--reka-combobox-trigger-height': 'var(--reka-popper-anchor-height)',\n}\n\nprovideComboboxContentContext({ position })\n\n// Handle case where input position within the content\nconst isInputWithinContent = ref(false)\nonMounted(() => {\n  if (rootContext.inputElement.value) {\n    isInputWithinContent.value = currentElement.value.contains(rootContext.inputElement.value)\n    if (isInputWithinContent.value) {\n      rootContext.inputElement.value.focus()\n    }\n  }\n})\n\nonUnmounted(() => {\n  if (isInputWithinContent.value) {\n    rootContext.triggerElement.value?.focus()\n  }\n})\n</script>\n\n<template>\n  <ListboxContent as-child>\n    <DismissableLayer\n      as-child\n      :disable-outside-pointer-events=\"disableOutsidePointerEvents\"\n      @dismiss=\"rootContext.onOpenChange(false)\"\n      @focus-outside=\"(ev) => {\n        // if clicking inside the combobox, prevent dismiss\n        if (rootContext.parentElement.value?.contains(ev.target as Node)) ev.preventDefault()\n        emits('focusOutside', ev)\n      }\"\n      @interact-outside=\"emits('interactOutside', $event)\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @pointer-down-outside=\"(ev) => {\n        // if clicking inside the combobox, prevent dismiss\n        if (rootContext.parentElement.value?.contains(ev.target as Node)) ev.preventDefault()\n        emits('pointerDownOutside', ev)\n      }\"\n    >\n      <component\n        :is=\"position === 'popper' ? PopperContent : Primitive\"\n        v-bind=\"{ ...$attrs, ...forwardedProps }\"\n        :id=\"rootContext.contentId\"\n        :ref=\"forwardRef\"\n        :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n        :style=\"{\n          // flex layout so we can place the scroll buttons properly\n          display: 'flex',\n          flexDirection: 'column',\n          // reset the outline by default as the content MAY get focused\n          outline: 'none',\n          ...(position === 'popper' ? popperStyle : {}),\n        }\"\n      >\n        <slot />\n      </component>\n    </DismissableLayer>\n  </ListboxContent>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { DismissableLayerEmits, DismissableLayerProps } from '@/DismissableLayer'\nimport type { PopperContentProps } from '@/Popper'\n\nimport { createContext, useForwardExpose, useForwardProps, useHideOthers } from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\n\nexport type ComboboxContentImplEmits = DismissableLayerEmits\n\nexport interface ComboboxContentImplProps extends PopperContentProps, DismissableLayerProps {\n  /**\n   * The positioning mode to use, <br>\n   * `inline` is the default and you can control the position using CSS. <br>\n   * `popper` positions content in the same way as our other primitives, for example `Popover` or `DropdownMenu`.\n   */\n  position?: 'inline' | 'popper'\n  /** The document.body will be lock, and scrolling will be disabled. */\n  bodyLock?: boolean\n}\n\nexport const [injectComboboxContentContext, provideComboboxContentContext]\n  = createContext<{\n    position: Ref<'inline' | 'popper'>\n  }>('ComboboxContent')\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted, ref, toRefs } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { ListboxContent } from '@/Listbox'\nimport { PopperContent } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxContentImplProps>(), {\n  position: 'inline',\n})\nconst emits = defineEmits<ComboboxContentImplEmits>()\n\nconst { position } = toRefs(props)\nconst rootContext = injectComboboxRootContext()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nuseBodyScrollLock(props.bodyLock)\nuseHideOthers(rootContext.parentElement)\n\nconst pickedProps = computed(() => {\n  if (props.position === 'popper')\n    return props\n  else return {}\n})\n\nconst forwardedProps = useForwardProps(pickedProps.value)\n\nconst popperStyle = {\n  // Ensure border-box for floating-ui calculations\n  'boxSizing': 'border-box',\n  '--reka-combobox-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n  '--reka-combobox-content-available-width':\n        'var(--reka-popper-available-width)',\n  '--reka-combobox-content-available-height':\n        'var(--reka-popper-available-height)',\n  '--reka-combobox-trigger-width': 'var(--reka-popper-anchor-width)',\n  '--reka-combobox-trigger-height': 'var(--reka-popper-anchor-height)',\n}\n\nprovideComboboxContentContext({ position })\n\n// Handle case where input position within the content\nconst isInputWithinContent = ref(false)\nonMounted(() => {\n  if (rootContext.inputElement.value) {\n    isInputWithinContent.value = currentElement.value.contains(rootContext.inputElement.value)\n    if (isInputWithinContent.value) {\n      rootContext.inputElement.value.focus()\n    }\n  }\n})\n\nonUnmounted(() => {\n  if (isInputWithinContent.value) {\n    rootContext.triggerElement.value?.focus()\n  }\n})\n</script>\n\n<template>\n  <ListboxContent as-child>\n    <DismissableLayer\n      as-child\n      :disable-outside-pointer-events=\"disableOutsidePointerEvents\"\n      @dismiss=\"rootContext.onOpenChange(false)\"\n      @focus-outside=\"(ev) => {\n        // if clicking inside the combobox, prevent dismiss\n        if (rootContext.parentElement.value?.contains(ev.target as Node)) ev.preventDefault()\n        emits('focusOutside', ev)\n      }\"\n      @interact-outside=\"emits('interactOutside', $event)\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @pointer-down-outside=\"(ev) => {\n        // if clicking inside the combobox, prevent dismiss\n        if (rootContext.parentElement.value?.contains(ev.target as Node)) ev.preventDefault()\n        emits('pointerDownOutside', ev)\n      }\"\n    >\n      <component\n        :is=\"position === 'popper' ? PopperContent : Primitive\"\n        v-bind=\"{ ...$attrs, ...forwardedProps }\"\n        :id=\"rootContext.contentId\"\n        :ref=\"forwardRef\"\n        :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n        :style=\"{\n          // flex layout so we can place the scroll buttons properly\n          display: 'flex',\n          flexDirection: 'column',\n          // reset the outline by default as the content MAY get focused\n          outline: 'none',\n          ...(position === 'popper' ? popperStyle : {}),\n        }\"\n      >\n        <slot />\n      </component>\n    </DismissableLayer>\n  </ListboxContent>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\n\nexport interface ComboboxArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\nimport { useForwardExpose } from '@/shared'\nimport { injectComboboxContentContext } from './ComboboxContentImpl.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nconst rootContext = injectComboboxRootContext()\nconst contentContext = injectComboboxContentContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <PopperArrow\n    v-if=\"rootContext.open.value && contentContext.position.value === 'popper'\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\n\nexport interface ComboboxArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\nimport { useForwardExpose } from '@/shared'\nimport { injectComboboxContentContext } from './ComboboxContentImpl.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nconst rootContext = injectComboboxRootContext()\nconst contentContext = injectComboboxContentContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <PopperArrow\n    v-if=\"rootContext.open.value && contentContext.position.value === 'popper'\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ComboboxCancelProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxCancelProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst rootContext = injectComboboxRootContext()\n\nfunction handleClick() {\n  // Reset the search to show all options.\n  rootContext.filterSearch.value = ''\n\n  if (rootContext.inputElement.value) {\n    rootContext.inputElement.value.value = ''\n    rootContext.inputElement.value.focus()\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    :type=\"as === 'button' ? 'button' : undefined\"\n    v-bind=\"props\"\n    tabindex=\"-1\"\n    @click=\"handleClick\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ComboboxCancelProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxCancelProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst rootContext = injectComboboxRootContext()\n\nfunction handleClick() {\n  // Reset the search to show all options.\n  rootContext.filterSearch.value = ''\n\n  if (rootContext.inputElement.value) {\n    rootContext.inputElement.value.value = ''\n    rootContext.inputElement.value.focus()\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    :type=\"as === 'button' ? 'button' : undefined\"\n    v-bind=\"props\"\n    tabindex=\"-1\"\n    @click=\"handleClick\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ComboboxContentImplEmits, ComboboxContentImplProps } from './ComboboxContentImpl.vue'\n\nexport type ComboboxContentEmits = ComboboxContentImplEmits\nexport interface ComboboxContentProps extends ComboboxContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport ComboboxContentImpl from './ComboboxContentImpl.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = defineProps<ComboboxContentProps>()\nconst emits = defineEmits<ComboboxContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectComboboxRootContext()\n\nrootContext.contentId ||= useId(undefined, 'reka-combobox-content')\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <ComboboxContentImpl\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </ComboboxContentImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { ComboboxContentImplEmits, ComboboxContentImplProps } from './ComboboxContentImpl.vue'\n\nexport type ComboboxContentEmits = ComboboxContentImplEmits\nexport interface ComboboxContentProps extends ComboboxContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport ComboboxContentImpl from './ComboboxContentImpl.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = defineProps<ComboboxContentProps>()\nconst emits = defineEmits<ComboboxContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectComboboxRootContext()\n\nrootContext.contentId ||= useId(undefined, 'reka-combobox-content')\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <ComboboxContentImpl\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </ComboboxContentImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\n\nexport interface ComboboxEmptyProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = defineProps<ComboboxEmptyProps>()\nconst rootContext = injectComboboxRootContext()\n\nconst isRender = computed(() => rootContext.ignoreFilter.value\n  ? rootContext.allItems.value.size === 0\n  : rootContext.filterState.value.count === 0,\n)\n</script>\n\n<template>\n  <Primitive\n    v-if=\"isRender\"\n    v-bind=\"props\"\n  >\n    <slot>No options</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\n\nexport interface ComboboxEmptyProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = defineProps<ComboboxEmptyProps>()\nconst rootContext = injectComboboxRootContext()\n\nconst isRender = computed(() => rootContext.ignoreFilter.value\n  ? rootContext.allItems.value.size === 0\n  : rootContext.filterState.value.count === 0,\n)\n</script>\n\n<template>\n  <Primitive\n    v-if=\"isRender\"\n    v-bind=\"props\"\n  >\n    <slot>No options</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ListboxGroupProps } from '@/Listbox'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { createContext, useId } from '@/shared'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nexport interface ComboboxGroupProps extends ListboxGroupProps {}\n\ntype ComboboxGroupContext = {\n  id: string\n  labelId: string\n}\n\nexport const [injectComboboxGroupContext, provideComboboxGroupContext]\n  = createContext<ComboboxGroupContext>('ComboboxGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { ListboxGroup } from '@/Listbox'\n\nconst props = defineProps<ComboboxGroupProps>()\nconst id = useId(undefined, 'reka-combobox-group')\nconst rootContext = injectComboboxRootContext()\n\nconst isRender = computed(() => rootContext.ignoreFilter.value ? true : !rootContext.filterSearch.value ? true : rootContext.filterState.value.groups.has(id))\n\nconst context = provideComboboxGroupContext({\n  id,\n  labelId: '',\n})\n\nonMounted(() => {\n  if (!rootContext.allGroups.value.has(id))\n    rootContext.allGroups.value.set(id, new Set())\n})\nonUnmounted(() => {\n  rootContext.allGroups.value.delete(id)\n})\n</script>\n\n<template>\n  <ListboxGroup\n    :id=\"id\"\n    :aria-labelledby=\"context.labelId\"\n    v-bind=\"props\"\n    :hidden=\"isRender ? undefined : true\"\n  >\n    <slot />\n  </ListboxGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { ListboxGroupProps } from '@/Listbox'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { createContext, useId } from '@/shared'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nexport interface ComboboxGroupProps extends ListboxGroupProps {}\n\ntype ComboboxGroupContext = {\n  id: string\n  labelId: string\n}\n\nexport const [injectComboboxGroupContext, provideComboboxGroupContext]\n  = createContext<ComboboxGroupContext>('ComboboxGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { ListboxGroup } from '@/Listbox'\n\nconst props = defineProps<ComboboxGroupProps>()\nconst id = useId(undefined, 'reka-combobox-group')\nconst rootContext = injectComboboxRootContext()\n\nconst isRender = computed(() => rootContext.ignoreFilter.value ? true : !rootContext.filterSearch.value ? true : rootContext.filterState.value.groups.has(id))\n\nconst context = provideComboboxGroupContext({\n  id,\n  labelId: '',\n})\n\nonMounted(() => {\n  if (!rootContext.allGroups.value.has(id))\n    rootContext.allGroups.value.set(id, new Set())\n})\nonUnmounted(() => {\n  rootContext.allGroups.value.delete(id)\n})\n</script>\n\n<template>\n  <ListboxGroup\n    :id=\"id\"\n    :aria-labelledby=\"context.labelId\"\n    v-bind=\"props\"\n    :hidden=\"isRender ? undefined : true\"\n  >\n    <slot />\n  </ListboxGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { ListboxFilterEmits, ListboxFilterProps } from '@/Listbox'\nimport { useVModel } from '@vueuse/core'\nimport { nextTick, onMounted, watch } from 'vue'\nimport { usePrimitiveElement } from '@/Primitive'\n\nexport type ComboboxInputEmits = ListboxFilterEmits\nexport interface ComboboxInputProps extends ListboxFilterProps {\n  /** The display value of input for selected item. Does not work with `multiple`. */\n  displayValue?: (val: any) => string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { ListboxFilter } from '@/Listbox'\nimport { injectListboxRootContext } from '@/Listbox/ListboxRoot.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxInputProps>(), {\n  as: 'input',\n})\nconst emits = defineEmits<ComboboxInputEmits>()\n\nconst rootContext = injectComboboxRootContext()\nconst listboxContext = injectListboxRootContext()\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  passive: (props.modelValue === undefined) as false,\n})\n\nonMounted(() => {\n  if (currentElement.value)\n    rootContext.onInputElementChange(currentElement.value as HTMLInputElement)\n})\n\nfunction handleKeyDown(ev: KeyboardEvent) {\n  if (!rootContext.open.value)\n    rootContext.onOpenChange(true)\n}\n\nfunction handleInput(event: InputEvent) {\n  const target = event.target as HTMLInputElement\n  if (!rootContext.open.value) {\n    rootContext.onOpenChange(true)\n    nextTick(() => {\n      if (target.value) {\n        rootContext.filterSearch.value = target.value\n        listboxContext.highlightFirstItem()\n      }\n    })\n  }\n  else {\n    rootContext.filterSearch.value = target.value\n  }\n}\n\nfunction handleFocus() {\n  if (rootContext.openOnFocus.value && !rootContext.open.value)\n    rootContext.onOpenChange(true)\n}\n\nfunction handleClick() {\n  if (rootContext.openOnClick.value && !rootContext.open.value)\n    rootContext.onOpenChange(true)\n}\n\nfunction resetSearchTerm() {\n  const rootModelValue = rootContext.modelValue.value\n\n  if (props.displayValue) {\n    modelValue.value = props.displayValue(rootModelValue)\n  }\n  else if (!rootContext.multiple.value && rootModelValue && !Array.isArray(rootModelValue)) {\n    if (typeof rootModelValue !== 'object')\n      modelValue.value = rootModelValue.toString()\n    else modelValue.value = ''\n  }\n  else {\n    modelValue.value = ''\n  }\n\n  nextTick(() => {\n    // Temporary force reassign\n    // eslint-disable-next-line no-self-assign\n    modelValue.value = modelValue.value\n  })\n}\n\nrootContext.onResetSearchTerm(() => {\n  resetSearchTerm()\n})\n\nwatch(rootContext.modelValue, async () => {\n  if (!rootContext.isUserInputted.value && rootContext.resetSearchTermOnSelect.value)\n    resetSearchTerm()\n}, { immediate: true, deep: true })\n\nwatch(rootContext.filterState, () => {\n  // we exclude virtualized list as the state would be constantly updated,\n  // and only change highlight when there is no highlighted item\n  if (!rootContext.isVirtual.value && !rootContext.highlightedElement.value) {\n    listboxContext.highlightFirstItem()\n  }\n})\n</script>\n\n<template>\n  <ListboxFilter\n    ref=\"primitiveElement\"\n    v-model=\"modelValue\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :auto-focus=\"autoFocus\"\n    :disabled=\"disabled\"\n    :aria-expanded=\"rootContext.open.value\"\n    :aria-controls=\"rootContext.contentId\"\n    aria-autocomplete=\"list\"\n    role=\"combobox\"\n    autocomplete=\"off\"\n    @click=\"handleClick\"\n    @input=\"handleInput\"\n    @keydown.down.up.prevent=\"handleKeyDown\"\n    @focus=\"handleFocus\"\n  >\n    <slot />\n  </ListboxFilter>\n</template>\n", "<script lang=\"ts\">\nimport type { ListboxFilterEmits, ListboxFilterProps } from '@/Listbox'\nimport { useVModel } from '@vueuse/core'\nimport { nextTick, onMounted, watch } from 'vue'\nimport { usePrimitiveElement } from '@/Primitive'\n\nexport type ComboboxInputEmits = ListboxFilterEmits\nexport interface ComboboxInputProps extends ListboxFilterProps {\n  /** The display value of input for selected item. Does not work with `multiple`. */\n  displayValue?: (val: any) => string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { ListboxFilter } from '@/Listbox'\nimport { injectListboxRootContext } from '@/Listbox/ListboxRoot.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxInputProps>(), {\n  as: 'input',\n})\nconst emits = defineEmits<ComboboxInputEmits>()\n\nconst rootContext = injectComboboxRootContext()\nconst listboxContext = injectListboxRootContext()\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  passive: (props.modelValue === undefined) as false,\n})\n\nonMounted(() => {\n  if (currentElement.value)\n    rootContext.onInputElementChange(currentElement.value as HTMLInputElement)\n})\n\nfunction handleKeyDown(ev: KeyboardEvent) {\n  if (!rootContext.open.value)\n    rootContext.onOpenChange(true)\n}\n\nfunction handleInput(event: InputEvent) {\n  const target = event.target as HTMLInputElement\n  if (!rootContext.open.value) {\n    rootContext.onOpenChange(true)\n    nextTick(() => {\n      if (target.value) {\n        rootContext.filterSearch.value = target.value\n        listboxContext.highlightFirstItem()\n      }\n    })\n  }\n  else {\n    rootContext.filterSearch.value = target.value\n  }\n}\n\nfunction handleFocus() {\n  if (rootContext.openOnFocus.value && !rootContext.open.value)\n    rootContext.onOpenChange(true)\n}\n\nfunction handleClick() {\n  if (rootContext.openOnClick.value && !rootContext.open.value)\n    rootContext.onOpenChange(true)\n}\n\nfunction resetSearchTerm() {\n  const rootModelValue = rootContext.modelValue.value\n\n  if (props.displayValue) {\n    modelValue.value = props.displayValue(rootModelValue)\n  }\n  else if (!rootContext.multiple.value && rootModelValue && !Array.isArray(rootModelValue)) {\n    if (typeof rootModelValue !== 'object')\n      modelValue.value = rootModelValue.toString()\n    else modelValue.value = ''\n  }\n  else {\n    modelValue.value = ''\n  }\n\n  nextTick(() => {\n    // Temporary force reassign\n    // eslint-disable-next-line no-self-assign\n    modelValue.value = modelValue.value\n  })\n}\n\nrootContext.onResetSearchTerm(() => {\n  resetSearchTerm()\n})\n\nwatch(rootContext.modelValue, async () => {\n  if (!rootContext.isUserInputted.value && rootContext.resetSearchTermOnSelect.value)\n    resetSearchTerm()\n}, { immediate: true, deep: true })\n\nwatch(rootContext.filterState, () => {\n  // we exclude virtualized list as the state would be constantly updated,\n  // and only change highlight when there is no highlighted item\n  if (!rootContext.isVirtual.value && !rootContext.highlightedElement.value) {\n    listboxContext.highlightFirstItem()\n  }\n})\n</script>\n\n<template>\n  <ListboxFilter\n    ref=\"primitiveElement\"\n    v-model=\"modelValue\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :auto-focus=\"autoFocus\"\n    :disabled=\"disabled\"\n    :aria-expanded=\"rootContext.open.value\"\n    :aria-controls=\"rootContext.contentId\"\n    aria-autocomplete=\"list\"\n    role=\"combobox\"\n    autocomplete=\"off\"\n    @click=\"handleClick\"\n    @input=\"handleInput\"\n    @keydown.down.up.prevent=\"handleKeyDown\"\n    @focus=\"handleFocus\"\n  >\n    <slot />\n  </ListboxFilter>\n</template>\n", "<script lang=\"ts\">\nimport type { ListboxItemEmits, ListboxItemProps } from '@/Listbox'\nimport type { AcceptableValue } from '@/shared/types'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { usePrimitiveElement } from '@/Primitive'\nimport { useId } from '@/shared'\nimport { injectComboboxGroupContext } from './ComboboxGroup.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nexport { injectListboxItemContext as injectComboboxItemContext } from '@/Listbox'\n\nexport type ComboboxItemEmits<T = AcceptableValue> = ListboxItemEmits<T>\nexport interface ComboboxItemProps<T = AcceptableValue> extends ListboxItemProps<T> {\n  /**\n   * A string representation of the item contents.\n   *\n   * If the children are not plain text, then the `textValue` prop must also be set to a plain text representation, which will be used for autocomplete in the ComboBox.\n   */\n  textValue?: string\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport { ListboxItem } from '@/Listbox'\n\nconst props = defineProps<ComboboxItemProps<T>>()\nconst emits = defineEmits<ComboboxItemEmits<T>>()\n\nconst id = useId(undefined, 'reka-combobox-item')\nconst rootContext = injectComboboxRootContext()\nconst groupContext = injectComboboxGroupContext(null)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nif (props.value === '') {\n  throw new Error(\n    'A <ComboboxItem /> must have a value prop that is not an empty string. This is because the Combobox value can be set to an empty string to clear the selection and show the placeholder.',\n  )\n}\n\nconst isRender = computed(() => {\n  if (rootContext.isVirtual.value || rootContext.ignoreFilter.value || !rootContext.filterSearch.value) {\n    return true\n  }\n  else {\n    const filteredCurrentItem = rootContext.filterState.value.items.get(id)\n    // If the filtered items is undefined means not in the all times map yet\n    // Do the first render to add into the map\n    if (filteredCurrentItem === undefined) {\n      return true\n    }\n\n    // Check with filter\n    return filteredCurrentItem > 0\n  }\n})\n\nonMounted(() => {\n  // textValue to perform filter\n  rootContext.allItems.value.set(id, props.textValue || currentElement.value.textContent || currentElement.value.innerText)\n\n  const groupId = groupContext?.id\n  if (groupId) {\n    if (!rootContext.allGroups.value.has(groupId)) {\n      rootContext.allGroups.value.set(groupId, new Set([id]))\n    }\n    else {\n      rootContext.allGroups.value.get(groupId)?.add(id)\n    }\n  }\n})\nonUnmounted(() => {\n  rootContext.allItems.value.delete(id)\n})\n</script>\n\n<template>\n  <ListboxItem\n    v-if=\"isRender\"\n    v-bind=\"props\"\n    :id=\"id\"\n    ref=\"primitiveElement\"\n    :disabled=\"rootContext.disabled.value || disabled\"\n    @select=\"(event) => {\n      emits('select', event as any)\n      if (event.defaultPrevented)\n        return\n\n      if (!rootContext.multiple.value && !disabled && !rootContext.disabled.value) {\n        event.preventDefault()\n        rootContext.onOpenChange(false)\n        rootContext.modelValue.value = props.value\n      }\n    }\"\n  >\n    <slot>{{ value }}</slot>\n  </ListboxItem>\n</template>\n", "<script lang=\"ts\">\nimport type { ListboxItemEmits, ListboxItemProps } from '@/Listbox'\nimport type { AcceptableValue } from '@/shared/types'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { usePrimitiveElement } from '@/Primitive'\nimport { useId } from '@/shared'\nimport { injectComboboxGroupContext } from './ComboboxGroup.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nexport { injectListboxItemContext as injectComboboxItemContext } from '@/Listbox'\n\nexport type ComboboxItemEmits<T = AcceptableValue> = ListboxItemEmits<T>\nexport interface ComboboxItemProps<T = AcceptableValue> extends ListboxItemProps<T> {\n  /**\n   * A string representation of the item contents.\n   *\n   * If the children are not plain text, then the `textValue` prop must also be set to a plain text representation, which will be used for autocomplete in the ComboBox.\n   */\n  textValue?: string\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport { ListboxItem } from '@/Listbox'\n\nconst props = defineProps<ComboboxItemProps<T>>()\nconst emits = defineEmits<ComboboxItemEmits<T>>()\n\nconst id = useId(undefined, 'reka-combobox-item')\nconst rootContext = injectComboboxRootContext()\nconst groupContext = injectComboboxGroupContext(null)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nif (props.value === '') {\n  throw new Error(\n    'A <ComboboxItem /> must have a value prop that is not an empty string. This is because the Combobox value can be set to an empty string to clear the selection and show the placeholder.',\n  )\n}\n\nconst isRender = computed(() => {\n  if (rootContext.isVirtual.value || rootContext.ignoreFilter.value || !rootContext.filterSearch.value) {\n    return true\n  }\n  else {\n    const filteredCurrentItem = rootContext.filterState.value.items.get(id)\n    // If the filtered items is undefined means not in the all times map yet\n    // Do the first render to add into the map\n    if (filteredCurrentItem === undefined) {\n      return true\n    }\n\n    // Check with filter\n    return filteredCurrentItem > 0\n  }\n})\n\nonMounted(() => {\n  // textValue to perform filter\n  rootContext.allItems.value.set(id, props.textValue || currentElement.value.textContent || currentElement.value.innerText)\n\n  const groupId = groupContext?.id\n  if (groupId) {\n    if (!rootContext.allGroups.value.has(groupId)) {\n      rootContext.allGroups.value.set(groupId, new Set([id]))\n    }\n    else {\n      rootContext.allGroups.value.get(groupId)?.add(id)\n    }\n  }\n})\nonUnmounted(() => {\n  rootContext.allItems.value.delete(id)\n})\n</script>\n\n<template>\n  <ListboxItem\n    v-if=\"isRender\"\n    v-bind=\"props\"\n    :id=\"id\"\n    ref=\"primitiveElement\"\n    :disabled=\"rootContext.disabled.value || disabled\"\n    @select=\"(event) => {\n      emits('select', event as any)\n      if (event.defaultPrevented)\n        return\n\n      if (!rootContext.multiple.value && !disabled && !rootContext.disabled.value) {\n        event.preventDefault()\n        rootContext.onOpenChange(false)\n        rootContext.modelValue.value = props.value\n      }\n    }\"\n  >\n    <slot>{{ value }}</slot>\n  </ListboxItem>\n</template>\n", "<script lang=\"ts\">\nimport type { ListboxItemIndicatorProps } from '@/Listbox'\n\nexport interface ComboboxItemIndicatorProps extends ListboxItemIndicatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ListboxItemIndicator } from '@/Listbox'\n\nconst props = withDefaults(defineProps<ComboboxItemIndicatorProps>(), {\n  as: 'span',\n})\n</script>\n\n<template>\n  <ListboxItemIndicator\n    v-bind=\"props\"\n  >\n    <slot />\n  </ListboxItemIndicator>\n</template>\n", "<script lang=\"ts\">\nimport type { ListboxItemIndicatorProps } from '@/Listbox'\n\nexport interface ComboboxItemIndicatorProps extends ListboxItemIndicatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ListboxItemIndicator } from '@/Listbox'\n\nconst props = withDefaults(defineProps<ComboboxItemIndicatorProps>(), {\n  as: 'span',\n})\n</script>\n\n<template>\n  <ListboxItemIndicator\n    v-bind=\"props\"\n  >\n    <slot />\n  </ListboxItemIndicator>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ComboboxLabelProps extends PrimitiveProps {\n  for?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\nimport { injectComboboxGroupContext } from './ComboboxGroup.vue'\n\nconst props = withDefaults(defineProps<ComboboxLabelProps>(), {\n  as: 'div',\n})\n\nuseForwardExpose()\nconst groupContext = injectComboboxGroupContext({ id: '', labelId: '' })\n\ngroupContext.labelId ||= useId(undefined, 'reka-combobox-group-label')\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"groupContext.labelId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ComboboxLabelProps extends PrimitiveProps {\n  for?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\nimport { injectComboboxGroupContext } from './ComboboxGroup.vue'\n\nconst props = withDefaults(defineProps<ComboboxLabelProps>(), {\n  as: 'div',\n})\n\nuseForwardExpose()\nconst groupContext = injectComboboxGroupContext({ id: '', labelId: '' })\n\ngroupContext.labelId ||= useId(undefined, 'reka-combobox-group-label')\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"groupContext.labelId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface ComboboxPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<ComboboxPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface ComboboxPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<ComboboxPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ComboboxSeparatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ComboboxSeparatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-hidden=\"true\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ComboboxSeparatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ComboboxSeparatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-hidden=\"true\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ComboboxTriggerProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxTriggerProps>(), {\n  as: 'button',\n})\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectComboboxRootContext()\nconst disabled = computed(() => props.disabled || rootContext.disabled.value || false)\n\nonMounted(() => {\n  if (currentElement.value)\n    rootContext.onTriggerElementChange(currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    tabindex=\"-1\"\n    aria-label=\"Show popup\"\n    aria-haspopup=\"listbox\"\n    :aria-expanded=\"rootContext.open.value\"\n    :aria-controls=\"rootContext.contentId\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    :disabled=\"disabled\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :aria-disabled=\"disabled ?? undefined\"\n    @click=\"rootContext.onOpenChange(!rootContext.open.value)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ComboboxTriggerProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = withDefaults(defineProps<ComboboxTriggerProps>(), {\n  as: 'button',\n})\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectComboboxRootContext()\nconst disabled = computed(() => props.disabled || rootContext.disabled.value || false)\n\nonMounted(() => {\n  if (currentElement.value)\n    rootContext.onTriggerElementChange(currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    tabindex=\"-1\"\n    aria-label=\"Show popup\"\n    aria-haspopup=\"listbox\"\n    :aria-expanded=\"rootContext.open.value\"\n    :aria-controls=\"rootContext.contentId\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    :disabled=\"disabled\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :aria-disabled=\"disabled ?? undefined\"\n    @click=\"rootContext.onOpenChange(!rootContext.open.value)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "import type { Ref } from 'vue'\nimport { computed, ref } from 'vue'\nimport { injectConfigProviderContext } from '@/ConfigProvider/ConfigProvider.vue'\n\nexport function useNonce(nonce?: Ref<string | undefined>) {\n  const context = injectConfigProviderContext({\n    nonce: ref(),\n  })\n  return computed(() => nonce?.value || context.nonce?.value)\n}\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { toRefs } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { useNonce } from '@/shared/useNonce'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nexport interface ComboboxViewportProps extends PrimitiveProps {\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ComboboxViewportProps>()\nconst { forwardRef } = useForwardExpose()\n\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n\nconst rootContext = injectComboboxRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"{ ...$attrs, ...props }\"\n    :ref=\"forwardRef\"\n    data-reka-combobox-viewport\n    role=\"presentation\"\n    :style=\"{\n      // we use position: 'relative' here on the `viewport` so that when we call\n      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n      // (independent of the scrollUpButton).\n      position: 'relative',\n      flex: rootContext.isVirtual.value ? undefined : 1,\n      overflow: 'auto',\n    }\"\n  >\n    <slot />\n  </Primitive>\n  <Primitive\n    as=\"style\"\n    :nonce=\"nonce\"\n  >\n    /* Hide scrollbars cross-browser and enable momentum scroll for touch\n    devices */ [data-reka-combobox-viewport] { scrollbar-width:none; -ms-overflow-style: none;\n    -webkit-overflow-scrolling: touch; }\n    [data-reka-combobox-viewport]::-webkit-scrollbar { display: none; }\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { toRefs } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { useNonce } from '@/shared/useNonce'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nexport interface ComboboxViewportProps extends PrimitiveProps {\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ComboboxViewportProps>()\nconst { forwardRef } = useForwardExpose()\n\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n\nconst rootContext = injectComboboxRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"{ ...$attrs, ...props }\"\n    :ref=\"forwardRef\"\n    data-reka-combobox-viewport\n    role=\"presentation\"\n    :style=\"{\n      // we use position: 'relative' here on the `viewport` so that when we call\n      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n      // (independent of the scrollUpButton).\n      position: 'relative',\n      flex: rootContext.isVirtual.value ? undefined : 1,\n      overflow: 'auto',\n    }\"\n  >\n    <slot />\n  </Primitive>\n  <Primitive\n    as=\"style\"\n    :nonce=\"nonce\"\n  >\n    /* Hide scrollbars cross-browser and enable momentum scroll for touch\n    devices */ [data-reka-combobox-viewport] { scrollbar-width:none; -ms-overflow-style: none;\n    -webkit-overflow-scrolling: touch; }\n    [data-reka-combobox-viewport]::-webkit-scrollbar { display: none; }\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nexport interface ComboboxVirtualizerProps<T extends AcceptableValue = AcceptableValue> extends ListboxVirtualizerProps<T> {}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { VirtualItem, Virtualizer } from '@tanstack/vue-virtual'\nimport type { ListboxVirtualizerProps } from '@/Listbox/ListboxVirtualizer.vue'\nimport type { AcceptableValue } from '@/shared/types'\nimport ListboxVirtualizer from '@/Listbox/ListboxVirtualizer.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = defineProps<ComboboxVirtualizerProps<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    option: T\n    virtualizer: Virtualizer<HTMLElement, Element>\n    virtualItem: VirtualItem\n  }) => any\n}>()\n\nconst rootContext = injectComboboxRootContext()\n// set virtual true when this component mounted\nrootContext.isVirtual.value = true\n</script>\n\n<template>\n  <ListboxVirtualizer\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </ListboxVirtualizer>\n</template>\n", "<script lang=\"ts\">\nexport interface ComboboxVirtualizerProps<T extends AcceptableValue = AcceptableValue> extends ListboxVirtualizerProps<T> {}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport type { VirtualItem, Virtualizer } from '@tanstack/vue-virtual'\nimport type { ListboxVirtualizerProps } from '@/Listbox/ListboxVirtualizer.vue'\nimport type { AcceptableValue } from '@/shared/types'\nimport ListboxVirtualizer from '@/Listbox/ListboxVirtualizer.vue'\nimport { injectComboboxRootContext } from './ComboboxRoot.vue'\n\nconst props = defineProps<ComboboxVirtualizerProps<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    option: T\n    virtualizer: Virtualizer<HTMLElement, Element>\n    virtualItem: VirtualItem\n  }) => any\n}>()\n\nconst rootContext = injectComboboxRootContext()\n// set virtual true when this component mounted\nrootContext.isVirtual.value = true\n</script>\n\n<template>\n  <ListboxVirtualizer\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </ListboxVirtualizer>\n</template>\n", "<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { PopperAnchor } from '@/Popper'\n\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst props = defineProps<MenuAnchorProps>()\n</script>\n\n<template>\n  <PopperAnchor v-bind=\"props\">\n    <slot />\n  </PopperAnchor>\n</template>\n", "<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { PopperAnchor } from '@/Popper'\n\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst props = defineProps<MenuAnchorProps>()\n</script>\n\n<template>\n  <PopperAnchor v-bind=\"props\">\n    <slot />\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\n\nexport interface MenuArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\n\nconst props = defineProps<MenuArrowProps>()\n</script>\n\n<template>\n  <PopperArrow v-bind=\"props\">\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\n\nexport interface MenuArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\n\nconst props = defineProps<MenuArrowProps>()\n</script>\n\n<template>\n  <PopperArrow v-bind=\"props\">\n    <slot />\n  </PopperArrow>\n</template>\n", "import { createSharedComposable, useEventListener } from '@vueuse/core'\nimport { onMounted, ref } from 'vue'\n\nfunction useIsUsingKeyboardImpl() {\n  const isUsingKeyboard = ref(false)\n\n  onMounted(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    useEventListener('keydown', () => {\n      isUsingKeyboard.value = true\n    }, { capture: true, passive: true })\n\n    useEventListener(['pointerdown', 'pointermove'], () => {\n      isUsingKeyboard.value = false\n    }, { capture: true, passive: true })\n  })\n\n  return isUsingKeyboard\n}\n\nexport const useIsUsingKeyboard = createSharedComposable(useIsUsingKeyboardImpl)\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction } from './utils'\nimport { createContext, useDirection } from '@/shared'\nimport { useIsUsingKeyboard } from '@/shared/useIsUsingKeyboard'\n\nexport interface MenuContext {\n  open: Ref<boolean>\n  onOpenChange: (open: boolean) => void\n  content: Ref<HTMLElement | undefined>\n  onContentChange: (content: HTMLElement | undefined) => void\n}\n\nexport interface MenuRootContext {\n  onClose: () => void\n  dir: Ref<Direction>\n  isUsingKeyboardRef: Ref<boolean>\n  modal: Ref<boolean>\n}\n\nexport interface MenuProps {\n  /** The controlled open state of the menu. Can be used as `v-model:open`. */\n  open?: boolean\n  /**\n   * The reading direction of the combobox when applicable.\n   *\n   * If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /**\n   * The modality of the dropdown menu.\n   *\n   * When set to `true`, interaction with outside elements will be disabled and only menu content will be visible to screen readers.\n   */\n  modal?: boolean\n}\n\nexport type MenuEmits = {\n  'update:open': [payload: boolean]\n}\n\nexport const [injectMenuContext, provideMenuContext]\n  = createContext<MenuContext>(['MenuRoot', 'MenuSub'], 'MenuContext')\n\nexport const [injectMenuRootContext, provideMenuRootContext]\n  = createContext<MenuRootContext>('MenuRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport {\n  ref,\n  toRefs,\n} from 'vue'\nimport { PopperRoot } from '@/Popper'\n\nconst props = withDefaults(defineProps<MenuProps>(), {\n  open: false,\n  modal: true,\n})\nconst emits = defineEmits<MenuEmits>()\nconst { modal, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst open = useVModel(props, 'open', emits)\n\nconst content = ref<HTMLElement>()\nconst isUsingKeyboardRef = useIsUsingKeyboard()\n\nprovideMenuContext({\n  open,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  content,\n  onContentChange: (element) => {\n    content.value = element\n  },\n})\n\nprovideMenuRootContext({\n  onClose: () => {\n    open.value = false\n  },\n  isUsingKeyboardRef,\n  dir,\n  modal,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction } from './utils'\nimport { createContext, useDirection } from '@/shared'\nimport { useIsUsingKeyboard } from '@/shared/useIsUsingKeyboard'\n\nexport interface MenuContext {\n  open: Ref<boolean>\n  onOpenChange: (open: boolean) => void\n  content: Ref<HTMLElement | undefined>\n  onContentChange: (content: HTMLElement | undefined) => void\n}\n\nexport interface MenuRootContext {\n  onClose: () => void\n  dir: Ref<Direction>\n  isUsingKeyboardRef: Ref<boolean>\n  modal: Ref<boolean>\n}\n\nexport interface MenuProps {\n  /** The controlled open state of the menu. Can be used as `v-model:open`. */\n  open?: boolean\n  /**\n   * The reading direction of the combobox when applicable.\n   *\n   * If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /**\n   * The modality of the dropdown menu.\n   *\n   * When set to `true`, interaction with outside elements will be disabled and only menu content will be visible to screen readers.\n   */\n  modal?: boolean\n}\n\nexport type MenuEmits = {\n  'update:open': [payload: boolean]\n}\n\nexport const [injectMenuContext, provideMenuContext]\n  = createContext<MenuContext>(['MenuRoot', 'MenuSub'], 'MenuContext')\n\nexport const [injectMenuRootContext, provideMenuRootContext]\n  = createContext<MenuRootContext>('MenuRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport {\n  ref,\n  toRefs,\n} from 'vue'\nimport { PopperRoot } from '@/Popper'\n\nconst props = withDefaults(defineProps<MenuProps>(), {\n  open: false,\n  modal: true,\n})\nconst emits = defineEmits<MenuEmits>()\nconst { modal, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst open = useVModel(props, 'open', emits)\n\nconst content = ref<HTMLElement>()\nconst isUsingKeyboardRef = useIsUsingKeyboard()\n\nprovideMenuContext({\n  open,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  content,\n  onContentChange: (element) => {\n    content.value = element\n  },\n})\n\nprovideMenuRootContext({\n  onClose: () => {\n    open.value = false\n  },\n  isUsingKeyboardRef,\n  dir,\n  modal,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type {\n  GraceIntent,\n  Side,\n} from './utils'\nimport type {\n  DismissableLayerEmits,\n  DismissableLayerProps,\n} from '@/DismissableLayer'\nimport type { FocusScopeProps } from '@/FocusScope'\nimport type { PopperContentProps } from '@/Popper'\nimport type { RovingFocusGroupEmits } from '@/RovingFocus'\n\nimport {\n  createContext,\n  getActiveElement,\n  useArrowNavigation,\n  useFocusGuards,\n  useForwardExpose,\n  useTypeahead,\n} from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\n\nexport interface MenuContentContext {\n  onItemEnter: (event: PointerEvent) => boolean\n  onItemLeave: (event: PointerEvent) => void\n  onTriggerLeave: (event: PointerEvent) => boolean\n  searchRef: Ref<string>\n  pointerGraceTimerRef: Ref<number>\n  onPointerGraceIntentChange: (intent: GraceIntent | null) => void\n}\n\nexport const [injectMenuContentContext, provideMenuContentContext]\n  = createContext<MenuContentContext>('MenuContent')\n\nexport interface MenuContentImplPrivateProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents']\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * @defaultValue false\n   */\n  disableOutsideScroll?: boolean\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * @defaultValue also\n   */\n  trapFocus?: FocusScopeProps['trapped']\n}\n\nexport type MenuContentImplEmits = DismissableLayerEmits & Omit<RovingFocusGroupEmits, 'update:currentTabStopId'> & {\n  openAutoFocus: [event: Event]\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  closeAutoFocus: [event: Event]\n}\n\ntype MenuContentImplPrivateEmits = MenuContentImplEmits & {\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  dismiss: []\n}\n\nexport interface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n  Omit<PopperContentProps, 'dir'> {\n  /**\n   * When `true`, keyboard navigation will loop from last item to first, and vice versa.\n   * @defaultValue false\n   */\n  loop?: boolean\n}\n\nexport interface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, 'disableOutsidePointerEvents' | 'disableOutsideScroll' | 'trapFocus'> {}\n</script>\n\n<script setup lang=\"ts\">\nimport {\n  onUnmounted,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { FocusScope } from '@/FocusScope'\nimport {\n  PopperContent,\n  PopperContentPropsDefaultValue,\n} from '@/Popper'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { injectMenuContext, injectMenuRootContext } from './MenuRoot.vue'\nimport {\n  FIRST_LAST_KEYS,\n  focusFirst,\n  getOpenState,\n  isMouseEvent,\n  isPointerInGraceArea,\n  LAST_KEYS,\n} from './utils'\n\nconst props = withDefaults(defineProps<MenuContentImplProps>(), {\n  ...PopperContentPropsDefaultValue,\n})\nconst emits = defineEmits<MenuContentImplPrivateEmits>()\nconst menuContext = injectMenuContext()\nconst rootContext = injectMenuRootContext()\n\nconst { trapFocus, disableOutsidePointerEvents, loop } = toRefs(props)\n\nuseFocusGuards()\nuseBodyScrollLock(disableOutsidePointerEvents.value)\n\nconst searchRef = ref('')\nconst timerRef = ref(0)\nconst pointerGraceTimerRef = ref(0)\nconst pointerGraceIntentRef = ref<GraceIntent | null>(null)\nconst pointerDirRef = ref<Side>('right')\nconst lastPointerXRef = ref(0)\nconst currentItemId = ref<string | null>(null)\n\nconst rovingFocusGroupRef = ref<InstanceType<typeof RovingFocusGroup>>()\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\nconst { handleTypeaheadSearch } = useTypeahead()\n\nwatch(contentElement, (el) => {\n  menuContext!.onContentChange(el)\n})\n\nonUnmounted(() => {\n  window.clearTimeout(timerRef.value)\n})\n\nfunction isPointerMovingToSubmenu(event: PointerEvent) {\n  const isMovingTowards\n    = pointerDirRef.value === pointerGraceIntentRef.value?.side\n\n  return (\n    isMovingTowards\n    && isPointerInGraceArea(event, pointerGraceIntentRef.value?.area)\n  )\n}\n\nasync function handleMountAutoFocus(event: Event) {\n  emits('openAutoFocus', event)\n  if (event.defaultPrevented)\n    return\n  // when opening, explicitly focus the content area only and leave\n  // `onEntryFocus` in  control of focusing first item\n  event.preventDefault()\n  contentElement.value?.focus({\n    preventScroll: true,\n  })\n}\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  if (event.defaultPrevented)\n    return\n  // submenu key events bubble through portals. We only care about keys in this menu.\n  const target = event.target as HTMLElement\n  const isKeyDownInside\n    = target.closest('[data-reka-menu-content]') === event.currentTarget\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey\n  const isCharacterKey = event.key.length === 1\n\n  const el = useArrowNavigation(\n    event,\n    getActiveElement() as HTMLElement,\n    contentElement.value,\n    {\n      loop: loop.value,\n      arrowKeyOptions: 'vertical',\n      dir: rootContext?.dir.value,\n      focus: true,\n      attributeName: '[data-reka-collection-item]:not([data-disabled])',\n    },\n  )\n  if (el)\n    return el?.focus()\n\n  // prevent \"Space\" taken account into handleTypeahead\n  if (event.code === 'Space')\n    return\n\n  const collectionItems = rovingFocusGroupRef.value?.getItems() ?? []\n\n  if (isKeyDownInside) {\n    // menus should not be navigated using tab key so we prevent it\n    if (event.key === 'Tab')\n      event.preventDefault()\n    if (!isModifierKey && isCharacterKey)\n      handleTypeaheadSearch(event.key, collectionItems)\n  }\n\n  // focus first/last item based on key pressed\n  if (event.target !== contentElement.value)\n    return\n  if (!FIRST_LAST_KEYS.includes(event.key))\n    return\n  event.preventDefault()\n  const candidateNodes = [...collectionItems.map(item => item.ref)]\n  if (LAST_KEYS.includes(event.key))\n    candidateNodes.reverse()\n  focusFirst(candidateNodes)\n}\n\nfunction handleBlur(event: FocusEvent) {\n  // clear search buffer when leaving the menu\n  // @ts-expect-error the provided currentTarget and target should be HTMLElement\n  if (!event?.currentTarget?.contains?.(event.target)) {\n    window.clearTimeout(timerRef.value)\n    searchRef.value = ''\n  }\n}\n\nfunction handlePointerMove(event: PointerEvent) {\n  if (!isMouseEvent(event))\n    return\n  const target = event.target as HTMLElement\n  const pointerXHasChanged = lastPointerXRef.value !== event.clientX\n\n  // We don't use `event.movementX` for this check because Safari will\n  // always return `0` on a pointer event.\n  if (\n    (event?.currentTarget as HTMLElement)?.contains(target)\n    && pointerXHasChanged\n  ) {\n    const newDir = event.clientX > lastPointerXRef.value ? 'right' : 'left'\n    pointerDirRef.value = newDir\n    lastPointerXRef.value = event.clientX\n  }\n}\n\nprovideMenuContentContext({\n  onItemEnter: (event) => {\n    // event.preventDefault() we can't prevent pointerMove event\n    if (isPointerMovingToSubmenu(event))\n      return true\n    else\n      return false\n  },\n  onItemLeave: (event) => {\n    if (isPointerMovingToSubmenu(event))\n      return\n    contentElement.value?.focus()\n    currentItemId.value = null\n  },\n  onTriggerLeave: (event) => {\n    // event.preventDefault() we can't prevent pointerLeave event\n    if (isPointerMovingToSubmenu(event))\n      return true\n    else\n      return false\n  },\n  searchRef,\n  pointerGraceTimerRef,\n  onPointerGraceIntentChange: (intent) => {\n    pointerGraceIntentRef.value = intent\n  },\n})\n</script>\n\n<template>\n  <FocusScope\n    as-child\n    :trapped=\"trapFocus\"\n    @mount-auto-focus=\"handleMountAutoFocus\"\n    @unmount-auto-focus=\"emits('closeAutoFocus', $event)\"\n  >\n    <DismissableLayer\n      as-child\n      :disable-outside-pointer-events=\"disableOutsidePointerEvents\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n      @focus-outside=\"emits('focusOutside', $event)\"\n      @interact-outside=\"emits('interactOutside', $event)\"\n      @dismiss=\"emits('dismiss')\"\n    >\n      <RovingFocusGroup\n        ref=\"rovingFocusGroupRef\"\n        v-model:current-tab-stop-id=\"currentItemId\"\n        as-child\n        orientation=\"vertical\"\n        :dir=\"rootContext.dir.value\"\n        :loop=\"loop\"\n        @entry-focus=\"(event) => {\n          emits('entryFocus', event)\n          // only focus first item when using keyboard\n          if (!rootContext.isUsingKeyboardRef.value) event.preventDefault();\n        }\"\n      >\n        <PopperContent\n          :ref=\"forwardRef\"\n          role=\"menu\"\n          :as=\"as\"\n          :as-child=\"asChild\"\n          aria-orientation=\"vertical\"\n          data-reka-menu-content\n          :data-state=\"getOpenState(menuContext.open.value)\"\n          :dir=\"rootContext.dir.value\"\n          :side=\"side\"\n          :side-offset=\"sideOffset\"\n          :align=\"align\"\n          :align-offset=\"alignOffset\"\n          :avoid-collisions=\"avoidCollisions\"\n          :collision-boundary=\"collisionBoundary\"\n          :collision-padding=\"collisionPadding\"\n          :arrow-padding=\"arrowPadding\"\n          :prioritize-position=\"prioritizePosition\"\n          :position-strategy=\"positionStrategy\"\n          :update-position-strategy=\"updatePositionStrategy\"\n          :sticky=\"sticky\"\n          :hide-when-detached=\"hideWhenDetached\"\n          :reference=\"reference\"\n          @keydown=\"handleKeyDown\"\n          @blur=\"handleBlur\"\n          @pointermove=\"handlePointerMove\"\n        >\n          <slot />\n        </PopperContent>\n      </RovingFocusGroup>\n    </DismissableLayer>\n  </FocusScope>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type {\n  GraceIntent,\n  Side,\n} from './utils'\nimport type {\n  DismissableLayerEmits,\n  DismissableLayerProps,\n} from '@/DismissableLayer'\nimport type { FocusScopeProps } from '@/FocusScope'\nimport type { PopperContentProps } from '@/Popper'\nimport type { RovingFocusGroupEmits } from '@/RovingFocus'\n\nimport {\n  createContext,\n  getActiveElement,\n  useArrowNavigation,\n  useFocusGuards,\n  useForwardExpose,\n  useTypeahead,\n} from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\n\nexport interface MenuContentContext {\n  onItemEnter: (event: PointerEvent) => boolean\n  onItemLeave: (event: PointerEvent) => void\n  onTriggerLeave: (event: PointerEvent) => boolean\n  searchRef: Ref<string>\n  pointerGraceTimerRef: Ref<number>\n  onPointerGraceIntentChange: (intent: GraceIntent | null) => void\n}\n\nexport const [injectMenuContentContext, provideMenuContentContext]\n  = createContext<MenuContentContext>('MenuContent')\n\nexport interface MenuContentImplPrivateProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents']\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * @defaultValue false\n   */\n  disableOutsideScroll?: boolean\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * @defaultValue also\n   */\n  trapFocus?: FocusScopeProps['trapped']\n}\n\nexport type MenuContentImplEmits = DismissableLayerEmits & Omit<RovingFocusGroupEmits, 'update:currentTabStopId'> & {\n  openAutoFocus: [event: Event]\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  closeAutoFocus: [event: Event]\n}\n\ntype MenuContentImplPrivateEmits = MenuContentImplEmits & {\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  dismiss: []\n}\n\nexport interface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n  Omit<PopperContentProps, 'dir'> {\n  /**\n   * When `true`, keyboard navigation will loop from last item to first, and vice versa.\n   * @defaultValue false\n   */\n  loop?: boolean\n}\n\nexport interface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, 'disableOutsidePointerEvents' | 'disableOutsideScroll' | 'trapFocus'> {}\n</script>\n\n<script setup lang=\"ts\">\nimport {\n  onUnmounted,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { FocusScope } from '@/FocusScope'\nimport {\n  PopperContent,\n  PopperContentPropsDefaultValue,\n} from '@/Popper'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { injectMenuContext, injectMenuRootContext } from './MenuRoot.vue'\nimport {\n  FIRST_LAST_KEYS,\n  focusFirst,\n  getOpenState,\n  isMouseEvent,\n  isPointerInGraceArea,\n  LAST_KEYS,\n} from './utils'\n\nconst props = withDefaults(defineProps<MenuContentImplProps>(), {\n  ...PopperContentPropsDefaultValue,\n})\nconst emits = defineEmits<MenuContentImplPrivateEmits>()\nconst menuContext = injectMenuContext()\nconst rootContext = injectMenuRootContext()\n\nconst { trapFocus, disableOutsidePointerEvents, loop } = toRefs(props)\n\nuseFocusGuards()\nuseBodyScrollLock(disableOutsidePointerEvents.value)\n\nconst searchRef = ref('')\nconst timerRef = ref(0)\nconst pointerGraceTimerRef = ref(0)\nconst pointerGraceIntentRef = ref<GraceIntent | null>(null)\nconst pointerDirRef = ref<Side>('right')\nconst lastPointerXRef = ref(0)\nconst currentItemId = ref<string | null>(null)\n\nconst rovingFocusGroupRef = ref<InstanceType<typeof RovingFocusGroup>>()\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\nconst { handleTypeaheadSearch } = useTypeahead()\n\nwatch(contentElement, (el) => {\n  menuContext!.onContentChange(el)\n})\n\nonUnmounted(() => {\n  window.clearTimeout(timerRef.value)\n})\n\nfunction isPointerMovingToSubmenu(event: PointerEvent) {\n  const isMovingTowards\n    = pointerDirRef.value === pointerGraceIntentRef.value?.side\n\n  return (\n    isMovingTowards\n    && isPointerInGraceArea(event, pointerGraceIntentRef.value?.area)\n  )\n}\n\nasync function handleMountAutoFocus(event: Event) {\n  emits('openAutoFocus', event)\n  if (event.defaultPrevented)\n    return\n  // when opening, explicitly focus the content area only and leave\n  // `onEntryFocus` in  control of focusing first item\n  event.preventDefault()\n  contentElement.value?.focus({\n    preventScroll: true,\n  })\n}\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  if (event.defaultPrevented)\n    return\n  // submenu key events bubble through portals. We only care about keys in this menu.\n  const target = event.target as HTMLElement\n  const isKeyDownInside\n    = target.closest('[data-reka-menu-content]') === event.currentTarget\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey\n  const isCharacterKey = event.key.length === 1\n\n  const el = useArrowNavigation(\n    event,\n    getActiveElement() as HTMLElement,\n    contentElement.value,\n    {\n      loop: loop.value,\n      arrowKeyOptions: 'vertical',\n      dir: rootContext?.dir.value,\n      focus: true,\n      attributeName: '[data-reka-collection-item]:not([data-disabled])',\n    },\n  )\n  if (el)\n    return el?.focus()\n\n  // prevent \"Space\" taken account into handleTypeahead\n  if (event.code === 'Space')\n    return\n\n  const collectionItems = rovingFocusGroupRef.value?.getItems() ?? []\n\n  if (isKeyDownInside) {\n    // menus should not be navigated using tab key so we prevent it\n    if (event.key === 'Tab')\n      event.preventDefault()\n    if (!isModifierKey && isCharacterKey)\n      handleTypeaheadSearch(event.key, collectionItems)\n  }\n\n  // focus first/last item based on key pressed\n  if (event.target !== contentElement.value)\n    return\n  if (!FIRST_LAST_KEYS.includes(event.key))\n    return\n  event.preventDefault()\n  const candidateNodes = [...collectionItems.map(item => item.ref)]\n  if (LAST_KEYS.includes(event.key))\n    candidateNodes.reverse()\n  focusFirst(candidateNodes)\n}\n\nfunction handleBlur(event: FocusEvent) {\n  // clear search buffer when leaving the menu\n  // @ts-expect-error the provided currentTarget and target should be HTMLElement\n  if (!event?.currentTarget?.contains?.(event.target)) {\n    window.clearTimeout(timerRef.value)\n    searchRef.value = ''\n  }\n}\n\nfunction handlePointerMove(event: PointerEvent) {\n  if (!isMouseEvent(event))\n    return\n  const target = event.target as HTMLElement\n  const pointerXHasChanged = lastPointerXRef.value !== event.clientX\n\n  // We don't use `event.movementX` for this check because Safari will\n  // always return `0` on a pointer event.\n  if (\n    (event?.currentTarget as HTMLElement)?.contains(target)\n    && pointerXHasChanged\n  ) {\n    const newDir = event.clientX > lastPointerXRef.value ? 'right' : 'left'\n    pointerDirRef.value = newDir\n    lastPointerXRef.value = event.clientX\n  }\n}\n\nprovideMenuContentContext({\n  onItemEnter: (event) => {\n    // event.preventDefault() we can't prevent pointerMove event\n    if (isPointerMovingToSubmenu(event))\n      return true\n    else\n      return false\n  },\n  onItemLeave: (event) => {\n    if (isPointerMovingToSubmenu(event))\n      return\n    contentElement.value?.focus()\n    currentItemId.value = null\n  },\n  onTriggerLeave: (event) => {\n    // event.preventDefault() we can't prevent pointerLeave event\n    if (isPointerMovingToSubmenu(event))\n      return true\n    else\n      return false\n  },\n  searchRef,\n  pointerGraceTimerRef,\n  onPointerGraceIntentChange: (intent) => {\n    pointerGraceIntentRef.value = intent\n  },\n})\n</script>\n\n<template>\n  <FocusScope\n    as-child\n    :trapped=\"trapFocus\"\n    @mount-auto-focus=\"handleMountAutoFocus\"\n    @unmount-auto-focus=\"emits('closeAutoFocus', $event)\"\n  >\n    <DismissableLayer\n      as-child\n      :disable-outside-pointer-events=\"disableOutsidePointerEvents\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n      @focus-outside=\"emits('focusOutside', $event)\"\n      @interact-outside=\"emits('interactOutside', $event)\"\n      @dismiss=\"emits('dismiss')\"\n    >\n      <RovingFocusGroup\n        ref=\"rovingFocusGroupRef\"\n        v-model:current-tab-stop-id=\"currentItemId\"\n        as-child\n        orientation=\"vertical\"\n        :dir=\"rootContext.dir.value\"\n        :loop=\"loop\"\n        @entry-focus=\"(event) => {\n          emits('entryFocus', event)\n          // only focus first item when using keyboard\n          if (!rootContext.isUsingKeyboardRef.value) event.preventDefault();\n        }\"\n      >\n        <PopperContent\n          :ref=\"forwardRef\"\n          role=\"menu\"\n          :as=\"as\"\n          :as-child=\"asChild\"\n          aria-orientation=\"vertical\"\n          data-reka-menu-content\n          :data-state=\"getOpenState(menuContext.open.value)\"\n          :dir=\"rootContext.dir.value\"\n          :side=\"side\"\n          :side-offset=\"sideOffset\"\n          :align=\"align\"\n          :align-offset=\"alignOffset\"\n          :avoid-collisions=\"avoidCollisions\"\n          :collision-boundary=\"collisionBoundary\"\n          :collision-padding=\"collisionPadding\"\n          :arrow-padding=\"arrowPadding\"\n          :prioritize-position=\"prioritizePosition\"\n          :position-strategy=\"positionStrategy\"\n          :update-position-strategy=\"updatePositionStrategy\"\n          :sticky=\"sticky\"\n          :hide-when-detached=\"hideWhenDetached\"\n          :reference=\"reference\"\n          @keydown=\"handleKeyDown\"\n          @blur=\"handleBlur\"\n          @pointermove=\"handlePointerMove\"\n        >\n          <slot />\n        </PopperContent>\n      </RovingFocusGroup>\n    </DismissableLayer>\n  </FocusScope>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface MenuItemImplProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with the item. */\n  disabled?: boolean\n  /**\n   * Optional text used for typeahead purposes. By default the typeahead behavior will use the `.textContent` of the item. <br>\n   *  Use this when the content is complex, or you have non-textual content inside.\n   */\n  textValue?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, ref } from 'vue'\nimport { useCollection } from '@/Collection'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectMenuContentContext } from './MenuContentImpl.vue'\nimport { isMouseEvent } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<MenuItemImplProps>()\n\nconst contentContext = injectMenuContentContext()\nconst { forwardRef } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst isFocused = ref(false)\n\nasync function handlePointerMove(event: PointerEvent) {\n  if (event.defaultPrevented)\n    return\n  if (!isMouseEvent(event))\n    return\n\n  if (props.disabled) {\n    contentContext.onItemLeave(event)\n  }\n  else {\n    const defaultPrevented = contentContext.onItemEnter(event)\n    if (!defaultPrevented) {\n      const item = event.currentTarget;\n      (item as HTMLElement)?.focus({ preventScroll: true })\n    }\n  }\n}\n\nasync function handlePointerLeave(event: PointerEvent) {\n  await nextTick()\n  if (event.defaultPrevented)\n    return\n  if (!isMouseEvent(event))\n    return\n\n  contentContext.onItemLeave(event)\n}\n</script>\n\n<template>\n  <CollectionItem :value=\"{ textValue }\">\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"menuitem\"\n      tabindex=\"-1\"\n      v-bind=\"$attrs\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-disabled=\"disabled || undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-highlighted=\"isFocused ? '' : undefined\"\n      @pointermove=\"handlePointerMove\"\n      @pointerleave=\"handlePointerLeave\"\n      @focus=\"\n        async (event) => {\n          await nextTick();\n          if (event.defaultPrevented || disabled) return;\n          isFocused = true;\n        }\n      \"\n      @blur=\"\n        async (event) => {\n          await nextTick();\n          if (event.defaultPrevented) return;\n          isFocused = false;\n        }\n      \"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface MenuItemImplProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with the item. */\n  disabled?: boolean\n  /**\n   * Optional text used for typeahead purposes. By default the typeahead behavior will use the `.textContent` of the item. <br>\n   *  Use this when the content is complex, or you have non-textual content inside.\n   */\n  textValue?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, ref } from 'vue'\nimport { useCollection } from '@/Collection'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectMenuContentContext } from './MenuContentImpl.vue'\nimport { isMouseEvent } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<MenuItemImplProps>()\n\nconst contentContext = injectMenuContentContext()\nconst { forwardRef } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst isFocused = ref(false)\n\nasync function handlePointerMove(event: PointerEvent) {\n  if (event.defaultPrevented)\n    return\n  if (!isMouseEvent(event))\n    return\n\n  if (props.disabled) {\n    contentContext.onItemLeave(event)\n  }\n  else {\n    const defaultPrevented = contentContext.onItemEnter(event)\n    if (!defaultPrevented) {\n      const item = event.currentTarget;\n      (item as HTMLElement)?.focus({ preventScroll: true })\n    }\n  }\n}\n\nasync function handlePointerLeave(event: PointerEvent) {\n  await nextTick()\n  if (event.defaultPrevented)\n    return\n  if (!isMouseEvent(event))\n    return\n\n  contentContext.onItemLeave(event)\n}\n</script>\n\n<template>\n  <CollectionItem :value=\"{ textValue }\">\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"menuitem\"\n      tabindex=\"-1\"\n      v-bind=\"$attrs\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-disabled=\"disabled || undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-highlighted=\"isFocused ? '' : undefined\"\n      @pointermove=\"handlePointerMove\"\n      @pointerleave=\"handlePointerLeave\"\n      @focus=\"\n        async (event) => {\n          await nextTick();\n          if (event.defaultPrevented || disabled) return;\n          isFocused = true;\n        }\n      \"\n      @blur=\"\n        async (event) => {\n          await nextTick();\n          if (event.defaultPrevented) return;\n          isFocused = false;\n        }\n      \"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemImplProps } from './MenuItemImpl.vue'\nimport { useForwardExpose } from '@/shared'\n\nexport type MenuItemEmits = {\n  /**\n   * Event handler called when the user selects an item (via mouse or keyboard). <br>\n   *  Calling `event.preventDefault` in this handler will prevent the menu from closing when selecting that item.\n   */\n  select: [event: Event]\n}\n\nexport interface MenuItemProps extends MenuItemImplProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, ref } from 'vue'\nimport { injectMenuContentContext } from './MenuContentImpl.vue'\nimport MenuItemImpl from './MenuItemImpl.vue'\nimport { injectMenuRootContext } from './MenuRoot.vue'\nimport { ITEM_SELECT, SELECTION_KEYS } from './utils'\n\nconst props = defineProps<MenuItemProps>()\nconst emits = defineEmits<MenuItemEmits>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectMenuRootContext()\nconst contentContext = injectMenuContentContext()\n\nconst isPointerDownRef = ref(false)\n\nasync function handleSelect() {\n  const menuItem = currentElement.value\n  if (!props.disabled && menuItem) {\n    const itemSelectEvent = new CustomEvent(ITEM_SELECT, {\n      bubbles: true,\n      cancelable: true,\n    })\n    emits('select', itemSelectEvent)\n    // let select event finish\n    await nextTick()\n    if (itemSelectEvent.defaultPrevented)\n      isPointerDownRef.value = false\n    else rootContext.onClose()\n  }\n}\n</script>\n\n<template>\n  <MenuItemImpl\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n    @click=\"handleSelect\"\n    @pointerdown=\"\n      () => {\n        isPointerDownRef = true;\n      }\n    \"\n    @pointerup=\"\n      async (event) => {\n        await nextTick();\n        if (event.defaultPrevented) return;\n        // Pointer down can move to a different menu item which should activate it on pointer up.\n        // We dispatch a click for selection to allow composition with click based triggers and to\n        // prevent Firefox from getting stuck in text selection mode when the menu closes.\n        if (!isPointerDownRef) event.currentTarget?.click();\n      }\n    \"\n    @keydown=\"\n      async (event) => {\n        const isTypingAhead = contentContext.searchRef.value !== '';\n        if (disabled || (isTypingAhead && event.key === ' ')) return;\n        if (SELECTION_KEYS.includes(event.key)) {\n          event.currentTarget.click();\n          /**\n           * We prevent default browser behaviour for selection keys as they should trigger\n           * a selection only:\n           * - prevents space from scrolling the page.\n           * - if keydown causes focus to move, prevents keydown from firing on the new target.\n           */\n          event.preventDefault();\n        }\n      }\n    \"\n  >\n    <slot />\n  </MenuItemImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemImplProps } from './MenuItemImpl.vue'\nimport { useForwardExpose } from '@/shared'\n\nexport type MenuItemEmits = {\n  /**\n   * Event handler called when the user selects an item (via mouse or keyboard). <br>\n   *  Calling `event.preventDefault` in this handler will prevent the menu from closing when selecting that item.\n   */\n  select: [event: Event]\n}\n\nexport interface MenuItemProps extends MenuItemImplProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, ref } from 'vue'\nimport { injectMenuContentContext } from './MenuContentImpl.vue'\nimport MenuItemImpl from './MenuItemImpl.vue'\nimport { injectMenuRootContext } from './MenuRoot.vue'\nimport { ITEM_SELECT, SELECTION_KEYS } from './utils'\n\nconst props = defineProps<MenuItemProps>()\nconst emits = defineEmits<MenuItemEmits>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectMenuRootContext()\nconst contentContext = injectMenuContentContext()\n\nconst isPointerDownRef = ref(false)\n\nasync function handleSelect() {\n  const menuItem = currentElement.value\n  if (!props.disabled && menuItem) {\n    const itemSelectEvent = new CustomEvent(ITEM_SELECT, {\n      bubbles: true,\n      cancelable: true,\n    })\n    emits('select', itemSelectEvent)\n    // let select event finish\n    await nextTick()\n    if (itemSelectEvent.defaultPrevented)\n      isPointerDownRef.value = false\n    else rootContext.onClose()\n  }\n}\n</script>\n\n<template>\n  <MenuItemImpl\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n    @click=\"handleSelect\"\n    @pointerdown=\"\n      () => {\n        isPointerDownRef = true;\n      }\n    \"\n    @pointerup=\"\n      async (event) => {\n        await nextTick();\n        if (event.defaultPrevented) return;\n        // Pointer down can move to a different menu item which should activate it on pointer up.\n        // We dispatch a click for selection to allow composition with click based triggers and to\n        // prevent Firefox from getting stuck in text selection mode when the menu closes.\n        if (!isPointerDownRef) event.currentTarget?.click();\n      }\n    \"\n    @keydown=\"\n      async (event) => {\n        const isTypingAhead = contentContext.searchRef.value !== '';\n        if (disabled || (isTypingAhead && event.key === ' ')) return;\n        if (SELECTION_KEYS.includes(event.key)) {\n          event.currentTarget.click();\n          /**\n           * We prevent default browser behaviour for selection keys as they should trigger\n           * a selection only:\n           * - prevents space from scrolling the page.\n           * - if keydown causes focus to move, prevents keydown from firing on the new target.\n           */\n          event.preventDefault();\n        }\n      }\n    \"\n  >\n    <slot />\n  </MenuItemImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { CheckedState } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext } from '@/shared'\n\ninterface MenuItemIndicatorContext {\n  modelValue: Ref<CheckedState>\n}\n\nexport interface MenuItemIndicatorProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n\nexport const [injectMenuItemIndicatorContext, provideMenuItemIndicatorContext]\n  = createContext<MenuItemIndicatorContext>(\n    ['MenuCheckboxItem', 'MenuRadioItem'],\n    'MenuItemIndicatorContext',\n  )\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { getCheckedState, isIndeterminate } from './utils'\n\nwithDefaults(defineProps<MenuItemIndicatorProps>(), {\n  as: 'span',\n})\n\nconst indicatorContext = injectMenuItemIndicatorContext({\n  modelValue: ref(false),\n})\n</script>\n\n<template>\n  <Presence\n    :present=\"\n      forceMount\n        || isIndeterminate(indicatorContext.modelValue.value)\n        || indicatorContext.modelValue.value === true\n    \"\n  >\n    <Primitive\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :data-state=\"getCheckedState(indicatorContext.modelValue.value)\"\n    >\n      <slot />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { CheckedState } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext } from '@/shared'\n\ninterface MenuItemIndicatorContext {\n  modelValue: Ref<CheckedState>\n}\n\nexport interface MenuItemIndicatorProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n\nexport const [injectMenuItemIndicatorContext, provideMenuItemIndicatorContext]\n  = createContext<MenuItemIndicatorContext>(\n    ['MenuCheckboxItem', 'MenuRadioItem'],\n    'MenuItemIndicatorContext',\n  )\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { getCheckedState, isIndeterminate } from './utils'\n\nwithDefaults(defineProps<MenuItemIndicatorProps>(), {\n  as: 'span',\n})\n\nconst indicatorContext = injectMenuItemIndicatorContext({\n  modelValue: ref(false),\n})\n</script>\n\n<template>\n  <Presence\n    :present=\"\n      forceMount\n        || isIndeterminate(indicatorContext.modelValue.value)\n        || indicatorContext.modelValue.value === true\n    \"\n  >\n    <Primitive\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :data-state=\"getCheckedState(indicatorContext.modelValue.value)\"\n    >\n      <slot />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuItemEmits,\n  MenuItemProps,\n} from './MenuItem.vue'\nimport type { CheckedState } from './utils'\nimport { useForwardProps } from '@/shared'\n\nexport type MenuCheckboxItemEmits = MenuItemEmits & {\n  /** Event handler called when the checked state changes. */\n  'update:modelValue': [payload: boolean]\n}\n\nexport interface MenuCheckboxItemProps extends MenuItemProps {\n  /** The controlled checked state of the item. Can be used as `v-model`. */\n  modelValue?: CheckedState\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { reactiveOmit, useVModel } from '@vueuse/core'\nimport MenuItem from './MenuItem.vue'\nimport { provideMenuItemIndicatorContext } from './MenuItemIndicator.vue'\nimport { getCheckedState, isIndeterminate } from './utils'\n\nconst props = withDefaults(defineProps<MenuCheckboxItemProps>(), {\n  modelValue: false,\n})\nconst emits = defineEmits<MenuCheckboxItemEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current modelValue state */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst delegatedProps = reactiveOmit(props, ['modelValue'])\nconst forwarded = useForwardProps(delegatedProps)\n\nconst modelValue = useVModel(props, 'modelValue', emits)\n\nprovideMenuItemIndicatorContext({ modelValue })\n</script>\n\n<template>\n  <MenuItem\n    role=\"menuitemcheckbox\"\n    v-bind=\"forwarded\"\n    :aria-checked=\"isIndeterminate(modelValue) ? 'mixed' : modelValue\"\n    :data-state=\"getCheckedState(modelValue)\"\n    @select=\"\n      async (event) => {\n        emits('select', event);\n        if (isIndeterminate(modelValue)) {\n          modelValue = true;\n        }\n        else {\n          modelValue = !modelValue;\n        }\n      }\n    \"\n  >\n    <slot :model-value=\"modelValue\" />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuItemEmits,\n  MenuItemProps,\n} from './MenuItem.vue'\nimport type { CheckedState } from './utils'\nimport { useForwardProps } from '@/shared'\n\nexport type MenuCheckboxItemEmits = MenuItemEmits & {\n  /** Event handler called when the checked state changes. */\n  'update:modelValue': [payload: boolean]\n}\n\nexport interface MenuCheckboxItemProps extends MenuItemProps {\n  /** The controlled checked state of the item. Can be used as `v-model`. */\n  modelValue?: CheckedState\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { reactiveOmit, useVModel } from '@vueuse/core'\nimport MenuItem from './MenuItem.vue'\nimport { provideMenuItemIndicatorContext } from './MenuItemIndicator.vue'\nimport { getCheckedState, isIndeterminate } from './utils'\n\nconst props = withDefaults(defineProps<MenuCheckboxItemProps>(), {\n  modelValue: false,\n})\nconst emits = defineEmits<MenuCheckboxItemEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current modelValue state */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst delegatedProps = reactiveOmit(props, ['modelValue'])\nconst forwarded = useForwardProps(delegatedProps)\n\nconst modelValue = useVModel(props, 'modelValue', emits)\n\nprovideMenuItemIndicatorContext({ modelValue })\n</script>\n\n<template>\n  <MenuItem\n    role=\"menuitemcheckbox\"\n    v-bind=\"forwarded\"\n    :aria-checked=\"isIndeterminate(modelValue) ? 'mixed' : modelValue\"\n    :data-state=\"getCheckedState(modelValue)\"\n    @select=\"\n      async (event) => {\n        emits('select', event);\n        if (isIndeterminate(modelValue)) {\n          modelValue = true;\n        }\n        else {\n          modelValue = !modelValue;\n        }\n      }\n    \"\n  >\n    <slot :model-value=\"modelValue\" />\n  </MenuItem>\n</template>\n", "<script setup lang=\"ts\">\nimport type { MenuContentImplEmits, MenuRootContentTypeProps } from './MenuContentImpl.vue'\nimport { useForwardExpose, useForwardPropsEmits, useHideOthers } from '@/shared'\nimport MenuContentImpl from './MenuContentImpl.vue'\nimport { injectMenuContext } from './MenuRoot.vue'\n\nconst props = defineProps<MenuRootContentModalProps>()\nconst emits = defineEmits<MenuRootContentModalEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst menuContext = injectMenuContext()\n\ninterface MenuRootContentModalProps extends MenuRootContentTypeProps {}\ntype MenuRootContentModalEmits = MenuContentImplEmits\n\nconst { forwardRef, currentElement } = useForwardExpose()\nuseHideOthers(currentElement)\n</script>\n\n<template>\n  <MenuContentImpl\n    v-bind=\"forwarded\"\n    :ref=\"forwardRef\"\n    :trap-focus=\"menuContext.open.value\"\n    :disable-outside-pointer-events=\"menuContext.open.value\"\n    :disable-outside-scroll=\"true\"\n    @dismiss=\"menuContext.onOpenChange(false)\"\n    @focus-outside.prevent=\"emits('focusOutside', $event)\"\n  >\n    <slot />\n  </MenuContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { MenuContentImplEmits, MenuRootContentTypeProps } from './MenuContentImpl.vue'\nimport { useForwardExpose, useForwardPropsEmits, useHideOthers } from '@/shared'\nimport MenuContentImpl from './MenuContentImpl.vue'\nimport { injectMenuContext } from './MenuRoot.vue'\n\nconst props = defineProps<MenuRootContentModalProps>()\nconst emits = defineEmits<MenuRootContentModalEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst menuContext = injectMenuContext()\n\ninterface MenuRootContentModalProps extends MenuRootContentTypeProps {}\ntype MenuRootContentModalEmits = MenuContentImplEmits\n\nconst { forwardRef, currentElement } = useForwardExpose()\nuseHideOthers(currentElement)\n</script>\n\n<template>\n  <MenuContentImpl\n    v-bind=\"forwarded\"\n    :ref=\"forwardRef\"\n    :trap-focus=\"menuContext.open.value\"\n    :disable-outside-pointer-events=\"menuContext.open.value\"\n    :disable-outside-scroll=\"true\"\n    @dismiss=\"menuContext.onOpenChange(false)\"\n    @focus-outside.prevent=\"emits('focusOutside', $event)\"\n  >\n    <slot />\n  </MenuContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { MenuContentImplEmits, MenuRootContentTypeProps } from './MenuContentImpl.vue'\nimport { useForwardPropsEmits } from '@/shared'\nimport MenuContentImpl from './MenuContentImpl.vue'\nimport { injectMenuContext } from './MenuRoot.vue'\n\nconst props = defineProps<MenuRootContentNonModalProps>()\nconst emits = defineEmits<MenuRootContentModalEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst menuContext = injectMenuContext()\n\ninterface MenuRootContentNonModalProps extends MenuRootContentTypeProps {}\ntype MenuRootContentModalEmits = MenuContentImplEmits\n</script>\n\n<template>\n  <MenuContentImpl\n    v-bind=\"forwarded\"\n    :trap-focus=\"false\"\n    :disable-outside-pointer-events=\"false\"\n    :disable-outside-scroll=\"false\"\n    @dismiss=\"menuContext.onOpenChange(false)\"\n  >\n    <slot />\n  </MenuContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { MenuContentImplEmits, MenuRootContentTypeProps } from './MenuContentImpl.vue'\nimport { useForwardPropsEmits } from '@/shared'\nimport MenuContentImpl from './MenuContentImpl.vue'\nimport { injectMenuContext } from './MenuRoot.vue'\n\nconst props = defineProps<MenuRootContentNonModalProps>()\nconst emits = defineEmits<MenuRootContentModalEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst menuContext = injectMenuContext()\n\ninterface MenuRootContentNonModalProps extends MenuRootContentTypeProps {}\ntype MenuRootContentModalEmits = MenuContentImplEmits\n</script>\n\n<template>\n  <MenuContentImpl\n    v-bind=\"forwarded\"\n    :trap-focus=\"false\"\n    :disable-outside-pointer-events=\"false\"\n    :disable-outside-scroll=\"false\"\n    @dismiss=\"menuContext.onOpenChange(false)\"\n  >\n    <slot />\n  </MenuContentImpl>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuContentImplEmits,\n  MenuRootContentTypeProps,\n} from './MenuContentImpl.vue'\n\nexport type MenuContentEmits = Omit<MenuContentImplEmits, 'entryFocus' | 'openAutoFocus'>\n\nexport interface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardPropsEmits } from '@/shared'\nimport { injectMenuContext, injectMenuRootContext } from './MenuRoot.vue'\nimport MenuRootContentModal from './MenuRootContentModal.vue'\nimport MenuRootContentNonModal from './MenuRootContentNonModal.vue'\n\nconst props = defineProps<MenuContentProps>()\nconst emits = defineEmits<MenuContentImplEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst menuContext = injectMenuContext()\nconst rootContext = injectMenuRootContext()\n</script>\n\n<template>\n  <Presence :present=\"forceMount || menuContext.open.value\">\n    <MenuRootContentModal\n      v-if=\"rootContext.modal.value\"\n      v-bind=\"{ ...$attrs, ...forwarded }\"\n    >\n      <slot />\n    </MenuRootContentModal>\n    <MenuRootContentNonModal\n      v-else\n      v-bind=\"{ ...$attrs, ...forwarded }\"\n    >\n      <slot />\n    </MenuRootContentNonModal>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuContentImplEmits,\n  MenuRootContentTypeProps,\n} from './MenuContentImpl.vue'\n\nexport type MenuContentEmits = Omit<MenuContentImplEmits, 'entryFocus' | 'openAutoFocus'>\n\nexport interface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardPropsEmits } from '@/shared'\nimport { injectMenuContext, injectMenuRootContext } from './MenuRoot.vue'\nimport MenuRootContentModal from './MenuRootContentModal.vue'\nimport MenuRootContentNonModal from './MenuRootContentNonModal.vue'\n\nconst props = defineProps<MenuContentProps>()\nconst emits = defineEmits<MenuContentImplEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst menuContext = injectMenuContext()\nconst rootContext = injectMenuRootContext()\n</script>\n\n<template>\n  <Presence :present=\"forceMount || menuContext.open.value\">\n    <MenuRootContentModal\n      v-if=\"rootContext.modal.value\"\n      v-bind=\"{ ...$attrs, ...forwarded }\"\n    >\n      <slot />\n    </MenuRootContentModal>\n    <MenuRootContentNonModal\n      v-else\n      v-bind=\"{ ...$attrs, ...forwarded }\"\n    >\n      <slot />\n    </MenuRootContentNonModal>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface MenuGroupProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<MenuGroupProps>()\n</script>\n\n<template>\n  <Primitive\n    role=\"group\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface MenuGroupProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<MenuGroupProps>()\n</script>\n\n<template>\n  <Primitive\n    role=\"group\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface MenuLabelProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<MenuLabelProps>(), {\n  as: 'div',\n})\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface MenuLabelProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<MenuLabelProps>(), {\n  as: 'div',\n})\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface MenuPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<MenuPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface MenuPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<MenuPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuGroupProps } from './MenuGroup.vue'\nimport { createContext, useForwardProps } from '@/shared'\n\ninterface MenuRadioGroupContext {\n  modelValue: Ref<string>\n  onValueChange: (payload: string) => void\n}\n\nexport interface MenuRadioGroupProps extends MenuGroupProps {\n  /** The value of the selected item in the group. */\n  modelValue?: string\n}\n\nexport type MenuRadioGroupEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [payload: string]\n}\n\nexport const [injectMenuRadioGroupContext, provideMenuRadioGroupContext]\n  = createContext<MenuRadioGroupContext>('MenuRadioGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { reactiveOmit, useVModel } from '@vueuse/core'\nimport MenuGroup from './MenuGroup.vue'\n\nconst props = withDefaults(defineProps<MenuRadioGroupProps>(), {\n  modelValue: '',\n})\nconst emits = defineEmits<MenuRadioGroupEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst delegatedProps = reactiveOmit(props, ['modelValue'])\nconst forwarded = useForwardProps(delegatedProps)\n\nconst modelValue = useVModel(props, 'modelValue', emits)\n\nprovideMenuRadioGroupContext({\n  modelValue,\n  onValueChange: (payload) => {\n    modelValue.value = payload\n  },\n})\n</script>\n\n<template>\n  <MenuGroup v-bind=\"forwarded\">\n    <slot :model-value=\"modelValue\" />\n  </MenuGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuGroupProps } from './MenuGroup.vue'\nimport { createContext, useForwardProps } from '@/shared'\n\ninterface MenuRadioGroupContext {\n  modelValue: Ref<string>\n  onValueChange: (payload: string) => void\n}\n\nexport interface MenuRadioGroupProps extends MenuGroupProps {\n  /** The value of the selected item in the group. */\n  modelValue?: string\n}\n\nexport type MenuRadioGroupEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [payload: string]\n}\n\nexport const [injectMenuRadioGroupContext, provideMenuRadioGroupContext]\n  = createContext<MenuRadioGroupContext>('MenuRadioGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { reactiveOmit, useVModel } from '@vueuse/core'\nimport MenuGroup from './MenuGroup.vue'\n\nconst props = withDefaults(defineProps<MenuRadioGroupProps>(), {\n  modelValue: '',\n})\nconst emits = defineEmits<MenuRadioGroupEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst delegatedProps = reactiveOmit(props, ['modelValue'])\nconst forwarded = useForwardProps(delegatedProps)\n\nconst modelValue = useVModel(props, 'modelValue', emits)\n\nprovideMenuRadioGroupContext({\n  modelValue,\n  onValueChange: (payload) => {\n    modelValue.value = payload\n  },\n})\n</script>\n\n<template>\n  <MenuGroup v-bind=\"forwarded\">\n    <slot :model-value=\"modelValue\" />\n  </MenuGroup>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuItemEmits,\n  MenuItemProps,\n} from './MenuItem.vue'\nimport { reactiveOmit } from '@vueuse/shared'\nimport { useForwardProps } from '@/shared'\n\nexport type MenuRadioItemEmits = MenuItemEmits\n\nexport interface MenuRadioItemProps extends MenuItemProps {\n  /** The unique value of the item. */\n  value: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, toRefs } from 'vue'\nimport MenuItem from './MenuItem.vue'\nimport { provideMenuItemIndicatorContext } from './MenuItemIndicator.vue'\nimport { injectMenuRadioGroupContext } from './MenuRadioGroup.vue'\nimport { getCheckedState } from './utils'\n\nconst props = defineProps<MenuRadioItemProps>()\nconst emits = defineEmits<MenuRadioItemEmits>()\n\nconst delegatedProps = reactiveOmit(props, ['value'])\nconst forwarded = useForwardProps(delegatedProps)\n\nconst { value } = toRefs(props)\nconst radioGroupContext = injectMenuRadioGroupContext()\nconst modelValue = computed(\n  () => radioGroupContext.modelValue.value === value?.value,\n)\n\nprovideMenuItemIndicatorContext({ modelValue })\n</script>\n\n<template>\n  <MenuItem\n    role=\"menuitemradio\"\n    v-bind=\"forwarded\"\n    :aria-checked=\"modelValue\"\n    :data-state=\"getCheckedState(modelValue)\"\n    @select=\"\n      async (event) => {\n        emits('select', event);\n        radioGroupContext.onValueChange(value);\n      }\n    \"\n  >\n    <slot />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuItemEmits,\n  MenuItemProps,\n} from './MenuItem.vue'\nimport { reactiveOmit } from '@vueuse/shared'\nimport { useForwardProps } from '@/shared'\n\nexport type MenuRadioItemEmits = MenuItemEmits\n\nexport interface MenuRadioItemProps extends MenuItemProps {\n  /** The unique value of the item. */\n  value: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, toRefs } from 'vue'\nimport MenuItem from './MenuItem.vue'\nimport { provideMenuItemIndicatorContext } from './MenuItemIndicator.vue'\nimport { injectMenuRadioGroupContext } from './MenuRadioGroup.vue'\nimport { getCheckedState } from './utils'\n\nconst props = defineProps<MenuRadioItemProps>()\nconst emits = defineEmits<MenuRadioItemEmits>()\n\nconst delegatedProps = reactiveOmit(props, ['value'])\nconst forwarded = useForwardProps(delegatedProps)\n\nconst { value } = toRefs(props)\nconst radioGroupContext = injectMenuRadioGroupContext()\nconst modelValue = computed(\n  () => radioGroupContext.modelValue.value === value?.value,\n)\n\nprovideMenuItemIndicatorContext({ modelValue })\n</script>\n\n<template>\n  <MenuItem\n    role=\"menuitemradio\"\n    v-bind=\"forwarded\"\n    :aria-checked=\"modelValue\"\n    :data-state=\"getCheckedState(modelValue)\"\n    @select=\"\n      async (event) => {\n        emits('select', event);\n        radioGroupContext.onValueChange(value);\n      }\n    \"\n  >\n    <slot />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface MenuSeparatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<MenuSeparatorProps>()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    role=\"separator\"\n    aria-orientation=\"horizontal\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface MenuSeparatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<MenuSeparatorProps>()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    role=\"separator\"\n    aria-orientation=\"horizontal\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuContext } from './MenuRoot.vue'\nimport { createContext } from '@/shared'\n\nexport interface MenuSubContext {\n  contentId: string\n  triggerId: string\n  trigger: Ref<HTMLElement | undefined>\n  onTriggerChange: (trigger: HTMLElement | undefined) => void\n  parentMenuContext?: MenuContext\n}\n\nexport const [injectMenuSubContext, provideMenuSubContext]\n  = createContext<MenuSubContext>('MenuSub')\n\nexport interface MenuSubProps {\n  /** The controlled open state of the menu. Can be used as `v-model:open`. */\n  open?: boolean\n}\n\nexport type MenuSubEmits = {\n  /** Event handler called when the open state of the submenu changes. */\n  'update:open': [payload: boolean]\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport {\n  ref,\n  watchEffect,\n} from 'vue'\nimport { PopperRoot } from '@/Popper'\nimport { injectMenuContext, provideMenuContext } from './MenuRoot.vue'\n\nconst props = withDefaults(defineProps<MenuSubProps>(), {\n  open: undefined,\n})\nconst emits = defineEmits<MenuSubEmits>()\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: false,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst parentMenuContext = injectMenuContext()\nconst trigger = ref<HTMLElement>()\nconst content = ref<HTMLElement>()\n\n// Prevent the parent menu from reopening with open submenus.\nwatchEffect((cleanupFn) => {\n  if (parentMenuContext?.open.value === false)\n    open.value = false\n  cleanupFn(() => (open.value = false))\n})\n\nprovideMenuContext({\n  open,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  content,\n  onContentChange: (element) => {\n    content.value = element\n  },\n})\n\nprovideMenuSubContext({\n  triggerId: '',\n  contentId: '',\n  trigger,\n  onTriggerChange: (element) => {\n    trigger.value = element\n  },\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuContext } from './MenuRoot.vue'\nimport { createContext } from '@/shared'\n\nexport interface MenuSubContext {\n  contentId: string\n  triggerId: string\n  trigger: Ref<HTMLElement | undefined>\n  onTriggerChange: (trigger: HTMLElement | undefined) => void\n  parentMenuContext?: MenuContext\n}\n\nexport const [injectMenuSubContext, provideMenuSubContext]\n  = createContext<MenuSubContext>('MenuSub')\n\nexport interface MenuSubProps {\n  /** The controlled open state of the menu. Can be used as `v-model:open`. */\n  open?: boolean\n}\n\nexport type MenuSubEmits = {\n  /** Event handler called when the open state of the submenu changes. */\n  'update:open': [payload: boolean]\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport {\n  ref,\n  watchEffect,\n} from 'vue'\nimport { PopperRoot } from '@/Popper'\nimport { injectMenuContext, provideMenuContext } from './MenuRoot.vue'\n\nconst props = withDefaults(defineProps<MenuSubProps>(), {\n  open: undefined,\n})\nconst emits = defineEmits<MenuSubEmits>()\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: false,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst parentMenuContext = injectMenuContext()\nconst trigger = ref<HTMLElement>()\nconst content = ref<HTMLElement>()\n\n// Prevent the parent menu from reopening with open submenus.\nwatchEffect((cleanupFn) => {\n  if (parentMenuContext?.open.value === false)\n    open.value = false\n  cleanupFn(() => (open.value = false))\n})\n\nprovideMenuContext({\n  open,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  content,\n  onContentChange: (element) => {\n    content.value = element\n  },\n})\n\nprovideMenuSubContext({\n  triggerId: '',\n  contentId: '',\n  trigger,\n  onTriggerChange: (element) => {\n    trigger.value = element\n  },\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuContentImplEmits,\n  MenuContentImplProps,\n} from './MenuContentImpl.vue'\n\nexport type MenuSubContentEmits = MenuContentImplEmits\n\n// reference: https://github.com/radix-ui/primitives/blob/main/packages/react/menu/src/Menu.tsx#L1152\nexport interface MenuSubContentProps extends Omit<MenuContentImplProps, 'disableOutsidePointerEvents' | 'disableOutsideScroll' | 'trapFocus' | 'side' | 'align'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport MenuContentImpl from './MenuContentImpl.vue'\nimport { injectMenuContext, injectMenuRootContext } from './MenuRoot.vue'\nimport { injectMenuSubContext } from './MenuSub.vue'\nimport { SUB_CLOSE_KEYS } from './utils'\n\nconst props = withDefaults(defineProps<MenuSubContentProps>(), {\n  prioritizePosition: true,\n})\nconst emits = defineEmits<MenuSubContentEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst menuContext = injectMenuContext()\nconst rootContext = injectMenuRootContext()\nconst menuSubContext = injectMenuSubContext()\n\nconst { forwardRef, currentElement: subContentElement } = useForwardExpose()\n\nmenuSubContext.contentId ||= useId(undefined, 'reka-menu-sub-content')\n</script>\n\n<template>\n  <Presence :present=\"forceMount || menuContext.open.value\">\n    <MenuContentImpl\n      v-bind=\"forwarded\"\n      :id=\"menuSubContext.contentId\"\n      :ref=\"forwardRef\"\n      :aria-labelledby=\"menuSubContext.triggerId\"\n      align=\"start\"\n      :side=\"rootContext.dir.value === 'rtl' ? 'left' : 'right'\"\n      :disable-outside-pointer-events=\"false\"\n      :disable-outside-scroll=\"false\"\n      :trap-focus=\"false\"\n      @open-auto-focus.prevent=\"(event) => {\n        // when opening a submenu, focus content for keyboard users only\n        if (rootContext.isUsingKeyboardRef.value) subContentElement?.focus();\n      }\"\n      @close-auto-focus.prevent\n      @focus-outside=\"\n        (event) => {\n          if (event.defaultPrevented) return;\n          // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n          // on pointer interaction.\n          if (event.target !== menuSubContext.trigger.value)\n            menuContext.onOpenChange(false);\n        }\n      \"\n      @escape-key-down=\"\n        (event) => {\n          rootContext.onClose();\n          // ensure pressing escape in submenu doesn't escape full screen mode\n          event.preventDefault();\n        }\n      \"\n      @keydown=\"(event: KeyboardEvent) => {\n        // Submenu key events bubble through portals. We only care about keys in this menu.\n        const isKeyDownInside = (event.currentTarget as HTMLElement)?.contains(event.target as HTMLElement);\n        const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir.value].includes(event.key);\n        if (isKeyDownInside && isCloseKey) {\n          menuContext.onOpenChange(false);\n          // We focus manually because we prevented it in `onCloseAutoFocus`\n          menuSubContext.trigger.value?.focus();\n          // prevent window from scrolling\n          event.preventDefault();\n        }\n      }\"\n    >\n      <slot />\n    </MenuContentImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuContentImplEmits,\n  MenuContentImplProps,\n} from './MenuContentImpl.vue'\n\nexport type MenuSubContentEmits = MenuContentImplEmits\n\n// reference: https://github.com/radix-ui/primitives/blob/main/packages/react/menu/src/Menu.tsx#L1152\nexport interface MenuSubContentProps extends Omit<MenuContentImplProps, 'disableOutsidePointerEvents' | 'disableOutsideScroll' | 'trapFocus' | 'side' | 'align'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport MenuContentImpl from './MenuContentImpl.vue'\nimport { injectMenuContext, injectMenuRootContext } from './MenuRoot.vue'\nimport { injectMenuSubContext } from './MenuSub.vue'\nimport { SUB_CLOSE_KEYS } from './utils'\n\nconst props = withDefaults(defineProps<MenuSubContentProps>(), {\n  prioritizePosition: true,\n})\nconst emits = defineEmits<MenuSubContentEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst menuContext = injectMenuContext()\nconst rootContext = injectMenuRootContext()\nconst menuSubContext = injectMenuSubContext()\n\nconst { forwardRef, currentElement: subContentElement } = useForwardExpose()\n\nmenuSubContext.contentId ||= useId(undefined, 'reka-menu-sub-content')\n</script>\n\n<template>\n  <Presence :present=\"forceMount || menuContext.open.value\">\n    <MenuContentImpl\n      v-bind=\"forwarded\"\n      :id=\"menuSubContext.contentId\"\n      :ref=\"forwardRef\"\n      :aria-labelledby=\"menuSubContext.triggerId\"\n      align=\"start\"\n      :side=\"rootContext.dir.value === 'rtl' ? 'left' : 'right'\"\n      :disable-outside-pointer-events=\"false\"\n      :disable-outside-scroll=\"false\"\n      :trap-focus=\"false\"\n      @open-auto-focus.prevent=\"(event) => {\n        // when opening a submenu, focus content for keyboard users only\n        if (rootContext.isUsingKeyboardRef.value) subContentElement?.focus();\n      }\"\n      @close-auto-focus.prevent\n      @focus-outside=\"\n        (event) => {\n          if (event.defaultPrevented) return;\n          // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n          // on pointer interaction.\n          if (event.target !== menuSubContext.trigger.value)\n            menuContext.onOpenChange(false);\n        }\n      \"\n      @escape-key-down=\"\n        (event) => {\n          rootContext.onClose();\n          // ensure pressing escape in submenu doesn't escape full screen mode\n          event.preventDefault();\n        }\n      \"\n      @keydown=\"(event: KeyboardEvent) => {\n        // Submenu key events bubble through portals. We only care about keys in this menu.\n        const isKeyDownInside = (event.currentTarget as HTMLElement)?.contains(event.target as HTMLElement);\n        const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir.value].includes(event.key);\n        if (isKeyDownInside && isCloseKey) {\n          menuContext.onOpenChange(false);\n          // We focus manually because we prevented it in `onCloseAutoFocus`\n          menuSubContext.trigger.value?.focus();\n          // prevent window from scrolling\n          event.preventDefault();\n        }\n      }\"\n    >\n      <slot />\n    </MenuContentImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemImplProps } from './MenuItemImpl.vue'\nimport type { Side } from './utils'\n\nexport interface MenuSubTriggerProps extends MenuItemImplProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport type { ComponentPublicInstance } from 'vue'\nimport { nextTick, onUnmounted, ref } from 'vue'\nimport { useId } from '@/shared'\nimport MenuAnchor from './MenuAnchor.vue'\nimport { injectMenuContentContext } from './MenuContentImpl.vue'\nimport MenuItemImpl from './MenuItemImpl.vue'\nimport { injectMenuContext, injectMenuRootContext } from './MenuRoot.vue'\nimport { injectMenuSubContext } from './MenuSub.vue'\nimport { getOpenState, isMouseEvent, SUB_OPEN_KEYS } from './utils'\n\nconst props = defineProps<MenuSubTriggerProps>()\n\nconst menuContext = injectMenuContext()\nconst rootContext = injectMenuRootContext()\nconst subContext = injectMenuSubContext()\nconst contentContext = injectMenuContentContext()\n\nconst openTimerRef = ref<number | null>(null)\n\nsubContext.triggerId ||= useId(undefined, 'reka-menu-sub-trigger')\n\nfunction clearOpenTimer() {\n  if (openTimerRef.value)\n    window.clearTimeout(openTimerRef.value)\n  openTimerRef.value = null\n}\n\nonUnmounted(() => {\n  clearOpenTimer()\n})\n\nfunction handlePointerMove(event: PointerEvent) {\n  if (!isMouseEvent(event))\n    return\n  const defaultPrevented = contentContext.onItemEnter(event)\n  if (defaultPrevented)\n    return\n\n  if (!props.disabled && !menuContext.open.value && !openTimerRef.value) {\n    contentContext.onPointerGraceIntentChange(null)\n    openTimerRef.value = window.setTimeout(() => {\n      menuContext.onOpenChange(true)\n      clearOpenTimer()\n    }, 100)\n  }\n}\n\nasync function handlePointerLeave(event: PointerEvent) {\n  if (!isMouseEvent(event))\n    return\n  clearOpenTimer()\n\n  const contentRect = menuContext.content.value?.getBoundingClientRect()\n  if (contentRect?.width) {\n    // TODO (Radix UI): make sure to update this when we change positioning logic\n    // https://github.com/radix-ui/primitives/blob/main/packages/react/menu/src/Menu.tsx#L1088\n    const side = menuContext.content.value?.dataset.side as Side\n\n    const rightSide = side === 'right'\n    const bleed = rightSide ? -5 : +5\n    const contentNearEdge = contentRect[rightSide ? 'left' : 'right']\n    const contentFarEdge = contentRect[rightSide ? 'right' : 'left']\n\n    contentContext.onPointerGraceIntentChange({\n      area: [\n        // Apply a bleed on clientX to ensure that our exit point is\n        // consistently within polygon bounds\n        { x: event.clientX + bleed, y: event.clientY },\n        { x: contentNearEdge, y: contentRect.top },\n        { x: contentFarEdge, y: contentRect.top },\n        { x: contentFarEdge, y: contentRect.bottom },\n        { x: contentNearEdge, y: contentRect.bottom },\n      ],\n      side,\n    })\n\n    window.clearTimeout(contentContext.pointerGraceTimerRef.value)\n    contentContext.pointerGraceTimerRef.value = window.setTimeout(\n      () => contentContext.onPointerGraceIntentChange(null),\n      300,\n    )\n  }\n  else {\n    const defaultPrevented = contentContext.onTriggerLeave(event)\n    if (defaultPrevented)\n      return\n\n    // There's 100ms where the user may leave an item before the submenu was opened.\n    contentContext.onPointerGraceIntentChange(null)\n  }\n}\n\nasync function handleKeyDown(event: KeyboardEvent) {\n  const isTypingAhead = contentContext.searchRef.value !== ''\n  if (props.disabled || (isTypingAhead && event.key === ' '))\n    return\n  if (SUB_OPEN_KEYS[rootContext.dir.value].includes(event.key)) {\n    menuContext.onOpenChange(true)\n\n    await nextTick()\n    // The trigger may hold focus if opened via pointer interaction\n    // so we ensure content is given focus again when switching to keyboard.\n    menuContext.content.value?.focus()\n    // prevent window from scrolling\n    event.preventDefault()\n  }\n}\n</script>\n\n<template>\n  <MenuAnchor as-child>\n    <MenuItemImpl\n      v-bind=\"props\"\n      :id=\"subContext.triggerId\"\n      :ref=\"\n        (vnode: ComponentPublicInstance) => {\n          // @ts-ignore\n          subContext?.onTriggerChange(vnode?.$el);\n          return undefined\n        }\n      \"\n      aria-haspopup=\"menu\"\n      :aria-expanded=\"menuContext.open.value\"\n      :aria-controls=\"subContext.contentId\"\n      :data-state=\"getOpenState(menuContext.open.value)\"\n      @click=\"\n        async (event) => {\n          if (props.disabled || event.defaultPrevented) return;\n          /**\n           * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n           * and we rely heavily on `onFocusOutside` for submenus to close when switching\n           * between separate submenus.\n           */\n          event.currentTarget.focus();\n          if (!menuContext.open.value) menuContext.onOpenChange(true);\n        }\n      \"\n      @pointermove=\"handlePointerMove\"\n      @pointerleave=\"handlePointerLeave\"\n      @keydown=\"handleKeyDown\"\n    >\n      <slot />\n    </MenuItemImpl>\n  </MenuAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemImplProps } from './MenuItemImpl.vue'\nimport type { Side } from './utils'\n\nexport interface MenuSubTriggerProps extends MenuItemImplProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport type { ComponentPublicInstance } from 'vue'\nimport { nextTick, onUnmounted, ref } from 'vue'\nimport { useId } from '@/shared'\nimport MenuAnchor from './MenuAnchor.vue'\nimport { injectMenuContentContext } from './MenuContentImpl.vue'\nimport MenuItemImpl from './MenuItemImpl.vue'\nimport { injectMenuContext, injectMenuRootContext } from './MenuRoot.vue'\nimport { injectMenuSubContext } from './MenuSub.vue'\nimport { getOpenState, isMouseEvent, SUB_OPEN_KEYS } from './utils'\n\nconst props = defineProps<MenuSubTriggerProps>()\n\nconst menuContext = injectMenuContext()\nconst rootContext = injectMenuRootContext()\nconst subContext = injectMenuSubContext()\nconst contentContext = injectMenuContentContext()\n\nconst openTimerRef = ref<number | null>(null)\n\nsubContext.triggerId ||= useId(undefined, 'reka-menu-sub-trigger')\n\nfunction clearOpenTimer() {\n  if (openTimerRef.value)\n    window.clearTimeout(openTimerRef.value)\n  openTimerRef.value = null\n}\n\nonUnmounted(() => {\n  clearOpenTimer()\n})\n\nfunction handlePointerMove(event: PointerEvent) {\n  if (!isMouseEvent(event))\n    return\n  const defaultPrevented = contentContext.onItemEnter(event)\n  if (defaultPrevented)\n    return\n\n  if (!props.disabled && !menuContext.open.value && !openTimerRef.value) {\n    contentContext.onPointerGraceIntentChange(null)\n    openTimerRef.value = window.setTimeout(() => {\n      menuContext.onOpenChange(true)\n      clearOpenTimer()\n    }, 100)\n  }\n}\n\nasync function handlePointerLeave(event: PointerEvent) {\n  if (!isMouseEvent(event))\n    return\n  clearOpenTimer()\n\n  const contentRect = menuContext.content.value?.getBoundingClientRect()\n  if (contentRect?.width) {\n    // TODO (Radix UI): make sure to update this when we change positioning logic\n    // https://github.com/radix-ui/primitives/blob/main/packages/react/menu/src/Menu.tsx#L1088\n    const side = menuContext.content.value?.dataset.side as Side\n\n    const rightSide = side === 'right'\n    const bleed = rightSide ? -5 : +5\n    const contentNearEdge = contentRect[rightSide ? 'left' : 'right']\n    const contentFarEdge = contentRect[rightSide ? 'right' : 'left']\n\n    contentContext.onPointerGraceIntentChange({\n      area: [\n        // Apply a bleed on clientX to ensure that our exit point is\n        // consistently within polygon bounds\n        { x: event.clientX + bleed, y: event.clientY },\n        { x: contentNearEdge, y: contentRect.top },\n        { x: contentFarEdge, y: contentRect.top },\n        { x: contentFarEdge, y: contentRect.bottom },\n        { x: contentNearEdge, y: contentRect.bottom },\n      ],\n      side,\n    })\n\n    window.clearTimeout(contentContext.pointerGraceTimerRef.value)\n    contentContext.pointerGraceTimerRef.value = window.setTimeout(\n      () => contentContext.onPointerGraceIntentChange(null),\n      300,\n    )\n  }\n  else {\n    const defaultPrevented = contentContext.onTriggerLeave(event)\n    if (defaultPrevented)\n      return\n\n    // There's 100ms where the user may leave an item before the submenu was opened.\n    contentContext.onPointerGraceIntentChange(null)\n  }\n}\n\nasync function handleKeyDown(event: KeyboardEvent) {\n  const isTypingAhead = contentContext.searchRef.value !== ''\n  if (props.disabled || (isTypingAhead && event.key === ' '))\n    return\n  if (SUB_OPEN_KEYS[rootContext.dir.value].includes(event.key)) {\n    menuContext.onOpenChange(true)\n\n    await nextTick()\n    // The trigger may hold focus if opened via pointer interaction\n    // so we ensure content is given focus again when switching to keyboard.\n    menuContext.content.value?.focus()\n    // prevent window from scrolling\n    event.preventDefault()\n  }\n}\n</script>\n\n<template>\n  <MenuAnchor as-child>\n    <MenuItemImpl\n      v-bind=\"props\"\n      :id=\"subContext.triggerId\"\n      :ref=\"\n        (vnode: ComponentPublicInstance) => {\n          // @ts-ignore\n          subContext?.onTriggerChange(vnode?.$el);\n          return undefined\n        }\n      \"\n      aria-haspopup=\"menu\"\n      :aria-expanded=\"menuContext.open.value\"\n      :aria-controls=\"subContext.contentId\"\n      :data-state=\"getOpenState(menuContext.open.value)\"\n      @click=\"\n        async (event) => {\n          if (props.disabled || event.defaultPrevented) return;\n          /**\n           * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n           * and we rely heavily on `onFocusOutside` for submenus to close when switching\n           * between separate submenus.\n           */\n          event.currentTarget.focus();\n          if (!menuContext.open.value) menuContext.onOpenChange(true);\n        }\n      \"\n      @pointermove=\"handlePointerMove\"\n      @pointerleave=\"handlePointerLeave\"\n      @keydown=\"handleKeyDown\"\n    >\n      <slot />\n    </MenuItemImpl>\n  </MenuAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuArrowProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ContextMenuArrowProps extends MenuArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuArrow } from '@/Menu'\n\nconst props = withDefaults(defineProps<ContextMenuArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\n\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuArrow v-bind=\"props\">\n    <slot />\n  </MenuArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuArrowProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ContextMenuArrowProps extends MenuArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuArrow } from '@/Menu'\n\nconst props = withDefaults(defineProps<ContextMenuArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\n\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuArrow v-bind=\"props\">\n    <slot />\n  </MenuArrow>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuCheckboxItemEmits,\n  MenuCheckboxItemProps,\n} from '@/Menu'\n\nexport type ContextMenuCheckboxItemEmits = MenuCheckboxItemEmits\n\nexport interface ContextMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuCheckboxItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuCheckboxItemProps>()\nconst emits = defineEmits<ContextMenuCheckboxItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuCheckboxItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuCheckboxItem>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuCheckboxItemEmits,\n  MenuCheckboxItemProps,\n} from '@/Menu'\n\nexport type ContextMenuCheckboxItemEmits = MenuCheckboxItemEmits\n\nexport interface ContextMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuCheckboxItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuCheckboxItemProps>()\nconst emits = defineEmits<ContextMenuCheckboxItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuCheckboxItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuCheckboxItem>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuEmits, MenuProps } from '@/Menu'\nimport type { Direction } from '@/shared/types'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\ntype ContextMenuRootContext = {\n  open: Ref<boolean>\n  onOpenChange: (open: boolean) => void\n  modal: Ref<boolean>\n  dir: Ref<Direction>\n  triggerElement: Ref<HTMLElement | undefined>\n  pressOpenDelay: Ref<number>\n}\n\nexport interface ContextMenuRootProps extends Omit<MenuProps, 'open'> {\n  /**\n   * The duration from when the trigger is pressed until the menu openes.\n   *\n   * @defaultValue 700\n   */\n  pressOpenDelay?: number\n}\nexport type ContextMenuRootEmits = MenuEmits\n\nexport const [injectContextMenuRootContext, provideContextMenuRootContext]\n  = createContext<ContextMenuRootContext>('ContextMenuRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, toRefs, watch } from 'vue'\nimport { MenuRoot } from '@/Menu'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ContextMenuRootProps>(), {\n  modal: true,\n  pressOpenDelay: 700,\n})\nconst emits = defineEmits<ContextMenuRootEmits>()\nconst { dir: propDir, modal, pressOpenDelay } = toRefs(props)\nuseForwardExpose()\nconst dir = useDirection(propDir)\n\nconst open = ref(false)\nconst triggerElement = ref<HTMLElement>()\n\nprovideContextMenuRootContext({\n  open,\n  onOpenChange: (value: boolean) => {\n    open.value = value\n  },\n  dir,\n  modal,\n  triggerElement,\n  pressOpenDelay,\n})\n\nwatch(open, (value) => {\n  emits('update:open', value)\n})\n</script>\n\n<template>\n  <MenuRoot\n    v-model:open=\"open\"\n    :dir=\"dir\"\n    :modal=\"modal\"\n  >\n    <slot />\n  </MenuRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuEmits, MenuProps } from '@/Menu'\nimport type { Direction } from '@/shared/types'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\ntype ContextMenuRootContext = {\n  open: Ref<boolean>\n  onOpenChange: (open: boolean) => void\n  modal: Ref<boolean>\n  dir: Ref<Direction>\n  triggerElement: Ref<HTMLElement | undefined>\n  pressOpenDelay: Ref<number>\n}\n\nexport interface ContextMenuRootProps extends Omit<MenuProps, 'open'> {\n  /**\n   * The duration from when the trigger is pressed until the menu openes.\n   *\n   * @defaultValue 700\n   */\n  pressOpenDelay?: number\n}\nexport type ContextMenuRootEmits = MenuEmits\n\nexport const [injectContextMenuRootContext, provideContextMenuRootContext]\n  = createContext<ContextMenuRootContext>('ContextMenuRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, toRefs, watch } from 'vue'\nimport { MenuRoot } from '@/Menu'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ContextMenuRootProps>(), {\n  modal: true,\n  pressOpenDelay: 700,\n})\nconst emits = defineEmits<ContextMenuRootEmits>()\nconst { dir: propDir, modal, pressOpenDelay } = toRefs(props)\nuseForwardExpose()\nconst dir = useDirection(propDir)\n\nconst open = ref(false)\nconst triggerElement = ref<HTMLElement>()\n\nprovideContextMenuRootContext({\n  open,\n  onOpenChange: (value: boolean) => {\n    open.value = value\n  },\n  dir,\n  modal,\n  triggerElement,\n  pressOpenDelay,\n})\n\nwatch(open, (value) => {\n  emits('update:open', value)\n})\n</script>\n\n<template>\n  <MenuRoot\n    v-model:open=\"open\"\n    :dir=\"dir\"\n    :modal=\"modal\"\n  >\n    <slot />\n  </MenuRoot>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuContentEmits,\n  MenuContentProps,\n} from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nexport type ContextMenuContentEmits = MenuContentEmits\n\nexport interface ContextMenuContentProps\n  extends Omit<\n    MenuContentProps,\n    | 'side'\n    | 'sideOffset'\n    | 'align'\n    | 'arrowPadding'\n    | 'updatePositionStrategy'\n  > {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { MenuContent } from '@/Menu'\nimport { injectContextMenuRootContext } from './ContextMenuRoot.vue'\n\nconst props = withDefaults(defineProps<ContextMenuContentProps>(), {\n  alignOffset: 0,\n  avoidCollisions: true,\n  collisionBoundary: () => [],\n  collisionPadding: 0,\n  sticky: 'partial',\n  hideWhenDetached: false,\n})\nconst emits = defineEmits<ContextMenuContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nuseForwardExpose()\nconst rootContext = injectContextMenuRootContext()\nconst hasInteractedOutside = ref(false)\n</script>\n\n<template>\n  <MenuContent\n    v-bind=\"forwarded\"\n    side=\"right\"\n    :side-offset=\"2\"\n    align=\"start\"\n    update-position-strategy=\"always\"\n    :style=\"{\n      '--reka-context-menu-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-context-menu-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-context-menu-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-context-menu-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-context-menu-trigger-height':\n        'var(--reka-popper-anchor-height)',\n    }\"\n    @close-auto-focus=\"\n      (event) => {\n        if (!event.defaultPrevented && hasInteractedOutside) {\n          event.preventDefault();\n        }\n        hasInteractedOutside = false;\n      }\n    \"\n    @interact-outside=\"\n      (event) => {\n        const originalEvent = event.detail.originalEvent as PointerEvent\n        // Prevent closing when right click (button=2) with the trigger element\n        if (originalEvent.button === 2 && event.target === rootContext.triggerElement.value) {\n          event.preventDefault()\n        }\n        if (!event.defaultPrevented && !rootContext.modal.value)\n          hasInteractedOutside = true;\n      }\n    \"\n  >\n    <slot />\n  </MenuContent>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuContentEmits,\n  MenuContentProps,\n} from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nexport type ContextMenuContentEmits = MenuContentEmits\n\nexport interface ContextMenuContentProps\n  extends Omit<\n    MenuContentProps,\n    | 'side'\n    | 'sideOffset'\n    | 'align'\n    | 'arrowPadding'\n    | 'updatePositionStrategy'\n  > {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { MenuContent } from '@/Menu'\nimport { injectContextMenuRootContext } from './ContextMenuRoot.vue'\n\nconst props = withDefaults(defineProps<ContextMenuContentProps>(), {\n  alignOffset: 0,\n  avoidCollisions: true,\n  collisionBoundary: () => [],\n  collisionPadding: 0,\n  sticky: 'partial',\n  hideWhenDetached: false,\n})\nconst emits = defineEmits<ContextMenuContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nuseForwardExpose()\nconst rootContext = injectContextMenuRootContext()\nconst hasInteractedOutside = ref(false)\n</script>\n\n<template>\n  <MenuContent\n    v-bind=\"forwarded\"\n    side=\"right\"\n    :side-offset=\"2\"\n    align=\"start\"\n    update-position-strategy=\"always\"\n    :style=\"{\n      '--reka-context-menu-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-context-menu-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-context-menu-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-context-menu-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-context-menu-trigger-height':\n        'var(--reka-popper-anchor-height)',\n    }\"\n    @close-auto-focus=\"\n      (event) => {\n        if (!event.defaultPrevented && hasInteractedOutside) {\n          event.preventDefault();\n        }\n        hasInteractedOutside = false;\n      }\n    \"\n    @interact-outside=\"\n      (event) => {\n        const originalEvent = event.detail.originalEvent as PointerEvent\n        // Prevent closing when right click (button=2) with the trigger element\n        if (originalEvent.button === 2 && event.target === rootContext.triggerElement.value) {\n          event.preventDefault()\n        }\n        if (!event.defaultPrevented && !rootContext.modal.value)\n          hasInteractedOutside = true;\n      }\n    \"\n  >\n    <slot />\n  </MenuContent>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuGroupProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ContextMenuGroupProps extends MenuGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuGroup } from '@/Menu'\n\nconst props = defineProps<ContextMenuGroupProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuGroup v-bind=\"props\">\n    <slot />\n  </MenuGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuGroupProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ContextMenuGroupProps extends MenuGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuGroup } from '@/Menu'\n\nconst props = defineProps<ContextMenuGroupProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuGroup v-bind=\"props\">\n    <slot />\n  </MenuGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemEmits, MenuItemProps } from '@/Menu'\n\nexport type ContextMenuItemEmits = MenuItemEmits\n\nexport interface ContextMenuItemProps extends MenuItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenuItemProps>()\nconst emits = defineEmits<MenuItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemEmits, MenuItemProps } from '@/Menu'\n\nexport type ContextMenuItemEmits = MenuItemEmits\n\nexport interface ContextMenuItemProps extends MenuItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenuItemProps>()\nconst emits = defineEmits<MenuItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemIndicatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ContextMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItemIndicator } from '@/Menu'\n\nconst props = defineProps<ContextMenuItemIndicatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItemIndicator v-bind=\"props\">\n    <slot />\n  </MenuItemIndicator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemIndicatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ContextMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItemIndicator } from '@/Menu'\n\nconst props = defineProps<ContextMenuItemIndicatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItemIndicator v-bind=\"props\">\n    <slot />\n  </MenuItemIndicator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuLabelProps } from '@/Menu'\n\nexport interface ContextMenuLabelProps extends MenuLabelProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuLabel } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuLabelProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuLabel v-bind=\"props\">\n    <slot />\n  </MenuLabel>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuLabelProps } from '@/Menu'\n\nexport interface ContextMenuLabelProps extends MenuLabelProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuLabel } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuLabelProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuLabel v-bind=\"props\">\n    <slot />\n  </MenuLabel>\n</template>\n", "<script setup lang=\"ts\">\nimport type { MenuPortalProps } from '@/Menu'\nimport { MenuPortal } from '@/Menu'\n\nexport interface ContextMenuPortalProps extends MenuPortalProps {}\nconst props = defineProps<ContextMenuPortalProps>()\n</script>\n\n<template>\n  <MenuPortal v-bind=\"props\">\n    <slot />\n  </MenuPortal>\n</template>\n", "<script setup lang=\"ts\">\nimport type { MenuPortalProps } from '@/Menu'\nimport { MenuPortal } from '@/Menu'\n\nexport interface ContextMenuPortalProps extends MenuPortalProps {}\nconst props = defineProps<ContextMenuPortalProps>()\n</script>\n\n<template>\n  <MenuPortal v-bind=\"props\">\n    <slot />\n  </MenuPortal>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioGroupEmits,\n  MenuRadioGroupProps,\n} from '@/Menu'\n\nexport type ContextMenuRadioGroupEmits = MenuRadioGroupEmits\n\nexport interface ContextMenuRadioGroupProps extends MenuRadioGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioGroup } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuRadioGroupProps>()\nconst emits = defineEmits<ContextMenuRadioGroupEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioGroup v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuRadioGroup>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioGroupEmits,\n  MenuRadioGroupProps,\n} from '@/Menu'\n\nexport type ContextMenuRadioGroupEmits = MenuRadioGroupEmits\n\nexport interface ContextMenuRadioGroupProps extends MenuRadioGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioGroup } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuRadioGroupProps>()\nconst emits = defineEmits<ContextMenuRadioGroupEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioGroup v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuRadioGroup>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuItemEmits,\n  MenuRadioItemProps,\n} from '@/Menu'\n\nexport type ContextMenuRadioItemEmits = MenuItemEmits\n\nexport interface ContextMenuRadioItemProps extends MenuRadioItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuRadioItemProps>()\nconst emits = defineEmits<ContextMenuRadioItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuRadioItem>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuItemEmits,\n  MenuRadioItemProps,\n} from '@/Menu'\n\nexport type ContextMenuRadioItemEmits = MenuItemEmits\n\nexport interface ContextMenuRadioItemProps extends MenuRadioItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuRadioItemProps>()\nconst emits = defineEmits<ContextMenuRadioItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuRadioItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSeparatorProps } from '@/Menu'\n\nexport interface ContextMenuSeparatorProps extends MenuSeparatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSeparator } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuSeparatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSeparator v-bind=\"props\">\n    <slot />\n  </MenuSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSeparatorProps } from '@/Menu'\n\nexport interface ContextMenuSeparatorProps extends MenuSeparatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSeparator } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuSeparatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSeparator v-bind=\"props\">\n    <slot />\n  </MenuSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuSubEmits, MenuSubProps } from '@/Menu'\n\nexport type ContextMenuSubEmits = MenuSubEmits\nexport interface ContextMenuSubProps extends MenuSubProps {\n  /** The open state of the submenu when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { MenuSub } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = withDefaults(defineProps<ContextMenuSubProps>(), {\n  open: undefined,\n})\nconst emit = defineEmits<ContextMenuSubEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nuseForwardExpose()\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n</script>\n\n<template>\n  <MenuSub v-model:open=\"open\">\n    <slot :open=\"open\" />\n  </MenuSub>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuSubEmits, MenuSubProps } from '@/Menu'\n\nexport type ContextMenuSubEmits = MenuSubEmits\nexport interface ContextMenuSubProps extends MenuSubProps {\n  /** The open state of the submenu when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { MenuSub } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = withDefaults(defineProps<ContextMenuSubProps>(), {\n  open: undefined,\n})\nconst emit = defineEmits<ContextMenuSubEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nuseForwardExpose()\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n</script>\n\n<template>\n  <MenuSub v-model:open=\"open\">\n    <slot :open=\"open\" />\n  </MenuSub>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuSubContentEmits,\n  MenuSubContentProps,\n} from '@/Menu'\n\nexport type ContextMenuSubContentEmits = MenuSubContentEmits\nexport interface ContextMenuSubContentProps extends MenuSubContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubContent } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nconst props = defineProps<ContextMenuSubContentProps>()\n\nconst emits = defineEmits<ContextMenuSubContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubContent\n    v-bind=\"forwarded\"\n    :style=\"{\n      '--reka-context-menu-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-context-menu-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-context-menu-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-context-menu-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-context-menu-trigger-height':\n        'var(--reka-popper-anchor-height)',\n    }\"\n  >\n    <slot />\n  </MenuSubContent>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuSubContentEmits,\n  MenuSubContentProps,\n} from '@/Menu'\n\nexport type ContextMenuSubContentEmits = MenuSubContentEmits\nexport interface ContextMenuSubContentProps extends MenuSubContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubContent } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nconst props = defineProps<ContextMenuSubContentProps>()\n\nconst emits = defineEmits<ContextMenuSubContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubContent\n    v-bind=\"forwarded\"\n    :style=\"{\n      '--reka-context-menu-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-context-menu-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-context-menu-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-context-menu-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-context-menu-trigger-height':\n        'var(--reka-popper-anchor-height)',\n    }\"\n  >\n    <slot />\n  </MenuSubContent>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSubTriggerProps } from '@/Menu'\n\nexport interface ContextMenuSubTriggerProps extends MenuSubTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubTrigger } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuSubTriggerProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubTrigger v-bind=\"props\">\n    <slot />\n  </MenuSubTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSubTriggerProps } from '@/Menu'\n\nexport interface ContextMenuSubTriggerProps extends MenuSubTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubTrigger } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = defineProps<ContextMenuSubTriggerProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubTrigger v-bind=\"props\">\n    <slot />\n  </MenuSubTrigger>\n</template>\n", "export function isTouchOrPen(event: PointerEvent) {\n  return event.pointerType !== 'mouse'\n}\n", "<script lang=\"ts\">\nimport type { Point } from '@/Menu/utils'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ContextMenuTriggerProps extends PrimitiveProps {\n  /**\n   * When `true`, the context menu would not open when right-clicking.\n   *\n   * Note that this will also restore the native context menu.\n   */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, onMounted, ref, toRefs } from 'vue'\nimport { MenuAnchor } from '@/Menu'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectContextMenuRootContext } from './ContextMenuRoot.vue'\nimport { isTouchOrPen } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ContextMenuTriggerProps>(), {\n  as: 'span',\n  disabled: false,\n})\nconst { disabled } = toRefs(props)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectContextMenuRootContext()\nconst point = ref<Point>({ x: 0, y: 0 })\nconst virtualEl = computed(() => ({\n  getBoundingClientRect: () =>\n    ({\n      width: 0,\n      height: 0,\n      left: point.value.x,\n      right: point.value.x,\n      top: point.value.y,\n      bottom: point.value.y,\n      ...point.value,\n    } as DOMRect),\n}))\n\nconst longPressTimer = ref(0)\nfunction clearLongPress() {\n  window.clearTimeout(longPressTimer.value)\n}\n\nfunction handleOpen(event: MouseEvent | PointerEvent) {\n  point.value = { x: event.clientX, y: event.clientY }\n  rootContext.onOpenChange(true)\n}\n\nasync function handleContextMenu(event: PointerEvent) {\n  if (!disabled.value) {\n    await nextTick()\n    if (!event.defaultPrevented) {\n      clearLongPress()\n      handleOpen(event)\n      event.preventDefault()\n    }\n  }\n}\n\nasync function handlePointerDown(event: PointerEvent) {\n  if (!disabled.value) {\n    await nextTick()\n\n    if (isTouchOrPen(event) && !event.defaultPrevented) {\n      // clear the long press here in case there's multiple touch points\n      clearLongPress()\n      longPressTimer.value = window.setTimeout(\n        () => handleOpen(event),\n        rootContext.pressOpenDelay.value,\n      )\n    }\n  }\n}\n\nasync function handlePointerEvent(event: PointerEvent) {\n  if (!disabled.value) {\n    await nextTick()\n    if (isTouchOrPen(event) && !event.defaultPrevented)\n      clearLongPress()\n  }\n}\n\nonMounted(() => {\n  if (currentElement.value) {\n    rootContext.triggerElement.value = currentElement.value\n  }\n})\n</script>\n\n<template>\n  <MenuAnchor\n    as=\"template\"\n    :reference=\"virtualEl\"\n  />\n\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :style=\"{\n      WebkitTouchCallout: 'none',\n      pointerEvents: 'auto',\n    }\"\n    v-bind=\"$attrs\"\n    @contextmenu=\"handleContextMenu\"\n    @pointerdown=\"handlePointerDown\"\n    @pointermove=\"handlePointerEvent\"\n    @pointercancel=\"handlePointerEvent\"\n    @pointerup=\"handlePointerEvent\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Point } from '@/Menu/utils'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ContextMenuTriggerProps extends PrimitiveProps {\n  /**\n   * When `true`, the context menu would not open when right-clicking.\n   *\n   * Note that this will also restore the native context menu.\n   */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, onMounted, ref, toRefs } from 'vue'\nimport { MenuAnchor } from '@/Menu'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectContextMenuRootContext } from './ContextMenuRoot.vue'\nimport { isTouchOrPen } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ContextMenuTriggerProps>(), {\n  as: 'span',\n  disabled: false,\n})\nconst { disabled } = toRefs(props)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectContextMenuRootContext()\nconst point = ref<Point>({ x: 0, y: 0 })\nconst virtualEl = computed(() => ({\n  getBoundingClientRect: () =>\n    ({\n      width: 0,\n      height: 0,\n      left: point.value.x,\n      right: point.value.x,\n      top: point.value.y,\n      bottom: point.value.y,\n      ...point.value,\n    } as DOMRect),\n}))\n\nconst longPressTimer = ref(0)\nfunction clearLongPress() {\n  window.clearTimeout(longPressTimer.value)\n}\n\nfunction handleOpen(event: MouseEvent | PointerEvent) {\n  point.value = { x: event.clientX, y: event.clientY }\n  rootContext.onOpenChange(true)\n}\n\nasync function handleContextMenu(event: PointerEvent) {\n  if (!disabled.value) {\n    await nextTick()\n    if (!event.defaultPrevented) {\n      clearLongPress()\n      handleOpen(event)\n      event.preventDefault()\n    }\n  }\n}\n\nasync function handlePointerDown(event: PointerEvent) {\n  if (!disabled.value) {\n    await nextTick()\n\n    if (isTouchOrPen(event) && !event.defaultPrevented) {\n      // clear the long press here in case there's multiple touch points\n      clearLongPress()\n      longPressTimer.value = window.setTimeout(\n        () => handleOpen(event),\n        rootContext.pressOpenDelay.value,\n      )\n    }\n  }\n}\n\nasync function handlePointerEvent(event: PointerEvent) {\n  if (!disabled.value) {\n    await nextTick()\n    if (isTouchOrPen(event) && !event.defaultPrevented)\n      clearLongPress()\n  }\n}\n\nonMounted(() => {\n  if (currentElement.value) {\n    rootContext.triggerElement.value = currentElement.value\n  }\n})\n</script>\n\n<template>\n  <MenuAnchor\n    as=\"template\"\n    :reference=\"virtualEl\"\n  />\n\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :style=\"{\n      WebkitTouchCallout: 'none',\n      pointerEvents: 'auto',\n    }\"\n    v-bind=\"$attrs\"\n    @contextmenu=\"handleContextMenu\"\n    @pointerdown=\"handlePointerDown\"\n    @pointermove=\"handlePointerEvent\"\n    @pointercancel=\"handlePointerEvent\"\n    @pointerup=\"handlePointerEvent\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { Matcher } from '@/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { DateStep, Formatter } from '@/shared'\nimport type { Granularity, HourCycle, SegmentPart, SegmentValueObj } from '@/shared/date'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { hasTime, isBefore } from '@/date'\nimport { createContext, isNullish, useDateFormatter, useDirection, useKbd, useLocale } from '@/shared'\nimport {\n  createContent,\n  getDefaultDate,\n  getSegmentElements,\n  initializeSegmentValues,\n  isSegmentNavigationKey,\n  normalizeDateStep,\n  normalizeHourCycle,\n  syncSegmentValues,\n} from '@/shared/date'\n\ntype DateFieldRootContext = {\n  locale: Ref<string>\n  modelValue: Ref<DateValue | undefined>\n  placeholder: Ref<DateValue>\n  isDateUnavailable?: Matcher\n  isInvalid: Ref<boolean>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  formatter: Formatter\n  hourCycle: HourCycle\n  step: Ref<DateStep>\n  segmentValues: Ref<SegmentValueObj>\n  segmentContents: Ref<{ part: SegmentPart, value: string }[]>\n  elements: Ref<Set<HTMLElement>>\n  focusNext: () => void\n  setFocusedElement: (el: HTMLElement) => void\n}\n\nexport interface DateFieldRootProps extends PrimitiveProps, FormFieldProps {\n  /** The default value for the calendar */\n  defaultValue?: DateValue\n  /** The default placeholder date */\n  defaultPlaceholder?: DateValue\n  /** The placeholder date, which is used to determine what month to display when no date is selected. This updates as the user navigates the calendar and can be used to programmatically control the calendar view */\n  placeholder?: DateValue\n  /** The controlled checked state of the calendar. Can be bound as `v-model`. */\n  modelValue?: DateValue | null\n  /** The hour cycle used for formatting times. Defaults to the local preference */\n  hourCycle?: HourCycle\n  /** The stepping interval for the time fields. Defaults to `1`. */\n  step?: DateStep\n  /** The granularity to use for formatting times. Defaults to day if a CalendarDate is provided, otherwise defaults to minute. The field will render segments for each part of the date up to and including the specified granularity */\n  granularity?: Granularity\n  /** Whether or not to hide the time zone segment of the field */\n  hideTimeZone?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: DateValue\n  /** The minimum date that can be selected */\n  minValue?: DateValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** Whether or not the date field is disabled */\n  disabled?: boolean\n  /** Whether or not the date field is readonly */\n  readonly?: boolean\n  /** A function that returns whether or not a date is unavailable */\n  isDateUnavailable?: Matcher\n  /** Id of the element */\n  id?: string\n  /** The reading direction of the date field when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n}\n\nexport type DateFieldRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateValue | undefined]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n}\n\nexport const [injectDateFieldRootContext, provideDateFieldRootContext]\n  = createContext<DateFieldRootContext>('DateFieldRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, onMounted, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHidden } from '@/VisuallyHidden'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<DateFieldRootProps>(), {\n  defaultValue: undefined,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  isDateUnavailable: undefined,\n})\nconst emits = defineEmits<DateFieldRootEmits>()\ndefineSlots<{\n  default?: (props: {\n    /** The current date of the field */\n    modelValue: DateValue | undefined\n    /** The date field segment contents */\n    segments: { part: SegmentPart, value: string }[]\n    /** Value if the input is invalid */\n    isInvalid: boolean\n  }) => any\n}>()\n\nconst { disabled, readonly, isDateUnavailable: propsIsDateUnavailable, granularity, defaultValue, dir: propDir, locale: propLocale } = toRefs(props)\nconst locale = useLocale(propLocale)\nconst dir = useDirection(propDir)\n\nconst formatter = useDateFormatter(locale.value, {\n  hourCycle: normalizeHourCycle(props.hourCycle),\n})\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst segmentElements = ref<Set<HTMLElement>>(new Set())\n\nonMounted(() => {\n  getSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n})\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateValue>\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  granularity: granularity.value,\n  defaultValue: modelValue.value,\n  locale: props.locale,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nconst step = computed(() => normalizeDateStep(props))\n\nconst inferredGranularity = computed(() => {\n  if (props.granularity)\n    return !hasTime(placeholder.value) ? 'day' : props.granularity\n\n  return hasTime(placeholder.value) ? 'minute' : 'day'\n})\n\nconst isInvalid = computed(() => {\n  if (!modelValue.value)\n    return false\n\n  if (propsIsDateUnavailable.value?.(modelValue.value))\n    return true\n\n  if (props.minValue && isBefore(modelValue.value, props.minValue))\n    return true\n\n  if (props.maxValue && isBefore(props.maxValue, modelValue.value))\n    return true\n\n  return false\n})\n\nconst initialSegments = initializeSegmentValues(inferredGranularity.value)\n\nconst segmentValues = ref<SegmentValueObj>(modelValue.value ? { ...syncSegmentValues({ value: modelValue.value, formatter }) } : { ...initialSegments })\n\nconst allSegmentContent = computed(() => createContent({\n  granularity: inferredGranularity.value,\n  dateRef: placeholder.value,\n  formatter,\n  hideTimeZone: props.hideTimeZone,\n  hourCycle: props.hourCycle,\n  segmentValues: segmentValues.value,\n  locale,\n}))\n\nconst segmentContents = computed(() => allSegmentContent.value.arr)\n\nconst editableSegmentContents = computed(() => segmentContents.value.filter(({ part }) => part !== 'literal'))\n\nwatch(locale, (value) => {\n  if (formatter.getLocale() !== value) {\n    formatter.setLocale(value)\n    // Locale changed, so we need to clear the segment elements and re-get them (different order)\n    // Get the focusable elements again on the next tick\n    nextTick(() => {\n      segmentElements.value.clear()\n      getSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n    })\n  }\n})\n\nwatch(modelValue, (_modelValue) => {\n  if (!isNullish(_modelValue) && placeholder.value.compare(_modelValue) !== 0) {\n    placeholder.value = _modelValue.copy()\n  }\n})\n\nwatch([modelValue, locale], ([_modelValue]) => {\n  if (!isNullish(_modelValue)) {\n    segmentValues.value = { ...syncSegmentValues({ value: _modelValue, formatter }) }\n  }\n  // If segment has null value, means that user modified it, thus do not reset the segmentValues\n  else if (Object.values(segmentValues.value).every(value => value !== null) && isNullish(_modelValue)) {\n    segmentValues.value = { ...initialSegments }\n  }\n})\n\nconst currentFocusedElement = ref<HTMLElement | null>(null)\n\nconst currentSegmentIndex = computed(() =>\n  Array.from(segmentElements.value).findIndex(el =>\n    el.getAttribute('data-reka-date-field-segment')\n    === currentFocusedElement.value?.getAttribute('data-reka-date-field-segment')))\n\nconst nextFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const nextCondition = sign < 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (nextCondition)\n    return null\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value + sign]\n  return segmentToFocus\n})\n\nconst prevFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const prevCondition = sign > 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (prevCondition)\n    return null\n\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value - sign]\n  return segmentToFocus\n})\n\nconst kbd = useKbd()\n\nfunction handleKeydown(e: KeyboardEvent) {\n  if (!isSegmentNavigationKey(e.key))\n    return\n  if (e.key === kbd.ARROW_LEFT)\n    prevFocusableSegment.value?.focus()\n  if (e.key === kbd.ARROW_RIGHT)\n    nextFocusableSegment.value?.focus()\n}\n\nfunction setFocusedElement(el: HTMLElement) {\n  currentFocusedElement.value = el\n}\n\nprovideDateFieldRootContext({\n  isDateUnavailable: propsIsDateUnavailable.value,\n  locale,\n  modelValue,\n  placeholder,\n  disabled,\n  formatter,\n  hourCycle: props.hourCycle,\n  step,\n  readonly,\n  segmentValues,\n  isInvalid,\n  segmentContents: editableSegmentContents,\n  elements: segmentElements,\n  setFocusedElement,\n  focusNext() {\n    nextFocusableSegment.value?.focus()\n  },\n})\n\ndefineExpose({\n  /** Helper to set the focused element inside the DateField */\n  setFocusedElement,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    role=\"group\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n    @keydown.left.right=\"handleKeydown\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :segments=\"segmentContents\"\n      :is-invalid=\"isInvalid\"\n    />\n\n    <VisuallyHidden\n      :id=\"id\"\n      as=\"input\"\n      feature=\"focusable\"\n      tabindex=\"-1\"\n      :value=\"modelValue ? modelValue.toString() : ''\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      @focus=\"Array.from(segmentElements)?.[0]?.focus()\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { Matcher } from '@/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { DateStep, Formatter } from '@/shared'\nimport type { Granularity, HourCycle, SegmentPart, SegmentValueObj } from '@/shared/date'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { hasTime, isBefore } from '@/date'\nimport { createContext, isNullish, useDateFormatter, useDirection, useKbd, useLocale } from '@/shared'\nimport {\n  createContent,\n  getDefaultDate,\n  getSegmentElements,\n  initializeSegmentValues,\n  isSegmentNavigationKey,\n  normalizeDateStep,\n  normalizeHourCycle,\n  syncSegmentValues,\n} from '@/shared/date'\n\ntype DateFieldRootContext = {\n  locale: Ref<string>\n  modelValue: Ref<DateValue | undefined>\n  placeholder: Ref<DateValue>\n  isDateUnavailable?: Matcher\n  isInvalid: Ref<boolean>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  formatter: Formatter\n  hourCycle: HourCycle\n  step: Ref<DateStep>\n  segmentValues: Ref<SegmentValueObj>\n  segmentContents: Ref<{ part: SegmentPart, value: string }[]>\n  elements: Ref<Set<HTMLElement>>\n  focusNext: () => void\n  setFocusedElement: (el: HTMLElement) => void\n}\n\nexport interface DateFieldRootProps extends PrimitiveProps, FormFieldProps {\n  /** The default value for the calendar */\n  defaultValue?: DateValue\n  /** The default placeholder date */\n  defaultPlaceholder?: DateValue\n  /** The placeholder date, which is used to determine what month to display when no date is selected. This updates as the user navigates the calendar and can be used to programmatically control the calendar view */\n  placeholder?: DateValue\n  /** The controlled checked state of the calendar. Can be bound as `v-model`. */\n  modelValue?: DateValue | null\n  /** The hour cycle used for formatting times. Defaults to the local preference */\n  hourCycle?: HourCycle\n  /** The stepping interval for the time fields. Defaults to `1`. */\n  step?: DateStep\n  /** The granularity to use for formatting times. Defaults to day if a CalendarDate is provided, otherwise defaults to minute. The field will render segments for each part of the date up to and including the specified granularity */\n  granularity?: Granularity\n  /** Whether or not to hide the time zone segment of the field */\n  hideTimeZone?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: DateValue\n  /** The minimum date that can be selected */\n  minValue?: DateValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** Whether or not the date field is disabled */\n  disabled?: boolean\n  /** Whether or not the date field is readonly */\n  readonly?: boolean\n  /** A function that returns whether or not a date is unavailable */\n  isDateUnavailable?: Matcher\n  /** Id of the element */\n  id?: string\n  /** The reading direction of the date field when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n}\n\nexport type DateFieldRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateValue | undefined]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n}\n\nexport const [injectDateFieldRootContext, provideDateFieldRootContext]\n  = createContext<DateFieldRootContext>('DateFieldRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, onMounted, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHidden } from '@/VisuallyHidden'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<DateFieldRootProps>(), {\n  defaultValue: undefined,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  isDateUnavailable: undefined,\n})\nconst emits = defineEmits<DateFieldRootEmits>()\ndefineSlots<{\n  default?: (props: {\n    /** The current date of the field */\n    modelValue: DateValue | undefined\n    /** The date field segment contents */\n    segments: { part: SegmentPart, value: string }[]\n    /** Value if the input is invalid */\n    isInvalid: boolean\n  }) => any\n}>()\n\nconst { disabled, readonly, isDateUnavailable: propsIsDateUnavailable, granularity, defaultValue, dir: propDir, locale: propLocale } = toRefs(props)\nconst locale = useLocale(propLocale)\nconst dir = useDirection(propDir)\n\nconst formatter = useDateFormatter(locale.value, {\n  hourCycle: normalizeHourCycle(props.hourCycle),\n})\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst segmentElements = ref<Set<HTMLElement>>(new Set())\n\nonMounted(() => {\n  getSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n})\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateValue>\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  granularity: granularity.value,\n  defaultValue: modelValue.value,\n  locale: props.locale,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nconst step = computed(() => normalizeDateStep(props))\n\nconst inferredGranularity = computed(() => {\n  if (props.granularity)\n    return !hasTime(placeholder.value) ? 'day' : props.granularity\n\n  return hasTime(placeholder.value) ? 'minute' : 'day'\n})\n\nconst isInvalid = computed(() => {\n  if (!modelValue.value)\n    return false\n\n  if (propsIsDateUnavailable.value?.(modelValue.value))\n    return true\n\n  if (props.minValue && isBefore(modelValue.value, props.minValue))\n    return true\n\n  if (props.maxValue && isBefore(props.maxValue, modelValue.value))\n    return true\n\n  return false\n})\n\nconst initialSegments = initializeSegmentValues(inferredGranularity.value)\n\nconst segmentValues = ref<SegmentValueObj>(modelValue.value ? { ...syncSegmentValues({ value: modelValue.value, formatter }) } : { ...initialSegments })\n\nconst allSegmentContent = computed(() => createContent({\n  granularity: inferredGranularity.value,\n  dateRef: placeholder.value,\n  formatter,\n  hideTimeZone: props.hideTimeZone,\n  hourCycle: props.hourCycle,\n  segmentValues: segmentValues.value,\n  locale,\n}))\n\nconst segmentContents = computed(() => allSegmentContent.value.arr)\n\nconst editableSegmentContents = computed(() => segmentContents.value.filter(({ part }) => part !== 'literal'))\n\nwatch(locale, (value) => {\n  if (formatter.getLocale() !== value) {\n    formatter.setLocale(value)\n    // Locale changed, so we need to clear the segment elements and re-get them (different order)\n    // Get the focusable elements again on the next tick\n    nextTick(() => {\n      segmentElements.value.clear()\n      getSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n    })\n  }\n})\n\nwatch(modelValue, (_modelValue) => {\n  if (!isNullish(_modelValue) && placeholder.value.compare(_modelValue) !== 0) {\n    placeholder.value = _modelValue.copy()\n  }\n})\n\nwatch([modelValue, locale], ([_modelValue]) => {\n  if (!isNullish(_modelValue)) {\n    segmentValues.value = { ...syncSegmentValues({ value: _modelValue, formatter }) }\n  }\n  // If segment has null value, means that user modified it, thus do not reset the segmentValues\n  else if (Object.values(segmentValues.value).every(value => value !== null) && isNullish(_modelValue)) {\n    segmentValues.value = { ...initialSegments }\n  }\n})\n\nconst currentFocusedElement = ref<HTMLElement | null>(null)\n\nconst currentSegmentIndex = computed(() =>\n  Array.from(segmentElements.value).findIndex(el =>\n    el.getAttribute('data-reka-date-field-segment')\n    === currentFocusedElement.value?.getAttribute('data-reka-date-field-segment')))\n\nconst nextFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const nextCondition = sign < 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (nextCondition)\n    return null\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value + sign]\n  return segmentToFocus\n})\n\nconst prevFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const prevCondition = sign > 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (prevCondition)\n    return null\n\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value - sign]\n  return segmentToFocus\n})\n\nconst kbd = useKbd()\n\nfunction handleKeydown(e: KeyboardEvent) {\n  if (!isSegmentNavigationKey(e.key))\n    return\n  if (e.key === kbd.ARROW_LEFT)\n    prevFocusableSegment.value?.focus()\n  if (e.key === kbd.ARROW_RIGHT)\n    nextFocusableSegment.value?.focus()\n}\n\nfunction setFocusedElement(el: HTMLElement) {\n  currentFocusedElement.value = el\n}\n\nprovideDateFieldRootContext({\n  isDateUnavailable: propsIsDateUnavailable.value,\n  locale,\n  modelValue,\n  placeholder,\n  disabled,\n  formatter,\n  hourCycle: props.hourCycle,\n  step,\n  readonly,\n  segmentValues,\n  isInvalid,\n  segmentContents: editableSegmentContents,\n  elements: segmentElements,\n  setFocusedElement,\n  focusNext() {\n    nextFocusableSegment.value?.focus()\n  },\n})\n\ndefineExpose({\n  /** Helper to set the focused element inside the DateField */\n  setFocusedElement,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    role=\"group\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n    @keydown.left.right=\"handleKeydown\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :segments=\"segmentContents\"\n      :is-invalid=\"isInvalid\"\n    />\n\n    <VisuallyHidden\n      :id=\"id\"\n      as=\"input\"\n      feature=\"focusable\"\n      tabindex=\"-1\"\n      :value=\"modelValue ? modelValue.toString() : ''\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      @focus=\"Array.from(segmentElements)?.[0]?.focus()\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { SegmentPart } from '@/shared/date'\nimport { computed, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useDateField } from '@/shared/date/useDateField'\nimport { injectDateFieldRootContext } from './DateFieldRoot.vue'\n\nexport interface DateFieldInputProps extends PrimitiveProps {\n  /** The part of the date to render */\n  part: SegmentPart\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateFieldInputProps>()\n\nconst rootContext = injectDateFieldRootContext()\n\nconst hasLeftFocus = ref(true)\nconst lastKeyZero = ref(false)\n\nconst {\n  handleSegmentClick,\n  handleSegmentKeydown,\n  attributes,\n} = useDateField({\n  hasLeftFocus,\n  lastKeyZero,\n  placeholder: rootContext.placeholder,\n  hourCycle: rootContext.hourCycle,\n  step: rootContext.step,\n  segmentValues: rootContext.segmentValues,\n  formatter: rootContext.formatter,\n  part: props.part,\n  disabled: rootContext.disabled,\n  readonly: rootContext.readonly,\n  focusNext: rootContext.focusNext,\n  modelValue: rootContext.modelValue,\n})\n\nconst disabled = computed(() => rootContext.disabled.value)\nconst readonly = computed(() => rootContext.readonly.value)\nconst isInvalid = computed(() => rootContext.isInvalid.value)\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    v-bind=\"attributes\"\n    :contenteditable=\"disabled || readonly ? false : part !== 'literal'\"\n    :data-reka-date-field-segment=\"part\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :aria-readonly=\"readonly ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :aria-invalid=\"isInvalid ? true : undefined\"\n    v-on=\"part !== 'literal' ? {\n      mousedown: handleSegmentClick,\n      keydown: handleSegmentKeydown,\n      focusout: () => { hasLeftFocus = true },\n      focusin: (e: FocusEvent) => {\n        rootContext.setFocusedElement(e.target as HTMLElement)\n      },\n    } : {}\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { SegmentPart } from '@/shared/date'\nimport { computed, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useDateField } from '@/shared/date/useDateField'\nimport { injectDateFieldRootContext } from './DateFieldRoot.vue'\n\nexport interface DateFieldInputProps extends PrimitiveProps {\n  /** The part of the date to render */\n  part: SegmentPart\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateFieldInputProps>()\n\nconst rootContext = injectDateFieldRootContext()\n\nconst hasLeftFocus = ref(true)\nconst lastKeyZero = ref(false)\n\nconst {\n  handleSegmentClick,\n  handleSegmentKeydown,\n  attributes,\n} = useDateField({\n  hasLeftFocus,\n  lastKeyZero,\n  placeholder: rootContext.placeholder,\n  hourCycle: rootContext.hourCycle,\n  step: rootContext.step,\n  segmentValues: rootContext.segmentValues,\n  formatter: rootContext.formatter,\n  part: props.part,\n  disabled: rootContext.disabled,\n  readonly: rootContext.readonly,\n  focusNext: rootContext.focusNext,\n  modelValue: rootContext.modelValue,\n})\n\nconst disabled = computed(() => rootContext.disabled.value)\nconst readonly = computed(() => rootContext.readonly.value)\nconst isInvalid = computed(() => rootContext.isInvalid.value)\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    v-bind=\"attributes\"\n    :contenteditable=\"disabled || readonly ? false : part !== 'literal'\"\n    :data-reka-date-field-segment=\"part\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :aria-readonly=\"readonly ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :aria-invalid=\"isInvalid ? true : undefined\"\n    v-on=\"part !== 'literal' ? {\n      mousedown: handleSegmentClick,\n      keydown: handleSegmentKeydown,\n      focusout: () => { hasLeftFocus = true },\n      focusin: (e: FocusEvent) => {\n        rootContext.setFocusedElement(e.target as HTMLElement)\n      },\n    } : {}\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext } from '@/shared'\n\nexport interface PopoverRootProps {\n  /**\n   * The open state of the popover when it is initially rendered. Use when you do not need to control its open state.\n   */\n  defaultOpen?: boolean\n  /**\n   * The controlled open state of the popover.\n   */\n  open?: boolean\n  /**\n   * The modality of the popover. When set to true, interaction with outside elements will be disabled and only popover content will be visible to screen readers.\n   *\n   * @defaultValue false\n   */\n  modal?: boolean\n}\nexport type PopoverRootEmits = {\n  /**\n   * Event handler called when the open state of the popover changes.\n   */\n  'update:open': [value: boolean]\n}\n\nexport interface PopoverRootContext {\n  triggerElement: Ref<HTMLElement | undefined>\n  triggerId: string\n  contentId: string\n  open: Ref<boolean>\n  modal: Ref<boolean>\n  onOpenChange: (value: boolean) => void\n  onOpenToggle: () => void\n  hasCustomAnchor: Ref<boolean>\n}\n\nexport const [injectPopoverRootContext, providePopoverRootContext]\n  = createContext<PopoverRootContext>('PopoverRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { PopperRoot } from '@/Popper'\n\nconst props = withDefaults(defineProps<PopoverRootProps>(), {\n  defaultOpen: false,\n  open: undefined,\n  modal: false,\n})\nconst emit = defineEmits<PopoverRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n    /** Close the popover */\n    close: () => void\n  }) => any\n}>()\n\nconst { modal } = toRefs(props)\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst triggerElement = ref<HTMLElement>()\nconst hasCustomAnchor = ref(false)\n\nprovidePopoverRootContext({\n  contentId: '',\n  triggerId: '',\n  modal,\n  open,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  onOpenToggle: () => {\n    open.value = !open.value\n  },\n  triggerElement,\n  hasCustomAnchor,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot\n      :open=\"open\"\n      :close=\"() => open = false\"\n    />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext } from '@/shared'\n\nexport interface PopoverRootProps {\n  /**\n   * The open state of the popover when it is initially rendered. Use when you do not need to control its open state.\n   */\n  defaultOpen?: boolean\n  /**\n   * The controlled open state of the popover.\n   */\n  open?: boolean\n  /**\n   * The modality of the popover. When set to true, interaction with outside elements will be disabled and only popover content will be visible to screen readers.\n   *\n   * @defaultValue false\n   */\n  modal?: boolean\n}\nexport type PopoverRootEmits = {\n  /**\n   * Event handler called when the open state of the popover changes.\n   */\n  'update:open': [value: boolean]\n}\n\nexport interface PopoverRootContext {\n  triggerElement: Ref<HTMLElement | undefined>\n  triggerId: string\n  contentId: string\n  open: Ref<boolean>\n  modal: Ref<boolean>\n  onOpenChange: (value: boolean) => void\n  onOpenToggle: () => void\n  hasCustomAnchor: Ref<boolean>\n}\n\nexport const [injectPopoverRootContext, providePopoverRootContext]\n  = createContext<PopoverRootContext>('PopoverRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { PopperRoot } from '@/Popper'\n\nconst props = withDefaults(defineProps<PopoverRootProps>(), {\n  defaultOpen: false,\n  open: undefined,\n  modal: false,\n})\nconst emit = defineEmits<PopoverRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n    /** Close the popover */\n    close: () => void\n  }) => any\n}>()\n\nconst { modal } = toRefs(props)\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst triggerElement = ref<HTMLElement>()\nconst hasCustomAnchor = ref(false)\n\nprovidePopoverRootContext({\n  contentId: '',\n  triggerId: '',\n  modal,\n  open,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  onOpenToggle: () => {\n    open.value = !open.value\n  },\n  triggerElement,\n  hasCustomAnchor,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot\n      :open=\"open\"\n      :close=\"() => open = false\"\n    />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PopoverAnchorProps extends PopperAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onBeforeMount, onUnmounted } from 'vue'\nimport { PopperAnchor } from '@/Popper'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverAnchorProps>()\n\nuseForwardExpose()\nconst rootContext = injectPopoverRootContext()\n\nonBeforeMount(() => {\n  rootContext.hasCustomAnchor.value = true\n})\nonUnmounted(() => {\n  rootContext.hasCustomAnchor.value = false\n})\n</script>\n\n<template>\n  <PopperAnchor v-bind=\"props\">\n    <slot />\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PopoverAnchorProps extends PopperAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onBeforeMount, onUnmounted } from 'vue'\nimport { PopperAnchor } from '@/Popper'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverAnchorProps>()\n\nuseForwardExpose()\nconst rootContext = injectPopoverRootContext()\n\nonBeforeMount(() => {\n  rootContext.hasCustomAnchor.value = true\n})\nonUnmounted(() => {\n  rootContext.hasCustomAnchor.value = false\n})\n</script>\n\n<template>\n  <PopperAnchor v-bind=\"props\">\n    <slot />\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverAnchorProps } from '..'\nimport { PopoverAnchor } from '..'\n\nexport interface DatePickerAnchorProps extends PopoverAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerAnchorProps>()\n</script>\n\n<template>\n  <PopoverAnchor v-bind=\"props\">\n    <slot />\n  </PopoverAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverAnchorProps } from '..'\nimport { PopoverAnchor } from '..'\n\nexport interface DatePickerAnchorProps extends PopoverAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerAnchorProps>()\n</script>\n\n<template>\n  <PopoverAnchor v-bind=\"props\">\n    <slot />\n  </PopoverAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PopoverArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\n\nconst props = withDefaults(defineProps<PopoverArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <PopperArrow v-bind=\"props\">\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PopoverArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\n\nconst props = withDefaults(defineProps<PopoverArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <PopperArrow v-bind=\"props\">\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverArrowProps } from '..'\nimport { PopoverArrow } from '..'\n\nexport interface DatePickerArrowProps extends PopoverArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerArrowProps>()\n</script>\n\n<template>\n  <PopoverArrow v-bind=\"props\">\n    <slot />\n  </PopoverArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverArrowProps } from '..'\nimport { PopoverArrow } from '..'\n\nexport interface DatePickerArrowProps extends PopoverArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerArrowProps>()\n</script>\n\n<template>\n  <PopoverArrow v-bind=\"props\">\n    <slot />\n  </PopoverArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\n\nimport type { Ref } from 'vue'\nimport type { CalendarRootProps, DateFieldRoot, DateFieldRootProps, PopoverRootEmits, PopoverRootProps } from '..'\nimport type { Matcher, WeekDayFormat } from '@/date'\nimport type { DateStep, Granularity, HourCycle } from '@/shared/date'\nimport type { Direction } from '@/shared/types'\nimport { computed, ref, toRefs, watch } from 'vue'\nimport { createContext, useDirection } from '@/shared'\nimport { getDefaultDate } from '@/shared/date'\nimport { PopoverRoot } from '..'\n\ntype DatePickerRootContext = {\n  id: Ref<string | undefined>\n  name: Ref<string | undefined>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n  hourCycle: Ref<HourCycle | undefined>\n  granularity: Ref<Granularity | undefined>\n  hideTimeZone: Ref<boolean>\n  required: Ref<boolean>\n  locale: Ref<string>\n  dateFieldRef: Ref<InstanceType<typeof DateFieldRoot> | undefined>\n  modelValue: Ref<DateValue | undefined>\n  placeholder: Ref<DateValue>\n  pagedNavigation: Ref<boolean>\n  preventDeselect: Ref<boolean>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  weekdayFormat: Ref<WeekDayFormat>\n  fixedWeeks: Ref<boolean>\n  numberOfMonths: Ref<number>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  isDateDisabled?: Matcher\n  isDateUnavailable?: Matcher\n  defaultOpen: Ref<boolean>\n  open: Ref<boolean>\n  modal: Ref<boolean>\n  onDateChange: (date: DateValue | undefined) => void\n  onPlaceholderChange: (date: DateValue) => void\n  dir: Ref<Direction>\n  step: Ref<DateStep | undefined>\n  closeOnSelect: Ref<boolean>\n}\n\nexport type DatePickerRootProps = DateFieldRootProps & PopoverRootProps & Pick<CalendarRootProps, 'isDateDisabled' | 'pagedNavigation' | 'weekStartsOn' | 'weekdayFormat' | 'fixedWeeks' | 'numberOfMonths' | 'preventDeselect'> & {\n  /** Whether or not to close the popover on date select */\n  closeOnSelect?: boolean\n}\n\nexport type DatePickerRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateValue | undefined]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n}\n\nexport const [injectDatePickerRootContext, provideDatePickerRootContext]\n  = createContext<DatePickerRootContext>('DatePickerRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\n\ndefineOptions({\n  inheritAttrs: false,\n})\nconst props = withDefaults(defineProps<DatePickerRootProps>(), {\n  defaultValue: undefined,\n  defaultOpen: false,\n  open: undefined,\n  modal: false,\n  pagedNavigation: false,\n  preventDeselect: false,\n  weekStartsOn: 0,\n  weekdayFormat: 'narrow',\n  fixedWeeks: false,\n  numberOfMonths: 1,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  locale: 'en',\n  isDateDisabled: undefined,\n  isDateUnavailable: undefined,\n  closeOnSelect: false,\n})\nconst emits = defineEmits<DatePickerRootEmits & PopoverRootEmits>()\nconst {\n  locale,\n  disabled,\n  readonly,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  preventDeselect,\n  isDateDisabled: propsIsDateDisabled,\n  isDateUnavailable: propsIsDateUnavailable,\n  defaultOpen,\n  modal,\n  id,\n  name,\n  required,\n  minValue,\n  maxValue,\n  granularity,\n  hideTimeZone,\n  hourCycle,\n  defaultValue,\n  dir: propDir,\n  step,\n  closeOnSelect,\n} = toRefs(props)\n\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateValue | undefined>\n\nconst defaultDate = computed(() => getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  granularity: props.granularity,\n  defaultValue: modelValue.value,\n  locale: props.locale,\n}))\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.value.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: defaultOpen.value,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst dateFieldRef = ref<InstanceType<typeof DateFieldRoot> | undefined>()\n\nwatch(modelValue, (value) => {\n  if (value && value.compare(placeholder.value) !== 0) {\n    placeholder.value = value.copy()\n  }\n  if (closeOnSelect.value) {\n    open.value = false\n  }\n})\n\nprovideDatePickerRootContext({\n  isDateUnavailable: propsIsDateUnavailable.value,\n  isDateDisabled: propsIsDateDisabled.value,\n  locale,\n  disabled,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  readonly,\n  preventDeselect,\n  modelValue,\n  placeholder,\n  defaultOpen,\n  modal,\n  open,\n  id,\n  name,\n  required,\n  minValue,\n  maxValue,\n  granularity,\n  hideTimeZone,\n  hourCycle,\n  dateFieldRef,\n  dir,\n  step,\n  onDateChange(date: DateValue | undefined) {\n    if (!date || !modelValue.value) {\n      modelValue.value = date?.copy() ?? undefined\n    }\n    else if (!preventDeselect.value && date && modelValue.value.compare(date) === 0) {\n      modelValue.value = undefined\n    }\n    else {\n      modelValue.value = date.copy()\n    }\n  },\n  onPlaceholderChange(date: DateValue) {\n    placeholder.value = date.copy()\n  },\n  closeOnSelect,\n})\n</script>\n\n<template>\n  <PopoverRoot\n    v-model:open=\"open\"\n    :default-open=\"defaultOpen\"\n    :modal=\"modal\"\n  >\n    <slot />\n  </PopoverRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\n\nimport type { Ref } from 'vue'\nimport type { CalendarRootProps, DateFieldRoot, DateFieldRootProps, PopoverRootEmits, PopoverRootProps } from '..'\nimport type { Matcher, WeekDayFormat } from '@/date'\nimport type { DateStep, Granularity, HourCycle } from '@/shared/date'\nimport type { Direction } from '@/shared/types'\nimport { computed, ref, toRefs, watch } from 'vue'\nimport { createContext, useDirection } from '@/shared'\nimport { getDefaultDate } from '@/shared/date'\nimport { PopoverRoot } from '..'\n\ntype DatePickerRootContext = {\n  id: Ref<string | undefined>\n  name: Ref<string | undefined>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n  hourCycle: Ref<HourCycle | undefined>\n  granularity: Ref<Granularity | undefined>\n  hideTimeZone: Ref<boolean>\n  required: Ref<boolean>\n  locale: Ref<string>\n  dateFieldRef: Ref<InstanceType<typeof DateFieldRoot> | undefined>\n  modelValue: Ref<DateValue | undefined>\n  placeholder: Ref<DateValue>\n  pagedNavigation: Ref<boolean>\n  preventDeselect: Ref<boolean>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  weekdayFormat: Ref<WeekDayFormat>\n  fixedWeeks: Ref<boolean>\n  numberOfMonths: Ref<number>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  isDateDisabled?: Matcher\n  isDateUnavailable?: Matcher\n  defaultOpen: Ref<boolean>\n  open: Ref<boolean>\n  modal: Ref<boolean>\n  onDateChange: (date: DateValue | undefined) => void\n  onPlaceholderChange: (date: DateValue) => void\n  dir: Ref<Direction>\n  step: Ref<DateStep | undefined>\n  closeOnSelect: Ref<boolean>\n}\n\nexport type DatePickerRootProps = DateFieldRootProps & PopoverRootProps & Pick<CalendarRootProps, 'isDateDisabled' | 'pagedNavigation' | 'weekStartsOn' | 'weekdayFormat' | 'fixedWeeks' | 'numberOfMonths' | 'preventDeselect'> & {\n  /** Whether or not to close the popover on date select */\n  closeOnSelect?: boolean\n}\n\nexport type DatePickerRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateValue | undefined]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n}\n\nexport const [injectDatePickerRootContext, provideDatePickerRootContext]\n  = createContext<DatePickerRootContext>('DatePickerRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\n\ndefineOptions({\n  inheritAttrs: false,\n})\nconst props = withDefaults(defineProps<DatePickerRootProps>(), {\n  defaultValue: undefined,\n  defaultOpen: false,\n  open: undefined,\n  modal: false,\n  pagedNavigation: false,\n  preventDeselect: false,\n  weekStartsOn: 0,\n  weekdayFormat: 'narrow',\n  fixedWeeks: false,\n  numberOfMonths: 1,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  locale: 'en',\n  isDateDisabled: undefined,\n  isDateUnavailable: undefined,\n  closeOnSelect: false,\n})\nconst emits = defineEmits<DatePickerRootEmits & PopoverRootEmits>()\nconst {\n  locale,\n  disabled,\n  readonly,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  preventDeselect,\n  isDateDisabled: propsIsDateDisabled,\n  isDateUnavailable: propsIsDateUnavailable,\n  defaultOpen,\n  modal,\n  id,\n  name,\n  required,\n  minValue,\n  maxValue,\n  granularity,\n  hideTimeZone,\n  hourCycle,\n  defaultValue,\n  dir: propDir,\n  step,\n  closeOnSelect,\n} = toRefs(props)\n\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateValue | undefined>\n\nconst defaultDate = computed(() => getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  granularity: props.granularity,\n  defaultValue: modelValue.value,\n  locale: props.locale,\n}))\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.value.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: defaultOpen.value,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst dateFieldRef = ref<InstanceType<typeof DateFieldRoot> | undefined>()\n\nwatch(modelValue, (value) => {\n  if (value && value.compare(placeholder.value) !== 0) {\n    placeholder.value = value.copy()\n  }\n  if (closeOnSelect.value) {\n    open.value = false\n  }\n})\n\nprovideDatePickerRootContext({\n  isDateUnavailable: propsIsDateUnavailable.value,\n  isDateDisabled: propsIsDateDisabled.value,\n  locale,\n  disabled,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  readonly,\n  preventDeselect,\n  modelValue,\n  placeholder,\n  defaultOpen,\n  modal,\n  open,\n  id,\n  name,\n  required,\n  minValue,\n  maxValue,\n  granularity,\n  hideTimeZone,\n  hourCycle,\n  dateFieldRef,\n  dir,\n  step,\n  onDateChange(date: DateValue | undefined) {\n    if (!date || !modelValue.value) {\n      modelValue.value = date?.copy() ?? undefined\n    }\n    else if (!preventDeselect.value && date && modelValue.value.compare(date) === 0) {\n      modelValue.value = undefined\n    }\n    else {\n      modelValue.value = date.copy()\n    }\n  },\n  onPlaceholderChange(date: DateValue) {\n    placeholder.value = date.copy()\n  },\n  closeOnSelect,\n})\n</script>\n\n<template>\n  <PopoverRoot\n    v-model:open=\"open\"\n    :default-open=\"defaultOpen\"\n    :modal=\"modal\"\n  >\n    <slot />\n  </PopoverRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport { isEqualDay } from '@internationalized/date'\nimport { CalendarRoot } from '..'\nimport { injectDatePickerRootContext } from './DatePickerRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nconst rootContext = injectDatePickerRootContext()\n</script>\n\n<template>\n  <CalendarRoot\n    v-slot=\"{ weekDays, grid, date, weekStartsOn, locale, fixedWeeks }\"\n    v-bind=\"{\n      isDateDisabled: rootContext.isDateDisabled,\n      isDateUnavailable: rootContext.isDateUnavailable,\n      minValue: rootContext.minValue.value,\n      maxValue: rootContext.maxValue.value,\n      locale: rootContext.locale.value,\n      disabled: rootContext.disabled.value,\n      pagedNavigation: rootContext.pagedNavigation.value,\n      weekStartsOn: rootContext.weekStartsOn.value,\n      weekdayFormat: rootContext.weekdayFormat.value,\n      fixedWeeks: rootContext.fixedWeeks.value,\n      numberOfMonths: rootContext.numberOfMonths.value,\n      readonly: rootContext.readonly.value,\n      preventDeselect: rootContext.preventDeselect.value,\n      dir: rootContext.dir.value,\n    }\"\n    :model-value=\"rootContext.modelValue.value\"\n    :placeholder=\"rootContext.placeholder.value\"\n    :multiple=\"false\"\n    @update:model-value=\"(date: DateValue | undefined) => {\n      if (date && rootContext.modelValue.value && isEqualDay(date, rootContext.modelValue.value)) return\n      rootContext.onDateChange(date)\n    }\"\n    @update:placeholder=\"(date: DateValue) => {\n      if (isEqualDay(date, rootContext.placeholder.value)) return\n      rootContext.onPlaceholderChange(date)\n    }\"\n  >\n    <slot\n      :date=\"date\"\n      :grid=\"grid\"\n      :week-days=\"weekDays\"\n      :week-starts-on=\"weekStartsOn\"\n      :locale=\"locale\"\n      :fixed-weeks=\"fixedWeeks\"\n    />\n  </CalendarRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport { isEqualDay } from '@internationalized/date'\nimport { CalendarRoot } from '..'\nimport { injectDatePickerRootContext } from './DatePickerRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nconst rootContext = injectDatePickerRootContext()\n</script>\n\n<template>\n  <CalendarRoot\n    v-slot=\"{ weekDays, grid, date, weekStartsOn, locale, fixedWeeks }\"\n    v-bind=\"{\n      isDateDisabled: rootContext.isDateDisabled,\n      isDateUnavailable: rootContext.isDateUnavailable,\n      minValue: rootContext.minValue.value,\n      maxValue: rootContext.maxValue.value,\n      locale: rootContext.locale.value,\n      disabled: rootContext.disabled.value,\n      pagedNavigation: rootContext.pagedNavigation.value,\n      weekStartsOn: rootContext.weekStartsOn.value,\n      weekdayFormat: rootContext.weekdayFormat.value,\n      fixedWeeks: rootContext.fixedWeeks.value,\n      numberOfMonths: rootContext.numberOfMonths.value,\n      readonly: rootContext.readonly.value,\n      preventDeselect: rootContext.preventDeselect.value,\n      dir: rootContext.dir.value,\n    }\"\n    :model-value=\"rootContext.modelValue.value\"\n    :placeholder=\"rootContext.placeholder.value\"\n    :multiple=\"false\"\n    @update:model-value=\"(date: DateValue | undefined) => {\n      if (date && rootContext.modelValue.value && isEqualDay(date, rootContext.modelValue.value)) return\n      rootContext.onDateChange(date)\n    }\"\n    @update:placeholder=\"(date: DateValue) => {\n      if (isEqualDay(date, rootContext.placeholder.value)) return\n      rootContext.onPlaceholderChange(date)\n    }\"\n  >\n    <slot\n      :date=\"date\"\n      :grid=\"grid\"\n      :week-days=\"weekDays\"\n      :week-starts-on=\"weekStartsOn\"\n      :locale=\"locale\"\n      :fixed-weeks=\"fixedWeeks\"\n    />\n  </CalendarRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarCellProps } from '..'\nimport { CalendarCell } from '..'\n\nexport interface DatePickerCellProps extends CalendarCellProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerCellProps>()\n</script>\n\n<template>\n  <CalendarCell v-bind=\"props\">\n    <slot />\n  </CalendarCell>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarCellProps } from '..'\nimport { CalendarCell } from '..'\n\nexport interface DatePickerCellProps extends CalendarCellProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerCellProps>()\n</script>\n\n<template>\n  <CalendarCell v-bind=\"props\">\n    <slot />\n  </CalendarCell>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarCellTriggerProps } from '..'\nimport type { CalendarCellTriggerSlot } from '@/Calendar/CalendarCellTrigger.vue'\nimport { CalendarCellTrigger } from '..'\n\nexport interface DatePickerCellTriggerProps extends CalendarCellTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerCellTriggerProps>()\ndefineSlots<CalendarCellTriggerSlot>()\n</script>\n\n<template>\n  <CalendarCellTrigger\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </CalendarCellTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarCellTriggerProps } from '..'\nimport type { CalendarCellTriggerSlot } from '@/Calendar/CalendarCellTrigger.vue'\nimport { CalendarCellTrigger } from '..'\n\nexport interface DatePickerCellTriggerProps extends CalendarCellTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerCellTriggerProps>()\ndefineSlots<CalendarCellTriggerSlot>()\n</script>\n\n<template>\n  <CalendarCellTrigger\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </CalendarCellTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PopoverCloseProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport {\n  injectPopoverRootContext,\n} from './PopoverRoot.vue'\n\nconst props = withDefaults(defineProps<PopoverCloseProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst rootContext = injectPopoverRootContext()\n</script>\n\n<template>\n  <Primitive\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as=\"as\"\n    :as-child=\"props.asChild\"\n    @click=\"rootContext.onOpenChange(false)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PopoverCloseProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport {\n  injectPopoverRootContext,\n} from './PopoverRoot.vue'\n\nconst props = withDefaults(defineProps<PopoverCloseProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst rootContext = injectPopoverRootContext()\n</script>\n\n<template>\n  <Primitive\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as=\"as\"\n    :as-child=\"props.asChild\"\n    @click=\"rootContext.onOpenChange(false)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverCloseProps } from '..'\nimport { PopoverClose } from '..'\n\nexport interface DatePickerCloseProps extends PopoverCloseProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerCloseProps>()\n</script>\n\n<template>\n  <PopoverClose v-bind=\"props\">\n    <slot />\n  </PopoverClose>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverCloseProps } from '..'\nimport { PopoverClose } from '..'\n\nexport interface DatePickerCloseProps extends PopoverCloseProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerCloseProps>()\n</script>\n\n<template>\n  <PopoverClose v-bind=\"props\">\n    <slot />\n  </PopoverClose>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DismissableLayerEmits,\n  DismissableLayerProps,\n} from '@/DismissableLayer'\nimport type { FocusScopeProps } from '@/FocusScope'\nimport type { PopperContentProps } from '@/Popper'\nimport { reactiveOmit } from '@vueuse/shared'\n\nexport type PopoverContentImplEmits = DismissableLayerEmits & {\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  openAutoFocus: [event: Event]\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  closeAutoFocus: [event: Event]\n}\n\nexport interface PopoverContentImplProps extends PopperContentProps, DismissableLayerProps {}\n\ninterface PopoverContentImplPrivateProps extends PopoverContentImplProps {\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped']\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { FocusScope } from '@/FocusScope'\nimport { PopperContent } from '@/Popper'\nimport { useFocusGuards, useForwardExpose, useForwardProps } from '@/shared'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverContentImplPrivateProps>()\nconst emits = defineEmits<PopoverContentImplEmits>()\n\nconst forwarded = useForwardProps(reactiveOmit(props, 'trapFocus', 'disableOutsidePointerEvents'))\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectPopoverRootContext()\nuseFocusGuards()\n</script>\n\n<template>\n  <FocusScope\n    as-child\n    loop\n    :trapped=\"trapFocus\"\n    @mount-auto-focus=\"emits('openAutoFocus', $event)\"\n    @unmount-auto-focus=\"emits('closeAutoFocus', $event)\"\n  >\n    <DismissableLayer\n      as-child\n      :disable-outside-pointer-events=\"disableOutsidePointerEvents\"\n      @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n      @interact-outside=\"emits('interactOutside', $event)\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @focus-outside=\"emits('focusOutside', $event)\"\n      @dismiss=\"rootContext.onOpenChange(false)\"\n    >\n      <PopperContent\n        v-bind=\"forwarded\"\n        :id=\"rootContext.contentId\"\n        :ref=\"forwardRef\"\n        :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n        :aria-labelledby=\"rootContext.triggerId\"\n        :style=\"{\n          '--reka-popover-content-transform-origin':\n            'var(--reka-popper-transform-origin)',\n          '--reka-popover-content-available-width':\n            'var(--reka-popper-available-width)',\n          '--reka-popover-content-available-height':\n            'var(--reka-popper-available-height)',\n          '--reka-popover-trigger-width': 'var(--reka-popper-anchor-width)',\n          '--reka-popover-trigger-height': 'var(--reka-popper-anchor-height)',\n        }\"\n        role=\"dialog\"\n      >\n        <slot />\n      </PopperContent>\n    </DismissableLayer>\n  </FocusScope>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DismissableLayerEmits,\n  DismissableLayerProps,\n} from '@/DismissableLayer'\nimport type { FocusScopeProps } from '@/FocusScope'\nimport type { PopperContentProps } from '@/Popper'\nimport { reactiveOmit } from '@vueuse/shared'\n\nexport type PopoverContentImplEmits = DismissableLayerEmits & {\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  openAutoFocus: [event: Event]\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  closeAutoFocus: [event: Event]\n}\n\nexport interface PopoverContentImplProps extends PopperContentProps, DismissableLayerProps {}\n\ninterface PopoverContentImplPrivateProps extends PopoverContentImplProps {\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped']\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { FocusScope } from '@/FocusScope'\nimport { PopperContent } from '@/Popper'\nimport { useFocusGuards, useForwardExpose, useForwardProps } from '@/shared'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverContentImplPrivateProps>()\nconst emits = defineEmits<PopoverContentImplEmits>()\n\nconst forwarded = useForwardProps(reactiveOmit(props, 'trapFocus', 'disableOutsidePointerEvents'))\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectPopoverRootContext()\nuseFocusGuards()\n</script>\n\n<template>\n  <FocusScope\n    as-child\n    loop\n    :trapped=\"trapFocus\"\n    @mount-auto-focus=\"emits('openAutoFocus', $event)\"\n    @unmount-auto-focus=\"emits('closeAutoFocus', $event)\"\n  >\n    <DismissableLayer\n      as-child\n      :disable-outside-pointer-events=\"disableOutsidePointerEvents\"\n      @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n      @interact-outside=\"emits('interactOutside', $event)\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @focus-outside=\"emits('focusOutside', $event)\"\n      @dismiss=\"rootContext.onOpenChange(false)\"\n    >\n      <PopperContent\n        v-bind=\"forwarded\"\n        :id=\"rootContext.contentId\"\n        :ref=\"forwardRef\"\n        :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n        :aria-labelledby=\"rootContext.triggerId\"\n        :style=\"{\n          '--reka-popover-content-transform-origin':\n            'var(--reka-popper-transform-origin)',\n          '--reka-popover-content-available-width':\n            'var(--reka-popper-available-width)',\n          '--reka-popover-content-available-height':\n            'var(--reka-popper-available-height)',\n          '--reka-popover-trigger-width': 'var(--reka-popper-anchor-width)',\n          '--reka-popover-trigger-height': 'var(--reka-popper-anchor-height)',\n        }\"\n        role=\"dialog\"\n      >\n        <slot />\n      </PopperContent>\n    </DismissableLayer>\n  </FocusScope>\n</template>\n", "<script setup lang=\"ts\">\nimport type { PopoverContentImplEmits, PopoverContentImplProps } from './PopoverContentImpl.vue'\nimport { ref } from 'vue'\nimport { useForwardExpose, useForwardPropsEmits, useHideOthers } from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\nimport PopoverContentImpl from './PopoverContentImpl.vue'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverContentImplProps>()\nconst emits = defineEmits<PopoverContentImplEmits>()\nconst rootContext = injectPopoverRootContext()\nconst isRightClickOutsideRef = ref(false)\n\nuseBodyScrollLock(true)\n\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nuseHideOthers(currentElement)\n</script>\n\n<template>\n  <PopoverContentImpl\n    v-bind=\"forwarded\"\n    :ref=\"forwardRef\"\n    :trap-focus=\"rootContext.open.value\"\n    disable-outside-pointer-events\n    @close-auto-focus.prevent=\"\n      (event) => {\n        emits('closeAutoFocus', event);\n\n        if (!isRightClickOutsideRef) rootContext.triggerElement.value?.focus();\n      }\n    \"\n    @pointer-down-outside=\"\n      (event) => {\n        emits('pointerDownOutside', event);\n\n        const originalEvent = event.detail.originalEvent;\n        const ctrlLeftClick\n          = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n        isRightClickOutsideRef = isRightClick;\n      }\n    \"\n    @focus-outside.prevent\n  >\n    <slot />\n  </PopoverContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { PopoverContentImplEmits, PopoverContentImplProps } from './PopoverContentImpl.vue'\nimport { ref } from 'vue'\nimport { useForwardExpose, useForwardPropsEmits, useHideOthers } from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\nimport PopoverContentImpl from './PopoverContentImpl.vue'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverContentImplProps>()\nconst emits = defineEmits<PopoverContentImplEmits>()\nconst rootContext = injectPopoverRootContext()\nconst isRightClickOutsideRef = ref(false)\n\nuseBodyScrollLock(true)\n\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nuseHideOthers(currentElement)\n</script>\n\n<template>\n  <PopoverContentImpl\n    v-bind=\"forwarded\"\n    :ref=\"forwardRef\"\n    :trap-focus=\"rootContext.open.value\"\n    disable-outside-pointer-events\n    @close-auto-focus.prevent=\"\n      (event) => {\n        emits('closeAutoFocus', event);\n\n        if (!isRightClickOutsideRef) rootContext.triggerElement.value?.focus();\n      }\n    \"\n    @pointer-down-outside=\"\n      (event) => {\n        emits('pointerDownOutside', event);\n\n        const originalEvent = event.detail.originalEvent;\n        const ctrlLeftClick\n          = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n        const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n        isRightClickOutsideRef = isRightClick;\n      }\n    \"\n    @focus-outside.prevent\n  >\n    <slot />\n  </PopoverContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { PopoverContentImplEmits, PopoverContentImplProps } from './PopoverContentImpl.vue'\nimport { ref } from 'vue'\nimport { useForwardPropsEmits } from '@/shared'\nimport PopoverContentImpl from './PopoverContentImpl.vue'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverContentImplProps>()\nconst emits = defineEmits<PopoverContentImplEmits>()\nconst rootContext = injectPopoverRootContext()\nconst hasInteractedOutsideRef = ref(false)\nconst hasPointerDownOutsideRef = ref(false)\n\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <PopoverContentImpl\n    v-bind=\"forwarded\"\n    :trap-focus=\"false\"\n    :disable-outside-pointer-events=\"false\"\n    @close-auto-focus=\"\n      (event) => {\n        emits('closeAutoFocus', event);\n\n        if (!event.defaultPrevented) {\n          if (!hasInteractedOutsideRef) rootContext.triggerElement.value?.focus();\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        }\n\n        hasInteractedOutsideRef = false;\n        hasPointerDownOutsideRef = false;\n      }\n    \"\n    @interact-outside=\"\n      async (event) => {\n        emits('interactOutside', event);\n\n        if (!event.defaultPrevented) {\n          hasInteractedOutsideRef = true;\n          if (event.detail.originalEvent.type === 'pointerdown') {\n            hasPointerDownOutsideRef = true;\n          }\n        }\n\n        // Prevent dismissing when clicking the trigger.\n        // As the trigger is already setup to close, without doing so would\n        // cause it to close and immediately open.\n        const target = event.target as HTMLElement;\n        const targetIsTrigger = rootContext.triggerElement.value?.contains(target);\n        if (targetIsTrigger) event.preventDefault();\n\n        // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n        // we will get the pointer down outside event on the trigger, but then a subsequent\n        // focus outside event on the container, we ignore any focus outside event when we've\n        // already had a pointer down outside event.\n        if (\n          event.detail.originalEvent.type === 'focusin'\n          && hasPointerDownOutsideRef\n        ) {\n          event.preventDefault();\n        }\n      }\n    \"\n  >\n    <slot />\n  </PopoverContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { PopoverContentImplEmits, PopoverContentImplProps } from './PopoverContentImpl.vue'\nimport { ref } from 'vue'\nimport { useForwardPropsEmits } from '@/shared'\nimport PopoverContentImpl from './PopoverContentImpl.vue'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverContentImplProps>()\nconst emits = defineEmits<PopoverContentImplEmits>()\nconst rootContext = injectPopoverRootContext()\nconst hasInteractedOutsideRef = ref(false)\nconst hasPointerDownOutsideRef = ref(false)\n\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <PopoverContentImpl\n    v-bind=\"forwarded\"\n    :trap-focus=\"false\"\n    :disable-outside-pointer-events=\"false\"\n    @close-auto-focus=\"\n      (event) => {\n        emits('closeAutoFocus', event);\n\n        if (!event.defaultPrevented) {\n          if (!hasInteractedOutsideRef) rootContext.triggerElement.value?.focus();\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        }\n\n        hasInteractedOutsideRef = false;\n        hasPointerDownOutsideRef = false;\n      }\n    \"\n    @interact-outside=\"\n      async (event) => {\n        emits('interactOutside', event);\n\n        if (!event.defaultPrevented) {\n          hasInteractedOutsideRef = true;\n          if (event.detail.originalEvent.type === 'pointerdown') {\n            hasPointerDownOutsideRef = true;\n          }\n        }\n\n        // Prevent dismissing when clicking the trigger.\n        // As the trigger is already setup to close, without doing so would\n        // cause it to close and immediately open.\n        const target = event.target as HTMLElement;\n        const targetIsTrigger = rootContext.triggerElement.value?.contains(target);\n        if (targetIsTrigger) event.preventDefault();\n\n        // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n        // we will get the pointer down outside event on the trigger, but then a subsequent\n        // focus outside event on the container, we ignore any focus outside event when we've\n        // already had a pointer down outside event.\n        if (\n          event.detail.originalEvent.type === 'focusin'\n          && hasPointerDownOutsideRef\n        ) {\n          event.preventDefault();\n        }\n      }\n    \"\n  >\n    <slot />\n  </PopoverContentImpl>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  PopoverContentImplEmits,\n  PopoverContentImplProps,\n} from './PopoverContentImpl.vue'\n\nexport type PopoverContentEmits = PopoverContentImplEmits\n\nexport interface PopoverContentProps extends PopoverContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport PopoverContentModal from './PopoverContentModal.vue'\nimport PopoverContentNonModal from './PopoverContentNonModal.vue'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverContentProps>()\nconst emits = defineEmits<PopoverContentEmits>()\n\nconst rootContext = injectPopoverRootContext()\n\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n\nrootContext.contentId ||= useId(undefined, 'reka-popover-content')\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <PopoverContentModal\n      v-if=\"rootContext.modal.value\"\n      v-bind=\"forwarded\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </PopoverContentModal>\n    <PopoverContentNonModal\n      v-else\n      v-bind=\"forwarded\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </PopoverContentNonModal>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  PopoverContentImplEmits,\n  PopoverContentImplProps,\n} from './PopoverContentImpl.vue'\n\nexport type PopoverContentEmits = PopoverContentImplEmits\n\nexport interface PopoverContentProps extends PopoverContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport PopoverContentModal from './PopoverContentModal.vue'\nimport PopoverContentNonModal from './PopoverContentNonModal.vue'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = defineProps<PopoverContentProps>()\nconst emits = defineEmits<PopoverContentEmits>()\n\nconst rootContext = injectPopoverRootContext()\n\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n\nrootContext.contentId ||= useId(undefined, 'reka-popover-content')\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <PopoverContentModal\n      v-if=\"rootContext.modal.value\"\n      v-bind=\"forwarded\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </PopoverContentModal>\n    <PopoverContentNonModal\n      v-else\n      v-bind=\"forwarded\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </PopoverContentNonModal>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface PopoverPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<PopoverPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface PopoverPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<PopoverPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverContentEmits, PopoverContentProps, PopoverPortalProps } from '..'\nimport { computed } from 'vue'\nimport { handleCalendarInitialFocus } from '@/shared/date'\nimport { PopoverContent, PopoverPortal, useForwardPropsEmits } from '..'\n\nexport interface DatePickerContentProps extends PopoverContentProps {\n  /**\n   * Props to control the portal wrapped around the content.\n   */\n  portal?: PopoverPortalProps\n}\nexport interface DatePickerContentEmits extends PopoverContentEmits {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerContentProps>()\nconst emits = defineEmits<DatePickerContentEmits>()\n\nconst propsToForward = computed(() => ({\n  ...props,\n  portal: undefined,\n}))\nconst forwarded = useForwardPropsEmits(propsToForward, emits)\n</script>\n\n<template>\n  <PopoverPortal v-bind=\"portal\">\n    <PopoverContent\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      @open-auto-focus=\"event => {\n        emits('openAutoFocus', event)\n\n        if (!event.defaultPrevented && event.target) {\n          handleCalendarInitialFocus(event.target as HTMLElement)\n          event.preventDefault()\n        }\n      }\"\n    >\n      <slot />\n    </PopoverContent>\n  </PopoverPortal>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverContentEmits, PopoverContentProps, PopoverPortalProps } from '..'\nimport { computed } from 'vue'\nimport { handleCalendarInitialFocus } from '@/shared/date'\nimport { PopoverContent, PopoverPortal, useForwardPropsEmits } from '..'\n\nexport interface DatePickerContentProps extends PopoverContentProps {\n  /**\n   * Props to control the portal wrapped around the content.\n   */\n  portal?: PopoverPortalProps\n}\nexport interface DatePickerContentEmits extends PopoverContentEmits {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerContentProps>()\nconst emits = defineEmits<DatePickerContentEmits>()\n\nconst propsToForward = computed(() => ({\n  ...props,\n  portal: undefined,\n}))\nconst forwarded = useForwardPropsEmits(propsToForward, emits)\n</script>\n\n<template>\n  <PopoverPortal v-bind=\"portal\">\n    <PopoverContent\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      @open-auto-focus=\"event => {\n        emits('openAutoFocus', event)\n\n        if (!event.defaultPrevented && event.target) {\n          handleCalendarInitialFocus(event.target as HTMLElement)\n          event.preventDefault()\n        }\n      }\"\n    >\n      <slot />\n    </PopoverContent>\n  </PopoverPortal>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport { DateFieldRoot } from '..'\nimport { injectDatePickerRootContext } from './DatePickerRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nconst rootContext = injectDatePickerRootContext()\n</script>\n\n<template>\n  <DateFieldRoot\n    v-slot=\"{ segments, modelValue }\"\n    :ref=\"rootContext.dateFieldRef\"\n    :model-value=\"rootContext.modelValue.value\"\n    :placeholder=\"rootContext.placeholder.value\"\n    v-bind=\"{\n      id: rootContext.id.value,\n      name: rootContext.name.value,\n      disabled: rootContext.disabled.value,\n      minValue: rootContext.minValue.value,\n      maxValue: rootContext.maxValue.value,\n      readonly: rootContext.readonly.value,\n      hourCycle: rootContext.hourCycle.value,\n      granularity: rootContext.granularity.value,\n      hideTimeZone: rootContext.hideTimeZone.value,\n      locale: rootContext.locale.value,\n      isDateUnavailable: rootContext.isDateUnavailable,\n      required: rootContext.required.value,\n      dir: rootContext.dir.value,\n      step: rootContext.step.value,\n    }\"\n    @update:model-value=\"(date: DateValue | undefined) => {\n      if (date && rootContext.modelValue.value && date.compare(rootContext.modelValue.value) === 0) return\n      rootContext.onDateChange(date)\n    }\"\n    @update:placeholder=\"(date: DateValue) => {\n      if (date.compare(rootContext.placeholder.value) === 0) return\n      rootContext.onPlaceholderChange(date)\n    }\"\n  >\n    <slot\n      :segments=\"segments\"\n      :model-value=\"modelValue\"\n    />\n  </DateFieldRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport { DateFieldRoot } from '..'\nimport { injectDatePickerRootContext } from './DatePickerRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nconst rootContext = injectDatePickerRootContext()\n</script>\n\n<template>\n  <DateFieldRoot\n    v-slot=\"{ segments, modelValue }\"\n    :ref=\"rootContext.dateFieldRef\"\n    :model-value=\"rootContext.modelValue.value\"\n    :placeholder=\"rootContext.placeholder.value\"\n    v-bind=\"{\n      id: rootContext.id.value,\n      name: rootContext.name.value,\n      disabled: rootContext.disabled.value,\n      minValue: rootContext.minValue.value,\n      maxValue: rootContext.maxValue.value,\n      readonly: rootContext.readonly.value,\n      hourCycle: rootContext.hourCycle.value,\n      granularity: rootContext.granularity.value,\n      hideTimeZone: rootContext.hideTimeZone.value,\n      locale: rootContext.locale.value,\n      isDateUnavailable: rootContext.isDateUnavailable,\n      required: rootContext.required.value,\n      dir: rootContext.dir.value,\n      step: rootContext.step.value,\n    }\"\n    @update:model-value=\"(date: DateValue | undefined) => {\n      if (date && rootContext.modelValue.value && date.compare(rootContext.modelValue.value) === 0) return\n      rootContext.onDateChange(date)\n    }\"\n    @update:placeholder=\"(date: DateValue) => {\n      if (date.compare(rootContext.placeholder.value) === 0) return\n      rootContext.onPlaceholderChange(date)\n    }\"\n  >\n    <slot\n      :segments=\"segments\"\n      :model-value=\"modelValue\"\n    />\n  </DateFieldRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarGridProps } from '..'\nimport { CalendarGrid } from '..'\n\nexport interface DatePickerGridProps extends CalendarGridProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerGridProps>()\n</script>\n\n<template>\n  <CalendarGrid v-bind=\"props\">\n    <slot />\n  </CalendarGrid>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarGridProps } from '..'\nimport { CalendarGrid } from '..'\n\nexport interface DatePickerGridProps extends CalendarGridProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerGridProps>()\n</script>\n\n<template>\n  <CalendarGrid v-bind=\"props\">\n    <slot />\n  </CalendarGrid>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarGridBodyProps } from '..'\nimport { CalendarGridBody } from '..'\n\nexport interface DatePickerGridBodyProps extends CalendarGridBodyProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerGridBodyProps>()\n</script>\n\n<template>\n  <CalendarGridBody v-bind=\"props\">\n    <slot />\n  </CalendarGridBody>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarGridBodyProps } from '..'\nimport { CalendarGridBody } from '..'\n\nexport interface DatePickerGridBodyProps extends CalendarGridBodyProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerGridBodyProps>()\n</script>\n\n<template>\n  <CalendarGridBody v-bind=\"props\">\n    <slot />\n  </CalendarGridBody>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarGridHeadProps } from '..'\nimport { CalendarGridHead } from '..'\n\nexport interface DatePickerGridHeadProps extends CalendarGridHeadProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerGridHeadProps>()\n</script>\n\n<template>\n  <CalendarGridHead v-bind=\"props\">\n    <slot />\n  </CalendarGridHead>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarGridHeadProps } from '..'\nimport { CalendarGridHead } from '..'\n\nexport interface DatePickerGridHeadProps extends CalendarGridHeadProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerGridHeadProps>()\n</script>\n\n<template>\n  <CalendarGridHead v-bind=\"props\">\n    <slot />\n  </CalendarGridHead>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarGridRowProps } from '..'\nimport { CalendarGridRow } from '..'\n\nexport interface DatePickerGridRowProps extends CalendarGridRowProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerGridRowProps>()\n</script>\n\n<template>\n  <CalendarGridRow v-bind=\"props\">\n    <slot />\n  </CalendarGridRow>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarGridRowProps } from '..'\nimport { CalendarGridRow } from '..'\n\nexport interface DatePickerGridRowProps extends CalendarGridRowProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerGridRowProps>()\n</script>\n\n<template>\n  <CalendarGridRow v-bind=\"props\">\n    <slot />\n  </CalendarGridRow>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarHeadCellProps } from '..'\nimport { CalendarHeadCell } from '..'\n\nexport interface DatePickerHeadCellProps extends CalendarHeadCellProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerHeadCellProps>()\n</script>\n\n<template>\n  <CalendarHeadCell v-bind=\"props\">\n    <slot />\n  </CalendarHeadCell>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarHeadCellProps } from '..'\nimport { CalendarHeadCell } from '..'\n\nexport interface DatePickerHeadCellProps extends CalendarHeadCellProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerHeadCellProps>()\n</script>\n\n<template>\n  <CalendarHeadCell v-bind=\"props\">\n    <slot />\n  </CalendarHeadCell>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarHeaderProps } from '..'\nimport { CalendarHeader } from '..'\n\nexport interface DatePickerHeaderProps extends CalendarHeaderProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerHeaderProps>()\n</script>\n\n<template>\n  <CalendarHeader v-bind=\"props\">\n    <slot />\n  </CalendarHeader>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarHeaderProps } from '..'\nimport { CalendarHeader } from '..'\n\nexport interface DatePickerHeaderProps extends CalendarHeaderProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerHeaderProps>()\n</script>\n\n<template>\n  <CalendarHeader v-bind=\"props\">\n    <slot />\n  </CalendarHeader>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarHeadingProps } from '..'\nimport { CalendarHeading } from '..'\n\nexport interface DatePickerHeadingProps extends CalendarHeadingProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerHeadingProps>()\ndefineSlots<{\n  default?: (props: {\n    /** Current month and year */\n    headingValue: string\n  }) => any\n}>()\n</script>\n\n<template>\n  <CalendarHeading\n    v-slot=\"{ headingValue }\"\n    v-bind=\"props\"\n  >\n    <slot :heading-value=\"headingValue\">\n      {{ headingValue }}\n    </slot>\n  </CalendarHeading>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarHeadingProps } from '..'\nimport { CalendarHeading } from '..'\n\nexport interface DatePickerHeadingProps extends CalendarHeadingProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerHeadingProps>()\ndefineSlots<{\n  default?: (props: {\n    /** Current month and year */\n    headingValue: string\n  }) => any\n}>()\n</script>\n\n<template>\n  <CalendarHeading\n    v-slot=\"{ headingValue }\"\n    v-bind=\"props\"\n  >\n    <slot :heading-value=\"headingValue\">\n      {{ headingValue }}\n    </slot>\n  </CalendarHeading>\n</template>\n", "<script lang=\"ts\">\nimport type { DateFieldInputProps } from '..'\nimport { DateFieldInput } from '..'\n\nexport interface DatePickerInputProps extends DateFieldInputProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerInputProps>()\n</script>\n\n<template>\n  <DateFieldInput v-bind=\"props\">\n    <slot />\n  </DateFieldInput>\n</template>\n", "<script lang=\"ts\">\nimport type { DateFieldInputProps } from '..'\nimport { DateFieldInput } from '..'\n\nexport interface DatePickerInputProps extends DateFieldInputProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerInputProps>()\n</script>\n\n<template>\n  <DateFieldInput v-bind=\"props\">\n    <slot />\n  </DateFieldInput>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarNextProps } from '..'\nimport type { CalendarNextSlot } from '@/Calendar/CalendarNext.vue'\nimport { CalendarNext } from '..'\n\nexport interface DatePickerNextProps extends CalendarNextProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerNextProps>()\n\ndefineSlots<CalendarNextSlot>()\n</script>\n\n<template>\n  <CalendarNext\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </CalendarNext>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarNextProps } from '..'\nimport type { CalendarNextSlot } from '@/Calendar/CalendarNext.vue'\nimport { CalendarNext } from '..'\n\nexport interface DatePickerNextProps extends CalendarNextProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerNextProps>()\n\ndefineSlots<CalendarNextSlot>()\n</script>\n\n<template>\n  <CalendarNext\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </CalendarNext>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarPrevProps } from '..'\nimport type { CalendarPrevSlot } from '@/Calendar/CalendarPrev.vue'\nimport { CalendarPrev } from '..'\n\nexport interface DatePickerPrevProps extends CalendarPrevProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerPrevProps>()\ndefineSlots<CalendarPrevSlot>()\n</script>\n\n<template>\n  <CalendarPrev\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </CalendarPrev>\n</template>\n", "<script lang=\"ts\">\nimport type { CalendarPrevProps } from '..'\nimport type { CalendarPrevSlot } from '@/Calendar/CalendarPrev.vue'\nimport { CalendarPrev } from '..'\n\nexport interface DatePickerPrevProps extends CalendarPrevProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerPrevProps>()\ndefineSlots<CalendarPrevSlot>()\n</script>\n\n<template>\n  <CalendarPrev\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </CalendarPrev>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\n\nexport interface PopoverTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { PopperAnchor } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = withDefaults(defineProps<PopoverTriggerProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectPopoverRootContext()\n\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\n\nrootContext.triggerId ||= useId(undefined, 'reka-popover-trigger')\nonMounted(() => {\n  rootContext.triggerElement.value = triggerElement.value\n})\n</script>\n\n<template>\n  <component\n    :is=\"rootContext.hasCustomAnchor.value ? Primitive : PopperAnchor\"\n    as-child\n  >\n    <Primitive\n      :id=\"rootContext.triggerId\"\n      :ref=\"forwardRef\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      aria-haspopup=\"dialog\"\n      :aria-expanded=\"rootContext.open.value\"\n      :aria-controls=\"rootContext.contentId\"\n      :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n      :as=\"as\"\n      :as-child=\"props.asChild\"\n      @click=\"rootContext.onOpenToggle\"\n    >\n      <slot />\n    </Primitive>\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\n\nexport interface PopoverTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport { PopperAnchor } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { injectPopoverRootContext } from './PopoverRoot.vue'\n\nconst props = withDefaults(defineProps<PopoverTriggerProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectPopoverRootContext()\n\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\n\nrootContext.triggerId ||= useId(undefined, 'reka-popover-trigger')\nonMounted(() => {\n  rootContext.triggerElement.value = triggerElement.value\n})\n</script>\n\n<template>\n  <component\n    :is=\"rootContext.hasCustomAnchor.value ? Primitive : PopperAnchor\"\n    as-child\n  >\n    <Primitive\n      :id=\"rootContext.triggerId\"\n      :ref=\"forwardRef\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      aria-haspopup=\"dialog\"\n      :aria-expanded=\"rootContext.open.value\"\n      :aria-controls=\"rootContext.contentId\"\n      :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n      :as=\"as\"\n      :as-child=\"props.asChild\"\n      @click=\"rootContext.onOpenToggle\"\n    >\n      <slot />\n    </Primitive>\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverTriggerProps } from '..'\nimport { PopoverTrigger } from '..'\nimport { injectDatePickerRootContext } from './DatePickerRoot.vue'\n\nexport interface DatePickerTriggerProps extends PopoverTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerTriggerProps>()\nconst rootContext = injectDatePickerRootContext()\n</script>\n\n<template>\n  <PopoverTrigger\n    data-reka-date-field-segment=\"trigger\"\n    v-bind=\"props\"\n    :disabled=\"rootContext.disabled.value\"\n    @focusin=\"(e: FocusEvent) => {\n      rootContext.dateFieldRef.value?.setFocusedElement(e.target as HTMLElement)\n    }\"\n  >\n    <slot />\n  </PopoverTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverTriggerProps } from '..'\nimport { PopoverTrigger } from '..'\nimport { injectDatePickerRootContext } from './DatePickerRoot.vue'\n\nexport interface DatePickerTriggerProps extends PopoverTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DatePickerTriggerProps>()\nconst rootContext = injectDatePickerRootContext()\n</script>\n\n<template>\n  <PopoverTrigger\n    data-reka-date-field-segment=\"trigger\"\n    v-bind=\"props\"\n    :disabled=\"rootContext.disabled.value\"\n    @focusin=\"(e: FocusEvent) => {\n      rootContext.dateFieldRef.value?.setFocusedElement(e.target as HTMLElement)\n    }\"\n  >\n    <slot />\n  </PopoverTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\n\nimport type { Ref } from 'vue'\nimport type { Matcher } from '@/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Formatter } from '@/shared'\nimport type { DateRange, DateStep, Granularity, HourCycle, SegmentPart, SegmentValueObj } from '@/shared/date'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport {\n  areAllDaysBetweenValid,\n  hasTime,\n  isBefore,\n  isBeforeOrSame,\n\n} from '@/date'\nimport { createContext, useDateFormatter, useDirection, useKbd, useLocale } from '@/shared'\nimport {\n  createContent,\n\n  getDefaultDate,\n  getSegmentElements,\n\n  initializeSegmentValues,\n  isSegmentNavigationKey,\n  normalizeDateStep,\n  normalizeHourCycle,\n\n  syncSegmentValues,\n} from '@/shared/date'\n\nexport type DateRangeType = 'start' | 'end'\n\ntype DateRangeFieldRootContext = {\n  locale: Ref<string>\n  startValue: Ref<DateValue | undefined>\n  endValue: Ref<DateValue | undefined>\n  placeholder: Ref<DateValue>\n  isDateUnavailable?: Matcher\n  isInvalid: Ref<boolean>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  formatter: Formatter\n  hourCycle: HourCycle\n  step: Ref<DateStep>\n  segmentValues: Record<DateRangeType, Ref<SegmentValueObj>>\n  segmentContents: Ref<{ start: { part: SegmentPart, value: string }[], end: { part: SegmentPart, value: string }[] }>\n  elements: Ref<Set<HTMLElement>>\n  focusNext: () => void\n  setFocusedElement: (el: HTMLElement) => void\n}\n\nexport interface DateRangeFieldRootProps extends PrimitiveProps, FormFieldProps {\n  /** The default value for the calendar */\n  defaultValue?: DateRange\n  /** The default placeholder date */\n  defaultPlaceholder?: DateValue\n  /** The placeholder date, which is used to determine what month to display when no date is selected. This updates as the user navigates the calendar and can be used to programmatically control the calendar view */\n  placeholder?: DateValue\n  /** The controlled checked state of the calendar. Can be bound as `v-model`. */\n  modelValue?: DateRange | null\n  /** The hour cycle used for formatting times. Defaults to the local preference */\n  hourCycle?: HourCycle\n  /** The stepping interval for the time fields. Defaults to `1`. */\n  step?: DateStep\n  /** The granularity to use for formatting times. Defaults to day if a CalendarDate is provided, otherwise defaults to minute. The field will render segments for each part of the date up to and including the specified granularity */\n  granularity?: Granularity\n  /** Whether or not to hide the time zone segment of the field */\n  hideTimeZone?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: DateValue\n  /** The minimum date that can be selected */\n  minValue?: DateValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** Whether or not the date field is disabled */\n  disabled?: boolean\n  /** Whether or not the date field is readonly */\n  readonly?: boolean\n  /** A function that returns whether or not a date is unavailable */\n  isDateUnavailable?: Matcher\n  /** Id of the element */\n  id?: string\n  /** The reading direction of the date field when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n}\n\nexport type DateRangeFieldRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [DateRange]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n}\n\nexport const [injectDateRangeFieldRootContext, provideDateRangeFieldRootContext]\n  = createContext<DateRangeFieldRootContext>('DateRangeFieldRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, onMounted, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHidden } from '@/VisuallyHidden'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<DateRangeFieldRootProps>(), {\n  defaultValue: undefined,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  isDateUnavailable: undefined,\n})\nconst emits = defineEmits<DateRangeFieldRootEmits>()\nconst { disabled, readonly, isDateUnavailable: propsIsDateUnavailable, dir: propDir, locale: propLocale } = toRefs(props)\nconst locale = useLocale(propLocale)\nconst dir = useDirection(propDir)\n\nconst formatter = useDateFormatter(locale.value, {\n  hourCycle: normalizeHourCycle(props.hourCycle),\n})\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst segmentElements = ref<Set<HTMLElement>>(new Set())\n\nonMounted(() => {\n  getSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n})\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? { start: undefined, end: undefined },\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateRange | null>\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  granularity: props.granularity,\n  defaultValue: modelValue.value?.start,\n  locale: props.locale,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nconst step = computed(() => normalizeDateStep(props))\n\nconst inferredGranularity = computed(() => {\n  if (props.granularity)\n    return !hasTime(placeholder.value) ? 'day' : props.granularity\n\n  return hasTime(placeholder.value) ? 'minute' : 'day'\n})\n\nconst isStartInvalid = computed(() => {\n  if (!modelValue.value?.start)\n    return false\n\n  if (propsIsDateUnavailable.value?.(modelValue.value.start))\n    return true\n\n  if (props.minValue && isBefore(modelValue.value.start, props.minValue))\n    return true\n\n  if (props.maxValue && isBefore(props.maxValue, modelValue.value.start))\n    return true\n\n  return false\n})\n\nconst isEndInvalid = computed(() => {\n  if (!modelValue.value?.end)\n    return false\n\n  if (propsIsDateUnavailable.value?.(modelValue.value.end))\n    return true\n\n  if (props.minValue && isBefore(modelValue.value.end, props.minValue))\n    return true\n\n  if (props.maxValue && isBefore(props.maxValue, modelValue.value.end))\n    return true\n\n  return false\n})\n\nconst isInvalid = computed(() => {\n  if (isStartInvalid.value || isEndInvalid.value)\n    return true\n\n  if (!modelValue.value?.start || !modelValue.value?.end)\n    return false\n\n  if (!isBeforeOrSame(modelValue.value.start, modelValue.value.end))\n    return true\n\n  if (propsIsDateUnavailable.value !== undefined) {\n    const allValid = areAllDaysBetweenValid(\n      modelValue.value.start,\n      modelValue.value.end,\n      propsIsDateUnavailable.value,\n      undefined,\n    )\n    if (!allValid)\n      return true\n  }\n  return false\n})\n\nconst initialSegments = initializeSegmentValues(inferredGranularity.value)\n\nconst startSegmentValues = ref<SegmentValueObj>(modelValue.value?.start ? { ...syncSegmentValues({ value: modelValue.value.start, formatter }) } : { ...initialSegments })\nconst endSegmentValues = ref<SegmentValueObj>(modelValue.value?.end ? { ...syncSegmentValues({ value: modelValue.value.end, formatter }) } : { ...initialSegments })\n\nconst startSegmentContent = computed(() => createContent({\n  granularity: inferredGranularity.value,\n  dateRef: placeholder.value,\n  formatter,\n  hideTimeZone: props.hideTimeZone,\n  hourCycle: props.hourCycle,\n  segmentValues: startSegmentValues.value,\n  locale,\n}))\n\nconst endSegmentContent = computed(() => createContent({\n  granularity: inferredGranularity.value,\n  dateRef: placeholder.value,\n  formatter,\n  hideTimeZone: props.hideTimeZone,\n  hourCycle: props.hourCycle,\n  segmentValues: endSegmentValues.value,\n  locale,\n}))\n\nconst segmentContents = computed(() => ({\n  start: startSegmentContent.value.arr,\n  end: endSegmentContent.value.arr,\n}))\n\nconst editableSegmentContents = computed(() => ({ start: segmentContents.value.start.filter(({ part }) => part !== 'literal'), end: segmentContents.value.end.filter(({ part }) => part !== 'literal') }))\n\nconst startValue = ref(modelValue.value?.start?.copy()) as Ref<DateValue | undefined>\nconst endValue = ref(modelValue.value?.end?.copy()) as Ref<DateValue | undefined>\n\nwatch([startValue, endValue], ([_startValue, _endValue]) => {\n  modelValue.value = { start: _startValue?.copy(), end: _endValue?.copy() }\n})\n\nwatch(modelValue, (_modelValue) => {\n  const isStartChanged = _modelValue?.start && startValue.value\n    ? _modelValue.start.compare(startValue.value) !== 0\n    : _modelValue?.start !== startValue.value\n  if (isStartChanged) {\n    startValue.value = _modelValue?.start?.copy()\n  }\n\n  const isEndChanged = _modelValue?.end && endValue.value\n    ? _modelValue.end.compare(endValue.value) !== 0\n    : _modelValue?.end !== endValue.value\n  if (isEndChanged) {\n    endValue.value = _modelValue?.end?.copy()\n  }\n})\n\nwatch([startValue, locale], ([_startValue]) => {\n  if (_startValue !== undefined) {\n    startSegmentValues.value = { ...syncSegmentValues({ value: _startValue, formatter }) }\n  }\n  // If segment has null value, means that user modified it, thus do not reset the segmentValues\n  else if (Object.values(startSegmentValues.value).every(value => value !== null) && _startValue === undefined) {\n    startSegmentValues.value = { ...initialSegments }\n  }\n})\n\nwatch(locale, (value) => {\n  if (formatter.getLocale() !== value) {\n    formatter.setLocale(value)\n    // Locale changed, so we need to clear the segment elements and re-get them (different order)\n    // Get the focusable elements again on the next tick\n    nextTick(() => {\n      segmentElements.value.clear()\n      getSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n    })\n  }\n})\n\nwatch(modelValue, (_modelValue) => {\n  if (_modelValue && _modelValue.start !== undefined && placeholder.value.compare(_modelValue.start) !== 0)\n    placeholder.value = _modelValue.start.copy()\n})\n\nwatch([endValue, locale], ([_endValue]) => {\n  if (_endValue !== undefined) {\n    endSegmentValues.value = { ...syncSegmentValues({ value: _endValue, formatter }) }\n  }\n  // If segment has null value, means that user modified it, thus do not reset the segmentValues\n  else if (Object.values(endSegmentValues.value).every(value => value !== null) && _endValue === undefined) {\n    endSegmentValues.value = { ...initialSegments }\n  }\n})\n\nconst currentFocusedElement = ref<HTMLElement | null>(null)\n\nconst currentSegmentIndex = computed(() => Array.from(segmentElements.value).findIndex(el =>\n  el.getAttribute('data-reka-date-field-segment') === currentFocusedElement.value?.getAttribute('data-reka-date-field-segment')\n  && el.getAttribute('data-reka-date-range-field-segment-type') === currentFocusedElement.value?.getAttribute('data-reka-date-range-field-segment-type')))\n\nconst nextFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const nextCondition = sign < 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (nextCondition)\n    return null\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value + sign]\n  return segmentToFocus\n})\n\nconst prevFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const prevCondition = sign > 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (prevCondition)\n    return null\n\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value - sign]\n  return segmentToFocus\n})\n\nconst kbd = useKbd()\n\nfunction handleKeydown(e: KeyboardEvent) {\n  if (!isSegmentNavigationKey(e.key))\n    return\n  if (e.key === kbd.ARROW_LEFT)\n    prevFocusableSegment.value?.focus()\n  if (e.key === kbd.ARROW_RIGHT)\n    nextFocusableSegment.value?.focus()\n}\n\nfunction setFocusedElement(el: HTMLElement) {\n  currentFocusedElement.value = el\n}\n\nprovideDateRangeFieldRootContext({\n  isDateUnavailable: propsIsDateUnavailable.value,\n  locale,\n  startValue,\n  endValue,\n  placeholder,\n  disabled,\n  formatter,\n  hourCycle: props.hourCycle,\n  step,\n  readonly,\n  segmentValues: { start: startSegmentValues, end: endSegmentValues },\n  isInvalid,\n  segmentContents: editableSegmentContents,\n  elements: segmentElements,\n  setFocusedElement,\n  focusNext() {\n    nextFocusableSegment.value?.focus()\n  },\n})\n\ndefineExpose({\n  setFocusedElement,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    role=\"group\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n    @keydown.left.right=\"handleKeydown\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :segments=\"segmentContents\"\n    />\n\n    <VisuallyHidden\n      :id=\"id\"\n      as=\"input\"\n      feature=\"focusable\"\n      tabindex=\"-1\"\n      :value=\"`${modelValue?.start?.toString()} - ${modelValue?.end?.toString()}`\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      @focus=\"Array.from(segmentElements)?.[0]?.focus()\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\n\nimport type { Ref } from 'vue'\nimport type { Matcher } from '@/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Formatter } from '@/shared'\nimport type { DateRange, DateStep, Granularity, HourCycle, SegmentPart, SegmentValueObj } from '@/shared/date'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport {\n  areAllDaysBetweenValid,\n  hasTime,\n  isBefore,\n  isBeforeOrSame,\n\n} from '@/date'\nimport { createContext, useDateFormatter, useDirection, useKbd, useLocale } from '@/shared'\nimport {\n  createContent,\n\n  getDefaultDate,\n  getSegmentElements,\n\n  initializeSegmentValues,\n  isSegmentNavigationKey,\n  normalizeDateStep,\n  normalizeHourCycle,\n\n  syncSegmentValues,\n} from '@/shared/date'\n\nexport type DateRangeType = 'start' | 'end'\n\ntype DateRangeFieldRootContext = {\n  locale: Ref<string>\n  startValue: Ref<DateValue | undefined>\n  endValue: Ref<DateValue | undefined>\n  placeholder: Ref<DateValue>\n  isDateUnavailable?: Matcher\n  isInvalid: Ref<boolean>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  formatter: Formatter\n  hourCycle: HourCycle\n  step: Ref<DateStep>\n  segmentValues: Record<DateRangeType, Ref<SegmentValueObj>>\n  segmentContents: Ref<{ start: { part: SegmentPart, value: string }[], end: { part: SegmentPart, value: string }[] }>\n  elements: Ref<Set<HTMLElement>>\n  focusNext: () => void\n  setFocusedElement: (el: HTMLElement) => void\n}\n\nexport interface DateRangeFieldRootProps extends PrimitiveProps, FormFieldProps {\n  /** The default value for the calendar */\n  defaultValue?: DateRange\n  /** The default placeholder date */\n  defaultPlaceholder?: DateValue\n  /** The placeholder date, which is used to determine what month to display when no date is selected. This updates as the user navigates the calendar and can be used to programmatically control the calendar view */\n  placeholder?: DateValue\n  /** The controlled checked state of the calendar. Can be bound as `v-model`. */\n  modelValue?: DateRange | null\n  /** The hour cycle used for formatting times. Defaults to the local preference */\n  hourCycle?: HourCycle\n  /** The stepping interval for the time fields. Defaults to `1`. */\n  step?: DateStep\n  /** The granularity to use for formatting times. Defaults to day if a CalendarDate is provided, otherwise defaults to minute. The field will render segments for each part of the date up to and including the specified granularity */\n  granularity?: Granularity\n  /** Whether or not to hide the time zone segment of the field */\n  hideTimeZone?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: DateValue\n  /** The minimum date that can be selected */\n  minValue?: DateValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** Whether or not the date field is disabled */\n  disabled?: boolean\n  /** Whether or not the date field is readonly */\n  readonly?: boolean\n  /** A function that returns whether or not a date is unavailable */\n  isDateUnavailable?: Matcher\n  /** Id of the element */\n  id?: string\n  /** The reading direction of the date field when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n}\n\nexport type DateRangeFieldRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [DateRange]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n}\n\nexport const [injectDateRangeFieldRootContext, provideDateRangeFieldRootContext]\n  = createContext<DateRangeFieldRootContext>('DateRangeFieldRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, onMounted, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHidden } from '@/VisuallyHidden'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<DateRangeFieldRootProps>(), {\n  defaultValue: undefined,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  isDateUnavailable: undefined,\n})\nconst emits = defineEmits<DateRangeFieldRootEmits>()\nconst { disabled, readonly, isDateUnavailable: propsIsDateUnavailable, dir: propDir, locale: propLocale } = toRefs(props)\nconst locale = useLocale(propLocale)\nconst dir = useDirection(propDir)\n\nconst formatter = useDateFormatter(locale.value, {\n  hourCycle: normalizeHourCycle(props.hourCycle),\n})\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst segmentElements = ref<Set<HTMLElement>>(new Set())\n\nonMounted(() => {\n  getSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n})\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? { start: undefined, end: undefined },\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateRange | null>\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  granularity: props.granularity,\n  defaultValue: modelValue.value?.start,\n  locale: props.locale,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nconst step = computed(() => normalizeDateStep(props))\n\nconst inferredGranularity = computed(() => {\n  if (props.granularity)\n    return !hasTime(placeholder.value) ? 'day' : props.granularity\n\n  return hasTime(placeholder.value) ? 'minute' : 'day'\n})\n\nconst isStartInvalid = computed(() => {\n  if (!modelValue.value?.start)\n    return false\n\n  if (propsIsDateUnavailable.value?.(modelValue.value.start))\n    return true\n\n  if (props.minValue && isBefore(modelValue.value.start, props.minValue))\n    return true\n\n  if (props.maxValue && isBefore(props.maxValue, modelValue.value.start))\n    return true\n\n  return false\n})\n\nconst isEndInvalid = computed(() => {\n  if (!modelValue.value?.end)\n    return false\n\n  if (propsIsDateUnavailable.value?.(modelValue.value.end))\n    return true\n\n  if (props.minValue && isBefore(modelValue.value.end, props.minValue))\n    return true\n\n  if (props.maxValue && isBefore(props.maxValue, modelValue.value.end))\n    return true\n\n  return false\n})\n\nconst isInvalid = computed(() => {\n  if (isStartInvalid.value || isEndInvalid.value)\n    return true\n\n  if (!modelValue.value?.start || !modelValue.value?.end)\n    return false\n\n  if (!isBeforeOrSame(modelValue.value.start, modelValue.value.end))\n    return true\n\n  if (propsIsDateUnavailable.value !== undefined) {\n    const allValid = areAllDaysBetweenValid(\n      modelValue.value.start,\n      modelValue.value.end,\n      propsIsDateUnavailable.value,\n      undefined,\n    )\n    if (!allValid)\n      return true\n  }\n  return false\n})\n\nconst initialSegments = initializeSegmentValues(inferredGranularity.value)\n\nconst startSegmentValues = ref<SegmentValueObj>(modelValue.value?.start ? { ...syncSegmentValues({ value: modelValue.value.start, formatter }) } : { ...initialSegments })\nconst endSegmentValues = ref<SegmentValueObj>(modelValue.value?.end ? { ...syncSegmentValues({ value: modelValue.value.end, formatter }) } : { ...initialSegments })\n\nconst startSegmentContent = computed(() => createContent({\n  granularity: inferredGranularity.value,\n  dateRef: placeholder.value,\n  formatter,\n  hideTimeZone: props.hideTimeZone,\n  hourCycle: props.hourCycle,\n  segmentValues: startSegmentValues.value,\n  locale,\n}))\n\nconst endSegmentContent = computed(() => createContent({\n  granularity: inferredGranularity.value,\n  dateRef: placeholder.value,\n  formatter,\n  hideTimeZone: props.hideTimeZone,\n  hourCycle: props.hourCycle,\n  segmentValues: endSegmentValues.value,\n  locale,\n}))\n\nconst segmentContents = computed(() => ({\n  start: startSegmentContent.value.arr,\n  end: endSegmentContent.value.arr,\n}))\n\nconst editableSegmentContents = computed(() => ({ start: segmentContents.value.start.filter(({ part }) => part !== 'literal'), end: segmentContents.value.end.filter(({ part }) => part !== 'literal') }))\n\nconst startValue = ref(modelValue.value?.start?.copy()) as Ref<DateValue | undefined>\nconst endValue = ref(modelValue.value?.end?.copy()) as Ref<DateValue | undefined>\n\nwatch([startValue, endValue], ([_startValue, _endValue]) => {\n  modelValue.value = { start: _startValue?.copy(), end: _endValue?.copy() }\n})\n\nwatch(modelValue, (_modelValue) => {\n  const isStartChanged = _modelValue?.start && startValue.value\n    ? _modelValue.start.compare(startValue.value) !== 0\n    : _modelValue?.start !== startValue.value\n  if (isStartChanged) {\n    startValue.value = _modelValue?.start?.copy()\n  }\n\n  const isEndChanged = _modelValue?.end && endValue.value\n    ? _modelValue.end.compare(endValue.value) !== 0\n    : _modelValue?.end !== endValue.value\n  if (isEndChanged) {\n    endValue.value = _modelValue?.end?.copy()\n  }\n})\n\nwatch([startValue, locale], ([_startValue]) => {\n  if (_startValue !== undefined) {\n    startSegmentValues.value = { ...syncSegmentValues({ value: _startValue, formatter }) }\n  }\n  // If segment has null value, means that user modified it, thus do not reset the segmentValues\n  else if (Object.values(startSegmentValues.value).every(value => value !== null) && _startValue === undefined) {\n    startSegmentValues.value = { ...initialSegments }\n  }\n})\n\nwatch(locale, (value) => {\n  if (formatter.getLocale() !== value) {\n    formatter.setLocale(value)\n    // Locale changed, so we need to clear the segment elements and re-get them (different order)\n    // Get the focusable elements again on the next tick\n    nextTick(() => {\n      segmentElements.value.clear()\n      getSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n    })\n  }\n})\n\nwatch(modelValue, (_modelValue) => {\n  if (_modelValue && _modelValue.start !== undefined && placeholder.value.compare(_modelValue.start) !== 0)\n    placeholder.value = _modelValue.start.copy()\n})\n\nwatch([endValue, locale], ([_endValue]) => {\n  if (_endValue !== undefined) {\n    endSegmentValues.value = { ...syncSegmentValues({ value: _endValue, formatter }) }\n  }\n  // If segment has null value, means that user modified it, thus do not reset the segmentValues\n  else if (Object.values(endSegmentValues.value).every(value => value !== null) && _endValue === undefined) {\n    endSegmentValues.value = { ...initialSegments }\n  }\n})\n\nconst currentFocusedElement = ref<HTMLElement | null>(null)\n\nconst currentSegmentIndex = computed(() => Array.from(segmentElements.value).findIndex(el =>\n  el.getAttribute('data-reka-date-field-segment') === currentFocusedElement.value?.getAttribute('data-reka-date-field-segment')\n  && el.getAttribute('data-reka-date-range-field-segment-type') === currentFocusedElement.value?.getAttribute('data-reka-date-range-field-segment-type')))\n\nconst nextFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const nextCondition = sign < 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (nextCondition)\n    return null\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value + sign]\n  return segmentToFocus\n})\n\nconst prevFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const prevCondition = sign > 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (prevCondition)\n    return null\n\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value - sign]\n  return segmentToFocus\n})\n\nconst kbd = useKbd()\n\nfunction handleKeydown(e: KeyboardEvent) {\n  if (!isSegmentNavigationKey(e.key))\n    return\n  if (e.key === kbd.ARROW_LEFT)\n    prevFocusableSegment.value?.focus()\n  if (e.key === kbd.ARROW_RIGHT)\n    nextFocusableSegment.value?.focus()\n}\n\nfunction setFocusedElement(el: HTMLElement) {\n  currentFocusedElement.value = el\n}\n\nprovideDateRangeFieldRootContext({\n  isDateUnavailable: propsIsDateUnavailable.value,\n  locale,\n  startValue,\n  endValue,\n  placeholder,\n  disabled,\n  formatter,\n  hourCycle: props.hourCycle,\n  step,\n  readonly,\n  segmentValues: { start: startSegmentValues, end: endSegmentValues },\n  isInvalid,\n  segmentContents: editableSegmentContents,\n  elements: segmentElements,\n  setFocusedElement,\n  focusNext() {\n    nextFocusableSegment.value?.focus()\n  },\n})\n\ndefineExpose({\n  setFocusedElement,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    role=\"group\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n    @keydown.left.right=\"handleKeydown\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :segments=\"segmentContents\"\n    />\n\n    <VisuallyHidden\n      :id=\"id\"\n      as=\"input\"\n      feature=\"focusable\"\n      tabindex=\"-1\"\n      :value=\"`${modelValue?.start?.toString()} - ${modelValue?.end?.toString()}`\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      @focus=\"Array.from(segmentElements)?.[0]?.focus()\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateRangeType } from './DateRangeFieldRoot.vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { SegmentPart } from '@/shared/date'\nimport { computed, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useDateField } from '@/shared/date/useDateField'\nimport { injectDateRangeFieldRootContext } from './DateRangeFieldRoot.vue'\n\nexport interface DateRangeFieldInputProps extends PrimitiveProps {\n  /** The part of the date to render */\n  part: SegmentPart\n  /** The type of field to render (start or end) */\n  type: DateRangeType\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangeFieldInputProps>()\n\nconst rootContext = injectDateRangeFieldRootContext()\n\nconst hasLeftFocus = ref(true)\nconst lastKeyZero = ref(false)\n\nconst {\n  handleSegmentClick,\n  handleSegmentKeydown,\n  attributes,\n} = useDateField({\n  hasLeftFocus,\n  lastKeyZero,\n  placeholder: rootContext.placeholder,\n  hourCycle: rootContext.hourCycle,\n  step: rootContext.step,\n  segmentValues: rootContext.segmentValues[props.type],\n  formatter: rootContext.formatter,\n  part: props.part,\n  disabled: rootContext.disabled,\n  readonly: rootContext.readonly,\n  focusNext: rootContext.focusNext,\n  modelValue: props.type === 'start' ? rootContext.startValue : rootContext.endValue,\n})\n\nconst disabled = computed(() => rootContext.disabled.value)\nconst readonly = computed(() => rootContext.readonly.value)\nconst isInvalid = computed(() => rootContext.isInvalid.value)\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    v-bind=\"attributes\"\n    :contenteditable=\"disabled || readonly ? false : part !== 'literal'\"\n    :data-reka-date-field-segment=\"part\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :aria-readonly=\"readonly ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-reka-date-range-field-segment-type=\"type\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :aria-invalid=\"isInvalid ? true : undefined\"\n    v-on=\"part !== 'literal' ? {\n      mousedown: handleSegmentClick,\n      keydown: handleSegmentKeydown,\n      focusout: () => { hasLeftFocus = true },\n      focusin: (e: FocusEvent) => {\n        rootContext.setFocusedElement(e.target as HTMLElement)\n      },\n    } : {}\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateRangeType } from './DateRangeFieldRoot.vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { SegmentPart } from '@/shared/date'\nimport { computed, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useDateField } from '@/shared/date/useDateField'\nimport { injectDateRangeFieldRootContext } from './DateRangeFieldRoot.vue'\n\nexport interface DateRangeFieldInputProps extends PrimitiveProps {\n  /** The part of the date to render */\n  part: SegmentPart\n  /** The type of field to render (start or end) */\n  type: DateRangeType\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangeFieldInputProps>()\n\nconst rootContext = injectDateRangeFieldRootContext()\n\nconst hasLeftFocus = ref(true)\nconst lastKeyZero = ref(false)\n\nconst {\n  handleSegmentClick,\n  handleSegmentKeydown,\n  attributes,\n} = useDateField({\n  hasLeftFocus,\n  lastKeyZero,\n  placeholder: rootContext.placeholder,\n  hourCycle: rootContext.hourCycle,\n  step: rootContext.step,\n  segmentValues: rootContext.segmentValues[props.type],\n  formatter: rootContext.formatter,\n  part: props.part,\n  disabled: rootContext.disabled,\n  readonly: rootContext.readonly,\n  focusNext: rootContext.focusNext,\n  modelValue: props.type === 'start' ? rootContext.startValue : rootContext.endValue,\n})\n\nconst disabled = computed(() => rootContext.disabled.value)\nconst readonly = computed(() => rootContext.readonly.value)\nconst isInvalid = computed(() => rootContext.isInvalid.value)\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    v-bind=\"attributes\"\n    :contenteditable=\"disabled || readonly ? false : part !== 'literal'\"\n    :data-reka-date-field-segment=\"part\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :aria-readonly=\"readonly ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-reka-date-range-field-segment-type=\"type\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :aria-invalid=\"isInvalid ? true : undefined\"\n    v-on=\"part !== 'literal' ? {\n      mousedown: handleSegmentClick,\n      keydown: handleSegmentKeydown,\n      focusout: () => { hasLeftFocus = true },\n      focusin: (e: FocusEvent) => {\n        rootContext.setFocusedElement(e.target as HTMLElement)\n      },\n    } : {}\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverAnchorProps } from '..'\nimport { PopoverAnchor } from '..'\n\nexport interface DateRangePickerAnchorProps extends PopoverAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerAnchorProps>()\n</script>\n\n<template>\n  <PopoverAnchor v-bind=\"props\">\n    <slot />\n  </PopoverAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverAnchorProps } from '..'\nimport { PopoverAnchor } from '..'\n\nexport interface DateRangePickerAnchorProps extends PopoverAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerAnchorProps>()\n</script>\n\n<template>\n  <PopoverAnchor v-bind=\"props\">\n    <slot />\n  </PopoverAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverArrowProps } from '..'\nimport { PopoverArrow } from '..'\n\nexport interface DateRangePickerArrowProps extends PopoverArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerArrowProps>()\n</script>\n\n<template>\n  <PopoverArrow v-bind=\"props\">\n    <slot />\n  </PopoverArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverArrowProps } from '..'\nimport { PopoverArrow } from '..'\n\nexport interface DateRangePickerArrowProps extends PopoverArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerArrowProps>()\n</script>\n\n<template>\n  <PopoverArrow v-bind=\"props\">\n    <slot />\n  </PopoverArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\n\nimport type { Ref } from 'vue'\nimport type { DateRangeFieldRoot, DateRangeFieldRootProps, PopoverRootEmits, PopoverRootProps, RangeCalendarRootProps } from '..'\nimport type { Matcher, WeekDayFormat } from '@/date'\nimport type { DateRange, DateStep, Granularity, HourCycle } from '@/shared/date'\n\nimport type { Direction } from '@/shared/types'\nimport { createContext, useDirection } from '@/shared'\nimport { getDefaultDate } from '@/shared/date'\nimport { PopoverRoot } from '..'\n\ntype DateRangePickerRootContext = {\n  id: Ref<string | undefined>\n  name: Ref<string | undefined>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n  hourCycle: Ref<HourCycle | undefined>\n  granularity: Ref<Granularity | undefined>\n  hideTimeZone: Ref<boolean>\n  required: Ref<boolean>\n  locale: Ref<string>\n  dateFieldRef: Ref<InstanceType<typeof DateRangeFieldRoot> | undefined>\n  modelValue: Ref<{ start: DateValue | undefined, end: DateValue | undefined }>\n  placeholder: Ref<DateValue>\n  pagedNavigation: Ref<boolean>\n  preventDeselect: Ref<boolean>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  weekdayFormat: Ref<WeekDayFormat>\n  fixedWeeks: Ref<boolean>\n  numberOfMonths: Ref<number>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  isDateDisabled?: Matcher\n  isDateUnavailable?: Matcher\n  isDateHighlightable?: Matcher\n  defaultOpen: Ref<boolean>\n  open: Ref<boolean>\n  modal: Ref<boolean>\n  onDateChange: (date: DateRange) => void\n  onPlaceholderChange: (date: DateValue) => void\n  onStartValueChange: (date: DateValue | undefined) => void\n  dir: Ref<Direction>\n  allowNonContiguousRanges: Ref<boolean>\n  fixedDate: Ref<'start' | 'end' | undefined>\n  maximumDays?: Ref<number | undefined>\n  step: Ref<DateStep | undefined>\n  closeOnSelect?: Ref<boolean>\n}\n\nexport type DateRangePickerRootProps = DateRangeFieldRootProps & PopoverRootProps & Pick<RangeCalendarRootProps, 'isDateDisabled' | 'pagedNavigation' | 'weekStartsOn' | 'weekdayFormat' | 'fixedWeeks' | 'numberOfMonths' | 'preventDeselect' | 'isDateUnavailable' | 'isDateHighlightable' | 'allowNonContiguousRanges' | 'fixedDate' | 'maximumDays'> & {\n  /** Whether or not to close the popover on range select */\n  closeOnSelect?: boolean\n}\n\nexport type DateRangePickerRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateRange]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n  /** Event handler called whenever the start value changes */\n  'update:startValue': [date: DateValue | undefined]\n}\n\nexport const [injectDateRangePickerRootContext, provideDateRangePickerRootContext]\n  = createContext<DateRangePickerRootContext>('DateRangePickerRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs, watch } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\nconst props = withDefaults(defineProps<DateRangePickerRootProps>(), {\n  defaultValue: () => ({ start: undefined, end: undefined }),\n  defaultOpen: false,\n  open: undefined,\n  modal: false,\n  pagedNavigation: false,\n  preventDeselect: false,\n  weekStartsOn: 0,\n  weekdayFormat: 'narrow',\n  fixedWeeks: false,\n  numberOfMonths: 1,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  locale: 'en',\n  isDateDisabled: undefined,\n  isDateUnavailable: undefined,\n  isDateHighlightable: undefined,\n  allowNonContiguousRanges: false,\n  maximumDays: undefined,\n  closeOnSelect: false,\n})\nconst emits = defineEmits<DateRangePickerRootEmits & PopoverRootEmits>()\nconst {\n  locale,\n  disabled,\n  readonly,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  preventDeselect,\n  isDateDisabled: propsIsDateDisabled,\n  isDateUnavailable: propsIsDateUnavailable,\n  isDateHighlightable: propsIsDateHighlightable,\n  defaultOpen,\n  modal,\n  id,\n  name,\n  required,\n  minValue,\n  maxValue,\n  granularity,\n  hideTimeZone,\n  hourCycle,\n  dir: propsDir,\n  allowNonContiguousRanges,\n  fixedDate,\n  maximumDays,\n  step,\n  closeOnSelect,\n} = toRefs(props)\n\nconst dir = useDirection(propsDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? { start: undefined, end: undefined },\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateRange>\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  granularity: props.granularity,\n  defaultValue: modelValue.value?.start,\n  locale: props.locale,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: defaultOpen.value,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst dateFieldRef = ref<InstanceType<typeof DateRangeFieldRoot> | undefined>()\n\nwatch(modelValue, (value) => {\n  if (value && value.start && value.start.compare(placeholder.value) !== 0) {\n    placeholder.value = value.start.copy()\n  }\n\n  if (value.start && value.end) {\n    if (closeOnSelect.value) {\n      open.value = false\n    }\n  }\n})\n\nprovideDateRangePickerRootContext({\n  allowNonContiguousRanges,\n  isDateUnavailable: propsIsDateUnavailable.value,\n  isDateDisabled: propsIsDateDisabled.value,\n  isDateHighlightable: propsIsDateHighlightable.value,\n  locale,\n  disabled,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  readonly,\n  preventDeselect,\n  modelValue,\n  placeholder,\n  defaultOpen,\n  modal,\n  open,\n  id,\n  name,\n  required,\n  minValue,\n  maxValue,\n  granularity,\n  hideTimeZone,\n  hourCycle,\n  dateFieldRef,\n  dir,\n  fixedDate,\n  maximumDays,\n  step,\n  onStartValueChange(date: DateValue | undefined) {\n    emits('update:startValue', date)\n  },\n  onDateChange(date: DateRange) {\n    modelValue.value = { start: date.start?.copy(), end: date.end?.copy() }\n  },\n  onPlaceholderChange(date: DateValue) {\n    placeholder.value = date.copy()\n  },\n  closeOnSelect,\n})\n</script>\n\n<template>\n  <PopoverRoot\n    v-model:open=\"open\"\n    :default-open=\"defaultOpen\"\n    :modal=\"modal\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :open=\"open\"\n    />\n  </PopoverRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\n\nimport type { Ref } from 'vue'\nimport type { DateRangeFieldRoot, DateRangeFieldRootProps, PopoverRootEmits, PopoverRootProps, RangeCalendarRootProps } from '..'\nimport type { Matcher, WeekDayFormat } from '@/date'\nimport type { DateRange, DateStep, Granularity, HourCycle } from '@/shared/date'\n\nimport type { Direction } from '@/shared/types'\nimport { createContext, useDirection } from '@/shared'\nimport { getDefaultDate } from '@/shared/date'\nimport { PopoverRoot } from '..'\n\ntype DateRangePickerRootContext = {\n  id: Ref<string | undefined>\n  name: Ref<string | undefined>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n  hourCycle: Ref<HourCycle | undefined>\n  granularity: Ref<Granularity | undefined>\n  hideTimeZone: Ref<boolean>\n  required: Ref<boolean>\n  locale: Ref<string>\n  dateFieldRef: Ref<InstanceType<typeof DateRangeFieldRoot> | undefined>\n  modelValue: Ref<{ start: DateValue | undefined, end: DateValue | undefined }>\n  placeholder: Ref<DateValue>\n  pagedNavigation: Ref<boolean>\n  preventDeselect: Ref<boolean>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  weekdayFormat: Ref<WeekDayFormat>\n  fixedWeeks: Ref<boolean>\n  numberOfMonths: Ref<number>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  isDateDisabled?: Matcher\n  isDateUnavailable?: Matcher\n  isDateHighlightable?: Matcher\n  defaultOpen: Ref<boolean>\n  open: Ref<boolean>\n  modal: Ref<boolean>\n  onDateChange: (date: DateRange) => void\n  onPlaceholderChange: (date: DateValue) => void\n  onStartValueChange: (date: DateValue | undefined) => void\n  dir: Ref<Direction>\n  allowNonContiguousRanges: Ref<boolean>\n  fixedDate: Ref<'start' | 'end' | undefined>\n  maximumDays?: Ref<number | undefined>\n  step: Ref<DateStep | undefined>\n  closeOnSelect?: Ref<boolean>\n}\n\nexport type DateRangePickerRootProps = DateRangeFieldRootProps & PopoverRootProps & Pick<RangeCalendarRootProps, 'isDateDisabled' | 'pagedNavigation' | 'weekStartsOn' | 'weekdayFormat' | 'fixedWeeks' | 'numberOfMonths' | 'preventDeselect' | 'isDateUnavailable' | 'isDateHighlightable' | 'allowNonContiguousRanges' | 'fixedDate' | 'maximumDays'> & {\n  /** Whether or not to close the popover on range select */\n  closeOnSelect?: boolean\n}\n\nexport type DateRangePickerRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateRange]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n  /** Event handler called whenever the start value changes */\n  'update:startValue': [date: DateValue | undefined]\n}\n\nexport const [injectDateRangePickerRootContext, provideDateRangePickerRootContext]\n  = createContext<DateRangePickerRootContext>('DateRangePickerRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs, watch } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\nconst props = withDefaults(defineProps<DateRangePickerRootProps>(), {\n  defaultValue: () => ({ start: undefined, end: undefined }),\n  defaultOpen: false,\n  open: undefined,\n  modal: false,\n  pagedNavigation: false,\n  preventDeselect: false,\n  weekStartsOn: 0,\n  weekdayFormat: 'narrow',\n  fixedWeeks: false,\n  numberOfMonths: 1,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  locale: 'en',\n  isDateDisabled: undefined,\n  isDateUnavailable: undefined,\n  isDateHighlightable: undefined,\n  allowNonContiguousRanges: false,\n  maximumDays: undefined,\n  closeOnSelect: false,\n})\nconst emits = defineEmits<DateRangePickerRootEmits & PopoverRootEmits>()\nconst {\n  locale,\n  disabled,\n  readonly,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  preventDeselect,\n  isDateDisabled: propsIsDateDisabled,\n  isDateUnavailable: propsIsDateUnavailable,\n  isDateHighlightable: propsIsDateHighlightable,\n  defaultOpen,\n  modal,\n  id,\n  name,\n  required,\n  minValue,\n  maxValue,\n  granularity,\n  hideTimeZone,\n  hourCycle,\n  dir: propsDir,\n  allowNonContiguousRanges,\n  fixedDate,\n  maximumDays,\n  step,\n  closeOnSelect,\n} = toRefs(props)\n\nconst dir = useDirection(propsDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? { start: undefined, end: undefined },\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateRange>\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  granularity: props.granularity,\n  defaultValue: modelValue.value?.start,\n  locale: props.locale,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: defaultOpen.value,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst dateFieldRef = ref<InstanceType<typeof DateRangeFieldRoot> | undefined>()\n\nwatch(modelValue, (value) => {\n  if (value && value.start && value.start.compare(placeholder.value) !== 0) {\n    placeholder.value = value.start.copy()\n  }\n\n  if (value.start && value.end) {\n    if (closeOnSelect.value) {\n      open.value = false\n    }\n  }\n})\n\nprovideDateRangePickerRootContext({\n  allowNonContiguousRanges,\n  isDateUnavailable: propsIsDateUnavailable.value,\n  isDateDisabled: propsIsDateDisabled.value,\n  isDateHighlightable: propsIsDateHighlightable.value,\n  locale,\n  disabled,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  readonly,\n  preventDeselect,\n  modelValue,\n  placeholder,\n  defaultOpen,\n  modal,\n  open,\n  id,\n  name,\n  required,\n  minValue,\n  maxValue,\n  granularity,\n  hideTimeZone,\n  hourCycle,\n  dateFieldRef,\n  dir,\n  fixedDate,\n  maximumDays,\n  step,\n  onStartValueChange(date: DateValue | undefined) {\n    emits('update:startValue', date)\n  },\n  onDateChange(date: DateRange) {\n    modelValue.value = { start: date.start?.copy(), end: date.end?.copy() }\n  },\n  onPlaceholderChange(date: DateValue) {\n    placeholder.value = date.copy()\n  },\n  closeOnSelect,\n})\n</script>\n\n<template>\n  <PopoverRoot\n    v-model:open=\"open\"\n    :default-open=\"defaultOpen\"\n    :modal=\"modal\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :open=\"open\"\n    />\n  </PopoverRoot>\n</template>\n", "/*\n  * Adapted from https://github.com/melt-ui/melt-ui/blob/develop/src/lib/builders/range-calendar/create.ts\n*/\n\nimport type { DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { Matcher } from '@/date'\nimport { isSameDay } from '@internationalized/date'\nimport { computed } from 'vue'\nimport { areAllDaysBetweenValid, getDaysBetween, isBefore, isBetween } from '@/date'\n\nexport type UseRangeCalendarProps = {\n  start: Ref<DateValue | undefined>\n  end: Ref<DateValue | undefined>\n  isDateDisabled: Matcher\n  isDateUnavailable: Matcher\n  isDateHighlightable?: Matcher\n  focusedValue: Ref<DateValue | undefined>\n  allowNonContiguousRanges: Ref<boolean>\n  fixedDate: Ref<'start' | 'end' | undefined>\n  maximumDays?: Ref<number | undefined>\n}\n\nexport function useRangeCalendarState(props: UseRangeCalendarProps) {\n  const isStartInvalid = computed(() => {\n    if (!props.start.value)\n      return false\n    if (props.isDateDisabled(props.start.value))\n      return true\n    return false\n  })\n\n  const isEndInvalid = computed(() => {\n    if (!props.end.value)\n      return false\n    if (props.isDateDisabled(props.end.value))\n      return true\n    return false\n  })\n\n  const isInvalid = computed(\n    () => {\n      if (isStartInvalid.value || isEndInvalid.value)\n        return false\n      if (props.start.value && props.end.value && isBefore(props.end.value, props.start.value))\n        return true\n      return false\n    },\n  )\n\n  const isSelectionStart = (date: DateValue) => {\n    if (!props.start.value)\n      return false\n    return isSameDay(props.start.value, date)\n  }\n\n  const isSelectionEnd = (date: DateValue) => {\n    if (!props.end.value)\n      return false\n    return isSameDay(props.end.value, date)\n  }\n\n  const isSelected = (date: DateValue) => {\n    if (props.start.value && isSameDay(props.start.value, date))\n      return true\n    if (props.end.value && isSameDay(props.end.value, date))\n      return true\n    if (props.end.value && props.start.value)\n      return isBetween(date, props.start.value, props.end.value)\n\n    return false\n  }\n\n  // Check if a date exceeds maximum days limit from the start date\n  const rangeIsDateDisabled = (date: DateValue) => {\n    if (props.isDateDisabled(date))\n      return true\n\n    // Check if exceeds maximum days limit\n    if (props.maximumDays?.value) {\n      if (props.start.value && props.end.value) {\n        if (props.fixedDate.value) {\n          const diff = getDaysBetween(props.start.value, props.end.value).length\n          if (diff <= props.maximumDays.value) {\n            const daysLeft = props.maximumDays.value - diff - 1\n            const startLimit = props.start.value.subtract({ days: daysLeft })\n            const endLimit = props.end.value.add({ days: daysLeft })\n            return !isBetween(date, startLimit, endLimit)\n          }\n        }\n        return false\n      }\n      if (props.start.value) {\n        const maxDate = props.start.value.add({ days: props.maximumDays.value })\n        const minDate = props.start.value.subtract({ days: props.maximumDays.value })\n        return !isBetween(date, minDate, maxDate)\n      }\n    }\n\n    if (!props.start.value || props.end.value || isSameDay(props.start.value, date))\n      return false\n\n    return false\n  }\n\n  const isDateHighlightable = (date: DateValue) => {\n    if (props.isDateHighlightable?.(date))\n      return true\n    return false\n  }\n\n  const highlightedRange = computed(() => {\n    if (props.start.value && props.end.value && !props.fixedDate.value)\n      return null\n    if (!props.start.value || !props.focusedValue.value)\n      return null\n\n    const isStartBeforeFocused = isBefore(props.start.value, props.focusedValue.value)\n    const start = isStartBeforeFocused ? props.start.value : props.focusedValue.value\n    const end = isStartBeforeFocused ? props.focusedValue.value : props.start.value\n\n    if (isSameDay(start, end)) {\n      return {\n        start,\n        end,\n      }\n    }\n\n    // If maximum days is set and the range exceeds it, limit the highlight\n    // We only apply this when we're in the middle of a selection (no end date yet)\n    if (props.maximumDays?.value && !props.end.value) {\n      // Determine the direction of selection and limit to maximum days\n      const cappedEnd = isStartBeforeFocused\n        ? start.add({ days: props.maximumDays.value })\n        : start.subtract({ days: props.maximumDays.value })\n\n      return {\n        start,\n        end: cappedEnd,\n      }\n    }\n\n    const isValid = areAllDaysBetweenValid(start, end, props.allowNonContiguousRanges.value ? () => false : props.isDateUnavailable, rangeIsDateDisabled, props.isDateHighlightable)\n    if (isValid) {\n      return {\n        start,\n        end,\n      }\n    }\n    return null\n  })\n\n  const isHighlightedStart = (date: DateValue) => {\n    if (!highlightedRange.value || !highlightedRange.value.start)\n      return false\n    return isSameDay(highlightedRange.value.start, date)\n  }\n\n  const isHighlightedEnd = (date: DateValue) => {\n    if (!highlightedRange.value || !highlightedRange.value.end)\n      return false\n    return isSameDay(highlightedRange.value.end, date)\n  }\n\n  return {\n    isInvalid,\n    isSelected,\n    isDateHighlightable,\n    highlightedRange,\n    isSelectionStart,\n    isSelectionEnd,\n    isHighlightedStart,\n    isHighlightedEnd,\n    isDateDisabled: rangeIsDateDisabled,\n  }\n}\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { Grid, Matcher, WeekDayFormat } from '@/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Formatter } from '@/shared'\nimport type { DateRange } from '@/shared/date'\nimport type { Direction } from '@/shared/types'\nimport { isEqualDay } from '@internationalized/date'\nimport { useCalendar } from '@/Calendar/useCalendar'\nimport { isBefore } from '@/date'\nimport {\n  createContext,\n  useDirection,\n  useKbd,\n  useLocale,\n} from '@/shared'\nimport { getDefaultDate, handleCalendarInitialFocus } from '@/shared/date'\nimport { useRangeCalendarState } from './useRangeCalendar'\n\ntype RangeCalendarRootContext = {\n  modelValue: Ref<DateRange>\n  startValue: Ref<DateValue | undefined>\n  endValue: Ref<DateValue | undefined>\n  locale: Ref<string>\n  placeholder: Ref<DateValue>\n  pagedNavigation: Ref<boolean>\n  preventDeselect: Ref<boolean>\n  grid: Ref<Grid<DateValue>[]>\n  weekDays: Ref<string[]>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  weekdayFormat: Ref<WeekDayFormat>\n  fixedWeeks: Ref<boolean>\n  numberOfMonths: Ref<number>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  initialFocus: Ref<boolean>\n  onPlaceholderChange: (date: DateValue) => void\n  fullCalendarLabel: Ref<string>\n  parentElement: Ref<HTMLElement | undefined>\n  headingValue: Ref<string>\n  isInvalid: Ref<boolean>\n  isDateDisabled: Matcher\n  isDateUnavailable?: Matcher\n  isDateHighlightable?: Matcher\n  isOutsideVisibleView: (date: DateValue) => boolean\n  allowNonContiguousRanges: Ref<boolean>\n  highlightedRange: Ref<{ start: DateValue, end: DateValue } | null>\n  focusedValue: Ref<DateValue | undefined>\n  lastPressedDateValue: Ref<DateValue | undefined>\n  isSelected: (date: DateValue) => boolean\n  isSelectionEnd: (date: DateValue) => boolean\n  isSelectionStart: (date: DateValue) => boolean\n  isHighlightedStart: (date: DateValue) => boolean\n  isHighlightedEnd: (date: DateValue) => boolean\n  prevPage: (prevPageFunc?: (date: DateValue) => DateValue) => void\n  nextPage: (nextPageFunc?: (date: DateValue) => DateValue) => void\n  isNextButtonDisabled: (\n    nextPageFunc?: (date: DateValue) => DateValue\n  ) => boolean\n  isPrevButtonDisabled: (\n    prevPageFunc?: (date: DateValue) => DateValue\n  ) => boolean\n  formatter: Formatter\n  dir: Ref<Direction>\n  disableDaysOutsideCurrentView: Ref<boolean>\n  fixedDate: Ref<'start' | 'end' | undefined>\n  maximumDays: Ref<number | undefined>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n}\n\nexport interface RangeCalendarRootProps extends PrimitiveProps {\n  /** The default placeholder date */\n  defaultPlaceholder?: DateValue\n  /** The default value for the calendar */\n  defaultValue?: DateRange\n  /** The controlled checked state of the calendar. Can be bound as `v-model`. */\n  modelValue?: DateRange | null\n  /** The placeholder date, which is used to determine what month to display when no date is selected. This updates as the user navigates the calendar and can be used to programmatically control the calendar view */\n  placeholder?: DateValue\n  /** When combined with `isDateUnavailable`, determines whether non-contiguous ranges, i.e. ranges containing unavailable dates, may be selected. */\n  allowNonContiguousRanges?: boolean\n  /** This property causes the previous and next buttons to navigate by the number of months displayed at once, rather than one month */\n  pagedNavigation?: boolean\n  /** Whether or not to prevent the user from deselecting a date without selecting another date first */\n  preventDeselect?: boolean\n  /** The maximum number of days that can be selected in a range */\n  maximumDays?: number\n  /** The day of the week to start the calendar on */\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6\n  /** The format to use for the weekday strings provided via the weekdays slot prop */\n  weekdayFormat?: WeekDayFormat\n  /** The accessible label for the calendar */\n  calendarLabel?: string\n  /** Whether or not to always display 6 weeks in the calendar */\n  fixedWeeks?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: DateValue\n  /** The minimum date that can be selected */\n  minValue?: DateValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** The number of months to display at once */\n  numberOfMonths?: number\n  /** Whether or not the calendar is disabled */\n  disabled?: boolean\n  /** Whether or not the calendar is readonly */\n  readonly?: boolean\n  /** If true, the calendar will focus the selected day, today, or the first day of the month depending on what is visible when the calendar is mounted */\n  initialFocus?: boolean\n  /** A function that returns whether or not a date is disabled */\n  isDateDisabled?: Matcher\n  /** A function that returns whether or not a date is unavailable */\n  isDateUnavailable?: Matcher\n  /** A function that returns whether or not a date is hightable */\n  isDateHighlightable?: Matcher\n  /** The reading direction of the calendar when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** A function that returns the next page of the calendar. It receives the current placeholder as an argument inside the component. */\n  nextPage?: (placeholder: DateValue) => DateValue\n  /** A function that returns the previous page of the calendar. It receives the current placeholder as an argument inside the component. */\n  prevPage?: (placeholder: DateValue) => DateValue\n  /** Whether or not to disable days outside the current view. */\n  disableDaysOutsideCurrentView?: boolean\n  /** Which part of the range should be fixed */\n  fixedDate?: 'start' | 'end'\n\n}\n\nexport type RangeCalendarRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateRange]\n  /** Event handler called whenever there is a new validModel */\n  'update:validModelValue': [date: DateRange]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n  /** Event handler called whenever the start value changes */\n  'update:startValue': [date: DateValue | undefined]\n}\n\nexport const [injectRangeCalendarRootContext, provideRangeCalendarRootContext]\n  = createContext<RangeCalendarRootContext>('RangeCalendarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useEventListener, useVModel } from '@vueuse/core'\nimport { onMounted, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarRootProps>(), {\n  defaultValue: () => ({ start: undefined, end: undefined }),\n  as: 'div',\n  pagedNavigation: false,\n  preventDeselect: false,\n  weekStartsOn: 0,\n  weekdayFormat: 'narrow',\n  fixedWeeks: false,\n  numberOfMonths: 1,\n  disabled: false,\n  readonly: false,\n  initialFocus: false,\n  placeholder: undefined,\n  isDateDisabled: undefined,\n  isDateUnavailable: undefined,\n  isDateHighlightable: undefined,\n  allowNonContiguousRanges: false,\n  maximumDays: undefined,\n  disableDaysOutsideCurrentView: false,\n})\nconst emits = defineEmits<RangeCalendarRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** The current date of the placeholder */\n    date: DateValue\n    /** The grid of dates */\n    grid: Grid<DateValue>[]\n    /** The days of the week */\n    weekDays: string[]\n    /** The start of the week */\n    weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6\n    /** The calendar locale */\n    locale: string\n    /** Whether or not to always display 6 weeks in the calendar */\n    fixedWeeks: boolean\n    /** The current date range */\n    modelValue: DateRange\n  }) => any\n}>()\n\nconst {\n  disabled,\n  readonly,\n  initialFocus,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  preventDeselect,\n  isDateUnavailable: propsIsDateUnavailable,\n  isDateHighlightable: propsIsDateHighlightable,\n  isDateDisabled: propsIsDateDisabled,\n  calendarLabel,\n  maxValue,\n  minValue,\n  dir: propDir,\n  locale: propLocale,\n  nextPage: propsNextPage,\n  prevPage: propsPrevPage,\n  allowNonContiguousRanges,\n  disableDaysOutsideCurrentView,\n  fixedDate,\n  maximumDays,\n} = toRefs(props)\n\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst dir = useDirection(propDir)\nconst locale = useLocale(propLocale)\n\nconst lastPressedDateValue = ref() as Ref<DateValue | undefined>\nconst focusedValue = ref() as Ref<DateValue | undefined>\nconst isEditing = ref(false)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? { start: undefined, end: undefined },\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateRange>\n\nconst validModelValue = ref(modelValue.value) as Ref<DateRange>\n\nwatch(validModelValue, (value) => {\n  emits('update:validModelValue', value)\n})\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  defaultValue: modelValue.value.start,\n  locale: props.locale,\n})\n\nconst startValue = ref(modelValue.value.start) as Ref<\n  DateValue | undefined\n>\nconst endValue = ref(modelValue.value.end) as Ref<DateValue | undefined>\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nfunction onPlaceholderChange(value: DateValue) {\n  placeholder.value = value.copy()\n}\n\nconst {\n  fullCalendarLabel,\n  headingValue,\n  isDateDisabled,\n  isDateUnavailable,\n  isNextButtonDisabled,\n  isPrevButtonDisabled,\n  grid,\n  weekdays,\n  isOutsideVisibleView,\n  nextPage,\n  prevPage,\n  formatter,\n} = useCalendar({\n  locale,\n  placeholder,\n  weekStartsOn,\n  fixedWeeks,\n  numberOfMonths,\n  minValue,\n  maxValue,\n  disabled,\n  weekdayFormat,\n  pagedNavigation,\n  isDateDisabled: propsIsDateDisabled.value,\n  isDateUnavailable: propsIsDateUnavailable.value,\n  calendarLabel,\n  nextPage: propsNextPage,\n  prevPage: propsPrevPage,\n})\n\nconst {\n  isInvalid,\n  isSelected,\n  isDateHighlightable,\n  highlightedRange,\n  isSelectionStart,\n  isSelectionEnd,\n  isHighlightedStart,\n  isHighlightedEnd,\n  isDateDisabled: rangeIsDateDisabled,\n} = useRangeCalendarState({\n  start: startValue,\n  end: endValue,\n  isDateDisabled,\n  isDateUnavailable,\n  isDateHighlightable: propsIsDateHighlightable.value,\n  focusedValue,\n  allowNonContiguousRanges,\n  fixedDate,\n  maximumDays,\n})\n\nwatch(modelValue, (_modelValue, _prevValue) => {\n  if (\n    (!_prevValue?.start && _modelValue?.start)\n    || !_modelValue\n    || !_modelValue.start\n    || (startValue.value && !isEqualDay(_modelValue.start, startValue.value))\n  ) {\n    startValue.value = _modelValue?.start?.copy?.()\n  }\n\n  if (\n    (!_prevValue?.end && _modelValue.end)\n    || !_modelValue\n    || !_modelValue.end\n    || (endValue.value && !isEqualDay(_modelValue.end, endValue.value))\n  ) {\n    endValue.value = _modelValue?.end?.copy?.()\n  }\n})\n\nwatch(startValue, (_startValue) => {\n  if (_startValue && !isEqualDay(_startValue, placeholder.value))\n    onPlaceholderChange(_startValue)\n\n  emits('update:startValue', _startValue)\n})\n\nwatch([startValue, endValue], ([_startValue, _endValue]) => {\n  const value = modelValue.value\n\n  if (\n    value\n    && value.start\n    && value.end\n    && _startValue\n    && _endValue\n    && isEqualDay(value.start, _startValue)\n    && isEqualDay(value.end, _endValue)\n  ) {\n    return\n  }\n\n  isEditing.value = true\n  if (_endValue && _startValue) {\n    if (isBefore(_endValue, _startValue)) {\n      modelValue.value = {\n        start: _endValue.copy(),\n        end: _startValue.copy(),\n      }\n    }\n    else {\n      modelValue.value = {\n        start: _startValue.copy(),\n        end: _endValue.copy(),\n      }\n    }\n\n    isEditing.value = false\n    validModelValue.value = { start: modelValue.value.start?.copy(), end: modelValue.value.end?.copy() }\n  }\n  else {\n    if (_startValue) {\n      modelValue.value = {\n        start: _startValue.copy(),\n        end: undefined,\n      }\n    }\n    else {\n      modelValue.value = {\n        start: _endValue?.copy(),\n        end: undefined,\n      }\n    }\n  }\n})\n\nconst kbd = useKbd()\nuseEventListener('keydown', (ev) => {\n  if (ev.key === kbd.ESCAPE && isEditing.value) {\n    // Abort start and end selection\n    startValue.value = validModelValue.value.start?.copy()\n    endValue.value = validModelValue.value.end?.copy()\n  }\n})\n\nprovideRangeCalendarRootContext({\n  isDateUnavailable,\n  isDateHighlightable,\n  startValue,\n  endValue,\n  formatter,\n  modelValue,\n  placeholder,\n  disabled,\n  initialFocus,\n  pagedNavigation,\n  grid,\n  weekDays: weekdays,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  readonly,\n  preventDeselect,\n  fullCalendarLabel,\n  headingValue,\n  isInvalid,\n  isDateDisabled: rangeIsDateDisabled,\n  allowNonContiguousRanges,\n  highlightedRange,\n  focusedValue,\n  lastPressedDateValue,\n  isSelected,\n  isSelectionEnd,\n  isSelectionStart,\n  isNextButtonDisabled,\n  isPrevButtonDisabled,\n  isOutsideVisibleView,\n  nextPage,\n  prevPage,\n  parentElement,\n  onPlaceholderChange,\n  locale,\n  dir,\n  isHighlightedStart,\n  isHighlightedEnd,\n  disableDaysOutsideCurrentView,\n  fixedDate,\n  maximumDays,\n  minValue,\n  maxValue,\n})\n\nonMounted(() => {\n  if (initialFocus.value)\n    handleCalendarInitialFocus(parentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"application\"\n    :aria-label=\"fullCalendarLabel\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n  >\n    <div\n      style=\"\n        border: 0px;\n        clip: rect(0px, 0px, 0px, 0px);\n        clip-path: inset(50%);\n        height: 1px;\n        margin: -1px;\n        overflow: hidden;\n        padding: 0px;\n        position: absolute;\n        white-space: nowrap;\n        width: 1px;\n      \"\n    >\n      <div\n        role=\"heading\"\n        aria-level=\"2\"\n      >\n        {{ fullCalendarLabel }}\n      </div>\n    </div>\n\n    <slot\n      :date=\"placeholder\"\n      :grid=\"grid\"\n      :week-days=\"weekdays\"\n      :week-starts-on=\"weekStartsOn\"\n      :locale=\"locale\"\n      :fixed-weeks=\"fixedWeeks\"\n      :model-value=\"modelValue\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { Grid, Matcher, WeekDayFormat } from '@/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Formatter } from '@/shared'\nimport type { DateRange } from '@/shared/date'\nimport type { Direction } from '@/shared/types'\nimport { isEqualDay } from '@internationalized/date'\nimport { useCalendar } from '@/Calendar/useCalendar'\nimport { isBefore } from '@/date'\nimport {\n  createContext,\n  useDirection,\n  useKbd,\n  useLocale,\n} from '@/shared'\nimport { getDefaultDate, handleCalendarInitialFocus } from '@/shared/date'\nimport { useRangeCalendarState } from './useRangeCalendar'\n\ntype RangeCalendarRootContext = {\n  modelValue: Ref<DateRange>\n  startValue: Ref<DateValue | undefined>\n  endValue: Ref<DateValue | undefined>\n  locale: Ref<string>\n  placeholder: Ref<DateValue>\n  pagedNavigation: Ref<boolean>\n  preventDeselect: Ref<boolean>\n  grid: Ref<Grid<DateValue>[]>\n  weekDays: Ref<string[]>\n  weekStartsOn: Ref<0 | 1 | 2 | 3 | 4 | 5 | 6>\n  weekdayFormat: Ref<WeekDayFormat>\n  fixedWeeks: Ref<boolean>\n  numberOfMonths: Ref<number>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  initialFocus: Ref<boolean>\n  onPlaceholderChange: (date: DateValue) => void\n  fullCalendarLabel: Ref<string>\n  parentElement: Ref<HTMLElement | undefined>\n  headingValue: Ref<string>\n  isInvalid: Ref<boolean>\n  isDateDisabled: Matcher\n  isDateUnavailable?: Matcher\n  isDateHighlightable?: Matcher\n  isOutsideVisibleView: (date: DateValue) => boolean\n  allowNonContiguousRanges: Ref<boolean>\n  highlightedRange: Ref<{ start: DateValue, end: DateValue } | null>\n  focusedValue: Ref<DateValue | undefined>\n  lastPressedDateValue: Ref<DateValue | undefined>\n  isSelected: (date: DateValue) => boolean\n  isSelectionEnd: (date: DateValue) => boolean\n  isSelectionStart: (date: DateValue) => boolean\n  isHighlightedStart: (date: DateValue) => boolean\n  isHighlightedEnd: (date: DateValue) => boolean\n  prevPage: (prevPageFunc?: (date: DateValue) => DateValue) => void\n  nextPage: (nextPageFunc?: (date: DateValue) => DateValue) => void\n  isNextButtonDisabled: (\n    nextPageFunc?: (date: DateValue) => DateValue\n  ) => boolean\n  isPrevButtonDisabled: (\n    prevPageFunc?: (date: DateValue) => DateValue\n  ) => boolean\n  formatter: Formatter\n  dir: Ref<Direction>\n  disableDaysOutsideCurrentView: Ref<boolean>\n  fixedDate: Ref<'start' | 'end' | undefined>\n  maximumDays: Ref<number | undefined>\n  minValue: Ref<DateValue | undefined>\n  maxValue: Ref<DateValue | undefined>\n}\n\nexport interface RangeCalendarRootProps extends PrimitiveProps {\n  /** The default placeholder date */\n  defaultPlaceholder?: DateValue\n  /** The default value for the calendar */\n  defaultValue?: DateRange\n  /** The controlled checked state of the calendar. Can be bound as `v-model`. */\n  modelValue?: DateRange | null\n  /** The placeholder date, which is used to determine what month to display when no date is selected. This updates as the user navigates the calendar and can be used to programmatically control the calendar view */\n  placeholder?: DateValue\n  /** When combined with `isDateUnavailable`, determines whether non-contiguous ranges, i.e. ranges containing unavailable dates, may be selected. */\n  allowNonContiguousRanges?: boolean\n  /** This property causes the previous and next buttons to navigate by the number of months displayed at once, rather than one month */\n  pagedNavigation?: boolean\n  /** Whether or not to prevent the user from deselecting a date without selecting another date first */\n  preventDeselect?: boolean\n  /** The maximum number of days that can be selected in a range */\n  maximumDays?: number\n  /** The day of the week to start the calendar on */\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6\n  /** The format to use for the weekday strings provided via the weekdays slot prop */\n  weekdayFormat?: WeekDayFormat\n  /** The accessible label for the calendar */\n  calendarLabel?: string\n  /** Whether or not to always display 6 weeks in the calendar */\n  fixedWeeks?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: DateValue\n  /** The minimum date that can be selected */\n  minValue?: DateValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** The number of months to display at once */\n  numberOfMonths?: number\n  /** Whether or not the calendar is disabled */\n  disabled?: boolean\n  /** Whether or not the calendar is readonly */\n  readonly?: boolean\n  /** If true, the calendar will focus the selected day, today, or the first day of the month depending on what is visible when the calendar is mounted */\n  initialFocus?: boolean\n  /** A function that returns whether or not a date is disabled */\n  isDateDisabled?: Matcher\n  /** A function that returns whether or not a date is unavailable */\n  isDateUnavailable?: Matcher\n  /** A function that returns whether or not a date is hightable */\n  isDateHighlightable?: Matcher\n  /** The reading direction of the calendar when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** A function that returns the next page of the calendar. It receives the current placeholder as an argument inside the component. */\n  nextPage?: (placeholder: DateValue) => DateValue\n  /** A function that returns the previous page of the calendar. It receives the current placeholder as an argument inside the component. */\n  prevPage?: (placeholder: DateValue) => DateValue\n  /** Whether or not to disable days outside the current view. */\n  disableDaysOutsideCurrentView?: boolean\n  /** Which part of the range should be fixed */\n  fixedDate?: 'start' | 'end'\n\n}\n\nexport type RangeCalendarRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: DateRange]\n  /** Event handler called whenever there is a new validModel */\n  'update:validModelValue': [date: DateRange]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: DateValue]\n  /** Event handler called whenever the start value changes */\n  'update:startValue': [date: DateValue | undefined]\n}\n\nexport const [injectRangeCalendarRootContext, provideRangeCalendarRootContext]\n  = createContext<RangeCalendarRootContext>('RangeCalendarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useEventListener, useVModel } from '@vueuse/core'\nimport { onMounted, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarRootProps>(), {\n  defaultValue: () => ({ start: undefined, end: undefined }),\n  as: 'div',\n  pagedNavigation: false,\n  preventDeselect: false,\n  weekStartsOn: 0,\n  weekdayFormat: 'narrow',\n  fixedWeeks: false,\n  numberOfMonths: 1,\n  disabled: false,\n  readonly: false,\n  initialFocus: false,\n  placeholder: undefined,\n  isDateDisabled: undefined,\n  isDateUnavailable: undefined,\n  isDateHighlightable: undefined,\n  allowNonContiguousRanges: false,\n  maximumDays: undefined,\n  disableDaysOutsideCurrentView: false,\n})\nconst emits = defineEmits<RangeCalendarRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** The current date of the placeholder */\n    date: DateValue\n    /** The grid of dates */\n    grid: Grid<DateValue>[]\n    /** The days of the week */\n    weekDays: string[]\n    /** The start of the week */\n    weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6\n    /** The calendar locale */\n    locale: string\n    /** Whether or not to always display 6 weeks in the calendar */\n    fixedWeeks: boolean\n    /** The current date range */\n    modelValue: DateRange\n  }) => any\n}>()\n\nconst {\n  disabled,\n  readonly,\n  initialFocus,\n  pagedNavigation,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  preventDeselect,\n  isDateUnavailable: propsIsDateUnavailable,\n  isDateHighlightable: propsIsDateHighlightable,\n  isDateDisabled: propsIsDateDisabled,\n  calendarLabel,\n  maxValue,\n  minValue,\n  dir: propDir,\n  locale: propLocale,\n  nextPage: propsNextPage,\n  prevPage: propsPrevPage,\n  allowNonContiguousRanges,\n  disableDaysOutsideCurrentView,\n  fixedDate,\n  maximumDays,\n} = toRefs(props)\n\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst dir = useDirection(propDir)\nconst locale = useLocale(propLocale)\n\nconst lastPressedDateValue = ref() as Ref<DateValue | undefined>\nconst focusedValue = ref() as Ref<DateValue | undefined>\nconst isEditing = ref(false)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? { start: undefined, end: undefined },\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<DateRange>\n\nconst validModelValue = ref(modelValue.value) as Ref<DateRange>\n\nwatch(validModelValue, (value) => {\n  emits('update:validModelValue', value)\n})\n\nconst defaultDate = getDefaultDate({\n  defaultPlaceholder: props.placeholder,\n  defaultValue: modelValue.value.start,\n  locale: props.locale,\n})\n\nconst startValue = ref(modelValue.value.start) as Ref<\n  DateValue | undefined\n>\nconst endValue = ref(modelValue.value.end) as Ref<DateValue | undefined>\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<DateValue>\n\nfunction onPlaceholderChange(value: DateValue) {\n  placeholder.value = value.copy()\n}\n\nconst {\n  fullCalendarLabel,\n  headingValue,\n  isDateDisabled,\n  isDateUnavailable,\n  isNextButtonDisabled,\n  isPrevButtonDisabled,\n  grid,\n  weekdays,\n  isOutsideVisibleView,\n  nextPage,\n  prevPage,\n  formatter,\n} = useCalendar({\n  locale,\n  placeholder,\n  weekStartsOn,\n  fixedWeeks,\n  numberOfMonths,\n  minValue,\n  maxValue,\n  disabled,\n  weekdayFormat,\n  pagedNavigation,\n  isDateDisabled: propsIsDateDisabled.value,\n  isDateUnavailable: propsIsDateUnavailable.value,\n  calendarLabel,\n  nextPage: propsNextPage,\n  prevPage: propsPrevPage,\n})\n\nconst {\n  isInvalid,\n  isSelected,\n  isDateHighlightable,\n  highlightedRange,\n  isSelectionStart,\n  isSelectionEnd,\n  isHighlightedStart,\n  isHighlightedEnd,\n  isDateDisabled: rangeIsDateDisabled,\n} = useRangeCalendarState({\n  start: startValue,\n  end: endValue,\n  isDateDisabled,\n  isDateUnavailable,\n  isDateHighlightable: propsIsDateHighlightable.value,\n  focusedValue,\n  allowNonContiguousRanges,\n  fixedDate,\n  maximumDays,\n})\n\nwatch(modelValue, (_modelValue, _prevValue) => {\n  if (\n    (!_prevValue?.start && _modelValue?.start)\n    || !_modelValue\n    || !_modelValue.start\n    || (startValue.value && !isEqualDay(_modelValue.start, startValue.value))\n  ) {\n    startValue.value = _modelValue?.start?.copy?.()\n  }\n\n  if (\n    (!_prevValue?.end && _modelValue.end)\n    || !_modelValue\n    || !_modelValue.end\n    || (endValue.value && !isEqualDay(_modelValue.end, endValue.value))\n  ) {\n    endValue.value = _modelValue?.end?.copy?.()\n  }\n})\n\nwatch(startValue, (_startValue) => {\n  if (_startValue && !isEqualDay(_startValue, placeholder.value))\n    onPlaceholderChange(_startValue)\n\n  emits('update:startValue', _startValue)\n})\n\nwatch([startValue, endValue], ([_startValue, _endValue]) => {\n  const value = modelValue.value\n\n  if (\n    value\n    && value.start\n    && value.end\n    && _startValue\n    && _endValue\n    && isEqualDay(value.start, _startValue)\n    && isEqualDay(value.end, _endValue)\n  ) {\n    return\n  }\n\n  isEditing.value = true\n  if (_endValue && _startValue) {\n    if (isBefore(_endValue, _startValue)) {\n      modelValue.value = {\n        start: _endValue.copy(),\n        end: _startValue.copy(),\n      }\n    }\n    else {\n      modelValue.value = {\n        start: _startValue.copy(),\n        end: _endValue.copy(),\n      }\n    }\n\n    isEditing.value = false\n    validModelValue.value = { start: modelValue.value.start?.copy(), end: modelValue.value.end?.copy() }\n  }\n  else {\n    if (_startValue) {\n      modelValue.value = {\n        start: _startValue.copy(),\n        end: undefined,\n      }\n    }\n    else {\n      modelValue.value = {\n        start: _endValue?.copy(),\n        end: undefined,\n      }\n    }\n  }\n})\n\nconst kbd = useKbd()\nuseEventListener('keydown', (ev) => {\n  if (ev.key === kbd.ESCAPE && isEditing.value) {\n    // Abort start and end selection\n    startValue.value = validModelValue.value.start?.copy()\n    endValue.value = validModelValue.value.end?.copy()\n  }\n})\n\nprovideRangeCalendarRootContext({\n  isDateUnavailable,\n  isDateHighlightable,\n  startValue,\n  endValue,\n  formatter,\n  modelValue,\n  placeholder,\n  disabled,\n  initialFocus,\n  pagedNavigation,\n  grid,\n  weekDays: weekdays,\n  weekStartsOn,\n  weekdayFormat,\n  fixedWeeks,\n  numberOfMonths,\n  readonly,\n  preventDeselect,\n  fullCalendarLabel,\n  headingValue,\n  isInvalid,\n  isDateDisabled: rangeIsDateDisabled,\n  allowNonContiguousRanges,\n  highlightedRange,\n  focusedValue,\n  lastPressedDateValue,\n  isSelected,\n  isSelectionEnd,\n  isSelectionStart,\n  isNextButtonDisabled,\n  isPrevButtonDisabled,\n  isOutsideVisibleView,\n  nextPage,\n  prevPage,\n  parentElement,\n  onPlaceholderChange,\n  locale,\n  dir,\n  isHighlightedStart,\n  isHighlightedEnd,\n  disableDaysOutsideCurrentView,\n  fixedDate,\n  maximumDays,\n  minValue,\n  maxValue,\n})\n\nonMounted(() => {\n  if (initialFocus.value)\n    handleCalendarInitialFocus(parentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"application\"\n    :aria-label=\"fullCalendarLabel\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n  >\n    <div\n      style=\"\n        border: 0px;\n        clip: rect(0px, 0px, 0px, 0px);\n        clip-path: inset(50%);\n        height: 1px;\n        margin: -1px;\n        overflow: hidden;\n        padding: 0px;\n        position: absolute;\n        white-space: nowrap;\n        width: 1px;\n      \"\n    >\n      <div\n        role=\"heading\"\n        aria-level=\"2\"\n      >\n        {{ fullCalendarLabel }}\n      </div>\n    </div>\n\n    <slot\n      :date=\"placeholder\"\n      :grid=\"grid\"\n      :week-days=\"weekdays\"\n      :week-starts-on=\"weekStartsOn\"\n      :locale=\"locale\"\n      :fixed-weeks=\"fixedWeeks\"\n      :model-value=\"modelValue\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport { isEqualDay } from '@internationalized/date'\nimport { RangeCalendarRoot } from '..'\nimport { injectDateRangePickerRootContext } from './DateRangePickerRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nconst rootContext = injectDateRangePickerRootContext()\n</script>\n\n<template>\n  <RangeCalendarRoot\n    v-slot=\"{ weekDays, grid, date, weekStartsOn, locale, fixedWeeks }\"\n    v-bind=\"{\n      allowNonContiguousRanges: rootContext.allowNonContiguousRanges.value,\n      isDateDisabled: rootContext.isDateDisabled,\n      isDateUnavailable: rootContext.isDateUnavailable,\n      isDateHighlightable: rootContext.isDateHighlightable,\n      locale: rootContext.locale.value,\n      disabled: rootContext.disabled.value,\n      pagedNavigation: rootContext.pagedNavigation.value,\n      weekStartsOn: rootContext.weekStartsOn.value,\n      weekdayFormat: rootContext.weekdayFormat.value,\n      fixedWeeks: rootContext.fixedWeeks.value,\n      numberOfMonths: rootContext.numberOfMonths.value,\n      readonly: rootContext.readonly.value,\n      preventDeselect: rootContext.preventDeselect.value,\n      minValue: rootContext.minValue.value,\n      maxValue: rootContext.maxValue.value,\n      dir: rootContext.dir.value,\n      fixedDate: rootContext.fixedDate.value,\n      maximumDays: rootContext.maximumDays?.value,\n    }\"\n    :model-value=\"rootContext.modelValue.value\"\n    :placeholder=\"rootContext.placeholder.value\"\n    @update:start-value=\"(date) => {\n      rootContext.onStartValueChange(date)\n    }\"\n    @update:model-value=\"(date) => {\n      if (date.start && rootContext.modelValue.value?.start && date.end && rootContext.modelValue.value?.end && isEqualDay(date.start, rootContext.modelValue.value?.start) && isEqualDay(date.end, rootContext.modelValue.value?.end)) return\n      rootContext.onDateChange(date)\n    }\"\n    @update:placeholder=\"(date) => {\n      if (isEqualDay(date, rootContext.placeholder.value)) return\n      rootContext.onPlaceholderChange(date)\n    }\"\n  >\n    <slot\n      :date=\"date\"\n      :grid=\"grid\"\n      :week-days=\"weekDays\"\n      :week-starts-on=\"weekStartsOn\"\n      :locale=\"locale\"\n      :fixed-weeks=\"fixedWeeks\"\n    />\n  </RangeCalendarRoot>\n</template>\n", "<script lang=\"ts\">\nimport { isEqualDay } from '@internationalized/date'\nimport { RangeCalendarRoot } from '..'\nimport { injectDateRangePickerRootContext } from './DateRangePickerRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nconst rootContext = injectDateRangePickerRootContext()\n</script>\n\n<template>\n  <RangeCalendarRoot\n    v-slot=\"{ weekDays, grid, date, weekStartsOn, locale, fixedWeeks }\"\n    v-bind=\"{\n      allowNonContiguousRanges: rootContext.allowNonContiguousRanges.value,\n      isDateDisabled: rootContext.isDateDisabled,\n      isDateUnavailable: rootContext.isDateUnavailable,\n      isDateHighlightable: rootContext.isDateHighlightable,\n      locale: rootContext.locale.value,\n      disabled: rootContext.disabled.value,\n      pagedNavigation: rootContext.pagedNavigation.value,\n      weekStartsOn: rootContext.weekStartsOn.value,\n      weekdayFormat: rootContext.weekdayFormat.value,\n      fixedWeeks: rootContext.fixedWeeks.value,\n      numberOfMonths: rootContext.numberOfMonths.value,\n      readonly: rootContext.readonly.value,\n      preventDeselect: rootContext.preventDeselect.value,\n      minValue: rootContext.minValue.value,\n      maxValue: rootContext.maxValue.value,\n      dir: rootContext.dir.value,\n      fixedDate: rootContext.fixedDate.value,\n      maximumDays: rootContext.maximumDays?.value,\n    }\"\n    :model-value=\"rootContext.modelValue.value\"\n    :placeholder=\"rootContext.placeholder.value\"\n    @update:start-value=\"(date) => {\n      rootContext.onStartValueChange(date)\n    }\"\n    @update:model-value=\"(date) => {\n      if (date.start && rootContext.modelValue.value?.start && date.end && rootContext.modelValue.value?.end && isEqualDay(date.start, rootContext.modelValue.value?.start) && isEqualDay(date.end, rootContext.modelValue.value?.end)) return\n      rootContext.onDateChange(date)\n    }\"\n    @update:placeholder=\"(date) => {\n      if (isEqualDay(date, rootContext.placeholder.value)) return\n      rootContext.onPlaceholderChange(date)\n    }\"\n  >\n    <slot\n      :date=\"date\"\n      :grid=\"grid\"\n      :week-days=\"weekDays\"\n      :week-starts-on=\"weekStartsOn\"\n      :locale=\"locale\"\n      :fixed-weeks=\"fixedWeeks\"\n    />\n  </RangeCalendarRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarCellProps extends PrimitiveProps {\n  date: DateValue\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nwithDefaults(defineProps<RangeCalendarCellProps>(), { as: 'td' })\nconst rootContext = injectRangeCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"gridcell\"\n    :aria-selected=\"rootContext.isSelected(date) ? true : undefined\"\n    :aria-disabled=\"rootContext.isDateDisabled(date) || rootContext.isDateUnavailable?.(date) || rootContext.disableDaysOutsideCurrentView.value\"\n    :data-disabled=\"rootContext.isDateDisabled(date) || rootContext.disableDaysOutsideCurrentView.value ? '' : undefined\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarCellProps extends PrimitiveProps {\n  date: DateValue\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nwithDefaults(defineProps<RangeCalendarCellProps>(), { as: 'td' })\nconst rootContext = injectRangeCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"gridcell\"\n    :aria-selected=\"rootContext.isSelected(date) ? true : undefined\"\n    :aria-disabled=\"rootContext.isDateDisabled(date) || rootContext.isDateUnavailable?.(date) || rootContext.disableDaysOutsideCurrentView.value\"\n    :data-disabled=\"rootContext.isDateDisabled(date) || rootContext.disableDaysOutsideCurrentView.value ? '' : undefined\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarCellProps } from '..'\nimport { RangeCalendarCell } from '..'\n\nexport interface DateRangePickerCellProps extends RangeCalendarCellProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerCellProps>()\n</script>\n\n<template>\n  <RangeCalendarCell v-bind=\"props\">\n    <slot />\n  </RangeCalendarCell>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarCellProps } from '..'\nimport { RangeCalendarCell } from '..'\n\nexport interface DateRangePickerCellProps extends RangeCalendarCellProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerCellProps>()\n</script>\n\n<template>\n  <RangeCalendarCell v-bind=\"props\">\n    <slot />\n  </RangeCalendarCell>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport {\n\n  getLocalTimeZone,\n  isSameDay,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date'\nimport { computed, nextTick } from 'vue'\nimport { getSelectableCells } from '@/Calendar/utils'\nimport { getDaysInMonth, isBetweenInclusive, parseStringToDateValue, toDate } from '@/date'\nimport { useKbd } from '@/shared'\n\nexport interface RangeCalendarCellTriggerProps extends PrimitiveProps {\n  day: DateValue\n  month: DateValue\n}\n\nexport interface RangeCalendarCellTriggerSlot {\n  default?: (props: {\n    /** Current day */\n    dayValue: string\n    /** Current disable state */\n    disabled: boolean\n    /** Current selected state */\n    selected: boolean\n    /** Current today state */\n    today: boolean\n    /** Current outside view state */\n    outsideView: boolean\n    /** Current outside visible view state */\n    outsideVisibleView: boolean\n    /** Current unavailable state */\n    unavailable: boolean\n    /** Current highlighted state */\n    highlighted: boolean\n    /** Current highlighted start state */\n    highlightedStart: boolean\n    /** Current highlighted end state */\n    highlightedEnd: boolean\n    /** Current selection start state */\n    selectionStart: boolean\n    /** Current selection end state */\n    selectionEnd: boolean\n\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarCellTriggerProps>(), { as: 'div' })\ndefineSlots<RangeCalendarCellTriggerSlot>()\n\nconst rootContext = injectRangeCalendarRootContext()\n\nconst kbd = useKbd()\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst labelText = computed(() => rootContext.formatter.custom(toDate(props.day), {\n  weekday: 'long',\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n}))\n\nconst isUnavailable = computed(() => rootContext.isDateUnavailable?.(props.day) ?? false)\nconst isSelectedDate = computed(() => rootContext.isSelected(props.day))\nconst isSelectionStart = computed(() => rootContext.isSelectionStart(props.day))\nconst isSelectionEnd = computed(() => rootContext.isSelectionEnd(props.day))\nconst isHighlightStart = computed(() => rootContext.isHighlightedStart(props.day))\nconst isHighlightEnd = computed(() => rootContext.isHighlightedEnd(props.day))\nconst isHighlighted = computed(() => rootContext.highlightedRange.value\n  ? isBetweenInclusive(props.day, rootContext.highlightedRange.value.start, rootContext.highlightedRange.value.end)\n  : false)\nconst allowNonContiguousRanges = computed(() => rootContext.allowNonContiguousRanges.value)\n\nconst isDateToday = computed(() => {\n  return isToday(props.day, getLocalTimeZone())\n})\nconst isOutsideView = computed(() => {\n  return !isSameMonth(props.day, props.month)\n})\nconst isOutsideVisibleView = computed(() =>\n  rootContext.isOutsideVisibleView(props.day),\n)\n\nconst isDisabled = computed(() => rootContext.isDateDisabled(props.day) || (rootContext.disableDaysOutsideCurrentView.value && isOutsideView.value))\n\nconst dayValue = computed(() => props.day.day.toLocaleString(rootContext.locale.value))\n\nconst isFocusedDate = computed(() => {\n  return !rootContext.disabled.value && isSameDay(props.day, rootContext.placeholder.value)\n})\n\nfunction changeDate(e: MouseEvent | KeyboardEvent, date: DateValue) {\n  if (rootContext.readonly.value)\n    return\n  if (rootContext.isDateDisabled(date) || rootContext.isDateUnavailable?.(date))\n    return\n\n  rootContext.lastPressedDateValue.value = date.copy()\n\n  if (rootContext.startValue.value && rootContext.highlightedRange.value === null) {\n    if (isSameDay(date, rootContext.startValue.value) && !rootContext.preventDeselect.value && !rootContext.endValue.value) {\n      rootContext.startValue.value = undefined\n      rootContext.onPlaceholderChange(date)\n      return\n    }\n    else if (!rootContext.endValue.value) {\n      e.preventDefault()\n      if (rootContext.lastPressedDateValue.value && isSameDay(rootContext.lastPressedDateValue.value, date))\n        rootContext.startValue.value = date.copy()\n      return\n    }\n  }\n\n  if (rootContext.startValue.value && rootContext.endValue.value && isSameDay(rootContext.endValue.value, date) && !rootContext.preventDeselect.value) {\n    rootContext.startValue.value = undefined\n    rootContext.endValue.value = undefined\n    rootContext.onPlaceholderChange(date)\n    return\n  }\n\n  if (!rootContext.startValue.value) {\n    rootContext.startValue.value = date.copy()\n  }\n  else if (!rootContext.endValue.value) {\n    rootContext.endValue.value = date.copy()\n  }\n  else if (rootContext.endValue.value && rootContext.startValue.value) {\n    if (!rootContext.fixedDate.value) {\n      rootContext.endValue.value = undefined\n      rootContext.startValue.value = date.copy()\n    }\n    else if (rootContext.fixedDate.value === 'start') {\n      if (date.compare(rootContext.startValue.value) < 0) {\n        rootContext.startValue.value = date.copy()\n      }\n      else {\n        rootContext.endValue.value = date.copy()\n      }\n    }\n    else if (rootContext.fixedDate.value === 'end') {\n      if (date.compare(rootContext.endValue.value) > 0) {\n        rootContext.endValue.value = date.copy()\n      }\n      else {\n        rootContext.startValue.value = date.copy()\n      }\n    }\n  }\n}\n\nfunction handleClick(e: MouseEvent) {\n  if (isDisabled.value)\n    return\n  changeDate(e, props.day)\n}\n\nfunction handleFocus() {\n  if (isDisabled.value || rootContext.isDateUnavailable?.(props.day))\n    return\n  rootContext.focusedValue.value = props.day.copy()\n}\n\nfunction handleArrowKey(e: KeyboardEvent) {\n  if (isDisabled.value)\n    return\n  e.preventDefault()\n  e.stopPropagation()\n  const parentElement = rootContext.parentElement.value!\n  const indexIncrementation = 7\n  const sign = rootContext.dir.value === 'rtl' ? -1 : 1\n  switch (e.code) {\n    case kbd.ARROW_RIGHT:\n      shiftFocus(currentElement.value, sign)\n      break\n    case kbd.ARROW_LEFT:\n      shiftFocus(currentElement.value, -sign)\n      break\n    case kbd.ARROW_UP:\n      shiftFocus(currentElement.value, -indexIncrementation)\n      break\n    case kbd.ARROW_DOWN:\n      shiftFocus(currentElement.value, indexIncrementation)\n      break\n    case kbd.ENTER:\n    case kbd.SPACE_CODE:\n      changeDate(e, props.day)\n  }\n\n  function shiftFocus(node: HTMLElement, add: number) {\n    const allCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n    if (!allCollectionItems.length)\n      return\n\n    const index = allCollectionItems.indexOf(node)\n    const newIndex = index + add\n\n    if (newIndex >= 0 && newIndex < allCollectionItems.length) {\n      const newDate = allCollectionItems[newIndex].getAttribute('data-value')\n      const newDateValue = parseStringToDateValue(newDate!, rootContext.placeholder.value)\n      const minValue = rootContext.minValue.value\n      const maxValue = rootContext.maxValue.value\n      if ((minValue && newDateValue.compare(minValue) < 0) || (maxValue && newDateValue.compare(maxValue) > 0))\n        return\n\n      if (allCollectionItems[newIndex].hasAttribute('data-disabled')) {\n        shiftFocus(allCollectionItems[newIndex], add)\n      }\n      rootContext.onPlaceholderChange(newDateValue)\n      allCollectionItems[newIndex].focus()\n      return\n    }\n\n    if (newIndex < 0) {\n      if (rootContext.isPrevButtonDisabled())\n        return\n      rootContext.prevPage()\n      nextTick(() => {\n        const newCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n        if (!newCollectionItems.length)\n          return\n        if (!rootContext.pagedNavigation.value && rootContext.numberOfMonths.value > 1) {\n        // Placeholder is set to first month of the new page\n          const numberOfDays = getDaysInMonth(rootContext.placeholder.value)\n          const computedIndex = numberOfDays - Math.abs(newIndex)\n          if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n            shiftFocus(newCollectionItems[computedIndex], add)\n          }\n          const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n          rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n          newCollectionItems[\n            computedIndex\n          ].focus()\n          return\n        }\n        const computedIndex = newCollectionItems.length - Math.abs(newIndex)\n        if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n          shiftFocus(newCollectionItems[computedIndex], add)\n        }\n        const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n        rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n        newCollectionItems[\n          computedIndex\n        ].focus()\n      })\n      return\n    }\n\n    if (newIndex >= allCollectionItems.length) {\n      if (rootContext.isNextButtonDisabled())\n        return\n      rootContext.nextPage()\n      nextTick(() => {\n        const newCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n        if (!newCollectionItems.length)\n          return\n\n        if (!rootContext.pagedNavigation.value && rootContext.numberOfMonths.value > 1) {\n        // Placeholder is set to first month of the new page\n          const numberOfDays = getDaysInMonth(\n            rootContext.placeholder.value.add({ months: rootContext.numberOfMonths.value - 1 }),\n          )\n\n          const computedIndex = newIndex - allCollectionItems.length + (newCollectionItems.length - numberOfDays)\n\n          if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n            shiftFocus(newCollectionItems[computedIndex], add)\n          }\n          const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n          rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n          newCollectionItems[computedIndex].focus()\n          return\n        }\n\n        const computedIndex = newIndex - allCollectionItems.length\n        if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n          shiftFocus(newCollectionItems[computedIndex], add)\n        }\n\n        const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n        rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n        newCollectionItems[computedIndex].focus()\n      })\n    }\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"button\"\n    :aria-label=\"labelText\"\n    data-reka-calendar-cell-trigger\n    :aria-selected=\"isSelectedDate && (allowNonContiguousRanges || !isUnavailable) ? true : undefined\"\n    :aria-disabled=\"isDisabled || isUnavailable ? true : undefined\"\n    :data-highlighted=\"isHighlighted && (allowNonContiguousRanges || !isUnavailable) ? '' : undefined\"\n    :data-selection-start=\"isSelectionStart ? true : undefined\"\n    :data-selection-end=\"isSelectionEnd ? true : undefined\"\n    :data-highlighted-start=\"isHighlightStart ? true : undefined\"\n    :data-highlighted-end=\"isHighlightEnd ? true : undefined\"\n    :data-selected=\"isSelectedDate && (allowNonContiguousRanges || !isUnavailable) ? true : undefined\"\n    :data-outside-visible-view=\"isOutsideVisibleView ? '' : undefined\"\n    :data-value=\"day.toString()\"\n    :data-disabled=\"isDisabled ? '' : undefined\"\n    :data-unavailable=\"isUnavailable ? '' : undefined\"\n    :data-today=\"isDateToday ? '' : undefined\"\n    :data-outside-view=\"isOutsideView ? '' : undefined\"\n    :data-focused=\"isFocusedDate ? '' : undefined\"\n    :tabindex=\"isFocusedDate ? 0 : isOutsideView || isDisabled ? undefined : -1\"\n    @click=\"handleClick\"\n    @focusin=\"handleFocus\"\n    @mouseenter=\"handleFocus\"\n    @keydown.up.down.left.right.enter.space=\"handleArrowKey\"\n  >\n    <slot\n      :day-value=\"dayValue\"\n      :disabled=\"isDisabled\"\n      :today=\"isDateToday\"\n      :selected=\"isSelectedDate\"\n      :outside-view=\"isOutsideView\"\n      :outside-visible-view=\"isOutsideVisibleView\"\n      :unavailable=\"isUnavailable\"\n      :highlighted=\"isHighlighted && (allowNonContiguousRanges || !isUnavailable)\"\n      :highlighted-start=\"isHighlightStart\"\n      :highlighted-end=\"isHighlightEnd\"\n      :selection-start=\"isSelectionStart\"\n      :selection-end=\"isSelectionEnd\"\n    >\n      {{ dayValue }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\nimport {\n\n  getLocalTimeZone,\n  isSameDay,\n  isSameMonth,\n  isToday,\n} from '@internationalized/date'\nimport { computed, nextTick } from 'vue'\nimport { getSelectableCells } from '@/Calendar/utils'\nimport { getDaysInMonth, isBetweenInclusive, parseStringToDateValue, toDate } from '@/date'\nimport { useKbd } from '@/shared'\n\nexport interface RangeCalendarCellTriggerProps extends PrimitiveProps {\n  day: DateValue\n  month: DateValue\n}\n\nexport interface RangeCalendarCellTriggerSlot {\n  default?: (props: {\n    /** Current day */\n    dayValue: string\n    /** Current disable state */\n    disabled: boolean\n    /** Current selected state */\n    selected: boolean\n    /** Current today state */\n    today: boolean\n    /** Current outside view state */\n    outsideView: boolean\n    /** Current outside visible view state */\n    outsideVisibleView: boolean\n    /** Current unavailable state */\n    unavailable: boolean\n    /** Current highlighted state */\n    highlighted: boolean\n    /** Current highlighted start state */\n    highlightedStart: boolean\n    /** Current highlighted end state */\n    highlightedEnd: boolean\n    /** Current selection start state */\n    selectionStart: boolean\n    /** Current selection end state */\n    selectionEnd: boolean\n\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarCellTriggerProps>(), { as: 'div' })\ndefineSlots<RangeCalendarCellTriggerSlot>()\n\nconst rootContext = injectRangeCalendarRootContext()\n\nconst kbd = useKbd()\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst labelText = computed(() => rootContext.formatter.custom(toDate(props.day), {\n  weekday: 'long',\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n}))\n\nconst isUnavailable = computed(() => rootContext.isDateUnavailable?.(props.day) ?? false)\nconst isSelectedDate = computed(() => rootContext.isSelected(props.day))\nconst isSelectionStart = computed(() => rootContext.isSelectionStart(props.day))\nconst isSelectionEnd = computed(() => rootContext.isSelectionEnd(props.day))\nconst isHighlightStart = computed(() => rootContext.isHighlightedStart(props.day))\nconst isHighlightEnd = computed(() => rootContext.isHighlightedEnd(props.day))\nconst isHighlighted = computed(() => rootContext.highlightedRange.value\n  ? isBetweenInclusive(props.day, rootContext.highlightedRange.value.start, rootContext.highlightedRange.value.end)\n  : false)\nconst allowNonContiguousRanges = computed(() => rootContext.allowNonContiguousRanges.value)\n\nconst isDateToday = computed(() => {\n  return isToday(props.day, getLocalTimeZone())\n})\nconst isOutsideView = computed(() => {\n  return !isSameMonth(props.day, props.month)\n})\nconst isOutsideVisibleView = computed(() =>\n  rootContext.isOutsideVisibleView(props.day),\n)\n\nconst isDisabled = computed(() => rootContext.isDateDisabled(props.day) || (rootContext.disableDaysOutsideCurrentView.value && isOutsideView.value))\n\nconst dayValue = computed(() => props.day.day.toLocaleString(rootContext.locale.value))\n\nconst isFocusedDate = computed(() => {\n  return !rootContext.disabled.value && isSameDay(props.day, rootContext.placeholder.value)\n})\n\nfunction changeDate(e: MouseEvent | KeyboardEvent, date: DateValue) {\n  if (rootContext.readonly.value)\n    return\n  if (rootContext.isDateDisabled(date) || rootContext.isDateUnavailable?.(date))\n    return\n\n  rootContext.lastPressedDateValue.value = date.copy()\n\n  if (rootContext.startValue.value && rootContext.highlightedRange.value === null) {\n    if (isSameDay(date, rootContext.startValue.value) && !rootContext.preventDeselect.value && !rootContext.endValue.value) {\n      rootContext.startValue.value = undefined\n      rootContext.onPlaceholderChange(date)\n      return\n    }\n    else if (!rootContext.endValue.value) {\n      e.preventDefault()\n      if (rootContext.lastPressedDateValue.value && isSameDay(rootContext.lastPressedDateValue.value, date))\n        rootContext.startValue.value = date.copy()\n      return\n    }\n  }\n\n  if (rootContext.startValue.value && rootContext.endValue.value && isSameDay(rootContext.endValue.value, date) && !rootContext.preventDeselect.value) {\n    rootContext.startValue.value = undefined\n    rootContext.endValue.value = undefined\n    rootContext.onPlaceholderChange(date)\n    return\n  }\n\n  if (!rootContext.startValue.value) {\n    rootContext.startValue.value = date.copy()\n  }\n  else if (!rootContext.endValue.value) {\n    rootContext.endValue.value = date.copy()\n  }\n  else if (rootContext.endValue.value && rootContext.startValue.value) {\n    if (!rootContext.fixedDate.value) {\n      rootContext.endValue.value = undefined\n      rootContext.startValue.value = date.copy()\n    }\n    else if (rootContext.fixedDate.value === 'start') {\n      if (date.compare(rootContext.startValue.value) < 0) {\n        rootContext.startValue.value = date.copy()\n      }\n      else {\n        rootContext.endValue.value = date.copy()\n      }\n    }\n    else if (rootContext.fixedDate.value === 'end') {\n      if (date.compare(rootContext.endValue.value) > 0) {\n        rootContext.endValue.value = date.copy()\n      }\n      else {\n        rootContext.startValue.value = date.copy()\n      }\n    }\n  }\n}\n\nfunction handleClick(e: MouseEvent) {\n  if (isDisabled.value)\n    return\n  changeDate(e, props.day)\n}\n\nfunction handleFocus() {\n  if (isDisabled.value || rootContext.isDateUnavailable?.(props.day))\n    return\n  rootContext.focusedValue.value = props.day.copy()\n}\n\nfunction handleArrowKey(e: KeyboardEvent) {\n  if (isDisabled.value)\n    return\n  e.preventDefault()\n  e.stopPropagation()\n  const parentElement = rootContext.parentElement.value!\n  const indexIncrementation = 7\n  const sign = rootContext.dir.value === 'rtl' ? -1 : 1\n  switch (e.code) {\n    case kbd.ARROW_RIGHT:\n      shiftFocus(currentElement.value, sign)\n      break\n    case kbd.ARROW_LEFT:\n      shiftFocus(currentElement.value, -sign)\n      break\n    case kbd.ARROW_UP:\n      shiftFocus(currentElement.value, -indexIncrementation)\n      break\n    case kbd.ARROW_DOWN:\n      shiftFocus(currentElement.value, indexIncrementation)\n      break\n    case kbd.ENTER:\n    case kbd.SPACE_CODE:\n      changeDate(e, props.day)\n  }\n\n  function shiftFocus(node: HTMLElement, add: number) {\n    const allCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n    if (!allCollectionItems.length)\n      return\n\n    const index = allCollectionItems.indexOf(node)\n    const newIndex = index + add\n\n    if (newIndex >= 0 && newIndex < allCollectionItems.length) {\n      const newDate = allCollectionItems[newIndex].getAttribute('data-value')\n      const newDateValue = parseStringToDateValue(newDate!, rootContext.placeholder.value)\n      const minValue = rootContext.minValue.value\n      const maxValue = rootContext.maxValue.value\n      if ((minValue && newDateValue.compare(minValue) < 0) || (maxValue && newDateValue.compare(maxValue) > 0))\n        return\n\n      if (allCollectionItems[newIndex].hasAttribute('data-disabled')) {\n        shiftFocus(allCollectionItems[newIndex], add)\n      }\n      rootContext.onPlaceholderChange(newDateValue)\n      allCollectionItems[newIndex].focus()\n      return\n    }\n\n    if (newIndex < 0) {\n      if (rootContext.isPrevButtonDisabled())\n        return\n      rootContext.prevPage()\n      nextTick(() => {\n        const newCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n        if (!newCollectionItems.length)\n          return\n        if (!rootContext.pagedNavigation.value && rootContext.numberOfMonths.value > 1) {\n        // Placeholder is set to first month of the new page\n          const numberOfDays = getDaysInMonth(rootContext.placeholder.value)\n          const computedIndex = numberOfDays - Math.abs(newIndex)\n          if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n            shiftFocus(newCollectionItems[computedIndex], add)\n          }\n          const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n          rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n          newCollectionItems[\n            computedIndex\n          ].focus()\n          return\n        }\n        const computedIndex = newCollectionItems.length - Math.abs(newIndex)\n        if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n          shiftFocus(newCollectionItems[computedIndex], add)\n        }\n        const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n        rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n        newCollectionItems[\n          computedIndex\n        ].focus()\n      })\n      return\n    }\n\n    if (newIndex >= allCollectionItems.length) {\n      if (rootContext.isNextButtonDisabled())\n        return\n      rootContext.nextPage()\n      nextTick(() => {\n        const newCollectionItems: HTMLElement[] = getSelectableCells(parentElement)\n        if (!newCollectionItems.length)\n          return\n\n        if (!rootContext.pagedNavigation.value && rootContext.numberOfMonths.value > 1) {\n        // Placeholder is set to first month of the new page\n          const numberOfDays = getDaysInMonth(\n            rootContext.placeholder.value.add({ months: rootContext.numberOfMonths.value - 1 }),\n          )\n\n          const computedIndex = newIndex - allCollectionItems.length + (newCollectionItems.length - numberOfDays)\n\n          if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n            shiftFocus(newCollectionItems[computedIndex], add)\n          }\n          const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n          rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n          newCollectionItems[computedIndex].focus()\n          return\n        }\n\n        const computedIndex = newIndex - allCollectionItems.length\n        if (newCollectionItems[computedIndex].hasAttribute('data-disabled')) {\n          shiftFocus(newCollectionItems[computedIndex], add)\n        }\n\n        const newDate = newCollectionItems[computedIndex].getAttribute('data-value')\n        rootContext.onPlaceholderChange(parseStringToDateValue(newDate!, rootContext.placeholder.value))\n        newCollectionItems[computedIndex].focus()\n      })\n    }\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"button\"\n    :aria-label=\"labelText\"\n    data-reka-calendar-cell-trigger\n    :aria-selected=\"isSelectedDate && (allowNonContiguousRanges || !isUnavailable) ? true : undefined\"\n    :aria-disabled=\"isDisabled || isUnavailable ? true : undefined\"\n    :data-highlighted=\"isHighlighted && (allowNonContiguousRanges || !isUnavailable) ? '' : undefined\"\n    :data-selection-start=\"isSelectionStart ? true : undefined\"\n    :data-selection-end=\"isSelectionEnd ? true : undefined\"\n    :data-highlighted-start=\"isHighlightStart ? true : undefined\"\n    :data-highlighted-end=\"isHighlightEnd ? true : undefined\"\n    :data-selected=\"isSelectedDate && (allowNonContiguousRanges || !isUnavailable) ? true : undefined\"\n    :data-outside-visible-view=\"isOutsideVisibleView ? '' : undefined\"\n    :data-value=\"day.toString()\"\n    :data-disabled=\"isDisabled ? '' : undefined\"\n    :data-unavailable=\"isUnavailable ? '' : undefined\"\n    :data-today=\"isDateToday ? '' : undefined\"\n    :data-outside-view=\"isOutsideView ? '' : undefined\"\n    :data-focused=\"isFocusedDate ? '' : undefined\"\n    :tabindex=\"isFocusedDate ? 0 : isOutsideView || isDisabled ? undefined : -1\"\n    @click=\"handleClick\"\n    @focusin=\"handleFocus\"\n    @mouseenter=\"handleFocus\"\n    @keydown.up.down.left.right.enter.space=\"handleArrowKey\"\n  >\n    <slot\n      :day-value=\"dayValue\"\n      :disabled=\"isDisabled\"\n      :today=\"isDateToday\"\n      :selected=\"isSelectedDate\"\n      :outside-view=\"isOutsideView\"\n      :outside-visible-view=\"isOutsideVisibleView\"\n      :unavailable=\"isUnavailable\"\n      :highlighted=\"isHighlighted && (allowNonContiguousRanges || !isUnavailable)\"\n      :highlighted-start=\"isHighlightStart\"\n      :highlighted-end=\"isHighlightEnd\"\n      :selection-start=\"isSelectionStart\"\n      :selection-end=\"isSelectionEnd\"\n    >\n      {{ dayValue }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarCellTriggerProps, RangeCalendarCellTriggerSlot } from '@/RangeCalendar/RangeCalendarCellTrigger.vue'\nimport { RangeCalendarCellTrigger } from '..'\n\nexport interface DateRangePickerCellTriggerProps extends RangeCalendarCellTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerCellTriggerProps>()\n\ndefineSlots<RangeCalendarCellTriggerSlot>()\n</script>\n\n<template>\n  <RangeCalendarCellTrigger\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </RangeCalendarCellTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarCellTriggerProps, RangeCalendarCellTriggerSlot } from '@/RangeCalendar/RangeCalendarCellTrigger.vue'\nimport { RangeCalendarCellTrigger } from '..'\n\nexport interface DateRangePickerCellTriggerProps extends RangeCalendarCellTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerCellTriggerProps>()\n\ndefineSlots<RangeCalendarCellTriggerSlot>()\n</script>\n\n<template>\n  <RangeCalendarCellTrigger\n    v-slot=\"slotProps\"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </RangeCalendarCellTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverCloseProps } from '..'\nimport { PopoverClose } from '..'\n\nexport interface DateRangePickerCloseProps extends PopoverCloseProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerCloseProps>()\n</script>\n\n<template>\n  <PopoverClose v-bind=\"props\">\n    <slot />\n  </PopoverClose>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverCloseProps } from '..'\nimport { PopoverClose } from '..'\n\nexport interface DateRangePickerCloseProps extends PopoverCloseProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerCloseProps>()\n</script>\n\n<template>\n  <PopoverClose v-bind=\"props\">\n    <slot />\n  </PopoverClose>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverContentEmits, PopoverContentProps, PopoverPortalProps } from '..'\nimport { computed } from 'vue'\nimport { handleCalendarInitialFocus } from '@/shared/date'\nimport { PopoverContent, PopoverPortal, useForwardPropsEmits } from '..'\n\nexport interface DateRangePickerContentProps extends PopoverContentProps {\n  /**\n   * Props to control the portal wrapped around the content.\n   */\n  portal?: PopoverPortalProps\n}\nexport interface DateRangePickerContentEmits extends PopoverContentEmits {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerContentProps>()\nconst emits = defineEmits<DateRangePickerContentEmits>()\n\nconst propsToForward = computed(() => ({\n  ...props,\n  portal: undefined,\n}))\nconst forwarded = useForwardPropsEmits(propsToForward, emits)\n</script>\n\n<template>\n  <PopoverPortal v-bind=\"portal\">\n    <PopoverContent\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      @open-auto-focus=\"event => {\n        emits('openAutoFocus', event)\n\n        if (!event.defaultPrevented && event.target) {\n          handleCalendarInitialFocus(event.target as HTMLElement)\n          event.preventDefault()\n        }\n      }\"\n    >\n      <slot />\n    </PopoverContent>\n  </PopoverPortal>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverContentEmits, PopoverContentProps, PopoverPortalProps } from '..'\nimport { computed } from 'vue'\nimport { handleCalendarInitialFocus } from '@/shared/date'\nimport { PopoverContent, PopoverPortal, useForwardPropsEmits } from '..'\n\nexport interface DateRangePickerContentProps extends PopoverContentProps {\n  /**\n   * Props to control the portal wrapped around the content.\n   */\n  portal?: PopoverPortalProps\n}\nexport interface DateRangePickerContentEmits extends PopoverContentEmits {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerContentProps>()\nconst emits = defineEmits<DateRangePickerContentEmits>()\n\nconst propsToForward = computed(() => ({\n  ...props,\n  portal: undefined,\n}))\nconst forwarded = useForwardPropsEmits(propsToForward, emits)\n</script>\n\n<template>\n  <PopoverPortal v-bind=\"portal\">\n    <PopoverContent\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      @open-auto-focus=\"event => {\n        emits('openAutoFocus', event)\n\n        if (!event.defaultPrevented && event.target) {\n          handleCalendarInitialFocus(event.target as HTMLElement)\n          event.preventDefault()\n        }\n      }\"\n    >\n      <slot />\n    </PopoverContent>\n  </PopoverPortal>\n</template>\n", "<script lang=\"ts\">\nimport { isEqualDay } from '@internationalized/date'\nimport { DateRangeFieldRoot } from '..'\nimport { injectDateRangePickerRootContext } from './DateRangePickerRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nconst rootContext = injectDateRangePickerRootContext()\n</script>\n\n<template>\n  <DateRangeFieldRoot\n    v-slot=\"{ segments, modelValue }\"\n    :ref=\"rootContext.dateFieldRef\"\n    :model-value=\"rootContext.modelValue.value\"\n    :placeholder=\"rootContext.placeholder.value\"\n    v-bind=\"{\n      id: rootContext.id.value,\n      name: rootContext.name.value,\n      disabled: rootContext.disabled.value,\n      minValue: rootContext.minValue.value,\n      maxValue: rootContext.maxValue.value,\n      readonly: rootContext.readonly.value,\n      hourCycle: rootContext.hourCycle.value,\n      granularity: rootContext.granularity.value,\n      hideTimeZone: rootContext.hideTimeZone.value,\n      locale: rootContext.locale.value,\n      isDateUnavailable: rootContext.isDateUnavailable,\n      required: rootContext.required.value,\n      dir: rootContext.dir.value,\n      step: rootContext.step.value,\n    }\"\n    @update:model-value=\"(date) => {\n      if (date.start && rootContext.modelValue.value.start && date.end && rootContext.modelValue.value.end && date.start.compare(rootContext.modelValue.value.start) === 0 && date.end.compare(rootContext.modelValue.value.end) === 0) return\n      rootContext.onDateChange(date)\n    }\"\n    @update:placeholder=\"(date) => {\n      if (isEqualDay(date, rootContext.placeholder.value) && date.compare(rootContext.placeholder.value) === 0) return\n      rootContext.onPlaceholderChange(date)\n    }\"\n  >\n    <slot\n      :segments=\"segments\"\n      :model-value=\"modelValue\"\n    />\n  </DateRangeFieldRoot>\n</template>\n", "<script lang=\"ts\">\nimport { isEqualDay } from '@internationalized/date'\nimport { DateRangeFieldRoot } from '..'\nimport { injectDateRangePickerRootContext } from './DateRangePickerRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nconst rootContext = injectDateRangePickerRootContext()\n</script>\n\n<template>\n  <DateRangeFieldRoot\n    v-slot=\"{ segments, modelValue }\"\n    :ref=\"rootContext.dateFieldRef\"\n    :model-value=\"rootContext.modelValue.value\"\n    :placeholder=\"rootContext.placeholder.value\"\n    v-bind=\"{\n      id: rootContext.id.value,\n      name: rootContext.name.value,\n      disabled: rootContext.disabled.value,\n      minValue: rootContext.minValue.value,\n      maxValue: rootContext.maxValue.value,\n      readonly: rootContext.readonly.value,\n      hourCycle: rootContext.hourCycle.value,\n      granularity: rootContext.granularity.value,\n      hideTimeZone: rootContext.hideTimeZone.value,\n      locale: rootContext.locale.value,\n      isDateUnavailable: rootContext.isDateUnavailable,\n      required: rootContext.required.value,\n      dir: rootContext.dir.value,\n      step: rootContext.step.value,\n    }\"\n    @update:model-value=\"(date) => {\n      if (date.start && rootContext.modelValue.value.start && date.end && rootContext.modelValue.value.end && date.start.compare(rootContext.modelValue.value.start) === 0 && date.end.compare(rootContext.modelValue.value.end) === 0) return\n      rootContext.onDateChange(date)\n    }\"\n    @update:placeholder=\"(date) => {\n      if (isEqualDay(date, rootContext.placeholder.value) && date.compare(rootContext.placeholder.value) === 0) return\n      rootContext.onPlaceholderChange(date)\n    }\"\n  >\n    <slot\n      :segments=\"segments\"\n      :model-value=\"modelValue\"\n    />\n  </DateRangeFieldRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarGridProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarGridProps>(), { as: 'table' })\n\nconst rootContext = injectRangeCalendarRootContext()\n\nconst disabled = computed(() => rootContext.disabled.value ? true : undefined)\nconst readonly = computed(() => rootContext.readonly.value ? true : undefined)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    tabindex=\"-1\"\n    role=\"grid\"\n    :aria-readonly=\"readonly\"\n    :aria-disabled=\"disabled\"\n    :data-readonly=\"readonly && ''\"\n    :data-disabled=\"disabled && ''\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarGridProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarGridProps>(), { as: 'table' })\n\nconst rootContext = injectRangeCalendarRootContext()\n\nconst disabled = computed(() => rootContext.disabled.value ? true : undefined)\nconst readonly = computed(() => rootContext.readonly.value ? true : undefined)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    tabindex=\"-1\"\n    role=\"grid\"\n    :aria-readonly=\"readonly\"\n    :aria-disabled=\"disabled\"\n    :data-readonly=\"readonly && ''\"\n    :data-disabled=\"disabled && ''\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarGridProps } from '..'\nimport { RangeCalendarGrid } from '..'\n\nexport interface DateRangePickerGridProps extends RangeCalendarGridProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerGridProps>()\n</script>\n\n<template>\n  <RangeCalendarGrid v-bind=\"props\">\n    <slot />\n  </RangeCalendarGrid>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarGridProps } from '..'\nimport { RangeCalendarGrid } from '..'\n\nexport interface DateRangePickerGridProps extends RangeCalendarGridProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerGridProps>()\n</script>\n\n<template>\n  <RangeCalendarGrid v-bind=\"props\">\n    <slot />\n  </RangeCalendarGrid>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarGridBodyProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarGridBodyProps>(), { as: 'tbody' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarGridBodyProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarGridBodyProps>(), { as: 'tbody' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarGridBodyProps } from '..'\nimport { RangeCalendarGridBody } from '..'\n\nexport interface DateRangePickerGridBodyProps extends RangeCalendarGridBodyProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerGridBodyProps>()\n</script>\n\n<template>\n  <RangeCalendarGridBody v-bind=\"props\">\n    <slot />\n  </RangeCalendarGridBody>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarGridBodyProps } from '..'\nimport { RangeCalendarGridBody } from '..'\n\nexport interface DateRangePickerGridBodyProps extends RangeCalendarGridBodyProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerGridBodyProps>()\n</script>\n\n<template>\n  <RangeCalendarGridBody v-bind=\"props\">\n    <slot />\n  </RangeCalendarGridBody>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarGridHeadProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarGridHeadProps>(), { as: 'thead' })\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-hidden=\"true\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarGridHeadProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarGridHeadProps>(), { as: 'thead' })\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-hidden=\"true\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarGridHeadProps } from '..'\nimport { RangeCalendarGridHead } from '..'\n\nexport interface DateRangePickerGridHeadProps extends RangeCalendarGridHeadProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerGridHeadProps>()\n</script>\n\n<template>\n  <RangeCalendarGridHead v-bind=\"props\">\n    <slot />\n  </RangeCalendarGridHead>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarGridHeadProps } from '..'\nimport { RangeCalendarGridHead } from '..'\n\nexport interface DateRangePickerGridHeadProps extends RangeCalendarGridHeadProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerGridHeadProps>()\n</script>\n\n<template>\n  <RangeCalendarGridHead v-bind=\"props\">\n    <slot />\n  </RangeCalendarGridHead>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarGridRowProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarGridRowProps>(), { as: 'tr' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarGridRowProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarGridRowProps>(), { as: 'tr' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarGridRowProps } from '..'\nimport { RangeCalendarGridRow } from '..'\n\nexport interface DateRangePickerGridRowProps extends RangeCalendarGridRowProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerGridRowProps>()\n</script>\n\n<template>\n  <RangeCalendarGridRow v-bind=\"props\">\n    <slot />\n  </RangeCalendarGridRow>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarGridRowProps } from '..'\nimport { RangeCalendarGridRow } from '..'\n\nexport interface DateRangePickerGridRowProps extends RangeCalendarGridRowProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerGridRowProps>()\n</script>\n\n<template>\n  <RangeCalendarGridRow v-bind=\"props\">\n    <slot />\n  </RangeCalendarGridRow>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarHeadCellProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarHeadCellProps>(), { as: 'th' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarHeadCellProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarHeadCellProps>(), { as: 'th' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarHeadCellProps } from '..'\nimport { RangeCalendarHeadCell } from '..'\n\nexport interface DateRangePickerHeadCellProps extends RangeCalendarHeadCellProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerHeadCellProps>()\n</script>\n\n<template>\n  <RangeCalendarHeadCell v-bind=\"props\">\n    <slot />\n  </RangeCalendarHeadCell>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarHeadCellProps } from '..'\nimport { RangeCalendarHeadCell } from '..'\n\nexport interface DateRangePickerHeadCellProps extends RangeCalendarHeadCellProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerHeadCellProps>()\n</script>\n\n<template>\n  <RangeCalendarHeadCell v-bind=\"props\">\n    <slot />\n  </RangeCalendarHeadCell>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarHeaderProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarHeaderProps>(), { as: 'div' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarHeaderProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<RangeCalendarHeaderProps>(), { as: 'div' })\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarHeaderProps } from '..'\nimport { RangeCalendarHeader } from '..'\n\nexport interface DateRangePickerHeaderProps extends RangeCalendarHeaderProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerHeaderProps>()\n</script>\n\n<template>\n  <RangeCalendarHeader v-bind=\"props\">\n    <slot />\n  </RangeCalendarHeader>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarHeaderProps } from '..'\nimport { RangeCalendarHeader } from '..'\n\nexport interface DateRangePickerHeaderProps extends RangeCalendarHeaderProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerHeaderProps>()\n</script>\n\n<template>\n  <RangeCalendarHeader v-bind=\"props\">\n    <slot />\n  </RangeCalendarHeader>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarHeadingProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarHeadingProps>(), { as: 'div' })\ndefineSlots<{\n  default?: (props: {\n    /** Current month and year */\n    headingValue: string\n  }) => any\n}>()\nconst rootContext = injectRangeCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n  >\n    <slot :heading-value=\"rootContext.headingValue.value\">\n      {{ rootContext.headingValue.value }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarHeadingProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarHeadingProps>(), { as: 'div' })\ndefineSlots<{\n  default?: (props: {\n    /** Current month and year */\n    headingValue: string\n  }) => any\n}>()\nconst rootContext = injectRangeCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n  >\n    <slot :heading-value=\"rootContext.headingValue.value\">\n      {{ rootContext.headingValue.value }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarHeadingProps } from '..'\nimport { RangeCalendarHeading } from '..'\n\nexport interface DateRangePickerHeadingProps extends RangeCalendarHeadingProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerHeadingProps>()\ndefineSlots<{\n  default?: (props: {\n    /** Current month and year */\n    headingValue: string\n  }) => any\n}>()\n</script>\n\n<template>\n  <RangeCalendarHeading\n    v-slot=\"{ headingValue }\"\n    v-bind=\"props\"\n  >\n    <slot :heading-value=\"headingValue\">\n      {{ headingValue }}\n    </slot>\n  </RangeCalendarHeading>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarHeadingProps } from '..'\nimport { RangeCalendarHeading } from '..'\n\nexport interface DateRangePickerHeadingProps extends RangeCalendarHeadingProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerHeadingProps>()\ndefineSlots<{\n  default?: (props: {\n    /** Current month and year */\n    headingValue: string\n  }) => any\n}>()\n</script>\n\n<template>\n  <RangeCalendarHeading\n    v-slot=\"{ headingValue }\"\n    v-bind=\"props\"\n  >\n    <slot :heading-value=\"headingValue\">\n      {{ headingValue }}\n    </slot>\n  </RangeCalendarHeading>\n</template>\n", "<script lang=\"ts\">\nimport type { DateRangeFieldInputProps } from '..'\nimport { DateRangeFieldInput } from '..'\n\nexport interface DateRangePickerInputProps extends DateRangeFieldInputProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerInputProps>()\n</script>\n\n<template>\n  <DateRangeFieldInput v-bind=\"props\">\n    <slot />\n  </DateRangeFieldInput>\n</template>\n", "<script lang=\"ts\">\nimport type { DateRangeFieldInputProps } from '..'\nimport { DateRangeFieldInput } from '..'\n\nexport interface DateRangePickerInputProps extends DateRangeFieldInputProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerInputProps>()\n</script>\n\n<template>\n  <DateRangeFieldInput v-bind=\"props\">\n    <slot />\n  </DateRangeFieldInput>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarNextProps extends PrimitiveProps {\n  /** The function to be used for the next page. Overwrites the `nextPage` function set on the `RangeCalendarRoot`. */\n  nextPage?: (placeholder: DateValue) => DateValue\n}\n\nexport interface RangeCalendarNextSlot {\n  default?: (props: {\n    /** Current disable state */\n    disabled: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarNextProps>(), { as: 'button' })\ndefineSlots<RangeCalendarNextSlot>()\n\nconst disabled = computed(() => rootContext.disabled.value || rootContext.isNextButtonDisabled(props.nextPage))\n\nconst rootContext = injectRangeCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    aria-label=\"Next page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-disabled=\"disabled || undefined\"\n    :data-disabled=\"disabled || undefined\"\n    :disabled=\"disabled\"\n    @click=\"rootContext.nextPage(props.nextPage)\"\n  >\n    <slot :disabled>\n      Next page\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarNextProps extends PrimitiveProps {\n  /** The function to be used for the next page. Overwrites the `nextPage` function set on the `RangeCalendarRoot`. */\n  nextPage?: (placeholder: DateValue) => DateValue\n}\n\nexport interface RangeCalendarNextSlot {\n  default?: (props: {\n    /** Current disable state */\n    disabled: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarNextProps>(), { as: 'button' })\ndefineSlots<RangeCalendarNextSlot>()\n\nconst disabled = computed(() => rootContext.disabled.value || rootContext.isNextButtonDisabled(props.nextPage))\n\nconst rootContext = injectRangeCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    aria-label=\"Next page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-disabled=\"disabled || undefined\"\n    :data-disabled=\"disabled || undefined\"\n    :disabled=\"disabled\"\n    @click=\"rootContext.nextPage(props.nextPage)\"\n  >\n    <slot :disabled>\n      Next page\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarNextProps } from '..'\nimport type { RangeCalendarNextSlot } from '@/RangeCalendar/RangeCalendarNext.vue'\nimport { RangeCalendarNext } from '..'\n\nexport interface DateRangePickerNextProps extends RangeCalendarNextProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerNextProps>()\ndefineSlots<RangeCalendarNextSlot>()\n</script>\n\n<template>\n  <RangeCalendarNext\n    v-slot=\"slotProps \"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </RangeCalendarNext>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarNextProps } from '..'\nimport type { RangeCalendarNextSlot } from '@/RangeCalendar/RangeCalendarNext.vue'\nimport { RangeCalendarNext } from '..'\n\nexport interface DateRangePickerNextProps extends RangeCalendarNextProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerNextProps>()\ndefineSlots<RangeCalendarNextSlot>()\n</script>\n\n<template>\n  <RangeCalendarNext\n    v-slot=\"slotProps \"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </RangeCalendarNext>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarPrevProps extends PrimitiveProps {\n  /** The function to be used for the prev page. Overwrites the `prevPage` function set on the `RangeCalendarRoot`. */\n  prevPage?: (placeholder: DateValue) => DateValue\n}\n\nexport interface RangeCalendarPrevSlot {\n  default?: (props: {\n    /** Current disable state */\n    disabled: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarPrevProps>(), { as: 'button' })\ndefineSlots<RangeCalendarPrevSlot>()\n\nconst disabled = computed(() => rootContext.disabled.value || rootContext.isPrevButtonDisabled(props.prevPage))\n\nconst rootContext = injectRangeCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    aria-label=\"Previous page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-disabled=\"disabled || undefined\"\n    :data-disabled=\"disabled || undefined\"\n    :disabled=\"disabled\"\n    @click=\"rootContext.prevPage(props.prevPage)\"\n  >\n    <slot :disabled>\n      Prev page\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface RangeCalendarPrevProps extends PrimitiveProps {\n  /** The function to be used for the prev page. Overwrites the `prevPage` function set on the `RangeCalendarRoot`. */\n  prevPage?: (placeholder: DateValue) => DateValue\n}\n\nexport interface RangeCalendarPrevSlot {\n  default?: (props: {\n    /** Current disable state */\n    disabled: boolean\n  }) => any\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectRangeCalendarRootContext } from './RangeCalendarRoot.vue'\n\nconst props = withDefaults(defineProps<RangeCalendarPrevProps>(), { as: 'button' })\ndefineSlots<RangeCalendarPrevSlot>()\n\nconst disabled = computed(() => rootContext.disabled.value || rootContext.isPrevButtonDisabled(props.prevPage))\n\nconst rootContext = injectRangeCalendarRootContext()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    aria-label=\"Previous page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :aria-disabled=\"disabled || undefined\"\n    :data-disabled=\"disabled || undefined\"\n    :disabled=\"disabled\"\n    @click=\"rootContext.prevPage(props.prevPage)\"\n  >\n    <slot :disabled>\n      Prev page\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarPrevProps } from '..'\nimport type { RangeCalendarPrevSlot } from '@/RangeCalendar/RangeCalendarPrev.vue'\nimport { RangeCalendarPrev } from '..'\n\nexport interface DateRangePickerPrevProps extends RangeCalendarPrevProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerPrevProps>()\ndefineSlots<RangeCalendarPrevSlot>()\n</script>\n\n<template>\n  <RangeCalendarPrev\n    v-slot=\"slotProps \"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </RangeCalendarPrev>\n</template>\n", "<script lang=\"ts\">\nimport type { RangeCalendarPrevProps } from '..'\nimport type { RangeCalendarPrevSlot } from '@/RangeCalendar/RangeCalendarPrev.vue'\nimport { RangeCalendarPrev } from '..'\n\nexport interface DateRangePickerPrevProps extends RangeCalendarPrevProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerPrevProps>()\ndefineSlots<RangeCalendarPrevSlot>()\n</script>\n\n<template>\n  <RangeCalendarPrev\n    v-slot=\"slotProps \"\n    v-bind=\"props\"\n  >\n    <slot v-bind=\"slotProps\" />\n  </RangeCalendarPrev>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverTriggerProps } from '..'\nimport { PopoverTrigger } from '..'\nimport { injectDateRangePickerRootContext } from './DateRangePickerRoot.vue'\n\nexport interface DateRangePickerTriggerProps extends PopoverTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerTriggerProps>()\nconst rootContext = injectDateRangePickerRootContext()\n</script>\n\n<template>\n  <PopoverTrigger\n    data-reka-date-field-segment=\"trigger\"\n    v-bind=\"props\"\n    :disabled=\"rootContext.disabled.value\"\n    @focusin=\"(e: FocusEvent) => {\n      rootContext.dateFieldRef.value?.setFocusedElement(e.target as HTMLElement)\n    }\"\n  >\n    <slot />\n  </PopoverTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { PopoverTriggerProps } from '..'\nimport { PopoverTrigger } from '..'\nimport { injectDateRangePickerRootContext } from './DateRangePickerRoot.vue'\n\nexport interface DateRangePickerTriggerProps extends PopoverTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<DateRangePickerTriggerProps>()\nconst rootContext = injectDateRangePickerRootContext()\n</script>\n\n<template>\n  <PopoverTrigger\n    data-reka-date-field-segment=\"trigger\"\n    v-bind=\"props\"\n    :disabled=\"rootContext.disabled.value\"\n    @focusin=\"(e: FocusEvent) => {\n      rootContext.dateFieldRef.value?.setFocusedElement(e.target as HTMLElement)\n    }\"\n  >\n    <slot />\n  </PopoverTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuArrowProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuArrowProps extends MenuArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuArrow } from '@/Menu'\n\nconst props = withDefaults(defineProps<DropdownMenuArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuArrow v-bind=\"props\">\n    <slot />\n  </MenuArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuArrowProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuArrowProps extends MenuArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuArrow } from '@/Menu'\n\nconst props = withDefaults(defineProps<DropdownMenuArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuArrow v-bind=\"props\">\n    <slot />\n  </MenuArrow>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuCheckboxItemEmits,\n  MenuCheckboxItemProps,\n} from '@/Menu'\n\nexport type DropdownMenuCheckboxItemEmits = MenuCheckboxItemEmits\n\nexport interface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuCheckboxItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<DropdownMenuCheckboxItemProps>()\nconst emits = defineEmits<DropdownMenuCheckboxItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuCheckboxItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuCheckboxItem>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuCheckboxItemEmits,\n  MenuCheckboxItemProps,\n} from '@/Menu'\n\nexport type DropdownMenuCheckboxItemEmits = MenuCheckboxItemEmits\n\nexport interface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuCheckboxItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<DropdownMenuCheckboxItemProps>()\nconst emits = defineEmits<DropdownMenuCheckboxItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuCheckboxItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuCheckboxItem>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction } from '../shared/types'\nimport type { MenuEmits, MenuProps } from '@/Menu'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuRootProps extends MenuProps {\n  /** The open state of the dropdown menu when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n}\nexport type DropdownMenuRootEmits = MenuEmits\n\nexport interface DropdownMenuRootContext {\n  open: Readonly<Ref<boolean>>\n  onOpenChange: (open: boolean) => void\n  onOpenToggle: () => void\n  triggerId: string\n  triggerElement: Ref<HTMLElement | undefined>\n  contentId: string\n  modal: Ref<boolean>\n  dir: Ref<Direction>\n}\n\nexport const [injectDropdownMenuRootContext, provideDropdownMenuRootContext]\n  = createContext<DropdownMenuRootContext>('DropdownMenuRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { MenuRoot } from '@/Menu'\n\nconst props = withDefaults(defineProps<DropdownMenuRootProps>(), {\n  modal: true,\n  open: undefined,\n})\nconst emit = defineEmits<DropdownMenuRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst triggerElement = ref<HTMLElement>()\n\nconst { modal, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nprovideDropdownMenuRootContext({\n  open,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  onOpenToggle: () => {\n    open.value = !open.value\n  },\n  triggerId: '',\n  triggerElement,\n  contentId: '',\n  modal,\n  dir,\n})\n</script>\n\n<template>\n  <MenuRoot\n    v-model:open=\"open\"\n    :dir=\"dir\"\n    :modal=\"modal\"\n  >\n    <slot :open=\"open\" />\n  </MenuRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction } from '../shared/types'\nimport type { MenuEmits, MenuProps } from '@/Menu'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuRootProps extends MenuProps {\n  /** The open state of the dropdown menu when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n}\nexport type DropdownMenuRootEmits = MenuEmits\n\nexport interface DropdownMenuRootContext {\n  open: Readonly<Ref<boolean>>\n  onOpenChange: (open: boolean) => void\n  onOpenToggle: () => void\n  triggerId: string\n  triggerElement: Ref<HTMLElement | undefined>\n  contentId: string\n  modal: Ref<boolean>\n  dir: Ref<Direction>\n}\n\nexport const [injectDropdownMenuRootContext, provideDropdownMenuRootContext]\n  = createContext<DropdownMenuRootContext>('DropdownMenuRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { MenuRoot } from '@/Menu'\n\nconst props = withDefaults(defineProps<DropdownMenuRootProps>(), {\n  modal: true,\n  open: undefined,\n})\nconst emit = defineEmits<DropdownMenuRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst triggerElement = ref<HTMLElement>()\n\nconst { modal, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nprovideDropdownMenuRootContext({\n  open,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  onOpenToggle: () => {\n    open.value = !open.value\n  },\n  triggerId: '',\n  triggerElement,\n  contentId: '',\n  modal,\n  dir,\n})\n</script>\n\n<template>\n  <MenuRoot\n    v-model:open=\"open\"\n    :dir=\"dir\"\n    :modal=\"modal\"\n  >\n    <slot :open=\"open\" />\n  </MenuRoot>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuContentEmits,\n  MenuContentProps,\n} from '@/Menu'\n\nexport type DropdownMenuContentEmits = MenuContentEmits\n\nexport interface DropdownMenuContentProps extends MenuContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { MenuContent } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport { injectDropdownMenuRootContext } from './DropdownMenuRoot.vue'\n\nconst props = defineProps<DropdownMenuContentProps>()\nconst emits = defineEmits<DropdownMenuContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n\nconst rootContext = injectDropdownMenuRootContext()\n\nconst hasInteractedOutsideRef = ref(false)\n\nfunction handleCloseAutoFocus(event: Event) {\n  if (event.defaultPrevented)\n    return\n  if (!hasInteractedOutsideRef.value) {\n    setTimeout(() => {\n      rootContext.triggerElement.value?.focus()\n    }, 0)\n  }\n  hasInteractedOutsideRef.value = false\n\n  // Always prevent auto focus because we either focus manually or want user agent focus\n  event.preventDefault()\n}\n\nrootContext.contentId ||= useId(undefined, 'reka-dropdown-menu-content')\n</script>\n\n<template>\n  <MenuContent\n    v-bind=\"forwarded\"\n    :id=\"rootContext.contentId\"\n    :aria-labelledby=\"rootContext?.triggerId\"\n    :style=\"{\n      '--reka-dropdown-menu-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-dropdown-menu-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-dropdown-menu-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-dropdown-menu-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-dropdown-menu-trigger-height':\n        'var(--reka-popper-anchor-height)',\n    }\"\n    @close-auto-focus=\"handleCloseAutoFocus\"\n    @interact-outside=\"(event) => {\n      if (event.defaultPrevented) return\n\n      const originalEvent = event.detail.originalEvent as PointerEvent;\n      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n      if (!rootContext.modal.value || isRightClick) hasInteractedOutsideRef = true;\n      if (rootContext.triggerElement.value?.contains(event.target as HTMLElement)) event.preventDefault()\n    }\"\n  >\n    <slot />\n  </MenuContent>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuContentEmits,\n  MenuContentProps,\n} from '@/Menu'\n\nexport type DropdownMenuContentEmits = MenuContentEmits\n\nexport interface DropdownMenuContentProps extends MenuContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { MenuContent } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport { injectDropdownMenuRootContext } from './DropdownMenuRoot.vue'\n\nconst props = defineProps<DropdownMenuContentProps>()\nconst emits = defineEmits<DropdownMenuContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n\nconst rootContext = injectDropdownMenuRootContext()\n\nconst hasInteractedOutsideRef = ref(false)\n\nfunction handleCloseAutoFocus(event: Event) {\n  if (event.defaultPrevented)\n    return\n  if (!hasInteractedOutsideRef.value) {\n    setTimeout(() => {\n      rootContext.triggerElement.value?.focus()\n    }, 0)\n  }\n  hasInteractedOutsideRef.value = false\n\n  // Always prevent auto focus because we either focus manually or want user agent focus\n  event.preventDefault()\n}\n\nrootContext.contentId ||= useId(undefined, 'reka-dropdown-menu-content')\n</script>\n\n<template>\n  <MenuContent\n    v-bind=\"forwarded\"\n    :id=\"rootContext.contentId\"\n    :aria-labelledby=\"rootContext?.triggerId\"\n    :style=\"{\n      '--reka-dropdown-menu-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-dropdown-menu-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-dropdown-menu-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-dropdown-menu-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-dropdown-menu-trigger-height':\n        'var(--reka-popper-anchor-height)',\n    }\"\n    @close-auto-focus=\"handleCloseAutoFocus\"\n    @interact-outside=\"(event) => {\n      if (event.defaultPrevented) return\n\n      const originalEvent = event.detail.originalEvent as PointerEvent;\n      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n      if (!rootContext.modal.value || isRightClick) hasInteractedOutsideRef = true;\n      if (rootContext.triggerElement.value?.contains(event.target as HTMLElement)) event.preventDefault()\n    }\"\n  >\n    <slot />\n  </MenuContent>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuGroupProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuGroupProps extends MenuGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuGroup } from '@/Menu'\n\nconst props = defineProps<DropdownMenuGroupProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuGroup v-bind=\"props\">\n    <slot />\n  </MenuGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuGroupProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuGroupProps extends MenuGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuGroup } from '@/Menu'\n\nconst props = defineProps<DropdownMenuGroupProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuGroup v-bind=\"props\">\n    <slot />\n  </MenuGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemEmits, MenuItemProps } from '@/Menu'\n\nexport type DropdownMenuItemEmits = MenuItemEmits\n\nexport interface DropdownMenuItemProps extends MenuItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<DropdownMenuItemProps>()\nconst emits = defineEmits<DropdownMenuItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemEmits, MenuItemProps } from '@/Menu'\n\nexport type DropdownMenuItemEmits = MenuItemEmits\n\nexport interface DropdownMenuItemProps extends MenuItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<DropdownMenuItemProps>()\nconst emits = defineEmits<DropdownMenuItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemIndicatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItemIndicator } from '@/Menu'\n\nconst props = defineProps<DropdownMenuItemIndicatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItemIndicator v-bind=\"props\">\n    <slot />\n  </MenuItemIndicator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemIndicatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItemIndicator } from '@/Menu'\n\nconst props = defineProps<DropdownMenuItemIndicatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItemIndicator v-bind=\"props\">\n    <slot />\n  </MenuItemIndicator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuLabelProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuLabelProps extends MenuLabelProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuLabel } from '@/Menu'\n\nconst props = defineProps<DropdownMenuLabelProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuLabel v-bind=\"props\">\n    <slot />\n  </MenuLabel>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuLabelProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuLabelProps extends MenuLabelProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuLabel } from '@/Menu'\n\nconst props = defineProps<DropdownMenuLabelProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuLabel v-bind=\"props\">\n    <slot />\n  </MenuLabel>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuPortalProps } from '@/Menu'\n\nexport interface DropdownMenuPortalProps extends MenuPortalProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuPortal } from '@/Menu'\n\nconst props = defineProps<DropdownMenuPortalProps>()\n</script>\n\n<template>\n  <MenuPortal v-bind=\"props\">\n    <slot />\n  </MenuPortal>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuPortalProps } from '@/Menu'\n\nexport interface DropdownMenuPortalProps extends MenuPortalProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuPortal } from '@/Menu'\n\nconst props = defineProps<DropdownMenuPortalProps>()\n</script>\n\n<template>\n  <MenuPortal v-bind=\"props\">\n    <slot />\n  </MenuPortal>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioGroupEmits,\n  MenuRadioGroupProps,\n} from '@/Menu'\n\nexport type DropdownMenuRadioGroupEmits = MenuRadioGroupEmits\n\nexport interface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioGroup } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenuRadioGroupProps>()\nconst emits = defineEmits<MenuRadioGroupEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioGroup v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuRadioGroup>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioGroupEmits,\n  MenuRadioGroupProps,\n} from '@/Menu'\n\nexport type DropdownMenuRadioGroupEmits = MenuRadioGroupEmits\n\nexport interface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioGroup } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenuRadioGroupProps>()\nconst emits = defineEmits<MenuRadioGroupEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioGroup v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuRadioGroup>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioItemEmits,\n  MenuRadioItemProps,\n} from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nexport type DropdownMenuRadioItemEmits = MenuRadioItemEmits\n\nexport interface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioItem } from '@/Menu'\n\nconst props = defineProps<DropdownMenuRadioItemProps>()\nconst emits = defineEmits<DropdownMenuRadioItemEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioItem v-bind=\"forwarded\">\n    <slot />\n  </MenuRadioItem>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioItemEmits,\n  MenuRadioItemProps,\n} from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nexport type DropdownMenuRadioItemEmits = MenuRadioItemEmits\n\nexport interface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioItem } from '@/Menu'\n\nconst props = defineProps<DropdownMenuRadioItemProps>()\nconst emits = defineEmits<DropdownMenuRadioItemEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioItem v-bind=\"forwarded\">\n    <slot />\n  </MenuRadioItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSeparatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSeparator } from '@/Menu'\n\nconst props = defineProps<DropdownMenuSeparatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSeparator v-bind=\"props\">\n    <slot />\n  </MenuSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSeparatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSeparator } from '@/Menu'\n\nconst props = defineProps<DropdownMenuSeparatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSeparator v-bind=\"props\">\n    <slot />\n  </MenuSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuSubEmits, MenuSubProps } from '@/Menu'\n\nexport type DropdownMenuSubEmits = MenuSubEmits\nexport interface DropdownMenuSubProps extends MenuSubProps {\n  /** The open state of the dropdown menu when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { MenuSub } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = withDefaults(defineProps<DropdownMenuSubProps>(), {\n  open: undefined,\n})\nconst emit = defineEmits<DropdownMenuSubEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst open = useVModel(props, 'open', emit, {\n  passive: (props.open === undefined) as false,\n  defaultValue: props.defaultOpen ?? false,\n}) as Ref<boolean>\n\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSub v-model:open=\"open\">\n    <slot :open=\"open\" />\n  </MenuSub>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuSubEmits, MenuSubProps } from '@/Menu'\n\nexport type DropdownMenuSubEmits = MenuSubEmits\nexport interface DropdownMenuSubProps extends MenuSubProps {\n  /** The open state of the dropdown menu when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { MenuSub } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = withDefaults(defineProps<DropdownMenuSubProps>(), {\n  open: undefined,\n})\nconst emit = defineEmits<DropdownMenuSubEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst open = useVModel(props, 'open', emit, {\n  passive: (props.open === undefined) as false,\n  defaultValue: props.defaultOpen ?? false,\n}) as Ref<boolean>\n\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSub v-model:open=\"open\">\n    <slot :open=\"open\" />\n  </MenuSub>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuSubContentEmits,\n  MenuSubContentProps,\n} from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport type DropdownMenuSubContentEmits = MenuSubContentEmits\n\nexport interface DropdownMenuSubContentProps extends MenuSubContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubContent } from '@/Menu'\nimport { useForwardPropsEmits } from '..'\n\nconst props = defineProps<DropdownMenuSubContentProps>()\nconst emits = defineEmits<DropdownMenuSubContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubContent\n    v-bind=\"forwarded\"\n    :style=\"{\n      '--reka-dropdown-menu-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-dropdown-menu-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-dropdown-menu-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-dropdown-menu-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-dropdown-menu-trigger-height':\n        'var(--reka-popper-anchor-height)',\n    }\"\n  >\n    <slot />\n  </MenuSubContent>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuSubContentEmits,\n  MenuSubContentProps,\n} from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport type DropdownMenuSubContentEmits = MenuSubContentEmits\n\nexport interface DropdownMenuSubContentProps extends MenuSubContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubContent } from '@/Menu'\nimport { useForwardPropsEmits } from '..'\n\nconst props = defineProps<DropdownMenuSubContentProps>()\nconst emits = defineEmits<DropdownMenuSubContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubContent\n    v-bind=\"forwarded\"\n    :style=\"{\n      '--reka-dropdown-menu-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-dropdown-menu-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-dropdown-menu-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-dropdown-menu-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-dropdown-menu-trigger-height':\n        'var(--reka-popper-anchor-height)',\n    }\"\n  >\n    <slot />\n  </MenuSubContent>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSubTriggerProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubTrigger } from '@/Menu'\n\nconst props = defineProps<DropdownMenuSubTriggerProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubTrigger v-bind=\"props\">\n    <slot />\n  </MenuSubTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSubTriggerProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubTrigger } from '@/Menu'\n\nconst props = defineProps<DropdownMenuSubTriggerProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubTrigger v-bind=\"props\">\n    <slot />\n  </MenuSubTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\n\nexport interface DropdownMenuTriggerProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted } from 'vue'\nimport { MenuAnchor } from '@/Menu'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectDropdownMenuRootContext } from './DropdownMenuRoot.vue'\n\nconst props = withDefaults(defineProps<DropdownMenuTriggerProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectDropdownMenuRootContext()\n\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\n\nonMounted(() => {\n  rootContext.triggerElement = triggerElement\n})\n\nrootContext.triggerId ||= useId(undefined, 'reka-dropdown-menu-trigger')\n</script>\n\n<template>\n  <MenuAnchor as-child>\n    <Primitive\n      :id=\"rootContext.triggerId\"\n      :ref=\"forwardRef\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      aria-haspopup=\"menu\"\n      :aria-expanded=\"rootContext.open.value\"\n      :aria-controls=\"rootContext.open.value ? rootContext.contentId : undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :disabled=\"disabled\"\n      :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n      @click=\"\n        async (event) => {\n          // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n          // but not when the control key is pressed (avoiding MacOS right click)\n          if (!disabled && event.button === 0 && event.ctrlKey === false) {\n            rootContext?.onOpenToggle();\n            await nextTick()\n            // prevent trigger focusing when opening\n            // this allows the content to be given focus without competition\n            if (rootContext.open.value) event.preventDefault();\n          }\n        }\n      \"\n      @keydown.enter.space.arrow-down=\"\n        (event) => {\n          if (disabled) return;\n          if (['Enter', ' '].includes(event.key)) rootContext.onOpenToggle();\n          if (event.key === 'ArrowDown') rootContext.onOpenChange(true);\n          // prevent keydown from scrolling window / first focused item to execute\n          // that keydown (inadvertently closing the menu)\n          if (['Enter', ' ', 'ArrowDown'].includes(event.key))\n            event.preventDefault();\n        }\n      \"\n    >\n      <slot />\n    </Primitive>\n  </MenuAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\n\nexport interface DropdownMenuTriggerProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted } from 'vue'\nimport { MenuAnchor } from '@/Menu'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectDropdownMenuRootContext } from './DropdownMenuRoot.vue'\n\nconst props = withDefaults(defineProps<DropdownMenuTriggerProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectDropdownMenuRootContext()\n\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\n\nonMounted(() => {\n  rootContext.triggerElement = triggerElement\n})\n\nrootContext.triggerId ||= useId(undefined, 'reka-dropdown-menu-trigger')\n</script>\n\n<template>\n  <MenuAnchor as-child>\n    <Primitive\n      :id=\"rootContext.triggerId\"\n      :ref=\"forwardRef\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      aria-haspopup=\"menu\"\n      :aria-expanded=\"rootContext.open.value\"\n      :aria-controls=\"rootContext.open.value ? rootContext.contentId : undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :disabled=\"disabled\"\n      :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n      @click=\"\n        async (event) => {\n          // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n          // but not when the control key is pressed (avoiding MacOS right click)\n          if (!disabled && event.button === 0 && event.ctrlKey === false) {\n            rootContext?.onOpenToggle();\n            await nextTick()\n            // prevent trigger focusing when opening\n            // this allows the content to be given focus without competition\n            if (rootContext.open.value) event.preventDefault();\n          }\n        }\n      \"\n      @keydown.enter.space.arrow-down=\"\n        (event) => {\n          if (disabled) return;\n          if (['Enter', ' '].includes(event.key)) rootContext.onOpenToggle();\n          if (event.key === 'ArrowDown') rootContext.onOpenChange(true);\n          // prevent keydown from scrolling window / first focused item to execute\n          // that keydown (inadvertently closing the menu)\n          if (['Enter', ' ', 'ArrowDown'].includes(event.key))\n            event.preventDefault();\n        }\n      \"\n    >\n      <slot />\n    </Primitive>\n  </MenuAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { useFocusOutside, usePointerDownOutside } from '@/DismissableLayer'\nimport { createContext, useDirection, useFormControl } from '@/shared'\n\ntype ActivationMode = 'focus' | 'dblclick' | 'none'\ntype SubmitMode = 'blur' | 'enter' | 'none' | 'both'\n\ntype EditableRootContext = {\n  id: Ref<string | undefined>\n  name: Ref<string | undefined>\n  maxLength: Ref<number | undefined>\n  disabled: Ref<boolean>\n  modelValue: Ref<string | null | undefined>\n  inputValue: Ref<string | null | undefined>\n  placeholder: Ref<{ edit: string, preview: string }>\n  isEditing: Ref<boolean>\n  submitMode: Ref<SubmitMode>\n  activationMode: Ref<ActivationMode>\n  selectOnFocus: Ref<boolean>\n  edit: () => void\n  cancel: () => void\n  submit: () => void\n  inputRef: Ref<HTMLInputElement | undefined>\n  startWithEditMode: Ref<boolean>\n  isEmpty: Ref<boolean>\n  readonly: Ref<boolean>\n  autoResize: Ref<boolean>\n}\n\nexport interface EditableRootProps extends PrimitiveProps, FormFieldProps {\n  /** The default value of the editable field */\n  defaultValue?: string\n  /** The value of the editable field */\n  modelValue?: string | null\n  /** The placeholder for the editable field */\n  placeholder?: string | { edit: string, preview: string }\n  /** The reading direction of the calendar when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** Whether the editable field is disabled */\n  disabled?: boolean\n  /** Whether the editable field is read-only */\n  readonly?: boolean\n  /** The activation event of the editable field */\n  activationMode?: ActivationMode\n  /** Whether to select the text in the input when it is focused. */\n  selectOnFocus?: boolean\n  /** The submit event of the editable field */\n  submitMode?: SubmitMode\n  /** Whether to start with the edit mode active */\n  startWithEditMode?: boolean\n  /** The maximum number of characters allowed */\n  maxLength?: number\n  /** Whether the editable field should auto resize */\n  autoResize?: boolean\n  /** The id of the field */\n  id?: string\n}\n\nexport type EditableRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [value: string]\n  /** Event handler called when a value is submitted */\n  'submit': [value: string | null | undefined]\n  /** Event handler called when the editable field changes state */\n  'update:state': [state: 'edit' | 'submit' | 'cancel']\n}\n\nexport const [injectEditableRootContext, provideEditableRootContext]\n  = createContext<EditableRootContext>('EditableRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { computed, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<EditableRootProps>(), {\n  as: 'div',\n  disabled: false,\n  submitMode: 'blur',\n  activationMode: 'focus',\n  selectOnFocus: false,\n  placeholder: 'Enter text...',\n  autoResize: false,\n  required: false,\n})\n\nconst emits = defineEmits<EditableRootEmits>()\ndefineSlots<{\n  default?: (props: {\n    /** Whether the editable field is in edit mode */\n    isEditing: boolean\n    /** The value of the editable field */\n    modelValue: typeof modelValue.value\n    /** Whether the editable field is empty */\n    isEmpty: boolean\n    /** Function to submit the value of the editable */\n    submit: () => void\n    /** Function to cancel the value of the editable */\n    cancel: () => void\n    /** Function to set the editable in edit mode */\n    edit: () => void\n  }) => any\n}>()\n\nconst {\n  id,\n  name,\n  defaultValue,\n  startWithEditMode,\n  placeholder: propPlaceholder,\n  maxLength,\n  disabled,\n  dir: propDir,\n  submitMode,\n  activationMode,\n  selectOnFocus,\n  readonly,\n  autoResize,\n  required,\n} = toRefs(props)\n\nconst inputRef = ref<HTMLInputElement | undefined>()\nconst dir = useDirection(propDir)\nconst isEditing = ref(startWithEditMode.value ?? false)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value ?? '',\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst isFormControl = useFormControl(currentElement)\n\nconst placeholder = computed(() => {\n  return typeof propPlaceholder.value === 'string' ? { edit: propPlaceholder.value, preview: propPlaceholder.value } : propPlaceholder.value\n})\n\nconst inputValue = ref(modelValue.value)\n\nwatch(() => modelValue.value, () => {\n  inputValue.value = modelValue.value\n}, { immediate: true, deep: true })\n\nfunction cancel() {\n  isEditing.value = false\n  emits('update:state', 'cancel')\n}\n\nfunction edit() {\n  isEditing.value = true\n  inputValue.value = modelValue.value\n\n  emits('update:state', 'edit')\n}\n\nfunction submit() {\n  modelValue.value = inputValue.value\n  isEditing.value = false\n\n  emits('update:state', 'submit')\n  emits('submit', modelValue.value)\n}\n\nfunction handleDismiss() {\n  if (isEditing.value) {\n    if (submitMode.value === 'blur' || submitMode.value === 'both')\n      submit()\n    else\n      cancel()\n  }\n}\n\nconst pointerDownOutside = usePointerDownOutside(() => handleDismiss(), currentElement, isEditing)\nconst focusOutside = useFocusOutside(() => handleDismiss(), currentElement, isEditing)\n\nconst isEmpty = computed(() => modelValue.value === '')\n\ndefineExpose({\n  /** Function to submit the value of the editable */\n  submit,\n  /** Function to cancel the value of the editable */\n  cancel,\n  /** Function to set the editable in edit mode */\n  edit,\n})\n\nprovideEditableRootContext({\n  id,\n  name,\n  disabled,\n  isEditing,\n  maxLength,\n  modelValue,\n  inputValue,\n  placeholder,\n  edit,\n  cancel,\n  submit,\n  activationMode,\n  submitMode,\n  selectOnFocus,\n  inputRef,\n  startWithEditMode,\n  isEmpty,\n  readonly,\n  autoResize,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :dir=\"dir\"\n    data-dismissable-layer\n    @focus.capture=\"focusOutside.onFocusCapture\"\n    @blur.capture=\"focusOutside.onBlurCapture\"\n    @pointerdown.capture=\"pointerDownOutside.onPointerDownCapture\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :is-editing=\"isEditing\"\n      :is-empty=\"isEmpty\"\n      :submit=\"submit\"\n      :cancel=\"cancel\"\n      :edit=\"edit\"\n    />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { useFocusOutside, usePointerDownOutside } from '@/DismissableLayer'\nimport { createContext, useDirection, useFormControl } from '@/shared'\n\ntype ActivationMode = 'focus' | 'dblclick' | 'none'\ntype SubmitMode = 'blur' | 'enter' | 'none' | 'both'\n\ntype EditableRootContext = {\n  id: Ref<string | undefined>\n  name: Ref<string | undefined>\n  maxLength: Ref<number | undefined>\n  disabled: Ref<boolean>\n  modelValue: Ref<string | null | undefined>\n  inputValue: Ref<string | null | undefined>\n  placeholder: Ref<{ edit: string, preview: string }>\n  isEditing: Ref<boolean>\n  submitMode: Ref<SubmitMode>\n  activationMode: Ref<ActivationMode>\n  selectOnFocus: Ref<boolean>\n  edit: () => void\n  cancel: () => void\n  submit: () => void\n  inputRef: Ref<HTMLInputElement | undefined>\n  startWithEditMode: Ref<boolean>\n  isEmpty: Ref<boolean>\n  readonly: Ref<boolean>\n  autoResize: Ref<boolean>\n}\n\nexport interface EditableRootProps extends PrimitiveProps, FormFieldProps {\n  /** The default value of the editable field */\n  defaultValue?: string\n  /** The value of the editable field */\n  modelValue?: string | null\n  /** The placeholder for the editable field */\n  placeholder?: string | { edit: string, preview: string }\n  /** The reading direction of the calendar when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** Whether the editable field is disabled */\n  disabled?: boolean\n  /** Whether the editable field is read-only */\n  readonly?: boolean\n  /** The activation event of the editable field */\n  activationMode?: ActivationMode\n  /** Whether to select the text in the input when it is focused. */\n  selectOnFocus?: boolean\n  /** The submit event of the editable field */\n  submitMode?: SubmitMode\n  /** Whether to start with the edit mode active */\n  startWithEditMode?: boolean\n  /** The maximum number of characters allowed */\n  maxLength?: number\n  /** Whether the editable field should auto resize */\n  autoResize?: boolean\n  /** The id of the field */\n  id?: string\n}\n\nexport type EditableRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [value: string]\n  /** Event handler called when a value is submitted */\n  'submit': [value: string | null | undefined]\n  /** Event handler called when the editable field changes state */\n  'update:state': [state: 'edit' | 'submit' | 'cancel']\n}\n\nexport const [injectEditableRootContext, provideEditableRootContext]\n  = createContext<EditableRootContext>('EditableRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { computed, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<EditableRootProps>(), {\n  as: 'div',\n  disabled: false,\n  submitMode: 'blur',\n  activationMode: 'focus',\n  selectOnFocus: false,\n  placeholder: 'Enter text...',\n  autoResize: false,\n  required: false,\n})\n\nconst emits = defineEmits<EditableRootEmits>()\ndefineSlots<{\n  default?: (props: {\n    /** Whether the editable field is in edit mode */\n    isEditing: boolean\n    /** The value of the editable field */\n    modelValue: typeof modelValue.value\n    /** Whether the editable field is empty */\n    isEmpty: boolean\n    /** Function to submit the value of the editable */\n    submit: () => void\n    /** Function to cancel the value of the editable */\n    cancel: () => void\n    /** Function to set the editable in edit mode */\n    edit: () => void\n  }) => any\n}>()\n\nconst {\n  id,\n  name,\n  defaultValue,\n  startWithEditMode,\n  placeholder: propPlaceholder,\n  maxLength,\n  disabled,\n  dir: propDir,\n  submitMode,\n  activationMode,\n  selectOnFocus,\n  readonly,\n  autoResize,\n  required,\n} = toRefs(props)\n\nconst inputRef = ref<HTMLInputElement | undefined>()\nconst dir = useDirection(propDir)\nconst isEditing = ref(startWithEditMode.value ?? false)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value ?? '',\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst isFormControl = useFormControl(currentElement)\n\nconst placeholder = computed(() => {\n  return typeof propPlaceholder.value === 'string' ? { edit: propPlaceholder.value, preview: propPlaceholder.value } : propPlaceholder.value\n})\n\nconst inputValue = ref(modelValue.value)\n\nwatch(() => modelValue.value, () => {\n  inputValue.value = modelValue.value\n}, { immediate: true, deep: true })\n\nfunction cancel() {\n  isEditing.value = false\n  emits('update:state', 'cancel')\n}\n\nfunction edit() {\n  isEditing.value = true\n  inputValue.value = modelValue.value\n\n  emits('update:state', 'edit')\n}\n\nfunction submit() {\n  modelValue.value = inputValue.value\n  isEditing.value = false\n\n  emits('update:state', 'submit')\n  emits('submit', modelValue.value)\n}\n\nfunction handleDismiss() {\n  if (isEditing.value) {\n    if (submitMode.value === 'blur' || submitMode.value === 'both')\n      submit()\n    else\n      cancel()\n  }\n}\n\nconst pointerDownOutside = usePointerDownOutside(() => handleDismiss(), currentElement, isEditing)\nconst focusOutside = useFocusOutside(() => handleDismiss(), currentElement, isEditing)\n\nconst isEmpty = computed(() => modelValue.value === '')\n\ndefineExpose({\n  /** Function to submit the value of the editable */\n  submit,\n  /** Function to cancel the value of the editable */\n  cancel,\n  /** Function to set the editable in edit mode */\n  edit,\n})\n\nprovideEditableRootContext({\n  id,\n  name,\n  disabled,\n  isEditing,\n  maxLength,\n  modelValue,\n  inputValue,\n  placeholder,\n  edit,\n  cancel,\n  submit,\n  activationMode,\n  submitMode,\n  selectOnFocus,\n  inputRef,\n  startWithEditMode,\n  isEmpty,\n  readonly,\n  autoResize,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :dir=\"dir\"\n    data-dismissable-layer\n    @focus.capture=\"focusOutside.onFocusCapture\"\n    @blur.capture=\"focusOutside.onBlurCapture\"\n    @pointerdown.capture=\"pointerDownOutside.onPointerDownCapture\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :is-editing=\"isEditing\"\n      :is-empty=\"isEmpty\"\n      :submit=\"submit\"\n      :cancel=\"cancel\"\n      :edit=\"edit\"\n    />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nexport interface EditableAreaProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<EditableAreaProps>(), { as: 'div' })\n\nconst context = injectEditableRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :data-placeholder-shown=\"context.isEditing.value ? undefined : ''\"\n    :data-focus=\"context.isEditing.value ? '' : undefined\"\n    :data-focused=\"context.isEditing.value ? '' : undefined\"\n    :data-empty=\"context.isEmpty.value ? '' : undefined\"\n    :data-readonly=\"context.readonly.value ? '' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    :style=\"context.autoResize.value ? { display: 'inline-grid' } : undefined\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nexport interface EditableAreaProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<EditableAreaProps>(), { as: 'div' })\n\nconst context = injectEditableRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :data-placeholder-shown=\"context.isEditing.value ? undefined : ''\"\n    :data-focus=\"context.isEditing.value ? '' : undefined\"\n    :data-focused=\"context.isEditing.value ? '' : undefined\"\n    :data-empty=\"context.isEmpty.value ? '' : undefined\"\n    :data-readonly=\"context.readonly.value ? '' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    :style=\"context.autoResize.value ? { display: 'inline-grid' } : undefined\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface EditableCancelTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nconst props = withDefaults(defineProps<EditableCancelTriggerProps>(), { as: 'button' })\n\nconst context = injectEditableRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"cancel\"\n    :aria-disabled=\"context.disabled.value ? '' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    :disabled=\"context.disabled.value\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :hidden=\"context.isEditing.value ? undefined : ''\"\n    @click=\"context.cancel\"\n  >\n    <slot>Cancel</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface EditableCancelTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nconst props = withDefaults(defineProps<EditableCancelTriggerProps>(), { as: 'button' })\n\nconst context = injectEditableRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"cancel\"\n    :aria-disabled=\"context.disabled.value ? '' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    :disabled=\"context.disabled.value\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :hidden=\"context.isEditing.value ? undefined : ''\"\n    @click=\"context.cancel\"\n  >\n    <slot>Cancel</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface EditableEditTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nconst props = withDefaults(defineProps<EditableEditTriggerProps>(), { as: 'button' })\n\nconst context = injectEditableRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"edit\"\n    :aria-disabled=\"context.disabled.value ? '' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    :disabled=\"context.disabled.value\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :hidden=\"context.isEditing.value ? '' : undefined\"\n    @click=\"context.edit\"\n  >\n    <slot>Edit</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface EditableEditTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nconst props = withDefaults(defineProps<EditableEditTriggerProps>(), { as: 'button' })\n\nconst context = injectEditableRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"edit\"\n    :aria-disabled=\"context.disabled.value ? '' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    :disabled=\"context.disabled.value\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :hidden=\"context.isEditing.value ? '' : undefined\"\n    @click=\"context.edit\"\n  >\n    <slot>Edit</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nexport interface EditableInputProps extends PrimitiveProps {\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, onMounted, watch } from 'vue'\nimport { useKbd } from '@/shared'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nconst props = withDefaults(defineProps<EditableInputProps>(), {\n  as: 'input',\n})\n\nconst kbd = useKbd()\n\nconst context = injectEditableRootContext()\n\nconst disabled = computed(() => context.disabled.value)\n\nconst placeholder = computed(() => context.placeholder.value?.edit)\n\nconst { primitiveElement, currentElement: inputRef } = usePrimitiveElement()\n\nonMounted(() => {\n  context.inputRef.value = inputRef.value as HTMLInputElement\n  if (context.startWithEditMode.value) {\n    context.inputRef.value?.focus({ preventScroll: true })\n    if (context.selectOnFocus.value)\n      context.inputRef.value?.select()\n  }\n})\n\nwatch(context.isEditing, (value) => {\n  if (value) {\n    nextTick(() => {\n      context.inputRef.value?.focus({ preventScroll: true })\n      if (context.selectOnFocus.value)\n        context.inputRef.value?.select()\n    })\n  }\n})\n\nfunction handleSubmitKeyDown(event: KeyboardEvent) {\n  if ((context.submitMode.value === 'enter' || context.submitMode.value === 'both') && event.key === kbd.ENTER && !event.shiftKey && !event.metaKey)\n    context.submit()\n}\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    v-bind=\"props\"\n    :value=\"context.inputValue.value\"\n    :placeholder=\"placeholder\"\n    :disabled=\"disabled\"\n    :maxlength=\"context.maxLength.value\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"context.readonly.value ? '' : undefined\"\n    :readonly=\"context.readonly.value\"\n    aria-label=\"editable input\"\n    :hidden=\"context.autoResize.value ? undefined : !context.isEditing.value\"\n    :style=\"context.autoResize.value ? { all: 'unset', gridArea: '1 / 1 / auto / auto', visibility: !context.isEditing.value ? 'hidden' : undefined } : undefined\"\n    @input=\"context.inputValue.value = $event.target.value\"\n    @keydown.enter.space=\"handleSubmitKeyDown\"\n    @keydown.esc=\"context.cancel\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nexport interface EditableInputProps extends PrimitiveProps {\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, onMounted, watch } from 'vue'\nimport { useKbd } from '@/shared'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nconst props = withDefaults(defineProps<EditableInputProps>(), {\n  as: 'input',\n})\n\nconst kbd = useKbd()\n\nconst context = injectEditableRootContext()\n\nconst disabled = computed(() => context.disabled.value)\n\nconst placeholder = computed(() => context.placeholder.value?.edit)\n\nconst { primitiveElement, currentElement: inputRef } = usePrimitiveElement()\n\nonMounted(() => {\n  context.inputRef.value = inputRef.value as HTMLInputElement\n  if (context.startWithEditMode.value) {\n    context.inputRef.value?.focus({ preventScroll: true })\n    if (context.selectOnFocus.value)\n      context.inputRef.value?.select()\n  }\n})\n\nwatch(context.isEditing, (value) => {\n  if (value) {\n    nextTick(() => {\n      context.inputRef.value?.focus({ preventScroll: true })\n      if (context.selectOnFocus.value)\n        context.inputRef.value?.select()\n    })\n  }\n})\n\nfunction handleSubmitKeyDown(event: KeyboardEvent) {\n  if ((context.submitMode.value === 'enter' || context.submitMode.value === 'both') && event.key === kbd.ENTER && !event.shiftKey && !event.metaKey)\n    context.submit()\n}\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    v-bind=\"props\"\n    :value=\"context.inputValue.value\"\n    :placeholder=\"placeholder\"\n    :disabled=\"disabled\"\n    :maxlength=\"context.maxLength.value\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"context.readonly.value ? '' : undefined\"\n    :readonly=\"context.readonly.value\"\n    aria-label=\"editable input\"\n    :hidden=\"context.autoResize.value ? undefined : !context.isEditing.value\"\n    :style=\"context.autoResize.value ? { all: 'unset', gridArea: '1 / 1 / auto / auto', visibility: !context.isEditing.value ? 'hidden' : undefined } : undefined\"\n    @input=\"context.inputValue.value = $event.target.value\"\n    @keydown.enter.space=\"handleSubmitKeyDown\"\n    @keydown.esc=\"context.cancel\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nexport interface EditablePreviewProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<EditablePreviewProps>(), { as: 'span' })\n\nconst context = injectEditableRootContext()\n\nconst placeholder = computed(() => context.placeholder.value?.preview)\n\nfunction handleFocus() {\n  if (context.activationMode.value === 'focus')\n    context.edit()\n}\nfunction handleDoubleClick() {\n  if (context.activationMode.value === 'dblclick')\n    context.edit()\n}\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    tabindex=\"0\"\n    :data-placeholder-shown=\"context.isEditing.value ? undefined : ''\"\n    :hidden=\"context.autoResize.value ? undefined : context.isEditing.value\"\n    :style=\"context.autoResize.value ? {\n      whiteSpace: 'pre',\n      userSelect: 'none',\n      gridArea: '1 / 1 / auto / auto',\n      visibility: context.isEditing.value ? 'hidden' : undefined,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n    } : undefined\"\n    @focusin=\"handleFocus\"\n    @dblclick=\"handleDoubleClick\"\n  >\n    <slot>\n      {{ context.modelValue.value || placeholder }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nexport interface EditablePreviewProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<EditablePreviewProps>(), { as: 'span' })\n\nconst context = injectEditableRootContext()\n\nconst placeholder = computed(() => context.placeholder.value?.preview)\n\nfunction handleFocus() {\n  if (context.activationMode.value === 'focus')\n    context.edit()\n}\nfunction handleDoubleClick() {\n  if (context.activationMode.value === 'dblclick')\n    context.edit()\n}\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    tabindex=\"0\"\n    :data-placeholder-shown=\"context.isEditing.value ? undefined : ''\"\n    :hidden=\"context.autoResize.value ? undefined : context.isEditing.value\"\n    :style=\"context.autoResize.value ? {\n      whiteSpace: 'pre',\n      userSelect: 'none',\n      gridArea: '1 / 1 / auto / auto',\n      visibility: context.isEditing.value ? 'hidden' : undefined,\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n    } : undefined\"\n    @focusin=\"handleFocus\"\n    @dblclick=\"handleDoubleClick\"\n  >\n    <slot>\n      {{ context.modelValue.value || placeholder }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface EditableSubmitTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nconst props = withDefaults(defineProps<EditableSubmitTriggerProps>(), { as: 'button' })\n\nconst context = injectEditableRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"submit\"\n    :aria-disabled=\"context.disabled.value ? '' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    :disabled=\"context.disabled.value\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :hidden=\"context.isEditing.value ? undefined : ''\"\n    @click=\"context.submit\"\n  >\n    <slot>Submit</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface EditableSubmitTriggerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectEditableRootContext } from './EditableRoot.vue'\n\nconst props = withDefaults(defineProps<EditableSubmitTriggerProps>(), { as: 'button' })\n\nconst context = injectEditableRootContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"submit\"\n    :aria-disabled=\"context.disabled.value ? '' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    :disabled=\"context.disabled.value\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :hidden=\"context.isEditing.value ? undefined : ''\"\n    @click=\"context.submit\"\n  >\n    <slot>Submit</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\nimport { useForwardExpose } from '@/shared'\n\nexport interface HoverCardArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\n\nconst props = withDefaults(defineProps<HoverCardArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <PopperArrow v-bind=\"props\">\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\nimport { useForwardExpose } from '@/shared'\n\nexport interface HoverCardArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\n\nconst props = withDefaults(defineProps<HoverCardArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <PopperArrow v-bind=\"props\">\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface HoverCardRootProps {\n  /** The open state of the hover card when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /** The controlled open state of the hover card. Can be binded as `v-model:open`. */\n  open?: boolean\n  /** The duration from when the mouse enters the trigger until the hover card opens. */\n  openDelay?: number\n  /** The duration from when the mouse leaves the trigger or content until the hover card closes. */\n  closeDelay?: number\n}\nexport type HoverCardRootEmits = {\n  /** Event handler called when the open state of the hover card changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface HoverCardRootContext {\n  open: Ref<boolean>\n  onOpenChange: (open: boolean) => void\n  onOpen: () => void\n  onClose: () => void\n  onDismiss: () => void\n  hasSelectionRef: Ref<boolean>\n  isPointerDownOnContentRef: Ref<boolean>\n  isPointerInTransitRef: Ref<boolean>\n  triggerElement: Ref<HTMLElement | undefined>\n}\n\nexport const [injectHoverCardRootContext, provideHoverCardRootContext]\n  = createContext<HoverCardRootContext>('HoverCardRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { PopperRoot } from '@/Popper'\n\nconst props = withDefaults(defineProps<HoverCardRootProps>(), {\n  defaultOpen: false,\n  open: undefined,\n  openDelay: 700,\n  closeDelay: 300,\n})\nconst emit = defineEmits<HoverCardRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst { openDelay, closeDelay } = toRefs(props)\n\nuseForwardExpose()\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst openTimerRef = ref(0)\nconst closeTimerRef = ref(0)\nconst hasSelectionRef = ref(false)\nconst isPointerDownOnContentRef = ref(false)\nconst isPointerInTransitRef = ref(false)\nconst triggerElement = ref<HTMLElement>()\n\nfunction handleOpen() {\n  clearTimeout(closeTimerRef.value)\n  openTimerRef.value = window.setTimeout(() => open.value = true, openDelay.value)\n}\n\nfunction handleClose() {\n  clearTimeout(openTimerRef.value)\n  if (!hasSelectionRef.value && !isPointerDownOnContentRef.value)\n    closeTimerRef.value = window.setTimeout(() => open.value = false, closeDelay.value)\n}\n\nfunction handleDismiss() {\n  open.value = false\n}\n\nprovideHoverCardRootContext({\n  open,\n  onOpenChange(value) {\n    open.value = value\n  },\n  onOpen: handleOpen,\n  onClose: handleClose,\n  onDismiss: handleDismiss,\n  hasSelectionRef,\n  isPointerDownOnContentRef,\n  isPointerInTransitRef,\n  triggerElement,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot :open=\"open\" />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface HoverCardRootProps {\n  /** The open state of the hover card when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /** The controlled open state of the hover card. Can be binded as `v-model:open`. */\n  open?: boolean\n  /** The duration from when the mouse enters the trigger until the hover card opens. */\n  openDelay?: number\n  /** The duration from when the mouse leaves the trigger or content until the hover card closes. */\n  closeDelay?: number\n}\nexport type HoverCardRootEmits = {\n  /** Event handler called when the open state of the hover card changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface HoverCardRootContext {\n  open: Ref<boolean>\n  onOpenChange: (open: boolean) => void\n  onOpen: () => void\n  onClose: () => void\n  onDismiss: () => void\n  hasSelectionRef: Ref<boolean>\n  isPointerDownOnContentRef: Ref<boolean>\n  isPointerInTransitRef: Ref<boolean>\n  triggerElement: Ref<HTMLElement | undefined>\n}\n\nexport const [injectHoverCardRootContext, provideHoverCardRootContext]\n  = createContext<HoverCardRootContext>('HoverCardRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { PopperRoot } from '@/Popper'\n\nconst props = withDefaults(defineProps<HoverCardRootProps>(), {\n  defaultOpen: false,\n  open: undefined,\n  openDelay: 700,\n  closeDelay: 300,\n})\nconst emit = defineEmits<HoverCardRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst { openDelay, closeDelay } = toRefs(props)\n\nuseForwardExpose()\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst openTimerRef = ref(0)\nconst closeTimerRef = ref(0)\nconst hasSelectionRef = ref(false)\nconst isPointerDownOnContentRef = ref(false)\nconst isPointerInTransitRef = ref(false)\nconst triggerElement = ref<HTMLElement>()\n\nfunction handleOpen() {\n  clearTimeout(closeTimerRef.value)\n  openTimerRef.value = window.setTimeout(() => open.value = true, openDelay.value)\n}\n\nfunction handleClose() {\n  clearTimeout(openTimerRef.value)\n  if (!hasSelectionRef.value && !isPointerDownOnContentRef.value)\n    closeTimerRef.value = window.setTimeout(() => open.value = false, closeDelay.value)\n}\n\nfunction handleDismiss() {\n  open.value = false\n}\n\nprovideHoverCardRootContext({\n  open,\n  onOpenChange(value) {\n    open.value = value\n  },\n  onOpen: handleOpen,\n  onClose: handleClose,\n  onDismiss: handleDismiss,\n  hasSelectionRef,\n  isPointerDownOnContentRef,\n  isPointerInTransitRef,\n  triggerElement,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot :open=\"open\" />\n  </PopperRoot>\n</template>\n", "export function excludeTouch(eventHandler: () => void) {\n  return (event: PointerEvent) => event.pointerType === 'touch' ? undefined : eventHandler()\n}\n\n/**\n * Returns a list of nodes that can be in the tab sequence.\n * @see: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n */\nexport function getTabbableNodes(container: HTMLElement) {\n  const nodes: HTMLElement[] = []\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP\n    },\n  })\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement)\n  return nodes\n}\n", "<script lang=\"ts\">\nimport type { DismissableLayerEmits } from '@/DismissableLayer'\nimport type { PopperContentProps } from '@/Popper'\nimport { syncRef } from '@vueuse/shared'\nimport { useForwardExpose, useGraceArea } from '@/shared'\n\nexport type HoverCardContentImplEmits = DismissableLayerEmits\nexport interface HoverCardContentImplProps extends PopperContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted, onUnmounted, ref, watchEffect } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { PopperContent } from '@/Popper'\nimport { useForwardProps } from '..'\nimport { injectHoverCardRootContext } from './HoverCardRoot.vue'\nimport { getTabbableNodes } from './utils'\n\nconst props = defineProps<HoverCardContentImplProps>()\nconst emits = defineEmits<HoverCardContentImplEmits>()\nconst forwarded = useForwardProps(props)\n\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\nconst rootContext = injectHoverCardRootContext()\nconst { isPointerInTransit, onPointerExit } = useGraceArea(rootContext.triggerElement, contentElement)\n\nsyncRef(rootContext.isPointerInTransitRef, isPointerInTransit, { direction: 'rtl' })\n\nonPointerExit(() => {\n  rootContext.onClose()\n})\n\nconst containSelection = ref(false)\n\nlet originalBodyUserSelect: string\nwatchEffect((cleanupFn) => {\n  if (containSelection.value) {\n    const body = document.body\n\n    // Safari requires prefix\n    originalBodyUserSelect = body.style.userSelect || body.style.webkitUserSelect\n\n    body.style.userSelect = 'none'\n    body.style.webkitUserSelect = 'none'\n\n    cleanupFn(() => {\n      body.style.userSelect = originalBodyUserSelect\n      body.style.webkitUserSelect = originalBodyUserSelect\n    })\n  }\n})\n\nfunction handlePointerUp() {\n  containSelection.value = false\n  rootContext.isPointerDownOnContentRef.value = false\n\n  // Delay a frame to ensure we always access the latest selection\n  nextTick(() => {\n    const hasSelection = document.getSelection()?.toString() !== ''\n    if (hasSelection)\n      rootContext.hasSelectionRef.value = true\n  })\n}\nonMounted(() => {\n  if (contentElement.value) {\n    document.addEventListener('pointerup', handlePointerUp)\n\n    const tabbables = getTabbableNodes(contentElement.value)\n    tabbables.forEach(tabbable => tabbable.setAttribute('tabindex', '-1'))\n  }\n})\n\nonUnmounted(() => {\n  document.removeEventListener('pointerup', handlePointerUp)\n  rootContext.hasSelectionRef.value = false\n  rootContext.isPointerDownOnContentRef.value = false\n})\n</script>\n\n<template>\n  <DismissableLayer\n    as-child\n    :disable-outside-pointer-events=\"false\"\n    @escape-key-down=\"emits('escapeKeyDown', $event)\"\n    @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n    @focus-outside.prevent=\"emits('focusOutside', $event)\"\n    @dismiss=\"rootContext.onDismiss\"\n  >\n    <PopperContent\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      :ref=\"forwardRef\"\n      :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n      :style=\"{\n        'userSelect': containSelection ? 'text' : undefined,\n        // Safari requires prefix\n        'WebkitUserSelect': containSelection ? 'text' : undefined,\n        // re-namespace exposed content custom properties\n        '--reka-hover-card-content-transform-origin': 'var(--reka-popper-transform-origin)',\n        '--reka-hover-card-content-available-width': 'var(--reka-popper-available-width)',\n        '--reka-hover-card-content-available-height': 'var(--reka-popper-available-height)',\n        '--reka-hover-card-trigger-width': 'var(--reka-popper-anchor-width)',\n        '--reka-hover-card-trigger-height': 'var(--reka-popper-anchor-height)',\n      }\"\n      @pointerdown=\"(event: PointerEvent) => {\n        // Contain selection to current layer\n        if ((event.currentTarget as HTMLElement).contains(event.target as HTMLElement)) {\n          containSelection = true\n        }\n        rootContext.hasSelectionRef.value = false;\n        rootContext.isPointerDownOnContentRef.value = true;\n      }\"\n    >\n      <slot />\n    </PopperContent>\n  </DismissableLayer>\n</template>\n", "<script lang=\"ts\">\nimport type { DismissableLayerEmits } from '@/DismissableLayer'\nimport type { PopperContentProps } from '@/Popper'\nimport { syncRef } from '@vueuse/shared'\nimport { useForwardExpose, useGraceArea } from '@/shared'\n\nexport type HoverCardContentImplEmits = DismissableLayerEmits\nexport interface HoverCardContentImplProps extends PopperContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted, onUnmounted, ref, watchEffect } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { PopperContent } from '@/Popper'\nimport { useForwardProps } from '..'\nimport { injectHoverCardRootContext } from './HoverCardRoot.vue'\nimport { getTabbableNodes } from './utils'\n\nconst props = defineProps<HoverCardContentImplProps>()\nconst emits = defineEmits<HoverCardContentImplEmits>()\nconst forwarded = useForwardProps(props)\n\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\nconst rootContext = injectHoverCardRootContext()\nconst { isPointerInTransit, onPointerExit } = useGraceArea(rootContext.triggerElement, contentElement)\n\nsyncRef(rootContext.isPointerInTransitRef, isPointerInTransit, { direction: 'rtl' })\n\nonPointerExit(() => {\n  rootContext.onClose()\n})\n\nconst containSelection = ref(false)\n\nlet originalBodyUserSelect: string\nwatchEffect((cleanupFn) => {\n  if (containSelection.value) {\n    const body = document.body\n\n    // Safari requires prefix\n    originalBodyUserSelect = body.style.userSelect || body.style.webkitUserSelect\n\n    body.style.userSelect = 'none'\n    body.style.webkitUserSelect = 'none'\n\n    cleanupFn(() => {\n      body.style.userSelect = originalBodyUserSelect\n      body.style.webkitUserSelect = originalBodyUserSelect\n    })\n  }\n})\n\nfunction handlePointerUp() {\n  containSelection.value = false\n  rootContext.isPointerDownOnContentRef.value = false\n\n  // Delay a frame to ensure we always access the latest selection\n  nextTick(() => {\n    const hasSelection = document.getSelection()?.toString() !== ''\n    if (hasSelection)\n      rootContext.hasSelectionRef.value = true\n  })\n}\nonMounted(() => {\n  if (contentElement.value) {\n    document.addEventListener('pointerup', handlePointerUp)\n\n    const tabbables = getTabbableNodes(contentElement.value)\n    tabbables.forEach(tabbable => tabbable.setAttribute('tabindex', '-1'))\n  }\n})\n\nonUnmounted(() => {\n  document.removeEventListener('pointerup', handlePointerUp)\n  rootContext.hasSelectionRef.value = false\n  rootContext.isPointerDownOnContentRef.value = false\n})\n</script>\n\n<template>\n  <DismissableLayer\n    as-child\n    :disable-outside-pointer-events=\"false\"\n    @escape-key-down=\"emits('escapeKeyDown', $event)\"\n    @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n    @focus-outside.prevent=\"emits('focusOutside', $event)\"\n    @dismiss=\"rootContext.onDismiss\"\n  >\n    <PopperContent\n      v-bind=\"{ ...forwarded, ...$attrs }\"\n      :ref=\"forwardRef\"\n      :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n      :style=\"{\n        'userSelect': containSelection ? 'text' : undefined,\n        // Safari requires prefix\n        'WebkitUserSelect': containSelection ? 'text' : undefined,\n        // re-namespace exposed content custom properties\n        '--reka-hover-card-content-transform-origin': 'var(--reka-popper-transform-origin)',\n        '--reka-hover-card-content-available-width': 'var(--reka-popper-available-width)',\n        '--reka-hover-card-content-available-height': 'var(--reka-popper-available-height)',\n        '--reka-hover-card-trigger-width': 'var(--reka-popper-anchor-width)',\n        '--reka-hover-card-trigger-height': 'var(--reka-popper-anchor-height)',\n      }\"\n      @pointerdown=\"(event: PointerEvent) => {\n        // Contain selection to current layer\n        if ((event.currentTarget as HTMLElement).contains(event.target as HTMLElement)) {\n          containSelection = true\n        }\n        rootContext.hasSelectionRef.value = false;\n        rootContext.isPointerDownOnContentRef.value = true;\n      }\"\n    >\n      <slot />\n    </PopperContent>\n  </DismissableLayer>\n</template>\n", "<script lang=\"ts\">\nimport type { HoverCardContentImplEmits, HoverCardContentImplProps } from './HoverCardContentImpl.vue'\n\nexport type HoverCardContentEmits = HoverCardContentImplEmits\n\nexport interface HoverCardContentProps extends HoverCardContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\nimport HoverCardContentImpl from './HoverCardContentImpl.vue'\nimport { injectHoverCardRootContext } from './HoverCardRoot.vue'\nimport { excludeTouch } from './utils'\n\nconst props = defineProps<HoverCardContentProps>()\nconst emits = defineEmits<HoverCardContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectHoverCardRootContext()\n</script>\n\n<template>\n  <Presence\n    :present=\"forceMount || rootContext.open.value\"\n  >\n    <HoverCardContentImpl\n      v-bind=\"forwarded\"\n      :ref=\"forwardRef\"\n      @pointerenter=\"excludeTouch(rootContext.onOpen)($event)\"\n    >\n      <slot />\n    </HoverCardContentImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { HoverCardContentImplEmits, HoverCardContentImplProps } from './HoverCardContentImpl.vue'\n\nexport type HoverCardContentEmits = HoverCardContentImplEmits\n\nexport interface HoverCardContentProps extends HoverCardContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\nimport HoverCardContentImpl from './HoverCardContentImpl.vue'\nimport { injectHoverCardRootContext } from './HoverCardRoot.vue'\nimport { excludeTouch } from './utils'\n\nconst props = defineProps<HoverCardContentProps>()\nconst emits = defineEmits<HoverCardContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectHoverCardRootContext()\n</script>\n\n<template>\n  <Presence\n    :present=\"forceMount || rootContext.open.value\"\n  >\n    <HoverCardContentImpl\n      v-bind=\"forwarded\"\n      :ref=\"forwardRef\"\n      @pointerenter=\"excludeTouch(rootContext.onOpen)($event)\"\n    >\n      <slot />\n    </HoverCardContentImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface HoverCardPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<HoverCardPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface HoverCardPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<HoverCardPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nexport interface HoverCardTriggerProps extends PopperAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { PopperAnchor } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectHoverCardRootContext } from './HoverCardRoot.vue'\nimport { excludeTouch } from './utils'\n\nwithDefaults(defineProps<HoverCardTriggerProps>(), {\n  as: 'a',\n})\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectHoverCardRootContext()\nrootContext.triggerElement = currentElement\n\nfunction handleLeave() {\n  setTimeout(() => {\n    if (!rootContext.isPointerInTransitRef.value && !rootContext.open.value) {\n      rootContext.onClose()\n    }\n  }, 0)\n}\n</script>\n\n<template>\n  <PopperAnchor\n    as-child\n    :reference=\"reference\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n      data-grace-area-trigger\n      @pointerenter=\"excludeTouch(rootContext.onOpen)($event)\"\n      @pointerleave=\"excludeTouch(handleLeave)($event)\"\n      @focus=\"rootContext.onOpen()\"\n      @blur=\"rootContext.onClose()\"\n    >\n      <slot />\n    </Primitive>\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nexport interface HoverCardTriggerProps extends PopperAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { PopperAnchor } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectHoverCardRootContext } from './HoverCardRoot.vue'\nimport { excludeTouch } from './utils'\n\nwithDefaults(defineProps<HoverCardTriggerProps>(), {\n  as: 'a',\n})\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst rootContext = injectHoverCardRootContext()\nrootContext.triggerElement = currentElement\n\nfunction handleLeave() {\n  setTimeout(() => {\n    if (!rootContext.isPointerInTransitRef.value && !rootContext.open.value) {\n      rootContext.onClose()\n    }\n  }, 0)\n}\n</script>\n\n<template>\n  <PopperAnchor\n    as-child\n    :reference=\"reference\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n      data-grace-area-trigger\n      @pointerenter=\"excludeTouch(rootContext.onOpen)($event)\"\n      @pointerleave=\"excludeTouch(handleLeave)($event)\"\n      @focus=\"rootContext.onOpen()\"\n      @blur=\"rootContext.onClose()\"\n    >\n      <slot />\n    </Primitive>\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface LabelProps extends PrimitiveProps {\n  /** The id of the element the label is associated with. */\n  for?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<LabelProps>(), {\n  as: 'label',\n})\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    @mousedown=\"(event) => {\n      // prevent text selection when double clicking label\n      if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface LabelProps extends PrimitiveProps {\n  /** The id of the element the label is associated with. */\n  for?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<LabelProps>(), {\n  as: 'label',\n})\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    @mousedown=\"(event) => {\n      // prevent text selection when double clicking label\n      if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuArrowProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarArrowProps extends MenuArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuArrow } from '@/Menu'\n\nconst props = withDefaults(defineProps<MenubarArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuArrow v-bind=\"props\">\n    <slot />\n  </MenuArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuArrowProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarArrowProps extends MenuArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuArrow } from '@/Menu'\n\nconst props = withDefaults(defineProps<MenubarArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuArrow v-bind=\"props\">\n    <slot />\n  </MenuArrow>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuCheckboxItemEmits,\n  MenuCheckboxItemProps,\n} from '@/Menu'\n\nexport type MenubarCheckboxItemEmits = MenuCheckboxItemEmits\n\nexport interface MenubarCheckboxItemProps extends MenuCheckboxItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuCheckboxItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenubarCheckboxItemProps>()\nconst emits = defineEmits<MenubarCheckboxItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuCheckboxItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuCheckboxItem>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuCheckboxItemEmits,\n  MenuCheckboxItemProps,\n} from '@/Menu'\n\nexport type MenubarCheckboxItemEmits = MenuCheckboxItemEmits\n\nexport interface MenubarCheckboxItemProps extends MenuCheckboxItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuCheckboxItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenubarCheckboxItemProps>()\nconst emits = defineEmits<MenubarCheckboxItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuCheckboxItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuCheckboxItem>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction } from '../shared/types'\nimport { useCollection } from '@/Collection'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface MenubarRootProps {\n  /** The controlled value of the menu to open. Can be used as `v-model`. */\n  modelValue?: string\n  /** The value of the menu that should be open when initially rendered. Use when you do not need to control the value state. */\n  defaultValue?: string\n  /**\n   * The reading direction of the combobox when applicable.\n   *\n   *  If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /** When `true`, keyboard navigation will loop from last item to first, and vice versa. */\n  loop?: boolean\n}\nexport type MenubarRootEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: boolean]\n}\n\nexport interface MenubarRootContext {\n  modelValue: Ref<string>\n  dir: Ref<Direction>\n  loop: Ref<boolean>\n  onMenuOpen: (value: string) => void\n  onMenuClose: () => void\n  onMenuToggle: (value: string) => void\n}\n\nexport const [injectMenubarRootContext, provideMenubarRootContext]\n  = createContext<MenubarRootContext>('MenubarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\n\nconst props = withDefaults(defineProps<MenubarRootProps>(), {\n  loop: false,\n})\nconst emit = defineEmits<MenubarRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { forwardRef } = useForwardExpose()\nconst { CollectionSlot } = useCollection({ key: 'Menubar', isProvider: true })\n\nconst modelValue = useVModel(props, 'modelValue', emit, {\n  defaultValue: props.defaultValue ?? '',\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<string>\n\nconst currentTabStopId = ref<string | null>(null)\n\nconst { dir: propDir, loop } = toRefs(props)\nconst dir = useDirection(propDir)\nprovideMenubarRootContext({\n  modelValue,\n  dir,\n  loop,\n  onMenuOpen: (value) => {\n    modelValue.value = value\n    currentTabStopId.value = value\n  },\n  onMenuClose: () => {\n    modelValue.value = ''\n  },\n  onMenuToggle: (value) => {\n    modelValue.value = modelValue.value ? '' : value\n    // `openMenuOpen` and `onMenuToggle` are called exclusively so we\n    // need to update the id in either case.\n    currentTabStopId.value = value\n  },\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <RovingFocusGroup\n      v-model:current-tab-stop-id=\"currentTabStopId\"\n      orientation=\"horizontal\"\n      :loop=\"loop\"\n      :dir=\"dir\"\n      as-child\n    >\n      <Primitive\n        :ref=\"forwardRef\"\n        role=\"menubar\"\n      >\n        <slot :model-value=\"modelValue\" />\n      </Primitive>\n    </RovingFocusGroup>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction } from '../shared/types'\nimport { useCollection } from '@/Collection'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface MenubarRootProps {\n  /** The controlled value of the menu to open. Can be used as `v-model`. */\n  modelValue?: string\n  /** The value of the menu that should be open when initially rendered. Use when you do not need to control the value state. */\n  defaultValue?: string\n  /**\n   * The reading direction of the combobox when applicable.\n   *\n   *  If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /** When `true`, keyboard navigation will loop from last item to first, and vice versa. */\n  loop?: boolean\n}\nexport type MenubarRootEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: boolean]\n}\n\nexport interface MenubarRootContext {\n  modelValue: Ref<string>\n  dir: Ref<Direction>\n  loop: Ref<boolean>\n  onMenuOpen: (value: string) => void\n  onMenuClose: () => void\n  onMenuToggle: (value: string) => void\n}\n\nexport const [injectMenubarRootContext, provideMenubarRootContext]\n  = createContext<MenubarRootContext>('MenubarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\n\nconst props = withDefaults(defineProps<MenubarRootProps>(), {\n  loop: false,\n})\nconst emit = defineEmits<MenubarRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { forwardRef } = useForwardExpose()\nconst { CollectionSlot } = useCollection({ key: 'Menubar', isProvider: true })\n\nconst modelValue = useVModel(props, 'modelValue', emit, {\n  defaultValue: props.defaultValue ?? '',\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<string>\n\nconst currentTabStopId = ref<string | null>(null)\n\nconst { dir: propDir, loop } = toRefs(props)\nconst dir = useDirection(propDir)\nprovideMenubarRootContext({\n  modelValue,\n  dir,\n  loop,\n  onMenuOpen: (value) => {\n    modelValue.value = value\n    currentTabStopId.value = value\n  },\n  onMenuClose: () => {\n    modelValue.value = ''\n  },\n  onMenuToggle: (value) => {\n    modelValue.value = modelValue.value ? '' : value\n    // `openMenuOpen` and `onMenuToggle` are called exclusively so we\n    // need to update the id in either case.\n    currentTabStopId.value = value\n  },\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <RovingFocusGroup\n      v-model:current-tab-stop-id=\"currentTabStopId\"\n      orientation=\"horizontal\"\n      :loop=\"loop\"\n      :dir=\"dir\"\n      as-child\n    >\n      <Primitive\n        :ref=\"forwardRef\"\n        role=\"menubar\"\n      >\n        <slot :model-value=\"modelValue\" />\n      </Primitive>\n    </RovingFocusGroup>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext, useForwardExpose, useId } from '@/shared'\n\nexport interface MenubarMenuProps {\n  /**\n   * A unique value that associates the item with an active value when the navigation menu is controlled.\n   *\n   * This prop is managed automatically when uncontrolled.\n   */\n  value?: string\n}\n\ntype MenubarMenuContext = {\n  value: string\n  triggerId: string\n  triggerElement: Ref<HTMLElement | undefined>\n  contentId: string\n  wasKeyboardTriggerOpenRef: Ref<boolean>\n}\n\nexport const [injectMenubarMenuContext, provideMenubarMenuContext]\n  = createContext<MenubarMenuContext>('MenubarMenu')\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch } from 'vue'\nimport { MenuRoot } from '@/Menu'\nimport { injectMenubarRootContext } from './MenubarRoot.vue'\n\nconst props = defineProps<MenubarMenuProps>()\n\nconst value = useId(props.value)\nconst rootContext = injectMenubarRootContext()\nuseForwardExpose()\n\nconst triggerElement = ref<HTMLElement>()\nconst wasKeyboardTriggerOpenRef = ref(false)\n\nconst open = computed(() => rootContext.modelValue.value === value)\n\nwatch(open, () => {\n  if (!open.value)\n    wasKeyboardTriggerOpenRef.value = false\n})\n\nprovideMenubarMenuContext({\n  value,\n  triggerElement,\n  triggerId: value,\n  contentId: '',\n  wasKeyboardTriggerOpenRef,\n})\n</script>\n\n<template>\n  <MenuRoot\n    :open=\"open\"\n    :modal=\"false\"\n    :dir=\"rootContext.dir.value\"\n    @update:open=\"\n      (value) => {\n        // Menu only calls `@update:open` when dismissing so we\n        // want to close our MenuBar based on the same events.\n        if (!value) rootContext.onMenuClose();\n      }\n    \"\n  >\n    <slot />\n  </MenuRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext, useForwardExpose, useId } from '@/shared'\n\nexport interface MenubarMenuProps {\n  /**\n   * A unique value that associates the item with an active value when the navigation menu is controlled.\n   *\n   * This prop is managed automatically when uncontrolled.\n   */\n  value?: string\n}\n\ntype MenubarMenuContext = {\n  value: string\n  triggerId: string\n  triggerElement: Ref<HTMLElement | undefined>\n  contentId: string\n  wasKeyboardTriggerOpenRef: Ref<boolean>\n}\n\nexport const [injectMenubarMenuContext, provideMenubarMenuContext]\n  = createContext<MenubarMenuContext>('MenubarMenu')\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch } from 'vue'\nimport { MenuRoot } from '@/Menu'\nimport { injectMenubarRootContext } from './MenubarRoot.vue'\n\nconst props = defineProps<MenubarMenuProps>()\n\nconst value = useId(props.value)\nconst rootContext = injectMenubarRootContext()\nuseForwardExpose()\n\nconst triggerElement = ref<HTMLElement>()\nconst wasKeyboardTriggerOpenRef = ref(false)\n\nconst open = computed(() => rootContext.modelValue.value === value)\n\nwatch(open, () => {\n  if (!open.value)\n    wasKeyboardTriggerOpenRef.value = false\n})\n\nprovideMenubarMenuContext({\n  value,\n  triggerElement,\n  triggerId: value,\n  contentId: '',\n  wasKeyboardTriggerOpenRef,\n})\n</script>\n\n<template>\n  <MenuRoot\n    :open=\"open\"\n    :modal=\"false\"\n    :dir=\"rootContext.dir.value\"\n    @update:open=\"\n      (value) => {\n        // Menu only calls `@update:open` when dismissing so we\n        // want to close our MenuBar based on the same events.\n        if (!value) rootContext.onMenuClose();\n      }\n    \"\n  >\n    <slot />\n  </MenuRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuContentEmits, MenuContentProps } from '@/Menu'\nimport { useCollection } from '@/Collection'\n\nexport type MenubarContentEmits = MenuContentEmits\n\nexport interface MenubarContentProps extends MenuContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { MenuContent } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport { wrapArray } from '@/shared/useTypeahead'\nimport { injectMenubarMenuContext } from './MenubarMenu.vue'\nimport { injectMenubarRootContext } from './MenubarRoot.vue'\n\nconst props = withDefaults(defineProps<MenubarContentProps>(), {\n  align: 'start',\n})\nconst emits = defineEmits<MenubarContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n\nconst rootContext = injectMenubarRootContext()\nconst menuContext = injectMenubarMenuContext()\n\nmenuContext.contentId ||= useId(undefined, 'reka-menubar-content')\n\nconst { getItems } = useCollection({ key: 'Menubar' })\n\nconst hasInteractedOutsideRef = ref(false)\n\nfunction handleArrowNavigation(event: KeyboardEvent) {\n  const target = event.target as HTMLElement\n  const targetIsSubTrigger = target.hasAttribute(\n    'data-reka-menubar-subtrigger',\n  )\n\n  const prevMenuKey = rootContext.dir.value === 'rtl' ? 'ArrowRight' : 'ArrowLeft'\n  const isPrevKey = prevMenuKey === event.key\n  const isNextKey = !isPrevKey\n\n  // Prevent navigation when we're opening a submenu\n  if (isNextKey && targetIsSubTrigger)\n    return\n\n  let candidateValues = getItems().filter(i => i.ref.dataset.disabled !== '').map(i => i.ref.dataset.value)\n  if (isPrevKey)\n    candidateValues.reverse()\n\n  const currentIndex = candidateValues.indexOf(menuContext.value)\n\n  candidateValues = rootContext.loop.value\n    ? wrapArray(candidateValues, currentIndex + 1)\n    : candidateValues.slice(currentIndex + 1)\n\n  const [nextValue] = candidateValues\n  if (nextValue)\n    rootContext.onMenuOpen(nextValue)\n}\n</script>\n\n<template>\n  <MenuContent\n    v-bind=\"forwarded\"\n    :id=\"menuContext.contentId\"\n    data-reka-menubar-content=\"\"\n    :aria-labelledby=\"menuContext.triggerId\"\n    :style=\"{\n      '--reka-menubar-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-menubar-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-menubar-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-menubar-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-menubar-trigger-height': 'var(--reka-popper-anchor-height)',\n    }\"\n    @close-auto-focus=\"(event) => {\n      const menubarOpen = Boolean(rootContext.modelValue.value);\n      if (!menubarOpen && !hasInteractedOutsideRef) {\n        menuContext.triggerElement.value?.focus();\n      }\n\n      hasInteractedOutsideRef = false;\n      // Always prevent auto focus because we either focus manually or want user agent focus\n      event.preventDefault();\n    }\"\n    @focus-outside=\"(event) => {\n      const target = event.target as HTMLElement;\n      const isMenubarTrigger = getItems().filter(i => i.ref.dataset.disabled !== '').some((i) => i.ref.contains(target));\n      if (isMenubarTrigger) event.preventDefault();\n    }\"\n    @interact-outside=\"\n      (event) => {\n        hasInteractedOutsideRef = true;\n      }\n    \"\n    @entry-focus=\"(event) => {\n      if (!menuContext.wasKeyboardTriggerOpenRef.value) event.preventDefault()\n    }\"\n    @keydown.arrow-right.arrow-left=\"handleArrowNavigation\"\n  >\n    <slot />\n  </MenuContent>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuContentEmits, MenuContentProps } from '@/Menu'\nimport { useCollection } from '@/Collection'\n\nexport type MenubarContentEmits = MenuContentEmits\n\nexport interface MenubarContentProps extends MenuContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { MenuContent } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits, useId } from '@/shared'\nimport { wrapArray } from '@/shared/useTypeahead'\nimport { injectMenubarMenuContext } from './MenubarMenu.vue'\nimport { injectMenubarRootContext } from './MenubarRoot.vue'\n\nconst props = withDefaults(defineProps<MenubarContentProps>(), {\n  align: 'start',\n})\nconst emits = defineEmits<MenubarContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n\nconst rootContext = injectMenubarRootContext()\nconst menuContext = injectMenubarMenuContext()\n\nmenuContext.contentId ||= useId(undefined, 'reka-menubar-content')\n\nconst { getItems } = useCollection({ key: 'Menubar' })\n\nconst hasInteractedOutsideRef = ref(false)\n\nfunction handleArrowNavigation(event: KeyboardEvent) {\n  const target = event.target as HTMLElement\n  const targetIsSubTrigger = target.hasAttribute(\n    'data-reka-menubar-subtrigger',\n  )\n\n  const prevMenuKey = rootContext.dir.value === 'rtl' ? 'ArrowRight' : 'ArrowLeft'\n  const isPrevKey = prevMenuKey === event.key\n  const isNextKey = !isPrevKey\n\n  // Prevent navigation when we're opening a submenu\n  if (isNextKey && targetIsSubTrigger)\n    return\n\n  let candidateValues = getItems().filter(i => i.ref.dataset.disabled !== '').map(i => i.ref.dataset.value)\n  if (isPrevKey)\n    candidateValues.reverse()\n\n  const currentIndex = candidateValues.indexOf(menuContext.value)\n\n  candidateValues = rootContext.loop.value\n    ? wrapArray(candidateValues, currentIndex + 1)\n    : candidateValues.slice(currentIndex + 1)\n\n  const [nextValue] = candidateValues\n  if (nextValue)\n    rootContext.onMenuOpen(nextValue)\n}\n</script>\n\n<template>\n  <MenuContent\n    v-bind=\"forwarded\"\n    :id=\"menuContext.contentId\"\n    data-reka-menubar-content=\"\"\n    :aria-labelledby=\"menuContext.triggerId\"\n    :style=\"{\n      '--reka-menubar-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-menubar-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-menubar-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-menubar-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-menubar-trigger-height': 'var(--reka-popper-anchor-height)',\n    }\"\n    @close-auto-focus=\"(event) => {\n      const menubarOpen = Boolean(rootContext.modelValue.value);\n      if (!menubarOpen && !hasInteractedOutsideRef) {\n        menuContext.triggerElement.value?.focus();\n      }\n\n      hasInteractedOutsideRef = false;\n      // Always prevent auto focus because we either focus manually or want user agent focus\n      event.preventDefault();\n    }\"\n    @focus-outside=\"(event) => {\n      const target = event.target as HTMLElement;\n      const isMenubarTrigger = getItems().filter(i => i.ref.dataset.disabled !== '').some((i) => i.ref.contains(target));\n      if (isMenubarTrigger) event.preventDefault();\n    }\"\n    @interact-outside=\"\n      (event) => {\n        hasInteractedOutsideRef = true;\n      }\n    \"\n    @entry-focus=\"(event) => {\n      if (!menuContext.wasKeyboardTriggerOpenRef.value) event.preventDefault()\n    }\"\n    @keydown.arrow-right.arrow-left=\"handleArrowNavigation\"\n  >\n    <slot />\n  </MenuContent>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuGroupProps } from '@/Menu'\n\nexport interface MenubarGroupProps extends MenuGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuGroup } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenubarGroupProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuGroup v-bind=\"props\">\n    <slot />\n  </MenuGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuGroupProps } from '@/Menu'\n\nexport interface MenubarGroupProps extends MenuGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuGroup } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenubarGroupProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuGroup v-bind=\"props\">\n    <slot />\n  </MenuGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemEmits, MenuItemProps } from '@/Menu'\n\nexport type MenubarItemEmits = MenuItemEmits\n\nexport interface MenubarItemProps extends MenuItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenubarItemProps>()\nconst emits = defineEmits<MenubarItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemEmits, MenuItemProps } from '@/Menu'\n\nexport type MenubarItemEmits = MenuItemEmits\n\nexport interface MenubarItemProps extends MenuItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItem } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenubarItemProps>()\nconst emits = defineEmits<MenubarItemEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItem v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemIndicatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarItemIndicatorProps extends MenuItemIndicatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItemIndicator } from '@/Menu'\n\nconst props = defineProps<MenubarItemIndicatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItemIndicator v-bind=\"props\">\n    <slot />\n  </MenuItemIndicator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuItemIndicatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarItemIndicatorProps extends MenuItemIndicatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuItemIndicator } from '@/Menu'\n\nconst props = defineProps<MenubarItemIndicatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuItemIndicator v-bind=\"props\">\n    <slot />\n  </MenuItemIndicator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuLabelProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarLabelProps extends MenuLabelProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuLabel } from '@/Menu'\n\nconst props = defineProps<MenubarLabelProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuLabel v-bind=\"props\">\n    <slot />\n  </MenuLabel>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuLabelProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarLabelProps extends MenuLabelProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuLabel } from '@/Menu'\n\nconst props = defineProps<MenubarLabelProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuLabel v-bind=\"props\">\n    <slot />\n  </MenuLabel>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuPortalProps } from '@/Menu'\n\nexport interface MenubarPortalProps extends MenuPortalProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuPortal } from '@/Menu'\n\nconst props = defineProps<MenubarPortalProps>()\n</script>\n\n<template>\n  <MenuPortal v-bind=\"props\">\n    <slot />\n  </MenuPortal>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuPortalProps } from '@/Menu'\n\nexport interface MenubarPortalProps extends MenuPortalProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuPortal } from '@/Menu'\n\nconst props = defineProps<MenubarPortalProps>()\n</script>\n\n<template>\n  <MenuPortal v-bind=\"props\">\n    <slot />\n  </MenuPortal>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioGroupEmits,\n  MenuRadioGroupProps,\n} from '@/Menu'\n\nexport type MenubarRadioGroupEmits = MenuRadioGroupEmits\n\nexport interface MenubarRadioGroupProps extends MenuRadioGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioGroup } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenubarRadioGroupProps>()\nconst emits = defineEmits<MenubarRadioGroupEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioGroup v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuRadioGroup>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioGroupEmits,\n  MenuRadioGroupProps,\n} from '@/Menu'\n\nexport type MenubarRadioGroupEmits = MenuRadioGroupEmits\n\nexport interface MenubarRadioGroupProps extends MenuRadioGroupProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioGroup } from '@/Menu'\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\n\nconst props = defineProps<MenubarRadioGroupProps>()\nconst emits = defineEmits<MenubarRadioGroupEmits>()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioGroup v-bind=\"{ ...props, ...emitsAsProps }\">\n    <slot />\n  </MenuRadioGroup>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioItemEmits,\n  MenuRadioItemProps,\n} from '@/Menu'\n\nexport type MenubarRadioItemEmits = MenuRadioItemEmits\n\nexport interface MenubarRadioItemProps extends MenuRadioItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioItem } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nconst props = defineProps<MenuRadioItemProps>()\nconst emits = defineEmits<MenuRadioItemEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioItem v-bind=\"forwarded\">\n    <slot />\n  </MenuRadioItem>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuRadioItemEmits,\n  MenuRadioItemProps,\n} from '@/Menu'\n\nexport type MenubarRadioItemEmits = MenuRadioItemEmits\n\nexport interface MenubarRadioItemProps extends MenuRadioItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuRadioItem } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\n\nconst props = defineProps<MenuRadioItemProps>()\nconst emits = defineEmits<MenuRadioItemEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuRadioItem v-bind=\"forwarded\">\n    <slot />\n  </MenuRadioItem>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSeparatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarSeparatorProps extends MenuSeparatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSeparator } from '@/Menu'\n\nconst props = defineProps<MenubarSeparatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSeparator v-bind=\"props\">\n    <slot />\n  </MenuSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSeparatorProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarSeparatorProps extends MenuSeparatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSeparator } from '@/Menu'\n\nconst props = defineProps<MenubarSeparatorProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSeparator v-bind=\"props\">\n    <slot />\n  </MenuSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuSubEmits, MenuSubProps } from '@/Menu'\n\nexport type MenubarSubEmits = MenuSubEmits\nexport interface MenubarSubProps extends MenuSubProps {\n  /** The open state of the submenu when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { MenuSub } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = withDefaults(defineProps<MenubarSubProps>(), {\n  open: undefined,\n})\nconst emit = defineEmits<MenubarSubEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen ?? false,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n</script>\n\n<template>\n  <MenuSub v-model:open=\"open\">\n    <slot :open=\"open\" />\n  </MenuSub>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { MenuSubEmits, MenuSubProps } from '@/Menu'\n\nexport type MenubarSubEmits = MenuSubEmits\nexport interface MenubarSubProps extends MenuSubProps {\n  /** The open state of the submenu when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { MenuSub } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nconst props = withDefaults(defineProps<MenubarSubProps>(), {\n  open: undefined,\n})\nconst emit = defineEmits<MenubarSubEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen ?? false,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n</script>\n\n<template>\n  <MenuSub v-model:open=\"open\">\n    <slot :open=\"open\" />\n  </MenuSub>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuSubContentEmits,\n  MenuSubContentProps,\n} from '@/Menu'\nimport { useCollection } from '@/Collection'\n\nexport type MenubarSubContentEmits = MenuSubContentEmits\n\nexport interface MenubarSubContentProps extends MenuSubContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubContent } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\nimport { wrapArray } from '@/shared/useTypeahead'\nimport { injectMenubarMenuContext } from './MenubarMenu.vue'\nimport { injectMenubarRootContext } from './MenubarRoot.vue'\n\nconst props = defineProps<MenubarSubContentProps>()\nconst emits = defineEmits<MenubarSubContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n\nconst { getItems } = useCollection({ key: 'Menubar' })\n\nconst rootContext = injectMenubarRootContext()\nconst menuContext = injectMenubarMenuContext()\n\nfunction handleArrowNavigation(event: KeyboardEvent) {\n  const target = event.target as HTMLElement\n  const targetIsSubTrigger = target.hasAttribute(\n    'data-reka-menubar-subtrigger',\n  )\n\n  // Prevent navigation when we're opening a submenu\n  if (targetIsSubTrigger)\n    return\n\n  let candidateValues = getItems().filter(i => i.ref.dataset.disabled !== '').map(i => i.ref.dataset.value)\n  const currentIndex = candidateValues.indexOf(menuContext.value)\n\n  candidateValues = rootContext.loop.value\n    ? wrapArray(candidateValues, currentIndex + 1)\n    : candidateValues.slice(currentIndex + 1)\n\n  const [nextValue] = candidateValues\n  if (nextValue)\n    rootContext.onMenuOpen(nextValue)\n}\n</script>\n\n<template>\n  <MenuSubContent\n    v-bind=\"forwarded\"\n    data-reka-menubar-content=\"\"\n    :style=\"{\n      '--reka-menubar-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-menubar-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-menubar-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-menubar-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-menubar-trigger-height': 'var(--reka-popper-anchor-height)',\n    }\"\n    @keydown.arrow-right=\"handleArrowNavigation\"\n  >\n    <slot />\n  </MenuSubContent>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  MenuSubContentEmits,\n  MenuSubContentProps,\n} from '@/Menu'\nimport { useCollection } from '@/Collection'\n\nexport type MenubarSubContentEmits = MenuSubContentEmits\n\nexport interface MenubarSubContentProps extends MenuSubContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubContent } from '@/Menu'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\nimport { wrapArray } from '@/shared/useTypeahead'\nimport { injectMenubarMenuContext } from './MenubarMenu.vue'\nimport { injectMenubarRootContext } from './MenubarRoot.vue'\n\nconst props = defineProps<MenubarSubContentProps>()\nconst emits = defineEmits<MenubarSubContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\nuseForwardExpose()\n\nconst { getItems } = useCollection({ key: 'Menubar' })\n\nconst rootContext = injectMenubarRootContext()\nconst menuContext = injectMenubarMenuContext()\n\nfunction handleArrowNavigation(event: KeyboardEvent) {\n  const target = event.target as HTMLElement\n  const targetIsSubTrigger = target.hasAttribute(\n    'data-reka-menubar-subtrigger',\n  )\n\n  // Prevent navigation when we're opening a submenu\n  if (targetIsSubTrigger)\n    return\n\n  let candidateValues = getItems().filter(i => i.ref.dataset.disabled !== '').map(i => i.ref.dataset.value)\n  const currentIndex = candidateValues.indexOf(menuContext.value)\n\n  candidateValues = rootContext.loop.value\n    ? wrapArray(candidateValues, currentIndex + 1)\n    : candidateValues.slice(currentIndex + 1)\n\n  const [nextValue] = candidateValues\n  if (nextValue)\n    rootContext.onMenuOpen(nextValue)\n}\n</script>\n\n<template>\n  <MenuSubContent\n    v-bind=\"forwarded\"\n    data-reka-menubar-content=\"\"\n    :style=\"{\n      '--reka-menubar-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-menubar-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-menubar-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-menubar-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-menubar-trigger-height': 'var(--reka-popper-anchor-height)',\n    }\"\n    @keydown.arrow-right=\"handleArrowNavigation\"\n  >\n    <slot />\n  </MenuSubContent>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSubTriggerProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarSubTriggerProps extends MenuSubTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubTrigger } from '@/Menu'\n\nconst props = defineProps<MenubarSubTriggerProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubTrigger\n    v-bind=\"props\"\n    data-reka-menubar-subtrigger=\"\"\n  >\n    <slot />\n  </MenuSubTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { MenuSubTriggerProps } from '@/Menu'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarSubTriggerProps extends MenuSubTriggerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { MenuSubTrigger } from '@/Menu'\n\nconst props = defineProps<MenubarSubTriggerProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <MenuSubTrigger\n    v-bind=\"props\"\n    data-reka-menubar-subtrigger=\"\"\n  >\n    <slot />\n  </MenuSubTrigger>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarTriggerProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\nimport { MenuAnchor } from '@/Menu'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { injectMenubarMenuContext } from './MenubarMenu.vue'\nimport { injectMenubarRootContext } from './MenubarRoot.vue'\n\nwithDefaults(defineProps<MenubarTriggerProps>(), {\n  as: 'button',\n})\nconst rootContext = injectMenubarRootContext()\nconst menuContext = injectMenubarMenuContext()\n\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\nconst { CollectionItem } = useCollection({ key: 'Menubar' })\n\nconst isFocused = ref(false)\n\nconst open = computed(() => rootContext.modelValue.value === menuContext.value)\n\nonMounted(() => {\n  menuContext.triggerElement = triggerElement\n})\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    :focusable=\"!disabled\"\n    :tab-stop-id=\"menuContext.value\"\n  >\n    <CollectionItem>\n      <MenuAnchor as-child>\n        <Primitive\n          :id=\"menuContext.triggerId\"\n          :ref=\"forwardRef\"\n          :as=\"as\"\n          :as-child=\"asChild\"\n          :type=\"as === 'button' ? 'button' : undefined\"\n          role=\"menuitem\"\n          aria-haspopup=\"menu\"\n          :aria-expanded=\"open\"\n          :aria-controls=\"open ? menuContext.contentId : undefined\"\n          :data-highlighted=\"isFocused ? '' : undefined\"\n          :data-state=\"open ? 'open' : 'closed'\"\n          :data-disabled=\"disabled ? '' : undefined\"\n          :disabled=\"disabled\"\n          :data-value=\"menuContext.value\"\n          @pointerdown=\"(event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              rootContext.onMenuOpen(menuContext.value);\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!open) event.preventDefault();\n            }\n          }\"\n          @pointerenter=\"() => {\n            const menubarOpen = Boolean(rootContext.modelValue.value);\n            if (menubarOpen && !open) {\n              rootContext.onMenuOpen(menuContext.value);\n              triggerElement?.focus()\n            }\n          }\"\n          @keydown.enter.space.arrow-down=\"(event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) rootContext.onMenuToggle(menuContext.value);\n            if (event.key === 'ArrowDown') rootContext.onMenuOpen(menuContext.value);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) {\n              menuContext.wasKeyboardTriggerOpenRef.value = true;\n              event.preventDefault();\n            }\n          }\"\n          @focus=\"isFocused = true\"\n          @blur=\"isFocused = false\"\n        >\n          <slot />\n        </Primitive>\n      </MenuAnchor>\n    </CollectionItem>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { useForwardExpose } from '@/shared'\n\nexport interface MenubarTriggerProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\nimport { MenuAnchor } from '@/Menu'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { injectMenubarMenuContext } from './MenubarMenu.vue'\nimport { injectMenubarRootContext } from './MenubarRoot.vue'\n\nwithDefaults(defineProps<MenubarTriggerProps>(), {\n  as: 'button',\n})\nconst rootContext = injectMenubarRootContext()\nconst menuContext = injectMenubarMenuContext()\n\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\nconst { CollectionItem } = useCollection({ key: 'Menubar' })\n\nconst isFocused = ref(false)\n\nconst open = computed(() => rootContext.modelValue.value === menuContext.value)\n\nonMounted(() => {\n  menuContext.triggerElement = triggerElement\n})\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    :focusable=\"!disabled\"\n    :tab-stop-id=\"menuContext.value\"\n  >\n    <CollectionItem>\n      <MenuAnchor as-child>\n        <Primitive\n          :id=\"menuContext.triggerId\"\n          :ref=\"forwardRef\"\n          :as=\"as\"\n          :as-child=\"asChild\"\n          :type=\"as === 'button' ? 'button' : undefined\"\n          role=\"menuitem\"\n          aria-haspopup=\"menu\"\n          :aria-expanded=\"open\"\n          :aria-controls=\"open ? menuContext.contentId : undefined\"\n          :data-highlighted=\"isFocused ? '' : undefined\"\n          :data-state=\"open ? 'open' : 'closed'\"\n          :data-disabled=\"disabled ? '' : undefined\"\n          :disabled=\"disabled\"\n          :data-value=\"menuContext.value\"\n          @pointerdown=\"(event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              rootContext.onMenuOpen(menuContext.value);\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!open) event.preventDefault();\n            }\n          }\"\n          @pointerenter=\"() => {\n            const menubarOpen = Boolean(rootContext.modelValue.value);\n            if (menubarOpen && !open) {\n              rootContext.onMenuOpen(menuContext.value);\n              triggerElement?.focus()\n            }\n          }\"\n          @keydown.enter.space.arrow-down=\"(event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) rootContext.onMenuToggle(menuContext.value);\n            if (event.key === 'ArrowDown') rootContext.onMenuOpen(menuContext.value);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) {\n              menuContext.wasKeyboardTriggerOpenRef.value = true;\n              event.preventDefault();\n            }\n          }\"\n          @focus=\"isFocused = true\"\n          @blur=\"isFocused = false\"\n        >\n          <slot />\n        </Primitive>\n      </MenuAnchor>\n    </CollectionItem>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\n\nimport type { Direction, Orientation } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { createContext, useDirection, useForwardExpose, useId } from '@/shared'\n\nexport interface NavigationMenuRootProps extends PrimitiveProps {\n  /** The controlled value of the menu item to activate. Can be used as `v-model`. */\n  modelValue?: string\n  /**\n   * The value of the menu item that should be active when initially rendered.\n   *\n   * Use when you do not need to control the value state.\n   */\n  defaultValue?: string\n  /**\n   * The reading direction of the combobox when applicable.\n   *\n   *  If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /** The orientation of the menu. */\n  orientation?: Orientation\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 200\n   */\n  delayDuration?: number\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number\n\n  /**\n   * If `true`, menu cannot be open by click on trigger\n   * @defaultValue false\n   */\n  disableClickTrigger?: boolean\n  /**\n   * If `true`, menu cannot be open by hover on trigger\n   * @defaultValue false\n   */\n  disableHoverTrigger?: boolean\n  /**\n   * If `true`, menu will not close during pointer leave event\n   * @defaultValue false\n   */\n  disablePointerLeaveClose?: boolean\n\n  /**\n   * When `true`, the element will be unmounted on closed state.\n   *\n   * @defaultValue `true`\n   */\n  unmountOnHide?: boolean\n}\nexport type NavigationMenuRootEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: string]\n}\n\nexport interface NavigationMenuContext {\n  isRootMenu: boolean\n  modelValue: Ref<string>\n  previousValue: Ref<string>\n  baseId: string\n  dir: Ref<Direction>\n  orientation: Orientation\n  disableClickTrigger: Ref<boolean>\n  disableHoverTrigger: Ref<boolean>\n  unmountOnHide: Ref<boolean>\n  rootNavigationMenu: Ref<HTMLElement | undefined>\n  activeTrigger: Ref<HTMLElement | undefined>\n  indicatorTrack: Ref<HTMLElement | undefined>\n  onIndicatorTrackChange: (indicatorTrack: HTMLElement | undefined) => void\n  viewport: Ref<HTMLElement | undefined>\n  onViewportChange: (viewport: HTMLElement | undefined) => void\n  onTriggerEnter: (itemValue: string) => void\n  onTriggerLeave: () => void\n  onContentEnter: (itemValue: string) => void\n  onContentLeave: () => void\n  onItemSelect: (itemValue: string) => void\n  onItemDismiss: () => void\n}\n\nexport const [injectNavigationMenuContext, provideNavigationMenuContext]\n  = createContext<NavigationMenuContext>(['NavigationMenuRoot', 'NavigationMenuSub'], 'NavigationMenuContext')\n</script>\n\n<script setup lang=\"ts\">\nimport { refAutoReset, useDebounceFn, useVModel } from '@vueuse/core'\nimport {\n  computed,\n  ref,\n  toRefs,\n  watchEffect,\n} from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\n\nconst props = withDefaults(defineProps<NavigationMenuRootProps>(), {\n  modelValue: undefined,\n  delayDuration: 200,\n  skipDelayDuration: 300,\n  orientation: 'horizontal',\n  disableClickTrigger: false,\n  disableHoverTrigger: false,\n  unmountOnHide: true,\n  as: 'nav',\n})\nconst emits = defineEmits<NavigationMenuRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? '',\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<string>\nconst previousValue = ref('')\n\nconst { forwardRef, currentElement: rootNavigationMenu } = useForwardExpose()\n\nconst indicatorTrack = ref<HTMLElement>()\nconst viewport = ref<HTMLElement>()\nconst activeTrigger = ref<HTMLElement>()\n\nconst { getItems, CollectionSlot } = useCollection({ key: 'NavigationMenu', isProvider: true })\n\nconst { delayDuration, skipDelayDuration, dir: propDir, disableClickTrigger, disableHoverTrigger, unmountOnHide } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst isDelaySkipped = refAutoReset(false, skipDelayDuration)\nconst computedDelay = computed(() => {\n  const isOpen = modelValue.value !== ''\n  if (isOpen || isDelaySkipped.value)\n    return 150 // 150ms for user to switch trigger or move into content view\n  else return delayDuration.value\n})\n\nconst debouncedFn = useDebounceFn((val?: string) => {\n  // passing `undefined` meant to reset the debounce timer\n  if (typeof val === 'string') {\n    previousValue.value = modelValue.value\n    modelValue.value = val\n  }\n}, computedDelay)\n\nwatchEffect(() => {\n  if (!modelValue.value)\n    return\n\n  const items = getItems().map(i => i.ref)\n  activeTrigger.value = items.find(item =>\n    item.id.includes(modelValue.value),\n  )\n})\n\nprovideNavigationMenuContext({\n  isRootMenu: true,\n  modelValue,\n  previousValue,\n  baseId: useId(undefined, 'reka-navigation-menu'),\n  disableClickTrigger,\n  disableHoverTrigger,\n  dir,\n  unmountOnHide,\n  orientation: props.orientation,\n  rootNavigationMenu,\n  indicatorTrack,\n  activeTrigger,\n  onIndicatorTrackChange: (val) => {\n    indicatorTrack.value = val\n  },\n  viewport,\n  onViewportChange: (val) => {\n    viewport.value = val\n  },\n  onTriggerEnter: (val) => {\n    debouncedFn(val)\n  },\n  onTriggerLeave: () => {\n    isDelaySkipped.value = true\n    debouncedFn('')\n  },\n  onContentEnter: () => {\n    debouncedFn()\n  },\n  onContentLeave: () => {\n    if (!props.disablePointerLeaveClose)\n      debouncedFn('')\n  },\n  onItemSelect: (val) => {\n    // When selecting item we trigger update immediately\n    previousValue.value = modelValue.value\n    modelValue.value = val\n  },\n  onItemDismiss: () => {\n    previousValue.value = modelValue.value\n    modelValue.value = ''\n  },\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      :ref=\"forwardRef\"\n      aria-label=\"Main\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :data-orientation=\"orientation\"\n      :dir=\"dir\"\n      data-reka-navigation-menu\n    >\n      <slot :model-value=\"modelValue\" />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\n\nimport type { Direction, Orientation } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { createContext, useDirection, useForwardExpose, useId } from '@/shared'\n\nexport interface NavigationMenuRootProps extends PrimitiveProps {\n  /** The controlled value of the menu item to activate. Can be used as `v-model`. */\n  modelValue?: string\n  /**\n   * The value of the menu item that should be active when initially rendered.\n   *\n   * Use when you do not need to control the value state.\n   */\n  defaultValue?: string\n  /**\n   * The reading direction of the combobox when applicable.\n   *\n   *  If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /** The orientation of the menu. */\n  orientation?: Orientation\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 200\n   */\n  delayDuration?: number\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number\n\n  /**\n   * If `true`, menu cannot be open by click on trigger\n   * @defaultValue false\n   */\n  disableClickTrigger?: boolean\n  /**\n   * If `true`, menu cannot be open by hover on trigger\n   * @defaultValue false\n   */\n  disableHoverTrigger?: boolean\n  /**\n   * If `true`, menu will not close during pointer leave event\n   * @defaultValue false\n   */\n  disablePointerLeaveClose?: boolean\n\n  /**\n   * When `true`, the element will be unmounted on closed state.\n   *\n   * @defaultValue `true`\n   */\n  unmountOnHide?: boolean\n}\nexport type NavigationMenuRootEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: string]\n}\n\nexport interface NavigationMenuContext {\n  isRootMenu: boolean\n  modelValue: Ref<string>\n  previousValue: Ref<string>\n  baseId: string\n  dir: Ref<Direction>\n  orientation: Orientation\n  disableClickTrigger: Ref<boolean>\n  disableHoverTrigger: Ref<boolean>\n  unmountOnHide: Ref<boolean>\n  rootNavigationMenu: Ref<HTMLElement | undefined>\n  activeTrigger: Ref<HTMLElement | undefined>\n  indicatorTrack: Ref<HTMLElement | undefined>\n  onIndicatorTrackChange: (indicatorTrack: HTMLElement | undefined) => void\n  viewport: Ref<HTMLElement | undefined>\n  onViewportChange: (viewport: HTMLElement | undefined) => void\n  onTriggerEnter: (itemValue: string) => void\n  onTriggerLeave: () => void\n  onContentEnter: (itemValue: string) => void\n  onContentLeave: () => void\n  onItemSelect: (itemValue: string) => void\n  onItemDismiss: () => void\n}\n\nexport const [injectNavigationMenuContext, provideNavigationMenuContext]\n  = createContext<NavigationMenuContext>(['NavigationMenuRoot', 'NavigationMenuSub'], 'NavigationMenuContext')\n</script>\n\n<script setup lang=\"ts\">\nimport { refAutoReset, useDebounceFn, useVModel } from '@vueuse/core'\nimport {\n  computed,\n  ref,\n  toRefs,\n  watchEffect,\n} from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\n\nconst props = withDefaults(defineProps<NavigationMenuRootProps>(), {\n  modelValue: undefined,\n  delayDuration: 200,\n  skipDelayDuration: 300,\n  orientation: 'horizontal',\n  disableClickTrigger: false,\n  disableHoverTrigger: false,\n  unmountOnHide: true,\n  as: 'nav',\n})\nconst emits = defineEmits<NavigationMenuRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? '',\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<string>\nconst previousValue = ref('')\n\nconst { forwardRef, currentElement: rootNavigationMenu } = useForwardExpose()\n\nconst indicatorTrack = ref<HTMLElement>()\nconst viewport = ref<HTMLElement>()\nconst activeTrigger = ref<HTMLElement>()\n\nconst { getItems, CollectionSlot } = useCollection({ key: 'NavigationMenu', isProvider: true })\n\nconst { delayDuration, skipDelayDuration, dir: propDir, disableClickTrigger, disableHoverTrigger, unmountOnHide } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst isDelaySkipped = refAutoReset(false, skipDelayDuration)\nconst computedDelay = computed(() => {\n  const isOpen = modelValue.value !== ''\n  if (isOpen || isDelaySkipped.value)\n    return 150 // 150ms for user to switch trigger or move into content view\n  else return delayDuration.value\n})\n\nconst debouncedFn = useDebounceFn((val?: string) => {\n  // passing `undefined` meant to reset the debounce timer\n  if (typeof val === 'string') {\n    previousValue.value = modelValue.value\n    modelValue.value = val\n  }\n}, computedDelay)\n\nwatchEffect(() => {\n  if (!modelValue.value)\n    return\n\n  const items = getItems().map(i => i.ref)\n  activeTrigger.value = items.find(item =>\n    item.id.includes(modelValue.value),\n  )\n})\n\nprovideNavigationMenuContext({\n  isRootMenu: true,\n  modelValue,\n  previousValue,\n  baseId: useId(undefined, 'reka-navigation-menu'),\n  disableClickTrigger,\n  disableHoverTrigger,\n  dir,\n  unmountOnHide,\n  orientation: props.orientation,\n  rootNavigationMenu,\n  indicatorTrack,\n  activeTrigger,\n  onIndicatorTrackChange: (val) => {\n    indicatorTrack.value = val\n  },\n  viewport,\n  onViewportChange: (val) => {\n    viewport.value = val\n  },\n  onTriggerEnter: (val) => {\n    debouncedFn(val)\n  },\n  onTriggerLeave: () => {\n    isDelaySkipped.value = true\n    debouncedFn('')\n  },\n  onContentEnter: () => {\n    debouncedFn()\n  },\n  onContentLeave: () => {\n    if (!props.disablePointerLeaveClose)\n      debouncedFn('')\n  },\n  onItemSelect: (val) => {\n    // When selecting item we trigger update immediately\n    previousValue.value = modelValue.value\n    modelValue.value = val\n  },\n  onItemDismiss: () => {\n    previousValue.value = modelValue.value\n    modelValue.value = ''\n  },\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      :ref=\"forwardRef\"\n      aria-label=\"Main\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :data-orientation=\"orientation\"\n      :dir=\"dir\"\n      data-reka-navigation-menu\n    >\n      <slot :model-value=\"modelValue\" />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "import { getActiveElement } from '@/shared'\n\nexport type Orientation = 'vertical' | 'horizontal'\nexport type Direction = 'ltr' | 'rtl'\n\nexport function getOpenState(open: boolean) {\n  return open ? 'open' : 'closed'\n}\n\nexport function makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`\n}\n\nexport function makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`\n}\n\nexport const LINK_SELECT = 'navigationMenu.linkSelect'\nexport const EVENT_ROOT_CONTENT_DISMISS = 'navigationMenu.rootContentDismiss'\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nexport function getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = []\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden'\n      if (node.disabled || node.hidden || isHiddenInput)\n        return NodeFilter.FILTER_SKIP\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0\n        ? NodeFilter.FILTER_ACCEPT\n        : NodeFilter.FILTER_SKIP\n    },\n  })\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement)\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes\n}\n\nexport function focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = getActiveElement()\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement)\n      return true\n    candidate.focus()\n    return getActiveElement() !== previouslyFocusedElement\n  })\n}\n\nexport function removeFromTabOrder(candidates: HTMLElement[]) {\n  candidates.forEach((candidate) => {\n    candidate.dataset.tabindex = candidate.getAttribute('tabindex') || ''\n    candidate.setAttribute('tabindex', '-1')\n  })\n  return () => {\n    candidates.forEach((candidate) => {\n      const prevTabIndex = candidate.dataset.tabindex as string\n      candidate.setAttribute('tabindex', prevTabIndex)\n    })\n  }\n}\n\nexport function whenMouse<E extends PointerEvent>(handler: (event?: E) => void) {\n  return (event: E) => (event.pointerType === 'mouse' ? handler(event) : undefined)\n}\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { createContext, getActiveElement, useArrowNavigation, useForwardExpose, useId } from '@/shared'\n\nexport interface NavigationMenuItemProps extends PrimitiveProps {\n  /**\n   * A unique value that associates the item with an active value when the navigation menu is controlled.\n   *\n   *  This prop is managed automatically when uncontrolled.\n   */\n  value?: string\n}\n\nexport type NavigationMenuItemContext = {\n  value: string\n  contentId: string\n  triggerRef: Ref<HTMLElement | undefined>\n  focusProxyRef: Ref<HTMLElement | undefined>\n  wasEscapeCloseRef: Ref<boolean>\n  onEntryKeyDown: () => void\n  onFocusProxyEnter: (side: 'start' | 'end') => void\n  onContentFocusOutside: () => void\n  onRootContentClose: () => void\n}\n\nexport const [injectNavigationMenuItemContext, provideNavigationMenuItemContext]\n  = createContext<NavigationMenuItemContext>('NavigationMenuItem')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport {\n  focusFirst,\n  getTabbableCandidates,\n  makeContentId,\n  removeFromTabOrder,\n} from './utils'\n\nconst props = withDefaults(defineProps<NavigationMenuItemProps>(), {\n  as: 'li',\n})\n\nuseForwardExpose()\nconst { getItems } = useCollection({ key: 'NavigationMenu' })\n\nconst context = injectNavigationMenuContext()\n\nconst value = useId(props.value)\nconst triggerRef = ref<HTMLElement>()\nconst focusProxyRef = ref<HTMLElement>()\n\nconst contentId = makeContentId(context.baseId, value)\n\nlet restoreContentTabOrderRef: () => void = () => ({})\n\nconst wasEscapeCloseRef = ref(false)\nasync function handleContentEntry(side = 'start') {\n  const el = document.getElementById(contentId)\n  if (el) {\n    restoreContentTabOrderRef()\n    const candidates = getTabbableCandidates(el)\n    if (candidates.length)\n      focusFirst(side === 'start' ? candidates : candidates.reverse())\n  }\n}\n\nfunction handleContentExit() {\n  const el = document.getElementById(contentId)\n  if (el) {\n    const candidates = getTabbableCandidates(el)\n    if (candidates.length)\n      restoreContentTabOrderRef = removeFromTabOrder(candidates)\n  }\n}\n\nprovideNavigationMenuItemContext({\n  value,\n  contentId,\n  triggerRef,\n  focusProxyRef,\n  wasEscapeCloseRef,\n  onEntryKeyDown: handleContentEntry,\n  onFocusProxyEnter: handleContentEntry,\n  onContentFocusOutside: handleContentExit,\n  onRootContentClose: handleContentExit,\n})\n\nfunction handleClose() {\n  context.onItemDismiss()\n  triggerRef.value?.focus()\n}\n\nfunction handleKeydown(ev: KeyboardEvent) {\n  const currentFocus = getActiveElement() as HTMLElement\n  if (ev.keyCode === 32 || ev.key === 'Enter') {\n    if (context.modelValue.value === value) {\n      handleClose()\n      ev.preventDefault()\n      return\n    }\n    else {\n      (ev.target as HTMLElement).click()\n      ev.preventDefault()\n      return\n    }\n  }\n\n  const itemsArray = getItems().filter(i =>\n    i.ref.parentElement?.hasAttribute('data-menu-item'),\n  ).map(i => i.ref)\n\n  // prevent triggering when the focus is on link\n  if (!itemsArray.includes(currentFocus))\n    return\n\n  const newSelectedElement = useArrowNavigation(ev, currentFocus, undefined, {\n    itemsArray,\n    loop: false,\n  })\n\n  if (newSelectedElement)\n    newSelectedElement?.focus()\n\n  ev.preventDefault()\n  ev.stopPropagation()\n}\n</script>\n\n<template>\n  <Primitive\n    :as-child=\"asChild\"\n    :as=\"as\"\n    data-menu-item\n    @keydown.up.down.left.right.home.end.space=\"handleKeydown\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { createContext, getActiveElement, useArrowNavigation, useForwardExpose, useId } from '@/shared'\n\nexport interface NavigationMenuItemProps extends PrimitiveProps {\n  /**\n   * A unique value that associates the item with an active value when the navigation menu is controlled.\n   *\n   *  This prop is managed automatically when uncontrolled.\n   */\n  value?: string\n}\n\nexport type NavigationMenuItemContext = {\n  value: string\n  contentId: string\n  triggerRef: Ref<HTMLElement | undefined>\n  focusProxyRef: Ref<HTMLElement | undefined>\n  wasEscapeCloseRef: Ref<boolean>\n  onEntryKeyDown: () => void\n  onFocusProxyEnter: (side: 'start' | 'end') => void\n  onContentFocusOutside: () => void\n  onRootContentClose: () => void\n}\n\nexport const [injectNavigationMenuItemContext, provideNavigationMenuItemContext]\n  = createContext<NavigationMenuItemContext>('NavigationMenuItem')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport {\n  focusFirst,\n  getTabbableCandidates,\n  makeContentId,\n  removeFromTabOrder,\n} from './utils'\n\nconst props = withDefaults(defineProps<NavigationMenuItemProps>(), {\n  as: 'li',\n})\n\nuseForwardExpose()\nconst { getItems } = useCollection({ key: 'NavigationMenu' })\n\nconst context = injectNavigationMenuContext()\n\nconst value = useId(props.value)\nconst triggerRef = ref<HTMLElement>()\nconst focusProxyRef = ref<HTMLElement>()\n\nconst contentId = makeContentId(context.baseId, value)\n\nlet restoreContentTabOrderRef: () => void = () => ({})\n\nconst wasEscapeCloseRef = ref(false)\nasync function handleContentEntry(side = 'start') {\n  const el = document.getElementById(contentId)\n  if (el) {\n    restoreContentTabOrderRef()\n    const candidates = getTabbableCandidates(el)\n    if (candidates.length)\n      focusFirst(side === 'start' ? candidates : candidates.reverse())\n  }\n}\n\nfunction handleContentExit() {\n  const el = document.getElementById(contentId)\n  if (el) {\n    const candidates = getTabbableCandidates(el)\n    if (candidates.length)\n      restoreContentTabOrderRef = removeFromTabOrder(candidates)\n  }\n}\n\nprovideNavigationMenuItemContext({\n  value,\n  contentId,\n  triggerRef,\n  focusProxyRef,\n  wasEscapeCloseRef,\n  onEntryKeyDown: handleContentEntry,\n  onFocusProxyEnter: handleContentEntry,\n  onContentFocusOutside: handleContentExit,\n  onRootContentClose: handleContentExit,\n})\n\nfunction handleClose() {\n  context.onItemDismiss()\n  triggerRef.value?.focus()\n}\n\nfunction handleKeydown(ev: KeyboardEvent) {\n  const currentFocus = getActiveElement() as HTMLElement\n  if (ev.keyCode === 32 || ev.key === 'Enter') {\n    if (context.modelValue.value === value) {\n      handleClose()\n      ev.preventDefault()\n      return\n    }\n    else {\n      (ev.target as HTMLElement).click()\n      ev.preventDefault()\n      return\n    }\n  }\n\n  const itemsArray = getItems().filter(i =>\n    i.ref.parentElement?.hasAttribute('data-menu-item'),\n  ).map(i => i.ref)\n\n  // prevent triggering when the focus is on link\n  if (!itemsArray.includes(currentFocus))\n    return\n\n  const newSelectedElement = useArrowNavigation(ev, currentFocus, undefined, {\n    itemsArray,\n    loop: false,\n  })\n\n  if (newSelectedElement)\n    newSelectedElement?.focus()\n\n  ev.preventDefault()\n  ev.stopPropagation()\n}\n</script>\n\n<template>\n  <Primitive\n    :as-child=\"asChild\"\n    :as=\"as\"\n    data-menu-item\n    @keydown.up.down.left.right.home.end.space=\"handleKeydown\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DismissableLayerEmits,\n  DismissableLayerProps,\n  FocusOutsideEvent,\n} from '@/DismissableLayer'\nimport type { PointerDownOutsideEvent } from '@/DismissableLayer/utils'\nimport { useCollection } from '@/Collection'\n\ntype MotionAttribute = 'to-start' | 'to-end' | 'from-start' | 'from-end'\n\nexport type NavigationMenuContentImplEmits = DismissableLayerEmits\n\nexport interface NavigationMenuContentImplProps extends DismissableLayerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, ref, watchEffect } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { getActiveElement, useArrowNavigation, useForwardExpose } from '@/shared'\nimport { injectNavigationMenuItemContext } from './NavigationMenuItem.vue'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport {\n  EVENT_ROOT_CONTENT_DISMISS,\n  focusFirst,\n  getOpenState,\n  getTabbableCandidates,\n  makeContentId,\n  makeTriggerId,\n} from './utils'\n\nconst props = defineProps<NavigationMenuContentImplProps>()\nconst emits = defineEmits<NavigationMenuContentImplEmits>()\n\nconst { getItems } = useCollection({ key: 'NavigationMenu' })\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst menuContext = injectNavigationMenuContext()\nconst itemContext = injectNavigationMenuItemContext()\n\nconst triggerId = makeTriggerId(menuContext.baseId, itemContext.value)\nconst contentId = makeContentId(menuContext.baseId, itemContext.value)\n\nconst prevMotionAttributeRef = ref<MotionAttribute | null>(null)\nconst motionAttribute = computed(() => {\n  const values = getItems().map(i => i.ref.id.split('trigger-')[1])\n  if (menuContext.dir.value === 'rtl')\n    values.reverse()\n  const index = values.indexOf(menuContext.modelValue.value)\n  const prevIndex = values.indexOf(menuContext.previousValue.value)\n  const isSelected = itemContext.value === menuContext.modelValue.value\n  const wasSelected = prevIndex === values.indexOf(itemContext.value)\n\n  // We only want to update selected and the last selected content\n  // this avoids animations being interrupted outside of that range\n  if (!isSelected && !wasSelected)\n    return prevMotionAttributeRef.value\n\n  const attribute = (() => {\n    // Don't provide a direction on the initial open\n    if (index !== prevIndex) {\n      // If we're moving to this item from another\n      if (isSelected && prevIndex !== -1)\n        return index > prevIndex ? 'from-end' : 'from-start'\n      // If we're leaving this item for another\n      if (wasSelected && index !== -1)\n        return index > prevIndex ? 'to-start' : 'to-end'\n    }\n    // Otherwise we're entering from closed or leaving the list\n    // entirely and should not animate in any direction\n    return null\n  })()\n\n  // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n  prevMotionAttributeRef.value = attribute\n  return attribute\n})\n\nfunction handleFocusOutside(ev: FocusOutsideEvent) {\n  emits('focusOutside', ev)\n  emits('interactOutside', ev)\n\n  const target = ev.detail.originalEvent.target as HTMLElement\n  if (target.hasAttribute('data-navigation-menu-trigger'))\n    ev.preventDefault()\n\n  if (!ev.defaultPrevented) {\n    itemContext.onContentFocusOutside()\n\n    const target = ev.target as HTMLElement\n    // Only dismiss content when focus moves outside of the menu\n    if (menuContext.rootNavigationMenu?.value?.contains(target))\n      ev.preventDefault()\n  }\n}\n\nfunction handlePointerDownOutside(ev: PointerDownOutsideEvent) {\n  emits('pointerDownOutside', ev)\n\n  if (!ev.defaultPrevented) {\n    const target = ev.target as HTMLElement\n    const isTrigger = getItems().some(i =>\n      i.ref.contains(target),\n    )\n    const isRootViewport\n    = menuContext.isRootMenu && menuContext.viewport.value?.contains(target)\n\n    if (isTrigger || isRootViewport || !menuContext.isRootMenu)\n      ev.preventDefault()\n  }\n}\n\nwatchEffect((cleanupFn) => {\n  const content = currentElement.value\n  if (menuContext.isRootMenu && content) {\n    // Bubble dismiss to the root content node and focus its trigger\n    const handleClose = () => {\n      menuContext.onItemDismiss()\n      itemContext.onRootContentClose()\n      if (content.contains(getActiveElement()))\n        itemContext.triggerRef.value?.focus()\n    }\n    content.addEventListener(EVENT_ROOT_CONTENT_DISMISS, handleClose)\n\n    cleanupFn(() =>\n      content.removeEventListener(EVENT_ROOT_CONTENT_DISMISS, handleClose),\n    )\n  }\n})\n\nfunction handleEscapeKeyDown(ev: KeyboardEvent) {\n  emits('escapeKeyDown', ev)\n\n  if (!ev.defaultPrevented) {\n    menuContext.onItemDismiss()\n    itemContext.triggerRef?.value?.focus()\n    itemContext.wasEscapeCloseRef.value = true\n  }\n}\n\nfunction handleKeydown(ev: KeyboardEvent) {\n  // prevent parent menu triggering keydown event\n  if ((ev.target as HTMLElement).closest('[data-reka-navigation-menu]') !== menuContext.rootNavigationMenu.value)\n    return\n\n  const isMetaKey = ev.altKey || ev.ctrlKey || ev.metaKey\n  const isTabKey = ev.key === 'Tab' && !isMetaKey\n  const candidates = getTabbableCandidates(ev.currentTarget as HTMLElement)\n\n  if (isTabKey) {\n    const focusedElement = getActiveElement()\n    const index = candidates.findIndex(\n      candidate => candidate === focusedElement,\n    )\n    const isMovingBackwards = ev.shiftKey\n    const nextCandidates = isMovingBackwards\n      ? candidates.slice(0, index).reverse()\n      : candidates.slice(index + 1, candidates.length)\n\n    if (focusFirst(nextCandidates)) {\n      // prevent browser tab keydown because we've handled focus\n      ev.preventDefault()\n    }\n    else {\n      // If we can't focus that means we're at the edges\n      // so focus the proxy and let browser handle\n      // tab/shift+tab keypress on the proxy instead\n      itemContext.focusProxyRef.value?.focus()\n      return\n    }\n  }\n\n  const newSelectedElement = useArrowNavigation(\n    ev,\n    getActiveElement() as HTMLElement,\n    undefined,\n    { itemsArray: candidates, loop: false, enableIgnoredElement: true },\n  )\n  newSelectedElement?.focus()\n}\n\nfunction handleDismiss() {\n  const rootContentDismissEvent = new Event(EVENT_ROOT_CONTENT_DISMISS, {\n    bubbles: true,\n    cancelable: true,\n  })\n  currentElement.value?.dispatchEvent(rootContentDismissEvent)\n}\n</script>\n\n<template>\n  <DismissableLayer\n    :id=\"contentId\"\n    :ref=\"forwardRef\"\n    :aria-labelledby=\"triggerId\"\n    :data-motion=\"motionAttribute\"\n    :data-state=\"getOpenState(menuContext.modelValue.value === itemContext.value)\"\n    :data-orientation=\"menuContext.orientation\"\n    v-bind=\"props\"\n    @keydown=\"handleKeydown\"\n    @escape-key-down=\"handleEscapeKeyDown\"\n    @pointer-down-outside=\"handlePointerDownOutside\"\n    @focus-outside=\"handleFocusOutside\"\n    @dismiss=\"handleDismiss\"\n  >\n    <slot />\n  </DismissableLayer>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  DismissableLayerEmits,\n  DismissableLayerProps,\n  FocusOutsideEvent,\n} from '@/DismissableLayer'\nimport type { PointerDownOutsideEvent } from '@/DismissableLayer/utils'\nimport { useCollection } from '@/Collection'\n\ntype MotionAttribute = 'to-start' | 'to-end' | 'from-start' | 'from-end'\n\nexport type NavigationMenuContentImplEmits = DismissableLayerEmits\n\nexport interface NavigationMenuContentImplProps extends DismissableLayerProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, ref, watchEffect } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { getActiveElement, useArrowNavigation, useForwardExpose } from '@/shared'\nimport { injectNavigationMenuItemContext } from './NavigationMenuItem.vue'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport {\n  EVENT_ROOT_CONTENT_DISMISS,\n  focusFirst,\n  getOpenState,\n  getTabbableCandidates,\n  makeContentId,\n  makeTriggerId,\n} from './utils'\n\nconst props = defineProps<NavigationMenuContentImplProps>()\nconst emits = defineEmits<NavigationMenuContentImplEmits>()\n\nconst { getItems } = useCollection({ key: 'NavigationMenu' })\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst menuContext = injectNavigationMenuContext()\nconst itemContext = injectNavigationMenuItemContext()\n\nconst triggerId = makeTriggerId(menuContext.baseId, itemContext.value)\nconst contentId = makeContentId(menuContext.baseId, itemContext.value)\n\nconst prevMotionAttributeRef = ref<MotionAttribute | null>(null)\nconst motionAttribute = computed(() => {\n  const values = getItems().map(i => i.ref.id.split('trigger-')[1])\n  if (menuContext.dir.value === 'rtl')\n    values.reverse()\n  const index = values.indexOf(menuContext.modelValue.value)\n  const prevIndex = values.indexOf(menuContext.previousValue.value)\n  const isSelected = itemContext.value === menuContext.modelValue.value\n  const wasSelected = prevIndex === values.indexOf(itemContext.value)\n\n  // We only want to update selected and the last selected content\n  // this avoids animations being interrupted outside of that range\n  if (!isSelected && !wasSelected)\n    return prevMotionAttributeRef.value\n\n  const attribute = (() => {\n    // Don't provide a direction on the initial open\n    if (index !== prevIndex) {\n      // If we're moving to this item from another\n      if (isSelected && prevIndex !== -1)\n        return index > prevIndex ? 'from-end' : 'from-start'\n      // If we're leaving this item for another\n      if (wasSelected && index !== -1)\n        return index > prevIndex ? 'to-start' : 'to-end'\n    }\n    // Otherwise we're entering from closed or leaving the list\n    // entirely and should not animate in any direction\n    return null\n  })()\n\n  // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n  prevMotionAttributeRef.value = attribute\n  return attribute\n})\n\nfunction handleFocusOutside(ev: FocusOutsideEvent) {\n  emits('focusOutside', ev)\n  emits('interactOutside', ev)\n\n  const target = ev.detail.originalEvent.target as HTMLElement\n  if (target.hasAttribute('data-navigation-menu-trigger'))\n    ev.preventDefault()\n\n  if (!ev.defaultPrevented) {\n    itemContext.onContentFocusOutside()\n\n    const target = ev.target as HTMLElement\n    // Only dismiss content when focus moves outside of the menu\n    if (menuContext.rootNavigationMenu?.value?.contains(target))\n      ev.preventDefault()\n  }\n}\n\nfunction handlePointerDownOutside(ev: PointerDownOutsideEvent) {\n  emits('pointerDownOutside', ev)\n\n  if (!ev.defaultPrevented) {\n    const target = ev.target as HTMLElement\n    const isTrigger = getItems().some(i =>\n      i.ref.contains(target),\n    )\n    const isRootViewport\n    = menuContext.isRootMenu && menuContext.viewport.value?.contains(target)\n\n    if (isTrigger || isRootViewport || !menuContext.isRootMenu)\n      ev.preventDefault()\n  }\n}\n\nwatchEffect((cleanupFn) => {\n  const content = currentElement.value\n  if (menuContext.isRootMenu && content) {\n    // Bubble dismiss to the root content node and focus its trigger\n    const handleClose = () => {\n      menuContext.onItemDismiss()\n      itemContext.onRootContentClose()\n      if (content.contains(getActiveElement()))\n        itemContext.triggerRef.value?.focus()\n    }\n    content.addEventListener(EVENT_ROOT_CONTENT_DISMISS, handleClose)\n\n    cleanupFn(() =>\n      content.removeEventListener(EVENT_ROOT_CONTENT_DISMISS, handleClose),\n    )\n  }\n})\n\nfunction handleEscapeKeyDown(ev: KeyboardEvent) {\n  emits('escapeKeyDown', ev)\n\n  if (!ev.defaultPrevented) {\n    menuContext.onItemDismiss()\n    itemContext.triggerRef?.value?.focus()\n    itemContext.wasEscapeCloseRef.value = true\n  }\n}\n\nfunction handleKeydown(ev: KeyboardEvent) {\n  // prevent parent menu triggering keydown event\n  if ((ev.target as HTMLElement).closest('[data-reka-navigation-menu]') !== menuContext.rootNavigationMenu.value)\n    return\n\n  const isMetaKey = ev.altKey || ev.ctrlKey || ev.metaKey\n  const isTabKey = ev.key === 'Tab' && !isMetaKey\n  const candidates = getTabbableCandidates(ev.currentTarget as HTMLElement)\n\n  if (isTabKey) {\n    const focusedElement = getActiveElement()\n    const index = candidates.findIndex(\n      candidate => candidate === focusedElement,\n    )\n    const isMovingBackwards = ev.shiftKey\n    const nextCandidates = isMovingBackwards\n      ? candidates.slice(0, index).reverse()\n      : candidates.slice(index + 1, candidates.length)\n\n    if (focusFirst(nextCandidates)) {\n      // prevent browser tab keydown because we've handled focus\n      ev.preventDefault()\n    }\n    else {\n      // If we can't focus that means we're at the edges\n      // so focus the proxy and let browser handle\n      // tab/shift+tab keypress on the proxy instead\n      itemContext.focusProxyRef.value?.focus()\n      return\n    }\n  }\n\n  const newSelectedElement = useArrowNavigation(\n    ev,\n    getActiveElement() as HTMLElement,\n    undefined,\n    { itemsArray: candidates, loop: false, enableIgnoredElement: true },\n  )\n  newSelectedElement?.focus()\n}\n\nfunction handleDismiss() {\n  const rootContentDismissEvent = new Event(EVENT_ROOT_CONTENT_DISMISS, {\n    bubbles: true,\n    cancelable: true,\n  })\n  currentElement.value?.dispatchEvent(rootContentDismissEvent)\n}\n</script>\n\n<template>\n  <DismissableLayer\n    :id=\"contentId\"\n    :ref=\"forwardRef\"\n    :aria-labelledby=\"triggerId\"\n    :data-motion=\"motionAttribute\"\n    :data-state=\"getOpenState(menuContext.modelValue.value === itemContext.value)\"\n    :data-orientation=\"menuContext.orientation\"\n    v-bind=\"props\"\n    @keydown=\"handleKeydown\"\n    @escape-key-down=\"handleEscapeKeyDown\"\n    @pointer-down-outside=\"handlePointerDownOutside\"\n    @focus-outside=\"handleFocusOutside\"\n    @dismiss=\"handleDismiss\"\n  >\n    <slot />\n  </DismissableLayer>\n</template>\n", "<script lang=\"ts\">\nimport type { NavigationMenuContentImplEmits, NavigationMenuContentImplProps } from './NavigationMenuContentImpl.vue'\n\nexport type NavigationMenuContentEmits = NavigationMenuContentImplEmits\n\nexport interface NavigationMenuContentProps extends NavigationMenuContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { isClient, reactiveOmit } from '@vueuse/shared'\nimport { computed } from 'vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\nimport NavigationMenuContentImpl from './NavigationMenuContentImpl.vue'\nimport { injectNavigationMenuItemContext } from './NavigationMenuItem.vue'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport { getOpenState, whenMouse } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<NavigationMenuContentProps>()\nconst emits = defineEmits<NavigationMenuContentEmits>()\n\nconst forwarded = useForwardPropsEmits(reactiveOmit(props, 'forceMount'), emits)\nconst { forwardRef } = useForwardExpose()\n\nconst menuContext = injectNavigationMenuContext()\nconst itemContext = injectNavigationMenuItemContext()\n\nconst open = computed(() => itemContext.value === menuContext.modelValue.value)\n\n// We persist the last active content value as the viewport may be animating out\n// and we want the content to remain mounted for the lifecycle of the viewport.\nconst isLastActiveValue = computed(() => {\n  if (menuContext.viewport.value) {\n    if (!menuContext.modelValue.value && menuContext.previousValue.value)\n      return (menuContext.previousValue.value === itemContext.value)\n  }\n  return false\n})\n</script>\n\n<template>\n  <Teleport\n    :to=\"isClient && menuContext.viewport.value ? menuContext.viewport.value : 'body'\"\n    :disabled=\"isClient && menuContext.viewport.value ? !menuContext.viewport.value : true\"\n  >\n    <Presence\n      v-slot=\"{ present }\"\n      :present=\"forceMount || open || isLastActiveValue\"\n      :force-mount=\"!menuContext.unmountOnHide.value\"\n    >\n      <NavigationMenuContentImpl\n        :ref=\"forwardRef\"\n        :data-state=\"getOpenState(open)\"\n        :style=\"{\n          pointerEvents: !open && menuContext.isRootMenu ? 'none' : undefined,\n        }\"\n        v-bind=\"{ ...$attrs, ...forwarded }\"\n        :hidden=\"!present\"\n        @pointerenter=\"menuContext.onContentEnter(itemContext.value)\"\n        @pointerleave=\"whenMouse(() => menuContext.onContentLeave())($event)\"\n        @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n        @focus-outside=\"emits('focusOutside', $event)\"\n        @interact-outside=\"emits('interactOutside', $event)\"\n      >\n        <slot />\n      </NavigationMenuContentImpl>\n    </Presence>\n  </Teleport>\n</template>\n", "<script lang=\"ts\">\nimport type { NavigationMenuContentImplEmits, NavigationMenuContentImplProps } from './NavigationMenuContentImpl.vue'\n\nexport type NavigationMenuContentEmits = NavigationMenuContentImplEmits\n\nexport interface NavigationMenuContentProps extends NavigationMenuContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { isClient, reactiveOmit } from '@vueuse/shared'\nimport { computed } from 'vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\nimport NavigationMenuContentImpl from './NavigationMenuContentImpl.vue'\nimport { injectNavigationMenuItemContext } from './NavigationMenuItem.vue'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport { getOpenState, whenMouse } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<NavigationMenuContentProps>()\nconst emits = defineEmits<NavigationMenuContentEmits>()\n\nconst forwarded = useForwardPropsEmits(reactiveOmit(props, 'forceMount'), emits)\nconst { forwardRef } = useForwardExpose()\n\nconst menuContext = injectNavigationMenuContext()\nconst itemContext = injectNavigationMenuItemContext()\n\nconst open = computed(() => itemContext.value === menuContext.modelValue.value)\n\n// We persist the last active content value as the viewport may be animating out\n// and we want the content to remain mounted for the lifecycle of the viewport.\nconst isLastActiveValue = computed(() => {\n  if (menuContext.viewport.value) {\n    if (!menuContext.modelValue.value && menuContext.previousValue.value)\n      return (menuContext.previousValue.value === itemContext.value)\n  }\n  return false\n})\n</script>\n\n<template>\n  <Teleport\n    :to=\"isClient && menuContext.viewport.value ? menuContext.viewport.value : 'body'\"\n    :disabled=\"isClient && menuContext.viewport.value ? !menuContext.viewport.value : true\"\n  >\n    <Presence\n      v-slot=\"{ present }\"\n      :present=\"forceMount || open || isLastActiveValue\"\n      :force-mount=\"!menuContext.unmountOnHide.value\"\n    >\n      <NavigationMenuContentImpl\n        :ref=\"forwardRef\"\n        :data-state=\"getOpenState(open)\"\n        :style=\"{\n          pointerEvents: !open && menuContext.isRootMenu ? 'none' : undefined,\n        }\"\n        v-bind=\"{ ...$attrs, ...forwarded }\"\n        :hidden=\"!present\"\n        @pointerenter=\"menuContext.onContentEnter(itemContext.value)\"\n        @pointerleave=\"whenMouse(() => menuContext.onContentLeave())($event)\"\n        @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n        @focus-outside=\"emits('focusOutside', $event)\"\n        @interact-outside=\"emits('interactOutside', $event)\"\n      >\n        <slot />\n      </NavigationMenuContentImpl>\n    </Presence>\n  </Teleport>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface NavigationMenuIndicatorProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { computed, ref, watchEffect } from 'vue'\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<NavigationMenuIndicatorProps>()\n\nconst { forwardRef } = useForwardExpose()\nconst menuContext = injectNavigationMenuContext()\n\nconst indicatorStyle = ref<{ size: number, position: number }>()\nconst isHorizontal = computed(() => menuContext.orientation === 'horizontal')\nconst isVisible = computed(() => !!menuContext.modelValue.value)\nconst { activeTrigger } = menuContext\n\nfunction handlePositionChange() {\n  if (!activeTrigger.value) {\n    return\n  }\n\n  indicatorStyle.value = {\n    size: isHorizontal.value\n      ? activeTrigger.value.offsetWidth\n      : activeTrigger.value.offsetHeight,\n    position: isHorizontal.value\n      ? activeTrigger.value.offsetLeft\n      : activeTrigger.value.offsetTop,\n  }\n}\n\nwatchEffect(() => {\n  if (!menuContext.modelValue.value) {\n    return\n  }\n  handlePositionChange()\n})\n\nuseResizeObserver(activeTrigger, handlePositionChange)\nuseResizeObserver(menuContext.indicatorTrack, handlePositionChange)\n</script>\n\n<template>\n  <Teleport\n    v-if=\"menuContext.indicatorTrack.value\"\n    :to=\"menuContext.indicatorTrack.value\"\n  >\n    <Presence :present=\"forceMount || isVisible\">\n      <Primitive\n        :ref=\"forwardRef\"\n        aria-hidden=\"true\"\n        :data-state=\"isVisible ? 'visible' : 'hidden'\"\n        :data-orientation=\"menuContext.orientation\"\n        :as-child=\"props.asChild\"\n        :as=\"as\"\n        :style=\"{\n          ...(indicatorStyle ? {\n            '--reka-navigation-menu-indicator-size': `${indicatorStyle.size}px`,\n            '--reka-navigation-menu-indicator-position': `${indicatorStyle.position}px`,\n          } : {}),\n        }\"\n        v-bind=\"$attrs\"\n      >\n        <slot />\n      </Primitive>\n    </Presence>\n  </Teleport>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface NavigationMenuIndicatorProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { computed, ref, watchEffect } from 'vue'\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<NavigationMenuIndicatorProps>()\n\nconst { forwardRef } = useForwardExpose()\nconst menuContext = injectNavigationMenuContext()\n\nconst indicatorStyle = ref<{ size: number, position: number }>()\nconst isHorizontal = computed(() => menuContext.orientation === 'horizontal')\nconst isVisible = computed(() => !!menuContext.modelValue.value)\nconst { activeTrigger } = menuContext\n\nfunction handlePositionChange() {\n  if (!activeTrigger.value) {\n    return\n  }\n\n  indicatorStyle.value = {\n    size: isHorizontal.value\n      ? activeTrigger.value.offsetWidth\n      : activeTrigger.value.offsetHeight,\n    position: isHorizontal.value\n      ? activeTrigger.value.offsetLeft\n      : activeTrigger.value.offsetTop,\n  }\n}\n\nwatchEffect(() => {\n  if (!menuContext.modelValue.value) {\n    return\n  }\n  handlePositionChange()\n})\n\nuseResizeObserver(activeTrigger, handlePositionChange)\nuseResizeObserver(menuContext.indicatorTrack, handlePositionChange)\n</script>\n\n<template>\n  <Teleport\n    v-if=\"menuContext.indicatorTrack.value\"\n    :to=\"menuContext.indicatorTrack.value\"\n  >\n    <Presence :present=\"forceMount || isVisible\">\n      <Primitive\n        :ref=\"forwardRef\"\n        aria-hidden=\"true\"\n        :data-state=\"isVisible ? 'visible' : 'hidden'\"\n        :data-orientation=\"menuContext.orientation\"\n        :as-child=\"props.asChild\"\n        :as=\"as\"\n        :style=\"{\n          ...(indicatorStyle ? {\n            '--reka-navigation-menu-indicator-size': `${indicatorStyle.size}px`,\n            '--reka-navigation-menu-indicator-position': `${indicatorStyle.position}px`,\n          } : {}),\n        }\"\n        v-bind=\"$attrs\"\n      >\n        <slot />\n      </Primitive>\n    </Presence>\n  </Teleport>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { useForwardExpose } from '@/shared'\n\nexport type NavigationMenuLinkEmits = {\n  /**\n   * Event handler called when the user selects a link (via mouse or keyboard).\n   *\n   * Calling `event.preventDefault` in this handler will prevent the navigation menu from closing when selecting that link.\n   */\n  select: [payload: CustomEvent<{ originalEvent: Event }>]\n}\nexport interface NavigationMenuLinkProps extends PrimitiveProps {\n  /** Used to identify the link as the currently active page. */\n  active?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { EVENT_ROOT_CONTENT_DISMISS, LINK_SELECT } from './utils'\n\nconst props = withDefaults(defineProps<NavigationMenuLinkProps>(), {\n  as: 'a',\n})\n\nconst emits = defineEmits<NavigationMenuLinkEmits>()\n\nconst { CollectionItem } = useCollection({ key: 'NavigationMenu' })\nuseForwardExpose()\n\nasync function handleClick(ev: MouseEvent) {\n  const linkSelectEvent = new CustomEvent(LINK_SELECT, {\n    bubbles: true,\n    cancelable: true,\n    detail: {\n      originalEvent: ev,\n    },\n  })\n  emits('select', linkSelectEvent)\n\n  if (!linkSelectEvent.defaultPrevented && !ev.metaKey) {\n    const rootContentDismissEvent = new CustomEvent(\n      EVENT_ROOT_CONTENT_DISMISS,\n      {\n        bubbles: true,\n        cancelable: true,\n      },\n    )\n    ev.target?.dispatchEvent(rootContentDismissEvent)\n  }\n}\n</script>\n\n<template>\n  <CollectionItem>\n    <Primitive\n      :as=\"as\"\n      :data-active=\"active ? '' : undefined\"\n      :aria-current=\"active ? 'page' : undefined\"\n      :as-child=\"props.asChild\"\n      @click=\"handleClick\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { useForwardExpose } from '@/shared'\n\nexport type NavigationMenuLinkEmits = {\n  /**\n   * Event handler called when the user selects a link (via mouse or keyboard).\n   *\n   * Calling `event.preventDefault` in this handler will prevent the navigation menu from closing when selecting that link.\n   */\n  select: [payload: CustomEvent<{ originalEvent: Event }>]\n}\nexport interface NavigationMenuLinkProps extends PrimitiveProps {\n  /** Used to identify the link as the currently active page. */\n  active?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { EVENT_ROOT_CONTENT_DISMISS, LINK_SELECT } from './utils'\n\nconst props = withDefaults(defineProps<NavigationMenuLinkProps>(), {\n  as: 'a',\n})\n\nconst emits = defineEmits<NavigationMenuLinkEmits>()\n\nconst { CollectionItem } = useCollection({ key: 'NavigationMenu' })\nuseForwardExpose()\n\nasync function handleClick(ev: MouseEvent) {\n  const linkSelectEvent = new CustomEvent(LINK_SELECT, {\n    bubbles: true,\n    cancelable: true,\n    detail: {\n      originalEvent: ev,\n    },\n  })\n  emits('select', linkSelectEvent)\n\n  if (!linkSelectEvent.defaultPrevented && !ev.metaKey) {\n    const rootContentDismissEvent = new CustomEvent(\n      EVENT_ROOT_CONTENT_DISMISS,\n      {\n        bubbles: true,\n        cancelable: true,\n      },\n    )\n    ev.target?.dispatchEvent(rootContentDismissEvent)\n  }\n}\n</script>\n\n<template>\n  <CollectionItem>\n    <Primitive\n      :as=\"as\"\n      :data-active=\"active ? '' : undefined\"\n      :aria-current=\"active ? 'page' : undefined\"\n      :as-child=\"props.asChild\"\n      @click=\"handleClick\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface NavigationMenuListProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<NavigationMenuListProps>(), {\n  as: 'ul',\n})\n\nconst menuContext = injectNavigationMenuContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nonMounted(() => {\n  menuContext.onIndicatorTrackChange(currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    style=\"position: relative\"\n  >\n    <Primitive\n      v-bind=\"$attrs\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      :data-orientation=\"menuContext.orientation\"\n    >\n      <slot />\n    </Primitive>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface NavigationMenuListProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<NavigationMenuListProps>(), {\n  as: 'ul',\n})\n\nconst menuContext = injectNavigationMenuContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nonMounted(() => {\n  menuContext.onIndicatorTrackChange(currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    style=\"position: relative\"\n  >\n    <Primitive\n      v-bind=\"$attrs\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      :data-orientation=\"menuContext.orientation\"\n    >\n      <slot />\n    </Primitive>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Orientation } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\n\nexport type NavigationMenuSubEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: string]\n}\n\nexport interface NavigationMenuSubProps extends PrimitiveProps {\n  /** The controlled value of the sub menu item to activate. Can be used as `v-model`. */\n  modelValue?: string\n  /**\n   * The value of the menu item that should be active when initially rendered.\n   *\n   * Use when you do not need to control the value state.\n   */\n  defaultValue?: string\n  /** The orientation of the menu. */\n  orientation?: Orientation\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, watchEffect } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectNavigationMenuContext, provideNavigationMenuContext } from './NavigationMenuRoot.vue'\n\nconst props = withDefaults(defineProps<NavigationMenuSubProps>(), {\n  orientation: 'horizontal',\n})\nconst emits = defineEmits<NavigationMenuSubEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? '',\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<string>\nconst previousValue = ref('')\n\nconst menuContext = injectNavigationMenuContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst indicatorTrack = ref<HTMLElement>()\nconst viewport = ref<HTMLElement>()\nconst activeTrigger = ref<HTMLElement>()\n\nconst { getItems, CollectionSlot } = useCollection({ key: 'NavigationMenu', isProvider: true })\n\nwatchEffect(() => {\n  if (!modelValue.value)\n    return\n\n  const items = getItems().map(i => i.ref)\n  activeTrigger.value = items.find(item =>\n    item.id.includes(modelValue.value),\n  )\n})\n\nprovideNavigationMenuContext({\n  ...menuContext,\n  isRootMenu: false,\n  modelValue,\n  previousValue,\n  activeTrigger,\n  orientation: props.orientation,\n  rootNavigationMenu: currentElement,\n  indicatorTrack,\n  onIndicatorTrackChange: (val) => {\n    indicatorTrack.value = val\n  },\n  viewport,\n  onViewportChange: (val) => {\n    viewport.value = val\n  },\n\n  onTriggerEnter: (val) => {\n    modelValue.value = val\n  },\n  onTriggerLeave: () => {\n    // do nothing for submenu\n  },\n  onContentEnter: () => {\n    // do nothing for submenu\n  },\n  onContentLeave: () => {\n    // do nothing for submenu\n  },\n  onItemSelect: (val) => {\n    modelValue.value = val\n  },\n  onItemDismiss: () => {\n    modelValue.value = ''\n  },\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      :ref=\"forwardRef\"\n      :data-orientation=\"orientation\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      data-reka-navigation-menu\n    >\n      <slot :model-value=\"modelValue\" />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Orientation } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\n\nexport type NavigationMenuSubEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: string]\n}\n\nexport interface NavigationMenuSubProps extends PrimitiveProps {\n  /** The controlled value of the sub menu item to activate. Can be used as `v-model`. */\n  modelValue?: string\n  /**\n   * The value of the menu item that should be active when initially rendered.\n   *\n   * Use when you do not need to control the value state.\n   */\n  defaultValue?: string\n  /** The orientation of the menu. */\n  orientation?: Orientation\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { ref, watchEffect } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectNavigationMenuContext, provideNavigationMenuContext } from './NavigationMenuRoot.vue'\n\nconst props = withDefaults(defineProps<NavigationMenuSubProps>(), {\n  orientation: 'horizontal',\n})\nconst emits = defineEmits<NavigationMenuSubEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? '',\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<string>\nconst previousValue = ref('')\n\nconst menuContext = injectNavigationMenuContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst indicatorTrack = ref<HTMLElement>()\nconst viewport = ref<HTMLElement>()\nconst activeTrigger = ref<HTMLElement>()\n\nconst { getItems, CollectionSlot } = useCollection({ key: 'NavigationMenu', isProvider: true })\n\nwatchEffect(() => {\n  if (!modelValue.value)\n    return\n\n  const items = getItems().map(i => i.ref)\n  activeTrigger.value = items.find(item =>\n    item.id.includes(modelValue.value),\n  )\n})\n\nprovideNavigationMenuContext({\n  ...menuContext,\n  isRootMenu: false,\n  modelValue,\n  previousValue,\n  activeTrigger,\n  orientation: props.orientation,\n  rootNavigationMenu: currentElement,\n  indicatorTrack,\n  onIndicatorTrackChange: (val) => {\n    indicatorTrack.value = val\n  },\n  viewport,\n  onViewportChange: (val) => {\n    viewport.value = val\n  },\n\n  onTriggerEnter: (val) => {\n    modelValue.value = val\n  },\n  onTriggerLeave: () => {\n    // do nothing for submenu\n  },\n  onContentEnter: () => {\n    // do nothing for submenu\n  },\n  onContentLeave: () => {\n    // do nothing for submenu\n  },\n  onItemSelect: (val) => {\n    modelValue.value = val\n  },\n  onItemDismiss: () => {\n    modelValue.value = ''\n  },\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      :ref=\"forwardRef\"\n      :data-orientation=\"orientation\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      data-reka-navigation-menu\n    >\n      <slot :model-value=\"modelValue\" />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { VNode } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { useForwardExpose } from '@/shared'\n\nexport interface NavigationMenuTriggerProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { refAutoReset, unrefElement } from '@vueuse/core'\nimport { computed, onMounted, ref } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { VisuallyHidden } from '@/VisuallyHidden'\nimport { injectNavigationMenuItemContext } from './NavigationMenuItem.vue'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport { getOpenState, makeContentId, makeTriggerId } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<NavigationMenuTriggerProps>(), {\n  as: 'button',\n})\n\nconst menuContext = injectNavigationMenuContext()\nconst itemContext = injectNavigationMenuItemContext()\n\nconst { CollectionItem } = useCollection({ key: 'NavigationMenu' })\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\nconst triggerId = ref('')\nconst contentId = ref('')\n\nconst hasPointerMoveOpenedRef = refAutoReset(false, 300)\nconst wasClickCloseRef = ref(false)\n\nconst open = computed(() => itemContext.value === menuContext.modelValue.value)\n\nonMounted(() => {\n  itemContext.triggerRef = triggerElement\n  triggerId.value = makeTriggerId(menuContext.baseId, itemContext.value)\n  contentId.value = makeContentId(menuContext.baseId, itemContext.value)\n})\n\nfunction handlePointerEnter() {\n  if (menuContext.disableHoverTrigger.value)\n    return\n\n  wasClickCloseRef.value = false\n  itemContext.wasEscapeCloseRef.value = false\n}\n\nfunction handlePointerMove(ev: PointerEvent) {\n  if (menuContext.disableHoverTrigger.value)\n    return\n\n  if (ev.pointerType === 'mouse') {\n    if (\n      props.disabled\n      || wasClickCloseRef.value\n      || itemContext.wasEscapeCloseRef.value\n      || hasPointerMoveOpenedRef.value\n    ) {\n      return\n    }\n\n    menuContext.onTriggerEnter(itemContext.value)\n    hasPointerMoveOpenedRef.value = true\n  }\n}\n\nfunction handlePointerLeave(ev: PointerEvent) {\n  if (menuContext.disableHoverTrigger.value)\n    return\n\n  if (ev.pointerType === 'mouse') {\n    if (props.disabled)\n      return\n    menuContext.onTriggerLeave()\n    hasPointerMoveOpenedRef.value = false\n  }\n}\n\nfunction handleClick(event: PointerEvent) {\n  if (event.pointerType === 'mouse' && menuContext.disableClickTrigger.value)\n    return\n\n  // if open via pointermove, we prevent click event\n  if (hasPointerMoveOpenedRef.value)\n    return\n\n  if (open.value)\n    menuContext.onItemSelect('')\n  else menuContext.onItemSelect(itemContext.value)\n\n  wasClickCloseRef.value = open.value\n}\n\nfunction handleKeydown(ev: KeyboardEvent) {\n  const verticalEntryKey = menuContext.dir.value === 'rtl' ? 'ArrowLeft' : 'ArrowRight'\n  const entryKey = { horizontal: 'ArrowDown', vertical: verticalEntryKey }[\n    menuContext.orientation\n  ]\n  if (open.value && ev.key === entryKey) {\n    itemContext.onEntryKeyDown()\n    // Prevent FocusGroupItem from handling the event\n    ev.preventDefault()\n    ev.stopPropagation()\n  }\n}\n\nfunction setFocusProxyRef(node: VNode) {\n  // @ts-expect-error unrefElement expect MaybeRef, but also support Vnode\n  itemContext.focusProxyRef.value = unrefElement(node)\n  return undefined\n}\n\nfunction handleVisuallyHiddenFocus(ev: FocusEvent) {\n  const content = document.getElementById(itemContext.contentId)\n  const prevFocusedElement = ev.relatedTarget as HTMLElement | null\n\n  const wasTriggerFocused = prevFocusedElement === triggerElement.value\n  const wasFocusFromContent = content?.contains(prevFocusedElement)\n\n  if (wasTriggerFocused || !wasFocusFromContent)\n    itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end')\n}\n</script>\n\n<template>\n  <CollectionItem>\n    <Primitive\n      :id=\"triggerId\"\n      :ref=\"forwardRef\"\n      :disabled=\"disabled\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-state=\"getOpenState(open)\"\n      data-navigation-menu-trigger\n      :aria-expanded=\"open\"\n      :aria-controls=\"contentId\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      v-bind=\"$attrs\"\n      @pointerenter=\"handlePointerEnter\"\n      @pointermove=\"handlePointerMove\"\n      @pointerleave=\"handlePointerLeave\"\n      @click=\"handleClick\"\n      @keydown=\"handleKeydown\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n\n  <template v-if=\"open\">\n    <VisuallyHidden\n      :ref=\"setFocusProxyRef\"\n      aria-hidden=\"true\"\n      :tabindex=\"0\"\n      @focus=\"handleVisuallyHiddenFocus\"\n    />\n    <span\n      v-if=\"menuContext.viewport\"\n      :aria-owns=\"contentId\"\n    />\n  </template>\n</template>\n", "<script lang=\"ts\">\nimport type { VNode } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { useForwardExpose } from '@/shared'\n\nexport interface NavigationMenuTriggerProps extends PrimitiveProps {\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { refAutoReset, unrefElement } from '@vueuse/core'\nimport { computed, onMounted, ref } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { VisuallyHidden } from '@/VisuallyHidden'\nimport { injectNavigationMenuItemContext } from './NavigationMenuItem.vue'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport { getOpenState, makeContentId, makeTriggerId } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<NavigationMenuTriggerProps>(), {\n  as: 'button',\n})\n\nconst menuContext = injectNavigationMenuContext()\nconst itemContext = injectNavigationMenuItemContext()\n\nconst { CollectionItem } = useCollection({ key: 'NavigationMenu' })\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\nconst triggerId = ref('')\nconst contentId = ref('')\n\nconst hasPointerMoveOpenedRef = refAutoReset(false, 300)\nconst wasClickCloseRef = ref(false)\n\nconst open = computed(() => itemContext.value === menuContext.modelValue.value)\n\nonMounted(() => {\n  itemContext.triggerRef = triggerElement\n  triggerId.value = makeTriggerId(menuContext.baseId, itemContext.value)\n  contentId.value = makeContentId(menuContext.baseId, itemContext.value)\n})\n\nfunction handlePointerEnter() {\n  if (menuContext.disableHoverTrigger.value)\n    return\n\n  wasClickCloseRef.value = false\n  itemContext.wasEscapeCloseRef.value = false\n}\n\nfunction handlePointerMove(ev: PointerEvent) {\n  if (menuContext.disableHoverTrigger.value)\n    return\n\n  if (ev.pointerType === 'mouse') {\n    if (\n      props.disabled\n      || wasClickCloseRef.value\n      || itemContext.wasEscapeCloseRef.value\n      || hasPointerMoveOpenedRef.value\n    ) {\n      return\n    }\n\n    menuContext.onTriggerEnter(itemContext.value)\n    hasPointerMoveOpenedRef.value = true\n  }\n}\n\nfunction handlePointerLeave(ev: PointerEvent) {\n  if (menuContext.disableHoverTrigger.value)\n    return\n\n  if (ev.pointerType === 'mouse') {\n    if (props.disabled)\n      return\n    menuContext.onTriggerLeave()\n    hasPointerMoveOpenedRef.value = false\n  }\n}\n\nfunction handleClick(event: PointerEvent) {\n  if (event.pointerType === 'mouse' && menuContext.disableClickTrigger.value)\n    return\n\n  // if open via pointermove, we prevent click event\n  if (hasPointerMoveOpenedRef.value)\n    return\n\n  if (open.value)\n    menuContext.onItemSelect('')\n  else menuContext.onItemSelect(itemContext.value)\n\n  wasClickCloseRef.value = open.value\n}\n\nfunction handleKeydown(ev: KeyboardEvent) {\n  const verticalEntryKey = menuContext.dir.value === 'rtl' ? 'ArrowLeft' : 'ArrowRight'\n  const entryKey = { horizontal: 'ArrowDown', vertical: verticalEntryKey }[\n    menuContext.orientation\n  ]\n  if (open.value && ev.key === entryKey) {\n    itemContext.onEntryKeyDown()\n    // Prevent FocusGroupItem from handling the event\n    ev.preventDefault()\n    ev.stopPropagation()\n  }\n}\n\nfunction setFocusProxyRef(node: VNode) {\n  // @ts-expect-error unrefElement expect MaybeRef, but also support Vnode\n  itemContext.focusProxyRef.value = unrefElement(node)\n  return undefined\n}\n\nfunction handleVisuallyHiddenFocus(ev: FocusEvent) {\n  const content = document.getElementById(itemContext.contentId)\n  const prevFocusedElement = ev.relatedTarget as HTMLElement | null\n\n  const wasTriggerFocused = prevFocusedElement === triggerElement.value\n  const wasFocusFromContent = content?.contains(prevFocusedElement)\n\n  if (wasTriggerFocused || !wasFocusFromContent)\n    itemContext.onFocusProxyEnter(wasTriggerFocused ? 'start' : 'end')\n}\n</script>\n\n<template>\n  <CollectionItem>\n    <Primitive\n      :id=\"triggerId\"\n      :ref=\"forwardRef\"\n      :disabled=\"disabled\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-state=\"getOpenState(open)\"\n      data-navigation-menu-trigger\n      :aria-expanded=\"open\"\n      :aria-controls=\"contentId\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n      v-bind=\"$attrs\"\n      @pointerenter=\"handlePointerEnter\"\n      @pointermove=\"handlePointerMove\"\n      @pointerleave=\"handlePointerLeave\"\n      @click=\"handleClick\"\n      @keydown=\"handleKeydown\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n\n  <template v-if=\"open\">\n    <VisuallyHidden\n      :ref=\"setFocusProxyRef\"\n      aria-hidden=\"true\"\n      :tabindex=\"0\"\n      @focus=\"handleVisuallyHiddenFocus\"\n    />\n    <span\n      v-if=\"menuContext.viewport\"\n      :aria-owns=\"contentId\"\n    />\n  </template>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface NavigationMenuViewportProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n  /**\n   * Placement of the viewport for css variables `(--reka-navigation-menu-viewport-left, --reka-navigation-menu-viewport-top)`.\n   * @defaultValue 'center'\n   */\n  align?: 'start' | 'center' | 'end'\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { Presence } from '@/Presence'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport { getOpenState, whenMouse } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<NavigationMenuViewportProps>(), {\n  align: 'center',\n})\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst menuContext = injectNavigationMenuContext()\nconst { activeTrigger, rootNavigationMenu, modelValue } = menuContext\n\nconst size = ref<{ width: number, height: number }>()\nconst position = ref<{ left: number, top: number }>()\n\nconst open = computed(() => !!menuContext.modelValue.value)\n\nwatch(currentElement, () => {\n  menuContext.onViewportChange(currentElement.value)\n})\n\nconst content = ref<HTMLElement>()\n\nwatch([modelValue, open], () => {\n  nextTick(() => {\n    if (!currentElement.value)\n      return\n\n    requestAnimationFrame(() => {\n      const el = (currentElement.value as HTMLElement)?.querySelector('[data-state=open]') as HTMLElement | undefined\n      content.value = el\n    })\n  })\n}, { immediate: true })\n\nfunction updatePosition() {\n  if (content.value && activeTrigger.value && rootNavigationMenu.value) {\n    const bodyWidth = document.documentElement.offsetWidth\n    const bodyHeight = document.documentElement.offsetHeight\n    const rootRect = rootNavigationMenu.value.getBoundingClientRect()\n    const rect = activeTrigger.value.getBoundingClientRect()\n    const { offsetWidth, offsetHeight } = content.value\n\n    // Find the beginning of the position of the menu item\n    const startPositionLeft = rect.left - rootRect.left\n    const startPositionTop = rect.top - rootRect.top\n\n    // Aligning to specified alignment\n    let posLeft = null\n    let posTop = null\n    switch (props.align) {\n      case 'start':\n        posLeft = startPositionLeft\n        posTop = startPositionTop\n        break\n      case 'end':\n        posLeft = startPositionLeft - offsetWidth + rect.width\n        posTop = startPositionTop - offsetHeight + rect.height\n        break\n      default:\n        // center\n        posLeft = startPositionLeft - offsetWidth / 2 + rect.width / 2\n        posTop = startPositionTop - offsetHeight / 2 + rect.height / 2\n    }\n\n    const screenOffset = 10\n\n    // Do not let go of the left side of the screen\n    if (posLeft + rootRect.left < screenOffset) {\n      posLeft = screenOffset - rootRect.left\n    }\n\n    // Now also check the right side of the screen\n    const rightOffset = posLeft + rootRect.left + offsetWidth\n    if (rightOffset > bodyWidth - screenOffset) {\n      posLeft -= rightOffset - bodyWidth + screenOffset\n\n      // Recheck the left side of the screen\n      if (posLeft < screenOffset - rootRect.left) {\n        // Just set the menu to the full width of the screen\n        posLeft = screenOffset - rootRect.left\n      }\n    }\n\n    // Do not let go of the top side of the screen\n    if (posTop + rootRect.top < screenOffset) {\n      posTop = screenOffset - rootRect.top\n    }\n\n    // Now also check the bottom side of the screen\n    const bottomOffset = posTop + rootRect.top + offsetHeight\n    if (bottomOffset > bodyHeight - screenOffset) {\n      posTop -= bottomOffset - bodyHeight + screenOffset\n\n      // Recheck the top side of the screen\n      if (posTop < screenOffset - rootRect.top) {\n        // Just set the menu to the full height of the screen\n        posTop = screenOffset - rootRect.top\n      }\n    }\n\n    // Possible blurring font with decimal values\n    posLeft = Math.round(posLeft)\n    posTop = Math.round(posTop)\n\n    position.value = {\n      left: posLeft,\n      top: posTop,\n    }\n  }\n}\n\nuseResizeObserver(content, () => {\n  if (content.value) {\n    size.value = {\n      width: content.value.offsetWidth,\n      height: content.value.offsetHeight,\n    }\n    updatePosition()\n  }\n})\n\nuseResizeObserver([globalThis.document?.body, rootNavigationMenu], () => {\n  updatePosition()\n})\n</script>\n\n<template>\n  <Presence\n    v-slot=\"{ present }\"\n    :present=\"forceMount || open\"\n    :force-mount=\"!menuContext.unmountOnHide.value\"\n    @after-leave=\"() => {\n      size = undefined\n      position = undefined\n    }\"\n  >\n    <Primitive\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :data-state=\"getOpenState(open)\"\n      :data-orientation=\"menuContext.orientation\"\n      :style=\"{\n        // Prevent interaction when animating out\n        pointerEvents: !open && menuContext.isRootMenu ? 'none' : undefined,\n        ['--reka-navigation-menu-viewport-width']: size ? `${size?.width}px` : undefined,\n        ['--reka-navigation-menu-viewport-height']: size ? `${size?.height}px` : undefined,\n        ['--reka-navigation-menu-viewport-left']: position ? `${position?.left}px` : undefined,\n        ['--reka-navigation-menu-viewport-top']: position ? `${position?.top}px` : undefined,\n      }\"\n      :hidden=\"!present\"\n      @pointerenter=\"menuContext.onContentEnter(menuContext.modelValue.value)\"\n      @pointerleave=\"whenMouse(() => menuContext.onContentLeave())($event)\"\n    >\n      <slot />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface NavigationMenuViewportProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n  /**\n   * Placement of the viewport for css variables `(--reka-navigation-menu-viewport-left, --reka-navigation-menu-viewport-top)`.\n   * @defaultValue 'center'\n   */\n  align?: 'start' | 'center' | 'end'\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { Presence } from '@/Presence'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectNavigationMenuContext } from './NavigationMenuRoot.vue'\nimport { getOpenState, whenMouse } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<NavigationMenuViewportProps>(), {\n  align: 'center',\n})\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst menuContext = injectNavigationMenuContext()\nconst { activeTrigger, rootNavigationMenu, modelValue } = menuContext\n\nconst size = ref<{ width: number, height: number }>()\nconst position = ref<{ left: number, top: number }>()\n\nconst open = computed(() => !!menuContext.modelValue.value)\n\nwatch(currentElement, () => {\n  menuContext.onViewportChange(currentElement.value)\n})\n\nconst content = ref<HTMLElement>()\n\nwatch([modelValue, open], () => {\n  nextTick(() => {\n    if (!currentElement.value)\n      return\n\n    requestAnimationFrame(() => {\n      const el = (currentElement.value as HTMLElement)?.querySelector('[data-state=open]') as HTMLElement | undefined\n      content.value = el\n    })\n  })\n}, { immediate: true })\n\nfunction updatePosition() {\n  if (content.value && activeTrigger.value && rootNavigationMenu.value) {\n    const bodyWidth = document.documentElement.offsetWidth\n    const bodyHeight = document.documentElement.offsetHeight\n    const rootRect = rootNavigationMenu.value.getBoundingClientRect()\n    const rect = activeTrigger.value.getBoundingClientRect()\n    const { offsetWidth, offsetHeight } = content.value\n\n    // Find the beginning of the position of the menu item\n    const startPositionLeft = rect.left - rootRect.left\n    const startPositionTop = rect.top - rootRect.top\n\n    // Aligning to specified alignment\n    let posLeft = null\n    let posTop = null\n    switch (props.align) {\n      case 'start':\n        posLeft = startPositionLeft\n        posTop = startPositionTop\n        break\n      case 'end':\n        posLeft = startPositionLeft - offsetWidth + rect.width\n        posTop = startPositionTop - offsetHeight + rect.height\n        break\n      default:\n        // center\n        posLeft = startPositionLeft - offsetWidth / 2 + rect.width / 2\n        posTop = startPositionTop - offsetHeight / 2 + rect.height / 2\n    }\n\n    const screenOffset = 10\n\n    // Do not let go of the left side of the screen\n    if (posLeft + rootRect.left < screenOffset) {\n      posLeft = screenOffset - rootRect.left\n    }\n\n    // Now also check the right side of the screen\n    const rightOffset = posLeft + rootRect.left + offsetWidth\n    if (rightOffset > bodyWidth - screenOffset) {\n      posLeft -= rightOffset - bodyWidth + screenOffset\n\n      // Recheck the left side of the screen\n      if (posLeft < screenOffset - rootRect.left) {\n        // Just set the menu to the full width of the screen\n        posLeft = screenOffset - rootRect.left\n      }\n    }\n\n    // Do not let go of the top side of the screen\n    if (posTop + rootRect.top < screenOffset) {\n      posTop = screenOffset - rootRect.top\n    }\n\n    // Now also check the bottom side of the screen\n    const bottomOffset = posTop + rootRect.top + offsetHeight\n    if (bottomOffset > bodyHeight - screenOffset) {\n      posTop -= bottomOffset - bodyHeight + screenOffset\n\n      // Recheck the top side of the screen\n      if (posTop < screenOffset - rootRect.top) {\n        // Just set the menu to the full height of the screen\n        posTop = screenOffset - rootRect.top\n      }\n    }\n\n    // Possible blurring font with decimal values\n    posLeft = Math.round(posLeft)\n    posTop = Math.round(posTop)\n\n    position.value = {\n      left: posLeft,\n      top: posTop,\n    }\n  }\n}\n\nuseResizeObserver(content, () => {\n  if (content.value) {\n    size.value = {\n      width: content.value.offsetWidth,\n      height: content.value.offsetHeight,\n    }\n    updatePosition()\n  }\n})\n\nuseResizeObserver([globalThis.document?.body, rootNavigationMenu], () => {\n  updatePosition()\n})\n</script>\n\n<template>\n  <Presence\n    v-slot=\"{ present }\"\n    :present=\"forceMount || open\"\n    :force-mount=\"!menuContext.unmountOnHide.value\"\n    @after-leave=\"() => {\n      size = undefined\n      position = undefined\n    }\"\n  >\n    <Primitive\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :data-state=\"getOpenState(open)\"\n      :data-orientation=\"menuContext.orientation\"\n      :style=\"{\n        // Prevent interaction when animating out\n        pointerEvents: !open && menuContext.isRootMenu ? 'none' : undefined,\n        ['--reka-navigation-menu-viewport-width']: size ? `${size?.width}px` : undefined,\n        ['--reka-navigation-menu-viewport-height']: size ? `${size?.height}px` : undefined,\n        ['--reka-navigation-menu-viewport-left']: position ? `${position?.left}px` : undefined,\n        ['--reka-navigation-menu-viewport-top']: position ? `${position?.top}px` : undefined,\n      }\"\n      :hidden=\"!present\"\n      @pointerenter=\"menuContext.onContentEnter(menuContext.modelValue.value)\"\n      @pointerleave=\"whenMouse(() => menuContext.onContentLeave())($event)\"\n    >\n      <slot />\n    </Primitive>\n  </Presence>\n</template>\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet formatterCache = new Map<string, Intl.NumberFormat>();\n\nlet supportsSignDisplay = false;\ntry {\n  supportsSignDisplay = (new Intl.NumberFormat('de-DE', {signDisplay: 'exceptZero'})).resolvedOptions().signDisplay === 'exceptZero';\n  // eslint-disable-next-line no-empty\n} catch {}\n\nlet supportsUnit = false;\ntry {\n  supportsUnit = (new Intl.NumberFormat('de-DE', {style: 'unit', unit: 'degree'})).resolvedOptions().style === 'unit';\n  // eslint-disable-next-line no-empty\n} catch {}\n\n// Polyfill for units since Safari doesn't support them yet. See https://bugs.webkit.org/show_bug.cgi?id=215438.\n// Currently only polyfilling the unit degree in narrow format for ColorSlider in our supported locales.\n// Values were determined by switching to each locale manually in Chrome.\nconst UNITS = {\n  degree: {\n    narrow: {\n      default: '°',\n      'ja-JP': ' 度',\n      'zh-TW': '度',\n      'sl-SI': ' °'\n      // Arabic?? But Safari already doesn't use Arabic digits so might be ok...\n      // https://bugs.webkit.org/show_bug.cgi?id=218139\n    }\n  }\n};\n\nexport interface NumberFormatOptions extends Intl.NumberFormatOptions {\n  /** Overrides default numbering system for the current locale. */\n  numberingSystem?: string\n}\n\ninterface NumberRangeFormatPart extends Intl.NumberFormatPart {\n  source: 'startRange' | 'endRange' | 'shared'\n}\n\n/**\n * A wrapper around Intl.NumberFormat providing additional options, polyfills, and caching for performance.\n */\nexport class NumberFormatter implements Intl.NumberFormat {\n  private numberFormatter: Intl.NumberFormat;\n  private options: NumberFormatOptions;\n\n  constructor(locale: string, options: NumberFormatOptions = {}) {\n    this.numberFormatter = getCachedNumberFormatter(locale, options);\n    this.options = options;\n  }\n\n  /** Formats a number value as a string, according to the locale and options provided to the constructor. */\n  format(value: number): string {\n    let res = '';\n    if (!supportsSignDisplay && this.options.signDisplay != null) {\n      res = numberFormatSignDisplayPolyfill(this.numberFormatter, this.options.signDisplay, value);\n    } else {\n      res = this.numberFormatter.format(value);\n    }\n\n    if (this.options.style === 'unit' && !supportsUnit) {\n      let {unit, unitDisplay = 'short', locale} = this.resolvedOptions();\n      if (!unit) {\n        return res;\n      }\n      let values = UNITS[unit]?.[unitDisplay];\n      res += values[locale] || values.default;\n    }\n\n    return res;\n  }\n\n  /** Formats a number to an array of parts such as separators, digits, punctuation, and more. */\n  formatToParts(value: number): Intl.NumberFormatPart[] {\n    // TODO: implement signDisplay for formatToParts\n    return this.numberFormatter.formatToParts(value);\n  }\n\n  /** Formats a number range as a string. */\n  formatRange(start: number, end: number): string {\n    if (typeof this.numberFormatter.formatRange === 'function') {\n      return this.numberFormatter.formatRange(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    // Very basic fallback for old browsers.\n    return `${this.format(start)} – ${this.format(end)}`;\n  }\n\n  /** Formats a number range as an array of parts. */\n  formatRangeToParts(start: number, end: number): NumberRangeFormatPart[] {\n    if (typeof this.numberFormatter.formatRangeToParts === 'function') {\n      return this.numberFormatter.formatRangeToParts(start, end);\n    }\n\n    if (end < start) {\n      throw new RangeError('End date must be >= start date');\n    }\n\n    let startParts = this.numberFormatter.formatToParts(start);\n    let endParts = this.numberFormatter.formatToParts(end);\n    return [\n      ...startParts.map(p => ({...p, source: 'startRange'} as NumberRangeFormatPart)),\n      {type: 'literal', value: ' – ', source: 'shared'},\n      ...endParts.map(p => ({...p, source: 'endRange'} as NumberRangeFormatPart))\n    ];\n  }\n\n  /** Returns the resolved formatting options based on the values passed to the constructor. */\n  resolvedOptions(): Intl.ResolvedNumberFormatOptions {\n    let options = this.numberFormatter.resolvedOptions();\n    if (!supportsSignDisplay && this.options.signDisplay != null) {\n      options = {...options, signDisplay: this.options.signDisplay};\n    }\n\n    if (!supportsUnit && this.options.style === 'unit') {\n      options = {...options, style: 'unit', unit: this.options.unit, unitDisplay: this.options.unitDisplay};\n    }\n\n    return options;\n  }\n}\n\nfunction getCachedNumberFormatter(locale: string, options: NumberFormatOptions = {}): Intl.NumberFormat {\n  let {numberingSystem} = options;\n  if (numberingSystem && locale.includes('-nu-')) {\n    if (!locale.includes('-u-')) {\n      locale += '-u-';\n    }\n    locale += `-nu-${numberingSystem}`;\n  }\n\n  if (options.style === 'unit' && !supportsUnit) {\n    let {unit, unitDisplay = 'short'} = options;\n    if (!unit) {\n      throw new Error('unit option must be provided with style: \"unit\"');\n    }\n    if (!UNITS[unit]?.[unitDisplay]) {\n      throw new Error(`Unsupported unit ${unit} with unitDisplay = ${unitDisplay}`);\n    }\n    options = {...options, style: 'decimal'};\n  }\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (formatterCache.has(cacheKey)) {\n    return formatterCache.get(cacheKey)!;\n  }\n\n  let numberFormatter = new Intl.NumberFormat(locale, options);\n  formatterCache.set(cacheKey, numberFormatter);\n  return numberFormatter;\n}\n\n/** @private - exported for tests */\nexport function numberFormatSignDisplayPolyfill(numberFormat: Intl.NumberFormat, signDisplay: string, num: number): string {\n  if (signDisplay === 'auto') {\n    return numberFormat.format(num);\n  } else if (signDisplay === 'never') {\n    return numberFormat.format(Math.abs(num));\n  } else {\n    let needsPositiveSign = false;\n    if (signDisplay === 'always') {\n      needsPositiveSign = num > 0 || Object.is(num, 0);\n    } else if (signDisplay === 'exceptZero') {\n      if (Object.is(num, -0) || Object.is(num, 0)) {\n        num = Math.abs(num);\n      } else {\n        needsPositiveSign = num > 0;\n      }\n    }\n\n    if (needsPositiveSign) {\n      let negative = numberFormat.format(-num);\n      let noSign = numberFormat.format(num);\n      // ignore RTL/LTR marker character\n      let minus = negative.replace(noSign, '').replace(/\\u200e|\\u061C/, '');\n      if ([...minus].length !== 1) {\n        console.warn('@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case');\n      }\n      let positive = negative.replace(noSign, '!!!').replace(minus, '+').replace('!!!', noSign);\n      return positive;\n    } else {\n      return numberFormat.format(num);\n    }\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {NumberFormatter} from './NumberFormatter';\n\ninterface Symbols {\n  minusSign?: string,\n  plusSign?: string,\n  decimal?: string,\n  group?: string,\n  literals: RegExp,\n  numeral: RegExp,\n  index: (v: string) => string\n}\n\nconst CURRENCY_SIGN_REGEX = new RegExp('^.*\\\\(.*\\\\).*$');\nconst NUMBERING_SYSTEMS = ['latn', 'arab', 'hanidec', 'deva', 'beng', 'fullwide'];\n\n/**\n * A NumberParser can be used to perform locale-aware parsing of numbers from Unicode strings,\n * as well as validation of partial user input. It automatically detects the numbering system\n * used in the input, and supports parsing decimals, percentages, currency values, and units\n * according to the locale.\n */\nexport class NumberParser {\n  private locale: string;\n  private options: Intl.NumberFormatOptions;\n\n  constructor(locale: string, options: Intl.NumberFormatOptions = {}) {\n    this.locale = locale;\n    this.options = options;\n  }\n\n  /**\n   * Parses the given string to a number. Returns NaN if a valid number could not be parsed.\n   */\n  parse(value: string): number {\n    return getNumberParserImpl(this.locale, this.options, value).parse(value);\n  }\n\n  /**\n   * Returns whether the given string could potentially be a valid number. This should be used to\n   * validate user input as the user types. If a `minValue` or `maxValue` is provided, the validity\n   * of the minus/plus sign characters can be checked.\n   */\n  isValidPartialNumber(value: string, minValue?: number, maxValue?: number): boolean {\n    return getNumberParserImpl(this.locale, this.options, value).isValidPartialNumber(value, minValue, maxValue);\n  }\n\n  /**\n   * Returns a numbering system for which the given string is valid in the current locale.\n   * If no numbering system could be detected, the default numbering system for the current\n   * locale is returned.\n   */\n  getNumberingSystem(value: string): string {\n    return getNumberParserImpl(this.locale, this.options, value).options.numberingSystem;\n  }\n}\n\nconst numberParserCache = new Map<string, NumberParserImpl>();\nfunction getNumberParserImpl(locale: string, options: Intl.NumberFormatOptions, value: string) {\n  // First try the default numbering system for the provided locale\n  let defaultParser = getCachedNumberParser(locale, options);\n\n  // If that doesn't match, and the locale doesn't include a hard coded numbering system,\n  // try each of the other supported numbering systems until we find one that matches.\n  if (!locale.includes('-nu-') && !defaultParser.isValidPartialNumber(value)) {\n    for (let numberingSystem of NUMBERING_SYSTEMS) {\n      if (numberingSystem !== defaultParser.options.numberingSystem) {\n        let parser = getCachedNumberParser(locale + (locale.includes('-u-') ? '-nu-' : '-u-nu-') + numberingSystem, options);\n        if (parser.isValidPartialNumber(value)) {\n          return parser;\n        }\n      }\n    }\n  }\n\n  return defaultParser;\n}\n\nfunction getCachedNumberParser(locale: string, options: Intl.NumberFormatOptions) {\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  let parser = numberParserCache.get(cacheKey);\n  if (!parser) {\n    parser = new NumberParserImpl(locale, options);\n    numberParserCache.set(cacheKey, parser);\n  }\n\n  return parser;\n}\n\n// The actual number parser implementation. Instances of this class are cached\n// based on the locale, options, and detected numbering system.\nclass NumberParserImpl {\n  formatter: Intl.NumberFormat;\n  options: Intl.ResolvedNumberFormatOptions;\n  symbols: Symbols;\n  locale: string;\n\n  constructor(locale: string, options: Intl.NumberFormatOptions = {}) {\n    this.locale = locale;\n    // see https://tc39.es/ecma402/#sec-setnfdigitoptions, when using roundingIncrement, the maximumFractionDigits and minimumFractionDigits must be equal\n    // by default, they are 0 and 3 respectively, so we set them to 0 if neither are set\n    if (options.roundingIncrement !== 1 && options.roundingIncrement != null) {\n      if (options.maximumFractionDigits == null && options.minimumFractionDigits == null) {\n        options.maximumFractionDigits = 0;\n        options.minimumFractionDigits = 0;\n      } else if (options.maximumFractionDigits == null) {\n        options.maximumFractionDigits = options.minimumFractionDigits;\n      } else if (options.minimumFractionDigits == null) {\n        options.minimumFractionDigits = options.maximumFractionDigits;\n      }\n      // if both are specified, let the normal Range Error be thrown\n    }\n    this.formatter = new Intl.NumberFormat(locale, options);\n    this.options = this.formatter.resolvedOptions();\n    this.symbols = getSymbols(locale, this.formatter, this.options, options);\n    if (this.options.style === 'percent' && ((this.options.minimumFractionDigits ?? 0) > 18 || (this.options.maximumFractionDigits ?? 0) > 18)) {\n      console.warn('NumberParser cannot handle percentages with greater than 18 decimal places, please reduce the number in your options.');\n    }\n  }\n\n  parse(value: string) {\n    // to parse the number, we need to remove anything that isn't actually part of the number, for example we want '-10.40' not '-10.40 USD'\n    let fullySanitizedValue = this.sanitize(value);\n\n    if (this.symbols.group) {\n      // Remove group characters, and replace decimal points and numerals with ASCII values.\n      fullySanitizedValue = replaceAll(fullySanitizedValue, this.symbols.group, '');\n    }\n    if (this.symbols.decimal) {\n      fullySanitizedValue = fullySanitizedValue.replace(this.symbols.decimal!, '.');\n    }\n    if (this.symbols.minusSign) {\n      fullySanitizedValue = fullySanitizedValue.replace(this.symbols.minusSign!, '-');\n    }\n    fullySanitizedValue = fullySanitizedValue.replace(this.symbols.numeral, this.symbols.index);\n\n    if (this.options.style === 'percent') {\n      // javascript is bad at dividing by 100 and maintaining the same significant figures, so perform it on the string before parsing\n      let isNegative = fullySanitizedValue.indexOf('-');\n      fullySanitizedValue = fullySanitizedValue.replace('-', '');\n      fullySanitizedValue = fullySanitizedValue.replace('+', '');\n      let index = fullySanitizedValue.indexOf('.');\n      if (index === -1) {\n        index = fullySanitizedValue.length;\n      }\n      fullySanitizedValue = fullySanitizedValue.replace('.', '');\n      if (index - 2 === 0) {\n        fullySanitizedValue = `0.${fullySanitizedValue}`;\n      } else if (index - 2 === -1) {\n        fullySanitizedValue = `0.0${fullySanitizedValue}`;\n      } else if (index - 2 === -2) {\n        fullySanitizedValue = '0.00';\n      } else {\n        fullySanitizedValue = `${fullySanitizedValue.slice(0, index - 2)}.${fullySanitizedValue.slice(index - 2)}`;\n      }\n      if (isNegative > -1) {\n        fullySanitizedValue = `-${fullySanitizedValue}`;\n      }\n    }\n\n    let newValue = fullySanitizedValue ? +fullySanitizedValue : NaN;\n    if (isNaN(newValue)) {\n      return NaN;\n    }\n\n    if (this.options.style === 'percent') {\n      // extra step for rounding percents to what our formatter would output\n      let options = {\n        ...this.options,\n        style: 'decimal' as const,\n        minimumFractionDigits: Math.min((this.options.minimumFractionDigits ?? 0) + 2, 20),\n        maximumFractionDigits: Math.min((this.options.maximumFractionDigits ?? 0) + 2, 20)\n      };\n      return (new NumberParser(this.locale, options)).parse(new NumberFormatter(this.locale, options).format(newValue));\n    }\n\n    // accounting will always be stripped to a positive number, so if it's accounting and has a () around everything, then we need to make it negative again\n    if (this.options.currencySign === 'accounting' && CURRENCY_SIGN_REGEX.test(value)) {\n      newValue = -1 * newValue;\n    }\n\n    return newValue;\n  }\n\n  sanitize(value: string) {\n    // Remove literals and whitespace, which are allowed anywhere in the string\n    value = value.replace(this.symbols.literals, '');\n\n    // Replace the ASCII minus sign with the minus sign used in the current locale\n    // so that both are allowed in case the user's keyboard doesn't have the locale's minus sign.\n    if (this.symbols.minusSign) {\n      value = value.replace('-', this.symbols.minusSign);\n    }\n\n    // In arab numeral system, their decimal character is 1643, but most keyboards don't type that\n    // instead they use the , (44) character or apparently the (1548) character.\n    if (this.options.numberingSystem === 'arab') {\n      if (this.symbols.decimal) {\n        value = value.replace(',', this.symbols.decimal);\n        value = value.replace(String.fromCharCode(1548), this.symbols.decimal);\n      }\n      if (this.symbols.group) {\n        value = replaceAll(value, '.', this.symbols.group);\n      }\n    }\n\n    // In some locale styles, such as swiss currency, the group character can be a special single quote\n    // that keyboards don't typically have. This expands the character to include the easier to type single quote.\n    if (this.symbols.group === '’' && value.includes(\"'\")) {\n      value = replaceAll(value, \"'\", this.symbols.group);\n    }\n\n    // fr-FR group character is narrow non-breaking space, char code 8239 (U+202F), but that's not a key on the french keyboard,\n    // so allow space and non-breaking space as a group char as well\n    if (this.options.locale === 'fr-FR' && this.symbols.group) {\n      value = replaceAll(value, ' ', this.symbols.group);\n      value = replaceAll(value, /\\u00A0/g, this.symbols.group);\n    }\n\n    return value;\n  }\n\n  isValidPartialNumber(value: string, minValue: number = -Infinity, maxValue: number = Infinity): boolean {\n    value = this.sanitize(value);\n\n    // Remove minus or plus sign, which must be at the start of the string.\n    if (this.symbols.minusSign && value.startsWith(this.symbols.minusSign) && minValue < 0) {\n      value = value.slice(this.symbols.minusSign.length);\n    } else if (this.symbols.plusSign && value.startsWith(this.symbols.plusSign) && maxValue > 0) {\n      value = value.slice(this.symbols.plusSign.length);\n    }\n\n    // Numbers cannot start with a group separator\n    if (this.symbols.group && value.startsWith(this.symbols.group)) {\n      return false;\n    }\n\n    // Numbers that can't have any decimal values fail if a decimal character is typed\n    if (this.symbols.decimal && value.indexOf(this.symbols.decimal) > -1 && this.options.maximumFractionDigits === 0) {\n      return false;\n    }\n\n    // Remove numerals, groups, and decimals\n    if (this.symbols.group) {\n      value = replaceAll(value, this.symbols.group, '');\n    }\n    value = value.replace(this.symbols.numeral, '');\n    if (this.symbols.decimal) {\n      value = value.replace(this.symbols.decimal, '');\n    }\n\n    // The number is valid if there are no remaining characters\n    return value.length === 0;\n  }\n}\n\nconst nonLiteralParts = new Set(['decimal', 'fraction', 'integer', 'minusSign', 'plusSign', 'group']);\n\n// This list is derived from https://www.unicode.org/cldr/charts/43/supplemental/language_plural_rules.html#comparison and includes\n// all unique numbers which we need to check in order to determine all the plural forms for a given locale.\n// See: https://github.com/adobe/react-spectrum/pull/5134/files#r1337037855 for used script\nconst pluralNumbers = [\n  0, 4, 2, 1, 11, 20, 3, 7, 100, 21, 0.1, 1.1\n];\n\nfunction getSymbols(locale: string, formatter: Intl.NumberFormat, intlOptions: Intl.ResolvedNumberFormatOptions, originalOptions: Intl.NumberFormatOptions): Symbols {\n  // formatter needs access to all decimal places in order to generate the correct literal strings for the plural set\n  let symbolFormatter = new Intl.NumberFormat(locale, {...intlOptions,\n    // Resets so we get the full range of symbols\n    minimumSignificantDigits: 1,\n    maximumSignificantDigits: 21,\n    roundingIncrement: 1,\n    roundingPriority: 'auto',\n    roundingMode: 'halfExpand'\n  });\n  // Note: some locale's don't add a group symbol until there is a ten thousands place\n  let allParts = symbolFormatter.formatToParts(-10000.111);\n  let posAllParts = symbolFormatter.formatToParts(10000.111);\n  let pluralParts = pluralNumbers.map(n => symbolFormatter.formatToParts(n));\n\n  let minusSign = allParts.find(p => p.type === 'minusSign')?.value ?? '-';\n  let plusSign = posAllParts.find(p => p.type === 'plusSign')?.value;\n\n  // Safari does not support the signDisplay option, but our number parser polyfills it.\n  // If no plus sign was returned, but the original options contained signDisplay, default to the '+' character.\n  if (!plusSign && (originalOptions?.signDisplay === 'exceptZero' || originalOptions?.signDisplay === 'always')) {\n    plusSign = '+';\n  }\n\n  // If maximumSignificantDigits is 1 (the minimum) then we won't get decimal characters out of the above formatters\n  // Percent also defaults to 0 fractionDigits, so we need to make a new one that isn't percent to get an accurate decimal\n  let decimalParts = new Intl.NumberFormat(locale, {...intlOptions, minimumFractionDigits: 2, maximumFractionDigits: 2}).formatToParts(0.001);\n\n  let decimal = decimalParts.find(p => p.type === 'decimal')?.value;\n  let group = allParts.find(p => p.type === 'group')?.value;\n\n  // this set is also for a regex, it's all literals that might be in the string we want to eventually parse that\n  // don't contribute to the numerical value\n  let allPartsLiterals = allParts.filter(p => !nonLiteralParts.has(p.type)).map(p => escapeRegex(p.value));\n  let pluralPartsLiterals = pluralParts.flatMap(p => p.filter(p => !nonLiteralParts.has(p.type)).map(p => escapeRegex(p.value)));\n  let sortedLiterals = [...new Set([...allPartsLiterals, ...pluralPartsLiterals])].sort((a, b) => b.length - a.length);\n\n  let literals = sortedLiterals.length === 0 ?\n      new RegExp('[\\\\p{White_Space}]', 'gu') :\n      new RegExp(`${sortedLiterals.join('|')}|[\\\\p{White_Space}]`, 'gu');\n\n  // These are for replacing non-latn characters with the latn equivalent\n  let numerals = [...new Intl.NumberFormat(intlOptions.locale, {useGrouping: false}).format(9876543210)].reverse();\n  let indexes = new Map(numerals.map((d, i) => [d, i]));\n  let numeral = new RegExp(`[${numerals.join('')}]`, 'g');\n  let index = d => String(indexes.get(d));\n\n  return {minusSign, plusSign, decimal, group, literals, numeral, index};\n}\n\nfunction replaceAll(str: string, find: string | RegExp, replace: string) {\n  if (str.replaceAll) {\n    return str.replaceAll(find, replace);\n  }\n\n  return str.split(find).join(replace);\n}\n\nfunction escapeRegex(string: string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n", "import type { MaybeComputedElementRef } from '@vueuse/core'\nimport type { Ref } from 'vue'\nimport { NumberFormatter, NumberParser } from '@internationalized/number'\nimport { unrefElement, useEventListener } from '@vueuse/core'\nimport { createEventHook, isClient, reactiveComputed } from '@vueuse/shared'\nimport { computed, ref } from 'vue'\n\nexport function usePressedHold(options: { target?: MaybeComputedElementRef, disabled: Ref<boolean> }) {\n  const { disabled } = options\n  const timeout = ref<number>()\n  const triggerHook = createEventHook()\n  const resetTimeout = () => window.clearTimeout(timeout.value)\n\n  const onIncrementPressStart = (delay: number) => {\n    resetTimeout()\n    if (disabled.value)\n      return\n\n    triggerHook.trigger()\n\n    timeout.value = window.setTimeout(() => {\n      onIncrementPressStart(60)\n    }, delay)\n  }\n\n  const handlePressStart = () => {\n    onIncrementPressStart(400)\n  }\n\n  const handlePressEnd = () => {\n    resetTimeout()\n  }\n\n  // Handle press event, modified version of useMousePressed\n  const isPressed = ref(false)\n  const target = computed(() => unrefElement(options.target))\n\n  const onPressStart = (event: PointerEvent) => {\n    // Only handle left clicks, and ignore events that bubbled through portals.\n    if (event.button !== 0 || isPressed.value)\n      return\n\n    event.preventDefault()\n    isPressed.value = true\n    handlePressStart()\n  }\n\n  const onPressRelease = () => {\n    isPressed.value = false\n    handlePressEnd()\n  }\n\n  if (isClient) {\n    useEventListener(target || window, 'pointerdown', onPressStart)\n    useEventListener(window, 'pointerup', onPressRelease)\n    useEventListener(window, 'pointercancel', onPressRelease)\n  }\n\n  return {\n    isPressed,\n    onTrigger: triggerHook.on,\n  }\n}\n\nexport function useNumberFormatter(locale: Ref<string>, options: Ref<Intl.NumberFormatOptions | undefined> = ref({})) {\n  return reactiveComputed(() => new NumberFormatter(locale.value, options.value))\n}\n\nexport function useNumberParser(locale: Ref<string>, options: Ref<Intl.NumberFormatOptions | undefined> = ref({})) {\n  return reactiveComputed(() => new NumberParser(locale.value, options.value))\n}\n\nexport function handleDecimalOperation(operator: '-' | '+', value1: number, value2: number): number {\n  let result = operator === '+' ? value1 + value2 : value1 - value2\n\n  // Check if we have decimals\n  if (value1 % 1 !== 0 || value2 % 1 !== 0) {\n    const value1Decimal = value1.toString().split('.')\n    const value2Decimal = value2.toString().split('.')\n    const value1DecimalLength = (value1Decimal[1] && value1Decimal[1].length) || 0\n    const value2DecimalLength = (value2Decimal[1] && value2Decimal[1].length) || 0\n    const multiplier = 10 ** Math.max(value1DecimalLength, value2DecimalLength)\n\n    // Transform the decimals to integers based on the precision\n    value1 = Math.round(value1 * multiplier)\n    value2 = Math.round(value2 * multiplier)\n\n    // Perform the operation on integers values to make sure we don't get a fancy decimal value\n    result = operator === '+' ? value1 + value2 : value1 - value2\n\n    // Transform the integer result back to decimal\n    result /= multiplier\n  }\n\n  return result\n}\n", "<script lang=\"ts\">\nimport type { HTMLAttributes, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { FormFieldProps } from '@/shared/types'\nimport { useVModel } from '@vueuse/core'\nimport { computed, ref, toRefs } from 'vue'\nimport { clamp, createContext, isNullish, snapValueToStep, useFormControl, useLocale } from '@/shared'\n\nexport interface NumberFieldRootProps extends PrimitiveProps, FormFieldProps {\n  defaultValue?: number\n  modelValue?: number | null\n  /** The smallest value allowed for the input. */\n  min?: number\n  /** The largest value allowed for the input. */\n  max?: number\n  /** The amount that the input value changes with each increment or decrement \"tick\". */\n  step?: number\n  /** When `false`, prevents the value from snapping to the nearest increment of the step value */\n  stepSnapping?: boolean\n  /** Formatting options for the value displayed in the number field. This also affects what characters are allowed to be typed by the user. */\n  formatOptions?: Intl.NumberFormatOptions\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** When `true`, prevents the user from interacting with the Number Field. */\n  disabled?: boolean\n  /** When `true`, the Number Field is read-only. */\n  readonly?: boolean\n  /** When `true`, prevents the value from changing on wheel scroll. */\n  disableWheelChange?: boolean\n  /** When `true`, inverts the direction of the wheel change. */\n  invertWheelChange?: boolean\n  /** Id of the element */\n  id?: string\n}\n\nexport type NumberFieldRootEmits = {\n  'update:modelValue': [val: number]\n}\n\ninterface NumberFieldRootContext {\n  modelValue: Ref<number | undefined>\n  handleIncrease: (multiplier?: number) => void\n  handleDecrease: (multiplier?: number) => void\n  handleMinMaxValue: (type: 'min' | 'max') => void\n  inputEl: Ref<HTMLInputElement | undefined>\n  onInputElement: (el: HTMLInputElement) => void\n  inputMode: Ref<HTMLAttributes['inputmode']>\n  textValue: Ref<string>\n  validate: (val: string) => boolean\n  applyInputValue: (val: string) => void\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  disableWheelChange: Ref<boolean>\n  invertWheelChange: Ref<boolean>\n  max: Ref<number | undefined>\n  min: Ref<number | undefined>\n  isDecreaseDisabled: Ref<boolean>\n  isIncreaseDisabled: Ref<boolean>\n  id: Ref<string | undefined>\n}\n\nexport const [injectNumberFieldRootContext, provideNumberFieldRootContext] = createContext<NumberFieldRootContext>('NumberFieldRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport { handleDecimalOperation, useNumberFormatter, useNumberParser } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<NumberFieldRootProps>(), {\n  as: 'div',\n  defaultValue: undefined,\n  step: 1,\n  stepSnapping: true,\n})\nconst emits = defineEmits<NumberFieldRootEmits>()\nconst { disabled, readonly, disableWheelChange, invertWheelChange, min, max, step, stepSnapping, formatOptions, id, locale: propLocale } = toRefs(props)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<number | undefined>\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst locale = useLocale(propLocale)\nconst isFormControl = useFormControl(currentElement)\nconst inputEl = ref<HTMLInputElement>()\n\nconst isDecreaseDisabled = computed(() => (\n  !isNullish(modelValue.value) && (\n    clampInputValue(modelValue.value) === min.value\n    || (min.value && !isNaN(modelValue.value)\n    )\n      ? (handleDecimalOperation('-', modelValue.value, step.value) < min.value)\n      : false)),\n)\nconst isIncreaseDisabled = computed(() => (\n  !isNullish(modelValue.value) && (\n    clampInputValue(modelValue.value) === max.value\n    || (max.value && !isNaN(modelValue.value)\n    )\n      ? (handleDecimalOperation('+', modelValue.value, step.value) > max.value)\n      : false)),\n)\n\nfunction handleChangingValue(type: 'increase' | 'decrease', multiplier = 1) {\n  inputEl.value?.focus()\n  if (props.disabled || props.readonly)\n    return\n  const currentInputValue = numberParser.parse(inputEl.value?.value ?? '')\n  if (isNaN(currentInputValue)) {\n    modelValue.value = min.value ?? 0\n  }\n  else {\n    if (type === 'increase')\n      modelValue.value = clampInputValue(currentInputValue + ((step.value ?? 1) * multiplier))\n    else\n      modelValue.value = clampInputValue(currentInputValue - ((step.value ?? 1) * multiplier))\n  }\n}\n\nfunction handleIncrease(multiplier = 1) {\n  handleChangingValue('increase', multiplier)\n}\nfunction handleDecrease(multiplier = 1) {\n  handleChangingValue('decrease', multiplier)\n}\n\nfunction handleMinMaxValue(type: 'min' | 'max') {\n  if (type === 'min' && min.value !== undefined)\n    modelValue.value = clampInputValue(min.value)\n  else if (type === 'max' && max.value !== undefined)\n    modelValue.value = clampInputValue(max.value)\n}\n\n// Formatter\nconst numberFormatter = useNumberFormatter(locale, formatOptions)\nconst numberParser = useNumberParser(locale, formatOptions)\n\nconst inputMode = computed<HTMLAttributes['inputmode']>(() => {\n  // The inputMode attribute influences the software keyboard that is shown on touch devices.\n  // Browsers and operating systems are quite inconsistent about what keys are available, however.\n  // We choose between numeric and decimal based on whether we allow negative and fractional numbers,\n  // and based on testing on various devices to determine what keys are available in each inputMode.\n  const hasDecimals = numberFormatter.resolvedOptions().maximumFractionDigits! > 0\n\n  return hasDecimals ? 'decimal' : 'numeric'\n})\n// Replace negative textValue formatted using currencySign: 'accounting'\n// with a textValue that can be announced using a minus sign.\nconst textValueFormatter = useNumberFormatter(locale, formatOptions)\nconst textValue = computed(() => isNullish(modelValue.value) || isNaN(modelValue.value) ? '' : textValueFormatter.format(modelValue.value))\n\nfunction validate(val: string) {\n  return numberParser.isValidPartialNumber(val, min.value, max.value)\n}\n\nfunction setInputValue(val: string) {\n  if (inputEl.value)\n    inputEl.value.value = val\n}\n\nfunction clampInputValue(val: number) {\n  // Clamp to min and max, round to the nearest step, and round to specified number of digits\n  let clampedValue: number\n  if (step.value === undefined || isNaN(step.value) || !stepSnapping.value)\n    clampedValue = clamp(val, min.value, max.value)\n  else\n    clampedValue = snapValueToStep(val, min.value, max.value, step.value)\n\n  clampedValue = numberParser.parse(numberFormatter.format(clampedValue))\n  return clampedValue\n}\n\nfunction applyInputValue(val: string) {\n  const parsedValue = numberParser.parse(val)\n  modelValue.value = isNaN(parsedValue) ? undefined : clampInputValue(parsedValue)\n  // Set to empty state if input value is empty\n  if (!val.length)\n    return setInputValue(val)\n\n  // if it failed to parse, then reset input to formatted version of current number\n  if (isNaN(parsedValue))\n    return setInputValue(textValue.value)\n\n  return setInputValue(textValue.value)\n}\n\nprovideNumberFieldRootContext({\n  modelValue,\n  handleDecrease,\n  handleIncrease,\n  handleMinMaxValue,\n  inputMode,\n  inputEl,\n  onInputElement: el => inputEl.value = el,\n  textValue,\n  validate,\n  applyInputValue,\n  disabled,\n  readonly,\n  disableWheelChange,\n  invertWheelChange,\n  max,\n  min,\n  isDecreaseDisabled,\n  isIncreaseDisabled,\n  id,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    role=\"group\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"readonly ? '' : undefined\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :text-value=\"textValue\"\n    />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { HTMLAttributes, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { FormFieldProps } from '@/shared/types'\nimport { useVModel } from '@vueuse/core'\nimport { computed, ref, toRefs } from 'vue'\nimport { clamp, createContext, isNullish, snapValueToStep, useFormControl, useLocale } from '@/shared'\n\nexport interface NumberFieldRootProps extends PrimitiveProps, FormFieldProps {\n  defaultValue?: number\n  modelValue?: number | null\n  /** The smallest value allowed for the input. */\n  min?: number\n  /** The largest value allowed for the input. */\n  max?: number\n  /** The amount that the input value changes with each increment or decrement \"tick\". */\n  step?: number\n  /** When `false`, prevents the value from snapping to the nearest increment of the step value */\n  stepSnapping?: boolean\n  /** Formatting options for the value displayed in the number field. This also affects what characters are allowed to be typed by the user. */\n  formatOptions?: Intl.NumberFormatOptions\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** When `true`, prevents the user from interacting with the Number Field. */\n  disabled?: boolean\n  /** When `true`, the Number Field is read-only. */\n  readonly?: boolean\n  /** When `true`, prevents the value from changing on wheel scroll. */\n  disableWheelChange?: boolean\n  /** When `true`, inverts the direction of the wheel change. */\n  invertWheelChange?: boolean\n  /** Id of the element */\n  id?: string\n}\n\nexport type NumberFieldRootEmits = {\n  'update:modelValue': [val: number]\n}\n\ninterface NumberFieldRootContext {\n  modelValue: Ref<number | undefined>\n  handleIncrease: (multiplier?: number) => void\n  handleDecrease: (multiplier?: number) => void\n  handleMinMaxValue: (type: 'min' | 'max') => void\n  inputEl: Ref<HTMLInputElement | undefined>\n  onInputElement: (el: HTMLInputElement) => void\n  inputMode: Ref<HTMLAttributes['inputmode']>\n  textValue: Ref<string>\n  validate: (val: string) => boolean\n  applyInputValue: (val: string) => void\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  disableWheelChange: Ref<boolean>\n  invertWheelChange: Ref<boolean>\n  max: Ref<number | undefined>\n  min: Ref<number | undefined>\n  isDecreaseDisabled: Ref<boolean>\n  isIncreaseDisabled: Ref<boolean>\n  id: Ref<string | undefined>\n}\n\nexport const [injectNumberFieldRootContext, provideNumberFieldRootContext] = createContext<NumberFieldRootContext>('NumberFieldRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport { handleDecimalOperation, useNumberFormatter, useNumberParser } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<NumberFieldRootProps>(), {\n  as: 'div',\n  defaultValue: undefined,\n  step: 1,\n  stepSnapping: true,\n})\nconst emits = defineEmits<NumberFieldRootEmits>()\nconst { disabled, readonly, disableWheelChange, invertWheelChange, min, max, step, stepSnapping, formatOptions, id, locale: propLocale } = toRefs(props)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<number | undefined>\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\n\nconst locale = useLocale(propLocale)\nconst isFormControl = useFormControl(currentElement)\nconst inputEl = ref<HTMLInputElement>()\n\nconst isDecreaseDisabled = computed(() => (\n  !isNullish(modelValue.value) && (\n    clampInputValue(modelValue.value) === min.value\n    || (min.value && !isNaN(modelValue.value)\n    )\n      ? (handleDecimalOperation('-', modelValue.value, step.value) < min.value)\n      : false)),\n)\nconst isIncreaseDisabled = computed(() => (\n  !isNullish(modelValue.value) && (\n    clampInputValue(modelValue.value) === max.value\n    || (max.value && !isNaN(modelValue.value)\n    )\n      ? (handleDecimalOperation('+', modelValue.value, step.value) > max.value)\n      : false)),\n)\n\nfunction handleChangingValue(type: 'increase' | 'decrease', multiplier = 1) {\n  inputEl.value?.focus()\n  if (props.disabled || props.readonly)\n    return\n  const currentInputValue = numberParser.parse(inputEl.value?.value ?? '')\n  if (isNaN(currentInputValue)) {\n    modelValue.value = min.value ?? 0\n  }\n  else {\n    if (type === 'increase')\n      modelValue.value = clampInputValue(currentInputValue + ((step.value ?? 1) * multiplier))\n    else\n      modelValue.value = clampInputValue(currentInputValue - ((step.value ?? 1) * multiplier))\n  }\n}\n\nfunction handleIncrease(multiplier = 1) {\n  handleChangingValue('increase', multiplier)\n}\nfunction handleDecrease(multiplier = 1) {\n  handleChangingValue('decrease', multiplier)\n}\n\nfunction handleMinMaxValue(type: 'min' | 'max') {\n  if (type === 'min' && min.value !== undefined)\n    modelValue.value = clampInputValue(min.value)\n  else if (type === 'max' && max.value !== undefined)\n    modelValue.value = clampInputValue(max.value)\n}\n\n// Formatter\nconst numberFormatter = useNumberFormatter(locale, formatOptions)\nconst numberParser = useNumberParser(locale, formatOptions)\n\nconst inputMode = computed<HTMLAttributes['inputmode']>(() => {\n  // The inputMode attribute influences the software keyboard that is shown on touch devices.\n  // Browsers and operating systems are quite inconsistent about what keys are available, however.\n  // We choose between numeric and decimal based on whether we allow negative and fractional numbers,\n  // and based on testing on various devices to determine what keys are available in each inputMode.\n  const hasDecimals = numberFormatter.resolvedOptions().maximumFractionDigits! > 0\n\n  return hasDecimals ? 'decimal' : 'numeric'\n})\n// Replace negative textValue formatted using currencySign: 'accounting'\n// with a textValue that can be announced using a minus sign.\nconst textValueFormatter = useNumberFormatter(locale, formatOptions)\nconst textValue = computed(() => isNullish(modelValue.value) || isNaN(modelValue.value) ? '' : textValueFormatter.format(modelValue.value))\n\nfunction validate(val: string) {\n  return numberParser.isValidPartialNumber(val, min.value, max.value)\n}\n\nfunction setInputValue(val: string) {\n  if (inputEl.value)\n    inputEl.value.value = val\n}\n\nfunction clampInputValue(val: number) {\n  // Clamp to min and max, round to the nearest step, and round to specified number of digits\n  let clampedValue: number\n  if (step.value === undefined || isNaN(step.value) || !stepSnapping.value)\n    clampedValue = clamp(val, min.value, max.value)\n  else\n    clampedValue = snapValueToStep(val, min.value, max.value, step.value)\n\n  clampedValue = numberParser.parse(numberFormatter.format(clampedValue))\n  return clampedValue\n}\n\nfunction applyInputValue(val: string) {\n  const parsedValue = numberParser.parse(val)\n  modelValue.value = isNaN(parsedValue) ? undefined : clampInputValue(parsedValue)\n  // Set to empty state if input value is empty\n  if (!val.length)\n    return setInputValue(val)\n\n  // if it failed to parse, then reset input to formatted version of current number\n  if (isNaN(parsedValue))\n    return setInputValue(textValue.value)\n\n  return setInputValue(textValue.value)\n}\n\nprovideNumberFieldRootContext({\n  modelValue,\n  handleDecrease,\n  handleIncrease,\n  handleMinMaxValue,\n  inputMode,\n  inputEl,\n  onInputElement: el => inputEl.value = el,\n  textValue,\n  validate,\n  applyInputValue,\n  disabled,\n  readonly,\n  disableWheelChange,\n  invertWheelChange,\n  max,\n  min,\n  isDecreaseDisabled,\n  isIncreaseDisabled,\n  id,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    role=\"group\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"readonly ? '' : undefined\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :text-value=\"textValue\"\n    />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      type=\"text\"\n      :value=\"modelValue\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :readonly=\"readonly\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\nimport { injectNumberFieldRootContext } from './NumberFieldRoot.vue'\nimport { usePressedHold } from './utils'\n\nexport interface NumberFieldDecrementProps extends PrimitiveProps {\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<NumberFieldDecrementProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectNumberFieldRootContext()\nconst isDisabled = computed(() => rootContext.disabled?.value || rootContext.readonly.value || props.disabled || rootContext.isDecreaseDisabled.value)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst { isPressed, onTrigger } = usePressedHold({ target: currentElement, disabled: isDisabled })\n\nonTrigger(() => {\n  rootContext.handleDecrease()\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    ref=\"primitiveElement\"\n    tabindex=\"-1\"\n    aria-label=\"Decrease\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :style=\"{\n      userSelect: isPressed ? 'none' : undefined,\n    }\"\n    :disabled=\"isDisabled ? '' : undefined\"\n    :data-disabled=\"isDisabled ? '' : undefined\"\n    :data-pressed=\"isPressed ? 'true' : undefined\"\n    @contextmenu.prevent\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\nimport { injectNumberFieldRootContext } from './NumberFieldRoot.vue'\nimport { usePressedHold } from './utils'\n\nexport interface NumberFieldDecrementProps extends PrimitiveProps {\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<NumberFieldDecrementProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectNumberFieldRootContext()\nconst isDisabled = computed(() => rootContext.disabled?.value || rootContext.readonly.value || props.disabled || rootContext.isDecreaseDisabled.value)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst { isPressed, onTrigger } = usePressedHold({ target: currentElement, disabled: isDisabled })\n\nonTrigger(() => {\n  rootContext.handleDecrease()\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    ref=\"primitiveElement\"\n    tabindex=\"-1\"\n    aria-label=\"Decrease\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :style=\"{\n      userSelect: isPressed ? 'none' : undefined,\n    }\"\n    :disabled=\"isDisabled ? '' : undefined\"\n    :data-disabled=\"isDisabled ? '' : undefined\"\n    :data-pressed=\"isPressed ? 'true' : undefined\"\n    @contextmenu.prevent\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\nimport { injectNumberFieldRootContext } from './NumberFieldRoot.vue'\nimport { usePressedHold } from './utils'\n\nexport interface NumberFieldIncrementProps extends PrimitiveProps {\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<NumberFieldIncrementProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectNumberFieldRootContext()\nconst isDisabled = computed(() => rootContext.disabled?.value || rootContext.readonly.value || props.disabled || rootContext.isIncreaseDisabled.value)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst { isPressed, onTrigger } = usePressedHold({ target: currentElement, disabled: isDisabled })\n\nonTrigger(() => {\n  rootContext.handleIncrease()\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    ref=\"primitiveElement\"\n    tabindex=\"-1\"\n    aria-label=\"Increase\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :style=\"{\n      userSelect: isPressed ? 'none' : undefined,\n    }\"\n    :disabled=\"isDisabled ? '' : undefined\"\n    :data-disabled=\"isDisabled ? '' : undefined\"\n    :data-pressed=\"isPressed ? 'true' : undefined\"\n    @contextmenu.prevent\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\nimport { injectNumberFieldRootContext } from './NumberFieldRoot.vue'\nimport { usePressedHold } from './utils'\n\nexport interface NumberFieldIncrementProps extends PrimitiveProps {\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<NumberFieldIncrementProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectNumberFieldRootContext()\nconst isDisabled = computed(() => rootContext.disabled?.value || rootContext.readonly.value || props.disabled || rootContext.isIncreaseDisabled.value)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst { isPressed, onTrigger } = usePressedHold({ target: currentElement, disabled: isDisabled })\n\nonTrigger(() => {\n  rootContext.handleIncrease()\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    ref=\"primitiveElement\"\n    tabindex=\"-1\"\n    aria-label=\"Increase\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :style=\"{\n      userSelect: isPressed ? 'none' : undefined,\n    }\"\n    :disabled=\"isDisabled ? '' : undefined\"\n    :data-disabled=\"isDisabled ? '' : undefined\"\n    :data-pressed=\"isPressed ? 'true' : undefined\"\n    @contextmenu.prevent\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { onMounted, ref, watch } from 'vue'\nimport { getActiveElement } from '@/shared'\nimport { injectNumberFieldRootContext } from './NumberFieldRoot.vue'\n\nexport interface NumberFieldInputProps extends PrimitiveProps {\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<NumberFieldInputProps>(), {\n  as: 'input',\n})\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst rootContext = injectNumberFieldRootContext()\n\nfunction handleWheelEvent(event: WheelEvent) {\n  if (rootContext.disableWheelChange.value)\n    return\n\n  // only handle when in focus\n  if (event.target !== getActiveElement())\n    return\n\n  // if on a trackpad, users can scroll in both X and Y at once, check the magnitude of the change\n  // if it's mostly in the X direction, then just return, the user probably doesn't mean to inc/dec\n  // this isn't perfect, events come in fast with small deltas and a part of the scroll may give a false indication\n  // especially if the user is scrolling near 45deg\n  if (Math.abs(event.deltaY) <= Math.abs(event.deltaX))\n    return\n\n  event.preventDefault()\n  if (event.deltaY > 0)\n    rootContext.invertWheelChange.value ? rootContext.handleDecrease() : rootContext.handleIncrease()\n  else if (event.deltaY < 0)\n    rootContext.invertWheelChange.value ? rootContext.handleIncrease() : rootContext.handleDecrease()\n}\n\nonMounted(() => {\n  rootContext.onInputElement(currentElement.value as HTMLInputElement)\n})\n\nconst inputValue = ref(rootContext.textValue.value)\nwatch(() => rootContext.textValue.value, () => {\n  inputValue.value = rootContext.textValue.value\n}, { immediate: true, deep: true })\n\nfunction handleChange() {\n  requestAnimationFrame(() => {\n    inputValue.value = rootContext.textValue.value\n  })\n}\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"rootContext.id.value\"\n    ref=\"primitiveElement\"\n    :value=\"inputValue\"\n    role=\"spinbutton\"\n    type=\"text\"\n    tabindex=\"0\"\n    :inputmode=\"rootContext.inputMode.value\"\n    :disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :readonly=\"rootContext.readonly.value ? '' : undefined\"\n    :data-readonly=\"rootContext.readonly.value ? '' : undefined\"\n    autocomplete=\"off\"\n    autocorrect=\"off\"\n    spellcheck=\"false\"\n    aria-roledescription=\"Number field\"\n    :aria-valuenow=\"rootContext.modelValue.value\"\n    :aria-valuemin=\"rootContext.min.value\"\n    :aria-valuemax=\"rootContext.max.value\"\n    @keydown.up.prevent=\"rootContext.handleIncrease()\"\n    @keydown.down.prevent=\"rootContext.handleDecrease()\"\n    @keydown.page-up.prevent=\"rootContext.handleIncrease(10)\"\n    @keydown.page-down.prevent=\"rootContext.handleDecrease(10)\"\n    @keydown.home.prevent=\"rootContext.handleMinMaxValue('min')\"\n    @keydown.end.prevent=\"rootContext.handleMinMaxValue('max')\"\n    @wheel=\"handleWheelEvent\"\n    @beforeinput=\"(event: InputEvent) => {\n      const target = event.target as HTMLInputElement\n      let nextValue\n        = target.value.slice(0, target.selectionStart ?? undefined)\n          + (event.data ?? '')\n          + target.value.slice(target.selectionEnd ?? undefined);\n\n      // validate\n      if (!rootContext.validate(nextValue))\n        event.preventDefault()\n    }\"\n    @input=\"(event: InputEvent) => {\n      const target = event.target as HTMLInputElement\n      inputValue = target.value\n    }\"\n    @change=\"handleChange\"\n    @keydown.enter=\"rootContext.applyInputValue($event.target?.value)\"\n    @blur=\"rootContext.applyInputValue($event.target?.value)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { onMounted, ref, watch } from 'vue'\nimport { getActiveElement } from '@/shared'\nimport { injectNumberFieldRootContext } from './NumberFieldRoot.vue'\n\nexport interface NumberFieldInputProps extends PrimitiveProps {\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\n\nconst props = withDefaults(defineProps<NumberFieldInputProps>(), {\n  as: 'input',\n})\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nconst rootContext = injectNumberFieldRootContext()\n\nfunction handleWheelEvent(event: WheelEvent) {\n  if (rootContext.disableWheelChange.value)\n    return\n\n  // only handle when in focus\n  if (event.target !== getActiveElement())\n    return\n\n  // if on a trackpad, users can scroll in both X and Y at once, check the magnitude of the change\n  // if it's mostly in the X direction, then just return, the user probably doesn't mean to inc/dec\n  // this isn't perfect, events come in fast with small deltas and a part of the scroll may give a false indication\n  // especially if the user is scrolling near 45deg\n  if (Math.abs(event.deltaY) <= Math.abs(event.deltaX))\n    return\n\n  event.preventDefault()\n  if (event.deltaY > 0)\n    rootContext.invertWheelChange.value ? rootContext.handleDecrease() : rootContext.handleIncrease()\n  else if (event.deltaY < 0)\n    rootContext.invertWheelChange.value ? rootContext.handleIncrease() : rootContext.handleDecrease()\n}\n\nonMounted(() => {\n  rootContext.onInputElement(currentElement.value as HTMLInputElement)\n})\n\nconst inputValue = ref(rootContext.textValue.value)\nwatch(() => rootContext.textValue.value, () => {\n  inputValue.value = rootContext.textValue.value\n}, { immediate: true, deep: true })\n\nfunction handleChange() {\n  requestAnimationFrame(() => {\n    inputValue.value = rootContext.textValue.value\n  })\n}\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"rootContext.id.value\"\n    ref=\"primitiveElement\"\n    :value=\"inputValue\"\n    role=\"spinbutton\"\n    type=\"text\"\n    tabindex=\"0\"\n    :inputmode=\"rootContext.inputMode.value\"\n    :disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :readonly=\"rootContext.readonly.value ? '' : undefined\"\n    :data-readonly=\"rootContext.readonly.value ? '' : undefined\"\n    autocomplete=\"off\"\n    autocorrect=\"off\"\n    spellcheck=\"false\"\n    aria-roledescription=\"Number field\"\n    :aria-valuenow=\"rootContext.modelValue.value\"\n    :aria-valuemin=\"rootContext.min.value\"\n    :aria-valuemax=\"rootContext.max.value\"\n    @keydown.up.prevent=\"rootContext.handleIncrease()\"\n    @keydown.down.prevent=\"rootContext.handleDecrease()\"\n    @keydown.page-up.prevent=\"rootContext.handleIncrease(10)\"\n    @keydown.page-down.prevent=\"rootContext.handleDecrease(10)\"\n    @keydown.home.prevent=\"rootContext.handleMinMaxValue('min')\"\n    @keydown.end.prevent=\"rootContext.handleMinMaxValue('max')\"\n    @wheel=\"handleWheelEvent\"\n    @beforeinput=\"(event: InputEvent) => {\n      const target = event.target as HTMLInputElement\n      let nextValue\n        = target.value.slice(0, target.selectionStart ?? undefined)\n          + (event.data ?? '')\n          + target.value.slice(target.selectionEnd ?? undefined);\n\n      // validate\n      if (!rootContext.validate(nextValue))\n        event.preventDefault()\n    }\"\n    @input=\"(event: InputEvent) => {\n      const target = event.target as HTMLInputElement\n      inputValue = target.value\n    }\"\n    @change=\"handleChange\"\n    @keydown.enter=\"rootContext.applyInputValue($event.target?.value)\"\n    @blur=\"rootContext.applyInputValue($event.target?.value)\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationEllipsisProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<PaginationEllipsisProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    data-type=\"ellipsis\"\n  >\n    <slot>&#8230;</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationEllipsisProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<PaginationEllipsisProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    data-type=\"ellipsis\"\n  >\n    <slot>&#8230;</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useForwardExpose } from '@/shared'\n\ntype PaginationRootContext = {\n  page: Ref<number>\n  onPageChange: (value: number) => void\n  pageCount: Ref<number>\n  siblingCount: Ref<number>\n  disabled: Ref<boolean>\n  showEdges: Ref<boolean>\n}\n\nexport interface PaginationRootProps extends PrimitiveProps {\n  /** The controlled value of the current page. Can be binded as `v-model:page`. */\n  page?: number\n  /**\n   * The value of the page that should be active when initially rendered.\n   *\n   * Use when you do not need to control the value state.\n   */\n  defaultPage?: number\n  /** Number of items per page */\n  itemsPerPage: number\n  /** Number of items in your list */\n  total?: number\n  /** Number of sibling should be shown around the current page */\n  siblingCount?: number\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n  /** When `true`, always show first page, last page, and ellipsis */\n  showEdges?: boolean\n}\n\nexport type PaginationRootEmits = {\n  /** Event handler called when the page value changes */\n  'update:page': [value: number]\n}\n\nexport const [injectPaginationRootContext, providePaginationRootContext]\n  = createContext<PaginationRootContext>('PaginationRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<PaginationRootProps>(), {\n  as: 'nav',\n  total: 0,\n  siblingCount: 2,\n  defaultPage: 1,\n  showEdges: false,\n})\nconst emits = defineEmits<PaginationRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current page state */\n    page: typeof page.value\n    /** Number of pages */\n    pageCount: typeof pageCount.value\n  }) => any\n}>()\n\nconst { siblingCount, disabled, showEdges } = toRefs(props)\n\nuseForwardExpose()\nconst page = useVModel(props, 'page', emits, {\n  defaultValue: props.defaultPage,\n  passive: (props.page === undefined) as false,\n}) as Ref<number>\n\nconst pageCount = computed(() => Math.max(1, Math.ceil(props.total / (props.itemsPerPage || 1))))\n\nprovidePaginationRootContext({\n  page,\n  onPageChange(value) {\n    page.value = value\n  },\n  pageCount,\n  siblingCount,\n  disabled,\n  showEdges,\n})\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n  >\n    <slot\n      :page=\"page\"\n      :page-count=\"pageCount\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useForwardExpose } from '@/shared'\n\ntype PaginationRootContext = {\n  page: Ref<number>\n  onPageChange: (value: number) => void\n  pageCount: Ref<number>\n  siblingCount: Ref<number>\n  disabled: Ref<boolean>\n  showEdges: Ref<boolean>\n}\n\nexport interface PaginationRootProps extends PrimitiveProps {\n  /** The controlled value of the current page. Can be binded as `v-model:page`. */\n  page?: number\n  /**\n   * The value of the page that should be active when initially rendered.\n   *\n   * Use when you do not need to control the value state.\n   */\n  defaultPage?: number\n  /** Number of items per page */\n  itemsPerPage: number\n  /** Number of items in your list */\n  total?: number\n  /** Number of sibling should be shown around the current page */\n  siblingCount?: number\n  /** When `true`, prevents the user from interacting with item */\n  disabled?: boolean\n  /** When `true`, always show first page, last page, and ellipsis */\n  showEdges?: boolean\n}\n\nexport type PaginationRootEmits = {\n  /** Event handler called when the page value changes */\n  'update:page': [value: number]\n}\n\nexport const [injectPaginationRootContext, providePaginationRootContext]\n  = createContext<PaginationRootContext>('PaginationRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<PaginationRootProps>(), {\n  as: 'nav',\n  total: 0,\n  siblingCount: 2,\n  defaultPage: 1,\n  showEdges: false,\n})\nconst emits = defineEmits<PaginationRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current page state */\n    page: typeof page.value\n    /** Number of pages */\n    pageCount: typeof pageCount.value\n  }) => any\n}>()\n\nconst { siblingCount, disabled, showEdges } = toRefs(props)\n\nuseForwardExpose()\nconst page = useVModel(props, 'page', emits, {\n  defaultValue: props.defaultPage,\n  passive: (props.page === undefined) as false,\n}) as Ref<number>\n\nconst pageCount = computed(() => Math.max(1, Math.ceil(props.total / (props.itemsPerPage || 1))))\n\nprovidePaginationRootContext({\n  page,\n  onPageChange(value) {\n    page.value = value\n  },\n  pageCount,\n  siblingCount,\n  disabled,\n  showEdges,\n})\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n  >\n    <slot\n      :page=\"page\"\n      :page-count=\"pageCount\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationFirstProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationFirstProps>(), { as: 'button' })\n\nconst rootContext = injectPaginationRootContext()\nuseForwardExpose()\n\nconst disabled = computed((): boolean => rootContext.page.value === 1 || rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"First Page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :disabled\n    @click=\"!disabled && rootContext.onPageChange(1)\"\n  >\n    <slot>First page</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationFirstProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationFirstProps>(), { as: 'button' })\n\nconst rootContext = injectPaginationRootContext()\nuseForwardExpose()\n\nconst disabled = computed((): boolean => rootContext.page.value === 1 || rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"First Page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :disabled\n    @click=\"!disabled && rootContext.onPageChange(1)\"\n  >\n    <slot>First page</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationLastProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationLastProps>(), { as: 'button' })\n\nconst rootContext = injectPaginationRootContext()\nuseForwardExpose()\n\nconst disabled = computed((): boolean => rootContext.page.value === rootContext.pageCount.value || rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"Last Page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :disabled\n    @click=\"!disabled && rootContext.onPageChange(rootContext.pageCount.value)\"\n  >\n    <slot>Last page</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationLastProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationLastProps>(), { as: 'button' })\n\nconst rootContext = injectPaginationRootContext()\nuseForwardExpose()\n\nconst disabled = computed((): boolean => rootContext.page.value === rootContext.pageCount.value || rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"Last Page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :disabled\n    @click=\"!disabled && rootContext.onPageChange(rootContext.pageCount.value)\"\n  >\n    <slot>Last page</slot>\n  </Primitive>\n</template>\n", "// reference https://github.com/chakra-ui/zag/blob/main/packages/machines/pagination/src/pagination.utils.ts\n\ntype Pages = Array<{ type: 'ellipsis' } | { type: 'page', value: number }>\n\nfunction range(start: number, end: number) {\n  const length = end - start + 1\n  return Array.from({ length }, (_, idx) => idx + start)\n}\n\nexport function transform(items: (string | number)[]): Pages {\n  return items.map((value) => {\n    if (typeof value === 'number')\n      return { type: 'page', value }\n    return { type: 'ellipsis' }\n  })\n}\n\nconst ELLIPSIS = 'ellipsis'\n\nexport function getRange(currentPage: number, pageCount: number, siblingCount: number, showEdges: boolean) {\n  const firstPageIndex = 1\n  const lastPageIndex = pageCount\n\n  const leftSiblingIndex = Math.max(currentPage - siblingCount, firstPageIndex)\n  const rightSiblingIndex = Math.min(currentPage + siblingCount, lastPageIndex)\n\n  if (showEdges) {\n    /**\n     * `2 * siblingCount + 5` explanation:\n     * 2 * siblingCount for left/right siblings\n     * 5 for 2x left/right ellipsis, 2x first/last page + 1x current page\n     *\n     * For some page counts (e.g. totalPages: 8, siblingCount: 2),\n     * calculated max page is higher than total pages,\n     * so we need to take the minimum of both.\n     */\n    const totalPageNumbers = Math.min(2 * siblingCount + 5, pageCount)\n\n    const itemCount = totalPageNumbers - 2 // 2 stands for one ellipsis and either first or last page\n\n    const showLeftEllipsis\n      // default condition\n      = leftSiblingIndex > firstPageIndex + 2\n      // if the current page is towards the end of the list\n        && Math.abs(lastPageIndex - itemCount - firstPageIndex + 1) > 2\n      // if the current page is towards the middle of the list\n        && Math.abs(leftSiblingIndex - firstPageIndex) > 2\n\n    const showRightEllipsis\n      // default condition\n      = rightSiblingIndex < lastPageIndex - 2\n      // if the current page is towards the start of the list\n        && Math.abs(lastPageIndex - itemCount) > 2\n      // if the current page is towards the middle of the list\n        && Math.abs(lastPageIndex - rightSiblingIndex) > 2\n\n    if (!showLeftEllipsis && showRightEllipsis) {\n      const leftRange = range(1, itemCount)\n\n      return [...leftRange, ELLIPSIS, lastPageIndex]\n    }\n\n    if (showLeftEllipsis && !showRightEllipsis) {\n      const rightRange = range(lastPageIndex - itemCount + 1, lastPageIndex)\n\n      return [firstPageIndex, ELLIPSIS, ...rightRange]\n    }\n\n    if (showLeftEllipsis && showRightEllipsis) {\n      const middleRange = range(leftSiblingIndex, rightSiblingIndex)\n\n      return [firstPageIndex, ELLIPSIS, ...middleRange, ELLIPSIS, lastPageIndex]\n    }\n\n    const fullRange = range(firstPageIndex, lastPageIndex)\n    return fullRange\n  }\n  else {\n    const itemCount = siblingCount * 2 + 1\n\n    if (pageCount < itemCount)\n      return range(1, lastPageIndex)\n\n    else if (currentPage <= (siblingCount + 1))\n      return range(firstPageIndex, itemCount)\n\n    else if ((pageCount - currentPage) <= siblingCount)\n      return range(pageCount - itemCount + 1, lastPageIndex)\n\n    else\n      return range(leftSiblingIndex, rightSiblingIndex)\n  }\n}\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationListProps extends PrimitiveProps { }\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\nimport { getRange, transform } from './utils'\n\nconst props = defineProps<PaginationListProps>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Pages item */\n    items: typeof transformedRange.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst rootContext = injectPaginationRootContext()\n\nconst transformedRange = computed(() => {\n  return transform(\n    getRange(\n      rootContext.page.value,\n      rootContext.pageCount.value,\n      rootContext.siblingCount.value,\n      rootContext.showEdges.value,\n    ),\n  )\n})\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot :items=\"transformedRange\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationListProps extends PrimitiveProps { }\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\nimport { getRange, transform } from './utils'\n\nconst props = defineProps<PaginationListProps>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Pages item */\n    items: typeof transformedRange.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst rootContext = injectPaginationRootContext()\n\nconst transformedRange = computed(() => {\n  return transform(\n    getRange(\n      rootContext.page.value,\n      rootContext.pageCount.value,\n      rootContext.siblingCount.value,\n      rootContext.showEdges.value,\n    ),\n  )\n})\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot :items=\"transformedRange\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationListItemProps extends PrimitiveProps {\n  /** Value for the page */\n  value: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationListItemProps>(), { as: 'button' })\nuseForwardExpose()\n\nconst rootContext = injectPaginationRootContext()\nconst isSelected = computed(() => rootContext.page.value === props.value)\n\nconst disabled = computed((): boolean => rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    data-type=\"page\"\n    :aria-label=\"`Page ${value}`\"\n    :aria-current=\"isSelected ? 'page' : undefined\"\n    :data-selected=\"isSelected ? 'true' : undefined\"\n    :disabled\n    :type=\"as === 'button' ? 'button' : undefined\"\n    @click=\"!disabled && rootContext.onPageChange(value)\"\n  >\n    <slot>{{ value }}</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationListItemProps extends PrimitiveProps {\n  /** Value for the page */\n  value: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationListItemProps>(), { as: 'button' })\nuseForwardExpose()\n\nconst rootContext = injectPaginationRootContext()\nconst isSelected = computed(() => rootContext.page.value === props.value)\n\nconst disabled = computed((): boolean => rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    data-type=\"page\"\n    :aria-label=\"`Page ${value}`\"\n    :aria-current=\"isSelected ? 'page' : undefined\"\n    :data-selected=\"isSelected ? 'true' : undefined\"\n    :disabled\n    :type=\"as === 'button' ? 'button' : undefined\"\n    @click=\"!disabled && rootContext.onPageChange(value)\"\n  >\n    <slot>{{ value }}</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationNextProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationNextProps>(), { as: 'button' })\n\nuseForwardExpose()\nconst rootContext = injectPaginationRootContext()\n\nconst disabled = computed((): boolean => rootContext.page.value === rootContext.pageCount.value || rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"Next Page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :disabled\n    @click=\"!disabled && rootContext.onPageChange(rootContext.page.value + 1)\"\n  >\n    <slot>Next page</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationNextProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationNextProps>(), { as: 'button' })\n\nuseForwardExpose()\nconst rootContext = injectPaginationRootContext()\n\nconst disabled = computed((): boolean => rootContext.page.value === rootContext.pageCount.value || rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"Next Page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :disabled\n    @click=\"!disabled && rootContext.onPageChange(rootContext.page.value + 1)\"\n  >\n    <slot>Next page</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationPrevProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationPrevProps>(), { as: 'button' })\n\nuseForwardExpose()\nconst rootContext = injectPaginationRootContext()\n\nconst disabled = computed((): boolean => rootContext.page.value === 1 || rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"Previous Page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :disabled\n    @click=\"!disabled && rootContext.onPageChange(rootContext.page.value - 1)\"\n  >\n    <slot>Prev page</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface PaginationPrevProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPaginationRootContext } from './PaginationRoot.vue'\n\nconst props = withDefaults(defineProps<PaginationPrevProps>(), { as: 'button' })\n\nuseForwardExpose()\nconst rootContext = injectPaginationRootContext()\n\nconst disabled = computed((): boolean => rootContext.page.value === 1 || rootContext.disabled.value)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    aria-label=\"Previous Page\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :disabled\n    @click=\"!disabled && rootContext.onPageChange(rootContext.page.value - 1)\"\n  >\n    <slot>Prev page</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { computed, ref, toRefs, watch } from 'vue'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\nimport VisuallyHiddenInput from '@/VisuallyHidden/VisuallyHiddenInput.vue'\n\nexport type PinInputType = 'text' | 'number'\n\n// Using this type to avoid mixed arrays (string | number)[].\n// The value type can be number[] only when the type is explicitly set to 'number'\nexport type PinInputValue<Type extends PinInputType> = [Type] extends ['number'] ? number[] : string[]\n\n// provide the mixed arrays because the `type` is dynamic in the context\nexport type PinInputContextValue<Type extends PinInputType = 'text'> =\n  Type extends 'number'\n    ? Type extends 'string'\n      ? string[] | number[]\n      : number[]\n    : string[]\n\nexport type PinInputRootEmits<Type extends PinInputType = 'text'> = {\n  'update:modelValue': [value: PinInputValue<Type>]\n  'complete': [value: PinInputValue<Type>]\n}\n\nexport interface PinInputRootProps<Type extends PinInputType = 'text'> extends PrimitiveProps, FormFieldProps {\n  /** The controlled checked state of the pin input. Can be binded as `v-model`. */\n  modelValue?: PinInputValue<Type> | null\n  /** The default value of the pin inputs when it is initially rendered. Use when you do not need to control its checked state. */\n  defaultValue?: PinInputValue<Type>[]\n  /** The placeholder character to use for empty pin-inputs. */\n  placeholder?: string\n  /** When `true`, pin inputs will be treated as password. */\n  mask?: boolean\n  /** When `true`, mobile devices will autodetect the OTP from messages or clipboard, and enable the autocomplete field. */\n  otp?: boolean\n  /** Input type for the inputs. */\n  type?: Type\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, prevents the user from interacting with the pin input */\n  disabled?: boolean\n  /** Id of the element */\n  id?: string\n}\n\nexport interface PinInputRootContext<Type extends PinInputType = 'text'> {\n  modelValue: Ref<PinInputContextValue<Type>>\n  currentModelValue: ComputedRef<PinInputContextValue<Type>>\n  mask: Ref<boolean>\n  otp: Ref<boolean>\n  placeholder: Ref<string>\n  type: Ref<PinInputType>\n  dir: Ref<Direction>\n  disabled: Ref<boolean>\n  isCompleted: ComputedRef<boolean>\n  inputElements?: Ref<Set<HTMLInputElement>>\n  onInputElementChange: (el: HTMLInputElement) => void\n  isNumericMode: ComputedRef<boolean>\n}\n\nexport const [injectPinInputRootContext, providePinInputRootContext]\n  = createContext<PinInputRootContext<PinInputType>>('PinInputRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"Type extends PinInputType\">\nimport { useVModel } from '@vueuse/core'\nimport { Primitive } from '@/Primitive'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<PinInputRootProps<Type>>(), {\n  placeholder: '',\n  type: 'text' as any,\n})\nconst emits = defineEmits<PinInputRootEmits<Type>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { mask, otp, placeholder, type, disabled, dir: propDir } = toRefs(props)\nconst { forwardRef } = useForwardExpose()\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? [] as any,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<PinInputValue<Type>>\n\nconst currentModelValue = computed(() => Array.isArray(modelValue.value) ? [...modelValue.value] : [])\n\nconst inputElements = ref<Set<HTMLInputElement>>(new Set())\nfunction onInputElementChange(el: HTMLInputElement) {\n  inputElements.value.add(el)\n}\n\nconst isNumericMode = computed(() => props.type === 'number')\nconst isCompleted = computed(() => {\n  const modelValues = currentModelValue.value.filter(i => !!i || (isNumericMode.value && i === 0))\n  return modelValues.length === inputElements.value.size\n})\n\nwatch(modelValue, () => {\n  if (isCompleted.value)\n    emits('complete', modelValue.value)\n}, { deep: true })\n\nprovidePinInputRootContext({\n  modelValue,\n  currentModelValue: currentModelValue as ComputedRef<PinInputValue<Type>>,\n  mask,\n  otp,\n  placeholder,\n  type,\n  dir,\n  disabled,\n  isCompleted,\n  inputElements,\n  onInputElementChange,\n  isNumericMode,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    :dir=\"dir\"\n    :data-complete=\"isCompleted ? '' : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n  >\n    <slot :model-value=\"modelValue\" />\n\n    <VisuallyHiddenInput\n      :id=\"id\"\n      as=\"input\"\n      feature=\"focusable\"\n      tabindex=\"-1\"\n      :value=\"currentModelValue.join('')\"\n      :name=\"name ?? ''\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      @focus=\"Array.from(inputElements)?.[0]?.focus()\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { computed, ref, toRefs, watch } from 'vue'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\nimport VisuallyHiddenInput from '@/VisuallyHidden/VisuallyHiddenInput.vue'\n\nexport type PinInputType = 'text' | 'number'\n\n// Using this type to avoid mixed arrays (string | number)[].\n// The value type can be number[] only when the type is explicitly set to 'number'\nexport type PinInputValue<Type extends PinInputType> = [Type] extends ['number'] ? number[] : string[]\n\n// provide the mixed arrays because the `type` is dynamic in the context\nexport type PinInputContextValue<Type extends PinInputType = 'text'> =\n  Type extends 'number'\n    ? Type extends 'string'\n      ? string[] | number[]\n      : number[]\n    : string[]\n\nexport type PinInputRootEmits<Type extends PinInputType = 'text'> = {\n  'update:modelValue': [value: PinInputValue<Type>]\n  'complete': [value: PinInputValue<Type>]\n}\n\nexport interface PinInputRootProps<Type extends PinInputType = 'text'> extends PrimitiveProps, FormFieldProps {\n  /** The controlled checked state of the pin input. Can be binded as `v-model`. */\n  modelValue?: PinInputValue<Type> | null\n  /** The default value of the pin inputs when it is initially rendered. Use when you do not need to control its checked state. */\n  defaultValue?: PinInputValue<Type>[]\n  /** The placeholder character to use for empty pin-inputs. */\n  placeholder?: string\n  /** When `true`, pin inputs will be treated as password. */\n  mask?: boolean\n  /** When `true`, mobile devices will autodetect the OTP from messages or clipboard, and enable the autocomplete field. */\n  otp?: boolean\n  /** Input type for the inputs. */\n  type?: Type\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, prevents the user from interacting with the pin input */\n  disabled?: boolean\n  /** Id of the element */\n  id?: string\n}\n\nexport interface PinInputRootContext<Type extends PinInputType = 'text'> {\n  modelValue: Ref<PinInputContextValue<Type>>\n  currentModelValue: ComputedRef<PinInputContextValue<Type>>\n  mask: Ref<boolean>\n  otp: Ref<boolean>\n  placeholder: Ref<string>\n  type: Ref<PinInputType>\n  dir: Ref<Direction>\n  disabled: Ref<boolean>\n  isCompleted: ComputedRef<boolean>\n  inputElements?: Ref<Set<HTMLInputElement>>\n  onInputElementChange: (el: HTMLInputElement) => void\n  isNumericMode: ComputedRef<boolean>\n}\n\nexport const [injectPinInputRootContext, providePinInputRootContext]\n  = createContext<PinInputRootContext<PinInputType>>('PinInputRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"Type extends PinInputType\">\nimport { useVModel } from '@vueuse/core'\nimport { Primitive } from '@/Primitive'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<PinInputRootProps<Type>>(), {\n  placeholder: '',\n  type: 'text' as any,\n})\nconst emits = defineEmits<PinInputRootEmits<Type>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { mask, otp, placeholder, type, disabled, dir: propDir } = toRefs(props)\nconst { forwardRef } = useForwardExpose()\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue ?? [] as any,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<PinInputValue<Type>>\n\nconst currentModelValue = computed(() => Array.isArray(modelValue.value) ? [...modelValue.value] : [])\n\nconst inputElements = ref<Set<HTMLInputElement>>(new Set())\nfunction onInputElementChange(el: HTMLInputElement) {\n  inputElements.value.add(el)\n}\n\nconst isNumericMode = computed(() => props.type === 'number')\nconst isCompleted = computed(() => {\n  const modelValues = currentModelValue.value.filter(i => !!i || (isNumericMode.value && i === 0))\n  return modelValues.length === inputElements.value.size\n})\n\nwatch(modelValue, () => {\n  if (isCompleted.value)\n    emits('complete', modelValue.value)\n}, { deep: true })\n\nprovidePinInputRootContext({\n  modelValue,\n  currentModelValue: currentModelValue as ComputedRef<PinInputValue<Type>>,\n  mask,\n  otp,\n  placeholder,\n  type,\n  dir,\n  disabled,\n  isCompleted,\n  inputElements,\n  onInputElementChange,\n  isNumericMode,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    :dir=\"dir\"\n    :data-complete=\"isCompleted ? '' : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n  >\n    <slot :model-value=\"modelValue\" />\n\n    <VisuallyHiddenInput\n      :id=\"id\"\n      as=\"input\"\n      feature=\"focusable\"\n      tabindex=\"-1\"\n      :value=\"currentModelValue.join('')\"\n      :name=\"name ?? ''\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      @focus=\"Array.from(inputElements)?.[0]?.focus()\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PinInputContextValue } from './PinInputRoot.vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { getActiveElement, useArrowNavigation } from '@/shared'\nimport { injectPinInputRootContext } from './PinInputRoot.vue'\n\nexport interface PinInputInputProps extends PrimitiveProps {\n  /** Position of the value this input binds to. */\n  index: number\n  /** When `true`, prevents the user from interacting with the pin input */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, onMounted, onUnmounted, watch } from 'vue'\n\nconst props = withDefaults(defineProps<PinInputInputProps>(), {\n  as: 'input',\n})\n\nconst context = injectPinInputRootContext()\nconst inputElements = computed(() => Array.from(context.inputElements!.value))\nconst currentValue = computed(() => context.currentModelValue.value[props.index])\n\nconst disabled = computed(() => props.disabled || context.disabled.value)\nconst isOtpMode = computed(() => context.otp.value)\nconst isPasswordMode = computed(() => context.mask.value)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nfunction handleInput(event: InputEvent) {\n  const target = event.target as HTMLInputElement\n\n  if ((event.data?.length ?? 0) > 1) {\n    handleMultipleCharacter(target.value)\n    return\n  }\n\n  if (context.isNumericMode.value && !/^\\d*$/.test(target.value)) {\n    target.value = target.value.replace(/\\D/g, '')\n    return\n  }\n\n  target.value = event.data ?? ''\n  updateModelValueAt(props.index, target.value)\n\n  const nextEl = inputElements.value[props.index + 1]\n  if (nextEl)\n    nextEl.focus()\n}\n\nfunction resetPlaceholder() {\n  const target = currentElement.value as HTMLInputElement\n  nextTick(() => {\n    if (target && !target.value)\n      target.placeholder = context.placeholder.value\n  })\n}\n\nfunction handleKeydown(event: KeyboardEvent) {\n  useArrowNavigation(event, getActiveElement() as HTMLElement, undefined, {\n    itemsArray: inputElements.value,\n    focus: true,\n    loop: false,\n    arrowKeyOptions: 'horizontal',\n    dir: context.dir.value,\n  })\n}\n\nfunction handleBackspace(event: KeyboardEvent) {\n  event.preventDefault()\n  const target = event.target as HTMLInputElement\n  const value = target.value\n\n  if (value) {\n    updateModelValueAt(props.index, '')\n  }\n  else {\n    const prevEl = inputElements.value[props.index - 1]\n    if (prevEl) {\n      prevEl.focus()\n      updateModelValueAt(props.index - 1, '')\n    }\n  }\n}\n\nfunction handleDelete(event: KeyboardEvent) {\n  if (event.key === 'Delete') {\n    event.preventDefault()\n    updateModelValueAt(props.index, '')\n  }\n}\n\nfunction handleFocus(event: FocusEvent) {\n  const target = event.target as HTMLInputElement\n  target.setSelectionRange(1, 1)\n\n  if (!target.value)\n    target.placeholder = ''\n}\n\nfunction handleBlur(event: FocusEvent) {\n  resetPlaceholder()\n}\n\nfunction handlePaste(event: ClipboardEvent) {\n  event.preventDefault()\n  const clipboardData = event.clipboardData\n  if (!clipboardData)\n    return\n\n  const values = clipboardData.getData('text')\n  handleMultipleCharacter(values)\n}\n\nfunction handleMultipleCharacter(values: string) {\n  const tempModelValue = [...context.currentModelValue.value] as typeof context.currentModelValue.value\n  const initialIndex = values.length >= inputElements.value.length ? 0 : props.index\n  const lastIndex = Math.min(initialIndex + values.length, inputElements.value.length)\n  for (let i = initialIndex; i < lastIndex; i++) {\n    const input = inputElements.value[i]\n    const value = values[i - initialIndex]\n    if (context.isNumericMode.value && !/^\\d*$/.test(value))\n      continue\n\n    tempModelValue[i] = value\n    input.focus()\n  }\n  context.modelValue.value = tempModelValue\n  inputElements.value[lastIndex]?.focus()\n}\n\nfunction removeTrailingEmptyStrings(input: PinInputContextValue<typeof context.type.value>) {\n  let i = input.length - 1\n\n  while (i >= 0 && input[i] === '') {\n    input.pop()\n    i--\n  }\n\n  return input\n}\n\nfunction updateModelValueAt(index: number, value: string) {\n  const tempModelValue = [...context.currentModelValue.value] as typeof context.currentModelValue.value\n\n  if (context.isNumericMode.value) {\n    const num = +value\n\n    if (value === '' || isNaN(num)) {\n      delete tempModelValue[index]\n    }\n    else {\n      tempModelValue[index] = num\n    }\n  }\n  else {\n    tempModelValue[index] = value\n  }\n\n  context.modelValue.value = removeTrailingEmptyStrings(tempModelValue)\n}\n\nwatch(currentValue, () => {\n  if (!currentValue.value) {\n    resetPlaceholder()\n  }\n})\n\nonMounted(() => {\n  context.onInputElementChange(currentElement.value as HTMLInputElement)\n})\nonUnmounted(() => {\n  context.inputElements?.value.delete(currentElement.value as HTMLInputElement)\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    autocapitalize=\"none\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :autocomplete=\"isOtpMode ? 'one-time-code' : 'false'\"\n    :type=\"isPasswordMode ? 'password' : 'text'\"\n    :inputmode=\"context.isNumericMode.value ? 'numeric' : 'text'\"\n    :pattern=\"context.isNumericMode.value ? '[0-9]*' : undefined\"\n    :placeholder=\"context.placeholder.value\"\n    :value=\"currentValue\"\n    :disabled=\"disabled\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-complete=\"context.isCompleted.value ? '' : undefined\"\n    :aria-label=\"`pin input ${index + 1} of ${inputElements.length}`\"\n    @input=\"handleInput($event as InputEvent)\"\n    @keydown.left.right.up.down.home.end=\"handleKeydown\"\n    @keydown.backspace=\"handleBackspace\"\n    @keydown.delete=\"handleDelete\"\n    @focus=\"handleFocus\"\n    @blur=\"handleBlur\"\n    @paste=\"handlePaste\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PinInputContextValue } from './PinInputRoot.vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { getActiveElement, useArrowNavigation } from '@/shared'\nimport { injectPinInputRootContext } from './PinInputRoot.vue'\n\nexport interface PinInputInputProps extends PrimitiveProps {\n  /** Position of the value this input binds to. */\n  index: number\n  /** When `true`, prevents the user from interacting with the pin input */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, nextTick, onMounted, onUnmounted, watch } from 'vue'\n\nconst props = withDefaults(defineProps<PinInputInputProps>(), {\n  as: 'input',\n})\n\nconst context = injectPinInputRootContext()\nconst inputElements = computed(() => Array.from(context.inputElements!.value))\nconst currentValue = computed(() => context.currentModelValue.value[props.index])\n\nconst disabled = computed(() => props.disabled || context.disabled.value)\nconst isOtpMode = computed(() => context.otp.value)\nconst isPasswordMode = computed(() => context.mask.value)\n\nconst { primitiveElement, currentElement } = usePrimitiveElement()\nfunction handleInput(event: InputEvent) {\n  const target = event.target as HTMLInputElement\n\n  if ((event.data?.length ?? 0) > 1) {\n    handleMultipleCharacter(target.value)\n    return\n  }\n\n  if (context.isNumericMode.value && !/^\\d*$/.test(target.value)) {\n    target.value = target.value.replace(/\\D/g, '')\n    return\n  }\n\n  target.value = event.data ?? ''\n  updateModelValueAt(props.index, target.value)\n\n  const nextEl = inputElements.value[props.index + 1]\n  if (nextEl)\n    nextEl.focus()\n}\n\nfunction resetPlaceholder() {\n  const target = currentElement.value as HTMLInputElement\n  nextTick(() => {\n    if (target && !target.value)\n      target.placeholder = context.placeholder.value\n  })\n}\n\nfunction handleKeydown(event: KeyboardEvent) {\n  useArrowNavigation(event, getActiveElement() as HTMLElement, undefined, {\n    itemsArray: inputElements.value,\n    focus: true,\n    loop: false,\n    arrowKeyOptions: 'horizontal',\n    dir: context.dir.value,\n  })\n}\n\nfunction handleBackspace(event: KeyboardEvent) {\n  event.preventDefault()\n  const target = event.target as HTMLInputElement\n  const value = target.value\n\n  if (value) {\n    updateModelValueAt(props.index, '')\n  }\n  else {\n    const prevEl = inputElements.value[props.index - 1]\n    if (prevEl) {\n      prevEl.focus()\n      updateModelValueAt(props.index - 1, '')\n    }\n  }\n}\n\nfunction handleDelete(event: KeyboardEvent) {\n  if (event.key === 'Delete') {\n    event.preventDefault()\n    updateModelValueAt(props.index, '')\n  }\n}\n\nfunction handleFocus(event: FocusEvent) {\n  const target = event.target as HTMLInputElement\n  target.setSelectionRange(1, 1)\n\n  if (!target.value)\n    target.placeholder = ''\n}\n\nfunction handleBlur(event: FocusEvent) {\n  resetPlaceholder()\n}\n\nfunction handlePaste(event: ClipboardEvent) {\n  event.preventDefault()\n  const clipboardData = event.clipboardData\n  if (!clipboardData)\n    return\n\n  const values = clipboardData.getData('text')\n  handleMultipleCharacter(values)\n}\n\nfunction handleMultipleCharacter(values: string) {\n  const tempModelValue = [...context.currentModelValue.value] as typeof context.currentModelValue.value\n  const initialIndex = values.length >= inputElements.value.length ? 0 : props.index\n  const lastIndex = Math.min(initialIndex + values.length, inputElements.value.length)\n  for (let i = initialIndex; i < lastIndex; i++) {\n    const input = inputElements.value[i]\n    const value = values[i - initialIndex]\n    if (context.isNumericMode.value && !/^\\d*$/.test(value))\n      continue\n\n    tempModelValue[i] = value\n    input.focus()\n  }\n  context.modelValue.value = tempModelValue\n  inputElements.value[lastIndex]?.focus()\n}\n\nfunction removeTrailingEmptyStrings(input: PinInputContextValue<typeof context.type.value>) {\n  let i = input.length - 1\n\n  while (i >= 0 && input[i] === '') {\n    input.pop()\n    i--\n  }\n\n  return input\n}\n\nfunction updateModelValueAt(index: number, value: string) {\n  const tempModelValue = [...context.currentModelValue.value] as typeof context.currentModelValue.value\n\n  if (context.isNumericMode.value) {\n    const num = +value\n\n    if (value === '' || isNaN(num)) {\n      delete tempModelValue[index]\n    }\n    else {\n      tempModelValue[index] = num\n    }\n  }\n  else {\n    tempModelValue[index] = value\n  }\n\n  context.modelValue.value = removeTrailingEmptyStrings(tempModelValue)\n}\n\nwatch(currentValue, () => {\n  if (!currentValue.value) {\n    resetPlaceholder()\n  }\n})\n\nonMounted(() => {\n  context.onInputElementChange(currentElement.value as HTMLInputElement)\n})\nonUnmounted(() => {\n  context.inputElements?.value.delete(currentElement.value as HTMLInputElement)\n})\n</script>\n\n<template>\n  <Primitive\n    ref=\"primitiveElement\"\n    autocapitalize=\"none\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :autocomplete=\"isOtpMode ? 'one-time-code' : 'false'\"\n    :type=\"isPasswordMode ? 'password' : 'text'\"\n    :inputmode=\"context.isNumericMode.value ? 'numeric' : 'text'\"\n    :pattern=\"context.isNumericMode.value ? '[0-9]*' : undefined\"\n    :placeholder=\"context.placeholder.value\"\n    :value=\"currentValue\"\n    :disabled=\"disabled\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-complete=\"context.isCompleted.value ? '' : undefined\"\n    :aria-label=\"`pin input ${index + 1} of ${inputElements.length}`\"\n    @input=\"handleInput($event as InputEvent)\"\n    @keydown.left.right.up.down.home.end=\"handleKeydown\"\n    @keydown.backspace=\"handleBackspace\"\n    @keydown.delete=\"handleDelete\"\n    @focus=\"handleFocus\"\n    @blur=\"handleBlur\"\n    @paste=\"handlePaste\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, isNullish, useForwardExpose } from '@/shared'\n\nexport type ProgressRootEmits = {\n  /** Event handler called when the progress value changes */\n  'update:modelValue': [value: string[] | undefined]\n  /** Event handler called when the max value changes */\n  'update:max': [value: number]\n}\n\nexport interface ProgressRootProps extends PrimitiveProps {\n  /** The progress value. Can be bind as `v-model`. */\n  modelValue?: number | null\n  /** The maximum progress value. */\n  max?: number\n  /**\n   * A function to get the accessible label text in a human-readable format.\n   *\n   *  If not provided, the value label will be read as the numeric value as a percentage of the max value.\n   */\n  getValueLabel?: (value: number | null | undefined, max: number) => string | undefined\n  /**\n   * A function to get the accessible value text representing the current value in a human-readable format.\n   */\n  getValueText?: (value: number | null | undefined, max: number) => string | undefined\n}\n\nconst DEFAULT_MAX = 100\n\ninterface ProgressRootContext {\n  modelValue?: Readonly<Ref<ProgressRootProps['modelValue']>>\n  max: Readonly<Ref<number>>\n  progressState: ComputedRef<ProgressState>\n}\n\nexport const [injectProgressRootContext, provideProgressRootContext]\n  = createContext<ProgressRootContext>('ProgressRoot')\n\nexport type ProgressState = 'indeterminate' | 'loading' | 'complete'\n\nconst isNumber = (v: any): v is number => typeof v === 'number'\n\nfunction validateValue(value: any, max: number): number | null {\n  const isValidValueError\n    = isNullish(value)\n      || (isNumber(value) && !Number.isNaN(value) && value <= max && value >= 0)\n\n  if (isValidValueError)\n    return value as null\n\n  console.error(`Invalid prop \\`value\\` of value \\`${value}\\` supplied to \\`ProgressRoot\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\`  or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`)\n  return null\n}\n\nfunction validateMax(max: number): number {\n  const isValidMaxError = isNumber(max) && !Number.isNaN(max) && max > 0\n\n  if (isValidMaxError)\n    return max\n\n  console.error(\n    `Invalid prop \\`max\\` of value \\`${max}\\` supplied to \\`ProgressRoot\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`,\n  )\n  return DEFAULT_MAX\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, watch } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<ProgressRootProps>(), {\n  max: DEFAULT_MAX,\n  getValueLabel: (value: number | null | undefined, max: number) =>\n    isNumber(value) ? `${Math.round((value / max) * DEFAULT_MAX)}%` : undefined,\n})\n\nconst emit = defineEmits<ProgressRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst modelValue = useVModel(props, 'modelValue', emit, {\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst max = useVModel(props, 'max', emit, {\n  passive: (props.max === undefined) as false,\n})\n\n// ------- Watch for correct values -------\nwatch(\n  () => modelValue.value,\n  async (value) => {\n    const correctedValue = validateValue(value, props.max)\n    if (correctedValue !== value) {\n      await nextTick()\n      modelValue.value = correctedValue\n    }\n  },\n  { immediate: true },\n)\n\nwatch(\n  () => props.max,\n  (newMax) => {\n    const correctedMax = validateMax(props.max)\n    if (correctedMax !== newMax)\n      max.value = correctedMax\n  },\n  { immediate: true },\n)\n// ------- End of watch for correct values -------\n\nconst progressState = computed<ProgressState>(() => {\n  if (isNullish(modelValue.value))\n    return 'indeterminate'\n  if (modelValue.value === max.value)\n    return 'complete'\n  return 'loading'\n})\n\nprovideProgressRootContext({\n  modelValue,\n  max,\n  progressState,\n})\n</script>\n\n<template>\n  <Primitive\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :aria-valuemax=\"max\"\n    :aria-valuemin=\"0\"\n    :aria-valuenow=\"isNumber(modelValue) ? modelValue : undefined\"\n    :aria-valuetext=\"getValueText?.(modelValue, max)\"\n    :aria-label=\"getValueLabel(modelValue, max)\"\n    role=\"progressbar\"\n    :data-state=\"progressState\"\n    :data-value=\"modelValue ?? undefined\"\n    :data-max=\"max\"\n  >\n    <slot :model-value=\"modelValue\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, isNullish, useForwardExpose } from '@/shared'\n\nexport type ProgressRootEmits = {\n  /** Event handler called when the progress value changes */\n  'update:modelValue': [value: string[] | undefined]\n  /** Event handler called when the max value changes */\n  'update:max': [value: number]\n}\n\nexport interface ProgressRootProps extends PrimitiveProps {\n  /** The progress value. Can be bind as `v-model`. */\n  modelValue?: number | null\n  /** The maximum progress value. */\n  max?: number\n  /**\n   * A function to get the accessible label text in a human-readable format.\n   *\n   *  If not provided, the value label will be read as the numeric value as a percentage of the max value.\n   */\n  getValueLabel?: (value: number | null | undefined, max: number) => string | undefined\n  /**\n   * A function to get the accessible value text representing the current value in a human-readable format.\n   */\n  getValueText?: (value: number | null | undefined, max: number) => string | undefined\n}\n\nconst DEFAULT_MAX = 100\n\ninterface ProgressRootContext {\n  modelValue?: Readonly<Ref<ProgressRootProps['modelValue']>>\n  max: Readonly<Ref<number>>\n  progressState: ComputedRef<ProgressState>\n}\n\nexport const [injectProgressRootContext, provideProgressRootContext]\n  = createContext<ProgressRootContext>('ProgressRoot')\n\nexport type ProgressState = 'indeterminate' | 'loading' | 'complete'\n\nconst isNumber = (v: any): v is number => typeof v === 'number'\n\nfunction validateValue(value: any, max: number): number | null {\n  const isValidValueError\n    = isNullish(value)\n      || (isNumber(value) && !Number.isNaN(value) && value <= max && value >= 0)\n\n  if (isValidValueError)\n    return value as null\n\n  console.error(`Invalid prop \\`value\\` of value \\`${value}\\` supplied to \\`ProgressRoot\\`. The \\`value\\` prop must be:\n  - a positive number\n  - less than the value passed to \\`max\\` (or ${DEFAULT_MAX} if no \\`max\\` prop is set)\n  - \\`null\\`  or \\`undefined\\` if the progress is indeterminate.\n\nDefaulting to \\`null\\`.`)\n  return null\n}\n\nfunction validateMax(max: number): number {\n  const isValidMaxError = isNumber(max) && !Number.isNaN(max) && max > 0\n\n  if (isValidMaxError)\n    return max\n\n  console.error(\n    `Invalid prop \\`max\\` of value \\`${max}\\` supplied to \\`ProgressRoot\\`. Only numbers greater than 0 are valid max values. Defaulting to \\`${DEFAULT_MAX}\\`.`,\n  )\n  return DEFAULT_MAX\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, watch } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<ProgressRootProps>(), {\n  max: DEFAULT_MAX,\n  getValueLabel: (value: number | null | undefined, max: number) =>\n    isNumber(value) ? `${Math.round((value / max) * DEFAULT_MAX)}%` : undefined,\n})\n\nconst emit = defineEmits<ProgressRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst modelValue = useVModel(props, 'modelValue', emit, {\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst max = useVModel(props, 'max', emit, {\n  passive: (props.max === undefined) as false,\n})\n\n// ------- Watch for correct values -------\nwatch(\n  () => modelValue.value,\n  async (value) => {\n    const correctedValue = validateValue(value, props.max)\n    if (correctedValue !== value) {\n      await nextTick()\n      modelValue.value = correctedValue\n    }\n  },\n  { immediate: true },\n)\n\nwatch(\n  () => props.max,\n  (newMax) => {\n    const correctedMax = validateMax(props.max)\n    if (correctedMax !== newMax)\n      max.value = correctedMax\n  },\n  { immediate: true },\n)\n// ------- End of watch for correct values -------\n\nconst progressState = computed<ProgressState>(() => {\n  if (isNullish(modelValue.value))\n    return 'indeterminate'\n  if (modelValue.value === max.value)\n    return 'complete'\n  return 'loading'\n})\n\nprovideProgressRootContext({\n  modelValue,\n  max,\n  progressState,\n})\n</script>\n\n<template>\n  <Primitive\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :aria-valuemax=\"max\"\n    :aria-valuemin=\"0\"\n    :aria-valuenow=\"isNumber(modelValue) ? modelValue : undefined\"\n    :aria-valuetext=\"getValueText?.(modelValue, max)\"\n    :aria-label=\"getValueLabel(modelValue, max)\"\n    role=\"progressbar\"\n    :data-state=\"progressState\"\n    :data-value=\"modelValue ?? undefined\"\n    :data-max=\"max\"\n  >\n    <slot :model-value=\"modelValue\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ProgressIndicatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectProgressRootContext } from './ProgressRoot.vue'\n\nconst props = defineProps<ProgressIndicatorProps>()\n\nconst rootContext = injectProgressRootContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :data-state=\"rootContext.progressState.value\"\n    :data-value=\"rootContext.modelValue?.value ?? undefined\"\n    :data-max=\"rootContext.max.value\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ProgressIndicatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectProgressRootContext } from './ProgressRoot.vue'\n\nconst props = defineProps<ProgressIndicatorProps>()\n\nconst rootContext = injectProgressRootContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :data-state=\"rootContext.progressState.value\"\n    :data-value=\"rootContext.modelValue?.value ?? undefined\"\n    :data-max=\"rootContext.max.value\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "import type { AcceptableValue } from '@/shared/types'\nimport { handleAndDispatchCustomEvent } from '@/shared'\n\nexport type SelectEvent = CustomEvent<{ originalEvent: MouseEvent, value?: AcceptableValue }>\nexport const RADIO_SELECT = 'radio.select'\n\nexport function handleSelect(event: MouseEvent, value: AcceptableValue | undefined, callback: (event: SelectEvent) => void) {\n  const eventDetail = { originalEvent: event, value }\n  handleAndDispatchCustomEvent(RADIO_SELECT, callback, eventDetail)\n}\n", "<script lang=\"ts\">\nimport type { SelectEvent } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, FormFieldProps } from '@/shared/types'\n\nexport type RadioEmits = {\n  'update:checked': [value: boolean]\n  'select': [SelectEvent]\n}\n\nexport interface RadioProps extends PrimitiveProps, FormFieldProps {\n  id?: string\n  /** The value given as data when submitted with a `name`. */\n  value?: AcceptableValue\n  /** When `true`, prevents the user from interacting with the radio item. */\n  disabled?: boolean\n  checked?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useFormControl, useForwardExpose } from '@/shared'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport { handleSelect } from './utils'\n\nconst props = withDefaults(defineProps<RadioProps>(), {\n  disabled: false,\n  checked: undefined,\n  as: 'button',\n})\nconst emits = defineEmits<RadioEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current checked state */\n    checked: typeof checked.value\n  }) => any\n}>()\n\nconst checked = useVModel(props, 'checked', emits, {\n  passive: (props.checked === undefined) as false,\n})\n\nconst { value } = toRefs(props)\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\nconst isFormControl = useFormControl(triggerElement)\n\nconst ariaLabel = computed(() => props.id && triggerElement.value ? (document.querySelector(`[for=\"${props.id}\"]`) as HTMLLabelElement)?.innerText ?? props.value : undefined)\n\nfunction handleClick(event: MouseEvent) {\n  if (props.disabled)\n    return\n\n  handleSelect(event, props.value, (ev) => {\n    emits('select', ev)\n    if (ev?.defaultPrevented)\n      return\n\n    checked.value = true\n    if (isFormControl.value) {\n    // if radio is in a form, stop propagation from the button so that we only propagate\n    // one click event (from the input). We propagate changes from an input so that native\n    // form validation works and form events reflect radio updates.\n      ev.stopPropagation()\n    }\n  })\n}\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    :id=\"id\"\n    :ref=\"forwardRef\"\n    role=\"radio\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as=\"as\"\n    :aria-checked=\"checked\"\n    :aria-label=\"ariaLabel\"\n    :as-child=\"asChild\"\n    :disabled=\"disabled ? '' : undefined\"\n    :data-state=\"checked ? 'checked' : 'unchecked'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :value=\"value\"\n    :required=\"required\"\n    :name=\"name\"\n    @click.stop=\"handleClick\"\n  >\n    <slot :checked=\"checked\" />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      type=\"radio\"\n      tabindex=\"-1\"\n      :value=\"value\"\n      :checked=\"!!checked\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { SelectEvent } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, FormFieldProps } from '@/shared/types'\n\nexport type RadioEmits = {\n  'update:checked': [value: boolean]\n  'select': [SelectEvent]\n}\n\nexport interface RadioProps extends PrimitiveProps, FormFieldProps {\n  id?: string\n  /** The value given as data when submitted with a `name`. */\n  value?: AcceptableValue\n  /** When `true`, prevents the user from interacting with the radio item. */\n  disabled?: boolean\n  checked?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useFormControl, useForwardExpose } from '@/shared'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport { handleSelect } from './utils'\n\nconst props = withDefaults(defineProps<RadioProps>(), {\n  disabled: false,\n  checked: undefined,\n  as: 'button',\n})\nconst emits = defineEmits<RadioEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current checked state */\n    checked: typeof checked.value\n  }) => any\n}>()\n\nconst checked = useVModel(props, 'checked', emits, {\n  passive: (props.checked === undefined) as false,\n})\n\nconst { value } = toRefs(props)\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\nconst isFormControl = useFormControl(triggerElement)\n\nconst ariaLabel = computed(() => props.id && triggerElement.value ? (document.querySelector(`[for=\"${props.id}\"]`) as HTMLLabelElement)?.innerText ?? props.value : undefined)\n\nfunction handleClick(event: MouseEvent) {\n  if (props.disabled)\n    return\n\n  handleSelect(event, props.value, (ev) => {\n    emits('select', ev)\n    if (ev?.defaultPrevented)\n      return\n\n    checked.value = true\n    if (isFormControl.value) {\n    // if radio is in a form, stop propagation from the button so that we only propagate\n    // one click event (from the input). We propagate changes from an input so that native\n    // form validation works and form events reflect radio updates.\n      ev.stopPropagation()\n    }\n  })\n}\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    :id=\"id\"\n    :ref=\"forwardRef\"\n    role=\"radio\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as=\"as\"\n    :aria-checked=\"checked\"\n    :aria-label=\"ariaLabel\"\n    :as-child=\"asChild\"\n    :disabled=\"disabled ? '' : undefined\"\n    :data-state=\"checked ? 'checked' : 'unchecked'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :value=\"value\"\n    :required=\"required\"\n    :name=\"name\"\n    @click.stop=\"handleClick\"\n  >\n    <slot :checked=\"checked\" />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      type=\"radio\"\n      tabindex=\"-1\"\n      :value=\"value\"\n      :checked=\"!!checked\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, DataOrientation, Direction, FormFieldProps } from '@/shared/types'\nimport { createContext, useDirection, useFormControl, useForwardExpose } from '@/shared'\n\nexport interface RadioGroupRootProps extends PrimitiveProps, FormFieldProps {\n  /** The controlled value of the radio item to check. Can be binded as `v-model`. */\n  modelValue?: AcceptableValue\n  /**\n   * The value of the radio item that should be checked when initially rendered.\n   *\n   * Use when you do not need to control the state of the radio items.\n   */\n  defaultValue?: AcceptableValue\n  /** When `true`, prevents the user from interacting with radio items. */\n  disabled?: boolean\n  /** The orientation of the component. */\n  orientation?: DataOrientation\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, keyboard navigation will loop from last item to first, and vice versa. */\n  loop?: boolean\n}\nexport type RadioGroupRootEmits = {\n  /** Event handler called when the radio group value changes */\n  'update:modelValue': [payload: string]\n}\n\ninterface RadioGroupRootContext {\n  modelValue?: Readonly<Ref<AcceptableValue | undefined>>\n  changeModelValue: (value?: AcceptableValue) => void\n  disabled: Ref<boolean>\n  loop: Ref<boolean>\n  orientation: Ref<DataOrientation | undefined>\n  name?: string\n  required: Ref<boolean>\n}\n\nexport const [injectRadioGroupRootContext, provideRadioGroupRootContext]\n  = createContext<RadioGroupRootContext>('RadioGroupRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\nconst props = withDefaults(defineProps<RadioGroupRootProps>(), {\n  disabled: false,\n  required: false,\n  orientation: undefined,\n  loop: true,\n})\n\nconst emits = defineEmits<RadioGroupRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst { disabled, loop, orientation, name, required, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst isFormControl = useFormControl(currentElement)\n\nprovideRadioGroupRootContext({\n  modelValue,\n  changeModelValue: (value) => {\n    modelValue.value = value\n  },\n  disabled,\n  loop,\n  orientation,\n  name: name?.value,\n  required,\n})\n</script>\n\n<template>\n  <RovingFocusGroup\n    as-child\n    :orientation=\"orientation\"\n    :dir=\"dir\"\n    :loop=\"loop\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"radiogroup\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :aria-orientation=\"orientation\"\n      :aria-required=\"required\"\n      :dir=\"dir\"\n    >\n      <slot :model-value=\"modelValue\" />\n\n      <VisuallyHiddenInput\n        v-if=\"isFormControl && name\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n        :value=\"modelValue\"\n        :name=\"name\"\n      />\n    </Primitive>\n  </RovingFocusGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue, DataOrientation, Direction, FormFieldProps } from '@/shared/types'\nimport { createContext, useDirection, useFormControl, useForwardExpose } from '@/shared'\n\nexport interface RadioGroupRootProps extends PrimitiveProps, FormFieldProps {\n  /** The controlled value of the radio item to check. Can be binded as `v-model`. */\n  modelValue?: AcceptableValue\n  /**\n   * The value of the radio item that should be checked when initially rendered.\n   *\n   * Use when you do not need to control the state of the radio items.\n   */\n  defaultValue?: AcceptableValue\n  /** When `true`, prevents the user from interacting with radio items. */\n  disabled?: boolean\n  /** The orientation of the component. */\n  orientation?: DataOrientation\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, keyboard navigation will loop from last item to first, and vice versa. */\n  loop?: boolean\n}\nexport type RadioGroupRootEmits = {\n  /** Event handler called when the radio group value changes */\n  'update:modelValue': [payload: string]\n}\n\ninterface RadioGroupRootContext {\n  modelValue?: Readonly<Ref<AcceptableValue | undefined>>\n  changeModelValue: (value?: AcceptableValue) => void\n  disabled: Ref<boolean>\n  loop: Ref<boolean>\n  orientation: Ref<DataOrientation | undefined>\n  name?: string\n  required: Ref<boolean>\n}\n\nexport const [injectRadioGroupRootContext, provideRadioGroupRootContext]\n  = createContext<RadioGroupRootContext>('RadioGroupRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\nconst props = withDefaults(defineProps<RadioGroupRootProps>(), {\n  disabled: false,\n  required: false,\n  orientation: undefined,\n  loop: true,\n})\n\nconst emits = defineEmits<RadioGroupRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst { disabled, loop, orientation, name, required, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst isFormControl = useFormControl(currentElement)\n\nprovideRadioGroupRootContext({\n  modelValue,\n  changeModelValue: (value) => {\n    modelValue.value = value\n  },\n  disabled,\n  loop,\n  orientation,\n  name: name?.value,\n  required,\n})\n</script>\n\n<template>\n  <RovingFocusGroup\n    as-child\n    :orientation=\"orientation\"\n    :dir=\"dir\"\n    :loop=\"loop\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"radiogroup\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :aria-orientation=\"orientation\"\n      :aria-required=\"required\"\n      :dir=\"dir\"\n    >\n      <slot :model-value=\"modelValue\" />\n\n      <VisuallyHiddenInput\n        v-if=\"isFormControl && name\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n        :value=\"modelValue\"\n        :name=\"name\"\n      />\n    </Primitive>\n  </RovingFocusGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef } from 'vue'\nimport type { RadioProps } from './Radio.vue'\nimport type { SelectEvent } from './utils'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface RadioGroupItemProps extends Omit<RadioProps, 'checked'> {}\nexport type RadioGroupItemEmits = {\n  select: [event: SelectEvent]\n}\n\ninterface RadioGroupItemContext {\n  disabled: ComputedRef<boolean>\n  checked: ComputedRef<boolean>\n}\n\nexport const [injectRadioGroupItemContext, provideRadiogroupItemContext]\n  = createContext<RadioGroupItemContext>('RadioGroupItem')\n</script>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { isEqual } from 'ohash'\nimport { computed, ref } from 'vue'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport Radio from './Radio.vue'\nimport { injectRadioGroupRootContext } from './RadioGroupRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<RadioGroupItemProps>(), {\n  disabled: false,\n  as: 'button',\n})\n\nconst emits = defineEmits<RadioGroupItemEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current checked state */\n    checked: typeof checked.value\n    /** Required state */\n    required: typeof required.value\n    /** Disabled state */\n    disabled: typeof disabled.value\n  }) => any\n}>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst rootContext = injectRadioGroupRootContext()\n\nconst disabled = computed(() => rootContext.disabled.value || props.disabled)\nconst required = computed(() => rootContext.required.value || props.required)\nconst checked = computed(() => isEqual(rootContext.modelValue?.value, props.value))\n\nprovideRadiogroupItemContext({ disabled, checked })\n\nconst isArrowKeyPressed = ref(false)\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']\n\nuseEventListener('keydown', (event) => {\n  if (ARROW_KEYS.includes(event.key))\n    isArrowKeyPressed.value = true\n})\nuseEventListener('keyup', () => {\n  isArrowKeyPressed.value = false\n})\n\nfunction handleFocus() {\n  setTimeout(() => {\n    /**\n     * Our `RovingFocusGroup` will focus the radio when navigating with arrow keys\n     * and we need to 'check' it in that case. We click it to 'check' it (instead\n     * of updating `context.value`) so that the radio change event fires.\n     */\n    if (isArrowKeyPressed.value)\n      currentElement.value?.click()\n  }, 0)\n}\n</script>\n\n<template>\n  <RovingFocusItem\n    :checked=\"checked\"\n    :disabled=\"disabled\"\n    as-child\n    :focusable=\"!disabled\"\n    :active=\"checked\"\n  >\n    <Radio\n      v-bind=\"{ ...$attrs, ...props }\"\n      :ref=\"forwardRef\"\n      :checked=\"checked\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      @update:checked=\"rootContext.changeModelValue(value)\"\n      @select=\"emits('select', $event)\"\n      @keydown.enter.prevent\n      @focus=\"handleFocus\"\n    >\n      <slot\n        :checked=\"checked\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n      />\n    </Radio>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef } from 'vue'\nimport type { RadioProps } from './Radio.vue'\nimport type { SelectEvent } from './utils'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface RadioGroupItemProps extends Omit<RadioProps, 'checked'> {}\nexport type RadioGroupItemEmits = {\n  select: [event: SelectEvent]\n}\n\ninterface RadioGroupItemContext {\n  disabled: ComputedRef<boolean>\n  checked: ComputedRef<boolean>\n}\n\nexport const [injectRadioGroupItemContext, provideRadiogroupItemContext]\n  = createContext<RadioGroupItemContext>('RadioGroupItem')\n</script>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { isEqual } from 'ohash'\nimport { computed, ref } from 'vue'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport Radio from './Radio.vue'\nimport { injectRadioGroupRootContext } from './RadioGroupRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<RadioGroupItemProps>(), {\n  disabled: false,\n  as: 'button',\n})\n\nconst emits = defineEmits<RadioGroupItemEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current checked state */\n    checked: typeof checked.value\n    /** Required state */\n    required: typeof required.value\n    /** Disabled state */\n    disabled: typeof disabled.value\n  }) => any\n}>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst rootContext = injectRadioGroupRootContext()\n\nconst disabled = computed(() => rootContext.disabled.value || props.disabled)\nconst required = computed(() => rootContext.required.value || props.required)\nconst checked = computed(() => isEqual(rootContext.modelValue?.value, props.value))\n\nprovideRadiogroupItemContext({ disabled, checked })\n\nconst isArrowKeyPressed = ref(false)\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']\n\nuseEventListener('keydown', (event) => {\n  if (ARROW_KEYS.includes(event.key))\n    isArrowKeyPressed.value = true\n})\nuseEventListener('keyup', () => {\n  isArrowKeyPressed.value = false\n})\n\nfunction handleFocus() {\n  setTimeout(() => {\n    /**\n     * Our `RovingFocusGroup` will focus the radio when navigating with arrow keys\n     * and we need to 'check' it in that case. We click it to 'check' it (instead\n     * of updating `context.value`) so that the radio change event fires.\n     */\n    if (isArrowKeyPressed.value)\n      currentElement.value?.click()\n  }, 0)\n}\n</script>\n\n<template>\n  <RovingFocusItem\n    :checked=\"checked\"\n    :disabled=\"disabled\"\n    as-child\n    :focusable=\"!disabled\"\n    :active=\"checked\"\n  >\n    <Radio\n      v-bind=\"{ ...$attrs, ...props }\"\n      :ref=\"forwardRef\"\n      :checked=\"checked\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      @update:checked=\"rootContext.changeModelValue(value)\"\n      @select=\"emits('select', $event)\"\n      @keydown.enter.prevent\n      @focus=\"handleFocus\"\n    >\n      <slot\n        :checked=\"checked\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n      />\n    </Radio>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface RadioGroupIndicatorProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { injectRadioGroupItemContext } from './RadioGroupItem.vue'\n\nwithDefaults(defineProps<RadioGroupIndicatorProps>(), {\n  as: 'span',\n})\n\nconst { forwardRef } = useForwardExpose()\nconst itemContext = injectRadioGroupItemContext()\n</script>\n\n<template>\n  <Presence\n    :present=\"forceMount || itemContext.checked.value\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :data-state=\"itemContext.checked.value ? 'checked' : 'unchecked'\"\n      :data-disabled=\"itemContext.disabled.value ? '' : undefined\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface RadioGroupIndicatorProps extends PrimitiveProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { injectRadioGroupItemContext } from './RadioGroupItem.vue'\n\nwithDefaults(defineProps<RadioGroupIndicatorProps>(), {\n  as: 'span',\n})\n\nconst { forwardRef } = useForwardExpose()\nconst itemContext = injectRadioGroupItemContext()\n</script>\n\n<template>\n  <Presence\n    :present=\"forceMount || itemContext.checked.value\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :data-state=\"itemContext.checked.value ? 'checked' : 'unchecked'\"\n      :data-disabled=\"itemContext.disabled.value ? '' : undefined\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction, ScrollType } from './types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaRootContext {\n  type: Ref<ScrollType>\n  dir: Ref<Direction>\n  scrollHideDelay: Ref<number>\n  scrollArea: Ref<HTMLElement | undefined>\n  viewport: Ref<HTMLElement | undefined>\n  onViewportChange: (viewport: HTMLElement | null) => void\n  content: Ref<HTMLElement | undefined>\n  onContentChange: (content: HTMLElement) => void\n  scrollbarX: Ref<HTMLElement | undefined>\n  onScrollbarXChange: (scrollbar: HTMLElement | null) => void\n  scrollbarXEnabled: Ref<boolean>\n  onScrollbarXEnabledChange: (rendered: boolean) => void\n  scrollbarY: Ref<HTMLElement | undefined>\n  onScrollbarYChange: (scrollbar: HTMLElement | null) => void\n  scrollbarYEnabled: Ref<boolean>\n  onScrollbarYEnabledChange: (rendered: boolean) => void\n  onCornerWidthChange: (width: number) => void\n  onCornerHeightChange: (height: number) => void\n}\n\nexport const [injectScrollAreaRootContext, provideScrollAreaRootContext]\n  = createContext<ScrollAreaRootContext>('ScrollAreaRoot')\n\nexport interface ScrollAreaRootProps extends PrimitiveProps {\n  /**\n   * Describes the nature of scrollbar visibility, similar to how the scrollbar preferences in MacOS control visibility of native scrollbars.\n   *\n   * `auto` - means that scrollbars are visible when content is overflowing on the corresponding orientation. <br>\n   * `always` - means that scrollbars are always visible regardless of whether the content is overflowing.<br>\n   * `scroll` - means that scrollbars are visible when the user is scrolling along its corresponding orientation.<br>\n   * `hover` - when the user is scrolling along its corresponding orientation and when the user is hovering over the scroll area.\n   */\n  type?: ScrollType\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** If type is set to either `scroll` or `hover`, this prop determines the length of time, in milliseconds, <br> before the scrollbars are hidden after the user stops interacting with scrollbars. */\n  scrollHideDelay?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<ScrollAreaRootProps>(), {\n  type: 'hover',\n  scrollHideDelay: 600,\n})\n\nconst cornerWidth = ref(0)\nconst cornerHeight = ref(0)\nconst viewport = ref<HTMLElement>()\nconst content = ref<HTMLElement>()\nconst scrollbarX = ref<HTMLElement>()\nconst scrollbarY = ref<HTMLElement>()\nconst scrollbarXEnabled = ref(false)\nconst scrollbarYEnabled = ref(false)\n\nconst { type, dir: propDir, scrollHideDelay } = toRefs(props)\nconst dir = useDirection(propDir)\n\nfunction scrollTop() {\n  viewport.value?.scrollTo({\n    top: 0,\n  })\n}\nfunction scrollTopLeft() {\n  viewport.value?.scrollTo({\n    top: 0,\n    left: 0,\n  })\n}\n\ndefineExpose({\n  /** Viewport element within ScrollArea */\n  viewport,\n  /** Scroll viewport to top */\n  scrollTop,\n  /** Scroll viewport to top-left */\n  scrollTopLeft,\n})\n\nconst { forwardRef, currentElement: scrollArea } = useForwardExpose()\n\nprovideScrollAreaRootContext({\n  type,\n  dir,\n  scrollHideDelay,\n  scrollArea,\n  viewport,\n  onViewportChange: (el) => {\n    viewport.value = el || undefined\n  },\n  content,\n  onContentChange: (el) => {\n    content.value = el\n  },\n  scrollbarX,\n  scrollbarXEnabled,\n  scrollbarY,\n  scrollbarYEnabled,\n  onScrollbarXChange: (scrollbar) => {\n    scrollbarX.value = scrollbar || undefined\n  },\n  onScrollbarYChange: (scrollbar) => {\n    scrollbarY.value = scrollbar || undefined\n  },\n  onScrollbarXEnabledChange: (rendered) => {\n    scrollbarXEnabled.value = rendered\n  },\n  onScrollbarYEnabledChange: (rendered) => {\n    scrollbarYEnabled.value = rendered\n  },\n  onCornerWidthChange: (width) => {\n    cornerWidth.value = width\n  },\n  onCornerHeightChange: (height) => {\n    cornerHeight.value = height\n  },\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n    :dir=\"dir\"\n    :style=\"{\n      position: 'relative',\n      // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n      ['--reka-scroll-area-corner-width' as any]: `${cornerWidth}px`,\n      ['--reka-scroll-area-corner-height' as any]: `${cornerHeight}px`,\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction, ScrollType } from './types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaRootContext {\n  type: Ref<ScrollType>\n  dir: Ref<Direction>\n  scrollHideDelay: Ref<number>\n  scrollArea: Ref<HTMLElement | undefined>\n  viewport: Ref<HTMLElement | undefined>\n  onViewportChange: (viewport: HTMLElement | null) => void\n  content: Ref<HTMLElement | undefined>\n  onContentChange: (content: HTMLElement) => void\n  scrollbarX: Ref<HTMLElement | undefined>\n  onScrollbarXChange: (scrollbar: HTMLElement | null) => void\n  scrollbarXEnabled: Ref<boolean>\n  onScrollbarXEnabledChange: (rendered: boolean) => void\n  scrollbarY: Ref<HTMLElement | undefined>\n  onScrollbarYChange: (scrollbar: HTMLElement | null) => void\n  scrollbarYEnabled: Ref<boolean>\n  onScrollbarYEnabledChange: (rendered: boolean) => void\n  onCornerWidthChange: (width: number) => void\n  onCornerHeightChange: (height: number) => void\n}\n\nexport const [injectScrollAreaRootContext, provideScrollAreaRootContext]\n  = createContext<ScrollAreaRootContext>('ScrollAreaRoot')\n\nexport interface ScrollAreaRootProps extends PrimitiveProps {\n  /**\n   * Describes the nature of scrollbar visibility, similar to how the scrollbar preferences in MacOS control visibility of native scrollbars.\n   *\n   * `auto` - means that scrollbars are visible when content is overflowing on the corresponding orientation. <br>\n   * `always` - means that scrollbars are always visible regardless of whether the content is overflowing.<br>\n   * `scroll` - means that scrollbars are visible when the user is scrolling along its corresponding orientation.<br>\n   * `hover` - when the user is scrolling along its corresponding orientation and when the user is hovering over the scroll area.\n   */\n  type?: ScrollType\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** If type is set to either `scroll` or `hover`, this prop determines the length of time, in milliseconds, <br> before the scrollbars are hidden after the user stops interacting with scrollbars. */\n  scrollHideDelay?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<ScrollAreaRootProps>(), {\n  type: 'hover',\n  scrollHideDelay: 600,\n})\n\nconst cornerWidth = ref(0)\nconst cornerHeight = ref(0)\nconst viewport = ref<HTMLElement>()\nconst content = ref<HTMLElement>()\nconst scrollbarX = ref<HTMLElement>()\nconst scrollbarY = ref<HTMLElement>()\nconst scrollbarXEnabled = ref(false)\nconst scrollbarYEnabled = ref(false)\n\nconst { type, dir: propDir, scrollHideDelay } = toRefs(props)\nconst dir = useDirection(propDir)\n\nfunction scrollTop() {\n  viewport.value?.scrollTo({\n    top: 0,\n  })\n}\nfunction scrollTopLeft() {\n  viewport.value?.scrollTo({\n    top: 0,\n    left: 0,\n  })\n}\n\ndefineExpose({\n  /** Viewport element within ScrollArea */\n  viewport,\n  /** Scroll viewport to top */\n  scrollTop,\n  /** Scroll viewport to top-left */\n  scrollTopLeft,\n})\n\nconst { forwardRef, currentElement: scrollArea } = useForwardExpose()\n\nprovideScrollAreaRootContext({\n  type,\n  dir,\n  scrollHideDelay,\n  scrollArea,\n  viewport,\n  onViewportChange: (el) => {\n    viewport.value = el || undefined\n  },\n  content,\n  onContentChange: (el) => {\n    content.value = el\n  },\n  scrollbarX,\n  scrollbarXEnabled,\n  scrollbarY,\n  scrollbarYEnabled,\n  onScrollbarXChange: (scrollbar) => {\n    scrollbarX.value = scrollbar || undefined\n  },\n  onScrollbarYChange: (scrollbar) => {\n    scrollbarY.value = scrollbar || undefined\n  },\n  onScrollbarXEnabledChange: (rendered) => {\n    scrollbarXEnabled.value = rendered\n  },\n  onScrollbarYEnabledChange: (rendered) => {\n    scrollbarYEnabled.value = rendered\n  },\n  onCornerWidthChange: (width) => {\n    cornerWidth.value = width\n  },\n  onCornerHeightChange: (height) => {\n    cornerHeight.value = height\n  },\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n    :dir=\"dir\"\n    :style=\"{\n      position: 'relative',\n      // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n      ['--reka-scroll-area-corner-width' as any]: `${cornerWidth}px`,\n      ['--reka-scroll-area-corner-height' as any]: `${cornerHeight}px`,\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { computed, ref, watch } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\n\nconst rootContext = injectScrollAreaRootContext()\n\nconst width = ref(0)\nconst height = ref(0)\n\nconst hasSize = computed(() => !!width.value && !!height.value)\n\nfunction setCornerHeight() {\n  const offsetHeight = rootContext.scrollbarX.value?.offsetHeight || 0\n  rootContext.onCornerHeightChange(offsetHeight)\n  height.value = offsetHeight\n}\nfunction setCornerWidth() {\n  const offsetWidth = rootContext.scrollbarY.value?.offsetWidth || 0\n  rootContext.onCornerWidthChange(offsetWidth)\n  width.value = offsetWidth\n}\n\nuseResizeObserver(rootContext.scrollbarX.value, setCornerHeight)\nuseResizeObserver(rootContext.scrollbarY.value, setCornerWidth)\n\n// because we are not remounting the component, useResizeObserver doesn't trigger, thus using watcher here\nwatch(() => rootContext.scrollbarX.value, setCornerHeight)\nwatch(() => rootContext.scrollbarY.value, setCornerWidth)\n</script>\n\n<template>\n  <Primitive\n    v-if=\"hasSize\"\n    :style=\"{\n      width: `${width}px`,\n      height: `${height}px`,\n      position: 'absolute',\n      right: rootContext.dir.value === 'ltr' ? 0 : undefined,\n      left: rootContext.dir.value === 'rtl' ? 0 : undefined,\n      bottom: 0,\n    }\"\n    v-bind=\"$parent?.$props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { computed, ref, watch } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\n\nconst rootContext = injectScrollAreaRootContext()\n\nconst width = ref(0)\nconst height = ref(0)\n\nconst hasSize = computed(() => !!width.value && !!height.value)\n\nfunction setCornerHeight() {\n  const offsetHeight = rootContext.scrollbarX.value?.offsetHeight || 0\n  rootContext.onCornerHeightChange(offsetHeight)\n  height.value = offsetHeight\n}\nfunction setCornerWidth() {\n  const offsetWidth = rootContext.scrollbarY.value?.offsetWidth || 0\n  rootContext.onCornerWidthChange(offsetWidth)\n  width.value = offsetWidth\n}\n\nuseResizeObserver(rootContext.scrollbarX.value, setCornerHeight)\nuseResizeObserver(rootContext.scrollbarY.value, setCornerWidth)\n\n// because we are not remounting the component, useResizeObserver doesn't trigger, thus using watcher here\nwatch(() => rootContext.scrollbarX.value, setCornerHeight)\nwatch(() => rootContext.scrollbarY.value, setCornerWidth)\n</script>\n\n<template>\n  <Primitive\n    v-if=\"hasSize\"\n    :style=\"{\n      width: `${width}px`,\n      height: `${height}px`,\n      position: 'absolute',\n      right: rootContext.dir.value === 'ltr' ? 0 : undefined,\n      left: rootContext.dir.value === 'rtl' ? 0 : undefined,\n      bottom: 0,\n    }\"\n    v-bind=\"$parent?.$props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaCornerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport ScrollAreaCornerImpl from './ScrollAreaCornerImpl.vue'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\n\nconst props = defineProps<ScrollAreaCornerProps>()\n\nconst { forwardRef } = useForwardExpose()\nconst rootContext = injectScrollAreaRootContext()\n\nconst hasBothScrollbarsVisible = computed(\n  () => !!rootContext.scrollbarX.value && !!rootContext.scrollbarY.value,\n)\nconst hasCorner = computed(\n  () => rootContext.type.value !== 'scroll' && hasBothScrollbarsVisible.value,\n)\n</script>\n\n<template>\n  <ScrollAreaCornerImpl\n    v-if=\"hasCorner\"\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n  >\n    <slot />\n  </ScrollAreaCornerImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaCornerProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport ScrollAreaCornerImpl from './ScrollAreaCornerImpl.vue'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\n\nconst props = defineProps<ScrollAreaCornerProps>()\n\nconst { forwardRef } = useForwardExpose()\nconst rootContext = injectScrollAreaRootContext()\n\nconst hasBothScrollbarsVisible = computed(\n  () => !!rootContext.scrollbarX.value && !!rootContext.scrollbarY.value,\n)\nconst hasCorner = computed(\n  () => rootContext.type.value !== 'scroll' && hasBothScrollbarsVisible.value,\n)\n</script>\n\n<template>\n  <ScrollAreaCornerImpl\n    v-if=\"hasCorner\"\n    v-bind=\"props\"\n    :ref=\"forwardRef\"\n  >\n    <slot />\n  </ScrollAreaCornerImpl>\n</template>\n", "import type { Direction, Sizes } from './types'\nimport { clamp } from '@/shared'\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(\n  input: readonly [number, number],\n  output: readonly [number, number],\n) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1])\n      return output[0]\n    const ratio = (output[1] - output[0]) / (input[1] - input[0])\n    return output[0] + ratio * (value - input[0])\n  }\n}\n\nexport function getThumbSize(sizes: Sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content)\n  const scrollbarPadding\n    = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio\n  // minimum of 18 matches macOS minimum\n  return Math.max(thumbSize, 18)\n}\n\nexport function getThumbRatio(viewportSize: number, contentSize: number) {\n  const ratio = viewportSize / contentSize\n  return Number.isNaN(ratio) ? 0 : ratio\n}\n\n// Custom scroll handler to avoid scroll-linked effects\n// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\nexport function addUnlinkedScrollListener(\n  node: HTMLElement,\n  handler = () => {},\n) {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop }\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop }\n    const isHorizontalScroll = prevPosition.left !== position.left\n    const isVerticalScroll = prevPosition.top !== position.top\n    if (isHorizontalScroll || isVerticalScroll)\n      handler()\n    prevPosition = position\n    rAF = window.requestAnimationFrame(loop)\n  })()\n  return () => window.cancelAnimationFrame(rAF)\n}\n\nexport function getThumbOffsetFromScroll(\n  scrollPos: number,\n  sizes: Sizes,\n  dir: Direction = 'ltr',\n) {\n  const thumbSizePx = getThumbSize(sizes)\n  const scrollbarPadding\n    = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding\n  const maxScrollPos = sizes.content - sizes.viewport\n  const maxThumbPos = scrollbar - thumbSizePx\n  const scrollClampRange\n    = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0]\n  const scrollWithoutMomentum = clamp(\n    scrollPos,\n    scrollClampRange[0],\n    scrollClampRange[1],\n  )\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos])\n  return interpolate(scrollWithoutMomentum)\n}\n\nexport function toInt(value?: string) {\n  return value ? Number.parseInt(value, 10) : 0\n}\n\nexport function getScrollPositionFromPointer(\n  pointerPos: number,\n  pointerOffset: number,\n  sizes: Sizes,\n  dir: Direction = 'ltr',\n) {\n  const thumbSizePx = getThumbSize(sizes)\n  const thumbCenter = thumbSizePx / 2\n  const offset = pointerOffset || thumbCenter\n  const thumbOffsetFromEnd = thumbSizePx - offset\n  const minPointerPos = sizes.scrollbar.paddingStart + offset\n  const maxPointerPos\n    = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd\n  const maxScrollPos = sizes.content - sizes.viewport\n  const scrollRange\n    = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0]\n  const interpolate = linearScale(\n    [minPointerPos, maxPointerPos],\n    scrollRange as [number, number],\n  )\n  return interpolate(pointerPos)\n}\n\nexport function isScrollingWithinScrollbarBounds(\n  scrollPos: number,\n  maxScrollPos: number,\n) {\n  return scrollPos > 0 && scrollPos < maxScrollPos\n}\n", "<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport ScrollAreaScrollbarImpl from './ScrollAreaScrollbarImpl.vue'\nimport { injectScrollAreaScrollbarVisibleContext } from './ScrollAreaScrollbarVisible.vue'\nimport { getThumbSize } from './utils'\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarVisibleContext = injectScrollAreaScrollbarVisibleContext()\n\nconst { forwardRef, currentElement: scrollbarElement } = useForwardExpose()\n\nonMounted(() => {\n  if (scrollbarElement.value)\n    rootContext.onScrollbarXChange(scrollbarElement.value)\n})\nconst sizes = computed(() => scrollbarVisibleContext.sizes.value)\n</script>\n\n<template>\n  <ScrollAreaScrollbarImpl\n    :ref=\"forwardRef\"\n    :is-horizontal=\"true\"\n    data-orientation=\"horizontal\"\n    :style=\"{\n      bottom: 0,\n      left: rootContext.dir.value === 'rtl' ? 'var(--reka-scroll-area-corner-width)' : 0,\n      right: rootContext.dir.value === 'ltr' ? 'var(--reka-scroll-area-corner-width)' : 0,\n      ['--reka-scroll-area-thumb-width' as any]: sizes ? `${getThumbSize(sizes)}px` : undefined,\n    }\"\n    @on-drag-scroll=\"scrollbarVisibleContext.onDragScroll($event.x)\"\n  >\n    <slot />\n  </ScrollAreaScrollbarImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport ScrollAreaScrollbarImpl from './ScrollAreaScrollbarImpl.vue'\nimport { injectScrollAreaScrollbarVisibleContext } from './ScrollAreaScrollbarVisible.vue'\nimport { getThumbSize } from './utils'\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarVisibleContext = injectScrollAreaScrollbarVisibleContext()\n\nconst { forwardRef, currentElement: scrollbarElement } = useForwardExpose()\n\nonMounted(() => {\n  if (scrollbarElement.value)\n    rootContext.onScrollbarXChange(scrollbarElement.value)\n})\nconst sizes = computed(() => scrollbarVisibleContext.sizes.value)\n</script>\n\n<template>\n  <ScrollAreaScrollbarImpl\n    :ref=\"forwardRef\"\n    :is-horizontal=\"true\"\n    data-orientation=\"horizontal\"\n    :style=\"{\n      bottom: 0,\n      left: rootContext.dir.value === 'rtl' ? 'var(--reka-scroll-area-corner-width)' : 0,\n      right: rootContext.dir.value === 'ltr' ? 'var(--reka-scroll-area-corner-width)' : 0,\n      ['--reka-scroll-area-thumb-width' as any]: sizes ? `${getThumbSize(sizes)}px` : undefined,\n    }\"\n    @on-drag-scroll=\"scrollbarVisibleContext.onDragScroll($event.x)\"\n  >\n    <slot />\n  </ScrollAreaScrollbarImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport ScrollAreaScrollbarImpl from './ScrollAreaScrollbarImpl.vue'\nimport { injectScrollAreaScrollbarVisibleContext } from './ScrollAreaScrollbarVisible.vue'\nimport { getThumbSize } from './utils'\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarVisibleContext = injectScrollAreaScrollbarVisibleContext()\n\nconst { forwardRef, currentElement: scrollbarElement } = useForwardExpose()\n\nonMounted(() => {\n  if (scrollbarElement.value)\n    rootContext.onScrollbarYChange(scrollbarElement.value)\n})\n\nconst sizes = computed(() => scrollbarVisibleContext.sizes.value)\n</script>\n\n<template>\n  <ScrollAreaScrollbarImpl\n    :ref=\"forwardRef\"\n    :is-horizontal=\"false\"\n    data-orientation=\"vertical\"\n    :style=\"{\n      top: 0,\n      right: rootContext.dir.value === 'ltr' ? 0 : undefined,\n      left: rootContext.dir.value === 'rtl' ? 0 : undefined,\n      bottom: 'var(--reka-scroll-area-corner-height)',\n      ['--reka-scroll-area-thumb-height' as any]: sizes ? `${getThumbSize(sizes)}px` : undefined,\n    }\"\n    @on-drag-scroll=\"scrollbarVisibleContext.onDragScroll($event.y)\"\n  >\n    <slot />\n  </ScrollAreaScrollbarImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport ScrollAreaScrollbarImpl from './ScrollAreaScrollbarImpl.vue'\nimport { injectScrollAreaScrollbarVisibleContext } from './ScrollAreaScrollbarVisible.vue'\nimport { getThumbSize } from './utils'\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarVisibleContext = injectScrollAreaScrollbarVisibleContext()\n\nconst { forwardRef, currentElement: scrollbarElement } = useForwardExpose()\n\nonMounted(() => {\n  if (scrollbarElement.value)\n    rootContext.onScrollbarYChange(scrollbarElement.value)\n})\n\nconst sizes = computed(() => scrollbarVisibleContext.sizes.value)\n</script>\n\n<template>\n  <ScrollAreaScrollbarImpl\n    :ref=\"forwardRef\"\n    :is-horizontal=\"false\"\n    data-orientation=\"vertical\"\n    :style=\"{\n      top: 0,\n      right: rootContext.dir.value === 'ltr' ? 0 : undefined,\n      left: rootContext.dir.value === 'rtl' ? 0 : undefined,\n      bottom: 'var(--reka-scroll-area-corner-height)',\n      ['--reka-scroll-area-thumb-height' as any]: sizes ? `${getThumbSize(sizes)}px` : undefined,\n    }\"\n    @on-drag-scroll=\"scrollbarVisibleContext.onDragScroll($event.y)\"\n  >\n    <slot />\n  </ScrollAreaScrollbarImpl>\n</template>\n", "<script lang=\"ts\">\nexport interface ScrollAreaScrollbarAutoProps {\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useDebounceFn, useResizeObserver } from '@vueuse/core'\nimport { onMounted, ref } from 'vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarContext } from './ScrollAreaScrollbar.vue'\nimport ScrollAreaScrollbarVisible from './ScrollAreaScrollbarVisible.vue'\n\ndefineProps<ScrollAreaScrollbarAutoProps>()\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarContext = injectScrollAreaScrollbarContext()\n\nconst { forwardRef } = useForwardExpose()\n\nconst visible = ref(false)\n\nconst handleResize = useDebounceFn(() => {\n  if (rootContext.viewport.value) {\n    const isOverflowX\n      = rootContext.viewport.value.offsetWidth\n        < rootContext.viewport.value.scrollWidth\n    const isOverflowY\n      = rootContext.viewport.value.offsetHeight\n        < rootContext.viewport.value.scrollHeight\n\n    visible.value = scrollbarContext.isHorizontal.value\n      ? isOverflowX\n      : isOverflowY\n  }\n}, 10)\n\nonMounted(() => handleResize())\n\nuseResizeObserver(rootContext.viewport, handleResize)\nuseResizeObserver(rootContext.content, handleResize)\n</script>\n\n<template>\n  <Presence :present=\"forceMount || visible\">\n    <ScrollAreaScrollbarVisible\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :data-state=\"visible ? 'visible' : 'hidden'\"\n    >\n      <slot />\n    </ScrollAreaScrollbarVisible>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nexport interface ScrollAreaScrollbarAutoProps {\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useDebounceFn, useResizeObserver } from '@vueuse/core'\nimport { onMounted, ref } from 'vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarContext } from './ScrollAreaScrollbar.vue'\nimport ScrollAreaScrollbarVisible from './ScrollAreaScrollbarVisible.vue'\n\ndefineProps<ScrollAreaScrollbarAutoProps>()\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarContext = injectScrollAreaScrollbarContext()\n\nconst { forwardRef } = useForwardExpose()\n\nconst visible = ref(false)\n\nconst handleResize = useDebounceFn(() => {\n  if (rootContext.viewport.value) {\n    const isOverflowX\n      = rootContext.viewport.value.offsetWidth\n        < rootContext.viewport.value.scrollWidth\n    const isOverflowY\n      = rootContext.viewport.value.offsetHeight\n        < rootContext.viewport.value.scrollHeight\n\n    visible.value = scrollbarContext.isHorizontal.value\n      ? isOverflowX\n      : isOverflowY\n  }\n}, 10)\n\nonMounted(() => handleResize())\n\nuseResizeObserver(rootContext.viewport, handleResize)\nuseResizeObserver(rootContext.content, handleResize)\n</script>\n\n<template>\n  <Presence :present=\"forceMount || visible\">\n    <ScrollAreaScrollbarVisible\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :data-state=\"visible ? 'visible' : 'hidden'\"\n    >\n      <slot />\n    </ScrollAreaScrollbarVisible>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { ScrollAreaScrollbarAutoProps } from './ScrollAreaScrollbarAuto.vue'\n\nexport interface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted, onUnmounted, ref } from 'vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport ScrollAreaScrollbarAuto from './ScrollAreaScrollbarAuto.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\ndefineProps<ScrollAreaScrollbarHoverProps>()\n\nconst rootContext = injectScrollAreaRootContext()\n\nconst { forwardRef } = useForwardExpose()\n\nlet timeout: ReturnType<typeof setTimeout> | undefined | number\nconst visible = ref(false)\n\nfunction handlePointerEnter() {\n  window.clearTimeout(timeout)\n  visible.value = true\n}\nfunction handlePointerLeave() {\n  timeout = window.setTimeout(() => {\n    visible.value = false\n  }, rootContext.scrollHideDelay.value)\n}\n\nonMounted(() => {\n  const scrollArea = rootContext.scrollArea.value\n\n  if (scrollArea) {\n    scrollArea.addEventListener('pointerenter', handlePointerEnter)\n    scrollArea.addEventListener('pointerleave', handlePointerLeave)\n  }\n})\n\nonUnmounted(() => {\n  const scrollArea = rootContext.scrollArea.value\n  if (scrollArea) {\n    window.clearTimeout(timeout)\n    scrollArea.removeEventListener('pointerenter', handlePointerEnter)\n    scrollArea.removeEventListener('pointerleave', handlePointerLeave)\n  }\n})\n</script>\n\n<template>\n  <Presence :present=\"forceMount || visible\">\n    <ScrollAreaScrollbarAuto\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :data-state=\"visible ? 'visible' : 'hidden'\"\n    >\n      <slot />\n    </ScrollAreaScrollbarAuto>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { ScrollAreaScrollbarAutoProps } from './ScrollAreaScrollbarAuto.vue'\n\nexport interface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted, onUnmounted, ref } from 'vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport ScrollAreaScrollbarAuto from './ScrollAreaScrollbarAuto.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\ndefineProps<ScrollAreaScrollbarHoverProps>()\n\nconst rootContext = injectScrollAreaRootContext()\n\nconst { forwardRef } = useForwardExpose()\n\nlet timeout: ReturnType<typeof setTimeout> | undefined | number\nconst visible = ref(false)\n\nfunction handlePointerEnter() {\n  window.clearTimeout(timeout)\n  visible.value = true\n}\nfunction handlePointerLeave() {\n  timeout = window.setTimeout(() => {\n    visible.value = false\n  }, rootContext.scrollHideDelay.value)\n}\n\nonMounted(() => {\n  const scrollArea = rootContext.scrollArea.value\n\n  if (scrollArea) {\n    scrollArea.addEventListener('pointerenter', handlePointerEnter)\n    scrollArea.addEventListener('pointerleave', handlePointerLeave)\n  }\n})\n\nonUnmounted(() => {\n  const scrollArea = rootContext.scrollArea.value\n  if (scrollArea) {\n    window.clearTimeout(timeout)\n    scrollArea.removeEventListener('pointerenter', handlePointerEnter)\n    scrollArea.removeEventListener('pointerleave', handlePointerLeave)\n  }\n})\n</script>\n\n<template>\n  <Presence :present=\"forceMount || visible\">\n    <ScrollAreaScrollbarAuto\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :data-state=\"visible ? 'visible' : 'hidden'\"\n    >\n      <slot />\n    </ScrollAreaScrollbarAuto>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nexport interface ScrollAreaScrollbarScrollProps {\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useDebounceFn } from '@vueuse/core'\nimport { computed, watchEffect } from 'vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose } from '@/shared'\nimport { useStateMachine } from '../shared/useStateMachine'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarContext } from './ScrollAreaScrollbar.vue'\nimport ScrollAreaScrollbarVisible from './ScrollAreaScrollbarVisible.vue'\n\ndefineProps<ScrollAreaScrollbarScrollProps>()\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarContext = injectScrollAreaScrollbarContext()\n\nconst { forwardRef } = useForwardExpose()\n\nconst { state, dispatch } = useStateMachine('hidden', {\n  hidden: {\n    SCROLL: 'scrolling',\n  },\n  scrolling: {\n    SCROLL_END: 'idle',\n    POINTER_ENTER: 'interacting',\n  },\n  interacting: {\n    SCROLL: 'interacting',\n    POINTER_LEAVE: 'idle',\n  },\n  idle: {\n    HIDE: 'hidden',\n    SCROLL: 'scrolling',\n    POINTER_ENTER: 'interacting',\n  },\n})\n\nconst visible = computed(() => state.value !== 'hidden')\n\nwatchEffect((onCleanup) => {\n  if (state.value === 'idle') {\n    const timeId = window.setTimeout(\n      () => dispatch('HIDE'),\n      rootContext.scrollHideDelay.value,\n    )\n\n    onCleanup(() => {\n      window.clearTimeout(timeId)\n    })\n  }\n})\n\nconst debounceScrollEnd = useDebounceFn(() => dispatch('SCROLL_END'), 100)\n\nwatchEffect((onCleanup) => {\n  const viewport = rootContext.viewport.value\n  const scrollDirection = scrollbarContext.isHorizontal.value\n    ? 'scrollLeft'\n    : 'scrollTop'\n\n  if (viewport) {\n    let prevScrollPos = viewport[scrollDirection]\n    const handleScroll = () => {\n      const scrollPos = viewport[scrollDirection]\n      const hasScrollInDirectionChanged = prevScrollPos !== scrollPos\n      if (hasScrollInDirectionChanged) {\n        dispatch('SCROLL')\n        debounceScrollEnd()\n      }\n      prevScrollPos = scrollPos\n    }\n    viewport.addEventListener('scroll', handleScroll)\n\n    onCleanup(() => {\n      viewport.removeEventListener('scroll', handleScroll)\n    })\n  }\n})\n</script>\n\n<template>\n  <Presence :present=\"forceMount || visible\">\n    <ScrollAreaScrollbarVisible\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :data-state=\"visible ? 'visible' : 'hidden'\"\n    >\n      <slot />\n    </ScrollAreaScrollbarVisible>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nexport interface ScrollAreaScrollbarScrollProps {\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useDebounceFn } from '@vueuse/core'\nimport { computed, watchEffect } from 'vue'\nimport { Presence } from '@/Presence'\nimport { useForwardExpose } from '@/shared'\nimport { useStateMachine } from '../shared/useStateMachine'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarContext } from './ScrollAreaScrollbar.vue'\nimport ScrollAreaScrollbarVisible from './ScrollAreaScrollbarVisible.vue'\n\ndefineProps<ScrollAreaScrollbarScrollProps>()\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarContext = injectScrollAreaScrollbarContext()\n\nconst { forwardRef } = useForwardExpose()\n\nconst { state, dispatch } = useStateMachine('hidden', {\n  hidden: {\n    SCROLL: 'scrolling',\n  },\n  scrolling: {\n    SCROLL_END: 'idle',\n    POINTER_ENTER: 'interacting',\n  },\n  interacting: {\n    SCROLL: 'interacting',\n    POINTER_LEAVE: 'idle',\n  },\n  idle: {\n    HIDE: 'hidden',\n    SCROLL: 'scrolling',\n    POINTER_ENTER: 'interacting',\n  },\n})\n\nconst visible = computed(() => state.value !== 'hidden')\n\nwatchEffect((onCleanup) => {\n  if (state.value === 'idle') {\n    const timeId = window.setTimeout(\n      () => dispatch('HIDE'),\n      rootContext.scrollHideDelay.value,\n    )\n\n    onCleanup(() => {\n      window.clearTimeout(timeId)\n    })\n  }\n})\n\nconst debounceScrollEnd = useDebounceFn(() => dispatch('SCROLL_END'), 100)\n\nwatchEffect((onCleanup) => {\n  const viewport = rootContext.viewport.value\n  const scrollDirection = scrollbarContext.isHorizontal.value\n    ? 'scrollLeft'\n    : 'scrollTop'\n\n  if (viewport) {\n    let prevScrollPos = viewport[scrollDirection]\n    const handleScroll = () => {\n      const scrollPos = viewport[scrollDirection]\n      const hasScrollInDirectionChanged = prevScrollPos !== scrollPos\n      if (hasScrollInDirectionChanged) {\n        dispatch('SCROLL')\n        debounceScrollEnd()\n      }\n      prevScrollPos = scrollPos\n    }\n    viewport.addEventListener('scroll', handleScroll)\n\n    onCleanup(() => {\n      viewport.removeEventListener('scroll', handleScroll)\n    })\n  }\n})\n</script>\n\n<template>\n  <Presence :present=\"forceMount || visible\">\n    <ScrollAreaScrollbarVisible\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :data-state=\"visible ? 'visible' : 'hidden'\"\n    >\n      <slot />\n    </ScrollAreaScrollbarVisible>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaScrollbarProps extends PrimitiveProps {\n  /** The orientation of the scrollbar */\n  orientation?: 'vertical' | 'horizontal'\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n\nexport interface ScrollAreaScollbarContext {\n  as: Ref<PrimitiveProps['as']>\n  orientation: Ref<'vertical' | 'horizontal'>\n  forceMount?: Ref<boolean>\n  isHorizontal: Ref<boolean>\n  asChild: Ref<boolean>\n}\n\nexport const [injectScrollAreaScrollbarContext, provideScrollAreaScrollbarContext]\n  = createContext<ScrollAreaScollbarContext>('ScrollAreaScrollbar')\n</script>\n\n<script setup lang=\"ts\">\nimport {\n  computed,\n  onUnmounted,\n  toRefs,\n  watch,\n} from 'vue'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport ScrollAreaScrollbarAuto from './ScrollAreaScrollbarAuto.vue'\nimport ScrollAreaScrollbarHover from './ScrollAreaScrollbarHover.vue'\nimport ScrollAreaScrollbarScroll from './ScrollAreaScrollbarScroll.vue'\nimport ScrollAreaScrollbarVisible from './ScrollAreaScrollbarVisible.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ScrollAreaScrollbarProps>(), {\n  orientation: 'vertical',\n  as: 'div',\n})\n\nconst { forwardRef } = useForwardExpose()\nconst rootContext = injectScrollAreaRootContext()\n\nconst isHorizontal = computed(() => props.orientation === 'horizontal')\n\nwatch(\n  isHorizontal,\n  () => {\n    if (isHorizontal.value)\n      rootContext.onScrollbarXEnabledChange(true)\n    else rootContext.onScrollbarYEnabledChange(true)\n  },\n  { immediate: true },\n)\n\nonUnmounted(() => {\n  rootContext.onScrollbarXEnabledChange(false)\n  rootContext.onScrollbarYEnabledChange(false)\n})\n\nconst { orientation, forceMount, asChild, as } = toRefs(props)\nprovideScrollAreaScrollbarContext({\n  orientation,\n  forceMount,\n  isHorizontal,\n  as,\n  asChild,\n})\n</script>\n\n<template>\n  <ScrollAreaScrollbarHover\n    v-if=\"rootContext.type.value === 'hover'\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    :force-mount=\"forceMount\"\n  >\n    <slot />\n  </ScrollAreaScrollbarHover>\n  <ScrollAreaScrollbarScroll\n    v-else-if=\"rootContext.type.value === 'scroll'\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    :force-mount=\"forceMount\"\n  >\n    <slot />\n  </ScrollAreaScrollbarScroll>\n  <ScrollAreaScrollbarAuto\n    v-else-if=\"rootContext.type.value === 'auto'\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    :force-mount=\"forceMount\"\n  >\n    <slot />\n  </ScrollAreaScrollbarAuto>\n  <ScrollAreaScrollbarVisible\n    v-else-if=\"rootContext.type.value === 'always'\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    data-state=\"visible\"\n  >\n    <slot />\n  </ScrollAreaScrollbarVisible>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaScrollbarProps extends PrimitiveProps {\n  /** The orientation of the scrollbar */\n  orientation?: 'vertical' | 'horizontal'\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n\nexport interface ScrollAreaScollbarContext {\n  as: Ref<PrimitiveProps['as']>\n  orientation: Ref<'vertical' | 'horizontal'>\n  forceMount?: Ref<boolean>\n  isHorizontal: Ref<boolean>\n  asChild: Ref<boolean>\n}\n\nexport const [injectScrollAreaScrollbarContext, provideScrollAreaScrollbarContext]\n  = createContext<ScrollAreaScollbarContext>('ScrollAreaScrollbar')\n</script>\n\n<script setup lang=\"ts\">\nimport {\n  computed,\n  onUnmounted,\n  toRefs,\n  watch,\n} from 'vue'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport ScrollAreaScrollbarAuto from './ScrollAreaScrollbarAuto.vue'\nimport ScrollAreaScrollbarHover from './ScrollAreaScrollbarHover.vue'\nimport ScrollAreaScrollbarScroll from './ScrollAreaScrollbarScroll.vue'\nimport ScrollAreaScrollbarVisible from './ScrollAreaScrollbarVisible.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ScrollAreaScrollbarProps>(), {\n  orientation: 'vertical',\n  as: 'div',\n})\n\nconst { forwardRef } = useForwardExpose()\nconst rootContext = injectScrollAreaRootContext()\n\nconst isHorizontal = computed(() => props.orientation === 'horizontal')\n\nwatch(\n  isHorizontal,\n  () => {\n    if (isHorizontal.value)\n      rootContext.onScrollbarXEnabledChange(true)\n    else rootContext.onScrollbarYEnabledChange(true)\n  },\n  { immediate: true },\n)\n\nonUnmounted(() => {\n  rootContext.onScrollbarXEnabledChange(false)\n  rootContext.onScrollbarYEnabledChange(false)\n})\n\nconst { orientation, forceMount, asChild, as } = toRefs(props)\nprovideScrollAreaScrollbarContext({\n  orientation,\n  forceMount,\n  isHorizontal,\n  as,\n  asChild,\n})\n</script>\n\n<template>\n  <ScrollAreaScrollbarHover\n    v-if=\"rootContext.type.value === 'hover'\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    :force-mount=\"forceMount\"\n  >\n    <slot />\n  </ScrollAreaScrollbarHover>\n  <ScrollAreaScrollbarScroll\n    v-else-if=\"rootContext.type.value === 'scroll'\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    :force-mount=\"forceMount\"\n  >\n    <slot />\n  </ScrollAreaScrollbarScroll>\n  <ScrollAreaScrollbarAuto\n    v-else-if=\"rootContext.type.value === 'auto'\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    :force-mount=\"forceMount\"\n  >\n    <slot />\n  </ScrollAreaScrollbarAuto>\n  <ScrollAreaScrollbarVisible\n    v-else-if=\"rootContext.type.value === 'always'\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n    data-state=\"visible\"\n  >\n    <slot />\n  </ScrollAreaScrollbarVisible>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction, Sizes } from './types'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaScrollbarVisibleContext {\n  sizes: Ref<Sizes>\n  hasThumb: Ref<boolean>\n  handleWheelScroll: (event: WheelEvent, payload: number) => void\n  handleThumbDown: (\n    event: MouseEvent,\n    payload: { x: number, y: number }\n  ) => void\n  handleThumbUp: (event: MouseEvent) => void\n  handleSizeChange: (payload: Sizes) => void\n  onThumbPositionChange: () => void\n  onDragScroll: (payload: number) => void\n  onThumbChange: (element: HTMLElement) => void\n}\n\nexport const [injectScrollAreaScrollbarVisibleContext, provideScrollAreaScrollbarVisibleContext]\n  = createContext<ScrollAreaScrollbarVisibleContext>('ScrollAreaScrollbarVisible')\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarContext } from './ScrollAreaScrollbar.vue'\nimport ScrollAreaScrollbarX from './ScrollAreaScrollbarX.vue'\nimport ScrollAreaScrollbarY from './ScrollAreaScrollbarY.vue'\nimport {\n  getScrollPositionFromPointer,\n  getThumbOffsetFromScroll,\n  getThumbRatio,\n  isScrollingWithinScrollbarBounds,\n} from './utils'\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarContext = injectScrollAreaScrollbarContext()\nconst { forwardRef } = useForwardExpose()\n\nconst sizes = ref<Sizes>({\n  content: 0,\n  viewport: 0,\n  scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },\n})\n\nconst hasThumb = computed(() => {\n  const thumbRatio = getThumbRatio(sizes.value.viewport, sizes.value.content)\n  return Boolean(thumbRatio > 0 && thumbRatio < 1)\n})\n\nconst thumbRef = ref<HTMLElement>()\nconst pointerOffset = ref(0)\n\nfunction handleWheelScroll(event: WheelEvent, payload: number) {\n  if (isShowingScrollbarX.value) {\n    const scrollPos = rootContext.viewport.value!.scrollLeft + event.deltaY\n\n    rootContext.viewport.value!.scrollLeft = scrollPos\n    // prevent window scroll when wheeling on scrollbar\n    if (isScrollingWithinScrollbarBounds(scrollPos, payload))\n      event.preventDefault()\n  }\n  else {\n    const scrollPos = rootContext.viewport.value!.scrollTop + event.deltaY\n\n    rootContext.viewport.value!.scrollTop = scrollPos\n    // prevent window scroll when wheeling on scrollbar\n    if (isScrollingWithinScrollbarBounds(scrollPos, payload))\n      event.preventDefault()\n  }\n}\n\nfunction handleThumbDown(event: MouseEvent, payload: { x: number, y: number }) {\n  if (isShowingScrollbarX.value)\n    pointerOffset.value = payload.x\n  else pointerOffset.value = payload.y\n}\nfunction handleThumbUp(event: MouseEvent) {\n  pointerOffset.value = 0\n}\n\nfunction handleSizeChange(payload: Sizes) {\n  sizes.value = payload\n}\n\nfunction getScrollPosition(pointerPos: number, dir?: Direction) {\n  return getScrollPositionFromPointer(\n    pointerPos,\n    pointerOffset.value,\n    sizes.value,\n    dir,\n  )\n}\n\nconst isShowingScrollbarX = computed(\n  () => scrollbarContext.isHorizontal.value,\n)\n\nfunction onDragScroll(payload: number) {\n  if (isShowingScrollbarX.value) {\n    rootContext.viewport.value!.scrollLeft = getScrollPosition(\n      payload,\n      rootContext.dir.value,\n    )\n  }\n  else {\n    rootContext.viewport.value!.scrollTop = getScrollPosition(payload)\n  }\n}\n\nfunction onThumbPositionChange() {\n  if (isShowingScrollbarX.value) {\n    if (rootContext.viewport.value && thumbRef.value) {\n      const scrollPos = rootContext.viewport.value.scrollLeft\n      const offset = getThumbOffsetFromScroll(\n        scrollPos,\n        sizes.value,\n        rootContext.dir.value,\n      )\n      thumbRef.value.style.transform = `translate3d(${offset}px, 0, 0)`\n    }\n  }\n  else {\n    if (rootContext.viewport.value && thumbRef.value) {\n      const scrollPos = rootContext.viewport.value.scrollTop\n      const offset = getThumbOffsetFromScroll(scrollPos, sizes.value)\n      thumbRef.value.style.transform = `translate3d(0, ${offset}px, 0)`\n    }\n  }\n}\nfunction onThumbChange(element: HTMLElement) {\n  thumbRef.value = element\n}\n\nprovideScrollAreaScrollbarVisibleContext({\n  sizes,\n  hasThumb,\n  handleWheelScroll,\n  handleThumbDown,\n  handleThumbUp,\n  handleSizeChange,\n  onThumbPositionChange,\n  onThumbChange,\n  onDragScroll,\n})\n</script>\n\n<template>\n  <ScrollAreaScrollbarX\n    v-if=\"isShowingScrollbarX\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n  >\n    <slot />\n  </ScrollAreaScrollbarX>\n  <ScrollAreaScrollbarY\n    v-else\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n  >\n    <slot />\n  </ScrollAreaScrollbarY>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { Direction, Sizes } from './types'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaScrollbarVisibleContext {\n  sizes: Ref<Sizes>\n  hasThumb: Ref<boolean>\n  handleWheelScroll: (event: WheelEvent, payload: number) => void\n  handleThumbDown: (\n    event: MouseEvent,\n    payload: { x: number, y: number }\n  ) => void\n  handleThumbUp: (event: MouseEvent) => void\n  handleSizeChange: (payload: Sizes) => void\n  onThumbPositionChange: () => void\n  onDragScroll: (payload: number) => void\n  onThumbChange: (element: HTMLElement) => void\n}\n\nexport const [injectScrollAreaScrollbarVisibleContext, provideScrollAreaScrollbarVisibleContext]\n  = createContext<ScrollAreaScrollbarVisibleContext>('ScrollAreaScrollbarVisible')\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarContext } from './ScrollAreaScrollbar.vue'\nimport ScrollAreaScrollbarX from './ScrollAreaScrollbarX.vue'\nimport ScrollAreaScrollbarY from './ScrollAreaScrollbarY.vue'\nimport {\n  getScrollPositionFromPointer,\n  getThumbOffsetFromScroll,\n  getThumbRatio,\n  isScrollingWithinScrollbarBounds,\n} from './utils'\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarContext = injectScrollAreaScrollbarContext()\nconst { forwardRef } = useForwardExpose()\n\nconst sizes = ref<Sizes>({\n  content: 0,\n  viewport: 0,\n  scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },\n})\n\nconst hasThumb = computed(() => {\n  const thumbRatio = getThumbRatio(sizes.value.viewport, sizes.value.content)\n  return Boolean(thumbRatio > 0 && thumbRatio < 1)\n})\n\nconst thumbRef = ref<HTMLElement>()\nconst pointerOffset = ref(0)\n\nfunction handleWheelScroll(event: WheelEvent, payload: number) {\n  if (isShowingScrollbarX.value) {\n    const scrollPos = rootContext.viewport.value!.scrollLeft + event.deltaY\n\n    rootContext.viewport.value!.scrollLeft = scrollPos\n    // prevent window scroll when wheeling on scrollbar\n    if (isScrollingWithinScrollbarBounds(scrollPos, payload))\n      event.preventDefault()\n  }\n  else {\n    const scrollPos = rootContext.viewport.value!.scrollTop + event.deltaY\n\n    rootContext.viewport.value!.scrollTop = scrollPos\n    // prevent window scroll when wheeling on scrollbar\n    if (isScrollingWithinScrollbarBounds(scrollPos, payload))\n      event.preventDefault()\n  }\n}\n\nfunction handleThumbDown(event: MouseEvent, payload: { x: number, y: number }) {\n  if (isShowingScrollbarX.value)\n    pointerOffset.value = payload.x\n  else pointerOffset.value = payload.y\n}\nfunction handleThumbUp(event: MouseEvent) {\n  pointerOffset.value = 0\n}\n\nfunction handleSizeChange(payload: Sizes) {\n  sizes.value = payload\n}\n\nfunction getScrollPosition(pointerPos: number, dir?: Direction) {\n  return getScrollPositionFromPointer(\n    pointerPos,\n    pointerOffset.value,\n    sizes.value,\n    dir,\n  )\n}\n\nconst isShowingScrollbarX = computed(\n  () => scrollbarContext.isHorizontal.value,\n)\n\nfunction onDragScroll(payload: number) {\n  if (isShowingScrollbarX.value) {\n    rootContext.viewport.value!.scrollLeft = getScrollPosition(\n      payload,\n      rootContext.dir.value,\n    )\n  }\n  else {\n    rootContext.viewport.value!.scrollTop = getScrollPosition(payload)\n  }\n}\n\nfunction onThumbPositionChange() {\n  if (isShowingScrollbarX.value) {\n    if (rootContext.viewport.value && thumbRef.value) {\n      const scrollPos = rootContext.viewport.value.scrollLeft\n      const offset = getThumbOffsetFromScroll(\n        scrollPos,\n        sizes.value,\n        rootContext.dir.value,\n      )\n      thumbRef.value.style.transform = `translate3d(${offset}px, 0, 0)`\n    }\n  }\n  else {\n    if (rootContext.viewport.value && thumbRef.value) {\n      const scrollPos = rootContext.viewport.value.scrollTop\n      const offset = getThumbOffsetFromScroll(scrollPos, sizes.value)\n      thumbRef.value.style.transform = `translate3d(0, ${offset}px, 0)`\n    }\n  }\n}\nfunction onThumbChange(element: HTMLElement) {\n  thumbRef.value = element\n}\n\nprovideScrollAreaScrollbarVisibleContext({\n  sizes,\n  hasThumb,\n  handleWheelScroll,\n  handleThumbDown,\n  handleThumbUp,\n  handleSizeChange,\n  onThumbPositionChange,\n  onThumbChange,\n  onDragScroll,\n})\n</script>\n\n<template>\n  <ScrollAreaScrollbarX\n    v-if=\"isShowingScrollbarX\"\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n  >\n    <slot />\n  </ScrollAreaScrollbarX>\n  <ScrollAreaScrollbarY\n    v-else\n    v-bind=\"$attrs\"\n    :ref=\"forwardRef\"\n  >\n    <slot />\n  </ScrollAreaScrollbarY>\n</template>\n", "<script lang=\"ts\">\ntype ScrollbarAreaScrollbarImplEmits = {\n  onDragScroll: [payload: { x: number, y: number }]\n  onWheelScroll: [payload: { x: number, y: number }]\n  onThumbPointerDown: [payload: { x: number, y: number }]\n}\n\nexport interface ScrollAreaScrollbarImplProps {\n  isHorizontal: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { onMounted, onUnmounted, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarContext } from './ScrollAreaScrollbar.vue'\nimport { injectScrollAreaScrollbarVisibleContext } from './ScrollAreaScrollbarVisible.vue'\nimport { toInt } from './utils'\n\nconst props = defineProps<ScrollAreaScrollbarImplProps>()\nconst emit = defineEmits<ScrollbarAreaScrollbarImplEmits>()\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarVisibleContext = injectScrollAreaScrollbarVisibleContext()\nconst scrollbarContext = injectScrollAreaScrollbarContext()\n\nconst { forwardRef, currentElement: scrollbar } = useForwardExpose()\nconst prevWebkitUserSelectRef = ref('')\nconst rectRef = ref<DOMRect>()\n\nfunction handleDragScroll(event: MouseEvent) {\n  if (rectRef.value) {\n    const x = event.clientX - rectRef.value?.left\n    const y = event.clientY - rectRef.value?.top\n    emit('onDragScroll', { x, y })\n  }\n}\n\nfunction handlePointerDown(event: PointerEvent) {\n  const mainPointer = 0\n  if (event.button === mainPointer) {\n    const element = event.target as HTMLElement\n    element.setPointerCapture(event.pointerId)\n    rectRef.value = scrollbar.value!.getBoundingClientRect()\n\n    // pointer capture doesn't prevent text selection in Safari\n    // so we remove text selection manually when scrolling\n    prevWebkitUserSelectRef.value = document.body.style.webkitUserSelect\n    document.body.style.webkitUserSelect = 'none'\n    if (rootContext.viewport)\n      rootContext.viewport.value!.style.scrollBehavior = 'auto'\n\n    handleDragScroll(event)\n  }\n}\n\nfunction handlePointerMove(event: PointerEvent) {\n  handleDragScroll(event)\n}\n\nfunction handlePointerUp(event: PointerEvent) {\n  const element = event.target as HTMLElement\n  if (element.hasPointerCapture(event.pointerId))\n    element.releasePointerCapture(event.pointerId)\n\n  document.body.style.webkitUserSelect = prevWebkitUserSelectRef.value\n  if (rootContext.viewport)\n    rootContext.viewport.value!.style.scrollBehavior = ''\n\n  rectRef.value = undefined\n}\n\nfunction handleWheel(event: WheelEvent) {\n  const element = event.target as HTMLElement\n  const isScrollbarWheel = scrollbar.value?.contains(element)\n  const maxScrollPos\n    = scrollbarVisibleContext.sizes.value.content\n      - scrollbarVisibleContext.sizes.value.viewport\n  if (isScrollbarWheel)\n    scrollbarVisibleContext.handleWheelScroll(event, maxScrollPos)\n}\n\nonMounted(() => {\n  document.addEventListener('wheel', handleWheel, { passive: false })\n})\nonUnmounted(() => {\n  document.removeEventListener('wheel', handleWheel)\n})\n\nfunction handleSizeChange() {\n  if (!scrollbar.value)\n    return\n  if (props.isHorizontal) {\n    scrollbarVisibleContext.handleSizeChange({\n      content: rootContext.viewport.value?.scrollWidth ?? 0,\n      viewport: rootContext.viewport.value?.offsetWidth ?? 0,\n      scrollbar: {\n        size: scrollbar.value.clientWidth ?? 0,\n        paddingStart: toInt(getComputedStyle(scrollbar.value).paddingLeft),\n        paddingEnd: toInt(getComputedStyle(scrollbar.value).paddingRight),\n      },\n    })\n  }\n  else {\n    scrollbarVisibleContext.handleSizeChange({\n      content: rootContext.viewport.value?.scrollHeight ?? 0,\n      viewport: rootContext.viewport.value?.offsetHeight ?? 0,\n      scrollbar: {\n        size: scrollbar.value?.clientHeight ?? 0,\n        paddingStart: toInt(getComputedStyle(scrollbar.value!).paddingLeft),\n        paddingEnd: toInt(getComputedStyle(scrollbar.value!).paddingRight),\n      },\n    })\n  }\n}\n\nuseResizeObserver(scrollbar, handleSizeChange)\nuseResizeObserver(rootContext.content, handleSizeChange)\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    style=\"position: absolute\"\n    data-scrollbarimpl\n    :as=\"scrollbarContext.as.value\"\n    :as-child=\"scrollbarContext.asChild.value\"\n    @pointerdown=\"handlePointerDown\"\n    @pointermove=\"handlePointerMove\"\n    @pointerup=\"handlePointerUp\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\ntype ScrollbarAreaScrollbarImplEmits = {\n  onDragScroll: [payload: { x: number, y: number }]\n  onWheelScroll: [payload: { x: number, y: number }]\n  onThumbPointerDown: [payload: { x: number, y: number }]\n}\n\nexport interface ScrollAreaScrollbarImplProps {\n  isHorizontal: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { onMounted, onUnmounted, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarContext } from './ScrollAreaScrollbar.vue'\nimport { injectScrollAreaScrollbarVisibleContext } from './ScrollAreaScrollbarVisible.vue'\nimport { toInt } from './utils'\n\nconst props = defineProps<ScrollAreaScrollbarImplProps>()\nconst emit = defineEmits<ScrollbarAreaScrollbarImplEmits>()\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarVisibleContext = injectScrollAreaScrollbarVisibleContext()\nconst scrollbarContext = injectScrollAreaScrollbarContext()\n\nconst { forwardRef, currentElement: scrollbar } = useForwardExpose()\nconst prevWebkitUserSelectRef = ref('')\nconst rectRef = ref<DOMRect>()\n\nfunction handleDragScroll(event: MouseEvent) {\n  if (rectRef.value) {\n    const x = event.clientX - rectRef.value?.left\n    const y = event.clientY - rectRef.value?.top\n    emit('onDragScroll', { x, y })\n  }\n}\n\nfunction handlePointerDown(event: PointerEvent) {\n  const mainPointer = 0\n  if (event.button === mainPointer) {\n    const element = event.target as HTMLElement\n    element.setPointerCapture(event.pointerId)\n    rectRef.value = scrollbar.value!.getBoundingClientRect()\n\n    // pointer capture doesn't prevent text selection in Safari\n    // so we remove text selection manually when scrolling\n    prevWebkitUserSelectRef.value = document.body.style.webkitUserSelect\n    document.body.style.webkitUserSelect = 'none'\n    if (rootContext.viewport)\n      rootContext.viewport.value!.style.scrollBehavior = 'auto'\n\n    handleDragScroll(event)\n  }\n}\n\nfunction handlePointerMove(event: PointerEvent) {\n  handleDragScroll(event)\n}\n\nfunction handlePointerUp(event: PointerEvent) {\n  const element = event.target as HTMLElement\n  if (element.hasPointerCapture(event.pointerId))\n    element.releasePointerCapture(event.pointerId)\n\n  document.body.style.webkitUserSelect = prevWebkitUserSelectRef.value\n  if (rootContext.viewport)\n    rootContext.viewport.value!.style.scrollBehavior = ''\n\n  rectRef.value = undefined\n}\n\nfunction handleWheel(event: WheelEvent) {\n  const element = event.target as HTMLElement\n  const isScrollbarWheel = scrollbar.value?.contains(element)\n  const maxScrollPos\n    = scrollbarVisibleContext.sizes.value.content\n      - scrollbarVisibleContext.sizes.value.viewport\n  if (isScrollbarWheel)\n    scrollbarVisibleContext.handleWheelScroll(event, maxScrollPos)\n}\n\nonMounted(() => {\n  document.addEventListener('wheel', handleWheel, { passive: false })\n})\nonUnmounted(() => {\n  document.removeEventListener('wheel', handleWheel)\n})\n\nfunction handleSizeChange() {\n  if (!scrollbar.value)\n    return\n  if (props.isHorizontal) {\n    scrollbarVisibleContext.handleSizeChange({\n      content: rootContext.viewport.value?.scrollWidth ?? 0,\n      viewport: rootContext.viewport.value?.offsetWidth ?? 0,\n      scrollbar: {\n        size: scrollbar.value.clientWidth ?? 0,\n        paddingStart: toInt(getComputedStyle(scrollbar.value).paddingLeft),\n        paddingEnd: toInt(getComputedStyle(scrollbar.value).paddingRight),\n      },\n    })\n  }\n  else {\n    scrollbarVisibleContext.handleSizeChange({\n      content: rootContext.viewport.value?.scrollHeight ?? 0,\n      viewport: rootContext.viewport.value?.offsetHeight ?? 0,\n      scrollbar: {\n        size: scrollbar.value?.clientHeight ?? 0,\n        paddingStart: toInt(getComputedStyle(scrollbar.value!).paddingLeft),\n        paddingEnd: toInt(getComputedStyle(scrollbar.value!).paddingRight),\n      },\n    })\n  }\n}\n\nuseResizeObserver(scrollbar, handleSizeChange)\nuseResizeObserver(rootContext.content, handleSizeChange)\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    style=\"position: absolute\"\n    data-scrollbarimpl\n    :as=\"scrollbarContext.as.value\"\n    :as-child=\"scrollbarContext.asChild.value\"\n    @pointerdown=\"handlePointerDown\"\n    @pointermove=\"handlePointerMove\"\n    @pointerup=\"handlePointerUp\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaThumbProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { watchOnce } from '@vueuse/core'\nimport { computed, onUnmounted, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarVisibleContext } from './ScrollAreaScrollbarVisible.vue'\nimport { addUnlinkedScrollListener } from './utils'\n\nconst props = defineProps<ScrollAreaThumbProps>()\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarContextVisible = injectScrollAreaScrollbarVisibleContext()\n\nfunction handlePointerDown(event: MouseEvent) {\n  const thumb = event.target as HTMLElement\n  const thumbRect = thumb.getBoundingClientRect()\n  const x = event.clientX - thumbRect.left\n  const y = event.clientY - thumbRect.top\n  scrollbarContextVisible.handleThumbDown(event, { x, y })\n}\n\nfunction handlePointerUp(event: MouseEvent) {\n  scrollbarContextVisible.handleThumbUp(event)\n}\n\nconst { forwardRef, currentElement: thumbElement } = useForwardExpose()\nconst removeUnlinkedScrollListenerRef = ref<() => void>()\nconst viewport = computed(() => rootContext.viewport.value)\n\nfunction handleScroll() {\n  if (!removeUnlinkedScrollListenerRef.value) {\n    const listener = addUnlinkedScrollListener(\n      viewport.value!,\n      scrollbarContextVisible.onThumbPositionChange,\n    )\n    removeUnlinkedScrollListenerRef.value = listener\n    scrollbarContextVisible.onThumbPositionChange()\n  }\n}\n\nconst sizes = computed(() => scrollbarContextVisible.sizes.value)\n\nwatchOnce(sizes, () => {\n  scrollbarContextVisible.onThumbChange(thumbElement.value!)\n  if (viewport.value) {\n    /**\n     * We only bind to native scroll event so we know when scroll starts and ends.\n     * When scroll starts we start a requestAnimationFrame loop that checks for\n     * changes to scroll position. That rAF loop triggers our thumb position change\n     * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n     * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n     */\n    scrollbarContextVisible.onThumbPositionChange()\n    viewport.value.addEventListener('scroll', handleScroll)\n  }\n})\n\nonUnmounted(() => {\n  viewport.value!.removeEventListener('scroll', handleScroll)\n  rootContext.viewport.value?.removeEventListener('scroll', handleScroll)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :data-state=\"scrollbarContextVisible.hasThumb ? 'visible' : 'hidden'\"\n    :style=\"{\n      width: 'var(--reka-scroll-area-thumb-width)',\n      height: 'var(--reka-scroll-area-thumb-height)',\n    }\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n    @pointerdown=\"handlePointerDown\"\n    @pointerup=\"handlePointerUp\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ScrollAreaThumbProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { watchOnce } from '@vueuse/core'\nimport { computed, onUnmounted, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\nimport { injectScrollAreaScrollbarVisibleContext } from './ScrollAreaScrollbarVisible.vue'\nimport { addUnlinkedScrollListener } from './utils'\n\nconst props = defineProps<ScrollAreaThumbProps>()\n\nconst rootContext = injectScrollAreaRootContext()\nconst scrollbarContextVisible = injectScrollAreaScrollbarVisibleContext()\n\nfunction handlePointerDown(event: MouseEvent) {\n  const thumb = event.target as HTMLElement\n  const thumbRect = thumb.getBoundingClientRect()\n  const x = event.clientX - thumbRect.left\n  const y = event.clientY - thumbRect.top\n  scrollbarContextVisible.handleThumbDown(event, { x, y })\n}\n\nfunction handlePointerUp(event: MouseEvent) {\n  scrollbarContextVisible.handleThumbUp(event)\n}\n\nconst { forwardRef, currentElement: thumbElement } = useForwardExpose()\nconst removeUnlinkedScrollListenerRef = ref<() => void>()\nconst viewport = computed(() => rootContext.viewport.value)\n\nfunction handleScroll() {\n  if (!removeUnlinkedScrollListenerRef.value) {\n    const listener = addUnlinkedScrollListener(\n      viewport.value!,\n      scrollbarContextVisible.onThumbPositionChange,\n    )\n    removeUnlinkedScrollListenerRef.value = listener\n    scrollbarContextVisible.onThumbPositionChange()\n  }\n}\n\nconst sizes = computed(() => scrollbarContextVisible.sizes.value)\n\nwatchOnce(sizes, () => {\n  scrollbarContextVisible.onThumbChange(thumbElement.value!)\n  if (viewport.value) {\n    /**\n     * We only bind to native scroll event so we know when scroll starts and ends.\n     * When scroll starts we start a requestAnimationFrame loop that checks for\n     * changes to scroll position. That rAF loop triggers our thumb position change\n     * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n     * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n     */\n    scrollbarContextVisible.onThumbPositionChange()\n    viewport.value.addEventListener('scroll', handleScroll)\n  }\n})\n\nonUnmounted(() => {\n  viewport.value!.removeEventListener('scroll', handleScroll)\n  rootContext.viewport.value?.removeEventListener('scroll', handleScroll)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :data-state=\"scrollbarContextVisible.hasThumb ? 'visible' : 'hidden'\"\n    :style=\"{\n      width: 'var(--reka-scroll-area-thumb-width)',\n      height: 'var(--reka-scroll-area-thumb-height)',\n    }\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n    @pointerdown=\"handlePointerDown\"\n    @pointerup=\"handlePointerUp\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { useNonce } from '@/shared/useNonce'\n\nexport interface ScrollAreaViewportProps extends PrimitiveProps {\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<ScrollAreaViewportProps>()\n\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n\nconst rootContext = injectScrollAreaRootContext()\n\nconst viewportElement = ref<HTMLElement>()\n\nonMounted(() => {\n  rootContext.onViewportChange(viewportElement.value!)\n  rootContext.onContentChange(contentElement.value!)\n})\n\ndefineExpose({\n  viewportElement,\n})\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\n</script>\n\n<template>\n  <div\n    ref=\"viewportElement\"\n    data-reka-scroll-area-viewport=\"\"\n    :style=\"{\n      /**\n       * We don't support `visible` because the intention is to have at least one scrollbar\n       * if this component is used and `visible` will behave like `auto` in that case\n       * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n       *\n       * We don't handle `auto` because the intention is for the native implementation\n       * to be hidden if using this component. We just want to ensure the node is scrollable\n       * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n       * the browser from having to work out whether to render native scrollbars or not,\n       * we tell it to with the intention of hiding them in CSS.\n       */\n      overflowX: rootContext.scrollbarXEnabled.value ? 'scroll' : 'hidden',\n      overflowY: rootContext.scrollbarYEnabled.value ? 'scroll' : 'hidden',\n    }\"\n    v-bind=\"$attrs\"\n    :tabindex=\"0\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :style=\"{\n        /**\n         * When horizontal scrollbar is visible: this element should be at least\n         * as wide as its children for size calculations to work correctly.\n         *\n         * When horizontal scrollbar is NOT visible: this element's width should\n         * be constrained by the parent container to enable `text-overflow: ellipsis`\n         */\n        minWidth: rootContext.scrollbarXEnabled.value ? 'fit-content' : undefined,\n      }\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n    >\n      <slot />\n    </Primitive>\n  </div>\n  <Primitive\n    as=\"style\"\n    :nonce=\"nonce\"\n  >\n    /* Hide scrollbars cross-browser and enable momentum scroll for touch\n    devices */\n    [data-reka-scroll-area-viewport] {\n    scrollbar-width:none;\n    -ms-overflow-style:none;\n    -webkit-overflow-scrolling:touch;\n    }\n\n    [data-reka-scroll-area-viewport]::-webkit-scrollbar {\n    display:none;\n    }\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { useNonce } from '@/shared/useNonce'\n\nexport interface ScrollAreaViewportProps extends PrimitiveProps {\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectScrollAreaRootContext } from './ScrollAreaRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<ScrollAreaViewportProps>()\n\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n\nconst rootContext = injectScrollAreaRootContext()\n\nconst viewportElement = ref<HTMLElement>()\n\nonMounted(() => {\n  rootContext.onViewportChange(viewportElement.value!)\n  rootContext.onContentChange(contentElement.value!)\n})\n\ndefineExpose({\n  viewportElement,\n})\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\n</script>\n\n<template>\n  <div\n    ref=\"viewportElement\"\n    data-reka-scroll-area-viewport=\"\"\n    :style=\"{\n      /**\n       * We don't support `visible` because the intention is to have at least one scrollbar\n       * if this component is used and `visible` will behave like `auto` in that case\n       * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n       *\n       * We don't handle `auto` because the intention is for the native implementation\n       * to be hidden if using this component. We just want to ensure the node is scrollable\n       * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n       * the browser from having to work out whether to render native scrollbars or not,\n       * we tell it to with the intention of hiding them in CSS.\n       */\n      overflowX: rootContext.scrollbarXEnabled.value ? 'scroll' : 'hidden',\n      overflowY: rootContext.scrollbarYEnabled.value ? 'scroll' : 'hidden',\n    }\"\n    v-bind=\"$attrs\"\n    :tabindex=\"0\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :style=\"{\n        /**\n         * When horizontal scrollbar is visible: this element should be at least\n         * as wide as its children for size calculations to work correctly.\n         *\n         * When horizontal scrollbar is NOT visible: this element's width should\n         * be constrained by the parent container to enable `text-overflow: ellipsis`\n         */\n        minWidth: rootContext.scrollbarXEnabled.value ? 'fit-content' : undefined,\n      }\"\n      :as-child=\"props.asChild\"\n      :as=\"as\"\n    >\n      <slot />\n    </Primitive>\n  </div>\n  <Primitive\n    as=\"style\"\n    :nonce=\"nonce\"\n  >\n    /* Hide scrollbars cross-browser and enable momentum scroll for touch\n    devices */\n    [data-reka-scroll-area-viewport] {\n    scrollbar-width:none;\n    -ms-overflow-style:none;\n    -webkit-overflow-scrolling:touch;\n    }\n\n    [data-reka-scroll-area-viewport]::-webkit-scrollbar {\n    display:none;\n    }\n  </Primitive>\n</template>\n", "<script setup lang=\"ts\">\nimport { ref, watch } from 'vue'\nimport { VisuallyHidden } from '@/VisuallyHidden'\n\ninterface BubbleSelectProps {\n  autocomplete?: string\n  autofocus?: boolean\n  disabled?: boolean\n  form?: string\n  multiple?: boolean\n  name?: string\n  required?: boolean\n  size?: number\n  value?: any\n}\n\nconst props = defineProps<BubbleSelectProps>()\nconst selectElement = ref<HTMLElement>()\n\n// This would bubble \"change\" event to form, with the target as Select element.\nwatch(() => props.value, (cur, prev) => {\n  const selectProto = window.HTMLSelectElement.prototype\n  const descriptor = Object.getOwnPropertyDescriptor(\n    selectProto,\n    'value',\n  ) as PropertyDescriptor\n  const setValue = descriptor.set\n  if (cur !== prev && setValue && selectElement.value) {\n    const event = new Event('change', { bubbles: true })\n    setValue.call(selectElement.value, cur)\n    selectElement.value.dispatchEvent(event)\n  }\n})\n\n/**\n * We purposefully use a `select` here to support form autofill as much\n * as possible.\n *\n * We purposefully do not add the `value` attribute here to allow the value\n * to be set programmatically and bubble to any parent form `onChange` event.\n *\n * We use `VisuallyHidden` rather than `display: \"none\"` because Safari autofill\n * won't work otherwise.\n */\n</script>\n\n<template>\n  <VisuallyHidden as-child>\n    <select\n      ref=\"selectElement\"\n      v-bind=\"props\"\n    >\n      <slot />\n    </select>\n  </VisuallyHidden>\n</template>\n", "<script setup lang=\"ts\">\nimport { ref, watch } from 'vue'\nimport { VisuallyHidden } from '@/VisuallyHidden'\n\ninterface BubbleSelectProps {\n  autocomplete?: string\n  autofocus?: boolean\n  disabled?: boolean\n  form?: string\n  multiple?: boolean\n  name?: string\n  required?: boolean\n  size?: number\n  value?: any\n}\n\nconst props = defineProps<BubbleSelectProps>()\nconst selectElement = ref<HTMLElement>()\n\n// This would bubble \"change\" event to form, with the target as Select element.\nwatch(() => props.value, (cur, prev) => {\n  const selectProto = window.HTMLSelectElement.prototype\n  const descriptor = Object.getOwnPropertyDescriptor(\n    selectProto,\n    'value',\n  ) as PropertyDescriptor\n  const setValue = descriptor.set\n  if (cur !== prev && setValue && selectElement.value) {\n    const event = new Event('change', { bubbles: true })\n    setValue.call(selectElement.value, cur)\n    selectElement.value.dispatchEvent(event)\n  }\n})\n\n/**\n * We purposefully use a `select` here to support form autofill as much\n * as possible.\n *\n * We purposefully do not add the `value` attribute here to allow the value\n * to be set programmatically and bubble to any parent form `onChange` event.\n *\n * We use `VisuallyHidden` rather than `display: \"none\"` because Safari autofill\n * won't work otherwise.\n */\n</script>\n\n<template>\n  <VisuallyHidden as-child>\n    <select\n      ref=\"selectElement\"\n      v-bind=\"props\"\n    >\n      <slot />\n    </select>\n  </VisuallyHidden>\n</template>\n", "import type { AcceptableValue } from '@/shared/types'\nimport { isEqual } from 'ohash'\n\nexport const OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown']\nexport const SELECTION_KEYS = [' ', 'Enter']\nexport const CONTENT_MARGIN = 10\n\nexport function valueComparator<T>(value: T | T[] | undefined, currentValue: T, comparator?: string | ((a: T, b: T) => boolean)) {\n  if (value === undefined)\n    return false\n  else if (Array.isArray(value))\n    return value.some(val => compare(val, currentValue, comparator))\n  else\n    return compare(value, currentValue, comparator)\n}\n\nexport function compare<T>(value?: T, currentValue?: T, comparator?: string | ((a: T, b: T) => boolean)) {\n  if (value === undefined || currentValue === undefined)\n    return false\n\n  if (typeof value === 'string')\n    return value === currentValue\n\n  if (typeof comparator === 'function')\n    return comparator(value, currentValue)\n\n  if (typeof comparator === 'string')\n    return value?.[comparator as keyof T] === currentValue?.[comparator as keyof T]\n\n  return isEqual(value, currentValue)\n}\n\nexport function shouldShowPlaceholder(value?: AcceptableValue | AcceptableValue[]): boolean {\n  return value === undefined || value === null || value === '' || (Array.isArray(value) && value.length === 0)\n}\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { AcceptableValue, Direction, FormFieldProps } from '@/shared/types'\nimport { useCollection } from '@/Collection'\nimport { createContext, isNullish, useDirection, useFormControl } from '@/shared'\nimport { compare, valueComparator } from './utils'\n\nexport interface SelectRootProps<T = AcceptableValue> extends FormFieldProps {\n  /** The controlled open state of the Select. Can be bind as `v-model:open`. */\n  open?: boolean\n  /** The open state of the select when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /** The value of the select when initially rendered. Use when you do not need to control the state of the Select */\n  defaultValue?: T | Array<T>\n  /** The controlled value of the Select. Can be bind as `v-model`. */\n  modelValue?: T | Array<T>\n  /** Use this to compare objects by a particular field, or pass your own comparison function for complete control over how objects are compared. */\n  by?: string | ((a: T, b: T) => boolean)\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** Whether multiple options can be selected or not. */\n  multiple?: boolean\n  /** Native html input `autocomplete` attribute. */\n  autocomplete?: string\n  /** When `true`, prevents the user from interacting with Select */\n  disabled?: boolean\n}\n\nexport type SelectRootEmits<T = AcceptableValue> = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: T]\n  /** Event handler called when the open state of the context menu changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface SelectRootContext<T> {\n  triggerElement: Ref<HTMLElement | undefined>\n  onTriggerChange: (node: HTMLElement | undefined) => void\n  valueElement: Ref<HTMLElement | undefined>\n  onValueElementChange: (node: HTMLElement) => void\n  contentId: string\n  modelValue: Ref<T | Array<T> | undefined>\n  onValueChange: (value: T) => void\n  open: Ref<boolean>\n  multiple: Ref<boolean>\n  required?: Ref<boolean>\n  by?: string | ((a: T, b: T) => boolean)\n  onOpenChange: (open: boolean) => void\n  dir: Ref<Direction>\n  triggerPointerDownPosRef: Ref<{ x: number, y: number } | null>\n  isEmptyModelValue: Ref<boolean>\n  disabled?: Ref<boolean>\n\n  optionsSet: Ref<Set<SelectOption>>\n  onOptionAdd: (option: SelectOption) => void\n  onOptionRemove: (option: SelectOption) => void\n}\n\nexport const [injectSelectRootContext, provideSelectRootContext]\n  = createContext<SelectRootContext<AcceptableValue>>('SelectRoot')\n\ninterface SelectOption { value: any, disabled?: boolean, textContent: string }\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, ref, toRefs } from 'vue'\nimport { PopperRoot } from '@/Popper'\nimport BubbleSelect from './BubbleSelect.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<SelectRootProps<T>>(), {\n  modelValue: undefined,\n  open: undefined,\n})\nconst emits = defineEmits<SelectRootEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst { required, disabled, multiple, dir: propDir } = toRefs(props)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  // @ts-expect-error Missing infer for AcceptableValue\n  defaultValue: props.defaultValue ?? (multiple.value ? [] : undefined),\n  passive: (props.modelValue === undefined) as false,\n  deep: true,\n}) as Ref<T | T[] | undefined>\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst triggerElement = ref<HTMLElement>()\nconst valueElement = ref<HTMLElement>()\nconst triggerPointerDownPosRef = ref({\n  x: 0,\n  y: 0,\n})\n\nconst isEmptyModelValue = computed(() => {\n  if (multiple.value && Array.isArray(modelValue.value))\n    return modelValue.value?.length === 0\n  else\n    return isNullish(modelValue.value)\n})\n\nuseCollection({ isProvider: true })\nconst dir = useDirection(propDir)\n\nconst isFormControl = useFormControl(triggerElement)\nconst optionsSet = ref<Set<SelectOption>>(new Set())\n\n// The native `select` only associates the correct default value if the corresponding\n// `option` is rendered as a child **at the same time** as itself.\n// Because it might take a few renders for our items to gather the information to build\n// the native `option`(s), we generate a key on the `select` to make sure Vue re-builds it\n// each time the options change.\nconst nativeSelectKey = computed(() => {\n  return Array.from(optionsSet.value)\n    .map(option => option.value)\n    .join(';')\n})\n\nfunction handleValueChange(value: T) {\n  if (multiple.value) {\n    const array = Array.isArray(modelValue.value) ? [...modelValue.value] : []\n    const index = array.findIndex(i => compare(i, value, props.by))\n    index === -1 ? array.push(value) : array.splice(index, 1)\n    modelValue.value = [...array]\n  }\n  else {\n    modelValue.value = value\n  }\n}\n\nfunction getOption(value: SelectOption['value']) {\n  return Array.from(optionsSet.value)\n    .find(option => valueComparator(value, option.value, props.by))\n}\n\nprovideSelectRootContext({\n  triggerElement,\n  onTriggerChange: (node) => {\n    triggerElement.value = node\n  },\n  valueElement,\n  onValueElementChange: (node) => {\n    valueElement.value = node\n  },\n  contentId: '',\n  modelValue,\n  // @ts-expect-error Missing infer for AcceptableValue\n  onValueChange: handleValueChange,\n  // @ts-expect-error Missing infer for AcceptableValue\n  by: props.by,\n  open,\n  multiple,\n  required,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  dir,\n  triggerPointerDownPosRef,\n  disabled,\n  isEmptyModelValue,\n\n  optionsSet,\n  onOptionAdd: (option) => {\n    const existingOption = getOption(option.value)\n    if (existingOption) {\n      optionsSet.value.delete(existingOption)\n    }\n\n    optionsSet.value.add(option)\n  },\n  onOptionRemove: (option) => {\n    const existingOption = getOption(option.value)\n    if (existingOption) {\n      optionsSet.value.delete(existingOption)\n    }\n  },\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot\n      :model-value=\"modelValue\"\n      :open=\"open\"\n    />\n\n    <BubbleSelect\n      v-if=\"isFormControl\"\n      :key=\"nativeSelectKey\"\n      aria-hidden=\"true\"\n      tabindex=\"-1\"\n      :multiple=\"multiple\"\n      :required=\"required\"\n      :name=\"name\"\n      :autocomplete=\"autocomplete\"\n      :disabled=\"disabled\"\n      :value=\"modelValue\"\n    >\n      <option\n        v-if=\"isNullish(modelValue)\"\n        value=\"\"\n      />\n      <option\n        v-for=\"option in Array.from(optionsSet)\"\n        :key=\"option.value ?? ''\"\n        v-bind=\"option\"\n      />\n    </BubbleSelect>\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { AcceptableValue, Direction, FormFieldProps } from '@/shared/types'\nimport { useCollection } from '@/Collection'\nimport { createContext, isNullish, useDirection, useFormControl } from '@/shared'\nimport { compare, valueComparator } from './utils'\n\nexport interface SelectRootProps<T = AcceptableValue> extends FormFieldProps {\n  /** The controlled open state of the Select. Can be bind as `v-model:open`. */\n  open?: boolean\n  /** The open state of the select when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /** The value of the select when initially rendered. Use when you do not need to control the state of the Select */\n  defaultValue?: T | Array<T>\n  /** The controlled value of the Select. Can be bind as `v-model`. */\n  modelValue?: T | Array<T>\n  /** Use this to compare objects by a particular field, or pass your own comparison function for complete control over how objects are compared. */\n  by?: string | ((a: T, b: T) => boolean)\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** Whether multiple options can be selected or not. */\n  multiple?: boolean\n  /** Native html input `autocomplete` attribute. */\n  autocomplete?: string\n  /** When `true`, prevents the user from interacting with Select */\n  disabled?: boolean\n}\n\nexport type SelectRootEmits<T = AcceptableValue> = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [value: T]\n  /** Event handler called when the open state of the context menu changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface SelectRootContext<T> {\n  triggerElement: Ref<HTMLElement | undefined>\n  onTriggerChange: (node: HTMLElement | undefined) => void\n  valueElement: Ref<HTMLElement | undefined>\n  onValueElementChange: (node: HTMLElement) => void\n  contentId: string\n  modelValue: Ref<T | Array<T> | undefined>\n  onValueChange: (value: T) => void\n  open: Ref<boolean>\n  multiple: Ref<boolean>\n  required?: Ref<boolean>\n  by?: string | ((a: T, b: T) => boolean)\n  onOpenChange: (open: boolean) => void\n  dir: Ref<Direction>\n  triggerPointerDownPosRef: Ref<{ x: number, y: number } | null>\n  isEmptyModelValue: Ref<boolean>\n  disabled?: Ref<boolean>\n\n  optionsSet: Ref<Set<SelectOption>>\n  onOptionAdd: (option: SelectOption) => void\n  onOptionRemove: (option: SelectOption) => void\n}\n\nexport const [injectSelectRootContext, provideSelectRootContext]\n  = createContext<SelectRootContext<AcceptableValue>>('SelectRoot')\n\ninterface SelectOption { value: any, disabled?: boolean, textContent: string }\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, ref, toRefs } from 'vue'\nimport { PopperRoot } from '@/Popper'\nimport BubbleSelect from './BubbleSelect.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<SelectRootProps<T>>(), {\n  modelValue: undefined,\n  open: undefined,\n})\nconst emits = defineEmits<SelectRootEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nconst { required, disabled, multiple, dir: propDir } = toRefs(props)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  // @ts-expect-error Missing infer for AcceptableValue\n  defaultValue: props.defaultValue ?? (multiple.value ? [] : undefined),\n  passive: (props.modelValue === undefined) as false,\n  deep: true,\n}) as Ref<T | T[] | undefined>\n\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nconst triggerElement = ref<HTMLElement>()\nconst valueElement = ref<HTMLElement>()\nconst triggerPointerDownPosRef = ref({\n  x: 0,\n  y: 0,\n})\n\nconst isEmptyModelValue = computed(() => {\n  if (multiple.value && Array.isArray(modelValue.value))\n    return modelValue.value?.length === 0\n  else\n    return isNullish(modelValue.value)\n})\n\nuseCollection({ isProvider: true })\nconst dir = useDirection(propDir)\n\nconst isFormControl = useFormControl(triggerElement)\nconst optionsSet = ref<Set<SelectOption>>(new Set())\n\n// The native `select` only associates the correct default value if the corresponding\n// `option` is rendered as a child **at the same time** as itself.\n// Because it might take a few renders for our items to gather the information to build\n// the native `option`(s), we generate a key on the `select` to make sure Vue re-builds it\n// each time the options change.\nconst nativeSelectKey = computed(() => {\n  return Array.from(optionsSet.value)\n    .map(option => option.value)\n    .join(';')\n})\n\nfunction handleValueChange(value: T) {\n  if (multiple.value) {\n    const array = Array.isArray(modelValue.value) ? [...modelValue.value] : []\n    const index = array.findIndex(i => compare(i, value, props.by))\n    index === -1 ? array.push(value) : array.splice(index, 1)\n    modelValue.value = [...array]\n  }\n  else {\n    modelValue.value = value\n  }\n}\n\nfunction getOption(value: SelectOption['value']) {\n  return Array.from(optionsSet.value)\n    .find(option => valueComparator(value, option.value, props.by))\n}\n\nprovideSelectRootContext({\n  triggerElement,\n  onTriggerChange: (node) => {\n    triggerElement.value = node\n  },\n  valueElement,\n  onValueElementChange: (node) => {\n    valueElement.value = node\n  },\n  contentId: '',\n  modelValue,\n  // @ts-expect-error Missing infer for AcceptableValue\n  onValueChange: handleValueChange,\n  // @ts-expect-error Missing infer for AcceptableValue\n  by: props.by,\n  open,\n  multiple,\n  required,\n  onOpenChange: (value) => {\n    open.value = value\n  },\n  dir,\n  triggerPointerDownPosRef,\n  disabled,\n  isEmptyModelValue,\n\n  optionsSet,\n  onOptionAdd: (option) => {\n    const existingOption = getOption(option.value)\n    if (existingOption) {\n      optionsSet.value.delete(existingOption)\n    }\n\n    optionsSet.value.add(option)\n  },\n  onOptionRemove: (option) => {\n    const existingOption = getOption(option.value)\n    if (existingOption) {\n      optionsSet.value.delete(existingOption)\n    }\n  },\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot\n      :model-value=\"modelValue\"\n      :open=\"open\"\n    />\n\n    <BubbleSelect\n      v-if=\"isFormControl\"\n      :key=\"nativeSelectKey\"\n      aria-hidden=\"true\"\n      tabindex=\"-1\"\n      :multiple=\"multiple\"\n      :required=\"required\"\n      :name=\"name\"\n      :autocomplete=\"autocomplete\"\n      :disabled=\"disabled\"\n      :value=\"modelValue\"\n    >\n      <option\n        v-if=\"isNullish(modelValue)\"\n        value=\"\"\n      />\n      <option\n        v-for=\"option in Array.from(optionsSet)\"\n        :key=\"option.value ?? ''\"\n        v-bind=\"option\"\n      />\n    </BubbleSelect>\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperContentProps } from '@/Popper'\n\nexport interface SelectPopperPositionProps extends PopperContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperContent } from '@/Popper'\nimport { useForwardProps } from '..'\nimport { CONTENT_MARGIN } from './utils'\n\nconst props = withDefaults(defineProps<SelectPopperPositionProps>(), {\n  align: 'start',\n  collisionPadding: CONTENT_MARGIN,\n})\nconst forwarded = useForwardProps(props)\n</script>\n\n<template>\n  <PopperContent\n    v-bind=\"forwarded\"\n    :style=\"{\n      // Ensure border-box for floating-ui calculations\n      'boxSizing': 'border-box',\n      '--reka-select-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-select-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-select-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-select-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-select-trigger-height': 'var(--reka-popper-anchor-height)',\n    }\"\n  >\n    <slot />\n  </PopperContent>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperContentProps } from '@/Popper'\n\nexport interface SelectPopperPositionProps extends PopperContentProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperContent } from '@/Popper'\nimport { useForwardProps } from '..'\nimport { CONTENT_MARGIN } from './utils'\n\nconst props = withDefaults(defineProps<SelectPopperPositionProps>(), {\n  align: 'start',\n  collisionPadding: CONTENT_MARGIN,\n})\nconst forwarded = useForwardProps(props)\n</script>\n\n<template>\n  <PopperContent\n    v-bind=\"forwarded\"\n    :style=\"{\n      // Ensure border-box for floating-ui calculations\n      'boxSizing': 'border-box',\n      '--reka-select-content-transform-origin':\n        'var(--reka-popper-transform-origin)',\n      '--reka-select-content-available-width':\n        'var(--reka-popper-available-width)',\n      '--reka-select-content-available-height':\n        'var(--reka-popper-available-height)',\n      '--reka-select-trigger-width': 'var(--reka-popper-anchor-width)',\n      '--reka-select-trigger-height': 'var(--reka-popper-anchor-height)',\n    }\"\n  >\n    <slot />\n  </PopperContent>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  ComponentPublicInstance,\n  Ref,\n} from 'vue'\nimport type { PointerDownOutsideEvent } from '@/DismissableLayer'\nimport type { PopperContentProps } from '@/Popper'\nimport type { AcceptableValue } from '@/shared/types'\nimport { useCollection } from '@/Collection'\nimport {\n  createContext,\n  useFocusGuards,\n  useForwardProps,\n  useHideOthers,\n  useTypeahead,\n} from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\nimport { valueComparator } from './utils'\n\nexport interface SelectContentContext {\n  content?: Ref<HTMLElement | undefined>\n  viewport?: Ref<HTMLElement | undefined>\n  onViewportChange: (node: HTMLElement | undefined) => void\n  itemRefCallback: (\n    node: HTMLElement | undefined,\n    value: AcceptableValue,\n    disabled: boolean\n  ) => void\n  selectedItem?: Ref<HTMLElement | undefined>\n  onItemLeave?: () => void\n  itemTextRefCallback: (\n    node: HTMLElement | undefined,\n    value: AcceptableValue,\n    disabled: boolean\n  ) => void\n  focusSelectedItem?: () => void\n  selectedItemText?: Ref<HTMLElement | undefined>\n  position?: 'item-aligned' | 'popper'\n  isPositioned?: Ref<boolean>\n  searchRef?: Ref<string>\n}\n\nexport const SelectContentDefaultContextValue: SelectContentContext = {\n  onViewportChange: () => {},\n  itemTextRefCallback: () => {},\n  itemRefCallback: () => {},\n}\n\nexport type SelectContentImplEmits = {\n  closeAutoFocus: [event: Event]\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  escapeKeyDown: [event: KeyboardEvent]\n  /**\n   * Event handler called when a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  pointerDownOutside: [event: PointerDownOutsideEvent]\n}\n\nexport interface SelectContentImplProps extends PopperContentProps {\n  /**\n   *  The positioning mode to use\n   *\n   *  `item-aligned (default)` - behaves similarly to a native MacOS menu by positioning content relative to the active item. <br>\n   *  `popper` - positions content in the same way as our other primitives, for example `Popover` or `DropdownMenu`.\n   */\n  position?: 'item-aligned' | 'popper'\n  /**\n   * The document.body will be lock, and scrolling will be disabled.\n   *\n   * @defaultValue true\n   */\n  bodyLock?: boolean\n}\n\nexport const [injectSelectContentContext, provideSelectContentContext]\n  = createContext<SelectContentContext>('SelectContent')\n</script>\n\n<script setup lang=\"ts\">\nimport { unrefElement } from '@vueuse/core'\nimport {\n  computed,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { FocusScope } from '@/FocusScope'\nimport { focusFirst } from '@/Menu/utils'\nimport SelectItemAlignedPosition from './SelectItemAlignedPosition.vue'\nimport SelectPopperPosition from './SelectPopperPosition.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\nconst props = withDefaults(defineProps<SelectContentImplProps>(), {\n  align: 'start',\n  position: 'item-aligned',\n  bodyLock: true,\n})\nconst emits = defineEmits<SelectContentImplEmits>()\n\nconst rootContext = injectSelectRootContext()\n\nuseFocusGuards()\nuseBodyScrollLock(props.bodyLock)\nconst { CollectionSlot, getItems } = useCollection()\n\nconst content = ref<HTMLElement>()\nuseHideOthers(content)\n\nconst { search, handleTypeaheadSearch } = useTypeahead()\n\nconst viewport = ref<HTMLElement>()\nconst selectedItem = ref<HTMLElement>()\nconst selectedItemText = ref<HTMLElement>()\nconst isPositioned = ref(false)\nconst firstValidItemFoundRef = ref(false)\nconst firstSelectedItemInArrayFoundRef = ref(false)\n\nfunction focusSelectedItem() {\n  if (selectedItem.value && content.value)\n    focusFirst([selectedItem.value, content.value])\n}\n\nwatch(isPositioned, () => {\n  focusSelectedItem()\n})\n\n// prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n// and close on `pointerup` outside.\nconst { onOpenChange, triggerPointerDownPosRef } = rootContext\nwatchEffect((cleanupFn) => {\n  if (!content.value)\n    return\n  let pointerMoveDelta = { x: 0, y: 0 }\n\n  const handlePointerMove = (event: PointerEvent) => {\n    pointerMoveDelta = {\n      x: Math.abs(\n        Math.round(event.pageX) - (triggerPointerDownPosRef.value?.x ?? 0),\n      ),\n      y: Math.abs(\n        Math.round(event.pageY) - (triggerPointerDownPosRef.value?.y ?? 0),\n      ),\n    }\n  }\n  const handlePointerUp = (event: PointerEvent) => {\n    // Prevent options from being untappable on touch devices\n    // https://github.com/unovue/reka-ui/issues/804\n    if (event.pointerType === 'touch')\n      return\n\n    // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n    if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n      event.preventDefault()\n    }\n    else {\n      // otherwise, if the event was outside the content, close.\n      if (!content.value?.contains(event.target as HTMLElement))\n        onOpenChange(false)\n    }\n    document.removeEventListener('pointermove', handlePointerMove)\n    triggerPointerDownPosRef.value = null\n  }\n\n  if (triggerPointerDownPosRef.value !== null) {\n    document.addEventListener('pointermove', handlePointerMove)\n    document.addEventListener('pointerup', handlePointerUp, {\n      capture: true,\n      once: true,\n    })\n  }\n\n  cleanupFn(() => {\n    document.removeEventListener('pointermove', handlePointerMove)\n    document.removeEventListener('pointerup', handlePointerUp, {\n      capture: true,\n    })\n  })\n})\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey\n\n  // select should not be navigated using tab key so we prevent it\n  if (event.key === 'Tab')\n    event.preventDefault()\n\n  if (!isModifierKey && event.key.length === 1)\n    handleTypeaheadSearch(event.key, getItems())\n\n  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n    const collectionItems = getItems().map(i => i.ref)\n    let candidateNodes = [...collectionItems]\n\n    if (['ArrowUp', 'End'].includes(event.key))\n      candidateNodes = candidateNodes.slice().reverse()\n\n    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n      const currentElement = event.target as HTMLElement\n      const currentIndex = candidateNodes.indexOf(currentElement)\n      candidateNodes = candidateNodes.slice(currentIndex + 1)\n    }\n    setTimeout(() => focusFirst(candidateNodes))\n    event.preventDefault()\n  }\n}\n\nconst pickedProps = computed(() => {\n  if (props.position === 'popper')\n    return props\n  else return {}\n})\n\nconst forwardedProps = useForwardProps(pickedProps.value)\n\nprovideSelectContentContext({\n  content,\n  viewport,\n  onViewportChange: (node) => {\n    viewport.value = node\n  },\n  itemRefCallback: (node, value, disabled) => {\n    const isFirstValidItem = !firstValidItemFoundRef.value && !disabled\n    const isSelectedItem = valueComparator(rootContext.modelValue.value, value, rootContext.by)\n\n    if (rootContext.multiple.value) {\n      if (firstSelectedItemInArrayFoundRef.value) {\n        return\n      }\n      if (isSelectedItem || isFirstValidItem) {\n        selectedItem.value = node\n\n        // make sure to keep the first item highlighted when `multiple`\n        if (isSelectedItem) {\n          firstSelectedItemInArrayFoundRef.value = true\n        }\n      }\n    }\n    else {\n      if (isSelectedItem || isFirstValidItem) {\n        selectedItem.value = node\n      }\n    }\n\n    if (isFirstValidItem) {\n      firstValidItemFoundRef.value = true\n    }\n  },\n  selectedItem,\n  selectedItemText,\n  onItemLeave: () => {\n    content.value?.focus()\n  },\n  itemTextRefCallback: (node, value, disabled) => {\n    const isFirstValidItem = !firstValidItemFoundRef.value && !disabled\n    const isSelectedItem = valueComparator(rootContext.modelValue.value, value, rootContext.by)\n\n    if (isSelectedItem || isFirstValidItem)\n      selectedItemText.value = node\n  },\n  focusSelectedItem,\n  position: props.position,\n  isPositioned,\n  searchRef: search,\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <FocusScope\n      as-child\n      @mount-auto-focus.prevent\n      @unmount-auto-focus=\"\n        (event) => {\n          emits('closeAutoFocus', event);\n          if (event.defaultPrevented) return;\n          rootContext.triggerElement.value?.focus({ preventScroll: true });\n          event.preventDefault();\n        }\n      \"\n    >\n      <DismissableLayer\n        as-child\n        disable-outside-pointer-events\n        @focus-outside.prevent\n        @dismiss=\"rootContext.onOpenChange(false)\"\n        @escape-key-down=\"emits('escapeKeyDown', $event)\"\n        @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n      >\n        <component\n          :is=\"\n            position === 'popper'\n              ? SelectPopperPosition\n              : SelectItemAlignedPosition\n          \"\n          v-bind=\"{ ...$attrs, ...forwardedProps }\"\n          :id=\"rootContext.contentId\"\n          :ref=\"\n            (vnode: ComponentPublicInstance) => {\n              const el = unrefElement(vnode) as HTMLElement | undefined\n              // special case for PopperContent\n              if (el?.hasAttribute('data-reka-popper-content-wrapper'))\n                content = el.firstElementChild as HTMLElement\n              else\n                content = el\n              return undefined\n            }\n          \"\n          role=\"listbox\"\n          :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n          :dir=\"rootContext.dir.value\"\n          :style=\"{\n            // flex layout so we can place the scroll buttons properly\n            display: 'flex',\n            flexDirection: 'column',\n            // reset the outline by default as the content MAY get focused\n            outline: 'none',\n          }\"\n          @contextmenu.prevent\n          @placed=\"isPositioned = true\"\n          @keydown=\"(handleKeyDown as any)\"\n        >\n          <slot />\n        </component>\n      </DismissableLayer>\n    </FocusScope>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  ComponentPublicInstance,\n  Ref,\n} from 'vue'\nimport type { PointerDownOutsideEvent } from '@/DismissableLayer'\nimport type { PopperContentProps } from '@/Popper'\nimport type { AcceptableValue } from '@/shared/types'\nimport { useCollection } from '@/Collection'\nimport {\n  createContext,\n  useFocusGuards,\n  useForwardProps,\n  useHideOthers,\n  useTypeahead,\n} from '@/shared'\nimport { useBodyScrollLock } from '@/shared/useBodyScrollLock'\nimport { valueComparator } from './utils'\n\nexport interface SelectContentContext {\n  content?: Ref<HTMLElement | undefined>\n  viewport?: Ref<HTMLElement | undefined>\n  onViewportChange: (node: HTMLElement | undefined) => void\n  itemRefCallback: (\n    node: HTMLElement | undefined,\n    value: AcceptableValue,\n    disabled: boolean\n  ) => void\n  selectedItem?: Ref<HTMLElement | undefined>\n  onItemLeave?: () => void\n  itemTextRefCallback: (\n    node: HTMLElement | undefined,\n    value: AcceptableValue,\n    disabled: boolean\n  ) => void\n  focusSelectedItem?: () => void\n  selectedItemText?: Ref<HTMLElement | undefined>\n  position?: 'item-aligned' | 'popper'\n  isPositioned?: Ref<boolean>\n  searchRef?: Ref<string>\n}\n\nexport const SelectContentDefaultContextValue: SelectContentContext = {\n  onViewportChange: () => {},\n  itemTextRefCallback: () => {},\n  itemRefCallback: () => {},\n}\n\nexport type SelectContentImplEmits = {\n  closeAutoFocus: [event: Event]\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  escapeKeyDown: [event: KeyboardEvent]\n  /**\n   * Event handler called when a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  pointerDownOutside: [event: PointerDownOutsideEvent]\n}\n\nexport interface SelectContentImplProps extends PopperContentProps {\n  /**\n   *  The positioning mode to use\n   *\n   *  `item-aligned (default)` - behaves similarly to a native MacOS menu by positioning content relative to the active item. <br>\n   *  `popper` - positions content in the same way as our other primitives, for example `Popover` or `DropdownMenu`.\n   */\n  position?: 'item-aligned' | 'popper'\n  /**\n   * The document.body will be lock, and scrolling will be disabled.\n   *\n   * @defaultValue true\n   */\n  bodyLock?: boolean\n}\n\nexport const [injectSelectContentContext, provideSelectContentContext]\n  = createContext<SelectContentContext>('SelectContent')\n</script>\n\n<script setup lang=\"ts\">\nimport { unrefElement } from '@vueuse/core'\nimport {\n  computed,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { FocusScope } from '@/FocusScope'\nimport { focusFirst } from '@/Menu/utils'\nimport SelectItemAlignedPosition from './SelectItemAlignedPosition.vue'\nimport SelectPopperPosition from './SelectPopperPosition.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\nconst props = withDefaults(defineProps<SelectContentImplProps>(), {\n  align: 'start',\n  position: 'item-aligned',\n  bodyLock: true,\n})\nconst emits = defineEmits<SelectContentImplEmits>()\n\nconst rootContext = injectSelectRootContext()\n\nuseFocusGuards()\nuseBodyScrollLock(props.bodyLock)\nconst { CollectionSlot, getItems } = useCollection()\n\nconst content = ref<HTMLElement>()\nuseHideOthers(content)\n\nconst { search, handleTypeaheadSearch } = useTypeahead()\n\nconst viewport = ref<HTMLElement>()\nconst selectedItem = ref<HTMLElement>()\nconst selectedItemText = ref<HTMLElement>()\nconst isPositioned = ref(false)\nconst firstValidItemFoundRef = ref(false)\nconst firstSelectedItemInArrayFoundRef = ref(false)\n\nfunction focusSelectedItem() {\n  if (selectedItem.value && content.value)\n    focusFirst([selectedItem.value, content.value])\n}\n\nwatch(isPositioned, () => {\n  focusSelectedItem()\n})\n\n// prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n// and close on `pointerup` outside.\nconst { onOpenChange, triggerPointerDownPosRef } = rootContext\nwatchEffect((cleanupFn) => {\n  if (!content.value)\n    return\n  let pointerMoveDelta = { x: 0, y: 0 }\n\n  const handlePointerMove = (event: PointerEvent) => {\n    pointerMoveDelta = {\n      x: Math.abs(\n        Math.round(event.pageX) - (triggerPointerDownPosRef.value?.x ?? 0),\n      ),\n      y: Math.abs(\n        Math.round(event.pageY) - (triggerPointerDownPosRef.value?.y ?? 0),\n      ),\n    }\n  }\n  const handlePointerUp = (event: PointerEvent) => {\n    // Prevent options from being untappable on touch devices\n    // https://github.com/unovue/reka-ui/issues/804\n    if (event.pointerType === 'touch')\n      return\n\n    // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n    if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n      event.preventDefault()\n    }\n    else {\n      // otherwise, if the event was outside the content, close.\n      if (!content.value?.contains(event.target as HTMLElement))\n        onOpenChange(false)\n    }\n    document.removeEventListener('pointermove', handlePointerMove)\n    triggerPointerDownPosRef.value = null\n  }\n\n  if (triggerPointerDownPosRef.value !== null) {\n    document.addEventListener('pointermove', handlePointerMove)\n    document.addEventListener('pointerup', handlePointerUp, {\n      capture: true,\n      once: true,\n    })\n  }\n\n  cleanupFn(() => {\n    document.removeEventListener('pointermove', handlePointerMove)\n    document.removeEventListener('pointerup', handlePointerUp, {\n      capture: true,\n    })\n  })\n})\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey\n\n  // select should not be navigated using tab key so we prevent it\n  if (event.key === 'Tab')\n    event.preventDefault()\n\n  if (!isModifierKey && event.key.length === 1)\n    handleTypeaheadSearch(event.key, getItems())\n\n  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n    const collectionItems = getItems().map(i => i.ref)\n    let candidateNodes = [...collectionItems]\n\n    if (['ArrowUp', 'End'].includes(event.key))\n      candidateNodes = candidateNodes.slice().reverse()\n\n    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n      const currentElement = event.target as HTMLElement\n      const currentIndex = candidateNodes.indexOf(currentElement)\n      candidateNodes = candidateNodes.slice(currentIndex + 1)\n    }\n    setTimeout(() => focusFirst(candidateNodes))\n    event.preventDefault()\n  }\n}\n\nconst pickedProps = computed(() => {\n  if (props.position === 'popper')\n    return props\n  else return {}\n})\n\nconst forwardedProps = useForwardProps(pickedProps.value)\n\nprovideSelectContentContext({\n  content,\n  viewport,\n  onViewportChange: (node) => {\n    viewport.value = node\n  },\n  itemRefCallback: (node, value, disabled) => {\n    const isFirstValidItem = !firstValidItemFoundRef.value && !disabled\n    const isSelectedItem = valueComparator(rootContext.modelValue.value, value, rootContext.by)\n\n    if (rootContext.multiple.value) {\n      if (firstSelectedItemInArrayFoundRef.value) {\n        return\n      }\n      if (isSelectedItem || isFirstValidItem) {\n        selectedItem.value = node\n\n        // make sure to keep the first item highlighted when `multiple`\n        if (isSelectedItem) {\n          firstSelectedItemInArrayFoundRef.value = true\n        }\n      }\n    }\n    else {\n      if (isSelectedItem || isFirstValidItem) {\n        selectedItem.value = node\n      }\n    }\n\n    if (isFirstValidItem) {\n      firstValidItemFoundRef.value = true\n    }\n  },\n  selectedItem,\n  selectedItemText,\n  onItemLeave: () => {\n    content.value?.focus()\n  },\n  itemTextRefCallback: (node, value, disabled) => {\n    const isFirstValidItem = !firstValidItemFoundRef.value && !disabled\n    const isSelectedItem = valueComparator(rootContext.modelValue.value, value, rootContext.by)\n\n    if (isSelectedItem || isFirstValidItem)\n      selectedItemText.value = node\n  },\n  focusSelectedItem,\n  position: props.position,\n  isPositioned,\n  searchRef: search,\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <FocusScope\n      as-child\n      @mount-auto-focus.prevent\n      @unmount-auto-focus=\"\n        (event) => {\n          emits('closeAutoFocus', event);\n          if (event.defaultPrevented) return;\n          rootContext.triggerElement.value?.focus({ preventScroll: true });\n          event.preventDefault();\n        }\n      \"\n    >\n      <DismissableLayer\n        as-child\n        disable-outside-pointer-events\n        @focus-outside.prevent\n        @dismiss=\"rootContext.onOpenChange(false)\"\n        @escape-key-down=\"emits('escapeKeyDown', $event)\"\n        @pointer-down-outside=\"emits('pointerDownOutside', $event)\"\n      >\n        <component\n          :is=\"\n            position === 'popper'\n              ? SelectPopperPosition\n              : SelectItemAlignedPosition\n          \"\n          v-bind=\"{ ...$attrs, ...forwardedProps }\"\n          :id=\"rootContext.contentId\"\n          :ref=\"\n            (vnode: ComponentPublicInstance) => {\n              const el = unrefElement(vnode) as HTMLElement | undefined\n              // special case for PopperContent\n              if (el?.hasAttribute('data-reka-popper-content-wrapper'))\n                content = el.firstElementChild as HTMLElement\n              else\n                content = el\n              return undefined\n            }\n          \"\n          role=\"listbox\"\n          :data-state=\"rootContext.open.value ? 'open' : 'closed'\"\n          :dir=\"rootContext.dir.value\"\n          :style=\"{\n            // flex layout so we can place the scroll buttons properly\n            display: 'flex',\n            flexDirection: 'column',\n            // reset the outline by default as the content MAY get focused\n            outline: 'none',\n          }\"\n          @contextmenu.prevent\n          @placed=\"isPositioned = true\"\n          @keydown=\"(handleKeyDown as any)\"\n        >\n          <slot />\n        </component>\n      </DismissableLayer>\n    </FocusScope>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useResizeObserver } from '@vueuse/core'\nimport { useCollection } from '@/Collection'\nimport { clamp, createContext, useForwardExpose } from '@/shared'\n\ninterface SelectItemAlignedPositionContext {\n  contentWrapper?: Ref<HTMLElement | undefined>\n  shouldExpandOnScrollRef?: Ref<boolean>\n  onScrollButtonChange: (node: HTMLElement | undefined) => void\n}\n\nexport interface SelectItemAlignedPositionProps extends PrimitiveProps {}\n\nexport const [injectSelectItemAlignedPositionContext, provideSelectItemAlignedPositionContext]\n  = createContext<SelectItemAlignedPositionContext>('SelectItemAlignedPosition')\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\nimport { CONTENT_MARGIN } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<SelectItemAlignedPositionProps>()\nconst emits = defineEmits<{\n  placed: []\n}>()\n\nconst { getItems } = useCollection()\nconst rootContext = injectSelectRootContext()\nconst contentContext = injectSelectContentContext()\n\nconst shouldExpandOnScrollRef = ref(false)\nconst shouldRepositionRef = ref(true)\n\nconst contentWrapperElement = ref<HTMLElement>()\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\n\nconst { viewport, selectedItem, selectedItemText, focusSelectedItem }\n  = contentContext!\n\nfunction position() {\n  if (\n    rootContext.triggerElement.value\n    && rootContext.valueElement.value\n    && contentWrapperElement.value\n    && contentElement.value\n    && viewport?.value\n    && selectedItem?.value\n    && selectedItemText?.value\n  ) {\n    const triggerRect = rootContext.triggerElement.value.getBoundingClientRect()\n\n    // -----------------------------------------------------------------------------------------\n    //  Horizontal positioning\n    // -----------------------------------------------------------------------------------------\n    const contentRect = contentElement.value.getBoundingClientRect()\n    const valueNodeRect = rootContext.valueElement.value.getBoundingClientRect()\n    const itemTextRect = selectedItemText.value.getBoundingClientRect()\n\n    if (rootContext.dir.value !== 'rtl') {\n      const itemTextOffset = itemTextRect.left - contentRect.left\n      const left = valueNodeRect.left - itemTextOffset\n      const leftDelta = triggerRect.left - left\n      const minContentWidth = triggerRect.width + leftDelta\n      const contentWidth = Math.max(minContentWidth, contentRect.width)\n      const rightEdge = window.innerWidth - CONTENT_MARGIN\n      const clampedLeft = clamp(left, CONTENT_MARGIN, Math.max(CONTENT_MARGIN, rightEdge - contentWidth))\n\n      contentWrapperElement.value.style.minWidth = `${minContentWidth}px`\n      contentWrapperElement.value.style.left = `${clampedLeft}px`\n    }\n    else {\n      const itemTextOffset = contentRect.right - itemTextRect.right\n      const right = window.innerWidth - valueNodeRect.right - itemTextOffset\n      const rightDelta = window.innerWidth - triggerRect.right - right\n      const minContentWidth = triggerRect.width + rightDelta\n      const contentWidth = Math.max(minContentWidth, contentRect.width)\n      const leftEdge = window.innerWidth - CONTENT_MARGIN\n      const clampedRight = clamp(\n        right,\n        CONTENT_MARGIN,\n        Math.max(CONTENT_MARGIN, leftEdge - contentWidth),\n      )\n\n      contentWrapperElement.value.style.minWidth = `${minContentWidth}px`\n      contentWrapperElement.value.style.right = `${clampedRight}px`\n    }\n\n    // -----------------------------------------------------------------------------------------\n    // Vertical positioning\n    // -----------------------------------------------------------------------------------------\n    const items = getItems().map(i => i.ref)\n    const availableHeight = window.innerHeight - CONTENT_MARGIN * 2\n    const itemsHeight = viewport.value.scrollHeight\n\n    const contentStyles = window.getComputedStyle(contentElement.value)\n    const contentBorderTopWidth = Number.parseInt(\n      contentStyles.borderTopWidth,\n      10,\n    )\n    const contentPaddingTop = Number.parseInt(contentStyles.paddingTop, 10)\n    const contentBorderBottomWidth = Number.parseInt(\n      contentStyles.borderBottomWidth,\n      10,\n    )\n    const contentPaddingBottom = Number.parseInt(\n      contentStyles.paddingBottom,\n      10,\n    )\n\n    const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth\n    const minContentHeight = Math.min(\n      selectedItem.value.offsetHeight * 5,\n      fullContentHeight,\n    )\n\n    const viewportStyles = window.getComputedStyle(viewport.value)\n    const viewportPaddingTop = Number.parseInt(viewportStyles.paddingTop, 10)\n    const viewportPaddingBottom = Number.parseInt(\n      viewportStyles.paddingBottom,\n      10,\n    )\n\n    const topEdgeToTriggerMiddle\n      = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN\n    const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle\n\n    const selectedItemHalfHeight = selectedItem.value.offsetHeight / 2\n    const itemOffsetMiddle\n      = selectedItem.value.offsetTop + selectedItemHalfHeight\n    const contentTopToItemMiddle\n      = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle\n    const itemMiddleToContentBottom\n      = fullContentHeight - contentTopToItemMiddle\n\n    const willAlignWithoutTopOverflow\n      = contentTopToItemMiddle <= topEdgeToTriggerMiddle\n\n    if (willAlignWithoutTopOverflow) {\n      const isLastItem = selectedItem.value === items[items.length - 1]\n      contentWrapperElement.value.style.bottom = `${0}px`\n      const viewportOffsetBottom\n        = contentElement.value.clientHeight\n          - viewport.value.offsetTop\n          - viewport.value.offsetHeight\n      const clampedTriggerMiddleToBottomEdge = Math.max(\n        triggerMiddleToBottomEdge,\n        selectedItemHalfHeight\n        // viewport might have padding bottom, include it to avoid a scrollable viewport\n        + (isLastItem ? viewportPaddingBottom : 0)\n        + viewportOffsetBottom\n        + contentBorderBottomWidth,\n      )\n      const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge\n      contentWrapperElement.value.style.height = `${height}px`\n    }\n    else {\n      const isFirstItem = selectedItem.value === items[0]\n      contentWrapperElement.value.style.top = `${0}px`\n      const clampedTopEdgeToTriggerMiddle = Math.max(\n        topEdgeToTriggerMiddle,\n        contentBorderTopWidth\n        + viewport.value.offsetTop\n        // viewport might have padding top, include it to avoid a scrollable viewport\n        + (isFirstItem ? viewportPaddingTop : 0)\n        + selectedItemHalfHeight,\n      )\n      const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom\n      contentWrapperElement.value.style.height = `${height}px`\n      viewport.value.scrollTop\n        = contentTopToItemMiddle\n          - topEdgeToTriggerMiddle\n          + viewport.value.offsetTop\n    }\n\n    contentWrapperElement.value.style.margin = `${CONTENT_MARGIN}px 0`\n    contentWrapperElement.value.style.minHeight = `${minContentHeight}px`\n    contentWrapperElement.value.style.maxHeight = `${availableHeight}px`\n    // -----------------------------------------------------------------------------------------\n\n    emits('placed')\n\n    // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n    // so we explicitly turn it on only after they've registered.\n    requestAnimationFrame(() => (shouldExpandOnScrollRef.value = true))\n  }\n}\n\n// copy z-index from content to wrapper\nconst contentZIndex = ref('')\n\nonMounted(async () => {\n  await nextTick()\n  position()\n  if (contentElement.value)\n    contentZIndex.value = window.getComputedStyle(contentElement.value).zIndex\n})\n\n// When the viewport becomes scrollable at the top, the scroll up button will mount.\n// Because it is part of the normal flow, it will push down the viewport, thus throwing our\n// trigger => selectedItem alignment off by the amount the viewport was pushed down.\n// We wait for this to happen and then re-run the positining logic one more time to account for it.\nfunction handleScrollButtonChange(node: HTMLElement | undefined) {\n  if (node && shouldRepositionRef.value === true) {\n    position()\n    focusSelectedItem?.()\n    shouldRepositionRef.value = false\n  }\n}\n\n// Resize and position when trigger element changes\nuseResizeObserver(rootContext.triggerElement, () => {\n  position()\n})\n\nprovideSelectItemAlignedPositionContext({\n  contentWrapper: contentWrapperElement,\n  shouldExpandOnScrollRef,\n  onScrollButtonChange: handleScrollButtonChange,\n})\n</script>\n\n<template>\n  <div\n    ref=\"contentWrapperElement\"\n    :style=\"{\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'fixed',\n      zIndex: contentZIndex,\n    }\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :style=\"{\n        // When we get the height of the content, it includes borders. If we were to set\n        // the height without having `boxSizing: 'border-box'` it would be too big.\n        boxSizing: 'border-box',\n        // We need to ensure the content doesn't get taller than the wrapper\n        maxHeight: '100%',\n      }\"\n      v-bind=\"{ ...$attrs, ...props }\"\n    >\n      <slot />\n    </Primitive>\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useResizeObserver } from '@vueuse/core'\nimport { useCollection } from '@/Collection'\nimport { clamp, createContext, useForwardExpose } from '@/shared'\n\ninterface SelectItemAlignedPositionContext {\n  contentWrapper?: Ref<HTMLElement | undefined>\n  shouldExpandOnScrollRef?: Ref<boolean>\n  onScrollButtonChange: (node: HTMLElement | undefined) => void\n}\n\nexport interface SelectItemAlignedPositionProps extends PrimitiveProps {}\n\nexport const [injectSelectItemAlignedPositionContext, provideSelectItemAlignedPositionContext]\n  = createContext<SelectItemAlignedPositionContext>('SelectItemAlignedPosition')\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\nimport { CONTENT_MARGIN } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<SelectItemAlignedPositionProps>()\nconst emits = defineEmits<{\n  placed: []\n}>()\n\nconst { getItems } = useCollection()\nconst rootContext = injectSelectRootContext()\nconst contentContext = injectSelectContentContext()\n\nconst shouldExpandOnScrollRef = ref(false)\nconst shouldRepositionRef = ref(true)\n\nconst contentWrapperElement = ref<HTMLElement>()\nconst { forwardRef, currentElement: contentElement } = useForwardExpose()\n\nconst { viewport, selectedItem, selectedItemText, focusSelectedItem }\n  = contentContext!\n\nfunction position() {\n  if (\n    rootContext.triggerElement.value\n    && rootContext.valueElement.value\n    && contentWrapperElement.value\n    && contentElement.value\n    && viewport?.value\n    && selectedItem?.value\n    && selectedItemText?.value\n  ) {\n    const triggerRect = rootContext.triggerElement.value.getBoundingClientRect()\n\n    // -----------------------------------------------------------------------------------------\n    //  Horizontal positioning\n    // -----------------------------------------------------------------------------------------\n    const contentRect = contentElement.value.getBoundingClientRect()\n    const valueNodeRect = rootContext.valueElement.value.getBoundingClientRect()\n    const itemTextRect = selectedItemText.value.getBoundingClientRect()\n\n    if (rootContext.dir.value !== 'rtl') {\n      const itemTextOffset = itemTextRect.left - contentRect.left\n      const left = valueNodeRect.left - itemTextOffset\n      const leftDelta = triggerRect.left - left\n      const minContentWidth = triggerRect.width + leftDelta\n      const contentWidth = Math.max(minContentWidth, contentRect.width)\n      const rightEdge = window.innerWidth - CONTENT_MARGIN\n      const clampedLeft = clamp(left, CONTENT_MARGIN, Math.max(CONTENT_MARGIN, rightEdge - contentWidth))\n\n      contentWrapperElement.value.style.minWidth = `${minContentWidth}px`\n      contentWrapperElement.value.style.left = `${clampedLeft}px`\n    }\n    else {\n      const itemTextOffset = contentRect.right - itemTextRect.right\n      const right = window.innerWidth - valueNodeRect.right - itemTextOffset\n      const rightDelta = window.innerWidth - triggerRect.right - right\n      const minContentWidth = triggerRect.width + rightDelta\n      const contentWidth = Math.max(minContentWidth, contentRect.width)\n      const leftEdge = window.innerWidth - CONTENT_MARGIN\n      const clampedRight = clamp(\n        right,\n        CONTENT_MARGIN,\n        Math.max(CONTENT_MARGIN, leftEdge - contentWidth),\n      )\n\n      contentWrapperElement.value.style.minWidth = `${minContentWidth}px`\n      contentWrapperElement.value.style.right = `${clampedRight}px`\n    }\n\n    // -----------------------------------------------------------------------------------------\n    // Vertical positioning\n    // -----------------------------------------------------------------------------------------\n    const items = getItems().map(i => i.ref)\n    const availableHeight = window.innerHeight - CONTENT_MARGIN * 2\n    const itemsHeight = viewport.value.scrollHeight\n\n    const contentStyles = window.getComputedStyle(contentElement.value)\n    const contentBorderTopWidth = Number.parseInt(\n      contentStyles.borderTopWidth,\n      10,\n    )\n    const contentPaddingTop = Number.parseInt(contentStyles.paddingTop, 10)\n    const contentBorderBottomWidth = Number.parseInt(\n      contentStyles.borderBottomWidth,\n      10,\n    )\n    const contentPaddingBottom = Number.parseInt(\n      contentStyles.paddingBottom,\n      10,\n    )\n\n    const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth\n    const minContentHeight = Math.min(\n      selectedItem.value.offsetHeight * 5,\n      fullContentHeight,\n    )\n\n    const viewportStyles = window.getComputedStyle(viewport.value)\n    const viewportPaddingTop = Number.parseInt(viewportStyles.paddingTop, 10)\n    const viewportPaddingBottom = Number.parseInt(\n      viewportStyles.paddingBottom,\n      10,\n    )\n\n    const topEdgeToTriggerMiddle\n      = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN\n    const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle\n\n    const selectedItemHalfHeight = selectedItem.value.offsetHeight / 2\n    const itemOffsetMiddle\n      = selectedItem.value.offsetTop + selectedItemHalfHeight\n    const contentTopToItemMiddle\n      = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle\n    const itemMiddleToContentBottom\n      = fullContentHeight - contentTopToItemMiddle\n\n    const willAlignWithoutTopOverflow\n      = contentTopToItemMiddle <= topEdgeToTriggerMiddle\n\n    if (willAlignWithoutTopOverflow) {\n      const isLastItem = selectedItem.value === items[items.length - 1]\n      contentWrapperElement.value.style.bottom = `${0}px`\n      const viewportOffsetBottom\n        = contentElement.value.clientHeight\n          - viewport.value.offsetTop\n          - viewport.value.offsetHeight\n      const clampedTriggerMiddleToBottomEdge = Math.max(\n        triggerMiddleToBottomEdge,\n        selectedItemHalfHeight\n        // viewport might have padding bottom, include it to avoid a scrollable viewport\n        + (isLastItem ? viewportPaddingBottom : 0)\n        + viewportOffsetBottom\n        + contentBorderBottomWidth,\n      )\n      const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge\n      contentWrapperElement.value.style.height = `${height}px`\n    }\n    else {\n      const isFirstItem = selectedItem.value === items[0]\n      contentWrapperElement.value.style.top = `${0}px`\n      const clampedTopEdgeToTriggerMiddle = Math.max(\n        topEdgeToTriggerMiddle,\n        contentBorderTopWidth\n        + viewport.value.offsetTop\n        // viewport might have padding top, include it to avoid a scrollable viewport\n        + (isFirstItem ? viewportPaddingTop : 0)\n        + selectedItemHalfHeight,\n      )\n      const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom\n      contentWrapperElement.value.style.height = `${height}px`\n      viewport.value.scrollTop\n        = contentTopToItemMiddle\n          - topEdgeToTriggerMiddle\n          + viewport.value.offsetTop\n    }\n\n    contentWrapperElement.value.style.margin = `${CONTENT_MARGIN}px 0`\n    contentWrapperElement.value.style.minHeight = `${minContentHeight}px`\n    contentWrapperElement.value.style.maxHeight = `${availableHeight}px`\n    // -----------------------------------------------------------------------------------------\n\n    emits('placed')\n\n    // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n    // so we explicitly turn it on only after they've registered.\n    requestAnimationFrame(() => (shouldExpandOnScrollRef.value = true))\n  }\n}\n\n// copy z-index from content to wrapper\nconst contentZIndex = ref('')\n\nonMounted(async () => {\n  await nextTick()\n  position()\n  if (contentElement.value)\n    contentZIndex.value = window.getComputedStyle(contentElement.value).zIndex\n})\n\n// When the viewport becomes scrollable at the top, the scroll up button will mount.\n// Because it is part of the normal flow, it will push down the viewport, thus throwing our\n// trigger => selectedItem alignment off by the amount the viewport was pushed down.\n// We wait for this to happen and then re-run the positining logic one more time to account for it.\nfunction handleScrollButtonChange(node: HTMLElement | undefined) {\n  if (node && shouldRepositionRef.value === true) {\n    position()\n    focusSelectedItem?.()\n    shouldRepositionRef.value = false\n  }\n}\n\n// Resize and position when trigger element changes\nuseResizeObserver(rootContext.triggerElement, () => {\n  position()\n})\n\nprovideSelectItemAlignedPositionContext({\n  contentWrapper: contentWrapperElement,\n  shouldExpandOnScrollRef,\n  onScrollButtonChange: handleScrollButtonChange,\n})\n</script>\n\n<template>\n  <div\n    ref=\"contentWrapperElement\"\n    :style=\"{\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'fixed',\n      zIndex: contentZIndex,\n    }\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :style=\"{\n        // When we get the height of the content, it includes borders. If we were to set\n        // the height without having `boxSizing: 'border-box'` it would be too big.\n        boxSizing: 'border-box',\n        // We need to ensure the content doesn't get taller than the wrapper\n        maxHeight: '100%',\n      }\"\n      v-bind=\"{ ...$attrs, ...props }\"\n    >\n      <slot />\n    </Primitive>\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\n\nexport interface SelectArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\nimport { injectSelectContentContext, SelectContentDefaultContextValue } from './SelectContentImpl.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\nconst props = withDefaults(defineProps<SelectArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nconst rootContext = injectSelectRootContext()\nconst contentContext = injectSelectContentContext(SelectContentDefaultContextValue)\n</script>\n\n<template>\n  <PopperArrow\n    v-if=\"rootContext.open.value && contentContext.position === 'popper'\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PopperArrowProps } from '@/Popper'\n\nexport interface SelectArrowProps extends PopperArrowProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\nimport { injectSelectContentContext, SelectContentDefaultContextValue } from './SelectContentImpl.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\nconst props = withDefaults(defineProps<SelectArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nconst rootContext = injectSelectRootContext()\nconst contentContext = injectSelectContentContext(SelectContentDefaultContextValue)\n</script>\n\n<template>\n  <PopperArrow\n    v-if=\"rootContext.open.value && contentContext.position === 'popper'\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </PopperArrow>\n</template>\n", "<script setup lang=\"ts\">\nimport type { SelectRootContext } from './SelectRoot.vue'\nimport type { AcceptableValue } from '@/shared/types'\nimport { provideSelectContentContext, SelectContentDefaultContextValue } from './SelectContentImpl.vue'\nimport { provideSelectRootContext } from './SelectRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<{\n  context: SelectRootContext<AcceptableValue>\n}>()\n\nprovideSelectRootContext(props.context)\nprovideSelectContentContext(SelectContentDefaultContextValue)\n</script>\n\n<template>\n  <slot />\n</template>\n", "<script setup lang=\"ts\">\nimport type { SelectRootContext } from './SelectRoot.vue'\nimport type { AcceptableValue } from '@/shared/types'\nimport { provideSelectContentContext, SelectContentDefaultContextValue } from './SelectContentImpl.vue'\nimport { provideSelectRootContext } from './SelectRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<{\n  context: SelectRootContext<AcceptableValue>\n}>()\n\nprovideSelectRootContext(props.context)\nprovideSelectContentContext(SelectContentDefaultContextValue)\n</script>\n\n<template>\n  <slot />\n</template>\n", "<script lang=\"ts\">\nimport type {\n  SelectContentImplEmits,\n  SelectContentImplProps,\n} from './SelectContentImpl.vue'\nimport { computed, onMounted, ref, watch } from 'vue'\n\nexport type SelectContentEmits = SelectContentImplEmits\n\nexport interface SelectContentProps extends SelectContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardPropsEmits } from '@/shared'\nimport SelectContentImpl from './SelectContentImpl.vue'\nimport SelectProvider from './SelectProvider.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<SelectContentProps>()\n\nconst emits = defineEmits<SelectContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst rootContext = injectSelectRootContext()\n\nconst fragment = ref<DocumentFragment>()\nonMounted(() => {\n  fragment.value = new DocumentFragment()\n})\n\nconst presenceRef = ref<InstanceType<typeof Presence>>()\n\nconst present = computed(() => props.forceMount || rootContext.open.value)\nconst renderPresence = ref(present.value)\n\nwatch(present, () => {\n  // Toggle render presence after a delay (nextTick is not enough)\n  // to allow children to re-render with the latest state.\n  // Otherwise, they would remain in the old state during the transition,\n  // which would prevent the animation that depend on state (e.g., data-[state=closed])\n  // from being applied accurately.\n  // @see https://github.com/unovue/reka-ui/issues/1865\n  setTimeout(() => renderPresence.value = present.value)\n})\n</script>\n\n<template>\n  <Presence\n    v-if=\"present || renderPresence || presenceRef?.present\"\n    ref=\"presenceRef\"\n    :present=\"present\"\n  >\n    <SelectContentImpl v-bind=\"{ ...forwarded, ...$attrs }\">\n      <slot />\n    </SelectContentImpl>\n  </Presence>\n\n  <div v-else-if=\"fragment\">\n    <Teleport :to=\"fragment\">\n      <SelectProvider :context=\"rootContext\">\n        <slot />\n      </SelectProvider>\n    </Teleport>\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  SelectContentImplEmits,\n  SelectContentImplProps,\n} from './SelectContentImpl.vue'\nimport { computed, onMounted, ref, watch } from 'vue'\n\nexport type SelectContentEmits = SelectContentImplEmits\n\nexport interface SelectContentProps extends SelectContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardPropsEmits } from '@/shared'\nimport SelectContentImpl from './SelectContentImpl.vue'\nimport SelectProvider from './SelectProvider.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<SelectContentProps>()\n\nconst emits = defineEmits<SelectContentEmits>()\nconst forwarded = useForwardPropsEmits(props, emits)\n\nconst rootContext = injectSelectRootContext()\n\nconst fragment = ref<DocumentFragment>()\nonMounted(() => {\n  fragment.value = new DocumentFragment()\n})\n\nconst presenceRef = ref<InstanceType<typeof Presence>>()\n\nconst present = computed(() => props.forceMount || rootContext.open.value)\nconst renderPresence = ref(present.value)\n\nwatch(present, () => {\n  // Toggle render presence after a delay (nextTick is not enough)\n  // to allow children to re-render with the latest state.\n  // Otherwise, they would remain in the old state during the transition,\n  // which would prevent the animation that depend on state (e.g., data-[state=closed])\n  // from being applied accurately.\n  // @see https://github.com/unovue/reka-ui/issues/1865\n  setTimeout(() => renderPresence.value = present.value)\n})\n</script>\n\n<template>\n  <Presence\n    v-if=\"present || renderPresence || presenceRef?.present\"\n    ref=\"presenceRef\"\n    :present=\"present\"\n  >\n    <SelectContentImpl v-bind=\"{ ...forwarded, ...$attrs }\">\n      <slot />\n    </SelectContentImpl>\n  </Presence>\n\n  <div v-else-if=\"fragment\">\n    <Teleport :to=\"fragment\">\n      <SelectProvider :context=\"rootContext\">\n        <slot />\n      </SelectProvider>\n    </Teleport>\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useId } from '@/shared'\n\nexport interface SelectGroupProps extends PrimitiveProps {}\n\ninterface SelectGroupContext {\n  id: string\n}\n\nexport const [injectSelectGroupContext, provideSelectGroupContext]\n  = createContext<SelectGroupContext>('SelectGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<SelectGroupProps>()\n\nconst id = useId(undefined, 'reka-select-group')\nprovideSelectGroupContext({ id })\n</script>\n\n<template>\n  <Primitive\n    role=\"group\"\n    v-bind=\"props\"\n    :aria-labelledby=\"id\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useId } from '@/shared'\n\nexport interface SelectGroupProps extends PrimitiveProps {}\n\ninterface SelectGroupContext {\n  id: string\n}\n\nexport const [injectSelectGroupContext, provideSelectGroupContext]\n  = createContext<SelectGroupContext>('SelectGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<SelectGroupProps>()\n\nconst id = useId(undefined, 'reka-select-group')\nprovideSelectGroupContext({ id })\n</script>\n\n<template>\n  <Primitive\n    role=\"group\"\n    v-bind=\"props\"\n    :aria-labelledby=\"id\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SelectIconProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nwithDefaults(defineProps<SelectIconProps>(), {\n  as: 'span',\n})\n</script>\n\n<template>\n  <Primitive\n    aria-hidden=\"true\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n  >\n    <slot>▼</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SelectIconProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nwithDefaults(defineProps<SelectIconProps>(), {\n  as: 'span',\n})\n</script>\n\n<template>\n  <Primitive\n    aria-hidden=\"true\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n  >\n    <slot>▼</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue } from '@/shared/types'\nimport { useCollection } from '@/Collection'\nimport { createContext, getActiveElement, handleAndDispatchCustomEvent, useForwardExpose, useId } from '@/shared'\n\ninterface SelectItemContext<T = AcceptableValue> {\n  value: T\n  textId: string\n  disabled: Ref<boolean>\n  isSelected: Ref<boolean>\n  onItemTextChange: (node: HTMLElement | undefined) => void\n}\n\nexport const [injectSelectItemContext, provideSelectItemContext]\n    = createContext<SelectItemContext>('SelectItem')\n\nexport type SelectEvent<T> = CustomEvent<{ originalEvent: PointerEvent | KeyboardEvent, value?: T }>\n\nexport type SelectItemEmits<T = AcceptableValue> = {\n  /** Event handler called when the selecting item. <br> It can be prevented by calling `event.preventDefault`. */\n  select: [event: SelectEvent<T>]\n}\n\nexport interface SelectItemProps<T = AcceptableValue> extends PrimitiveProps {\n  /** The value given as data when submitted with a `name`. */\n  value: T\n  /** When `true`, prevents the user from interacting with the item. */\n  disabled?: boolean\n  /**\n   * Optional text used for typeahead purposes.\n   *\n   * By default the typeahead behavior will use the `.textContent` of the `SelectItemText` part.\n   *\n   * Use this when the content is complex, or you have non-textual content inside.\n   */\n  textValue?: string\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  ref,\n  toRefs,\n} from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\nimport { SELECTION_KEYS, valueComparator } from './utils'\n\nconst props = defineProps<SelectItemProps>()\nconst emits = defineEmits<SelectItemEmits<T>>()\nconst { disabled } = toRefs(props)\n\nconst rootContext = injectSelectRootContext()\nconst contentContext = injectSelectContentContext()\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst isSelected = computed(() => valueComparator(rootContext.modelValue?.value, props.value, rootContext.by))\nconst isFocused = ref(false)\nconst textValue = ref(props.textValue ?? '')\nconst textId = useId(undefined, 'reka-select-item-text')\n\nconst SELECT_SELECT = 'select.select'\n\nasync function handleSelectCustomEvent(ev: PointerEvent | KeyboardEvent) {\n  if (ev.defaultPrevented)\n    return\n\n  const eventDetail = { originalEvent: ev, value: props.value as T }\n  handleAndDispatchCustomEvent(SELECT_SELECT, handleSelect, eventDetail)\n}\n\nasync function handleSelect(ev: SelectEvent<T>) {\n  await nextTick()\n  emits('select', ev)\n  if (ev.defaultPrevented)\n    return\n\n  if (!disabled.value) {\n    rootContext.onValueChange(props.value)\n    if (!rootContext.multiple.value)\n      rootContext.onOpenChange(false)\n  }\n}\n\nasync function handlePointerMove(event: PointerEvent) {\n  await nextTick()\n  if (event.defaultPrevented)\n    return\n  if (disabled.value) {\n    contentContext.onItemLeave?.()\n  }\n  else {\n    // even though safari doesn't support this option, it's acceptable\n    // as it only means it might scroll a few pixels when using the pointer.\n    (event.currentTarget as HTMLElement | null)?.focus({ preventScroll: true })\n  }\n}\n\nasync function handlePointerLeave(event: PointerEvent) {\n  await nextTick()\n  if (event.defaultPrevented)\n    return\n  if (event.currentTarget === getActiveElement())\n    contentContext.onItemLeave?.()\n}\n\nasync function handleKeyDown(event: KeyboardEvent) {\n  await nextTick()\n  if (event.defaultPrevented)\n    return\n  const isTypingAhead = contentContext.searchRef?.value !== ''\n  if (isTypingAhead && event.key === ' ')\n    return\n  if (SELECTION_KEYS.includes(event.key))\n    handleSelectCustomEvent(event)\n  // prevent page scroll if using the space key to select an item\n  if (event.key === ' ')\n    event.preventDefault()\n}\n\nif (props.value === '') {\n  throw new Error(\n    'A <SelectItem /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.',\n  )\n}\n\nonMounted(() => {\n  if (!currentElement.value)\n    return\n  contentContext.itemRefCallback(\n    currentElement.value,\n    props.value,\n    props.disabled,\n  )\n})\n\nprovideSelectItemContext({\n  value: props.value,\n  disabled,\n  textId,\n  isSelected,\n  onItemTextChange: (node) => {\n    textValue.value = ((textValue.value || node?.textContent) ?? '').trim()\n  },\n})\n</script>\n\n<template>\n  <CollectionItem :value=\"{ textValue }\">\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"option\"\n      :aria-labelledby=\"textId\"\n      :data-highlighted=\"isFocused ? '' : undefined\"\n      :aria-selected=\"isSelected\"\n      :data-state=\"isSelected ? 'checked' : 'unchecked'\"\n      :aria-disabled=\"disabled || undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :tabindex=\"disabled ? undefined : -1\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n      @pointerup=\"handleSelectCustomEvent\"\n      @pointerdown=\"(event) => {\n        (event.currentTarget as HTMLElement).focus({ preventScroll: true })\n      }\"\n      @touchend.prevent.stop\n      @pointermove=\"handlePointerMove\"\n      @pointerleave=\"handlePointerLeave\"\n      @keydown=\"handleKeyDown\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue } from '@/shared/types'\nimport { useCollection } from '@/Collection'\nimport { createContext, getActiveElement, handleAndDispatchCustomEvent, useForwardExpose, useId } from '@/shared'\n\ninterface SelectItemContext<T = AcceptableValue> {\n  value: T\n  textId: string\n  disabled: Ref<boolean>\n  isSelected: Ref<boolean>\n  onItemTextChange: (node: HTMLElement | undefined) => void\n}\n\nexport const [injectSelectItemContext, provideSelectItemContext]\n    = createContext<SelectItemContext>('SelectItem')\n\nexport type SelectEvent<T> = CustomEvent<{ originalEvent: PointerEvent | KeyboardEvent, value?: T }>\n\nexport type SelectItemEmits<T = AcceptableValue> = {\n  /** Event handler called when the selecting item. <br> It can be prevented by calling `event.preventDefault`. */\n  select: [event: SelectEvent<T>]\n}\n\nexport interface SelectItemProps<T = AcceptableValue> extends PrimitiveProps {\n  /** The value given as data when submitted with a `name`. */\n  value: T\n  /** When `true`, prevents the user from interacting with the item. */\n  disabled?: boolean\n  /**\n   * Optional text used for typeahead purposes.\n   *\n   * By default the typeahead behavior will use the `.textContent` of the `SelectItemText` part.\n   *\n   * Use this when the content is complex, or you have non-textual content inside.\n   */\n  textValue?: string\n}\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableValue = AcceptableValue\">\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  ref,\n  toRefs,\n} from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectRootContext } from './SelectRoot.vue'\nimport { SELECTION_KEYS, valueComparator } from './utils'\n\nconst props = defineProps<SelectItemProps>()\nconst emits = defineEmits<SelectItemEmits<T>>()\nconst { disabled } = toRefs(props)\n\nconst rootContext = injectSelectRootContext()\nconst contentContext = injectSelectContentContext()\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst isSelected = computed(() => valueComparator(rootContext.modelValue?.value, props.value, rootContext.by))\nconst isFocused = ref(false)\nconst textValue = ref(props.textValue ?? '')\nconst textId = useId(undefined, 'reka-select-item-text')\n\nconst SELECT_SELECT = 'select.select'\n\nasync function handleSelectCustomEvent(ev: PointerEvent | KeyboardEvent) {\n  if (ev.defaultPrevented)\n    return\n\n  const eventDetail = { originalEvent: ev, value: props.value as T }\n  handleAndDispatchCustomEvent(SELECT_SELECT, handleSelect, eventDetail)\n}\n\nasync function handleSelect(ev: SelectEvent<T>) {\n  await nextTick()\n  emits('select', ev)\n  if (ev.defaultPrevented)\n    return\n\n  if (!disabled.value) {\n    rootContext.onValueChange(props.value)\n    if (!rootContext.multiple.value)\n      rootContext.onOpenChange(false)\n  }\n}\n\nasync function handlePointerMove(event: PointerEvent) {\n  await nextTick()\n  if (event.defaultPrevented)\n    return\n  if (disabled.value) {\n    contentContext.onItemLeave?.()\n  }\n  else {\n    // even though safari doesn't support this option, it's acceptable\n    // as it only means it might scroll a few pixels when using the pointer.\n    (event.currentTarget as HTMLElement | null)?.focus({ preventScroll: true })\n  }\n}\n\nasync function handlePointerLeave(event: PointerEvent) {\n  await nextTick()\n  if (event.defaultPrevented)\n    return\n  if (event.currentTarget === getActiveElement())\n    contentContext.onItemLeave?.()\n}\n\nasync function handleKeyDown(event: KeyboardEvent) {\n  await nextTick()\n  if (event.defaultPrevented)\n    return\n  const isTypingAhead = contentContext.searchRef?.value !== ''\n  if (isTypingAhead && event.key === ' ')\n    return\n  if (SELECTION_KEYS.includes(event.key))\n    handleSelectCustomEvent(event)\n  // prevent page scroll if using the space key to select an item\n  if (event.key === ' ')\n    event.preventDefault()\n}\n\nif (props.value === '') {\n  throw new Error(\n    'A <SelectItem /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.',\n  )\n}\n\nonMounted(() => {\n  if (!currentElement.value)\n    return\n  contentContext.itemRefCallback(\n    currentElement.value,\n    props.value,\n    props.disabled,\n  )\n})\n\nprovideSelectItemContext({\n  value: props.value,\n  disabled,\n  textId,\n  isSelected,\n  onItemTextChange: (node) => {\n    textValue.value = ((textValue.value || node?.textContent) ?? '').trim()\n  },\n})\n</script>\n\n<template>\n  <CollectionItem :value=\"{ textValue }\">\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"option\"\n      :aria-labelledby=\"textId\"\n      :data-highlighted=\"isFocused ? '' : undefined\"\n      :aria-selected=\"isSelected\"\n      :data-state=\"isSelected ? 'checked' : 'unchecked'\"\n      :aria-disabled=\"disabled || undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :tabindex=\"disabled ? undefined : -1\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n      @pointerup=\"handleSelectCustomEvent\"\n      @pointerdown=\"(event) => {\n        (event.currentTarget as HTMLElement).focus({ preventScroll: true })\n      }\"\n      @touchend.prevent.stop\n      @pointermove=\"handlePointerMove\"\n      @pointerleave=\"handlePointerLeave\"\n      @keydown=\"handleKeyDown\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SelectItemIndicatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSelectItemContext } from './SelectItem.vue'\n\nconst props = withDefaults(defineProps<SelectItemIndicatorProps>(), {\n  as: 'span',\n})\n\nconst itemContext = injectSelectItemContext()\n</script>\n\n<template>\n  <Primitive\n    v-if=\"itemContext.isSelected.value\"\n    aria-hidden=\"true\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SelectItemIndicatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSelectItemContext } from './SelectItem.vue'\n\nconst props = withDefaults(defineProps<SelectItemIndicatorProps>(), {\n  as: 'span',\n})\n\nconst itemContext = injectSelectItemContext()\n</script>\n\n<template>\n  <Primitive\n    v-if=\"itemContext.isSelected.value\"\n    aria-hidden=\"true\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\nexport interface SelectItemTextProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectItemContext } from './SelectItem.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<SelectItemTextProps>(), {\n  as: 'span',\n})\n\nconst rootContext = injectSelectRootContext()\nconst contentContext = injectSelectContentContext()\nconst itemContext = injectSelectItemContext()\n\nconst { forwardRef, currentElement: itemTextElement } = useForwardExpose()\n\nconst optionProps = computed(() => {\n  return {\n    value: itemContext.value,\n    disabled: itemContext.disabled.value,\n    textContent: itemTextElement.value?.textContent ?? itemContext.value?.toString() ?? '',\n  }\n})\n\nonMounted(() => {\n  if (!itemTextElement.value)\n    return\n  itemContext.onItemTextChange(itemTextElement.value)\n  contentContext.itemTextRefCallback(\n    itemTextElement.value,\n    itemContext.value,\n    itemContext.disabled.value,\n  )\n  rootContext.onOptionAdd(optionProps.value)\n})\n\nonUnmounted(() => {\n  rootContext.onOptionRemove(optionProps.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :id=\"itemContext.textId\"\n    :ref=\"forwardRef\"\n    v-bind=\"{ ...props, ...$attrs }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\nexport interface SelectItemTextProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectItemContext } from './SelectItem.vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<SelectItemTextProps>(), {\n  as: 'span',\n})\n\nconst rootContext = injectSelectRootContext()\nconst contentContext = injectSelectContentContext()\nconst itemContext = injectSelectItemContext()\n\nconst { forwardRef, currentElement: itemTextElement } = useForwardExpose()\n\nconst optionProps = computed(() => {\n  return {\n    value: itemContext.value,\n    disabled: itemContext.disabled.value,\n    textContent: itemTextElement.value?.textContent ?? itemContext.value?.toString() ?? '',\n  }\n})\n\nonMounted(() => {\n  if (!itemTextElement.value)\n    return\n  itemContext.onItemTextChange(itemTextElement.value)\n  contentContext.itemTextRefCallback(\n    itemTextElement.value,\n    itemContext.value,\n    itemContext.disabled.value,\n  )\n  rootContext.onOptionAdd(optionProps.value)\n})\n\nonUnmounted(() => {\n  rootContext.onOptionRemove(optionProps.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :id=\"itemContext.textId\"\n    :ref=\"forwardRef\"\n    v-bind=\"{ ...props, ...$attrs }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SelectLabelProps extends PrimitiveProps {\n  for?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSelectGroupContext } from './SelectGroup.vue'\n\nconst props = withDefaults(defineProps<SelectLabelProps>(), {\n  as: 'div',\n})\n\nconst groupContext = injectSelectGroupContext({ id: '' })\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"groupContext.id\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SelectLabelProps extends PrimitiveProps {\n  for?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSelectGroupContext } from './SelectGroup.vue'\n\nconst props = withDefaults(defineProps<SelectLabelProps>(), {\n  as: 'div',\n})\n\nconst groupContext = injectSelectGroupContext({ id: '' })\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"groupContext.id\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface SelectPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<SelectPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface SelectPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<SelectPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script setup lang=\"ts\">\nimport { onBeforeUnmount, ref, watchEffect } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { getActiveElement } from '@/shared'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\n\nexport type SelectScrollButtonImplEmits = {\n  autoScroll: []\n}\n\nconst emits = defineEmits<SelectScrollButtonImplEmits>()\nconst { getItems } = useCollection()\n\nconst contentContext = injectSelectContentContext()\nconst autoScrollTimerRef = ref<number | null>(null)\n\nfunction clearAutoScrollTimer() {\n  if (autoScrollTimerRef.value !== null) {\n    window.clearInterval(autoScrollTimerRef.value)\n    autoScrollTimerRef.value = null\n  }\n}\n\nwatchEffect(() => {\n  const activeItem = getItems().map(i => i.ref).find(\n    item => item === getActiveElement(),\n  )\n  activeItem?.scrollIntoView({ block: 'nearest' })\n})\n\nfunction handlePointerDown() {\n  if (autoScrollTimerRef.value === null) {\n    autoScrollTimerRef.value = window.setInterval(() => {\n      emits('autoScroll')\n    }, 50)\n  }\n}\n\nfunction handlePointerMove() {\n  contentContext.onItemLeave?.()\n  if (autoScrollTimerRef.value === null) {\n    autoScrollTimerRef.value = window.setInterval(() => {\n      emits('autoScroll')\n    }, 50)\n  }\n}\n\nonBeforeUnmount(() => clearAutoScrollTimer())\n</script>\n\n<template>\n  <Primitive\n    aria-hidden=\"true\"\n    :style=\"{\n      flexShrink: 0,\n    }\"\n    v-bind=\"$parent?.$props\"\n    @pointerdown=\"handlePointerDown\"\n    @pointermove=\"handlePointerMove\"\n    @pointerleave=\"\n      () => {\n        clearAutoScrollTimer();\n      }\n    \"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script setup lang=\"ts\">\nimport { onBeforeUnmount, ref, watchEffect } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { getActiveElement } from '@/shared'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\n\nexport type SelectScrollButtonImplEmits = {\n  autoScroll: []\n}\n\nconst emits = defineEmits<SelectScrollButtonImplEmits>()\nconst { getItems } = useCollection()\n\nconst contentContext = injectSelectContentContext()\nconst autoScrollTimerRef = ref<number | null>(null)\n\nfunction clearAutoScrollTimer() {\n  if (autoScrollTimerRef.value !== null) {\n    window.clearInterval(autoScrollTimerRef.value)\n    autoScrollTimerRef.value = null\n  }\n}\n\nwatchEffect(() => {\n  const activeItem = getItems().map(i => i.ref).find(\n    item => item === getActiveElement(),\n  )\n  activeItem?.scrollIntoView({ block: 'nearest' })\n})\n\nfunction handlePointerDown() {\n  if (autoScrollTimerRef.value === null) {\n    autoScrollTimerRef.value = window.setInterval(() => {\n      emits('autoScroll')\n    }, 50)\n  }\n}\n\nfunction handlePointerMove() {\n  contentContext.onItemLeave?.()\n  if (autoScrollTimerRef.value === null) {\n    autoScrollTimerRef.value = window.setInterval(() => {\n      emits('autoScroll')\n    }, 50)\n  }\n}\n\nonBeforeUnmount(() => clearAutoScrollTimer())\n</script>\n\n<template>\n  <Primitive\n    aria-hidden=\"true\"\n    :style=\"{\n      flexShrink: 0,\n    }\"\n    v-bind=\"$parent?.$props\"\n    @pointerdown=\"handlePointerDown\"\n    @pointermove=\"handlePointerMove\"\n    @pointerleave=\"\n      () => {\n        clearAutoScrollTimer();\n      }\n    \"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SelectScrollDownButtonProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, watch, watchEffect } from 'vue'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectItemAlignedPositionContext } from './SelectItemAlignedPosition.vue'\nimport SelectScrollButtonImpl from './SelectScrollButtonImpl.vue'\n\ndefineProps<SelectScrollDownButtonProps>()\n\nconst contentContext = injectSelectContentContext()\nconst alignedPositionContext\n  = contentContext.position === 'item-aligned'\n    ? injectSelectItemAlignedPositionContext()\n    : undefined\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst canScrollDown = ref(false)\n\nwatchEffect((cleanupFn) => {\n  if (contentContext.viewport?.value && contentContext.isPositioned?.value) {\n    const viewport = contentContext.viewport.value\n\n    function handleScroll() {\n      const maxScroll = viewport.scrollHeight - viewport.clientHeight\n      // we use Math.ceil here because if the UI is zoomed-in\n      // `scrollTop` is not always reported as an integer\n      canScrollDown.value = Math.ceil(viewport.scrollTop) < maxScroll\n    }\n    handleScroll()\n    viewport.addEventListener('scroll', handleScroll)\n\n    cleanupFn(() => viewport.removeEventListener('scroll', handleScroll))\n  }\n})\n\nwatch(currentElement, () => {\n  if (currentElement.value)\n    alignedPositionContext?.onScrollButtonChange(currentElement.value)\n})\n</script>\n\n<template>\n  <SelectScrollButtonImpl\n    v-if=\"canScrollDown\"\n    :ref=\"forwardRef\"\n    @auto-scroll=\"\n      () => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport?.value && selectedItem?.value) {\n          viewport.value.scrollTop = viewport.value.scrollTop + selectedItem.value.offsetHeight;\n        }\n      }\n    \"\n  >\n    <slot />\n  </SelectScrollButtonImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SelectScrollDownButtonProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, watch, watchEffect } from 'vue'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectItemAlignedPositionContext } from './SelectItemAlignedPosition.vue'\nimport SelectScrollButtonImpl from './SelectScrollButtonImpl.vue'\n\ndefineProps<SelectScrollDownButtonProps>()\n\nconst contentContext = injectSelectContentContext()\nconst alignedPositionContext\n  = contentContext.position === 'item-aligned'\n    ? injectSelectItemAlignedPositionContext()\n    : undefined\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst canScrollDown = ref(false)\n\nwatchEffect((cleanupFn) => {\n  if (contentContext.viewport?.value && contentContext.isPositioned?.value) {\n    const viewport = contentContext.viewport.value\n\n    function handleScroll() {\n      const maxScroll = viewport.scrollHeight - viewport.clientHeight\n      // we use Math.ceil here because if the UI is zoomed-in\n      // `scrollTop` is not always reported as an integer\n      canScrollDown.value = Math.ceil(viewport.scrollTop) < maxScroll\n    }\n    handleScroll()\n    viewport.addEventListener('scroll', handleScroll)\n\n    cleanupFn(() => viewport.removeEventListener('scroll', handleScroll))\n  }\n})\n\nwatch(currentElement, () => {\n  if (currentElement.value)\n    alignedPositionContext?.onScrollButtonChange(currentElement.value)\n})\n</script>\n\n<template>\n  <SelectScrollButtonImpl\n    v-if=\"canScrollDown\"\n    :ref=\"forwardRef\"\n    @auto-scroll=\"\n      () => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport?.value && selectedItem?.value) {\n          viewport.value.scrollTop = viewport.value.scrollTop + selectedItem.value.offsetHeight;\n        }\n      }\n    \"\n  >\n    <slot />\n  </SelectScrollButtonImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SelectScrollUpButtonProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, watch, watchEffect } from 'vue'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectItemAlignedPositionContext } from './SelectItemAlignedPosition.vue'\nimport SelectScrollButtonImpl from './SelectScrollButtonImpl.vue'\n\ndefineProps<SelectScrollUpButtonProps>()\n\nconst contentContext = injectSelectContentContext()\nconst alignedPositionContext\n  = contentContext.position === 'item-aligned'\n    ? injectSelectItemAlignedPositionContext()\n    : undefined\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst canScrollUp = ref(false)\n\nwatchEffect((cleanupFn) => {\n  if (contentContext.viewport?.value && contentContext.isPositioned?.value) {\n    const viewport = contentContext.viewport.value\n\n    function handleScroll() {\n      canScrollUp.value = viewport.scrollTop > 0\n    }\n    handleScroll()\n    viewport.addEventListener('scroll', handleScroll)\n\n    cleanupFn(() => viewport.removeEventListener('scroll', handleScroll))\n  }\n})\n\nwatch(currentElement, () => {\n  if (currentElement.value)\n    alignedPositionContext?.onScrollButtonChange(currentElement.value)\n})\n</script>\n\n<template>\n  <SelectScrollButtonImpl\n    v-if=\"canScrollUp\"\n    :ref=\"forwardRef\"\n    @auto-scroll=\"() => {\n      const { viewport, selectedItem } = contentContext;\n      if (viewport?.value && selectedItem?.value) {\n        viewport.value.scrollTop = viewport.value.scrollTop - selectedItem.value.offsetHeight;\n      }\n    }\"\n  >\n    <slot />\n  </SelectScrollButtonImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SelectScrollUpButtonProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, watch, watchEffect } from 'vue'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectItemAlignedPositionContext } from './SelectItemAlignedPosition.vue'\nimport SelectScrollButtonImpl from './SelectScrollButtonImpl.vue'\n\ndefineProps<SelectScrollUpButtonProps>()\n\nconst contentContext = injectSelectContentContext()\nconst alignedPositionContext\n  = contentContext.position === 'item-aligned'\n    ? injectSelectItemAlignedPositionContext()\n    : undefined\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst canScrollUp = ref(false)\n\nwatchEffect((cleanupFn) => {\n  if (contentContext.viewport?.value && contentContext.isPositioned?.value) {\n    const viewport = contentContext.viewport.value\n\n    function handleScroll() {\n      canScrollUp.value = viewport.scrollTop > 0\n    }\n    handleScroll()\n    viewport.addEventListener('scroll', handleScroll)\n\n    cleanupFn(() => viewport.removeEventListener('scroll', handleScroll))\n  }\n})\n\nwatch(currentElement, () => {\n  if (currentElement.value)\n    alignedPositionContext?.onScrollButtonChange(currentElement.value)\n})\n</script>\n\n<template>\n  <SelectScrollButtonImpl\n    v-if=\"canScrollUp\"\n    :ref=\"forwardRef\"\n    @auto-scroll=\"() => {\n      const { viewport, selectedItem } = contentContext;\n      if (viewport?.value && selectedItem?.value) {\n        viewport.value.scrollTop = viewport.value.scrollTop - selectedItem.value.offsetHeight;\n      }\n    }\"\n  >\n    <slot />\n  </SelectScrollButtonImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SelectSeparatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<SelectSeparatorProps>()\n</script>\n\n<template>\n  <Primitive\n    aria-hidden=\"true\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SelectSeparatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<SelectSeparatorProps>()\n</script>\n\n<template>\n  <Primitive\n    aria-hidden=\"true\"\n    v-bind=\"props\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport { useCollection } from '@/Collection'\n\nexport interface SelectTriggerProps extends PopperAnchorProps {\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { computed, onMounted } from 'vue'\nimport { PopperAnchor } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose, useId, useTypeahead } from '@/shared'\nimport {\n  injectSelectRootContext,\n} from './SelectRoot.vue'\nimport { OPEN_KEYS, shouldShowPlaceholder } from './utils'\n\nconst props = withDefaults(defineProps<SelectTriggerProps>(), {\n  as: 'button',\n})\nconst rootContext = injectSelectRootContext()\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\n\nconst isDisabled = computed(() => rootContext.disabled?.value || props.disabled)\n\nrootContext.contentId ||= useId(undefined, 'reka-select-content')\nonMounted(() => {\n  rootContext.onTriggerChange(triggerElement.value)\n})\n\nconst { getItems } = useCollection()\nconst { search, handleTypeaheadSearch, resetTypeahead } = useTypeahead()\nfunction handleOpen() {\n  if (!isDisabled.value) {\n    rootContext.onOpenChange(true)\n    // reset typeahead when we open\n    resetTypeahead()\n  }\n}\n\nfunction handlePointerOpen(event: PointerEvent) {\n  handleOpen()\n  rootContext.triggerPointerDownPosRef.value = {\n    x: Math.round(event.pageX),\n    y: Math.round(event.pageY),\n  }\n}\n</script>\n\n<template>\n  <PopperAnchor\n    as-child\n    :reference=\"reference\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"combobox\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      :aria-controls=\"rootContext.contentId\"\n      :aria-expanded=\"rootContext.open.value || false\"\n      :aria-required=\"rootContext.required?.value\"\n      aria-autocomplete=\"none\"\n      :disabled=\"isDisabled\"\n      :dir=\"rootContext?.dir.value\"\n      :data-state=\"rootContext?.open.value ? 'open' : 'closed'\"\n      :data-disabled=\"isDisabled ? '' : undefined\"\n      :data-placeholder=\"shouldShowPlaceholder(rootContext.modelValue?.value) ? '' : undefined\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      @click=\"\n        (event: MouseEvent) => {\n          // Whilst browsers generally have no issue focusing the trigger when clicking\n          // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n          // We force `focus` in this case. Note: this doesn't create any other side-effect\n          // because we are preventing default in `onPointerDown` so effectively\n          // this only runs for a label 'click'\n          (event?.currentTarget as HTMLElement)?.focus();\n        }\n      \"\n      @pointerdown=\"\n        (event: PointerEvent) => {\n          // Prevent opening on touch down.\n          // https://github.com/unovue/reka-ui/issues/804\n          if (event.pointerType === 'touch')\n            return event.preventDefault();\n\n          // prevent implicit pointer capture\n          // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n          }\n\n          // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n          // but not when the control key is pressed (avoiding MacOS right click)\n          if (event.button === 0 && event.ctrlKey === false) {\n            handlePointerOpen(event)\n            // prevent trigger from stealing focus from the active item after opening.\n            event.preventDefault();\n          }\n        }\n      \"\n      @pointerup.prevent=\"\n        (event: PointerEvent) => {\n          // Only open on pointer up when using touch devices\n          // https://github.com/unovue/reka-ui/issues/804\n          if (event.pointerType === 'touch')\n            handlePointerOpen(event)\n        }\n      \"\n      @keydown=\"\n        (event) => {\n          const isTypingAhead = search !== '';\n          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n          if (!isModifierKey && event.key.length === 1)\n            if (isTypingAhead && event.key === ' ') return;\n\n          handleTypeaheadSearch(event.key, getItems());\n          if (OPEN_KEYS.includes(event.key)) {\n            handleOpen();\n            event.preventDefault();\n          }\n        }\n      \"\n    >\n      <slot />\n    </Primitive>\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nimport { useCollection } from '@/Collection'\n\nexport interface SelectTriggerProps extends PopperAnchorProps {\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { computed, onMounted } from 'vue'\nimport { PopperAnchor } from '@/Popper'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose, useId, useTypeahead } from '@/shared'\nimport {\n  injectSelectRootContext,\n} from './SelectRoot.vue'\nimport { OPEN_KEYS, shouldShowPlaceholder } from './utils'\n\nconst props = withDefaults(defineProps<SelectTriggerProps>(), {\n  as: 'button',\n})\nconst rootContext = injectSelectRootContext()\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\n\nconst isDisabled = computed(() => rootContext.disabled?.value || props.disabled)\n\nrootContext.contentId ||= useId(undefined, 'reka-select-content')\nonMounted(() => {\n  rootContext.onTriggerChange(triggerElement.value)\n})\n\nconst { getItems } = useCollection()\nconst { search, handleTypeaheadSearch, resetTypeahead } = useTypeahead()\nfunction handleOpen() {\n  if (!isDisabled.value) {\n    rootContext.onOpenChange(true)\n    // reset typeahead when we open\n    resetTypeahead()\n  }\n}\n\nfunction handlePointerOpen(event: PointerEvent) {\n  handleOpen()\n  rootContext.triggerPointerDownPosRef.value = {\n    x: Math.round(event.pageX),\n    y: Math.round(event.pageY),\n  }\n}\n</script>\n\n<template>\n  <PopperAnchor\n    as-child\n    :reference=\"reference\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"combobox\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      :aria-controls=\"rootContext.contentId\"\n      :aria-expanded=\"rootContext.open.value || false\"\n      :aria-required=\"rootContext.required?.value\"\n      aria-autocomplete=\"none\"\n      :disabled=\"isDisabled\"\n      :dir=\"rootContext?.dir.value\"\n      :data-state=\"rootContext?.open.value ? 'open' : 'closed'\"\n      :data-disabled=\"isDisabled ? '' : undefined\"\n      :data-placeholder=\"shouldShowPlaceholder(rootContext.modelValue?.value) ? '' : undefined\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      @click=\"\n        (event: MouseEvent) => {\n          // Whilst browsers generally have no issue focusing the trigger when clicking\n          // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n          // We force `focus` in this case. Note: this doesn't create any other side-effect\n          // because we are preventing default in `onPointerDown` so effectively\n          // this only runs for a label 'click'\n          (event?.currentTarget as HTMLElement)?.focus();\n        }\n      \"\n      @pointerdown=\"\n        (event: PointerEvent) => {\n          // Prevent opening on touch down.\n          // https://github.com/unovue/reka-ui/issues/804\n          if (event.pointerType === 'touch')\n            return event.preventDefault();\n\n          // prevent implicit pointer capture\n          // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n          }\n\n          // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n          // but not when the control key is pressed (avoiding MacOS right click)\n          if (event.button === 0 && event.ctrlKey === false) {\n            handlePointerOpen(event)\n            // prevent trigger from stealing focus from the active item after opening.\n            event.preventDefault();\n          }\n        }\n      \"\n      @pointerup.prevent=\"\n        (event: PointerEvent) => {\n          // Only open on pointer up when using touch devices\n          // https://github.com/unovue/reka-ui/issues/804\n          if (event.pointerType === 'touch')\n            handlePointerOpen(event)\n        }\n      \"\n      @keydown=\"\n        (event) => {\n          const isTypingAhead = search !== '';\n          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n          if (!isModifierKey && event.key.length === 1)\n            if (isTypingAhead && event.key === ' ') return;\n\n          handleTypeaheadSearch(event.key, getItems());\n          if (OPEN_KEYS.includes(event.key)) {\n            handleOpen();\n            event.preventDefault();\n          }\n        }\n      \"\n    >\n      <slot />\n    </Primitive>\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue } from '@/shared/types'\nimport { valueComparator } from './utils'\n\nexport interface SelectValueProps extends PrimitiveProps {\n  /** The content that will be rendered inside the `SelectValue` when no `value` or `defaultValue` is set. */\n  placeholder?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\nconst props = withDefaults(defineProps<SelectValueProps>(), {\n  as: 'span',\n  placeholder: '',\n})\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst rootContext = injectSelectRootContext()\n\nonMounted(() => {\n  rootContext.valueElement = currentElement\n})\n\nconst selectedLabel = computed(() => {\n  let list: string[] = []\n  const options = Array.from(rootContext.optionsSet.value)\n  const getOption = (value?: AcceptableValue) => options.find(option => valueComparator(value, option.value, rootContext.by))\n  if (Array.isArray(rootContext.modelValue.value)) {\n    list = rootContext.modelValue.value.map(value => getOption(value)?.textContent ?? '')\n  }\n  else {\n    list = [getOption(rootContext.modelValue.value)?.textContent ?? '']\n  }\n  return list.filter(Boolean)\n})\n\nconst slotText = computed(() => {\n  return selectedLabel.value.length ? selectedLabel.value.join(', ') : props.placeholder\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :style=\"{ pointerEvents: 'none' }\"\n    :data-placeholder=\"selectedLabel.length ? undefined : props.placeholder\"\n  >\n    <slot\n      :selected-label=\"selectedLabel\"\n      :model-value=\"rootContext.modelValue.value\"\n    >\n      {{ slotText }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { AcceptableValue } from '@/shared/types'\nimport { valueComparator } from './utils'\n\nexport interface SelectValueProps extends PrimitiveProps {\n  /** The content that will be rendered inside the `SelectValue` when no `value` or `defaultValue` is set. */\n  placeholder?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectSelectRootContext } from './SelectRoot.vue'\n\nconst props = withDefaults(defineProps<SelectValueProps>(), {\n  as: 'span',\n  placeholder: '',\n})\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst rootContext = injectSelectRootContext()\n\nonMounted(() => {\n  rootContext.valueElement = currentElement\n})\n\nconst selectedLabel = computed(() => {\n  let list: string[] = []\n  const options = Array.from(rootContext.optionsSet.value)\n  const getOption = (value?: AcceptableValue) => options.find(option => valueComparator(value, option.value, rootContext.by))\n  if (Array.isArray(rootContext.modelValue.value)) {\n    list = rootContext.modelValue.value.map(value => getOption(value)?.textContent ?? '')\n  }\n  else {\n    list = [getOption(rootContext.modelValue.value)?.textContent ?? '']\n  }\n  return list.filter(Boolean)\n})\n\nconst slotText = computed(() => {\n  return selectedLabel.value.length ? selectedLabel.value.join(', ') : props.placeholder\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :style=\"{ pointerEvents: 'none' }\"\n    :data-placeholder=\"selectedLabel.length ? undefined : props.placeholder\"\n  >\n    <slot\n      :selected-label=\"selectedLabel\"\n      :model-value=\"rootContext.modelValue.value\"\n    >\n      {{ slotText }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { useNonce } from '@/shared/useNonce'\n\nexport interface SelectViewportProps extends PrimitiveProps {\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref, toRefs } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectItemAlignedPositionContext } from './SelectItemAlignedPosition.vue'\nimport { CONTENT_MARGIN } from './utils'\n\nconst props = defineProps<SelectViewportProps>()\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n\nconst contentContext = injectSelectContentContext()\nconst alignedPositionContext\n  = contentContext.position === 'item-aligned'\n    ? injectSelectItemAlignedPositionContext()\n    : undefined\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nonMounted(() => {\n  contentContext?.onViewportChange(currentElement.value)\n})\n\nconst prevScrollTopRef = ref(0)\n\nfunction handleScroll(event: WheelEvent) {\n  const viewport = event.currentTarget as HTMLElement\n  const { shouldExpandOnScrollRef, contentWrapper } = alignedPositionContext ?? {}\n  if (shouldExpandOnScrollRef?.value && contentWrapper?.value) {\n    const scrolledBy = Math.abs(prevScrollTopRef.value - viewport.scrollTop)\n    if (scrolledBy > 0) {\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2\n      const cssMinHeight = Number.parseFloat(\n        contentWrapper.value.style.minHeight,\n      )\n      const cssHeight = Number.parseFloat(contentWrapper.value.style.height)\n      const prevHeight = Math.max(cssMinHeight, cssHeight)\n\n      if (prevHeight < availableHeight) {\n        const nextHeight = prevHeight + scrolledBy\n        const clampedNextHeight = Math.min(availableHeight, nextHeight)\n        const heightDiff = nextHeight - clampedNextHeight\n\n        contentWrapper.value.style.height = `${clampedNextHeight}px`\n        if (contentWrapper.value.style.bottom === '0px') {\n          viewport.scrollTop = heightDiff > 0 ? heightDiff : 0\n          // ensure the content stays pinned to the bottom\n          contentWrapper.value.style.justifyContent = 'flex-end'\n        }\n      }\n    }\n  }\n  prevScrollTopRef.value = viewport.scrollTop\n}\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    data-reka-select-viewport\n    role=\"presentation\"\n    v-bind=\"{ ...$attrs, ...props }\"\n    :style=\"{\n      // we use position: 'relative' here on the `viewport` so that when we call\n      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n      // (independent of the scrollUpButton).\n      position: 'relative',\n      flex: 1,\n      overflow: 'hidden auto',\n    }\"\n    @scroll=\"handleScroll\"\n  >\n    <slot />\n  </Primitive>\n  <Primitive\n    as=\"style\"\n    :nonce=\"nonce\"\n  >\n    /* Hide scrollbars cross-browser and enable momentum scroll for touch\n    devices */ [data-reka-select-viewport] { scrollbar-width:none; -ms-overflow-style: none;\n    -webkit-overflow-scrolling: touch; }\n    [data-reka-select-viewport]::-webkit-scrollbar { display: none; }\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { useNonce } from '@/shared/useNonce'\n\nexport interface SelectViewportProps extends PrimitiveProps {\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref, toRefs } from 'vue'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectSelectContentContext } from './SelectContentImpl.vue'\nimport { injectSelectItemAlignedPositionContext } from './SelectItemAlignedPosition.vue'\nimport { CONTENT_MARGIN } from './utils'\n\nconst props = defineProps<SelectViewportProps>()\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n\nconst contentContext = injectSelectContentContext()\nconst alignedPositionContext\n  = contentContext.position === 'item-aligned'\n    ? injectSelectItemAlignedPositionContext()\n    : undefined\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nonMounted(() => {\n  contentContext?.onViewportChange(currentElement.value)\n})\n\nconst prevScrollTopRef = ref(0)\n\nfunction handleScroll(event: WheelEvent) {\n  const viewport = event.currentTarget as HTMLElement\n  const { shouldExpandOnScrollRef, contentWrapper } = alignedPositionContext ?? {}\n  if (shouldExpandOnScrollRef?.value && contentWrapper?.value) {\n    const scrolledBy = Math.abs(prevScrollTopRef.value - viewport.scrollTop)\n    if (scrolledBy > 0) {\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2\n      const cssMinHeight = Number.parseFloat(\n        contentWrapper.value.style.minHeight,\n      )\n      const cssHeight = Number.parseFloat(contentWrapper.value.style.height)\n      const prevHeight = Math.max(cssMinHeight, cssHeight)\n\n      if (prevHeight < availableHeight) {\n        const nextHeight = prevHeight + scrolledBy\n        const clampedNextHeight = Math.min(availableHeight, nextHeight)\n        const heightDiff = nextHeight - clampedNextHeight\n\n        contentWrapper.value.style.height = `${clampedNextHeight}px`\n        if (contentWrapper.value.style.bottom === '0px') {\n          viewport.scrollTop = heightDiff > 0 ? heightDiff : 0\n          // ensure the content stays pinned to the bottom\n          contentWrapper.value.style.justifyContent = 'flex-end'\n        }\n      }\n    }\n  }\n  prevScrollTopRef.value = viewport.scrollTop\n}\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    data-reka-select-viewport\n    role=\"presentation\"\n    v-bind=\"{ ...$attrs, ...props }\"\n    :style=\"{\n      // we use position: 'relative' here on the `viewport` so that when we call\n      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n      // (independent of the scrollUpButton).\n      position: 'relative',\n      flex: 1,\n      overflow: 'hidden auto',\n    }\"\n    @scroll=\"handleScroll\"\n  >\n    <slot />\n  </Primitive>\n  <Primitive\n    as=\"style\"\n    :nonce=\"nonce\"\n  >\n    /* Hide scrollbars cross-browser and enable momentum scroll for touch\n    devices */ [data-reka-select-viewport] { scrollbar-width:none; -ms-overflow-style: none;\n    -webkit-overflow-scrolling: touch; }\n    [data-reka-select-viewport]::-webkit-scrollbar { display: none; }\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DataOrientation } from '../types'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface BaseSeparatorProps extends PrimitiveProps {\n  /**\n   * Orientation of the component.\n   *\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: DataOrientation\n  /**\n   * Whether or not the component is purely decorative. <br>When `true`, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<BaseSeparatorProps>(), {\n  orientation: 'horizontal',\n})\n\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const\nfunction isValidOrientation(orientation: any): orientation is DataOrientation {\n  return ORIENTATIONS.includes(orientation)\n}\n\nconst computedOrientation = computed(() =>\n  isValidOrientation(props.orientation) ? props.orientation : 'horizontal',\n)\n// `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\nconst ariaOrientation = computed(() =>\n  computedOrientation.value === 'vertical' ? props.orientation : undefined,\n)\n\nconst semanticProps = computed(() =>\n  props.decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation.value, 'role': 'separator' },\n)\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-orientation=\"computedOrientation\"\n    v-bind=\"semanticProps\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DataOrientation } from '../types'\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface BaseSeparatorProps extends PrimitiveProps {\n  /**\n   * Orientation of the component.\n   *\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: DataOrientation\n  /**\n   * Whether or not the component is purely decorative. <br>When `true`, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<BaseSeparatorProps>(), {\n  orientation: 'horizontal',\n})\n\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const\nfunction isValidOrientation(orientation: any): orientation is DataOrientation {\n  return ORIENTATIONS.includes(orientation)\n}\n\nconst computedOrientation = computed(() =>\n  isValidOrientation(props.orientation) ? props.orientation : 'horizontal',\n)\n// `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\nconst ariaOrientation = computed(() =>\n  computedOrientation.value === 'vertical' ? props.orientation : undefined,\n)\n\nconst semanticProps = computed(() =>\n  props.decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation.value, 'role': 'separator' },\n)\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-orientation=\"computedOrientation\"\n    v-bind=\"semanticProps\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { BaseSeparatorProps } from '@/shared/component/BaseSeparator.vue'\n\nexport interface SeparatorProps extends BaseSeparatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport BaseSeparator from '@/shared/component/BaseSeparator.vue'\n\nconst props = withDefaults(defineProps<SeparatorProps>(), {\n  orientation: 'horizontal',\n})\n</script>\n\n<template>\n  <BaseSeparator v-bind=\"props\">\n    <slot />\n  </BaseSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type { BaseSeparatorProps } from '@/shared/component/BaseSeparator.vue'\n\nexport interface SeparatorProps extends BaseSeparatorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport BaseSeparator from '@/shared/component/BaseSeparator.vue'\n\nconst props = withDefaults(defineProps<SeparatorProps>(), {\n  orientation: 'horizontal',\n})\n</script>\n\n<template>\n  <BaseSeparator v-bind=\"props\">\n    <slot />\n  </BaseSeparator>\n</template>\n", "import type { ComputedRef } from 'vue'\nimport { clamp, createContext } from '@/shared'\n\nexport interface SliderOrientationPrivateProps {\n  min: number\n  max: number\n  inverted: boolean\n}\n\nexport type SliderOrientationPrivateEmits = {\n  slideEnd: []\n  slideStart: [value: number]\n  slideMove: [value: number]\n  homeKeyDown: [event: KeyboardEvent]\n  endKeyDown: [event: KeyboardEvent]\n  stepKeyDown: [event: KeyboardEvent, direction: number]\n}\n\nexport function getNextSortedValues(prevValues: number[] = [], nextValue: number, atIndex: number) {\n  const nextValues = [...prevValues]\n  nextValues[atIndex] = nextValue\n  return nextValues.sort((a, b) => a - b)\n}\n\nexport function convertValueToPercentage(value: number, min: number, max: number) {\n  const maxSteps = max - min\n  const percentPerStep = 100 / maxSteps\n  const percentage = percentPerStep * (value - min)\n  return clamp(percentage, 0, 100)\n}\n\n/**\n * Returns a label for each thumb when there are two or more thumbs\n */\nexport function getLabel(index: number, totalValues: number) {\n  if (totalValues > 2)\n    return `Value ${index + 1} of ${totalValues}`\n\n  else if (totalValues === 2)\n    return ['Minimum', 'Maximum'][index]\n\n  else\n    return undefined\n}\n\n/**\n * Given a `values` array and a `nextValue`, determine which value in\n * the array is closest to `nextValue` and return its index.\n *\n * @example\n * // returns 1\n * getClosestValueIndex([10, 30], 25);\n */\nexport function getClosestValueIndex(values: number[], nextValue: number) {\n  if (values.length === 1)\n    return 0\n  const distances = values.map(value => Math.abs(value - nextValue))\n  const closestDistance = Math.min(...distances)\n  return distances.indexOf(closestDistance)\n}\n\n/**\n * Offsets the thumb centre point while sliding to ensure it remains\n * within the bounds of the slider when reaching the edges\n */\nexport function getThumbInBoundsOffset(width: number, left: number, direction: number) {\n  const halfWidth = width / 2\n  const halfPercent = 50\n  const offset = linearScale([0, halfPercent], [0, halfWidth])\n  return (halfWidth - offset(left) * direction) * direction\n}\n\n/**\n * Gets an array of steps between each value.\n *\n * @example\n * // returns [1, 9]\n * getStepsBetweenValues([10, 11, 20]);\n */\nexport function getStepsBetweenValues(values: number[]) {\n  return values.slice(0, -1).map((value, index) => values[index + 1] - value)\n}\n\n/**\n * Verifies the minimum steps between all values is greater than or equal\n * to the expected minimum steps.\n *\n * @example\n * // returns false\n * hasMinStepsBetweenValues([1,2,3], 2);\n *\n * @example\n * // returns true\n * hasMinStepsBetweenValues([1,2,3], 1);\n */\nexport function hasMinStepsBetweenValues(values: number[], minStepsBetweenValues: number) {\n  if (minStepsBetweenValues > 0) {\n    const stepsBetweenValues = getStepsBetweenValues(values)\n    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues)\n    return actualMinStepsBetweenValues >= minStepsBetweenValues\n  }\n  return true\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nexport function linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1])\n      return output[0]\n    const ratio = (output[1] - output[0]) / (input[1] - input[0])\n    return output[0] + ratio * (value - input[0])\n  }\n}\n\nexport function getDecimalCount(value: number) {\n  return (String(value).split('.')[1] || '').length\n}\n\nexport function roundValue(value: number, decimalCount: number) {\n  const rounder = 10 ** decimalCount\n  return Math.round(value * rounder) / rounder\n}\n\nexport type Direction = 'ltr' | 'rtl'\n\nexport const PAGE_KEYS = ['PageUp', 'PageDown']\nexport const ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']\n\ntype SlideDirection = 'from-left' | 'from-right' | 'from-bottom' | 'from-top'\nexport const BACK_KEYS: Record<SlideDirection, string[]> = {\n  'from-left': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-right': ['Home', 'PageDown', 'ArrowDown', 'ArrowRight'],\n  'from-bottom': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-top': ['Home', 'PageUp', 'ArrowUp', 'ArrowLeft'],\n}\n\ntype Side = 'top' | 'right' | 'bottom' | 'left'\ninterface SliderOrientation {\n  startEdge: ComputedRef<Side>\n  endEdge: ComputedRef<Side>\n  direction: ComputedRef<1 | -1>\n  size: 'width' | 'height'\n}\n\nexport const [injectSliderOrientationContext, provideSliderOrientationContext]\n  = createContext<SliderOrientation>(['SliderVertical', 'SliderHorizontal'])\n", "<script setup lang=\"ts\">\nimport type { Direction, SliderOrientationPrivateEmits, SliderOrientationPrivateProps } from './utils'\nimport { computed, ref, toRefs } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport SliderImpl from './SliderImpl.vue'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { BACK_KEYS, linearScale, provideSliderOrientationContext } from './utils'\n\ninterface SliderHorizontalProps extends SliderOrientationPrivateProps {\n  dir?: Direction\n}\n\nconst props = defineProps<SliderHorizontalProps>()\nconst emits = defineEmits<SliderOrientationPrivateEmits>()\nconst { max, min, dir, inverted } = toRefs(props)\n\nconst { forwardRef, currentElement: sliderElement } = useForwardExpose()\nconst rootContext = injectSliderRootContext()\n\nconst offsetPosition = ref<number>()\nconst rectRef = ref<DOMRect>()\nconst isSlidingFromLeft = computed(() => (dir?.value !== 'rtl' && !inverted.value) || (dir?.value !== 'ltr' && inverted.value))\n\nfunction getValueFromPointerEvent(event: PointerEvent, slideStart?: boolean) {\n  const rect = rectRef.value || sliderElement.value!.getBoundingClientRect()\n\n  // Get the currently active thumb element\n  const thumb = [...rootContext.thumbElements.value][rootContext.valueIndexToChangeRef.value]\n  const thumbWidth = rootContext.thumbAlignment.value === 'contain' ? thumb.clientWidth : 0\n\n  // Calculate offset for dragging, but only when needed\n  if (!offsetPosition.value && !slideStart && rootContext.thumbAlignment.value === 'contain') {\n    offsetPosition.value = event.clientX - thumb.getBoundingClientRect().left\n  }\n\n  // Define the input range (slider track width minus thumb width)\n  const input: [number, number] = [0, rect.width - thumbWidth]\n  const output: [number, number] = isSlidingFromLeft.value ? [min.value, max.value] : [max.value, min.value]\n  const value = linearScale(input, output)\n\n  rectRef.value = rect\n  const position = slideStart\n    ? event.clientX - rect.left - thumbWidth / 2\n    : event.clientX - rect.left - (offsetPosition.value ?? 0)\n\n  return value(position)\n}\n\nconst startEdge = computed(() => isSlidingFromLeft.value ? 'left' : 'right')\nconst endEdge = computed(() => isSlidingFromLeft.value ? 'right' : 'left')\nconst direction = computed(() => isSlidingFromLeft.value ? 1 : -1)\n\nprovideSliderOrientationContext({\n  startEdge,\n  endEdge,\n  direction,\n  size: 'width',\n})\n</script>\n\n<template>\n  <SliderImpl\n    :ref=\"forwardRef\"\n    :dir=\"dir\"\n    data-orientation=\"horizontal\"\n    :style=\"{\n      ['--reka-slider-thumb-transform' as any]:\n        !isSlidingFromLeft && rootContext.thumbAlignment.value === 'overflow' ? 'translateX(50%)' : 'translateX(-50%)',\n    }\"\n    @slide-start=\"(event) => {\n      const value = getValueFromPointerEvent(event, true);\n      emits('slideStart', value)\n    }\"\n    @slide-move=\"(event) => {\n      const value = getValueFromPointerEvent(event);\n      emits('slideMove', value)\n    }\"\n    @slide-end=\"() => {\n      rectRef = undefined;\n      offsetPosition = undefined\n      emits('slideEnd')\n    }\"\n    @step-key-down=\"(event) => {\n      const slideDirection = isSlidingFromLeft ? 'from-left' : 'from-right';\n      const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n      emits('stepKeyDown', event, isBackKey ? -1 : 1)\n    }\"\n    @end-key-down=\"emits('endKeyDown', $event)\"\n    @home-key-down=\"emits('homeKeyDown', $event)\"\n  >\n    <slot />\n  </SliderImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { Direction, SliderOrientationPrivateEmits, SliderOrientationPrivateProps } from './utils'\nimport { computed, ref, toRefs } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport SliderImpl from './SliderImpl.vue'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { BACK_KEYS, linearScale, provideSliderOrientationContext } from './utils'\n\ninterface SliderHorizontalProps extends SliderOrientationPrivateProps {\n  dir?: Direction\n}\n\nconst props = defineProps<SliderHorizontalProps>()\nconst emits = defineEmits<SliderOrientationPrivateEmits>()\nconst { max, min, dir, inverted } = toRefs(props)\n\nconst { forwardRef, currentElement: sliderElement } = useForwardExpose()\nconst rootContext = injectSliderRootContext()\n\nconst offsetPosition = ref<number>()\nconst rectRef = ref<DOMRect>()\nconst isSlidingFromLeft = computed(() => (dir?.value !== 'rtl' && !inverted.value) || (dir?.value !== 'ltr' && inverted.value))\n\nfunction getValueFromPointerEvent(event: PointerEvent, slideStart?: boolean) {\n  const rect = rectRef.value || sliderElement.value!.getBoundingClientRect()\n\n  // Get the currently active thumb element\n  const thumb = [...rootContext.thumbElements.value][rootContext.valueIndexToChangeRef.value]\n  const thumbWidth = rootContext.thumbAlignment.value === 'contain' ? thumb.clientWidth : 0\n\n  // Calculate offset for dragging, but only when needed\n  if (!offsetPosition.value && !slideStart && rootContext.thumbAlignment.value === 'contain') {\n    offsetPosition.value = event.clientX - thumb.getBoundingClientRect().left\n  }\n\n  // Define the input range (slider track width minus thumb width)\n  const input: [number, number] = [0, rect.width - thumbWidth]\n  const output: [number, number] = isSlidingFromLeft.value ? [min.value, max.value] : [max.value, min.value]\n  const value = linearScale(input, output)\n\n  rectRef.value = rect\n  const position = slideStart\n    ? event.clientX - rect.left - thumbWidth / 2\n    : event.clientX - rect.left - (offsetPosition.value ?? 0)\n\n  return value(position)\n}\n\nconst startEdge = computed(() => isSlidingFromLeft.value ? 'left' : 'right')\nconst endEdge = computed(() => isSlidingFromLeft.value ? 'right' : 'left')\nconst direction = computed(() => isSlidingFromLeft.value ? 1 : -1)\n\nprovideSliderOrientationContext({\n  startEdge,\n  endEdge,\n  direction,\n  size: 'width',\n})\n</script>\n\n<template>\n  <SliderImpl\n    :ref=\"forwardRef\"\n    :dir=\"dir\"\n    data-orientation=\"horizontal\"\n    :style=\"{\n      ['--reka-slider-thumb-transform' as any]:\n        !isSlidingFromLeft && rootContext.thumbAlignment.value === 'overflow' ? 'translateX(50%)' : 'translateX(-50%)',\n    }\"\n    @slide-start=\"(event) => {\n      const value = getValueFromPointerEvent(event, true);\n      emits('slideStart', value)\n    }\"\n    @slide-move=\"(event) => {\n      const value = getValueFromPointerEvent(event);\n      emits('slideMove', value)\n    }\"\n    @slide-end=\"() => {\n      rectRef = undefined;\n      offsetPosition = undefined\n      emits('slideEnd')\n    }\"\n    @step-key-down=\"(event) => {\n      const slideDirection = isSlidingFromLeft ? 'from-left' : 'from-right';\n      const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n      emits('stepKeyDown', event, isBackKey ? -1 : 1)\n    }\"\n    @end-key-down=\"emits('endKeyDown', $event)\"\n    @home-key-down=\"emits('homeKeyDown', $event)\"\n  >\n    <slot />\n  </SliderImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { SliderOrientationPrivateEmits, SliderOrientationPrivateProps } from './utils'\nimport { computed, ref, toRefs } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport SliderImpl from './SliderImpl.vue'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { BACK_KEYS, linearScale, provideSliderOrientationContext } from './utils'\n\ninterface SliderVerticalProps extends SliderOrientationPrivateProps {}\nconst props = defineProps<SliderVerticalProps>()\nconst emits = defineEmits<SliderOrientationPrivateEmits>()\nconst { max, min, inverted } = toRefs(props)\n\nconst rootContext = injectSliderRootContext()\nconst { forwardRef, currentElement: sliderElement } = useForwardExpose()\n\nconst offsetPosition = ref<number>()\nconst rectRef = ref<DOMRect>()\nconst isSlidingFromBottom = computed(() => !inverted.value)\n\nfunction getValueFromPointerEvent(event: PointerEvent, slideStart?: boolean) {\n  const rect = rectRef.value || sliderElement.value!.getBoundingClientRect()\n\n  // Get the currently active thumb element\n  const thumb = [...rootContext.thumbElements.value][rootContext.valueIndexToChangeRef.value]\n  const thumbHeight = rootContext.thumbAlignment.value === 'contain' ? thumb.clientHeight : 0\n\n  // Calculate offset for dragging, but only when needed\n  if (!offsetPosition.value && !slideStart && rootContext.thumbAlignment.value === 'contain') {\n    offsetPosition.value = event.clientY - thumb.getBoundingClientRect().top\n  }\n\n  // Define the input range (slider track width minus thumb width)\n  const input: [number, number] = [0, rect.height - thumbHeight]\n  const output: [number, number] = isSlidingFromBottom.value ? [max.value, min.value] : [min.value, max.value]\n  const value = linearScale(input, output)\n\n  const position = slideStart\n    ? event.clientY - rect.top - thumbHeight / 2\n    : event.clientY - rect.top - (offsetPosition.value ?? 0)\n\n  rectRef.value = rect\n  return value(position)\n}\n\nconst startEdge = computed(() => isSlidingFromBottom.value ? 'bottom' : 'top')\nconst endEdge = computed(() => isSlidingFromBottom.value ? 'top' : 'bottom')\nconst direction = computed(() => isSlidingFromBottom.value ? 1 : -1)\n\nprovideSliderOrientationContext({\n  startEdge,\n  endEdge,\n  direction,\n  size: 'height',\n})\n</script>\n\n<template>\n  <SliderImpl\n    :ref=\"forwardRef\"\n    data-orientation=\"vertical\"\n    :style=\"{\n      ['--reka-slider-thumb-transform' as any]:\n        !isSlidingFromBottom && rootContext.thumbAlignment.value === 'overflow' ? 'translateY(-50%)' : 'translateY(50%)',\n    }\"\n    @slide-start=\"(event) => {\n      const value = getValueFromPointerEvent(event, true);\n      emits('slideStart', value)\n    }\"\n    @slide-move=\"(event) => {\n      const value = getValueFromPointerEvent(event);\n      emits('slideMove', value)\n    }\"\n    @slide-end=\"() => {\n      rectRef = undefined;\n      offsetPosition = undefined\n      emits('slideEnd')\n    }\"\n    @step-key-down=\"(event) => {\n      const slideDirection = isSlidingFromBottom ? 'from-bottom' : 'from-top';\n      const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n      emits('stepKeyDown', event, isBackKey ? -1 : 1)\n    }\"\n    @end-key-down=\"emits('endKeyDown', $event)\"\n    @home-key-down=\"emits('homeKeyDown', $event)\"\n  >\n    <slot />\n  </SliderImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { SliderOrientationPrivateEmits, SliderOrientationPrivateProps } from './utils'\nimport { computed, ref, toRefs } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport SliderImpl from './SliderImpl.vue'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { BACK_KEYS, linearScale, provideSliderOrientationContext } from './utils'\n\ninterface SliderVerticalProps extends SliderOrientationPrivateProps {}\nconst props = defineProps<SliderVerticalProps>()\nconst emits = defineEmits<SliderOrientationPrivateEmits>()\nconst { max, min, inverted } = toRefs(props)\n\nconst rootContext = injectSliderRootContext()\nconst { forwardRef, currentElement: sliderElement } = useForwardExpose()\n\nconst offsetPosition = ref<number>()\nconst rectRef = ref<DOMRect>()\nconst isSlidingFromBottom = computed(() => !inverted.value)\n\nfunction getValueFromPointerEvent(event: PointerEvent, slideStart?: boolean) {\n  const rect = rectRef.value || sliderElement.value!.getBoundingClientRect()\n\n  // Get the currently active thumb element\n  const thumb = [...rootContext.thumbElements.value][rootContext.valueIndexToChangeRef.value]\n  const thumbHeight = rootContext.thumbAlignment.value === 'contain' ? thumb.clientHeight : 0\n\n  // Calculate offset for dragging, but only when needed\n  if (!offsetPosition.value && !slideStart && rootContext.thumbAlignment.value === 'contain') {\n    offsetPosition.value = event.clientY - thumb.getBoundingClientRect().top\n  }\n\n  // Define the input range (slider track width minus thumb width)\n  const input: [number, number] = [0, rect.height - thumbHeight]\n  const output: [number, number] = isSlidingFromBottom.value ? [max.value, min.value] : [min.value, max.value]\n  const value = linearScale(input, output)\n\n  const position = slideStart\n    ? event.clientY - rect.top - thumbHeight / 2\n    : event.clientY - rect.top - (offsetPosition.value ?? 0)\n\n  rectRef.value = rect\n  return value(position)\n}\n\nconst startEdge = computed(() => isSlidingFromBottom.value ? 'bottom' : 'top')\nconst endEdge = computed(() => isSlidingFromBottom.value ? 'top' : 'bottom')\nconst direction = computed(() => isSlidingFromBottom.value ? 1 : -1)\n\nprovideSliderOrientationContext({\n  startEdge,\n  endEdge,\n  direction,\n  size: 'height',\n})\n</script>\n\n<template>\n  <SliderImpl\n    :ref=\"forwardRef\"\n    data-orientation=\"vertical\"\n    :style=\"{\n      ['--reka-slider-thumb-transform' as any]:\n        !isSlidingFromBottom && rootContext.thumbAlignment.value === 'overflow' ? 'translateY(-50%)' : 'translateY(50%)',\n    }\"\n    @slide-start=\"(event) => {\n      const value = getValueFromPointerEvent(event, true);\n      emits('slideStart', value)\n    }\"\n    @slide-move=\"(event) => {\n      const value = getValueFromPointerEvent(event);\n      emits('slideMove', value)\n    }\"\n    @slide-end=\"() => {\n      rectRef = undefined;\n      offsetPosition = undefined\n      emits('slideEnd')\n    }\"\n    @step-key-down=\"(event) => {\n      const slideDirection = isSlidingFromBottom ? 'from-bottom' : 'from-top';\n      const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n      emits('stepKeyDown', event, isBackKey ? -1 : 1)\n    }\"\n    @end-key-down=\"emits('endKeyDown', $event)\"\n    @home-key-down=\"emits('homeKeyDown', $event)\"\n  >\n    <slot />\n  </SliderImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { DataOrientation, Direction, FormFieldProps } from '../shared/types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { clamp, createContext, useDirection, useFormControl, useForwardExpose } from '@/shared'\n\ntype ThumbAlignment = 'contain' | 'overflow'\n\nexport interface SliderRootProps extends PrimitiveProps, FormFieldProps {\n  /** The value of the slider when initially rendered. Use when you do not need to control the state of the slider. */\n  defaultValue?: number[]\n  /** The controlled value of the slider. Can be bind as `v-model`. */\n  modelValue?: number[] | null\n  /** When `true`, prevents the user from interacting with the slider. */\n  disabled?: boolean\n  /** The orientation of the slider. */\n  orientation?: DataOrientation\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** Whether the slider is visually inverted. */\n  inverted?: boolean\n  /** The minimum value for the range. */\n  min?: number\n  /** The maximum value for the range. */\n  max?: number\n  /** The stepping interval. */\n  step?: number\n  /** The minimum permitted steps between multiple thumbs. */\n  minStepsBetweenThumbs?: number\n  /**\n   * The alignment of the slider thumb.\n   * - `contain`: thumbs will be contained within the bounds of the track.\n   * - `overflow`: thumbs will not be bound by the track. No extra offset will be added.\n   * @defaultValue 'contain'\n   */\n  thumbAlignment?: ThumbAlignment\n}\n\nexport type SliderRootEmits = {\n  /**\n   * Event handler called when the slider value changes\n   */\n  'update:modelValue': [payload: number[] | undefined]\n  /**\n   * Event handler called when the value changes at the end of an interaction.\n   *\n   * Useful when you only need to capture a final value e.g. to update a backend service.\n   */\n  'valueCommit': [payload: number[]]\n}\n\nexport interface SliderRootContext {\n  orientation: Ref<DataOrientation>\n  disabled: Ref<boolean>\n  min: Ref<number>\n  max: Ref<number>\n  modelValue?: Readonly<Ref<number[] | null | undefined>>\n  currentModelValue: ComputedRef<number[]>\n  valueIndexToChangeRef: Ref<number>\n  thumbElements: Ref<HTMLElement[]>\n  thumbAlignment: Ref<ThumbAlignment>\n}\n\nexport const [injectSliderRootContext, provideSliderRootContext]\n  = createContext<SliderRootContext>('SliderRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, ref, toRaw, toRefs } from 'vue'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport SliderHorizontal from './SliderHorizontal.vue'\nimport SliderVertical from './SliderVertical.vue'\nimport { ARROW_KEYS, getClosestValueIndex, getDecimalCount, getNextSortedValues, hasMinStepsBetweenValues, PAGE_KEYS, roundValue } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<SliderRootProps>(), {\n  min: 0,\n  max: 100,\n  step: 1,\n  orientation: 'horizontal',\n  disabled: false,\n  minStepsBetweenThumbs: 0,\n  defaultValue: () => [0],\n  inverted: false,\n  thumbAlignment: 'contain',\n  as: 'span',\n})\nconst emits = defineEmits<SliderRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current slider values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { min, max, step, minStepsBetweenThumbs, orientation, disabled, thumbAlignment, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst { forwardRef, currentElement } = useForwardExpose()\nconst isFormControl = useFormControl(currentElement)\n\nconst { CollectionSlot } = useCollection({ isProvider: true })\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<number[] | null>\n\nconst currentModelValue = computed(() => Array.isArray(modelValue.value) ? [...modelValue.value] : [])\n\nconst valueIndexToChangeRef = ref(0)\nconst valuesBeforeSlideStartRef = ref(currentModelValue.value)\n\nfunction handleSlideStart(value: number) {\n  const closestIndex = getClosestValueIndex(currentModelValue.value, value)\n  updateValues(value, closestIndex)\n}\n\nfunction handleSlideMove(value: number) {\n  updateValues(value, valueIndexToChangeRef.value)\n}\n\nfunction handleSlideEnd() {\n  const prevValue = valuesBeforeSlideStartRef.value[valueIndexToChangeRef.value]\n  const nextValue = currentModelValue.value[valueIndexToChangeRef.value]\n  const hasChanged = nextValue !== prevValue\n  if (hasChanged)\n    emits('valueCommit', toRaw(currentModelValue.value))\n}\n\nfunction updateValues(value: number, atIndex: number, { commit } = { commit: false }) {\n  const decimalCount = getDecimalCount(step.value)\n  const snapToStep = roundValue(Math.round((value - min.value) / step.value) * step.value + min.value, decimalCount)\n  const nextValue = clamp(snapToStep, min.value, max.value)\n\n  const nextValues = getNextSortedValues(currentModelValue.value, nextValue, atIndex)\n\n  if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs.value * step.value)) {\n    valueIndexToChangeRef.value = nextValues.indexOf(nextValue)\n    const hasChanged = String(nextValues) !== String(modelValue.value)\n    if (hasChanged && commit)\n      emits('valueCommit', nextValues)\n\n    if (hasChanged) {\n      thumbElements.value[valueIndexToChangeRef.value]?.focus()\n      modelValue.value = nextValues\n    }\n  }\n}\n\nconst thumbElements = ref<HTMLElement[]>([])\nprovideSliderRootContext({\n  modelValue,\n  currentModelValue,\n  valueIndexToChangeRef,\n  thumbElements,\n  orientation,\n  min,\n  max,\n  disabled,\n  thumbAlignment,\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <component\n      :is=\"orientation === 'horizontal' ? SliderHorizontal : SliderVertical\"\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :min=\"min\"\n      :max=\"max\"\n      :dir=\"dir\"\n      :inverted=\"inverted\"\n      :aria-disabled=\"disabled\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      @pointerdown=\"() => {\n        if (!disabled) valuesBeforeSlideStartRef = currentModelValue\n      }\"\n      @slide-start=\"!disabled && handleSlideStart($event)\"\n      @slide-move=\"!disabled && handleSlideMove($event)\"\n      @slide-end=\"!disabled && handleSlideEnd()\"\n      @home-key-down=\"!disabled && updateValues(min, 0, { commit: true })\"\n      @end-key-down=\"!disabled && updateValues(max, currentModelValue.length - 1, { commit: true })\"\n      @step-key-down=\"(event, direction) => {\n        if (!disabled) {\n          const isPageKey = PAGE_KEYS.includes(event.key);\n          const isSkipKey = isPageKey || (event.shiftKey && ARROW_KEYS.includes(event.key));\n          const multiplier = isSkipKey ? 10 : 1;\n          const atIndex = valueIndexToChangeRef;\n          const value = currentModelValue[atIndex];\n          const stepInDirection = step * multiplier * direction;\n          updateValues(value + stepInDirection, atIndex, { commit: true });\n        }\n      }\"\n    >\n      <slot :model-value=\"modelValue\" />\n\n      <VisuallyHiddenInput\n        v-if=\"isFormControl && name\"\n        type=\"number\"\n        :value=\"modelValue\"\n        :name=\"name\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n        :step=\"step\"\n      />\n    </component>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { DataOrientation, Direction, FormFieldProps } from '../shared/types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { clamp, createContext, useDirection, useFormControl, useForwardExpose } from '@/shared'\n\ntype ThumbAlignment = 'contain' | 'overflow'\n\nexport interface SliderRootProps extends PrimitiveProps, FormFieldProps {\n  /** The value of the slider when initially rendered. Use when you do not need to control the state of the slider. */\n  defaultValue?: number[]\n  /** The controlled value of the slider. Can be bind as `v-model`. */\n  modelValue?: number[] | null\n  /** When `true`, prevents the user from interacting with the slider. */\n  disabled?: boolean\n  /** The orientation of the slider. */\n  orientation?: DataOrientation\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** Whether the slider is visually inverted. */\n  inverted?: boolean\n  /** The minimum value for the range. */\n  min?: number\n  /** The maximum value for the range. */\n  max?: number\n  /** The stepping interval. */\n  step?: number\n  /** The minimum permitted steps between multiple thumbs. */\n  minStepsBetweenThumbs?: number\n  /**\n   * The alignment of the slider thumb.\n   * - `contain`: thumbs will be contained within the bounds of the track.\n   * - `overflow`: thumbs will not be bound by the track. No extra offset will be added.\n   * @defaultValue 'contain'\n   */\n  thumbAlignment?: ThumbAlignment\n}\n\nexport type SliderRootEmits = {\n  /**\n   * Event handler called when the slider value changes\n   */\n  'update:modelValue': [payload: number[] | undefined]\n  /**\n   * Event handler called when the value changes at the end of an interaction.\n   *\n   * Useful when you only need to capture a final value e.g. to update a backend service.\n   */\n  'valueCommit': [payload: number[]]\n}\n\nexport interface SliderRootContext {\n  orientation: Ref<DataOrientation>\n  disabled: Ref<boolean>\n  min: Ref<number>\n  max: Ref<number>\n  modelValue?: Readonly<Ref<number[] | null | undefined>>\n  currentModelValue: ComputedRef<number[]>\n  valueIndexToChangeRef: Ref<number>\n  thumbElements: Ref<HTMLElement[]>\n  thumbAlignment: Ref<ThumbAlignment>\n}\n\nexport const [injectSliderRootContext, provideSliderRootContext]\n  = createContext<SliderRootContext>('SliderRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, ref, toRaw, toRefs } from 'vue'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\nimport SliderHorizontal from './SliderHorizontal.vue'\nimport SliderVertical from './SliderVertical.vue'\nimport { ARROW_KEYS, getClosestValueIndex, getDecimalCount, getNextSortedValues, hasMinStepsBetweenValues, PAGE_KEYS, roundValue } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<SliderRootProps>(), {\n  min: 0,\n  max: 100,\n  step: 1,\n  orientation: 'horizontal',\n  disabled: false,\n  minStepsBetweenThumbs: 0,\n  defaultValue: () => [0],\n  inverted: false,\n  thumbAlignment: 'contain',\n  as: 'span',\n})\nconst emits = defineEmits<SliderRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current slider values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { min, max, step, minStepsBetweenThumbs, orientation, disabled, thumbAlignment, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst { forwardRef, currentElement } = useForwardExpose()\nconst isFormControl = useFormControl(currentElement)\n\nconst { CollectionSlot } = useCollection({ isProvider: true })\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<number[] | null>\n\nconst currentModelValue = computed(() => Array.isArray(modelValue.value) ? [...modelValue.value] : [])\n\nconst valueIndexToChangeRef = ref(0)\nconst valuesBeforeSlideStartRef = ref(currentModelValue.value)\n\nfunction handleSlideStart(value: number) {\n  const closestIndex = getClosestValueIndex(currentModelValue.value, value)\n  updateValues(value, closestIndex)\n}\n\nfunction handleSlideMove(value: number) {\n  updateValues(value, valueIndexToChangeRef.value)\n}\n\nfunction handleSlideEnd() {\n  const prevValue = valuesBeforeSlideStartRef.value[valueIndexToChangeRef.value]\n  const nextValue = currentModelValue.value[valueIndexToChangeRef.value]\n  const hasChanged = nextValue !== prevValue\n  if (hasChanged)\n    emits('valueCommit', toRaw(currentModelValue.value))\n}\n\nfunction updateValues(value: number, atIndex: number, { commit } = { commit: false }) {\n  const decimalCount = getDecimalCount(step.value)\n  const snapToStep = roundValue(Math.round((value - min.value) / step.value) * step.value + min.value, decimalCount)\n  const nextValue = clamp(snapToStep, min.value, max.value)\n\n  const nextValues = getNextSortedValues(currentModelValue.value, nextValue, atIndex)\n\n  if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs.value * step.value)) {\n    valueIndexToChangeRef.value = nextValues.indexOf(nextValue)\n    const hasChanged = String(nextValues) !== String(modelValue.value)\n    if (hasChanged && commit)\n      emits('valueCommit', nextValues)\n\n    if (hasChanged) {\n      thumbElements.value[valueIndexToChangeRef.value]?.focus()\n      modelValue.value = nextValues\n    }\n  }\n}\n\nconst thumbElements = ref<HTMLElement[]>([])\nprovideSliderRootContext({\n  modelValue,\n  currentModelValue,\n  valueIndexToChangeRef,\n  thumbElements,\n  orientation,\n  min,\n  max,\n  disabled,\n  thumbAlignment,\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <component\n      :is=\"orientation === 'horizontal' ? SliderHorizontal : SliderVertical\"\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :min=\"min\"\n      :max=\"max\"\n      :dir=\"dir\"\n      :inverted=\"inverted\"\n      :aria-disabled=\"disabled\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      @pointerdown=\"() => {\n        if (!disabled) valuesBeforeSlideStartRef = currentModelValue\n      }\"\n      @slide-start=\"!disabled && handleSlideStart($event)\"\n      @slide-move=\"!disabled && handleSlideMove($event)\"\n      @slide-end=\"!disabled && handleSlideEnd()\"\n      @home-key-down=\"!disabled && updateValues(min, 0, { commit: true })\"\n      @end-key-down=\"!disabled && updateValues(max, currentModelValue.length - 1, { commit: true })\"\n      @step-key-down=\"(event, direction) => {\n        if (!disabled) {\n          const isPageKey = PAGE_KEYS.includes(event.key);\n          const isSkipKey = isPageKey || (event.shiftKey && ARROW_KEYS.includes(event.key));\n          const multiplier = isSkipKey ? 10 : 1;\n          const atIndex = valueIndexToChangeRef;\n          const value = currentModelValue[atIndex];\n          const stepInDirection = step * multiplier * direction;\n          updateValues(value + stepInDirection, atIndex, { commit: true });\n        }\n      }\"\n    >\n      <slot :model-value=\"modelValue\" />\n\n      <VisuallyHiddenInput\n        v-if=\"isFormControl && name\"\n        type=\"number\"\n        :value=\"modelValue\"\n        :name=\"name\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n        :step=\"step\"\n      />\n    </component>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport type SliderImplEmits = {\n  slideStart: [event: PointerEvent]\n  slideMove: [event: PointerEvent]\n  slideEnd: [event: PointerEvent]\n  homeKeyDown: [event: KeyboardEvent]\n  endKeyDown: [event: KeyboardEvent]\n  stepKeyDown: [event: KeyboardEvent]\n}\n\nexport interface SliderImplProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { ARROW_KEYS, PAGE_KEYS } from './utils'\n\nconst props = withDefaults(defineProps<SliderImplProps>(), {\n  as: 'span',\n})\nconst emits = defineEmits<SliderImplEmits>()\nconst rootContext = injectSliderRootContext()\n</script>\n\n<template>\n  <Primitive\n    data-slider-impl\n    v-bind=\"props\"\n    @keydown=\"(event) => {\n      if (event.key === 'Home') {\n        emits('homeKeyDown', event)\n        // Prevent scrolling to page start\n        event.preventDefault();\n      }\n      else if (event.key === 'End') {\n        emits('endKeyDown', event)\n        // Prevent scrolling to page end\n        event.preventDefault();\n      }\n      else if (PAGE_KEYS.concat(ARROW_KEYS).includes(event.key)) {\n        emits('stepKeyDown', event)\n        // Prevent scrolling for directional key presses\n        event.preventDefault();\n      }\n    }\"\n    @pointerdown=\"(event) => {\n      const target = event.target as HTMLElement;\n      target.setPointerCapture(event.pointerId);\n      // Prevent browser focus behaviour because we focus a thumb manually when values change.\n      event.preventDefault();\n      // Touch devices have a delay before focusing so won't focus if touch immediately moves\n      // away from target (sliding). We want thumb to focus regardless.\n      if (rootContext.thumbElements.value.includes(target)) {\n        target.focus();\n      }\n      else {\n        emits('slideStart', event)\n      }\n    }\"\n    @pointermove=\"(event) => {\n      const target = event.target as HTMLElement;\n      if (target.hasPointerCapture(event.pointerId)) emits('slideMove', event);\n    }\"\n    @pointerup=\"(event) => {\n      const target = event.target as HTMLElement;\n      if (target.hasPointerCapture(event.pointerId)) {\n        target.releasePointerCapture(event.pointerId);\n        emits('slideEnd', event)\n      }\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport type SliderImplEmits = {\n  slideStart: [event: PointerEvent]\n  slideMove: [event: PointerEvent]\n  slideEnd: [event: PointerEvent]\n  homeKeyDown: [event: KeyboardEvent]\n  endKeyDown: [event: KeyboardEvent]\n  stepKeyDown: [event: KeyboardEvent]\n}\n\nexport interface SliderImplProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { ARROW_KEYS, PAGE_KEYS } from './utils'\n\nconst props = withDefaults(defineProps<SliderImplProps>(), {\n  as: 'span',\n})\nconst emits = defineEmits<SliderImplEmits>()\nconst rootContext = injectSliderRootContext()\n</script>\n\n<template>\n  <Primitive\n    data-slider-impl\n    v-bind=\"props\"\n    @keydown=\"(event) => {\n      if (event.key === 'Home') {\n        emits('homeKeyDown', event)\n        // Prevent scrolling to page start\n        event.preventDefault();\n      }\n      else if (event.key === 'End') {\n        emits('endKeyDown', event)\n        // Prevent scrolling to page end\n        event.preventDefault();\n      }\n      else if (PAGE_KEYS.concat(ARROW_KEYS).includes(event.key)) {\n        emits('stepKeyDown', event)\n        // Prevent scrolling for directional key presses\n        event.preventDefault();\n      }\n    }\"\n    @pointerdown=\"(event) => {\n      const target = event.target as HTMLElement;\n      target.setPointerCapture(event.pointerId);\n      // Prevent browser focus behaviour because we focus a thumb manually when values change.\n      event.preventDefault();\n      // Touch devices have a delay before focusing so won't focus if touch immediately moves\n      // away from target (sliding). We want thumb to focus regardless.\n      if (rootContext.thumbElements.value.includes(target)) {\n        target.focus();\n      }\n      else {\n        emits('slideStart', event)\n      }\n    }\"\n    @pointermove=\"(event) => {\n      const target = event.target as HTMLElement;\n      if (target.hasPointerCapture(event.pointerId)) emits('slideMove', event);\n    }\"\n    @pointerup=\"(event) => {\n      const target = event.target as HTMLElement;\n      if (target.hasPointerCapture(event.pointerId)) {\n        target.releasePointerCapture(event.pointerId);\n        emits('slideEnd', event)\n      }\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SliderRangeProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { convertValueToPercentage, injectSliderOrientationContext } from './utils'\n\nwithDefaults(defineProps<SliderRangeProps>(), { as: 'span' })\nconst rootContext = injectSliderRootContext()\nconst orientation = injectSliderOrientationContext()\n\nuseForwardExpose()\nconst percentages = computed(() => rootContext.currentModelValue.value.map(value =>\n  convertValueToPercentage(value, rootContext.min.value, rootContext.max.value),\n))\n\nconst offsetStart = computed(() => rootContext.currentModelValue.value.length > 1 ? Math.min(...percentages.value!) : 0)\nconst offsetEnd = computed(() => 100 - Math.max(...percentages.value, 0))\n</script>\n\n<template>\n  <Primitive\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :data-orientation=\"rootContext.orientation.value\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :style=\"{\n      [orientation!.startEdge.value]: `${offsetStart}%`,\n      [orientation!.endEdge.value]: `${offsetEnd}%`,\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SliderRangeProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { convertValueToPercentage, injectSliderOrientationContext } from './utils'\n\nwithDefaults(defineProps<SliderRangeProps>(), { as: 'span' })\nconst rootContext = injectSliderRootContext()\nconst orientation = injectSliderOrientationContext()\n\nuseForwardExpose()\nconst percentages = computed(() => rootContext.currentModelValue.value.map(value =>\n  convertValueToPercentage(value, rootContext.min.value, rootContext.max.value),\n))\n\nconst offsetStart = computed(() => rootContext.currentModelValue.value.length > 1 ? Math.min(...percentages.value!) : 0)\nconst offsetEnd = computed(() => 100 - Math.max(...percentages.value, 0))\n</script>\n\n<template>\n  <Primitive\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :data-orientation=\"rootContext.orientation.value\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :style=\"{\n      [orientation!.startEdge.value]: `${offsetStart}%`,\n      [orientation!.endEdge.value]: `${offsetEnd}%`,\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SliderThumbImplProps extends PrimitiveProps {\n  index: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useMounted } from '@vueuse/core'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose, useSize } from '@/shared'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { convertValueToPercentage, getLabel, getThumbInBoundsOffset, injectSliderOrientationContext } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<SliderThumbImplProps>()\n\nconst rootContext = injectSliderRootContext()\nconst orientation = injectSliderOrientationContext()\n\nconst { forwardRef, currentElement: thumbElement } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst value = computed(() => rootContext.modelValue?.value?.[props.index])\nconst percent = computed(() => value.value === undefined ? 0 : convertValueToPercentage(value.value, rootContext.min.value ?? 0, rootContext.max.value ?? 100))\nconst label = computed(() => getLabel(props.index, rootContext.modelValue?.value?.length ?? 0))\nconst size = useSize(thumbElement)\nconst orientationSize = computed(() => size[orientation!.size].value)\nconst thumbInBoundsOffset = computed(() => {\n  if (rootContext.thumbAlignment.value === 'overflow' || !orientationSize.value) {\n    return 0\n  }\n  else {\n    return getThumbInBoundsOffset(orientationSize.value, percent.value, orientation!.direction.value)\n  }\n})\n\nconst isMounted = useMounted()\nonMounted(() => {\n  rootContext.thumbElements.value.push(thumbElement.value)\n})\nonUnmounted(() => {\n  const i = rootContext.thumbElements.value.findIndex(i => i === thumbElement.value) ?? -1\n  rootContext.thumbElements.value.splice(i, 1)\n})\n</script>\n\n<template>\n  <CollectionItem>\n    <Primitive\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      role=\"slider\"\n      :tabindex=\"rootContext.disabled.value ? undefined : 0\"\n      :aria-label=\"$attrs['aria-label'] || label\"\n      :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n      :data-orientation=\"rootContext.orientation.value\"\n      :aria-valuenow=\"value\"\n      :aria-valuemin=\"rootContext.min.value\"\n      :aria-valuemax=\"rootContext.max.value\"\n      :aria-orientation=\"rootContext.orientation.value\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :style=\"{\n        transform: 'var(--reka-slider-thumb-transform)',\n        position: 'absolute',\n        [orientation!.startEdge.value]: `calc(${percent}% + ${thumbInBoundsOffset}px)`,\n        /**\n         * There will be no value on initial render while we work out the index so we hide thumbs\n         * without a value, otherwise SSR will render them in the wrong position before they\n         * snap into the correct position during hydration which would be visually jarring for\n         * slower connections.\n         */\n        display: !isMounted && value === undefined ? 'none' : undefined,\n      }\"\n      @focus=\"() => {\n        rootContext.valueIndexToChangeRef.value = index\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface SliderThumbImplProps extends PrimitiveProps {\n  index: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useMounted } from '@vueuse/core'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { useForwardExpose, useSize } from '@/shared'\nimport { injectSliderRootContext } from './SliderRoot.vue'\nimport { convertValueToPercentage, getLabel, getThumbInBoundsOffset, injectSliderOrientationContext } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = defineProps<SliderThumbImplProps>()\n\nconst rootContext = injectSliderRootContext()\nconst orientation = injectSliderOrientationContext()\n\nconst { forwardRef, currentElement: thumbElement } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst value = computed(() => rootContext.modelValue?.value?.[props.index])\nconst percent = computed(() => value.value === undefined ? 0 : convertValueToPercentage(value.value, rootContext.min.value ?? 0, rootContext.max.value ?? 100))\nconst label = computed(() => getLabel(props.index, rootContext.modelValue?.value?.length ?? 0))\nconst size = useSize(thumbElement)\nconst orientationSize = computed(() => size[orientation!.size].value)\nconst thumbInBoundsOffset = computed(() => {\n  if (rootContext.thumbAlignment.value === 'overflow' || !orientationSize.value) {\n    return 0\n  }\n  else {\n    return getThumbInBoundsOffset(orientationSize.value, percent.value, orientation!.direction.value)\n  }\n})\n\nconst isMounted = useMounted()\nonMounted(() => {\n  rootContext.thumbElements.value.push(thumbElement.value)\n})\nonUnmounted(() => {\n  const i = rootContext.thumbElements.value.findIndex(i => i === thumbElement.value) ?? -1\n  rootContext.thumbElements.value.splice(i, 1)\n})\n</script>\n\n<template>\n  <CollectionItem>\n    <Primitive\n      v-bind=\"$attrs\"\n      :ref=\"forwardRef\"\n      role=\"slider\"\n      :tabindex=\"rootContext.disabled.value ? undefined : 0\"\n      :aria-label=\"$attrs['aria-label'] || label\"\n      :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n      :data-orientation=\"rootContext.orientation.value\"\n      :aria-valuenow=\"value\"\n      :aria-valuemin=\"rootContext.min.value\"\n      :aria-valuemax=\"rootContext.max.value\"\n      :aria-orientation=\"rootContext.orientation.value\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :style=\"{\n        transform: 'var(--reka-slider-thumb-transform)',\n        position: 'absolute',\n        [orientation!.startEdge.value]: `calc(${percent}% + ${thumbInBoundsOffset}px)`,\n        /**\n         * There will be no value on initial render while we work out the index so we hide thumbs\n         * without a value, otherwise SSR will render them in the wrong position before they\n         * snap into the correct position during hydration which would be visually jarring for\n         * slower connections.\n         */\n        display: !isMounted && value === undefined ? 'none' : undefined,\n      }\"\n      @focus=\"() => {\n        rootContext.valueIndexToChangeRef.value = index\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SliderThumbProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useCollection } from '@/Collection'\nimport SliderThumbImpl from './SliderThumbImpl.vue'\n\nconst props = withDefaults(defineProps<SliderThumbProps>(), {\n  as: 'span',\n})\nconst { getItems } = useCollection()\n\nconst { forwardRef, currentElement: thumbElement } = useForwardExpose()\n\nconst index = computed(() => thumbElement.value ? getItems(true).findIndex(i => i.ref === thumbElement.value) : -1)\n</script>\n\n<template>\n  <SliderThumbImpl\n    :ref=\"forwardRef\"\n    v-bind=\"props\"\n    :index=\"index\"\n  >\n    <slot />\n  </SliderThumbImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SliderThumbProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useCollection } from '@/Collection'\nimport SliderThumbImpl from './SliderThumbImpl.vue'\n\nconst props = withDefaults(defineProps<SliderThumbProps>(), {\n  as: 'span',\n})\nconst { getItems } = useCollection()\n\nconst { forwardRef, currentElement: thumbElement } = useForwardExpose()\n\nconst index = computed(() => thumbElement.value ? getItems(true).findIndex(i => i.ref === thumbElement.value) : -1)\n</script>\n\n<template>\n  <SliderThumbImpl\n    :ref=\"forwardRef\"\n    v-bind=\"props\"\n    :index=\"index\"\n  >\n    <slot />\n  </SliderThumbImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SliderTrackProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSliderRootContext } from './SliderRoot.vue'\n\nwithDefaults(defineProps<SliderTrackProps>(), { as: 'span' })\n\nconst rootContext = injectSliderRootContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :data-orientation=\"rootContext.orientation.value\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SliderTrackProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSliderRootContext } from './SliderRoot.vue'\n\nwithDefaults(defineProps<SliderTrackProps>(), { as: 'span' })\n\nconst rootContext = injectSliderRootContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :data-orientation=\"rootContext.orientation.value\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "export function assert(\n  expectedCondition: any,\n  message = 'Assertion failed!',\n): asserts expectedCondition {\n  if (!expectedCondition) {\n    console.error(message)\n\n    throw new Error(message)\n  }\n}\n", "import type { PanelData } from '../SplitterPanel.vue'\nimport { isBrowser } from '@/shared'\n\nexport function getPanelElement(\n  id: string,\n  scope: ParentNode | HTMLElement = document,\n): HTMLElement | null {\n  if (!isBrowser)\n    return null\n  const element = scope.querySelector(`[data-panel-id=\"${id}\"]`)\n  if (element)\n    return element as HTMLElement\n\n  return null\n}\n\nexport function getPanelElementsForGroup(\n  groupId: string,\n  scope: ParentNode | HTMLElement = document,\n): HTMLElement[] {\n  if (!isBrowser)\n    return []\n  return Array.from(\n    scope.querySelectorAll(`[data-panel][data-panel-group-id=\"${groupId}\"]`),\n  )\n}\n\nexport function getPanelGroupElement(\n  id: string,\n  rootElement: ParentNode | HTMLElement = document,\n): HTMLElement | null {\n  if (!isBrowser)\n    return null\n  // If the root element is the PanelGroup\n  if (\n    rootElement instanceof HTMLElement\n    && (rootElement as HTMLElement)?.dataset?.panelGroupId === id\n  ) {\n    return rootElement as HTMLElement\n  }\n\n  // Else query children\n  const element = rootElement.querySelector(\n    `[data-panel-group][data-panel-group-id=\"${id}\"]`,\n  )\n  if (element)\n    return element as HTMLElement\n\n  return null\n}\n\nexport function getResizeHandleElement(\n  id: string,\n  scope: ParentNode | HTMLElement = document,\n): HTMLElement | null {\n  if (!isBrowser)\n    return null\n  const element = scope.querySelector(`[data-panel-resize-handle-id=\"${id}\"]`)\n  if (element)\n    return element as HTMLElement\n\n  return null\n}\n\nexport function getResizeHandleElementIndex(\n  groupId: string,\n  id: string,\n  scope: ParentNode | HTMLElement = document,\n): number | null {\n  if (!isBrowser)\n    return null\n  const handles = getResizeHandleElementsForGroup(groupId, scope)\n  const index = handles.findIndex(\n    handle => handle.getAttribute('data-panel-resize-handle-id') === id,\n  )\n  return index ?? null\n}\n\nexport function getResizeHandleElementsForGroup(\n  groupId: string,\n  scope: ParentNode | HTMLElement = document,\n): HTMLElement[] {\n  if (!isBrowser)\n    return []\n  return Array.from(\n    scope.querySelectorAll(\n      `[data-panel-resize-handle-id][data-panel-group-id=\"${groupId}\"]`,\n    ),\n  )\n}\n\nexport function getResizeHandlePanelIds(\n  groupId: string,\n  handleId: string,\n  panelsArray: PanelData[],\n  scope: ParentNode | HTMLElement = document,\n): [idBefore: string | null, idAfter: string | null] {\n  const handle = getResizeHandleElement(handleId, scope)\n  const handles = getResizeHandleElementsForGroup(groupId, scope)\n  const index = handle ? handles.indexOf(handle) : -1\n\n  const idBefore: string | null = panelsArray[index]?.id ?? null\n  const idAfter: string | null = panelsArray[index + 1]?.id ?? null\n\n  return [idBefore, idAfter]\n}\n", "import type { Direction, ResizeEvent } from './types'\n\nexport function isKeyDown(event: ResizeEvent): event is KeyboardEvent {\n  return event.type === 'keydown'\n}\n\nexport function isMouseEvent(event: ResizeEvent): event is MouseEvent {\n  return event.type.startsWith('mouse')\n}\n\nexport function isTouchEvent(event: ResizeEvent): event is TouchEvent {\n  return event.type.startsWith('touch')\n}\n\nexport function getResizeEventCoordinates(event: ResizeEvent) {\n  if (isMouseEvent(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY,\n    }\n  }\n  else if (isTouchEvent(event)) {\n    const touch = event.touches[0]\n    if (touch && touch.clientX && touch.clientY) {\n      return {\n        x: touch.clientX,\n        y: touch.clientY,\n      }\n    }\n  }\n\n  return {\n    x: Number.POSITIVE_INFINITY,\n    y: Number.POSITIVE_INFINITY,\n  }\n}\n\nexport function getResizeEventCursorPosition(\n  direction: Direction,\n  event: ResizeEvent,\n): number {\n  const isHorizontal = direction === 'horizontal'\n\n  const { x, y } = getResizeEventCoordinates(event)\n\n  return isHorizontal ? x : y\n}\n", "import type { PanelData } from '../SplitterPanel.vue'\nimport type { Direction, DragState, ResizeEvent } from './types'\nimport { assert } from './assert'\nimport { getPanelGroupElement, getResizeHandleElement } from './dom'\nimport { getResizeEventCursorPosition, isKeyDown } from './events'\n\nexport function calculateDragOffsetPercentage(\n  event: ResizeEvent,\n  dragHandleId: string,\n  direction: Direction,\n  initialDragState: DragState,\n  panelGroupElement: HTMLElement,\n): number {\n  const isHorizontal = direction === 'horizontal'\n\n  const handleElement = getResizeHandleElement(dragHandleId, panelGroupElement)\n  assert(handleElement)\n\n  const groupId = handleElement.getAttribute('data-panel-group-id')\n  assert(groupId)\n\n  const { initialCursorPosition } = initialDragState\n\n  const cursorPosition = getResizeEventCursorPosition(direction, event)\n\n  const groupElement = getPanelGroupElement(groupId, panelGroupElement)\n  assert(groupElement)\n\n  const groupRect = groupElement.getBoundingClientRect()\n  const groupSizeInPixels = isHorizontal ? groupRect.width : groupRect.height\n\n  const offsetPixels = cursorPosition - initialCursorPosition\n  const offsetPercentage = (offsetPixels / groupSizeInPixels) * 100\n\n  return offsetPercentage\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX\nexport function calculateDeltaPercentage(\n  event: ResizeEvent,\n  dragHandleId: string,\n  direction: Direction,\n  initialDragState: DragState | null,\n  keyboardResizeBy: number | null,\n  panelGroupElement: HTMLElement,\n): number {\n  if (isKeyDown(event)) {\n    const isHorizontal = direction === 'horizontal'\n\n    let delta = 0\n    if (event.shiftKey)\n      delta = 100\n    else\n      delta = keyboardResizeBy ?? 10\n\n    let movement = 0\n    switch (event.key) {\n      case 'ArrowDown':\n        movement = isHorizontal ? 0 : delta\n        break\n      case 'ArrowLeft':\n        movement = isHorizontal ? -delta : 0\n        break\n      case 'ArrowRight':\n        movement = isHorizontal ? delta : 0\n        break\n      case 'ArrowUp':\n        movement = isHorizontal ? 0 : -delta\n        break\n      case 'End':\n        movement = 100\n        break\n      case 'Home':\n        movement = -100\n        break\n    }\n\n    return movement\n  }\n  else {\n    if (initialDragState == null)\n      return 0\n\n    return calculateDragOffsetPercentage(\n      event,\n      dragHandleId,\n      direction,\n      initialDragState,\n      panelGroupElement,\n    )\n  }\n}\n\nexport function calculateAriaValues({\n  layout,\n  panelsArray,\n  pivotIndices,\n}: {\n  layout: number[]\n  panelsArray: PanelData[]\n  pivotIndices: number[]\n}) {\n  let currentMinSize = 0\n  let currentMaxSize = 100\n  let totalMinSize = 0\n  let totalMaxSize = 0\n\n  const firstIndex = pivotIndices[0]\n  assert(firstIndex != null)\n\n  // A panel's effective min/max sizes also need to account for other panel's sizes.\n  panelsArray.forEach((panelData, index) => {\n    const { constraints } = panelData\n    const { maxSize = 100, minSize = 0 } = constraints\n\n    if (index === firstIndex) {\n      currentMinSize = minSize\n      currentMaxSize = maxSize\n    }\n    else {\n      totalMinSize += minSize\n      totalMaxSize += maxSize\n    }\n  })\n\n  const valueMax = Math.min(currentMaxSize, 100 - totalMinSize)\n  const valueMin = Math.max(currentMinSize, 100 - totalMaxSize)\n\n  const valueNow = layout[firstIndex]\n\n  return {\n    valueMax,\n    valueMin,\n    valueNow,\n  }\n}\n\nexport function calculateUnsafeDefaultLayout({\n  panelDataArray,\n}: {\n  panelDataArray: PanelData[]\n}): number[] {\n  const layout: number[] = Array.from({ length: panelDataArray.length })\n\n  const panelConstraintsArray = panelDataArray.map(\n    panelData => panelData.constraints,\n  )\n\n  let numPanelsWithSizes = 0\n  let remainingSize = 100\n\n  // Distribute default sizes first\n  for (let index = 0; index < panelDataArray.length; index++) {\n    const panelConstraints = panelConstraintsArray[index]\n    assert(panelConstraints)\n    const { defaultSize } = panelConstraints\n\n    if (defaultSize != null) {\n      numPanelsWithSizes++\n      layout[index] = defaultSize\n      remainingSize -= defaultSize\n    }\n  }\n\n  // Remaining size should be distributed evenly between panels without default sizes\n  for (let index = 0; index < panelDataArray.length; index++) {\n    const panelConstraints = panelConstraintsArray[index]\n    assert(panelConstraints)\n    const { defaultSize } = panelConstraints\n\n    if (defaultSize != null)\n      continue\n\n    const numRemainingPanels = panelDataArray.length - numPanelsWithSizes\n    const size = remainingSize / numRemainingPanels\n\n    numPanelsWithSizes++\n    layout[index] = size\n    remainingSize -= size\n  }\n\n  return layout\n}\n", "import type { PanelData } from '../SplitterPanel.vue'\nimport { assert } from './assert'\n\n// Layout should be pre-converted into percentages\nexport function callPanelCallbacks(\n  panelsArray: PanelData[],\n  layout: number[],\n  panelIdToLastNotifiedSizeMap: Record<string, number>,\n) {\n  layout.forEach((size, index) => {\n    const panelData = panelsArray[index]\n    assert(panelData)\n\n    const { callbacks, constraints, id: panelId } = panelData\n    const { collapsedSize = 0, collapsible } = constraints\n\n    const lastNotifiedSize = panelIdToLastNotifiedSizeMap[panelId]\n    if (lastNotifiedSize == null || size !== lastNotifiedSize) {\n      panelIdToLastNotifiedSizeMap[panelId] = size\n\n      const { onCollapse, onExpand, onResize } = callbacks\n\n      if (onResize)\n        onResize(size, lastNotifiedSize)\n\n      if (collapsible && (onCollapse || onExpand)) {\n        if (\n          onExpand\n          && (lastNotifiedSize == null || lastNotifiedSize === collapsedSize)\n          && size !== collapsedSize\n        ) {\n          onExpand()\n        }\n\n        if (\n          onCollapse\n          && (lastNotifiedSize == null || lastNotifiedSize !== collapsedSize)\n          && size === collapsedSize\n        ) {\n          onCollapse()\n        }\n      }\n    }\n  })\n}\n", "export default function debounce<T extends Function>(\n  callback: T,\n  durationMs = 10,\n) {\n  let timeoutId: NodeJS.Timeout | null = null\n\n  const callable = (...args: any) => {\n    if (timeoutId !== null)\n      clearTimeout(timeoutId)\n\n    timeoutId = setTimeout(() => {\n      callback(...args)\n    }, durationMs)\n  }\n\n  return callable as unknown as T\n}\n", "export const PRECISION = 10\n", "import { PRECISION } from './constants'\n\nexport function fuzzyCompareNumbers(\n  actual: number,\n  expected: number,\n  fractionDigits: number = PRECISION,\n): number {\n  actual = Number.parseFloat(actual.toFixed(fractionDigits))\n  expected = Number.parseFloat(expected.toFixed(fractionDigits))\n\n  const delta = actual - expected\n  if (delta === 0)\n    return 0\n  else\n    return delta > 0 ? 1 : -1\n}\n\nexport function fuzzyNumbersEqual(\n  actual: number,\n  expected: number,\n  fractionDigits?: number,\n): boolean {\n  return fuzzyCompareNumbers(actual, expected, fractionDigits) === 0\n}\n", "import type { PanelConstraints } from '../SplitterPanel.vue'\nimport { assert } from './assert'\nimport { fuzzyCompareNumbers } from './compare'\nimport { PRECISION } from './constants'\n\n// Panel size must be in percentages; pixel values should be pre-converted\nexport function resizePanel({\n  panelConstraints: panelConstraintsArray,\n  panelIndex,\n  size,\n}: {\n  panelConstraints: PanelConstraints[]\n  panelIndex: number\n  size: number\n}) {\n  const panelConstraints = panelConstraintsArray[panelIndex]\n  assert(panelConstraints != null)\n\n  const { collapsedSize = 0, collapsible, maxSize = 100, minSize = 0 } = panelConstraints\n\n  if (fuzzyCompareNumbers(size, minSize) < 0) {\n    if (collapsible) {\n      // Collapsible panels should snap closed or open only once they cross the halfway point between collapsed and min size.\n      const halfwayPoint = (collapsedSize + minSize) / 2\n      if (fuzzyCompareNumbers(size, halfwayPoint) < 0)\n        size = collapsedSize\n      else\n        size = minSize\n    }\n    else {\n      size = minSize\n    }\n  }\n\n  size = Math.min(maxSize, size)\n  size = Number.parseFloat(size.toFixed(PRECISION))\n\n  return size\n}\n", "/* eslint-disable no-lone-blocks */\nimport type { PanelConstraints } from '../SplitterPanel.vue'\nimport { assert } from './assert'\nimport { fuzzyCompareNumbers, fuzzyNumbersEqual } from './compare'\nimport { resizePanel } from './resizePanel'\n\nexport function compareLayouts(a: number[], b: number[]) {\n  if (a.length !== b.length) {\n    return false\n  }\n  else {\n    for (let index = 0; index < a.length; index++) {\n      if (a[index] !== b[index])\n        return false\n    }\n  }\n  return true\n}\n\n// All units must be in percentages; pixel values should be pre-converted\nexport function adjustLayoutByDelta({\n  delta,\n  layout: prevLayout,\n  panelConstraints: panelConstraintsArray,\n  pivotIndices,\n  trigger,\n}: {\n  delta: number\n  layout: number[]\n  panelConstraints: PanelConstraints[]\n  pivotIndices: number[]\n  trigger: 'imperative-api' | 'keyboard' | 'mouse-or-touch'\n}): number[] {\n  if (fuzzyNumbersEqual(delta, 0))\n    return prevLayout\n\n  const nextLayout = [...prevLayout]\n\n  const [firstPivotIndex, secondPivotIndex] = pivotIndices\n  assert(firstPivotIndex != null)\n  assert(secondPivotIndex != null)\n\n  let deltaApplied = 0\n\n  // const DEBUG = [];\n  // DEBUG.push(`adjustLayoutByDelta() ${prevLayout.join(\", \")}`);\n  // DEBUG.push(`  delta: ${delta}`);\n  // DEBUG.push(`  pivotIndices: ${pivotIndices.join(\", \")}`);\n  // DEBUG.push(`  trigger: ${trigger}`);\n  // DEBUG.push(\"\");\n\n  // A resizing panel affects the panels before or after it.\n  //\n  // A negative delta means the panel(s) immediately after the resize handle should grow/expand by decreasing its offset.\n  // Other panels may also need to shrink/contract (and shift) to make room, depending on the min weights.\n  //\n  // A positive delta means the panel(s) immediately before the resize handle should \"expand\".\n  // This is accomplished by shrinking/contracting (and shifting) one or more of the panels after the resize handle.\n\n  {\n    // If this is a resize triggered by a keyboard event, our logic for expanding/collapsing is different.\n    // We no longer check the halfway threshold because this may prevent the panel from expanding at all.\n    if (trigger === 'keyboard') {\n      {\n        // Check if we should expand a collapsed panel\n        const index = delta < 0 ? secondPivotIndex : firstPivotIndex\n        const panelConstraints = panelConstraintsArray[index]\n        assert(panelConstraints)\n\n        // DEBUG.push(`edge case check 1: ${index}`);\n        // DEBUG.push(`  -> collapsible? ${constraints.collapsible}`);\n        if (panelConstraints.collapsible) {\n          const prevSize = prevLayout[index]\n          assert(prevSize != null)\n\n          const panelConstraints = panelConstraintsArray[index]\n          assert(panelConstraints)\n          const { collapsedSize = 0, minSize = 0 } = panelConstraints\n\n          if (fuzzyNumbersEqual(prevSize, collapsedSize)) {\n            const localDelta = minSize - prevSize\n            // DEBUG.push(`  -> expand delta: ${localDelta}`);\n\n            if (fuzzyCompareNumbers(localDelta, Math.abs(delta)) > 0)\n              delta = delta < 0 ? 0 - localDelta : localDelta\n              // DEBUG.push(`  -> delta: ${delta}`);\n          }\n        }\n      }\n\n      {\n        // Check if we should collapse a panel at its minimum size\n        const index = delta < 0 ? firstPivotIndex : secondPivotIndex\n        const panelConstraints = panelConstraintsArray[index]\n        assert(panelConstraints)\n        const { collapsible } = panelConstraints\n\n        // DEBUG.push(`edge case check 2: ${index}`);\n        // DEBUG.push(`  -> collapsible? ${collapsible}`);\n        if (collapsible) {\n          const prevSize = prevLayout[index]\n          assert(prevSize != null)\n\n          const panelConstraints = panelConstraintsArray[index]\n          assert(panelConstraints)\n          const { collapsedSize = 0, minSize = 0 } = panelConstraints\n\n          if (fuzzyNumbersEqual(prevSize, minSize)) {\n            const localDelta = prevSize - collapsedSize\n            // DEBUG.push(`  -> expand delta: ${localDelta}`);\n\n            if (fuzzyCompareNumbers(localDelta, Math.abs(delta)) > 0)\n              delta = delta < 0 ? 0 - localDelta : localDelta\n              // DEBUG.push(`  -> delta: ${delta}`);\n          }\n        }\n      }\n    }\n    // DEBUG.push(\"\");\n  }\n\n  {\n    // Pre-calculate max available delta in the opposite direction of our pivot.\n    // This will be the maximum amount we're allowed to expand/contract the panels in the primary direction.\n    // If this amount is less than the requested delta, adjust the requested delta.\n    // If this amount is greater than the requested delta, that's useful information too–\n    // as an expanding panel might change from collapsed to min size.\n\n    const increment = delta < 0 ? 1 : -1\n\n    let index = delta < 0 ? secondPivotIndex : firstPivotIndex\n    let maxAvailableDelta = 0\n\n    // DEBUG.push(\"pre calc...\");\n    while (true) {\n      const prevSize = prevLayout[index]\n      assert(prevSize != null)\n\n      const maxSafeSize = resizePanel({\n        panelConstraints: panelConstraintsArray,\n        panelIndex: index,\n        size: 100,\n      })\n      const delta = maxSafeSize - prevSize\n      // DEBUG.push(`  ${index}: ${prevSize} -> ${maxSafeSize}`);\n\n      maxAvailableDelta += delta\n      index += increment\n\n      if (index < 0 || index >= panelConstraintsArray.length)\n        break\n    }\n\n    // DEBUG.push(`  -> max available delta: ${maxAvailableDelta}`);\n    const minAbsDelta = Math.min(Math.abs(delta), Math.abs(maxAvailableDelta))\n    delta = delta < 0 ? 0 - minAbsDelta : minAbsDelta\n    // DEBUG.push(`  -> adjusted delta: ${delta}`);\n    // DEBUG.push(\"\");\n  }\n\n  {\n    // Delta added to a panel needs to be subtracted from other panels (within the constraints that those panels allow).\n\n    const pivotIndex = delta < 0 ? firstPivotIndex : secondPivotIndex\n    let index = pivotIndex\n    while (index >= 0 && index < panelConstraintsArray.length) {\n      const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n      const prevSize = prevLayout[index]\n      assert(prevSize != null)\n\n      const unsafeSize = prevSize - deltaRemaining\n      const safeSize = resizePanel({\n        panelConstraints: panelConstraintsArray,\n        panelIndex: index,\n        size: unsafeSize,\n      })\n\n      if (!fuzzyNumbersEqual(prevSize, safeSize)) {\n        deltaApplied += prevSize - safeSize\n\n        nextLayout[index] = safeSize\n\n        if (\n          deltaApplied\n            .toPrecision(3)\n            .localeCompare(Math.abs(delta).toPrecision(3), undefined, {\n              numeric: true,\n            }) >= 0\n        ) {\n          break\n        }\n      }\n\n      if (delta < 0)\n        index--\n      else\n        index++\n    }\n  }\n  // DEBUG.push(`after 1: ${nextLayout.join(\", \")}`);\n  // DEBUG.push(`  deltaApplied: ${deltaApplied}`);\n  // DEBUG.push(\"\");\n\n  // If we were unable to resize any of the panels panels, return the previous state.\n  // This will essentially bailout and ignore e.g. drags past a panel's boundaries\n  if (fuzzyNumbersEqual(deltaApplied, 0)) {\n    // console.log(DEBUG.join(\"\\n\"));\n    return prevLayout\n  }\n\n  {\n    // Now distribute the applied delta to the panels in the other direction\n    const pivotIndex = delta < 0 ? secondPivotIndex : firstPivotIndex\n\n    const prevSize = prevLayout[pivotIndex]\n    assert(prevSize != null)\n\n    const unsafeSize = prevSize + deltaApplied\n    const safeSize = resizePanel({\n      panelConstraints: panelConstraintsArray,\n      panelIndex: pivotIndex,\n      size: unsafeSize,\n    })\n\n    // Adjust the pivot panel before, but only by the amount that surrounding panels were able to shrink/contract.\n    nextLayout[pivotIndex] = safeSize\n\n    // Edge case where expanding or contracting one panel caused another one to change collapsed state\n    if (!fuzzyNumbersEqual(safeSize, unsafeSize)) {\n      let deltaRemaining = unsafeSize - safeSize\n\n      const pivotIndex = delta < 0 ? secondPivotIndex : firstPivotIndex\n      let index = pivotIndex\n      while (index >= 0 && index < panelConstraintsArray.length) {\n        const prevSize = nextLayout[index]\n        assert(prevSize != null)\n\n        const unsafeSize = prevSize + deltaRemaining\n        const safeSize = resizePanel({\n          panelConstraints: panelConstraintsArray,\n          panelIndex: index,\n          size: unsafeSize,\n        })\n\n        if (!fuzzyNumbersEqual(prevSize, safeSize)) {\n          deltaRemaining -= safeSize - prevSize\n\n          nextLayout[index] = safeSize\n        }\n\n        if (fuzzyNumbersEqual(deltaRemaining, 0))\n          break\n\n        if (delta > 0)\n          index--\n        else\n          index++\n      }\n    }\n  }\n  // DEBUG.push(`after 2: ${nextLayout.join(\", \")}`);\n  // DEBUG.push(`  deltaApplied: ${deltaApplied}`);\n  // DEBUG.push(\"\");\n\n  const totalSize = nextLayout.reduce((total, size) => size + total, 0)\n  // DEBUG.push(`total size: ${totalSize}`);\n  // console.log(DEBUG.join(\"\\n\"));\n\n  if (!fuzzyNumbersEqual(totalSize, 100))\n    return prevLayout\n\n  return nextLayout\n}\n", "import { getResizeHandleElementIndex } from './dom'\n\nexport function determinePivotIndices(\n  groupId: string,\n  dragHandleId: string,\n  panelGroupElement: ParentNode,\n): [indexBefore: number, indexAfter: number] {\n  const index = getResizeHandleElementIndex(\n    groupId,\n    dragHandleId,\n    panelGroupElement,\n  )\n\n  return index != null ? [index, index + 1] : [-1, -1]\n}\n", "export interface Rectangle {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\nexport function intersects(\n  rectOne: Rectangle,\n  rectTwo: Rectangle,\n  strict: boolean,\n): boolean {\n  if (strict) {\n    return (\n      rectOne.x < rectTwo.x + rectTwo.width\n      && rectOne.x + rectOne.width > rectTwo.x\n      && rectOne.y < rectTwo.y + rectTwo.height\n      && rectOne.y + rectOne.height > rectTwo.y\n    )\n  }\n  else {\n    return (\n      rectOne.x <= rectTwo.x + rectTwo.width\n      && rectOne.x + rectOne.width >= rectTwo.x\n      && rectOne.y <= rectTwo.y + rectTwo.height\n      && rectOne.y + rectOne.height >= rectTwo.y\n    )\n  }\n}\n\nexport function getIntersectingRectangle(\n  rectOne: Rectangle,\n  rectTwo: Rectangle,\n  strict: boolean,\n): Rectangle {\n  if (!intersects(rectOne, rectTwo, strict)) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    }\n  }\n\n  return {\n    x: Math.max(rectOne.x, rectTwo.x),\n    y: Math.max(rectOne.y, rectTwo.y),\n    width:\n      Math.min(rectOne.x + rectOne.width, rectTwo.x + rectTwo.width)\n      - Math.max(rectOne.x, rectTwo.x),\n    height:\n      Math.min(rectOne.y + rectOne.height, rectTwo.y + rectTwo.height)\n      - Math.max(rectOne.y, rectTwo.y),\n  }\n}\n", "// Forked from NPM stacking-order@2.0.0\n// Background at https://github.com/Rich-Harris/stacking-order/issues/3\n\nimport { assert } from './assert'\n\n/**\n * Determine which of two nodes appears in front of the other —\n * if `a` is in front, returns 1, otherwise returns -1\n * @param {HTMLElement} a\n * @param {HTMLElement} b\n */\nexport function compare(a: HTMLElement, b: HTMLElement): number {\n  if (a === b)\n    throw new Error('Cannot compare node with itself')\n\n  const ancestors = {\n    a: getAncestors(a),\n    b: getAncestors(b),\n  }\n\n  let common_ancestor\n\n  // remove shared ancestors\n  while (ancestors.a.at(-1) === ancestors.b.at(-1)) {\n    a = ancestors.a.pop() as HTMLElement\n    b = ancestors.b.pop() as HTMLElement\n\n    common_ancestor = a\n  }\n\n  assert(common_ancestor)\n\n  const z_indexes = {\n    a: getZIndex(findStackingContext(ancestors.a)),\n    b: getZIndex(findStackingContext(ancestors.b)),\n  }\n\n  if (z_indexes.a === z_indexes.b) {\n    const children = common_ancestor.childNodes\n\n    const furthest_ancestors = {\n      a: ancestors.a.at(-1),\n      b: ancestors.b.at(-1),\n    }\n\n    let i = children.length\n    while (i--) {\n      const child = children[i]\n      if (child === furthest_ancestors.a)\n        return 1\n      if (child === furthest_ancestors.b)\n        return -1\n    }\n  }\n\n  return Math.sign(z_indexes.a - z_indexes.b)\n}\n\nconst props\n  = /\\b(?:position|zIndex|opacity|transform|webkitTransform|mixBlendMode|filter|webkitFilter|isolation)\\b/\n\n/** @param {HTMLElement} node */\nfunction isFlexItem(node: HTMLElement) {\n  const display = getComputedStyle(getParent(node)).display\n  return display === 'flex' || display === 'inline-flex'\n}\n\n/** @param {HTMLElement} node */\nfunction createsStackingContext(node: HTMLElement) {\n  const style = getComputedStyle(node)\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n  if (style.position === 'fixed')\n    return true\n  // Forked to fix upstream bug https://github.com/Rich-Harris/stacking-order/issues/3\n  // if (\n  //   (style.zIndex !== \"auto\" && style.position !== \"static\") ||\n  //   isFlexItem(node)\n  // )\n  if (\n    style.zIndex !== 'auto'\n    && (style.position !== 'static' || isFlexItem(node))\n  ) {\n    return true\n  }\n  if (+style.opacity < 1)\n    return true\n  if ('transform' in style && style.transform !== 'none')\n    return true\n  if ('webkitTransform' in style && style.webkitTransform !== 'none')\n    return true\n  if ('mixBlendMode' in style && style.mixBlendMode !== 'normal')\n    return true\n  if ('filter' in style && style.filter !== 'none')\n    return true\n  if ('webkitFilter' in style && style.webkitFilter !== 'none')\n    return true\n  if ('isolation' in style && style.isolation === 'isolate')\n    return true\n  if (props.test(style.willChange))\n    return true\n  // @ts-expect-error non-standard styling https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling\n  if (style.webkitOverflowScrolling === 'touch')\n    return true\n\n  return false\n}\n\n/** @param {HTMLElement[]} nodes */\nfunction findStackingContext(nodes: HTMLElement[]) {\n  let i = nodes.length\n\n  while (i--) {\n    const node = nodes[i]\n    assert(node)\n    if (createsStackingContext(node))\n      return node\n  }\n\n  return null\n}\n\n/** @param {HTMLElement} node */\nfunction getZIndex(node: HTMLElement | null) {\n  return (node && Number(getComputedStyle(node).zIndex)) || 0\n}\n\n/** @param {HTMLElement} node */\nfunction getAncestors(node: HTMLElement) {\n  const ancestors = []\n\n  while (node) {\n    ancestors.push(node)\n    node = getParent(node)\n  }\n\n  return ancestors // [ node, ... <body>, <html>, document ]\n}\n\n/** @param {HTMLElement} node */\nfunction getParent(node: HTMLElement) {\n  // @ts-expect-error host should exist\n  return (node.parentNode instanceof DocumentFragment && node.parentNode?.host) || node.parentNode\n}\n", "import type { Ref } from 'vue'\nimport type { Direction, ResizeEvent } from './types'\nimport { getResizeEventCoordinates } from './events'\nimport { intersects } from './rects'\nimport { compare } from './stackingOrder'\nimport { resetGlobalCursorStyle, setGlobalCursorStyle } from './style'\n\nexport type ResizeHandlerAction = 'down' | 'move' | 'up'\nexport type SetResizeHandlerState = (\n  action: ResizeHandlerAction,\n  isActive: boolean,\n  event: ResizeEvent\n) => void\n\nexport type PointerHitAreaMargins = {\n  coarse: number\n  fine: number\n}\n\nexport type ResizeHandlerData = {\n  direction: Ref<Direction>\n  element: HTMLElement\n  hitAreaMargins: PointerHitAreaMargins\n  nonce: Ref<string | undefined>\n  setResizeHandlerState: SetResizeHandlerState\n}\n\nexport const EXCEEDED_HORIZONTAL_MIN = 0b0001\nexport const EXCEEDED_HORIZONTAL_MAX = 0b0010\nexport const EXCEEDED_VERTICAL_MIN = 0b0100\nexport const EXCEEDED_VERTICAL_MAX = 0b1000\n\nfunction getInputType(): 'coarse' | 'fine' | undefined {\n  if (typeof matchMedia === 'function')\n    return matchMedia('(pointer:coarse)').matches ? 'coarse' : 'fine'\n}\n\nconst isCoarsePointer = getInputType() === 'coarse'\n\nconst intersectingHandles: ResizeHandlerData[] = []\nlet isPointerDown = false\nconst ownerDocumentCounts: Map<Document, number> = new Map()\nconst panelConstraintFlags: Map<string, number> = new Map()\n\nconst registeredResizeHandlers = new Set<ResizeHandlerData>()\n\nexport function registerResizeHandle(\n  resizeHandleId: string,\n  element: HTMLElement,\n  direction: Ref<Direction>,\n  hitAreaMargins: PointerHitAreaMargins,\n  nonce: Ref<string | undefined>,\n  setResizeHandlerState: SetResizeHandlerState,\n) {\n  const { ownerDocument } = element\n\n  const data: ResizeHandlerData = {\n    direction,\n    element,\n    hitAreaMargins,\n    nonce,\n    setResizeHandlerState,\n  }\n\n  const count = ownerDocumentCounts.get(ownerDocument) ?? 0\n  ownerDocumentCounts.set(ownerDocument, count + 1)\n\n  registeredResizeHandlers.add(data)\n\n  updateListeners()\n\n  return function unregisterResizeHandle() {\n    panelConstraintFlags.delete(resizeHandleId)\n    registeredResizeHandlers.delete(data)\n\n    const count = ownerDocumentCounts.get(ownerDocument) ?? 1\n    ownerDocumentCounts.set(ownerDocument, count - 1)\n\n    updateListeners()\n    resetGlobalCursorStyle()\n\n    if (count === 1)\n      ownerDocumentCounts.delete(ownerDocument)\n  }\n}\n\nfunction handlePointerDown(event: ResizeEvent) {\n  const { target } = event\n  const { x, y } = getResizeEventCoordinates(event)\n\n  isPointerDown = true\n\n  recalculateIntersectingHandles({ target, x, y })\n  updateListeners()\n\n  if (intersectingHandles.length > 0) {\n    updateResizeHandlerStates('down', event)\n\n    event.preventDefault()\n  }\n}\n\nfunction handlePointerMove(event: ResizeEvent) {\n  const { x, y } = getResizeEventCoordinates(event)\n\n  if (!isPointerDown) {\n    const { target } = event\n\n    // Recalculate intersecting handles whenever the pointer moves, except if it has already been pressed\n    // at that point, the handles may not move with the pointer (depending on constraints)\n    // but the same set of active handles should be locked until the pointer is released\n    recalculateIntersectingHandles({ target, x, y })\n  }\n\n  updateResizeHandlerStates('move', event)\n\n  // Update cursor based on return value(s) from active handles\n  updateCursor()\n\n  if (intersectingHandles.length > 0)\n    event.preventDefault()\n}\n\nfunction handlePointerUp(event: ResizeEvent) {\n  const { target } = event\n  const { x, y } = getResizeEventCoordinates(event)\n\n  panelConstraintFlags.clear()\n  isPointerDown = false\n\n  if (intersectingHandles.length > 0)\n    event.preventDefault()\n\n  updateResizeHandlerStates('up', event)\n  recalculateIntersectingHandles({ target, x, y })\n  updateCursor()\n\n  updateListeners()\n}\n\nfunction recalculateIntersectingHandles({\n  target,\n  x,\n  y,\n}: {\n  target: EventTarget | null\n  x: number\n  y: number\n}) {\n  intersectingHandles.splice(0)\n\n  let targetElement: HTMLElement | null = null\n  if (target instanceof HTMLElement)\n    targetElement = target\n\n  registeredResizeHandlers.forEach((data) => {\n    const { element: dragHandleElement, hitAreaMargins } = data\n\n    const dragHandleRect = dragHandleElement.getBoundingClientRect()\n    const { bottom, left, right, top } = dragHandleRect\n\n    const margin = isCoarsePointer\n      ? hitAreaMargins.coarse\n      : hitAreaMargins.fine\n\n    const eventIntersects\n      = x >= left - margin\n        && x <= right + margin\n        && y >= top - margin\n        && y <= bottom + margin\n\n    if (eventIntersects) {\n      // TRICKY\n      // We listen for pointers events at the root in order to support hit area margins\n      // (determining when the pointer is close enough to an element to be considered a \"hit\")\n      // Clicking on an element \"above\" a handle (e.g. a modal) should prevent a hit though\n      // so at this point we need to compare stacking order of a potentially intersecting drag handle,\n      // and the element that was actually clicked/touched\n      if (\n        targetElement !== null\n        && dragHandleElement !== targetElement\n        && !dragHandleElement.contains(targetElement)\n        && !targetElement.contains(dragHandleElement)\n        // Calculating stacking order has a cost, so we should avoid it if possible\n        // That is why we only check potentially intersecting handles,\n        // and why we skip if the event target is within the handle's DOM\n        && compare(targetElement, dragHandleElement) > 0\n      ) {\n        // If the target is above the drag handle, then we also need to confirm they overlap\n        // If they are beside each other (e.g. a panel and its drag handle) then the handle is still interactive\n        //\n        // It's not enough to compare only the target\n        // The target might be a small element inside of a larger container\n        // (For example, a SPAN or a DIV inside of a larger modal dialog)\n        let currentElement: HTMLElement | null = targetElement\n        let didIntersect = false\n        while (currentElement) {\n          if (currentElement.contains(dragHandleElement)) {\n            break\n          }\n          else if (\n            intersects(\n              currentElement.getBoundingClientRect(),\n              dragHandleRect,\n              true,\n            )\n          ) {\n            didIntersect = true\n            break\n          }\n\n          currentElement = currentElement.parentElement\n        }\n\n        if (didIntersect)\n          return\n      }\n\n      intersectingHandles.push(data)\n    }\n  })\n}\n\nexport function reportConstraintsViolation(\n  resizeHandleId: string,\n  flag: number,\n) {\n  panelConstraintFlags.set(resizeHandleId, flag)\n}\n\nfunction updateCursor() {\n  let intersectsHorizontal = false\n  let intersectsVertical = false\n  let nonce: string | undefined\n\n  intersectingHandles.forEach((data) => {\n    const { direction, nonce: _nonce } = data\n\n    if (direction.value === 'horizontal')\n      intersectsHorizontal = true\n    else\n      intersectsVertical = true\n\n    nonce = _nonce.value\n  })\n\n  let constraintFlags = 0\n  panelConstraintFlags.forEach((flag) => {\n    constraintFlags |= flag\n  })\n\n  if (intersectsHorizontal && intersectsVertical)\n    setGlobalCursorStyle('intersection', constraintFlags, nonce)\n  else if (intersectsHorizontal)\n    setGlobalCursorStyle('horizontal', constraintFlags, nonce)\n  else if (intersectsVertical)\n    setGlobalCursorStyle('vertical', constraintFlags, nonce)\n  else\n    resetGlobalCursorStyle()\n}\n\nfunction updateListeners() {\n  ownerDocumentCounts.forEach((_, ownerDocument) => {\n    const { body } = ownerDocument\n\n    body.removeEventListener('contextmenu', handlePointerUp)\n    body.removeEventListener('mousedown', handlePointerDown)\n    body.removeEventListener('mouseleave', handlePointerMove)\n    body.removeEventListener('mousemove', handlePointerMove)\n    body.removeEventListener('touchmove', handlePointerMove)\n    body.removeEventListener('touchstart', handlePointerDown)\n  })\n\n  window.removeEventListener('mouseup', handlePointerUp)\n  window.removeEventListener('touchcancel', handlePointerUp)\n  window.removeEventListener('touchend', handlePointerUp)\n\n  if (registeredResizeHandlers.size > 0) {\n    if (isPointerDown) {\n      if (intersectingHandles.length > 0) {\n        ownerDocumentCounts.forEach((count, ownerDocument) => {\n          const { body } = ownerDocument\n\n          if (count > 0) {\n            body.addEventListener('contextmenu', handlePointerUp)\n            body.addEventListener('mouseleave', handlePointerMove)\n            body.addEventListener('mousemove', handlePointerMove)\n            body.addEventListener('touchmove', handlePointerMove, {\n              passive: false,\n            })\n          }\n        })\n      }\n\n      window.addEventListener('mouseup', handlePointerUp)\n      window.addEventListener('touchcancel', handlePointerUp)\n      window.addEventListener('touchend', handlePointerUp)\n    }\n    else {\n      ownerDocumentCounts.forEach((count, ownerDocument) => {\n        const { body } = ownerDocument\n\n        if (count > 0) {\n          body.addEventListener('mousedown', handlePointerDown)\n          body.addEventListener('mousemove', handlePointerMove)\n          body.addEventListener('touchmove', handlePointerMove, {\n            passive: false,\n          })\n          body.addEventListener('touchstart', handlePointerDown)\n        }\n      })\n    }\n  }\n}\n\nfunction updateResizeHandlerStates(\n  action: ResizeHandlerAction,\n  event: ResizeEvent,\n) {\n  registeredResizeHandlers.forEach((data) => {\n    const { setResizeHandlerState } = data\n\n    const isActive = intersectingHandles.includes(data)\n\n    setResizeHandlerState(action, isActive, event)\n  })\n}\n", "import type { CSSProperties } from 'vue'\nimport type { PanelData } from '../SplitterPanel.vue'\nimport type { DragState } from './types'\nimport {\n  EXCEEDED_HORIZONTAL_MAX,\n  EXCEEDED_HORIZONTAL_MIN,\n  EXCEEDED_VERTICAL_MAX,\n  EXCEEDED_VERTICAL_MIN,\n} from './registry'\n\ntype CursorState = 'horizontal' | 'intersection' | 'vertical'\n\nlet currentCursorStyle: string | null = null\nlet styleElement: HTMLStyleElement | null = null\n\nexport function getCursorStyle(\n  state: CursorState,\n  constraintFlags: number,\n): string {\n  if (constraintFlags) {\n    const horizontalMin = (constraintFlags & EXCEEDED_HORIZONTAL_MIN) !== 0\n    const horizontalMax = (constraintFlags & EXCEEDED_HORIZONTAL_MAX) !== 0\n    const verticalMin = (constraintFlags & EXCEEDED_VERTICAL_MIN) !== 0\n    const verticalMax = (constraintFlags & EXCEEDED_VERTICAL_MAX) !== 0\n\n    if (horizontalMin) {\n      if (verticalMin)\n        return 'se-resize'\n      else if (verticalMax)\n        return 'ne-resize'\n      else\n        return 'e-resize'\n    }\n    else if (horizontalMax) {\n      if (verticalMin)\n        return 'sw-resize'\n      else if (verticalMax)\n        return 'nw-resize'\n      else\n        return 'w-resize'\n    }\n    else if (verticalMin) {\n      return 's-resize'\n    }\n    else if (verticalMax) {\n      return 'n-resize'\n    }\n  }\n\n  switch (state) {\n    case 'horizontal':\n      return 'ew-resize'\n    case 'intersection':\n      return 'move'\n    case 'vertical':\n      return 'ns-resize'\n  }\n}\n\nexport function resetGlobalCursorStyle() {\n  if (styleElement !== null) {\n    document.head.removeChild(styleElement)\n\n    currentCursorStyle = null\n    styleElement = null\n  }\n}\n\nexport function setGlobalCursorStyle(\n  state: CursorState,\n  constraintFlags: number,\n  nonce?: string,\n) {\n  const style = getCursorStyle(state, constraintFlags)\n\n  if (currentCursorStyle === style)\n    return\n\n  currentCursorStyle = style\n\n  if (styleElement === null) {\n    styleElement = document.createElement('style')\n    if (nonce)\n      styleElement.nonce = nonce\n    document.head.appendChild(styleElement)\n  }\n\n  styleElement.innerHTML = `*{cursor: ${style}!important;}`\n}\n\n// the % of the group's overall space this panel should occupy.\nexport function computePanelFlexBoxStyle({\n  defaultSize,\n  dragState,\n  layout,\n  panelData,\n  panelIndex,\n  precision = 3,\n}: {\n  defaultSize: number | undefined\n  layout: number[]\n  dragState: DragState | null\n  panelData: PanelData[]\n  panelIndex: number\n  precision?: number\n}): CSSProperties {\n  const size = layout[panelIndex]\n\n  let flexGrow\n  if (size == null) {\n    // Initial render (before panels have registered themselves)\n    // In order to support server rendering, fall back to default size if provided\n    flexGrow\n      = defaultSize !== undefined ? defaultSize.toPrecision(precision) : '1'\n  }\n  else if (panelData.length === 1) {\n    // Special case: Single panel group should always fill full width/height\n    flexGrow = '1'\n  }\n  else {\n    flexGrow = size.toPrecision(precision)\n  }\n\n  return {\n    flexBasis: 0,\n    flexGrow,\n    flexShrink: 1,\n\n    // Without this, Panel sizes may be unintentionally overridden by their content\n    overflow: 'hidden',\n\n    // Disable pointer events inside of a panel during resize\n    // This avoid edge cases like nested iframes\n    pointerEvents: dragState !== null ? 'none' : undefined,\n  }\n}\n", "import type { PanelConstraints } from '../SplitterPanel.vue'\nimport { assert } from './assert'\nimport { fuzzyNumbersEqual } from './compare'\nimport { resizePanel } from './resizePanel'\n\n// All units must be in percentages; pixel values should be pre-converted\nexport function validatePanelGroupLayout({\n  layout: prevLayout,\n  panelConstraints,\n}: {\n  layout: number[]\n  panelConstraints: PanelConstraints[]\n}): number[] {\n  const nextLayout = [...prevLayout]\n  const nextLayoutTotalSize = nextLayout.reduce(\n    (accumulated, current) => accumulated + current,\n    0,\n  )\n\n  // Validate layout expectations\n  if (nextLayout.length !== panelConstraints.length) {\n    throw new Error(\n      `Invalid ${panelConstraints.length} panel layout: ${nextLayout\n        .map(size => `${size}%`)\n        .join(', ')}`,\n    )\n  }\n  else if (!fuzzyNumbersEqual(nextLayoutTotalSize, 100)) {\n    // This is not ideal so we should warn about it, but it may be recoverable in some cases\n    // (especially if the amount is small)\n\n    if (true) {\n      console.warn(\n        `WARNING: Invalid layout total size: ${nextLayout\n          .map(size => `${size}%`)\n          .join(', ')}. Layout normalization will be applied.`,\n      )\n    }\n    for (let index = 0; index < panelConstraints.length; index++) {\n      const unsafeSize = nextLayout[index]\n      assert(unsafeSize != null)\n      const safeSize = (100 / nextLayoutTotalSize) * unsafeSize\n      nextLayout[index] = safeSize\n    }\n  }\n\n  let remainingSize = 0\n\n  // First pass: Validate the proposed layout given each panel's constraints\n  for (let index = 0; index < panelConstraints.length; index++) {\n    const unsafeSize = nextLayout[index]\n    assert(unsafeSize != null)\n\n    const safeSize = resizePanel({\n      panelConstraints,\n      panelIndex: index,\n      size: unsafeSize,\n    })\n\n    if (unsafeSize !== safeSize) {\n      remainingSize += unsafeSize - safeSize\n\n      nextLayout[index] = safeSize\n    }\n  }\n\n  // If there is additional, left over space, assign it to any panel(s) that permits it\n  // (It's not worth taking multiple additional passes to evenly distribute)\n  if (!fuzzyNumbersEqual(remainingSize, 0)) {\n    for (let index = 0; index < panelConstraints.length; index++) {\n      const prevSize = nextLayout[index]\n      assert(prevSize != null)\n      const unsafeSize = prevSize + remainingSize\n      const safeSize = resizePanel({\n        panelConstraints,\n        panelIndex: index,\n        size: unsafeSize,\n      })\n\n      if (prevSize !== safeSize) {\n        remainingSize -= safeSize - prevSize\n        nextLayout[index] = safeSize\n\n        // Once we've used up the remainder, bail\n        if (fuzzyNumbersEqual(remainingSize, 0))\n          break\n      }\n    }\n  }\n\n  return nextLayout\n}\n\nexport function validatePanelConstraints({\n  panelConstraints: panelConstraintsArray,\n  panelId,\n  panelIndex,\n}: {\n  panelConstraints: PanelConstraints[]\n  panelId: string | undefined\n  panelIndex: number\n}): boolean {\n  if (import.meta.env.DEV) {\n    const warnings = []\n\n    const panelConstraints = panelConstraintsArray[panelIndex]\n    assert(panelConstraints)\n\n    const {\n      collapsedSize = 0,\n      collapsible = false,\n      defaultSize,\n      maxSize = 100,\n      minSize = 0,\n    } = panelConstraints\n\n    if (minSize > maxSize) {\n      warnings.push(\n        `min size (${minSize}%) should not be greater than max size (${maxSize}%)`,\n      )\n    }\n\n    if (defaultSize != null) {\n      if (defaultSize < 0) {\n        warnings.push('default size should not be less than 0')\n      }\n      else if (\n        defaultSize < minSize\n        && (!collapsible || defaultSize !== collapsedSize)\n      ) {\n        warnings.push('default size should not be less than min size')\n      }\n\n      if (defaultSize > 100)\n        warnings.push('default size should not be greater than 100')\n      else if (defaultSize > maxSize)\n        warnings.push('default size should not be greater than max size')\n    }\n\n    if (collapsedSize > minSize)\n      warnings.push('collapsed size should not be greater than min size')\n\n    if (warnings.length > 0) {\n      const name = panelId != null ? `Panel \"${panelId}\"` : 'Panel'\n      console.warn(\n        `${name} has an invalid configuration:\\n\\n${warnings.join('\\n')}`,\n      )\n\n      return false\n    }\n  }\n\n  return true\n}\n", "import type { Ref } from 'vue'\nimport type { PanelData } from '../../SplitterPanel.vue'\nimport { watchEffect } from 'vue'\nimport { assert } from '../assert'\nimport { calculateAriaValues } from '../calculate'\nimport { fuzzyNumbersEqual } from '../compare'\nimport { getPanelGroupElement, getResizeHandleElementsForGroup, getResizeHandlePanelIds } from '../dom'\nimport { adjustLayoutByDelta } from '../layout'\nimport { determinePivotIndices } from '../pivot'\n\n// https://www.w3.org/WAI/ARIA/apg/patterns/windowsplitter/\n\nexport function useWindowSplitterPanelGroupBehavior({\n  eagerValuesRef,\n  groupId,\n  layout,\n  panelDataArray,\n  panelGroupElement,\n  setLayout,\n}: {\n  eagerValuesRef: Ref<{\n    panelDataArray: PanelData[]\n  }>\n  groupId: string\n  layout: Ref<number[]>\n  panelDataArray: PanelData[]\n  panelGroupElement: Ref<ParentNode | null>\n  setLayout: (sizes: number[]) => void\n}): void {\n  watchEffect((onCleanup) => {\n    const _panelGroupElement = panelGroupElement.value\n    if (!_panelGroupElement)\n      return\n\n    const resizeHandleElements = getResizeHandleElementsForGroup(\n      groupId,\n      _panelGroupElement,\n    )\n\n    for (let index = 0; index < panelDataArray.length - 1; index++) {\n      const { valueMax, valueMin, valueNow } = calculateAriaValues({\n        layout: layout.value,\n        panelsArray: panelDataArray,\n        pivotIndices: [index, index + 1],\n      })\n\n      const resizeHandleElement = resizeHandleElements[index]\n      if (resizeHandleElement == null) {\n        if (import.meta.env.DEV)\n          console.warn(`WARNING: Missing resize handle for PanelGroup \"${groupId}\"`)\n      }\n      else {\n        const panelData = panelDataArray[index]\n        assert(panelData)\n\n        resizeHandleElement.setAttribute('aria-controls', panelData.id)\n        resizeHandleElement.setAttribute(\n          'aria-valuemax',\n          `${Math.round(valueMax)}`,\n        )\n        resizeHandleElement.setAttribute(\n          'aria-valuemin',\n          `${Math.round(valueMin)}`,\n        )\n        resizeHandleElement.setAttribute(\n          'aria-valuenow',\n          valueNow != null ? `${Math.round(valueNow)}` : '',\n        )\n      }\n    }\n\n    onCleanup(() => {\n      resizeHandleElements.forEach((resizeHandleElement) => {\n        resizeHandleElement.removeAttribute('aria-controls')\n        resizeHandleElement.removeAttribute('aria-valuemax')\n        resizeHandleElement.removeAttribute('aria-valuemin')\n        resizeHandleElement.removeAttribute('aria-valuenow')\n      })\n    })\n  })\n\n  watchEffect((onCleanup) => {\n    const _panelGroupElement = panelGroupElement.value\n    if (!_panelGroupElement)\n      return\n\n    const eagerValues = eagerValuesRef.value\n    assert(eagerValues)\n\n    const { panelDataArray } = eagerValues\n    const groupElement = getPanelGroupElement(groupId, _panelGroupElement)\n    assert(groupElement != null, `No group found for id \"${groupId}\"`)\n\n    const handles = getResizeHandleElementsForGroup(groupId, _panelGroupElement)\n    assert(handles)\n\n    const cleanupFunctions = handles.map((handle) => {\n      const handleId = handle.getAttribute('data-panel-resize-handle-id')\n      assert(handleId)\n\n      const [idBefore, idAfter] = getResizeHandlePanelIds(\n        groupId,\n        handleId,\n        panelDataArray,\n        _panelGroupElement,\n      )\n      if (idBefore == null || idAfter == null)\n        return () => {}\n\n      const onKeyDown = (event: KeyboardEvent) => {\n        if (event.defaultPrevented)\n          return\n\n        switch (event.key) {\n          case 'Enter': {\n            event.preventDefault()\n\n            const index = panelDataArray.findIndex(\n              panelData => panelData.id === idBefore,\n            )\n            if (index >= 0) {\n              const panelData = panelDataArray[index]\n              assert(panelData)\n\n              const size = layout.value[index]\n\n              const {\n                collapsedSize = 0,\n                collapsible,\n                minSize = 0,\n              } = panelData.constraints\n\n              if (size != null && collapsible) {\n                const nextLayout = adjustLayoutByDelta({\n                  delta: fuzzyNumbersEqual(size, collapsedSize)\n                    ? minSize - collapsedSize\n                    : collapsedSize - size,\n                  layout: layout.value,\n                  panelConstraints: panelDataArray.map(\n                    panelData => panelData.constraints,\n                  ),\n                  pivotIndices: determinePivotIndices(\n                    groupId,\n                    handleId,\n                    _panelGroupElement,\n                  ),\n                  trigger: 'keyboard',\n                })\n                if (layout.value !== nextLayout)\n                  setLayout(nextLayout)\n              }\n            }\n            break\n          }\n        }\n      }\n\n      handle.addEventListener('keydown', onKeyDown)\n      return () => {\n        handle.removeEventListener('keydown', onKeyDown)\n      }\n    })\n\n    onCleanup(() => {\n      cleanupFunctions.forEach(cleanupFunction => cleanupFunction())\n    })\n  })\n}\n", "import type { PanelGroupStorage } from '../SplitterGroup.vue'\nimport type { PanelData } from '../SplitterPanel.vue'\n\n// PanelGroup might be rendering in a server-side environment where localStorage is not available\n// or on a browser with cookies/storage disabled.\n// In either case, this function avoids accessing localStorage until needed,\n// and avoids throwing user-visible errors.\nexport function initializeDefaultStorage(storageObject: PanelGroupStorage) {\n  try {\n    if (typeof localStorage !== 'undefined') {\n      // Bypass this check for future calls\n      storageObject.getItem = (name: string) => {\n        return localStorage.getItem(name)\n      }\n      storageObject.setItem = (name: string, value: string) => {\n        localStorage.setItem(name, value)\n      }\n    }\n    else {\n      throw new TypeError('localStorage not supported in this environment')\n    }\n  }\n  catch (error) {\n    console.error(error)\n\n    storageObject.getItem = () => null\n    storageObject.setItem = () => {}\n  }\n}\n\nexport type PanelConfigurationState = {\n  expandToSizes: {\n    [panelId: string]: number\n  }\n  layout: number[]\n}\n\nexport type SerializedPanelGroupState = {\n  [panelIds: string]: PanelConfigurationState\n}\n\nfunction getPanelGroupKey(autoSaveId: string): string {\n  return `reka:${autoSaveId}`\n}\n\n// Note that Panel ids might be user-provided (stable) or useId generated (non-deterministic)\n// so they should not be used as part of the serialization key.\n// Using the min/max size attributes should work well enough as a backup.\n// Pre-sorting by minSize allows remembering layouts even if panels are re-ordered/dragged.\nfunction getPanelKey(panels: PanelData[]): string {\n  return panels\n    .map((panel) => {\n      const { constraints, id, idIsFromProps, order } = panel\n      if (idIsFromProps) {\n        return id\n      }\n      else {\n        return order\n          ? `${order}:${JSON.stringify(constraints)}`\n          : JSON.stringify(constraints)\n      }\n    })\n    .sort((a, b) => a.localeCompare(b))\n    .join(',')\n}\n\nfunction loadSerializedPanelGroupState(\n  autoSaveId: string,\n  storage: PanelGroupStorage,\n): SerializedPanelGroupState | null {\n  try {\n    const panelGroupKey = getPanelGroupKey(autoSaveId)\n    const serialized = storage.getItem(panelGroupKey)\n    if (serialized) {\n      const parsed = JSON.parse(serialized)\n      if (typeof parsed === 'object' && parsed != null)\n        return parsed as SerializedPanelGroupState\n    }\n  }\n  catch (error) {}\n\n  return null\n}\n\nexport function loadPanelGroupState(\n  autoSaveId: string,\n  panels: PanelData[],\n  storage: PanelGroupStorage,\n): PanelConfigurationState | null {\n  const state = loadSerializedPanelGroupState(autoSaveId, storage) ?? {}\n  const panelKey = getPanelKey(panels)\n  return state[panelKey] ?? null\n}\n\nexport function savePanelGroupState(\n  autoSaveId: string,\n  panels: PanelData[],\n  panelSizesBeforeCollapse: Map<string, number>,\n  sizes: number[],\n  storage: PanelGroupStorage,\n): void {\n  const panelGroupKey = getPanelGroupKey(autoSaveId)\n  const panelKey = getPanelKey(panels)\n  const state = loadSerializedPanelGroupState(autoSaveId, storage) ?? {}\n  state[panelKey] = {\n    expandToSizes: Object.fromEntries(panelSizesBeforeCollapse.entries()),\n    layout: sizes,\n  }\n\n  try {\n    storage.setItem(panelGroupKey, JSON.stringify(state))\n  }\n  catch (error) {\n    console.error(error)\n  }\n}\n", "<script lang=\"ts\">\nimport type { CSSProperties, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed, ref, toRefs, watch, watchEffect } from 'vue'\nimport { areEqual, createContext, useDirection, useForwardExpose, useId } from '@/shared'\nimport { useWindowSplitterPanelGroupBehavior } from './utils/composables/useWindowSplitterPanelGroupBehavior'\nimport {\n  initializeDefaultStorage,\n  loadPanelGroupState,\n  savePanelGroupState,\n} from './utils/storage'\n\nexport interface SplitterGroupProps extends PrimitiveProps {\n  /** Group id; falls back to `useId` when not provided. */\n  id?: string | null\n  /** Unique id used to auto-save group arrangement via `localStorage`. */\n  autoSaveId?: string | null\n  /** The group orientation of splitter. */\n  direction: Direction\n  /** Step size when arrow key was pressed. */\n  keyboardResizeBy?: number | null\n  /** Custom storage API; defaults to localStorage */\n  storage?: PanelGroupStorage\n}\n\nexport type SplitterGroupEmits = {\n  /** Event handler called when group layout changes */\n  layout: [val: number[]]\n}\n\nconst LOCAL_STORAGE_DEBOUNCE_INTERVAL = 100\n\nexport type PanelGroupStorage = {\n  getItem: (name: string) => string | null\n  setItem: (name: string, value: string) => void\n}\n\nconst defaultStorage: PanelGroupStorage = {\n  getItem: (name: string) => {\n    initializeDefaultStorage(defaultStorage)\n    return defaultStorage.getItem(name)\n  },\n  setItem: (name: string, value: string) => {\n    initializeDefaultStorage(defaultStorage)\n    defaultStorage.setItem(name, value)\n  },\n}\n\nexport type PanelGroupContext = {\n  direction: Ref<Direction>\n  dragState: DragState | null\n  groupId: string\n  reevaluatePanelConstraints: (panelData: PanelData, prevConstraints: PanelConstraints) => void\n  registerPanel: (panelData: PanelData) => void\n  registerResizeHandle: (dragHandleId: string) => ResizeHandler\n  resizePanel: (panelData: PanelData, size: number) => void\n  startDragging: (dragHandleId: string, event: ResizeEvent) => void\n  stopDragging: () => void\n  unregisterPanel: (panelData: PanelData) => void\n  panelGroupElement: Ref<ParentNode | null>\n\n  // Exposed function for child component\n  collapsePanel: (panelData: PanelData) => void\n  expandPanel: (panelData: PanelData) => void\n  isPanelCollapsed: (panelData: PanelData) => boolean\n  isPanelExpanded: (panelData: PanelData) => boolean\n  getPanelSize: (panelData: PanelData) => number\n  getPanelStyle: (panelData: PanelData, defaultSize: number | undefined) => CSSProperties\n}\n\nexport const [injectPanelGroupContext, providePanelGroupContext] = createContext<PanelGroupContext>('PanelGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport type { PanelConstraints, PanelData } from './SplitterPanel.vue'\n\nimport type { Direction, DragState, ResizeEvent, ResizeHandler } from './utils/types'\nimport { Primitive } from '@/Primitive'\nimport { assert } from './utils/assert'\nimport { calculateDeltaPercentage, calculateUnsafeDefaultLayout } from './utils/calculate'\nimport { callPanelCallbacks } from './utils/callPanelCallbacks'\nimport debounce from './utils/debounce'\nimport { getResizeHandleElement } from './utils/dom'\nimport { getResizeEventCursorPosition, isKeyDown, isMouseEvent, isTouchEvent } from './utils/events'\nimport { adjustLayoutByDelta, compareLayouts } from './utils/layout'\nimport { determinePivotIndices } from './utils/pivot'\nimport {\n  EXCEEDED_HORIZONTAL_MAX,\n  EXCEEDED_HORIZONTAL_MIN,\n  EXCEEDED_VERTICAL_MAX,\n  EXCEEDED_VERTICAL_MIN,\n  reportConstraintsViolation,\n} from './utils/registry'\nimport { computePanelFlexBoxStyle } from './utils/style'\nimport { validatePanelGroupLayout } from './utils/validation'\n\nconst props = withDefaults(defineProps<SplitterGroupProps>(), {\n  autoSaveId: null,\n  keyboardResizeBy: 10,\n  storage: () => defaultStorage,\n})\nconst emits = defineEmits<SplitterGroupEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current size of layout */\n    layout: typeof layout.value\n  }) => any\n}>()\n\nconst debounceMap: {\n  [key: string]: typeof savePanelGroupState\n} = {}\n\nconst { direction } = toRefs(props)\nconst groupId = useId(props.id, 'reka-splitter-group')\nconst dir = useDirection()\nconst { forwardRef, currentElement: panelGroupElementRef } = useForwardExpose()\n\nconst dragState = ref<DragState | null>(null)\nconst layout = ref<number[]>([])\nconst panelIdToLastNotifiedSizeMapRef = ref<Record<string, number>>({})\nconst panelSizeBeforeCollapseRef = ref<Map<string, number>>(new Map())\nconst prevDeltaRef = ref<number>(0)\n\nconst committedValuesRef = computed(() => ({\n  autoSaveId: props.autoSaveId,\n  direction: props.direction,\n  dragState: dragState.value,\n  id: groupId,\n  keyboardResizeBy: props.keyboardResizeBy,\n  storage: props.storage,\n}) satisfies {\n  autoSaveId: string | null\n  direction: Direction\n  dragState: DragState | null\n  id: string\n  keyboardResizeBy: number | null\n  storage: PanelGroupStorage\n})\n\nconst eagerValuesRef = ref<{\n  layout: number[]\n  panelDataArray: PanelData[]\n  panelDataArrayChanged: boolean\n}>({\n  layout: layout.value,\n  panelDataArray: [],\n  panelDataArrayChanged: false,\n})\n\nconst setLayout = (val: number[]) => layout.value = val\n\nuseWindowSplitterPanelGroupBehavior({\n  eagerValuesRef,\n  groupId,\n  layout,\n  panelDataArray: eagerValuesRef.value.panelDataArray,\n  setLayout,\n  panelGroupElement: panelGroupElementRef,\n})\n\nwatchEffect(() => {\n  const { panelDataArray } = eagerValuesRef.value\n  const { autoSaveId } = props\n  // If this panel has been configured to persist sizing information, save sizes to local storage.\n  if (autoSaveId) {\n    if (layout.value.length === 0 || layout.value.length !== panelDataArray.length)\n      return\n\n    let debouncedSave = debounceMap[autoSaveId]\n\n    // Limit the frequency of localStorage updates.\n    if (!debouncedSave) {\n      debouncedSave = debounce(\n        savePanelGroupState,\n        LOCAL_STORAGE_DEBOUNCE_INTERVAL,\n      )\n\n      debounceMap[autoSaveId] = debouncedSave\n    }\n\n    // Clone mutable data before passing to the debounced function,\n    // else we run the risk of saving an incorrect combination of mutable and immutable values to state.\n    const clonedPanelDataArray = [...panelDataArray]\n    const clonedPanelSizesBeforeCollapse = new Map(\n      panelSizeBeforeCollapseRef.value,\n    )\n\n    debouncedSave(\n      autoSaveId,\n      clonedPanelDataArray,\n      clonedPanelSizesBeforeCollapse,\n      layout.value,\n      props.storage,\n    )\n  }\n})\n\nfunction getPanelStyle(panelData: PanelData, defaultSize: number | undefined) {\n  const { panelDataArray } = eagerValuesRef.value\n\n  const panelIndex = findPanelDataIndex(panelDataArray, panelData)\n\n  return computePanelFlexBoxStyle({\n    defaultSize,\n    dragState: dragState.value,\n    layout: layout.value,\n    panelData: panelDataArray,\n    panelIndex,\n  })\n}\n\nfunction registerPanel(panelData: PanelData) {\n  const { panelDataArray } = eagerValuesRef.value\n\n  panelDataArray.push(panelData)\n  panelDataArray.sort((panelA, panelB) => {\n    const orderA = panelA.order\n    const orderB = panelB.order\n    if (orderA == null && orderB == null)\n      return 0\n    else if (orderA == null)\n      return -1\n    else if (orderB == null)\n      return 1\n    else\n      return orderA - orderB\n  })\n\n  eagerValuesRef.value.panelDataArrayChanged = true\n}\n\n// (Re)calculate group layout whenever panels are registered or unregistered.\n// useIsomorphicLayoutEffect\nwatch(() => eagerValuesRef.value.panelDataArrayChanged, () => {\n  if (eagerValuesRef.value.panelDataArrayChanged) {\n    eagerValuesRef.value.panelDataArrayChanged = false\n\n    const { autoSaveId, storage } = committedValuesRef.value\n    const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n    // If this panel has been configured to persist sizing information,\n    // default size should be restored from local storage if possible.\n    let unsafeLayout: number[] | null = null\n    if (autoSaveId) {\n      const state = loadPanelGroupState(autoSaveId, panelDataArray, storage)\n      if (state) {\n        panelSizeBeforeCollapseRef.value = new Map(\n          Object.entries(state.expandToSizes),\n        )\n        unsafeLayout = state.layout\n      }\n    }\n\n    if (unsafeLayout === null) {\n      unsafeLayout = calculateUnsafeDefaultLayout({\n        panelDataArray,\n      })\n    }\n\n    // Validate even saved layouts in case something has changed since last render\n    // e.g. for pixel groups, this could be the size of the window\n    const nextLayout = validatePanelGroupLayout({\n      layout: unsafeLayout,\n      panelConstraints: panelDataArray.map(\n        panelData => panelData.constraints,\n      ),\n    })\n\n    if (!areEqual(prevLayout, nextLayout)) {\n      setLayout(nextLayout)\n\n      eagerValuesRef.value.layout = nextLayout\n      emits('layout', nextLayout)\n\n      callPanelCallbacks(\n        panelDataArray,\n        nextLayout,\n        panelIdToLastNotifiedSizeMapRef.value,\n      )\n    }\n  }\n})\n\nfunction registerResizeHandle(dragHandleId: string) {\n  return function resizeHandler(event: ResizeEvent) {\n    event.preventDefault()\n    const panelGroupElement = panelGroupElementRef.value\n    if (!panelGroupElement)\n      return () => null\n\n    const { direction, dragState, id: groupId, keyboardResizeBy } = committedValuesRef.value\n    const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n    const { initialLayout } = dragState ?? {}\n\n    const pivotIndices = determinePivotIndices(\n      groupId,\n      dragHandleId,\n      panelGroupElement,\n    )\n\n    let delta = calculateDeltaPercentage(\n      event,\n      dragHandleId,\n      direction,\n      dragState,\n      keyboardResizeBy,\n      panelGroupElement,\n    )\n    if (delta === 0)\n      return\n\n    // Support RTL layouts\n    const isHorizontal = direction === 'horizontal'\n    if (dir.value === 'rtl' && isHorizontal)\n      delta = -delta\n\n    const panelConstraints = panelDataArray.map(panelData => panelData.constraints)\n\n    const nextLayout = adjustLayoutByDelta({\n      delta,\n      layout: initialLayout ?? prevLayout,\n      panelConstraints,\n      pivotIndices,\n      trigger: isKeyDown(event) ? 'keyboard' : 'mouse-or-touch',\n    })\n\n    const layoutChanged = !compareLayouts(prevLayout, nextLayout)\n\n    // Only update the cursor for layout changes triggered by touch/mouse events (not keyboard)\n    // Update the cursor even if the layout hasn't changed (we may need to show an invalid cursor state)\n    if (isMouseEvent(event) || isTouchEvent(event)) {\n      // Watch for multiple subsequent deltas; this might occur for tiny cursor movements.\n      // In this case, Panel sizes might not change–\n      // but updating cursor in this scenario would cause a flicker.\n      if (prevDeltaRef.value !== delta) {\n        prevDeltaRef.value = delta\n\n        if (!layoutChanged) {\n          // If the pointer has moved too far to resize the panel any further, note this so we can update the cursor.\n          // This mimics VS Code behavior.\n          if (isHorizontal) {\n            reportConstraintsViolation(\n              dragHandleId,\n              delta < 0 ? EXCEEDED_HORIZONTAL_MIN : EXCEEDED_HORIZONTAL_MAX,\n            )\n          }\n          else {\n            reportConstraintsViolation(\n              dragHandleId,\n              delta < 0 ? EXCEEDED_VERTICAL_MIN : EXCEEDED_VERTICAL_MAX,\n            )\n          }\n        }\n        else {\n          reportConstraintsViolation(dragHandleId, 0)\n        }\n      }\n    }\n\n    if (layoutChanged) {\n      setLayout(nextLayout)\n\n      eagerValuesRef.value.layout = nextLayout\n      emits('layout', nextLayout)\n\n      callPanelCallbacks(\n        panelDataArray,\n        nextLayout,\n        panelIdToLastNotifiedSizeMapRef.value,\n      )\n    }\n  }\n}\n\nfunction resizePanel(panelData: PanelData, unsafePanelSize: number) {\n  const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n  const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints)\n\n  const { panelSize, pivotIndices } = panelDataHelper(\n    panelDataArray,\n    panelData,\n    prevLayout,\n  )\n\n  assert(panelSize != null)\n\n  const isLastPanel = findPanelDataIndex(panelDataArray, panelData) === panelDataArray.length - 1\n  const delta = isLastPanel\n    ? panelSize - unsafePanelSize\n    : unsafePanelSize - panelSize\n\n  const nextLayout = adjustLayoutByDelta({\n    delta,\n    layout: prevLayout,\n    panelConstraints: panelConstraintsArray,\n    pivotIndices,\n    trigger: 'imperative-api',\n  })\n\n  if (!compareLayouts(prevLayout, nextLayout)) {\n    setLayout(nextLayout)\n\n    eagerValuesRef.value.layout = nextLayout\n    emits('layout', nextLayout)\n\n    callPanelCallbacks(\n      panelDataArray,\n      nextLayout,\n      panelIdToLastNotifiedSizeMapRef.value,\n    )\n  }\n}\n\nfunction reevaluatePanelConstraints(panelData: PanelData, prevConstraints: PanelConstraints) {\n  const { layout, panelDataArray } = eagerValuesRef.value\n  const index = findPanelDataIndex(panelDataArray, panelData)\n  panelDataArray[index] = panelData\n  eagerValuesRef.value.panelDataArrayChanged = true\n  const {\n    collapsedSize: prevCollapsedSize = 0,\n    collapsible: prevCollapsible,\n  } = prevConstraints\n\n  const {\n    collapsedSize: nextCollapsedSize = 0,\n    collapsible: nextCollapsible,\n    maxSize: nextMaxSize = 100,\n    minSize: nextMinSize = 0,\n  } = panelData.constraints\n\n  const { panelSize: prevPanelSize } = panelDataHelper(\n    panelDataArray,\n    panelData,\n    layout,\n  )\n  if (prevPanelSize === null) {\n    // It's possible that the panels in this group have changed since the last render\n    return\n  }\n\n  if (\n    prevCollapsible\n    && nextCollapsible\n    && prevPanelSize === prevCollapsedSize\n  ) {\n    if (prevCollapsedSize !== nextCollapsedSize) {\n      resizePanel(panelData, nextCollapsedSize)\n    }\n    else {\n      // Stay collapsed\n    }\n  }\n  else if (prevPanelSize < nextMinSize) {\n    resizePanel(panelData, nextMinSize)\n  }\n  else if (prevPanelSize > nextMaxSize) {\n    resizePanel(panelData, nextMaxSize)\n  }\n}\n\nfunction startDragging(dragHandleId: string, event: ResizeEvent) {\n  const { direction } = committedValuesRef.value\n  const { layout } = eagerValuesRef.value\n  if (!panelGroupElementRef.value)\n    return\n\n  const handleElement = getResizeHandleElement(\n    dragHandleId,\n    panelGroupElementRef.value,\n  )\n  assert(handleElement)\n\n  const initialCursorPosition = getResizeEventCursorPosition(\n    direction,\n    event,\n  )\n\n  dragState.value = {\n    dragHandleId,\n    dragHandleRect: handleElement.getBoundingClientRect(),\n    initialCursorPosition,\n    initialLayout: layout,\n  }\n}\nfunction stopDragging() {\n  dragState.value = null\n}\n\nfunction unregisterPanel(panelData: PanelData) {\n  const { panelDataArray } = eagerValuesRef.value\n\n  const index = findPanelDataIndex(panelDataArray, panelData)\n  if (index >= 0) {\n    panelDataArray.splice(index, 1)\n\n    // TRICKY\n    // When a panel is removed from the group, we should delete the most recent prev-size entry for it.\n    // If we don't do this, then a conditionally rendered panel might not call onResize when it's re-mounted.\n    // Strict effects mode makes this tricky though because all panels will be registered, unregistered, then re-registered on mount.\n    delete panelIdToLastNotifiedSizeMapRef.value[panelData.id]\n\n    eagerValuesRef.value.panelDataArrayChanged = true\n  }\n}\n\nfunction collapsePanel(panelData: PanelData) {\n  const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n  if (panelData.constraints.collapsible) {\n    const panelConstraintsArray = panelDataArray.map(\n      panelData => panelData.constraints,\n    )\n\n    const {\n      collapsedSize = 0,\n      panelSize,\n      pivotIndices,\n    } = panelDataHelper(panelDataArray, panelData, prevLayout)\n\n    assert(\n      panelSize != null,\n      `Panel size not found for panel \"${panelData.id}\"`,\n    )\n\n    if (panelSize !== collapsedSize) {\n      // Store size before collapse;\n      // This is the size that gets restored if the expand() API is used.\n      panelSizeBeforeCollapseRef.value.set(panelData.id, panelSize)\n\n      const isLastPanel\n          = findPanelDataIndex(panelDataArray, panelData)\n            === panelDataArray.length - 1\n      const delta = isLastPanel\n        ? panelSize - collapsedSize\n        : collapsedSize - panelSize\n\n      const nextLayout = adjustLayoutByDelta({\n        delta,\n        layout: prevLayout,\n        panelConstraints: panelConstraintsArray,\n        pivotIndices,\n        trigger: 'imperative-api',\n      })\n\n      if (!compareLayouts(prevLayout, nextLayout)) {\n        setLayout(nextLayout)\n\n        eagerValuesRef.value.layout = nextLayout\n\n        emits('layout', nextLayout)\n\n        callPanelCallbacks(\n          panelDataArray,\n          nextLayout,\n          panelIdToLastNotifiedSizeMapRef.value,\n        )\n      }\n    }\n  }\n}\n\nfunction expandPanel(panelData: PanelData) {\n  const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n  if (panelData.constraints.collapsible) {\n    const panelConstraintsArray = panelDataArray.map(\n      panelData => panelData.constraints,\n    )\n\n    const {\n      collapsedSize = 0,\n      panelSize,\n      minSize = 0,\n      pivotIndices,\n    } = panelDataHelper(panelDataArray, panelData, prevLayout)\n\n    if (panelSize === collapsedSize) {\n      // Restore this panel to the size it was before it was collapsed, if possible.\n      const prevPanelSize = panelSizeBeforeCollapseRef.value.get(\n        panelData.id,\n      )\n\n      const baseSize\n          = prevPanelSize != null && prevPanelSize >= minSize\n            ? prevPanelSize\n            : minSize\n\n      const isLastPanel\n          = findPanelDataIndex(panelDataArray, panelData)\n            === panelDataArray.length - 1\n      const delta = isLastPanel ? panelSize - baseSize : baseSize - panelSize\n\n      const nextLayout = adjustLayoutByDelta({\n        delta,\n        layout: prevLayout,\n        panelConstraints: panelConstraintsArray,\n        pivotIndices,\n        trigger: 'imperative-api',\n      })\n\n      if (!compareLayouts(prevLayout, nextLayout)) {\n        setLayout(nextLayout)\n\n        eagerValuesRef.value.layout = nextLayout\n\n        emits('layout', nextLayout)\n\n        callPanelCallbacks(\n          panelDataArray,\n          nextLayout,\n          panelIdToLastNotifiedSizeMapRef.value,\n        )\n      }\n    }\n  }\n}\n\nfunction getPanelSize(panelData: PanelData) {\n  const { layout, panelDataArray } = eagerValuesRef.value\n\n  const { panelSize } = panelDataHelper(panelDataArray, panelData, layout)\n\n  assert(\n    panelSize != null,\n    `Panel size not found for panel \"${panelData.id}\"`,\n  )\n\n  return panelSize\n}\n\nfunction isPanelCollapsed(panelData: PanelData) {\n  const { layout, panelDataArray } = eagerValuesRef.value\n\n  const {\n    collapsedSize = 0,\n    collapsible,\n    panelSize,\n  } = panelDataHelper(panelDataArray, panelData, layout)\n\n  if (!collapsible)\n    return false\n\n  // panelSize is undefined during ssr due to vue ssr reactivity limitation.\n  if (panelSize === undefined) {\n    return panelData.constraints.defaultSize === panelData.constraints.collapsedSize\n  }\n  else {\n    return panelSize === collapsedSize\n  }\n}\n\nfunction isPanelExpanded(panelData: PanelData) {\n  const { layout, panelDataArray } = eagerValuesRef.value\n\n  const {\n    collapsedSize = 0,\n    collapsible,\n    panelSize,\n  } = panelDataHelper(panelDataArray, panelData, layout)\n\n  assert(\n    panelSize != null,\n    `Panel size not found for panel \"${panelData.id}\"`,\n  )\n\n  return !collapsible || panelSize > collapsedSize\n}\n\nprovidePanelGroupContext({\n  direction,\n  dragState: dragState.value,\n  groupId,\n  reevaluatePanelConstraints,\n  registerPanel,\n  registerResizeHandle,\n  resizePanel,\n  startDragging,\n  stopDragging,\n  unregisterPanel,\n  panelGroupElement: panelGroupElementRef,\n\n  collapsePanel,\n  expandPanel,\n  isPanelCollapsed,\n  isPanelExpanded,\n  getPanelSize,\n  getPanelStyle,\n})\n\nfunction findPanelDataIndex(panelDataArray: PanelData[], panelData: PanelData) {\n  return panelDataArray.findIndex(\n    prevPanelData =>\n      prevPanelData === panelData || prevPanelData.id === panelData.id,\n  )\n}\n\nfunction panelDataHelper(\n  panelDataArray: PanelData[],\n  panelData: PanelData,\n  layout: number[],\n) {\n  const panelIndex = findPanelDataIndex(panelDataArray, panelData)\n\n  const isLastPanel = panelIndex === panelDataArray.length - 1\n  const pivotIndices = isLastPanel\n    ? [panelIndex - 1, panelIndex]\n    : [panelIndex, panelIndex + 1]\n\n  const panelSize = layout[panelIndex]\n\n  return {\n    ...panelData.constraints,\n    panelSize,\n    pivotIndices,\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :style=\"{\n      display: 'flex',\n      flexDirection: direction === 'horizontal' ? 'row' : 'column',\n      height: '100%',\n      overflow: 'hidden',\n      width: '100%',\n    }\"\n    data-panel-group=\"\"\n    :data-orientation=\"direction\"\n    :data-panel-group-id=\"groupId\"\n  >\n    <slot :layout=\"layout\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { CSSProperties, Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed, ref, toRefs, watch, watchEffect } from 'vue'\nimport { areEqual, createContext, useDirection, useForwardExpose, useId } from '@/shared'\nimport { useWindowSplitterPanelGroupBehavior } from './utils/composables/useWindowSplitterPanelGroupBehavior'\nimport {\n  initializeDefaultStorage,\n  loadPanelGroupState,\n  savePanelGroupState,\n} from './utils/storage'\n\nexport interface SplitterGroupProps extends PrimitiveProps {\n  /** Group id; falls back to `useId` when not provided. */\n  id?: string | null\n  /** Unique id used to auto-save group arrangement via `localStorage`. */\n  autoSaveId?: string | null\n  /** The group orientation of splitter. */\n  direction: Direction\n  /** Step size when arrow key was pressed. */\n  keyboardResizeBy?: number | null\n  /** Custom storage API; defaults to localStorage */\n  storage?: PanelGroupStorage\n}\n\nexport type SplitterGroupEmits = {\n  /** Event handler called when group layout changes */\n  layout: [val: number[]]\n}\n\nconst LOCAL_STORAGE_DEBOUNCE_INTERVAL = 100\n\nexport type PanelGroupStorage = {\n  getItem: (name: string) => string | null\n  setItem: (name: string, value: string) => void\n}\n\nconst defaultStorage: PanelGroupStorage = {\n  getItem: (name: string) => {\n    initializeDefaultStorage(defaultStorage)\n    return defaultStorage.getItem(name)\n  },\n  setItem: (name: string, value: string) => {\n    initializeDefaultStorage(defaultStorage)\n    defaultStorage.setItem(name, value)\n  },\n}\n\nexport type PanelGroupContext = {\n  direction: Ref<Direction>\n  dragState: DragState | null\n  groupId: string\n  reevaluatePanelConstraints: (panelData: PanelData, prevConstraints: PanelConstraints) => void\n  registerPanel: (panelData: PanelData) => void\n  registerResizeHandle: (dragHandleId: string) => ResizeHandler\n  resizePanel: (panelData: PanelData, size: number) => void\n  startDragging: (dragHandleId: string, event: ResizeEvent) => void\n  stopDragging: () => void\n  unregisterPanel: (panelData: PanelData) => void\n  panelGroupElement: Ref<ParentNode | null>\n\n  // Exposed function for child component\n  collapsePanel: (panelData: PanelData) => void\n  expandPanel: (panelData: PanelData) => void\n  isPanelCollapsed: (panelData: PanelData) => boolean\n  isPanelExpanded: (panelData: PanelData) => boolean\n  getPanelSize: (panelData: PanelData) => number\n  getPanelStyle: (panelData: PanelData, defaultSize: number | undefined) => CSSProperties\n}\n\nexport const [injectPanelGroupContext, providePanelGroupContext] = createContext<PanelGroupContext>('PanelGroup')\n</script>\n\n<script setup lang=\"ts\">\nimport type { PanelConstraints, PanelData } from './SplitterPanel.vue'\n\nimport type { Direction, DragState, ResizeEvent, ResizeHandler } from './utils/types'\nimport { Primitive } from '@/Primitive'\nimport { assert } from './utils/assert'\nimport { calculateDeltaPercentage, calculateUnsafeDefaultLayout } from './utils/calculate'\nimport { callPanelCallbacks } from './utils/callPanelCallbacks'\nimport debounce from './utils/debounce'\nimport { getResizeHandleElement } from './utils/dom'\nimport { getResizeEventCursorPosition, isKeyDown, isMouseEvent, isTouchEvent } from './utils/events'\nimport { adjustLayoutByDelta, compareLayouts } from './utils/layout'\nimport { determinePivotIndices } from './utils/pivot'\nimport {\n  EXCEEDED_HORIZONTAL_MAX,\n  EXCEEDED_HORIZONTAL_MIN,\n  EXCEEDED_VERTICAL_MAX,\n  EXCEEDED_VERTICAL_MIN,\n  reportConstraintsViolation,\n} from './utils/registry'\nimport { computePanelFlexBoxStyle } from './utils/style'\nimport { validatePanelGroupLayout } from './utils/validation'\n\nconst props = withDefaults(defineProps<SplitterGroupProps>(), {\n  autoSaveId: null,\n  keyboardResizeBy: 10,\n  storage: () => defaultStorage,\n})\nconst emits = defineEmits<SplitterGroupEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current size of layout */\n    layout: typeof layout.value\n  }) => any\n}>()\n\nconst debounceMap: {\n  [key: string]: typeof savePanelGroupState\n} = {}\n\nconst { direction } = toRefs(props)\nconst groupId = useId(props.id, 'reka-splitter-group')\nconst dir = useDirection()\nconst { forwardRef, currentElement: panelGroupElementRef } = useForwardExpose()\n\nconst dragState = ref<DragState | null>(null)\nconst layout = ref<number[]>([])\nconst panelIdToLastNotifiedSizeMapRef = ref<Record<string, number>>({})\nconst panelSizeBeforeCollapseRef = ref<Map<string, number>>(new Map())\nconst prevDeltaRef = ref<number>(0)\n\nconst committedValuesRef = computed(() => ({\n  autoSaveId: props.autoSaveId,\n  direction: props.direction,\n  dragState: dragState.value,\n  id: groupId,\n  keyboardResizeBy: props.keyboardResizeBy,\n  storage: props.storage,\n}) satisfies {\n  autoSaveId: string | null\n  direction: Direction\n  dragState: DragState | null\n  id: string\n  keyboardResizeBy: number | null\n  storage: PanelGroupStorage\n})\n\nconst eagerValuesRef = ref<{\n  layout: number[]\n  panelDataArray: PanelData[]\n  panelDataArrayChanged: boolean\n}>({\n  layout: layout.value,\n  panelDataArray: [],\n  panelDataArrayChanged: false,\n})\n\nconst setLayout = (val: number[]) => layout.value = val\n\nuseWindowSplitterPanelGroupBehavior({\n  eagerValuesRef,\n  groupId,\n  layout,\n  panelDataArray: eagerValuesRef.value.panelDataArray,\n  setLayout,\n  panelGroupElement: panelGroupElementRef,\n})\n\nwatchEffect(() => {\n  const { panelDataArray } = eagerValuesRef.value\n  const { autoSaveId } = props\n  // If this panel has been configured to persist sizing information, save sizes to local storage.\n  if (autoSaveId) {\n    if (layout.value.length === 0 || layout.value.length !== panelDataArray.length)\n      return\n\n    let debouncedSave = debounceMap[autoSaveId]\n\n    // Limit the frequency of localStorage updates.\n    if (!debouncedSave) {\n      debouncedSave = debounce(\n        savePanelGroupState,\n        LOCAL_STORAGE_DEBOUNCE_INTERVAL,\n      )\n\n      debounceMap[autoSaveId] = debouncedSave\n    }\n\n    // Clone mutable data before passing to the debounced function,\n    // else we run the risk of saving an incorrect combination of mutable and immutable values to state.\n    const clonedPanelDataArray = [...panelDataArray]\n    const clonedPanelSizesBeforeCollapse = new Map(\n      panelSizeBeforeCollapseRef.value,\n    )\n\n    debouncedSave(\n      autoSaveId,\n      clonedPanelDataArray,\n      clonedPanelSizesBeforeCollapse,\n      layout.value,\n      props.storage,\n    )\n  }\n})\n\nfunction getPanelStyle(panelData: PanelData, defaultSize: number | undefined) {\n  const { panelDataArray } = eagerValuesRef.value\n\n  const panelIndex = findPanelDataIndex(panelDataArray, panelData)\n\n  return computePanelFlexBoxStyle({\n    defaultSize,\n    dragState: dragState.value,\n    layout: layout.value,\n    panelData: panelDataArray,\n    panelIndex,\n  })\n}\n\nfunction registerPanel(panelData: PanelData) {\n  const { panelDataArray } = eagerValuesRef.value\n\n  panelDataArray.push(panelData)\n  panelDataArray.sort((panelA, panelB) => {\n    const orderA = panelA.order\n    const orderB = panelB.order\n    if (orderA == null && orderB == null)\n      return 0\n    else if (orderA == null)\n      return -1\n    else if (orderB == null)\n      return 1\n    else\n      return orderA - orderB\n  })\n\n  eagerValuesRef.value.panelDataArrayChanged = true\n}\n\n// (Re)calculate group layout whenever panels are registered or unregistered.\n// useIsomorphicLayoutEffect\nwatch(() => eagerValuesRef.value.panelDataArrayChanged, () => {\n  if (eagerValuesRef.value.panelDataArrayChanged) {\n    eagerValuesRef.value.panelDataArrayChanged = false\n\n    const { autoSaveId, storage } = committedValuesRef.value\n    const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n    // If this panel has been configured to persist sizing information,\n    // default size should be restored from local storage if possible.\n    let unsafeLayout: number[] | null = null\n    if (autoSaveId) {\n      const state = loadPanelGroupState(autoSaveId, panelDataArray, storage)\n      if (state) {\n        panelSizeBeforeCollapseRef.value = new Map(\n          Object.entries(state.expandToSizes),\n        )\n        unsafeLayout = state.layout\n      }\n    }\n\n    if (unsafeLayout === null) {\n      unsafeLayout = calculateUnsafeDefaultLayout({\n        panelDataArray,\n      })\n    }\n\n    // Validate even saved layouts in case something has changed since last render\n    // e.g. for pixel groups, this could be the size of the window\n    const nextLayout = validatePanelGroupLayout({\n      layout: unsafeLayout,\n      panelConstraints: panelDataArray.map(\n        panelData => panelData.constraints,\n      ),\n    })\n\n    if (!areEqual(prevLayout, nextLayout)) {\n      setLayout(nextLayout)\n\n      eagerValuesRef.value.layout = nextLayout\n      emits('layout', nextLayout)\n\n      callPanelCallbacks(\n        panelDataArray,\n        nextLayout,\n        panelIdToLastNotifiedSizeMapRef.value,\n      )\n    }\n  }\n})\n\nfunction registerResizeHandle(dragHandleId: string) {\n  return function resizeHandler(event: ResizeEvent) {\n    event.preventDefault()\n    const panelGroupElement = panelGroupElementRef.value\n    if (!panelGroupElement)\n      return () => null\n\n    const { direction, dragState, id: groupId, keyboardResizeBy } = committedValuesRef.value\n    const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n    const { initialLayout } = dragState ?? {}\n\n    const pivotIndices = determinePivotIndices(\n      groupId,\n      dragHandleId,\n      panelGroupElement,\n    )\n\n    let delta = calculateDeltaPercentage(\n      event,\n      dragHandleId,\n      direction,\n      dragState,\n      keyboardResizeBy,\n      panelGroupElement,\n    )\n    if (delta === 0)\n      return\n\n    // Support RTL layouts\n    const isHorizontal = direction === 'horizontal'\n    if (dir.value === 'rtl' && isHorizontal)\n      delta = -delta\n\n    const panelConstraints = panelDataArray.map(panelData => panelData.constraints)\n\n    const nextLayout = adjustLayoutByDelta({\n      delta,\n      layout: initialLayout ?? prevLayout,\n      panelConstraints,\n      pivotIndices,\n      trigger: isKeyDown(event) ? 'keyboard' : 'mouse-or-touch',\n    })\n\n    const layoutChanged = !compareLayouts(prevLayout, nextLayout)\n\n    // Only update the cursor for layout changes triggered by touch/mouse events (not keyboard)\n    // Update the cursor even if the layout hasn't changed (we may need to show an invalid cursor state)\n    if (isMouseEvent(event) || isTouchEvent(event)) {\n      // Watch for multiple subsequent deltas; this might occur for tiny cursor movements.\n      // In this case, Panel sizes might not change–\n      // but updating cursor in this scenario would cause a flicker.\n      if (prevDeltaRef.value !== delta) {\n        prevDeltaRef.value = delta\n\n        if (!layoutChanged) {\n          // If the pointer has moved too far to resize the panel any further, note this so we can update the cursor.\n          // This mimics VS Code behavior.\n          if (isHorizontal) {\n            reportConstraintsViolation(\n              dragHandleId,\n              delta < 0 ? EXCEEDED_HORIZONTAL_MIN : EXCEEDED_HORIZONTAL_MAX,\n            )\n          }\n          else {\n            reportConstraintsViolation(\n              dragHandleId,\n              delta < 0 ? EXCEEDED_VERTICAL_MIN : EXCEEDED_VERTICAL_MAX,\n            )\n          }\n        }\n        else {\n          reportConstraintsViolation(dragHandleId, 0)\n        }\n      }\n    }\n\n    if (layoutChanged) {\n      setLayout(nextLayout)\n\n      eagerValuesRef.value.layout = nextLayout\n      emits('layout', nextLayout)\n\n      callPanelCallbacks(\n        panelDataArray,\n        nextLayout,\n        panelIdToLastNotifiedSizeMapRef.value,\n      )\n    }\n  }\n}\n\nfunction resizePanel(panelData: PanelData, unsafePanelSize: number) {\n  const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n  const panelConstraintsArray = panelDataArray.map(panelData => panelData.constraints)\n\n  const { panelSize, pivotIndices } = panelDataHelper(\n    panelDataArray,\n    panelData,\n    prevLayout,\n  )\n\n  assert(panelSize != null)\n\n  const isLastPanel = findPanelDataIndex(panelDataArray, panelData) === panelDataArray.length - 1\n  const delta = isLastPanel\n    ? panelSize - unsafePanelSize\n    : unsafePanelSize - panelSize\n\n  const nextLayout = adjustLayoutByDelta({\n    delta,\n    layout: prevLayout,\n    panelConstraints: panelConstraintsArray,\n    pivotIndices,\n    trigger: 'imperative-api',\n  })\n\n  if (!compareLayouts(prevLayout, nextLayout)) {\n    setLayout(nextLayout)\n\n    eagerValuesRef.value.layout = nextLayout\n    emits('layout', nextLayout)\n\n    callPanelCallbacks(\n      panelDataArray,\n      nextLayout,\n      panelIdToLastNotifiedSizeMapRef.value,\n    )\n  }\n}\n\nfunction reevaluatePanelConstraints(panelData: PanelData, prevConstraints: PanelConstraints) {\n  const { layout, panelDataArray } = eagerValuesRef.value\n  const index = findPanelDataIndex(panelDataArray, panelData)\n  panelDataArray[index] = panelData\n  eagerValuesRef.value.panelDataArrayChanged = true\n  const {\n    collapsedSize: prevCollapsedSize = 0,\n    collapsible: prevCollapsible,\n  } = prevConstraints\n\n  const {\n    collapsedSize: nextCollapsedSize = 0,\n    collapsible: nextCollapsible,\n    maxSize: nextMaxSize = 100,\n    minSize: nextMinSize = 0,\n  } = panelData.constraints\n\n  const { panelSize: prevPanelSize } = panelDataHelper(\n    panelDataArray,\n    panelData,\n    layout,\n  )\n  if (prevPanelSize === null) {\n    // It's possible that the panels in this group have changed since the last render\n    return\n  }\n\n  if (\n    prevCollapsible\n    && nextCollapsible\n    && prevPanelSize === prevCollapsedSize\n  ) {\n    if (prevCollapsedSize !== nextCollapsedSize) {\n      resizePanel(panelData, nextCollapsedSize)\n    }\n    else {\n      // Stay collapsed\n    }\n  }\n  else if (prevPanelSize < nextMinSize) {\n    resizePanel(panelData, nextMinSize)\n  }\n  else if (prevPanelSize > nextMaxSize) {\n    resizePanel(panelData, nextMaxSize)\n  }\n}\n\nfunction startDragging(dragHandleId: string, event: ResizeEvent) {\n  const { direction } = committedValuesRef.value\n  const { layout } = eagerValuesRef.value\n  if (!panelGroupElementRef.value)\n    return\n\n  const handleElement = getResizeHandleElement(\n    dragHandleId,\n    panelGroupElementRef.value,\n  )\n  assert(handleElement)\n\n  const initialCursorPosition = getResizeEventCursorPosition(\n    direction,\n    event,\n  )\n\n  dragState.value = {\n    dragHandleId,\n    dragHandleRect: handleElement.getBoundingClientRect(),\n    initialCursorPosition,\n    initialLayout: layout,\n  }\n}\nfunction stopDragging() {\n  dragState.value = null\n}\n\nfunction unregisterPanel(panelData: PanelData) {\n  const { panelDataArray } = eagerValuesRef.value\n\n  const index = findPanelDataIndex(panelDataArray, panelData)\n  if (index >= 0) {\n    panelDataArray.splice(index, 1)\n\n    // TRICKY\n    // When a panel is removed from the group, we should delete the most recent prev-size entry for it.\n    // If we don't do this, then a conditionally rendered panel might not call onResize when it's re-mounted.\n    // Strict effects mode makes this tricky though because all panels will be registered, unregistered, then re-registered on mount.\n    delete panelIdToLastNotifiedSizeMapRef.value[panelData.id]\n\n    eagerValuesRef.value.panelDataArrayChanged = true\n  }\n}\n\nfunction collapsePanel(panelData: PanelData) {\n  const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n  if (panelData.constraints.collapsible) {\n    const panelConstraintsArray = panelDataArray.map(\n      panelData => panelData.constraints,\n    )\n\n    const {\n      collapsedSize = 0,\n      panelSize,\n      pivotIndices,\n    } = panelDataHelper(panelDataArray, panelData, prevLayout)\n\n    assert(\n      panelSize != null,\n      `Panel size not found for panel \"${panelData.id}\"`,\n    )\n\n    if (panelSize !== collapsedSize) {\n      // Store size before collapse;\n      // This is the size that gets restored if the expand() API is used.\n      panelSizeBeforeCollapseRef.value.set(panelData.id, panelSize)\n\n      const isLastPanel\n          = findPanelDataIndex(panelDataArray, panelData)\n            === panelDataArray.length - 1\n      const delta = isLastPanel\n        ? panelSize - collapsedSize\n        : collapsedSize - panelSize\n\n      const nextLayout = adjustLayoutByDelta({\n        delta,\n        layout: prevLayout,\n        panelConstraints: panelConstraintsArray,\n        pivotIndices,\n        trigger: 'imperative-api',\n      })\n\n      if (!compareLayouts(prevLayout, nextLayout)) {\n        setLayout(nextLayout)\n\n        eagerValuesRef.value.layout = nextLayout\n\n        emits('layout', nextLayout)\n\n        callPanelCallbacks(\n          panelDataArray,\n          nextLayout,\n          panelIdToLastNotifiedSizeMapRef.value,\n        )\n      }\n    }\n  }\n}\n\nfunction expandPanel(panelData: PanelData) {\n  const { layout: prevLayout, panelDataArray } = eagerValuesRef.value\n\n  if (panelData.constraints.collapsible) {\n    const panelConstraintsArray = panelDataArray.map(\n      panelData => panelData.constraints,\n    )\n\n    const {\n      collapsedSize = 0,\n      panelSize,\n      minSize = 0,\n      pivotIndices,\n    } = panelDataHelper(panelDataArray, panelData, prevLayout)\n\n    if (panelSize === collapsedSize) {\n      // Restore this panel to the size it was before it was collapsed, if possible.\n      const prevPanelSize = panelSizeBeforeCollapseRef.value.get(\n        panelData.id,\n      )\n\n      const baseSize\n          = prevPanelSize != null && prevPanelSize >= minSize\n            ? prevPanelSize\n            : minSize\n\n      const isLastPanel\n          = findPanelDataIndex(panelDataArray, panelData)\n            === panelDataArray.length - 1\n      const delta = isLastPanel ? panelSize - baseSize : baseSize - panelSize\n\n      const nextLayout = adjustLayoutByDelta({\n        delta,\n        layout: prevLayout,\n        panelConstraints: panelConstraintsArray,\n        pivotIndices,\n        trigger: 'imperative-api',\n      })\n\n      if (!compareLayouts(prevLayout, nextLayout)) {\n        setLayout(nextLayout)\n\n        eagerValuesRef.value.layout = nextLayout\n\n        emits('layout', nextLayout)\n\n        callPanelCallbacks(\n          panelDataArray,\n          nextLayout,\n          panelIdToLastNotifiedSizeMapRef.value,\n        )\n      }\n    }\n  }\n}\n\nfunction getPanelSize(panelData: PanelData) {\n  const { layout, panelDataArray } = eagerValuesRef.value\n\n  const { panelSize } = panelDataHelper(panelDataArray, panelData, layout)\n\n  assert(\n    panelSize != null,\n    `Panel size not found for panel \"${panelData.id}\"`,\n  )\n\n  return panelSize\n}\n\nfunction isPanelCollapsed(panelData: PanelData) {\n  const { layout, panelDataArray } = eagerValuesRef.value\n\n  const {\n    collapsedSize = 0,\n    collapsible,\n    panelSize,\n  } = panelDataHelper(panelDataArray, panelData, layout)\n\n  if (!collapsible)\n    return false\n\n  // panelSize is undefined during ssr due to vue ssr reactivity limitation.\n  if (panelSize === undefined) {\n    return panelData.constraints.defaultSize === panelData.constraints.collapsedSize\n  }\n  else {\n    return panelSize === collapsedSize\n  }\n}\n\nfunction isPanelExpanded(panelData: PanelData) {\n  const { layout, panelDataArray } = eagerValuesRef.value\n\n  const {\n    collapsedSize = 0,\n    collapsible,\n    panelSize,\n  } = panelDataHelper(panelDataArray, panelData, layout)\n\n  assert(\n    panelSize != null,\n    `Panel size not found for panel \"${panelData.id}\"`,\n  )\n\n  return !collapsible || panelSize > collapsedSize\n}\n\nprovidePanelGroupContext({\n  direction,\n  dragState: dragState.value,\n  groupId,\n  reevaluatePanelConstraints,\n  registerPanel,\n  registerResizeHandle,\n  resizePanel,\n  startDragging,\n  stopDragging,\n  unregisterPanel,\n  panelGroupElement: panelGroupElementRef,\n\n  collapsePanel,\n  expandPanel,\n  isPanelCollapsed,\n  isPanelExpanded,\n  getPanelSize,\n  getPanelStyle,\n})\n\nfunction findPanelDataIndex(panelDataArray: PanelData[], panelData: PanelData) {\n  return panelDataArray.findIndex(\n    prevPanelData =>\n      prevPanelData === panelData || prevPanelData.id === panelData.id,\n  )\n}\n\nfunction panelDataHelper(\n  panelDataArray: PanelData[],\n  panelData: PanelData,\n  layout: number[],\n) {\n  const panelIndex = findPanelDataIndex(panelDataArray, panelData)\n\n  const isLastPanel = panelIndex === panelDataArray.length - 1\n  const pivotIndices = isLastPanel\n    ? [panelIndex - 1, panelIndex]\n    : [panelIndex, panelIndex + 1]\n\n  const panelSize = layout[panelIndex]\n\n  return {\n    ...panelData.constraints,\n    panelSize,\n    pivotIndices,\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :style=\"{\n      display: 'flex',\n      flexDirection: direction === 'horizontal' ? 'row' : 'column',\n      height: '100%',\n      overflow: 'hidden',\n      width: '100%',\n    }\"\n    data-panel-group=\"\"\n    :data-orientation=\"direction\"\n    :data-panel-group-id=\"groupId\"\n  >\n    <slot :layout=\"layout\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useId } from '@/shared'\nimport { PRECISION } from './utils/constants'\n\nexport interface SplitterPanelProps extends PrimitiveProps {\n  /** The size of panel when it is collapsed. */\n  collapsedSize?: number\n  /** Should panel collapse when resized beyond its `minSize`. When `true`, it will be collapsed to `collapsedSize`. */\n  collapsible?: boolean\n  /** Initial size of panel (numeric value between 1-100) */\n  defaultSize?: number\n  /** Panel id (unique within group); falls back to `useId` when not provided */\n  id?: string\n  /** The maximum allowable size of panel (numeric value between 1-100); defaults to `100` */\n  maxSize?: number\n  /** The minimum allowable size of panel (numeric value between 1-100); defaults to `10` */\n  minSize?: number\n  /** The order of panel within group; required for groups with conditionally rendered panels */\n  order?: number\n}\n\nexport type SplitterPanelEmits = {\n  /** Event handler called when panel is collapsed. */\n  collapse: []\n  /** Event handler called when panel is expanded. */\n  expand: []\n  /** Event handler called when panel is resized; size parameter is a numeric value between 1-100.  */\n  resize: [size: number, prevSize: number | undefined]\n}\n\nexport type PanelOnCollapse = () => void\nexport type PanelOnExpand = () => void\nexport type PanelOnResize = (\n  size: number,\n  prevSize: number | undefined\n) => void\n\nexport type PanelCallbacks = {\n  onCollapse?: PanelOnCollapse\n  onExpand?: PanelOnExpand\n  onResize?: PanelOnResize\n}\n\nexport type PanelConstraints = {\n  collapsedSize?: number | undefined\n  collapsible?: boolean | undefined\n  defaultSize?: number | undefined\n  /** Panel id (unique within group); falls back to useId when not provided */\n  maxSize?: number | undefined\n  minSize?: number | undefined\n}\n\nexport type PanelData = {\n  callbacks: PanelCallbacks\n  constraints: PanelConstraints\n  id: string\n  idIsFromProps: boolean\n  order: number | undefined\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted, watch } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPanelGroupContext } from './SplitterGroup.vue'\n\nconst props = defineProps<SplitterPanelProps>()\nconst emits = defineEmits<SplitterPanelEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Is the panel collapsed */\n    isCollapsed: typeof isCollapsed.value\n    /** Is the panel expanded */\n    isExpanded: typeof isExpanded.value\n    /** If panel is `collapsible`, collapse it fully. */\n    collapse: typeof collapse\n    /** If panel is currently collapsed, expand it to its most recent size. */\n    expand: typeof expand\n    /** Resize panel to the specified percentage (1 - 100). */\n    resize: typeof resize\n  }) => any\n}>()\n\nconst panelGroupContext = injectPanelGroupContext()\nif (panelGroupContext === null) {\n  throw new Error(\n    'SplitterPanel components must be rendered within a SplitterGroup container',\n  )\n}\n\nconst { collapsePanel, expandPanel, getPanelSize, getPanelStyle, isPanelCollapsed, resizePanel, groupId, reevaluatePanelConstraints, registerPanel, unregisterPanel } = panelGroupContext\nconst panelId = useId(props.id, 'reka-splitter-panel')\n\nconst panelDataRef = computed(() => ({\n  callbacks: {\n    onCollapse: () => emits('collapse'),\n    onExpand: () => emits('expand'),\n    onResize: (...args) => emits('resize', ...args),\n  },\n  constraints: {\n    collapsedSize: props.collapsedSize && Number.parseFloat(props.collapsedSize.toFixed(PRECISION)),\n    collapsible: props.collapsible,\n    defaultSize: props.defaultSize,\n    /** Panel id (unique within group); falls back to useId when not provided */\n    /** Panel id (unique within group); falls back to useId when not provided */\n    maxSize: props.maxSize,\n    minSize: props.minSize,\n  },\n  id: panelId,\n  idIsFromProps: props.id !== undefined,\n  order: props.order,\n}) satisfies PanelData)\n\nwatch(() => panelDataRef.value.constraints, (constraints, prevConstraints) => {\n  // If constraints have changed, we should revisit panel sizes.\n  // This is uncommon but may happen if people are trying to implement pixel based constraints.\n  if (\n    prevConstraints.collapsedSize !== constraints.collapsedSize\n    || prevConstraints.collapsible !== constraints.collapsible\n    || prevConstraints.maxSize !== constraints.maxSize\n    || prevConstraints.minSize !== constraints.minSize\n  ) {\n    reevaluatePanelConstraints(panelDataRef.value, prevConstraints)\n  }\n}, { deep: true })\n\nonMounted(() => {\n  registerPanel(panelDataRef.value)\n})\n\nonUnmounted(() => {\n  unregisterPanel(panelDataRef.value)\n})\n\nconst style = computed(() => getPanelStyle(panelDataRef.value, props.defaultSize))\n/** Panel id (unique within group); falls back to useId when not provided */\n\nconst isCollapsed = computed(() => isPanelCollapsed(panelDataRef.value))\nconst isExpanded = computed(() => !isCollapsed.value)\n\nfunction collapse() {\n  collapsePanel(panelDataRef.value)\n}\n\nfunction expand() {\n  expandPanel(panelDataRef.value)\n}\n\nfunction resize(size: number) {\n  resizePanel(panelDataRef.value, size)\n}\n\ndefineExpose({\n  /** If panel is `collapsible`, collapse it fully. */\n  collapse,\n  /** If panel is currently collapsed, expand it to its most recent size. */\n  expand,\n  /** Gets the current size of the panel as a percentage (1 - 100). */\n  getSize() {\n    return getPanelSize(panelDataRef.value)\n  },\n  /** Resize panel to the specified percentage (1 - 100). */\n  resize,\n  /** Returns `true` if the panel is currently collapsed */\n  isCollapsed,\n  /** Returns `true` if the panel is currently not collapsed */\n  isExpanded,\n})\n</script>\n\n<template>\n  <Primitive\n    :id=\"panelId\"\n    :style=\"style\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    data-panel=\"\"\n    :data-panel-collapsible=\"collapsible || undefined\"\n    :data-panel-group-id=\"groupId\"\n    :data-panel-id=\"panelId\"\n    :data-panel-size=\" Number.parseFloat(`${style.flexGrow}`).toFixed(1)\"\n    :data-state=\"collapsible ? isCollapsed ? 'collapsed' : 'expanded' : undefined\"\n  >\n    <slot\n      :is-collapsed=\"isCollapsed\"\n      :is-expanded=\"isExpanded\"\n      :expand=\"expand\"\n      :collapse=\"collapse\"\n      :resize=\"resize\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useId } from '@/shared'\nimport { PRECISION } from './utils/constants'\n\nexport interface SplitterPanelProps extends PrimitiveProps {\n  /** The size of panel when it is collapsed. */\n  collapsedSize?: number\n  /** Should panel collapse when resized beyond its `minSize`. When `true`, it will be collapsed to `collapsedSize`. */\n  collapsible?: boolean\n  /** Initial size of panel (numeric value between 1-100) */\n  defaultSize?: number\n  /** Panel id (unique within group); falls back to `useId` when not provided */\n  id?: string\n  /** The maximum allowable size of panel (numeric value between 1-100); defaults to `100` */\n  maxSize?: number\n  /** The minimum allowable size of panel (numeric value between 1-100); defaults to `10` */\n  minSize?: number\n  /** The order of panel within group; required for groups with conditionally rendered panels */\n  order?: number\n}\n\nexport type SplitterPanelEmits = {\n  /** Event handler called when panel is collapsed. */\n  collapse: []\n  /** Event handler called when panel is expanded. */\n  expand: []\n  /** Event handler called when panel is resized; size parameter is a numeric value between 1-100.  */\n  resize: [size: number, prevSize: number | undefined]\n}\n\nexport type PanelOnCollapse = () => void\nexport type PanelOnExpand = () => void\nexport type PanelOnResize = (\n  size: number,\n  prevSize: number | undefined\n) => void\n\nexport type PanelCallbacks = {\n  onCollapse?: PanelOnCollapse\n  onExpand?: PanelOnExpand\n  onResize?: PanelOnResize\n}\n\nexport type PanelConstraints = {\n  collapsedSize?: number | undefined\n  collapsible?: boolean | undefined\n  defaultSize?: number | undefined\n  /** Panel id (unique within group); falls back to useId when not provided */\n  maxSize?: number | undefined\n  minSize?: number | undefined\n}\n\nexport type PanelData = {\n  callbacks: PanelCallbacks\n  constraints: PanelConstraints\n  id: string\n  idIsFromProps: boolean\n  order: number | undefined\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onUnmounted, watch } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectPanelGroupContext } from './SplitterGroup.vue'\n\nconst props = defineProps<SplitterPanelProps>()\nconst emits = defineEmits<SplitterPanelEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Is the panel collapsed */\n    isCollapsed: typeof isCollapsed.value\n    /** Is the panel expanded */\n    isExpanded: typeof isExpanded.value\n    /** If panel is `collapsible`, collapse it fully. */\n    collapse: typeof collapse\n    /** If panel is currently collapsed, expand it to its most recent size. */\n    expand: typeof expand\n    /** Resize panel to the specified percentage (1 - 100). */\n    resize: typeof resize\n  }) => any\n}>()\n\nconst panelGroupContext = injectPanelGroupContext()\nif (panelGroupContext === null) {\n  throw new Error(\n    'SplitterPanel components must be rendered within a SplitterGroup container',\n  )\n}\n\nconst { collapsePanel, expandPanel, getPanelSize, getPanelStyle, isPanelCollapsed, resizePanel, groupId, reevaluatePanelConstraints, registerPanel, unregisterPanel } = panelGroupContext\nconst panelId = useId(props.id, 'reka-splitter-panel')\n\nconst panelDataRef = computed(() => ({\n  callbacks: {\n    onCollapse: () => emits('collapse'),\n    onExpand: () => emits('expand'),\n    onResize: (...args) => emits('resize', ...args),\n  },\n  constraints: {\n    collapsedSize: props.collapsedSize && Number.parseFloat(props.collapsedSize.toFixed(PRECISION)),\n    collapsible: props.collapsible,\n    defaultSize: props.defaultSize,\n    /** Panel id (unique within group); falls back to useId when not provided */\n    /** Panel id (unique within group); falls back to useId when not provided */\n    maxSize: props.maxSize,\n    minSize: props.minSize,\n  },\n  id: panelId,\n  idIsFromProps: props.id !== undefined,\n  order: props.order,\n}) satisfies PanelData)\n\nwatch(() => panelDataRef.value.constraints, (constraints, prevConstraints) => {\n  // If constraints have changed, we should revisit panel sizes.\n  // This is uncommon but may happen if people are trying to implement pixel based constraints.\n  if (\n    prevConstraints.collapsedSize !== constraints.collapsedSize\n    || prevConstraints.collapsible !== constraints.collapsible\n    || prevConstraints.maxSize !== constraints.maxSize\n    || prevConstraints.minSize !== constraints.minSize\n  ) {\n    reevaluatePanelConstraints(panelDataRef.value, prevConstraints)\n  }\n}, { deep: true })\n\nonMounted(() => {\n  registerPanel(panelDataRef.value)\n})\n\nonUnmounted(() => {\n  unregisterPanel(panelDataRef.value)\n})\n\nconst style = computed(() => getPanelStyle(panelDataRef.value, props.defaultSize))\n/** Panel id (unique within group); falls back to useId when not provided */\n\nconst isCollapsed = computed(() => isPanelCollapsed(panelDataRef.value))\nconst isExpanded = computed(() => !isCollapsed.value)\n\nfunction collapse() {\n  collapsePanel(panelDataRef.value)\n}\n\nfunction expand() {\n  expandPanel(panelDataRef.value)\n}\n\nfunction resize(size: number) {\n  resizePanel(panelDataRef.value, size)\n}\n\ndefineExpose({\n  /** If panel is `collapsible`, collapse it fully. */\n  collapse,\n  /** If panel is currently collapsed, expand it to its most recent size. */\n  expand,\n  /** Gets the current size of the panel as a percentage (1 - 100). */\n  getSize() {\n    return getPanelSize(panelDataRef.value)\n  },\n  /** Resize panel to the specified percentage (1 - 100). */\n  resize,\n  /** Returns `true` if the panel is currently collapsed */\n  isCollapsed,\n  /** Returns `true` if the panel is currently not collapsed */\n  isExpanded,\n})\n</script>\n\n<template>\n  <Primitive\n    :id=\"panelId\"\n    :style=\"style\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    data-panel=\"\"\n    :data-panel-collapsible=\"collapsible || undefined\"\n    :data-panel-group-id=\"groupId\"\n    :data-panel-id=\"panelId\"\n    :data-panel-size=\" Number.parseFloat(`${style.flexGrow}`).toFixed(1)\"\n    :data-state=\"collapsible ? isCollapsed ? 'collapsed' : 'expanded' : undefined\"\n  >\n    <slot\n      :is-collapsed=\"isCollapsed\"\n      :is-expanded=\"isExpanded\"\n      :expand=\"expand\"\n      :collapse=\"collapse\"\n      :resize=\"resize\"\n    />\n  </Primitive>\n</template>\n", "import type { Ref } from 'vue'\nimport type { ResizeHandler } from '../types'\nimport { watchEffect } from 'vue'\nimport { assert } from '../assert'\nimport { getResizeHandleElement, getResizeHandleElementIndex, getResizeHandleElementsForGroup } from '../dom'\n\n// https://www.w3.org/WAI/ARIA/apg/patterns/windowsplitter/\n\nexport function useWindowSplitterResizeHandlerBehavior({\n  disabled,\n  handleId,\n  resizeHandler,\n  panelGroupElement,\n}: {\n  disabled: Ref<boolean>\n  handleId: string\n  resizeHandler: Ref<ResizeHandler | null>\n  panelGroupElement: Ref<ParentNode | null>\n}): void {\n  watchEffect((onCleanup) => {\n    const _panelGroupElement = panelGroupElement.value\n    if (disabled.value || resizeHandler.value === null || _panelGroupElement === null)\n      return\n\n    const handleElement = getResizeHandleElement(handleId, _panelGroupElement)\n    if (handleElement == null)\n      return\n\n    const onKeyDown = (event: KeyboardEvent) => {\n      if (event.defaultPrevented)\n        return\n\n      switch (event.key) {\n        case 'ArrowDown':\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'ArrowUp':\n        case 'End':\n        case 'Home': {\n          event.preventDefault()\n\n          resizeHandler.value?.(event)\n          break\n        }\n        case 'F6': {\n          event.preventDefault()\n\n          const groupId = handleElement.getAttribute('data-panel-group-id')\n          assert(groupId)\n\n          const handles = getResizeHandleElementsForGroup(\n            groupId,\n            _panelGroupElement,\n          )\n          const index = getResizeHandleElementIndex(\n            groupId,\n            handleId,\n            _panelGroupElement,\n          )\n\n          assert(index !== null)\n\n          const nextIndex = event.shiftKey\n            ? index > 0\n              ? index - 1\n              : handles.length - 1\n            : index + 1 < handles.length\n              ? index + 1\n              : 0\n\n          const nextHandle = handles[nextIndex] as HTMLElement\n          nextHandle.focus()\n\n          break\n        }\n      }\n    }\n\n    handleElement.addEventListener('keydown', onKeyDown)\n    onCleanup(() => {\n      handleElement.removeEventListener('keydown', onKeyDown)\n    })\n  })\n}\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { ref, toRefs, watch, watchEffect } from 'vue'\nimport { useNonce } from '@/shared/useNonce'\nimport { useWindowSplitterResizeHandlerBehavior } from './utils/composables/useWindowSplitterBehavior'\n\nexport interface SplitterResizeHandleProps extends PrimitiveProps {\n  /** Resize handle id (unique within group); falls back to `useId` when not provided */\n  id?: string\n  /** Allow this much margin when determining resizable handle hit detection */\n  hitAreaMargins?: PointerHitAreaMargins\n  /** Tabindex for the handle */\n  tabindex?: number\n  /** Disable drag handle */\n  disabled?: boolean\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n\nexport type PanelResizeHandleOnDragging = (isDragging: boolean) => void\nexport type ResizeHandlerState = 'drag' | 'hover' | 'inactive'\n\nexport type SplitterResizeHandleEmits = {\n  /** Event handler called when dragging the handler. */\n  dragging: [isDragging: boolean]\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PointerHitAreaMargins, ResizeHandlerAction } from './utils/registry'\nimport type { ResizeEvent, ResizeHandler } from './utils/types'\nimport { Primitive } from '@/Primitive'\nimport { isBrowser, useForwardExpose, useId } from '@/shared'\nimport { injectPanelGroupContext } from './SplitterGroup.vue'\nimport { assert } from './utils/assert'\nimport { registerResizeHandle } from './utils/registry'\n\nconst props = withDefaults(defineProps<SplitterResizeHandleProps>(), {\n  tabindex: 0,\n})\nconst emits = defineEmits<SplitterResizeHandleEmits>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { disabled } = toRefs(props)\n\nconst panelGroupContext = injectPanelGroupContext()\nif (panelGroupContext === null) {\n  throw new Error(\n    'PanelResizeHandle components must be rendered within a PanelGroup container',\n  )\n}\n\nconst {\n  direction,\n  groupId,\n  registerResizeHandle: registerResizeHandleWithParentGroup,\n  startDragging,\n  stopDragging,\n  panelGroupElement,\n} = panelGroupContext\n\nconst resizeHandleId = useId(props.id, 'reka-splitter-resize-handle')\nconst state = ref<ResizeHandlerState>('inactive')\nconst isFocused = ref(false)\nconst resizeHandler = ref<ResizeHandler | null>(null)\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n\nwatch(disabled, () => {\n  if (!isBrowser)\n    return\n  if (disabled.value)\n    resizeHandler.value = null\n  else\n    resizeHandler.value = registerResizeHandleWithParentGroup(resizeHandleId)\n}, { immediate: true })\n\nwatchEffect((onCleanup) => {\n  if (disabled.value || resizeHandler.value === null)\n    return\n\n  const element = currentElement.value\n  if (!element)\n    return\n\n  assert(element)\n\n  const setResizeHandlerState = (\n    action: ResizeHandlerAction,\n    isActive: boolean,\n    event: ResizeEvent,\n  ) => {\n    if (isActive) {\n      switch (action) {\n        case 'down': {\n          state.value = 'drag'\n\n          startDragging(resizeHandleId, event)\n          emits('dragging', true)\n          break\n        }\n        case 'move': {\n          if (state.value !== 'drag')\n            state.value = 'hover'\n\n          resizeHandler.value?.(event)\n          break\n        }\n        case 'up': {\n          state.value = 'hover'\n\n          stopDragging()\n          emits('dragging', false)\n          break\n        }\n      }\n    }\n    else {\n      state.value = 'inactive'\n    }\n  }\n\n  onCleanup(registerResizeHandle(\n    resizeHandleId,\n    element,\n    direction,\n    {\n      // Coarse inputs (e.g. finger/touch)\n      coarse: props.hitAreaMargins?.coarse ?? 15,\n      // Fine inputs (e.g. mouse)\n      fine: props.hitAreaMargins?.fine ?? 5,\n    },\n    nonce,\n    setResizeHandlerState,\n  ))\n})\n\nuseWindowSplitterResizeHandlerBehavior({\n  disabled,\n  resizeHandler,\n  handleId: resizeHandleId,\n  panelGroupElement,\n})\n</script>\n\n<template>\n  <Primitive\n    :id=\"resizeHandleId\"\n    :ref=\"forwardRef\"\n    :style=\"{\n      touchAction: 'none',\n      userSelect: 'none',\n    }\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"separator\"\n    data-resize-handle=\"\"\n    :tabindex=\"tabindex\"\n    :data-state=\"state\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-orientation=\"direction\"\n    :data-panel-group-id=\"groupId\"\n    :data-resize-handle-active=\"state === 'drag' ? 'pointer' : isFocused ? 'keyboard' : undefined\"\n    :data-resize-handle-state=\"state\"\n    :data-panel-resize-handle-enabled=\"!disabled\"\n    :data-panel-resize-handle-id=\" resizeHandleId\"\n    @blur=\"isFocused = false\"\n    @focus=\"isFocused = false\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { ref, toRefs, watch, watchEffect } from 'vue'\nimport { useNonce } from '@/shared/useNonce'\nimport { useWindowSplitterResizeHandlerBehavior } from './utils/composables/useWindowSplitterBehavior'\n\nexport interface SplitterResizeHandleProps extends PrimitiveProps {\n  /** Resize handle id (unique within group); falls back to `useId` when not provided */\n  id?: string\n  /** Allow this much margin when determining resizable handle hit detection */\n  hitAreaMargins?: PointerHitAreaMargins\n  /** Tabindex for the handle */\n  tabindex?: number\n  /** Disable drag handle */\n  disabled?: boolean\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n\nexport type PanelResizeHandleOnDragging = (isDragging: boolean) => void\nexport type ResizeHandlerState = 'drag' | 'hover' | 'inactive'\n\nexport type SplitterResizeHandleEmits = {\n  /** Event handler called when dragging the handler. */\n  dragging: [isDragging: boolean]\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PointerHitAreaMargins, ResizeHandlerAction } from './utils/registry'\nimport type { ResizeEvent, ResizeHandler } from './utils/types'\nimport { Primitive } from '@/Primitive'\nimport { isBrowser, useForwardExpose, useId } from '@/shared'\nimport { injectPanelGroupContext } from './SplitterGroup.vue'\nimport { assert } from './utils/assert'\nimport { registerResizeHandle } from './utils/registry'\n\nconst props = withDefaults(defineProps<SplitterResizeHandleProps>(), {\n  tabindex: 0,\n})\nconst emits = defineEmits<SplitterResizeHandleEmits>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { disabled } = toRefs(props)\n\nconst panelGroupContext = injectPanelGroupContext()\nif (panelGroupContext === null) {\n  throw new Error(\n    'PanelResizeHandle components must be rendered within a PanelGroup container',\n  )\n}\n\nconst {\n  direction,\n  groupId,\n  registerResizeHandle: registerResizeHandleWithParentGroup,\n  startDragging,\n  stopDragging,\n  panelGroupElement,\n} = panelGroupContext\n\nconst resizeHandleId = useId(props.id, 'reka-splitter-resize-handle')\nconst state = ref<ResizeHandlerState>('inactive')\nconst isFocused = ref(false)\nconst resizeHandler = ref<ResizeHandler | null>(null)\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n\nwatch(disabled, () => {\n  if (!isBrowser)\n    return\n  if (disabled.value)\n    resizeHandler.value = null\n  else\n    resizeHandler.value = registerResizeHandleWithParentGroup(resizeHandleId)\n}, { immediate: true })\n\nwatchEffect((onCleanup) => {\n  if (disabled.value || resizeHandler.value === null)\n    return\n\n  const element = currentElement.value\n  if (!element)\n    return\n\n  assert(element)\n\n  const setResizeHandlerState = (\n    action: ResizeHandlerAction,\n    isActive: boolean,\n    event: ResizeEvent,\n  ) => {\n    if (isActive) {\n      switch (action) {\n        case 'down': {\n          state.value = 'drag'\n\n          startDragging(resizeHandleId, event)\n          emits('dragging', true)\n          break\n        }\n        case 'move': {\n          if (state.value !== 'drag')\n            state.value = 'hover'\n\n          resizeHandler.value?.(event)\n          break\n        }\n        case 'up': {\n          state.value = 'hover'\n\n          stopDragging()\n          emits('dragging', false)\n          break\n        }\n      }\n    }\n    else {\n      state.value = 'inactive'\n    }\n  }\n\n  onCleanup(registerResizeHandle(\n    resizeHandleId,\n    element,\n    direction,\n    {\n      // Coarse inputs (e.g. finger/touch)\n      coarse: props.hitAreaMargins?.coarse ?? 15,\n      // Fine inputs (e.g. mouse)\n      fine: props.hitAreaMargins?.fine ?? 5,\n    },\n    nonce,\n    setResizeHandlerState,\n  ))\n})\n\nuseWindowSplitterResizeHandlerBehavior({\n  disabled,\n  resizeHandler,\n  handleId: resizeHandleId,\n  panelGroupElement,\n})\n</script>\n\n<template>\n  <Primitive\n    :id=\"resizeHandleId\"\n    :ref=\"forwardRef\"\n    :style=\"{\n      touchAction: 'none',\n      userSelect: 'none',\n    }\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    role=\"separator\"\n    data-resize-handle=\"\"\n    :tabindex=\"tabindex\"\n    :data-state=\"state\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-orientation=\"direction\"\n    :data-panel-group-id=\"groupId\"\n    :data-resize-handle-active=\"state === 'drag' ? 'pointer' : isFocused ? 'keyboard' : undefined\"\n    :data-resize-handle-state=\"state\"\n    :data-panel-resize-handle-enabled=\"!disabled\"\n    :data-panel-resize-handle-id=\" resizeHandleId\"\n    @blur=\"isFocused = false\"\n    @focus=\"isFocused = false\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { DataOrientation, Direction } from '../shared/types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, ref, toRefs, watch } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface StepperRootContext {\n  modelValue: Ref<number | undefined>\n  changeModelValue: (value: number) => void\n  orientation: Ref<DataOrientation>\n  dir: Ref<Direction>\n  linear: Ref<boolean>\n  totalStepperItems: Ref<Set<HTMLElement>>\n}\n\nexport interface StepperRootProps extends PrimitiveProps {\n  /**\n   * The value of the step that should be active when initially rendered. Use when you do not need to control the state of the steps.\n   */\n  defaultValue?: number\n  /**\n   * The orientation the steps are laid out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down).\n   * @defaultValue horizontal\n   */\n  orientation?: DataOrientation\n  /**\n   * The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /** The controlled value of the step to activate. Can be bound as `v-model`. */\n  modelValue?: number\n  /** Whether or not the steps must be completed in order. */\n  linear?: boolean\n}\nexport type StepperRootEmits = {\n  /** Event handler called when the value changes */\n  'update:modelValue': [payload: number | undefined]\n}\n\nexport const [injectStepperRootContext, provideStepperRootContext]\n  = createContext<StepperRootContext>('StepperRoot')\n</script>\n\n<script setup lang=\"ts\">\nconst props = withDefaults(defineProps<StepperRootProps>(), {\n  orientation: 'horizontal',\n  linear: true,\n  defaultValue: 1,\n})\nconst emits = defineEmits<StepperRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current step */\n    modelValue: number | undefined\n    /** Total number of steps */\n    totalSteps: number\n    /** Whether or not the next step is disabled */\n    isNextDisabled: boolean\n    /** Whether or not the previous step is disabled */\n    isPrevDisabled: boolean\n    /** Whether or not the first step is active */\n    isFirstStep: boolean\n    /** Whether or not the last step is active */\n    isLastStep: boolean\n    /** Go to a specific step */\n    goToStep: (step: number) => void\n    /** Go to the next step */\n    nextStep: () => void\n    /** Go to the previous step */\n    prevStep: () => void\n    /** Whether or not there is a next step */\n    hasNext: () => boolean\n    /** Whether or not there is a previous step */\n    hasPrev: () => boolean\n  }) => any\n}>()\n\nconst { dir: propDir, orientation: propOrientation, linear } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst totalStepperItems = ref<Set<HTMLElement>>(new Set())\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst totalStepperItemsArray = computed(() => Array.from(totalStepperItems.value))\n\nconst isFirstStep = computed(() => modelValue.value === 1)\nconst isLastStep = computed(() => modelValue.value === totalStepperItemsArray.value.length)\n\nconst totalSteps = computed(() => totalStepperItems.value.size)\n\nfunction goToStep(step: number) {\n  if (step > totalSteps.value)\n    return\n\n  if (step < 1)\n    return\n\n  if (totalStepperItems.value.size && !!totalStepperItemsArray.value[step] && !!totalStepperItemsArray.value[step].getAttribute('disabled'))\n    return\n\n  if (linear.value) {\n    if (step > (modelValue.value ?? 1) + 1)\n      return\n  }\n\n  modelValue.value = step\n}\n\nfunction nextStep() {\n  goToStep((modelValue.value ?? 1) + 1)\n}\n\nfunction prevStep() {\n  goToStep((modelValue.value ?? 1) - 1)\n}\n\nfunction hasNext() {\n  return (modelValue.value ?? 1) < totalSteps.value\n}\n\nfunction hasPrev() {\n  return (modelValue.value ?? 1) > 1\n}\n\nconst nextStepperItem = ref<HTMLElement | null>(null)\nconst prevStepperItem = ref<HTMLElement | null>(null)\nconst isNextDisabled = computed(() => nextStepperItem.value ? nextStepperItem.value.getAttribute('disabled') === '' : true)\nconst isPrevDisabled = computed(() => prevStepperItem.value ? prevStepperItem.value.getAttribute('disabled') === '' : true)\n\nwatch(modelValue, async () => {\n  await nextTick(() => {\n    nextStepperItem.value = totalStepperItemsArray.value.length && modelValue.value! < totalStepperItemsArray.value.length ? totalStepperItemsArray.value[modelValue.value!] : null\n    prevStepperItem.value = totalStepperItemsArray.value.length && modelValue.value! > 1 ? totalStepperItemsArray.value[modelValue.value! - 2] : null\n  })\n})\nwatch(totalStepperItemsArray, async () => {\n  await nextTick(() => {\n    nextStepperItem.value = totalStepperItemsArray.value.length && modelValue.value! < totalStepperItemsArray.value.length ? totalStepperItemsArray.value[modelValue.value!] : null\n    prevStepperItem.value = totalStepperItemsArray.value.length && modelValue.value! > 1 ? totalStepperItemsArray.value[modelValue.value! - 2] : null\n  })\n})\n\nprovideStepperRootContext({\n  modelValue,\n  changeModelValue: (value: number) => {\n    modelValue.value = value\n  },\n  orientation: propOrientation,\n  dir,\n  linear,\n  totalStepperItems,\n})\n\ndefineExpose({\n  goToStep,\n  nextStep,\n  prevStep,\n  modelValue,\n  totalSteps,\n  isNextDisabled,\n  isPrevDisabled,\n  isFirstStep,\n  isLastStep,\n  hasNext,\n  hasPrev,\n})\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    role=\"group\"\n    aria-label=\"progress\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-linear=\"linear ? '' : undefined\"\n    :data-orientation=\"orientation\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :total-steps=\"totalStepperItems.size\"\n      :is-next-disabled=\"isNextDisabled\"\n      :is-prev-disabled=\"isPrevDisabled\"\n      :is-first-step=\"isFirstStep\"\n      :is-last-step=\"isLastStep\"\n      :go-to-step=\"goToStep\"\n      :next-step=\"nextStep\"\n      :prev-step=\"prevStep\"\n      :has-next=\"hasNext\"\n      :has-prev=\"hasPrev\"\n    />\n\n    <div\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n      role=\"status\"\n      :style=\"{\n        transform: 'translateX(-100%)',\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }\"\n    >\n      Step {{ modelValue }} of {{ totalStepperItems.size }}\n    </div>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { DataOrientation, Direction } from '../shared/types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, ref, toRefs, watch } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface StepperRootContext {\n  modelValue: Ref<number | undefined>\n  changeModelValue: (value: number) => void\n  orientation: Ref<DataOrientation>\n  dir: Ref<Direction>\n  linear: Ref<boolean>\n  totalStepperItems: Ref<Set<HTMLElement>>\n}\n\nexport interface StepperRootProps extends PrimitiveProps {\n  /**\n   * The value of the step that should be active when initially rendered. Use when you do not need to control the state of the steps.\n   */\n  defaultValue?: number\n  /**\n   * The orientation the steps are laid out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down).\n   * @defaultValue horizontal\n   */\n  orientation?: DataOrientation\n  /**\n   * The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /** The controlled value of the step to activate. Can be bound as `v-model`. */\n  modelValue?: number\n  /** Whether or not the steps must be completed in order. */\n  linear?: boolean\n}\nexport type StepperRootEmits = {\n  /** Event handler called when the value changes */\n  'update:modelValue': [payload: number | undefined]\n}\n\nexport const [injectStepperRootContext, provideStepperRootContext]\n  = createContext<StepperRootContext>('StepperRoot')\n</script>\n\n<script setup lang=\"ts\">\nconst props = withDefaults(defineProps<StepperRootProps>(), {\n  orientation: 'horizontal',\n  linear: true,\n  defaultValue: 1,\n})\nconst emits = defineEmits<StepperRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current step */\n    modelValue: number | undefined\n    /** Total number of steps */\n    totalSteps: number\n    /** Whether or not the next step is disabled */\n    isNextDisabled: boolean\n    /** Whether or not the previous step is disabled */\n    isPrevDisabled: boolean\n    /** Whether or not the first step is active */\n    isFirstStep: boolean\n    /** Whether or not the last step is active */\n    isLastStep: boolean\n    /** Go to a specific step */\n    goToStep: (step: number) => void\n    /** Go to the next step */\n    nextStep: () => void\n    /** Go to the previous step */\n    prevStep: () => void\n    /** Whether or not there is a next step */\n    hasNext: () => boolean\n    /** Whether or not there is a previous step */\n    hasPrev: () => boolean\n  }) => any\n}>()\n\nconst { dir: propDir, orientation: propOrientation, linear } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst totalStepperItems = ref<Set<HTMLElement>>(new Set())\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst totalStepperItemsArray = computed(() => Array.from(totalStepperItems.value))\n\nconst isFirstStep = computed(() => modelValue.value === 1)\nconst isLastStep = computed(() => modelValue.value === totalStepperItemsArray.value.length)\n\nconst totalSteps = computed(() => totalStepperItems.value.size)\n\nfunction goToStep(step: number) {\n  if (step > totalSteps.value)\n    return\n\n  if (step < 1)\n    return\n\n  if (totalStepperItems.value.size && !!totalStepperItemsArray.value[step] && !!totalStepperItemsArray.value[step].getAttribute('disabled'))\n    return\n\n  if (linear.value) {\n    if (step > (modelValue.value ?? 1) + 1)\n      return\n  }\n\n  modelValue.value = step\n}\n\nfunction nextStep() {\n  goToStep((modelValue.value ?? 1) + 1)\n}\n\nfunction prevStep() {\n  goToStep((modelValue.value ?? 1) - 1)\n}\n\nfunction hasNext() {\n  return (modelValue.value ?? 1) < totalSteps.value\n}\n\nfunction hasPrev() {\n  return (modelValue.value ?? 1) > 1\n}\n\nconst nextStepperItem = ref<HTMLElement | null>(null)\nconst prevStepperItem = ref<HTMLElement | null>(null)\nconst isNextDisabled = computed(() => nextStepperItem.value ? nextStepperItem.value.getAttribute('disabled') === '' : true)\nconst isPrevDisabled = computed(() => prevStepperItem.value ? prevStepperItem.value.getAttribute('disabled') === '' : true)\n\nwatch(modelValue, async () => {\n  await nextTick(() => {\n    nextStepperItem.value = totalStepperItemsArray.value.length && modelValue.value! < totalStepperItemsArray.value.length ? totalStepperItemsArray.value[modelValue.value!] : null\n    prevStepperItem.value = totalStepperItemsArray.value.length && modelValue.value! > 1 ? totalStepperItemsArray.value[modelValue.value! - 2] : null\n  })\n})\nwatch(totalStepperItemsArray, async () => {\n  await nextTick(() => {\n    nextStepperItem.value = totalStepperItemsArray.value.length && modelValue.value! < totalStepperItemsArray.value.length ? totalStepperItemsArray.value[modelValue.value!] : null\n    prevStepperItem.value = totalStepperItemsArray.value.length && modelValue.value! > 1 ? totalStepperItemsArray.value[modelValue.value! - 2] : null\n  })\n})\n\nprovideStepperRootContext({\n  modelValue,\n  changeModelValue: (value: number) => {\n    modelValue.value = value\n  },\n  orientation: propOrientation,\n  dir,\n  linear,\n  totalStepperItems,\n})\n\ndefineExpose({\n  goToStep,\n  nextStep,\n  prevStep,\n  modelValue,\n  totalSteps,\n  isNextDisabled,\n  isPrevDisabled,\n  isFirstStep,\n  isLastStep,\n  hasNext,\n  hasPrev,\n})\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    role=\"group\"\n    aria-label=\"progress\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-linear=\"linear ? '' : undefined\"\n    :data-orientation=\"orientation\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :total-steps=\"totalStepperItems.size\"\n      :is-next-disabled=\"isNextDisabled\"\n      :is-prev-disabled=\"isPrevDisabled\"\n      :is-first-step=\"isFirstStep\"\n      :is-last-step=\"isLastStep\"\n      :go-to-step=\"goToStep\"\n      :next-step=\"nextStep\"\n      :prev-step=\"prevStep\"\n      :has-next=\"hasNext\"\n      :has-prev=\"hasPrev\"\n    />\n\n    <div\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n      role=\"status\"\n      :style=\"{\n        transform: 'translateX(-100%)',\n        position: 'absolute',\n        pointerEvents: 'none',\n        opacity: 0,\n        margin: 0,\n      }\"\n    >\n      Step {{ modelValue }} of {{ totalStepperItems.size }}\n    </div>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\n\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { createContext, useForwardExpose, useId } from '@/shared'\nimport { injectStepperRootContext } from './StepperRoot.vue'\n\nexport const [injectStepperItemContext, provideStepperItemContext] = createContext<StepperItemContext>('StepperItem')\n\nexport type StepperState = 'completed' | 'active' | 'inactive'\n\nexport interface StepperItemContext {\n  titleId: string\n  descriptionId: string\n  step: Ref<number>\n  state: Ref<StepperState>\n  disabled: Ref<boolean>\n  isFocusable: Ref<boolean>\n}\n\nexport interface StepperItemProps extends PrimitiveProps {\n  /** A unique value that associates the stepper item with an index */\n  step: number\n  /** When `true`, prevents the user from interacting with the step. */\n  disabled?: boolean\n  /** Shows whether the step is completed. */\n  completed?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = withDefaults(defineProps<StepperItemProps>(), {\n  completed: false,\n  disabled: false,\n})\n\ndefineSlots<{\n  default?: (props: {\n    /** The current state of the stepper item */\n    state: StepperState\n  }) => any\n}>()\n\nconst { disabled, step, completed } = toRefs(props)\n\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectStepperRootContext()\n\nconst titleId = useId(undefined, 'reka-stepper-item-title')\nconst descriptionId = useId(undefined, 'reka-stepper-item-description')\n\nconst itemState = computed(() => {\n  if (completed.value)\n    return 'completed'\n  if (rootContext.modelValue.value === step.value)\n    return 'active'\n  if (rootContext.modelValue.value! > step.value)\n    return 'completed'\n  return 'inactive'\n})\n\nconst isFocusable = computed(() => {\n  if (disabled.value)\n    return false\n  if (rootContext.linear.value)\n    return step.value <= rootContext.modelValue.value! || step.value === rootContext.modelValue.value! + 1\n\n  return true\n})\n\nprovideStepperItemContext({\n  titleId,\n  descriptionId,\n  state: itemState,\n  disabled,\n  step,\n  isFocusable,\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :aria-current=\"itemState === 'active' ? 'true' : undefined\"\n    :data-state=\"itemState\"\n    :disabled=\"disabled || !isFocusable ? '' : undefined\"\n    :data-disabled=\"disabled || !isFocusable ? '' : undefined\"\n    :data-orientation=\"rootContext.orientation.value\"\n  >\n    <slot :state=\"itemState\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\n\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { createContext, useForwardExpose, useId } from '@/shared'\nimport { injectStepperRootContext } from './StepperRoot.vue'\n\nexport const [injectStepperItemContext, provideStepperItemContext] = createContext<StepperItemContext>('StepperItem')\n\nexport type StepperState = 'completed' | 'active' | 'inactive'\n\nexport interface StepperItemContext {\n  titleId: string\n  descriptionId: string\n  step: Ref<number>\n  state: Ref<StepperState>\n  disabled: Ref<boolean>\n  isFocusable: Ref<boolean>\n}\n\nexport interface StepperItemProps extends PrimitiveProps {\n  /** A unique value that associates the stepper item with an index */\n  step: number\n  /** When `true`, prevents the user from interacting with the step. */\n  disabled?: boolean\n  /** Shows whether the step is completed. */\n  completed?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = withDefaults(defineProps<StepperItemProps>(), {\n  completed: false,\n  disabled: false,\n})\n\ndefineSlots<{\n  default?: (props: {\n    /** The current state of the stepper item */\n    state: StepperState\n  }) => any\n}>()\n\nconst { disabled, step, completed } = toRefs(props)\n\nconst { forwardRef } = useForwardExpose()\n\nconst rootContext = injectStepperRootContext()\n\nconst titleId = useId(undefined, 'reka-stepper-item-title')\nconst descriptionId = useId(undefined, 'reka-stepper-item-description')\n\nconst itemState = computed(() => {\n  if (completed.value)\n    return 'completed'\n  if (rootContext.modelValue.value === step.value)\n    return 'active'\n  if (rootContext.modelValue.value! > step.value)\n    return 'completed'\n  return 'inactive'\n})\n\nconst isFocusable = computed(() => {\n  if (disabled.value)\n    return false\n  if (rootContext.linear.value)\n    return step.value <= rootContext.modelValue.value! || step.value === rootContext.modelValue.value! + 1\n\n  return true\n})\n\nprovideStepperItemContext({\n  titleId,\n  descriptionId,\n  state: itemState,\n  disabled,\n  step,\n  isFocusable,\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :aria-current=\"itemState === 'active' ? 'true' : undefined\"\n    :data-state=\"itemState\"\n    :disabled=\"disabled || !isFocusable ? '' : undefined\"\n    :data-disabled=\"disabled || !isFocusable ? '' : undefined\"\n    :data-orientation=\"rootContext.orientation.value\"\n  >\n    <slot :state=\"itemState\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectStepperItemContext } from './StepperItem.vue'\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nexport interface StepperDescriptionProps extends PrimitiveProps { }\n\nconst props = withDefaults(defineProps<StepperDescriptionProps>(), { as: 'p' })\n\nuseForwardExpose()\nconst itemContext = injectStepperItemContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"itemContext.descriptionId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectStepperItemContext } from './StepperItem.vue'\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nexport interface StepperDescriptionProps extends PrimitiveProps { }\n\nconst props = withDefaults(defineProps<StepperDescriptionProps>(), { as: 'p' })\n\nuseForwardExpose()\nconst itemContext = injectStepperItemContext()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"itemContext.descriptionId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectStepperItemContext } from './StepperItem.vue'\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nexport interface StepperIndicatorProps extends PrimitiveProps { }\n\nconst props = defineProps<StepperIndicatorProps>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current step */\n    step: number\n  }) => any\n}>()\n\nconst itemContext = injectStepperItemContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n  >\n    <slot :step=\"itemContext.step.value\">\n      Step {{ itemContext.step.value }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectStepperItemContext } from './StepperItem.vue'\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nexport interface StepperIndicatorProps extends PrimitiveProps { }\n\nconst props = defineProps<StepperIndicatorProps>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current step */\n    step: number\n  }) => any\n}>()\n\nconst itemContext = injectStepperItemContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n  >\n    <slot :step=\"itemContext.step.value\">\n      Step {{ itemContext.step.value }}\n    </slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { SeparatorProps } from '@/Separator'\nimport { Separator } from '@/Separator'\nimport { useForwardExpose } from '@/shared'\nimport { injectStepperItemContext } from './StepperItem.vue'\nimport { injectStepperRootContext } from './StepperRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nexport interface StepperSeparatorProps extends SeparatorProps { }\n\nconst props = withDefaults(defineProps<StepperSeparatorProps>(), {})\n\nconst rootContext = injectStepperRootContext()\nconst itemContext = injectStepperItemContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Separator\n    v-bind=\"props\"\n    decorative\n    :orientation=\"rootContext.orientation.value\"\n    :data-state=\"itemContext.state.value\"\n  >\n    <slot />\n  </Separator>\n</template>\n", "<script lang=\"ts\">\nimport type { SeparatorProps } from '@/Separator'\nimport { Separator } from '@/Separator'\nimport { useForwardExpose } from '@/shared'\nimport { injectStepperItemContext } from './StepperItem.vue'\nimport { injectStepperRootContext } from './StepperRoot.vue'\n</script>\n\n<script setup lang=\"ts\">\nexport interface StepperSeparatorProps extends SeparatorProps { }\n\nconst props = withDefaults(defineProps<StepperSeparatorProps>(), {})\n\nconst rootContext = injectStepperRootContext()\nconst itemContext = injectStepperItemContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Separator\n    v-bind=\"props\"\n    decorative\n    :orientation=\"rootContext.orientation.value\"\n    :data-state=\"itemContext.state.value\"\n  >\n    <slot />\n  </Separator>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectStepperItemContext } from './StepperItem.vue'\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nexport interface StepperTitleProps extends PrimitiveProps { }\n\nconst props = withDefaults(defineProps<StepperTitleProps>(), { as: 'h4' })\nconst itemContext = injectStepperItemContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"itemContext.titleId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectStepperItemContext } from './StepperItem.vue'\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nexport interface StepperTitleProps extends PrimitiveProps { }\n\nconst props = withDefaults(defineProps<StepperTitleProps>(), { as: 'h4' })\nconst itemContext = injectStepperItemContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"itemContext.titleId\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { getActiveElement, useArrowNavigation, useForwardExpose, useKbd } from '@/shared'\n\nexport interface StepperTriggerProps extends PrimitiveProps {\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectStepperItemContext } from './StepperItem.vue'\nimport { injectStepperRootContext } from './StepperRoot.vue'\n\nwithDefaults(defineProps<StepperTriggerProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectStepperRootContext()\nconst itemContext = injectStepperItemContext()\n\nconst kbd = useKbd()\nconst stepperItems = computed(() => Array.from(rootContext.totalStepperItems.value))\n\nfunction handleMouseDown(event: MouseEvent) {\n  if (itemContext.disabled.value)\n    return\n  if (rootContext.linear.value) {\n    if (itemContext.step.value <= rootContext.modelValue.value! || itemContext.step.value === rootContext.modelValue.value! + 1) {\n      if (event.ctrlKey === false) {\n        rootContext.changeModelValue(itemContext.step.value)\n        return\n      }\n    }\n  }\n  else {\n    if (event.ctrlKey === false) {\n      rootContext.changeModelValue(itemContext.step.value)\n      return\n    }\n  }\n\n  // prevent focus to avoid accidental activation\n  event.preventDefault()\n}\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  event.preventDefault()\n\n  if (itemContext.disabled.value)\n    return\n\n  if ((event.key === kbd.ENTER || event.key === kbd.SPACE) && !event.ctrlKey && !event.shiftKey)\n    rootContext.changeModelValue(itemContext.step.value)\n\n  if ([kbd.ARROW_LEFT, kbd.ARROW_RIGHT, kbd.ARROW_UP, kbd.ARROW_DOWN].includes(event.key)) {\n    useArrowNavigation(event, getActiveElement() as HTMLElement, undefined, {\n      itemsArray: stepperItems.value,\n      focus: true,\n      loop: false,\n      arrowKeyOptions: rootContext.orientation.value,\n      dir: rootContext.dir.value,\n    })\n  }\n}\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nonMounted(() => {\n  rootContext.totalStepperItems.value.add(currentElement.value)\n})\n\nonUnmounted(() => {\n  rootContext.totalStepperItems.value.delete(currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-state=\"itemContext.state.value\"\n    :disabled=\"itemContext.disabled.value || !itemContext.isFocusable.value ? '' : undefined\"\n    :data-disabled=\"itemContext.disabled.value || !itemContext.isFocusable.value ? '' : undefined\"\n    :data-orientation=\"rootContext.orientation.value\"\n    :tabindex=\"itemContext.isFocusable.value ? 0 : -1\"\n    :aria-describedby=\"itemContext.descriptionId\"\n    :aria-labelledby=\"itemContext.titleId\"\n    @mousedown.left=\"handleMouseDown\"\n    @keydown.enter.space.left.right.up.down=\"handleKeyDown\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { getActiveElement, useArrowNavigation, useForwardExpose, useKbd } from '@/shared'\n\nexport interface StepperTriggerProps extends PrimitiveProps {\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectStepperItemContext } from './StepperItem.vue'\nimport { injectStepperRootContext } from './StepperRoot.vue'\n\nwithDefaults(defineProps<StepperTriggerProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectStepperRootContext()\nconst itemContext = injectStepperItemContext()\n\nconst kbd = useKbd()\nconst stepperItems = computed(() => Array.from(rootContext.totalStepperItems.value))\n\nfunction handleMouseDown(event: MouseEvent) {\n  if (itemContext.disabled.value)\n    return\n  if (rootContext.linear.value) {\n    if (itemContext.step.value <= rootContext.modelValue.value! || itemContext.step.value === rootContext.modelValue.value! + 1) {\n      if (event.ctrlKey === false) {\n        rootContext.changeModelValue(itemContext.step.value)\n        return\n      }\n    }\n  }\n  else {\n    if (event.ctrlKey === false) {\n      rootContext.changeModelValue(itemContext.step.value)\n      return\n    }\n  }\n\n  // prevent focus to avoid accidental activation\n  event.preventDefault()\n}\n\nfunction handleKeyDown(event: KeyboardEvent) {\n  event.preventDefault()\n\n  if (itemContext.disabled.value)\n    return\n\n  if ((event.key === kbd.ENTER || event.key === kbd.SPACE) && !event.ctrlKey && !event.shiftKey)\n    rootContext.changeModelValue(itemContext.step.value)\n\n  if ([kbd.ARROW_LEFT, kbd.ARROW_RIGHT, kbd.ARROW_UP, kbd.ARROW_DOWN].includes(event.key)) {\n    useArrowNavigation(event, getActiveElement() as HTMLElement, undefined, {\n      itemsArray: stepperItems.value,\n      focus: true,\n      loop: false,\n      arrowKeyOptions: rootContext.orientation.value,\n      dir: rootContext.dir.value,\n    })\n  }\n}\n\nconst { forwardRef, currentElement } = useForwardExpose()\n\nonMounted(() => {\n  rootContext.totalStepperItems.value.add(currentElement.value)\n})\n\nonUnmounted(() => {\n  rootContext.totalStepperItems.value.delete(currentElement.value)\n})\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :data-state=\"itemContext.state.value\"\n    :disabled=\"itemContext.disabled.value || !itemContext.isFocusable.value ? '' : undefined\"\n    :data-disabled=\"itemContext.disabled.value || !itemContext.isFocusable.value ? '' : undefined\"\n    :data-orientation=\"rootContext.orientation.value\"\n    :tabindex=\"itemContext.isFocusable.value ? 0 : -1\"\n    :aria-describedby=\"itemContext.descriptionId\"\n    :aria-labelledby=\"itemContext.titleId\"\n    @mousedown.left=\"handleMouseDown\"\n    @keydown.enter.space.left.right.up.down=\"handleKeyDown\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { FormFieldProps } from '@/shared/types'\nimport { createContext, useFormControl, useForwardExpose } from '@/shared'\n\nexport interface SwitchRootProps extends PrimitiveProps, FormFieldProps {\n  /** The state of the switch when it is initially rendered. Use when you do not need to control its state. */\n  defaultValue?: boolean\n  /** The controlled state of the switch. Can be bind as `v-model`. */\n  modelValue?: boolean | null\n  /** When `true`, prevents the user from interacting with the switch. */\n  disabled?: boolean\n  id?: string\n  /** The value given as data when submitted with a `name`. */\n  value?: string\n}\n\nexport type SwitchRootEmits = {\n  /** Event handler called when the value of the switch changes. */\n  'update:modelValue': [payload: boolean]\n}\n\nexport interface SwitchRootContext {\n  modelValue?: Ref<boolean>\n  toggleCheck: () => void\n  disabled: Ref<boolean>\n}\n\nexport const [injectSwitchRootContext, provideSwitchRootContext]\n  = createContext<SwitchRootContext>('SwitchRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\nconst props = withDefaults(defineProps<SwitchRootProps>(), {\n  as: 'button',\n  modelValue: undefined,\n  value: 'on',\n})\nconst emit = defineEmits<SwitchRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current value */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { disabled } = toRefs(props)\n\nconst modelValue = useVModel(props, 'modelValue', emit, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<boolean>\n\nfunction toggleCheck() {\n  if (disabled.value)\n    return\n\n  modelValue.value = !modelValue.value\n}\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst isFormControl = useFormControl(currentElement)\nconst ariaLabel = computed(() => props.id && currentElement.value ? (document.querySelector(`[for=\"${props.id}\"]`) as HTMLLabelElement)?.innerText : undefined)\n\nprovideSwitchRootContext({\n  modelValue,\n  toggleCheck,\n  disabled,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    :id=\"id\"\n    :ref=\"forwardRef\"\n    role=\"switch\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :value=\"value\"\n    :aria-label=\"$attrs['aria-label'] || ariaLabel\"\n    :aria-checked=\"modelValue\"\n    :aria-required=\"required\"\n    :data-state=\"modelValue ? 'checked' : 'unchecked'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :disabled=\"disabled\"\n    @click=\"toggleCheck\"\n    @keydown.enter.prevent=\"toggleCheck\"\n  >\n    <slot :model-value=\"modelValue\" />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :value=\"value\"\n      :checked=\"!!modelValue\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { FormFieldProps } from '@/shared/types'\nimport { createContext, useFormControl, useForwardExpose } from '@/shared'\n\nexport interface SwitchRootProps extends PrimitiveProps, FormFieldProps {\n  /** The state of the switch when it is initially rendered. Use when you do not need to control its state. */\n  defaultValue?: boolean\n  /** The controlled state of the switch. Can be bind as `v-model`. */\n  modelValue?: boolean | null\n  /** When `true`, prevents the user from interacting with the switch. */\n  disabled?: boolean\n  id?: string\n  /** The value given as data when submitted with a `name`. */\n  value?: string\n}\n\nexport type SwitchRootEmits = {\n  /** Event handler called when the value of the switch changes. */\n  'update:modelValue': [payload: boolean]\n}\n\nexport interface SwitchRootContext {\n  modelValue?: Ref<boolean>\n  toggleCheck: () => void\n  disabled: Ref<boolean>\n}\n\nexport const [injectSwitchRootContext, provideSwitchRootContext]\n  = createContext<SwitchRootContext>('SwitchRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\nconst props = withDefaults(defineProps<SwitchRootProps>(), {\n  as: 'button',\n  modelValue: undefined,\n  value: 'on',\n})\nconst emit = defineEmits<SwitchRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current value */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { disabled } = toRefs(props)\n\nconst modelValue = useVModel(props, 'modelValue', emit, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<boolean>\n\nfunction toggleCheck() {\n  if (disabled.value)\n    return\n\n  modelValue.value = !modelValue.value\n}\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst isFormControl = useFormControl(currentElement)\nconst ariaLabel = computed(() => props.id && currentElement.value ? (document.querySelector(`[for=\"${props.id}\"]`) as HTMLLabelElement)?.innerText : undefined)\n\nprovideSwitchRootContext({\n  modelValue,\n  toggleCheck,\n  disabled,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    :id=\"id\"\n    :ref=\"forwardRef\"\n    role=\"switch\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :value=\"value\"\n    :aria-label=\"$attrs['aria-label'] || ariaLabel\"\n    :aria-checked=\"modelValue\"\n    :aria-required=\"required\"\n    :data-state=\"modelValue ? 'checked' : 'unchecked'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n    :disabled=\"disabled\"\n    @click=\"toggleCheck\"\n    @keydown.enter.prevent=\"toggleCheck\"\n  >\n    <slot :model-value=\"modelValue\" />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :value=\"value\"\n      :checked=\"!!modelValue\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SwitchThumbProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSwitchRootContext } from './SwitchRoot.vue'\n\nwithDefaults(defineProps<SwitchThumbProps>(), { as: 'span' })\n\nconst rootContext = injectSwitchRootContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :data-state=\"rootContext.modelValue?.value ? 'checked' : 'unchecked'\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface SwitchThumbProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { injectSwitchRootContext } from './SwitchRoot.vue'\n\nwithDefaults(defineProps<SwitchThumbProps>(), { as: 'span' })\n\nconst rootContext = injectSwitchRootContext()\n\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive\n    :data-state=\"rootContext.modelValue?.value ? 'checked' : 'unchecked'\"\n    :data-disabled=\"rootContext.disabled.value ? '' : undefined\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { DataOrientation, Direction, StringOrNumber } from '../shared/types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useVModel } from '@vueuse/core'\nimport { createContext, useDirection, useForwardExpose, useId } from '@/shared'\n\nexport interface TabsRootContext {\n  modelValue: Ref<StringOrNumber | undefined>\n  changeModelValue: (value: StringOrNumber) => void\n  orientation: Ref<DataOrientation>\n  dir: Ref<Direction>\n  unmountOnHide: Ref<boolean>\n  activationMode: 'automatic' | 'manual'\n  baseId: string\n  tabsList: Ref<HTMLElement | undefined>\n}\n\nexport interface TabsRootProps<T extends StringOrNumber = StringOrNumber> extends PrimitiveProps {\n  /**\n   * The value of the tab that should be active when initially rendered. Use when you do not need to control the state of the tabs\n   */\n  defaultValue?: T\n  /**\n   * The orientation the tabs are laid out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: DataOrientation\n  /**\n   * The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /**\n   * Whether a tab is activated automatically (on focus) or manually (on click).\n   * @defaultValue automatic\n   */\n  activationMode?: 'automatic' | 'manual'\n  /** The controlled value of the tab to activate. Can be bind as `v-model`. */\n  modelValue?: T\n  /**\n   * When `true`, the element will be unmounted on closed state.\n   *\n   * @defaultValue `true`\n   */\n  unmountOnHide?: boolean\n}\nexport type TabsRootEmits<T extends StringOrNumber = StringOrNumber> = {\n  /** Event handler called when the value changes */\n  'update:modelValue': [payload: T]\n}\n\nexport const [injectTabsRootContext, provideTabsRootContext]\n  = createContext<TabsRootContext>('TabsRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends StringOrNumber = StringOrNumber\">\nimport { ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<TabsRootProps<T>>(), {\n  orientation: 'horizontal',\n  activationMode: 'automatic',\n  unmountOnHide: true,\n})\nconst emits = defineEmits<TabsRootEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { orientation, unmountOnHide, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nuseForwardExpose()\n\nconst modelValue = useVModel<TabsRootProps<T>, 'modelValue', 'update:modelValue'>(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst tabsList = ref<HTMLElement>()\n\nprovideTabsRootContext({\n  modelValue,\n  changeModelValue: (value: StringOrNumber) => {\n    modelValue.value = value as T\n  },\n  orientation,\n  dir,\n  unmountOnHide,\n  activationMode: props.activationMode,\n  baseId: useId(undefined, 'reka-tabs'),\n  tabsList,\n})\n</script>\n\n<template>\n  <Primitive\n    :dir=\"dir\"\n    :data-orientation=\"orientation\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot :model-value=\"modelValue\" />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { DataOrientation, Direction, StringOrNumber } from '../shared/types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useVModel } from '@vueuse/core'\nimport { createContext, useDirection, useForwardExpose, useId } from '@/shared'\n\nexport interface TabsRootContext {\n  modelValue: Ref<StringOrNumber | undefined>\n  changeModelValue: (value: StringOrNumber) => void\n  orientation: Ref<DataOrientation>\n  dir: Ref<Direction>\n  unmountOnHide: Ref<boolean>\n  activationMode: 'automatic' | 'manual'\n  baseId: string\n  tabsList: Ref<HTMLElement | undefined>\n}\n\nexport interface TabsRootProps<T extends StringOrNumber = StringOrNumber> extends PrimitiveProps {\n  /**\n   * The value of the tab that should be active when initially rendered. Use when you do not need to control the state of the tabs\n   */\n  defaultValue?: T\n  /**\n   * The orientation the tabs are laid out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: DataOrientation\n  /**\n   * The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode.\n   */\n  dir?: Direction\n  /**\n   * Whether a tab is activated automatically (on focus) or manually (on click).\n   * @defaultValue automatic\n   */\n  activationMode?: 'automatic' | 'manual'\n  /** The controlled value of the tab to activate. Can be bind as `v-model`. */\n  modelValue?: T\n  /**\n   * When `true`, the element will be unmounted on closed state.\n   *\n   * @defaultValue `true`\n   */\n  unmountOnHide?: boolean\n}\nexport type TabsRootEmits<T extends StringOrNumber = StringOrNumber> = {\n  /** Event handler called when the value changes */\n  'update:modelValue': [payload: T]\n}\n\nexport const [injectTabsRootContext, provideTabsRootContext]\n  = createContext<TabsRootContext>('TabsRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends StringOrNumber = StringOrNumber\">\nimport { ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<TabsRootProps<T>>(), {\n  orientation: 'horizontal',\n  activationMode: 'automatic',\n  unmountOnHide: true,\n})\nconst emits = defineEmits<TabsRootEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { orientation, unmountOnHide, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nuseForwardExpose()\n\nconst modelValue = useVModel<TabsRootProps<T>, 'modelValue', 'update:modelValue'>(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n})\n\nconst tabsList = ref<HTMLElement>()\n\nprovideTabsRootContext({\n  modelValue,\n  changeModelValue: (value: StringOrNumber) => {\n    modelValue.value = value as T\n  },\n  orientation,\n  dir,\n  unmountOnHide,\n  activationMode: props.activationMode,\n  baseId: useId(undefined, 'reka-tabs'),\n  tabsList,\n})\n</script>\n\n<template>\n  <Primitive\n    :dir=\"dir\"\n    :data-orientation=\"orientation\"\n    :as-child=\"asChild\"\n    :as=\"as\"\n  >\n    <slot :model-value=\"modelValue\" />\n  </Primitive>\n</template>\n", "import type { StringOrNumber } from '@/shared/types'\n\nexport function makeTriggerId(baseId: string, value: StringOrNumber) {\n  return `${baseId}-trigger-${value}`\n}\n\nexport function makeContentId(baseId: string, value: StringOrNumber) {\n  return `${baseId}-content-${value}`\n}\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { StringOrNumber } from '@/shared/types'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TabsContentProps extends PrimitiveProps {\n  /** A unique value that associates the content with a trigger. */\n  value: StringOrNumber\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { injectTabsRootContext } from './TabsRoot.vue'\nimport { makeContentId, makeTriggerId } from './utils'\n\nconst props = defineProps<TabsContentProps>()\n\nconst { forwardRef } = useForwardExpose()\nconst rootContext = injectTabsRootContext()\nconst triggerId = computed(() => makeTriggerId(rootContext.baseId, props.value))\nconst contentId = computed(() => makeContentId(rootContext.baseId, props.value))\n\nconst isSelected = computed(() => props.value === rootContext.modelValue.value)\n\nconst isMountAnimationPreventedRef = ref(isSelected.value)\n\nonMounted(() => {\n  requestAnimationFrame(() => {\n    isMountAnimationPreventedRef.value = false\n  })\n})\n</script>\n\n<template>\n  <Presence\n    v-slot=\"{ present }\"\n    :present=\"forceMount || isSelected\"\n    force-mount\n  >\n    <Primitive\n      :id=\"contentId\"\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      role=\"tabpanel\"\n      :data-state=\"isSelected ? 'active' : 'inactive'\"\n      :data-orientation=\"rootContext.orientation.value\"\n      :aria-labelledby=\"triggerId\"\n      :hidden=\"!present\"\n      tabindex=\"0\"\n      :style=\"{\n        animationDuration: isMountAnimationPreventedRef ? '0s' : undefined,\n      }\"\n    >\n      <slot v-if=\"rootContext.unmountOnHide.value ? present : true\" />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { StringOrNumber } from '@/shared/types'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TabsContentProps extends PrimitiveProps {\n  /** A unique value that associates the content with a trigger. */\n  value: StringOrNumber\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\nimport { Presence } from '@/Presence'\nimport { Primitive } from '@/Primitive'\nimport { injectTabsRootContext } from './TabsRoot.vue'\nimport { makeContentId, makeTriggerId } from './utils'\n\nconst props = defineProps<TabsContentProps>()\n\nconst { forwardRef } = useForwardExpose()\nconst rootContext = injectTabsRootContext()\nconst triggerId = computed(() => makeTriggerId(rootContext.baseId, props.value))\nconst contentId = computed(() => makeContentId(rootContext.baseId, props.value))\n\nconst isSelected = computed(() => props.value === rootContext.modelValue.value)\n\nconst isMountAnimationPreventedRef = ref(isSelected.value)\n\nonMounted(() => {\n  requestAnimationFrame(() => {\n    isMountAnimationPreventedRef.value = false\n  })\n})\n</script>\n\n<template>\n  <Presence\n    v-slot=\"{ present }\"\n    :present=\"forceMount || isSelected\"\n    force-mount\n  >\n    <Primitive\n      :id=\"contentId\"\n      :ref=\"forwardRef\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      role=\"tabpanel\"\n      :data-state=\"isSelected ? 'active' : 'inactive'\"\n      :data-orientation=\"rootContext.orientation.value\"\n      :aria-labelledby=\"triggerId\"\n      :hidden=\"!present\"\n      tabindex=\"0\"\n      :style=\"{\n        animationDuration: isMountAnimationPreventedRef ? '0s' : undefined,\n      }\"\n    >\n      <slot v-if=\"rootContext.unmountOnHide.value ? present : true\" />\n    </Primitive>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { nextTick, ref, watch } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { injectTabsRootContext } from './TabsRoot.vue'\n\nexport interface TabsIndicatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<TabsIndicatorProps>()\nconst context = injectTabsRootContext()\nuseForwardExpose()\n\ninterface IndicatorStyle {\n  size: number | null\n  position: number | null\n}\nconst activeTab = ref<HTMLElement | null>()\nconst indicatorStyle = ref<IndicatorStyle>({\n  size: null,\n  position: null,\n})\n\nwatch(() => [context.modelValue.value, context?.dir.value], async () => {\n  await nextTick()\n  updateIndicatorStyle()\n}, { immediate: true })\n\nuseResizeObserver([context.tabsList, activeTab], updateIndicatorStyle)\n\nfunction updateIndicatorStyle() {\n  activeTab.value = context.tabsList.value?.querySelector<HTMLButtonElement>('[role=\"tab\"][data-state=\"active\"]')\n\n  if (!activeTab.value)\n    return\n\n  if (context.orientation.value === 'horizontal') {\n    indicatorStyle.value = {\n      size: activeTab.value.offsetWidth,\n      position: activeTab.value.offsetLeft,\n    }\n  }\n  else {\n    indicatorStyle.value = {\n      size: activeTab.value.offsetHeight,\n      position: activeTab.value.offsetTop,\n    }\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    v-if=\"typeof indicatorStyle.size === 'number'\"\n    v-bind=\"props\"\n    :style=\"{\n      '--reka-tabs-indicator-size': `${indicatorStyle.size}px`,\n      '--reka-tabs-indicator-position': `${indicatorStyle.position}px`,\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { nextTick, ref, watch } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { injectTabsRootContext } from './TabsRoot.vue'\n\nexport interface TabsIndicatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { useResizeObserver } from '@vueuse/core'\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<TabsIndicatorProps>()\nconst context = injectTabsRootContext()\nuseForwardExpose()\n\ninterface IndicatorStyle {\n  size: number | null\n  position: number | null\n}\nconst activeTab = ref<HTMLElement | null>()\nconst indicatorStyle = ref<IndicatorStyle>({\n  size: null,\n  position: null,\n})\n\nwatch(() => [context.modelValue.value, context?.dir.value], async () => {\n  await nextTick()\n  updateIndicatorStyle()\n}, { immediate: true })\n\nuseResizeObserver([context.tabsList, activeTab], updateIndicatorStyle)\n\nfunction updateIndicatorStyle() {\n  activeTab.value = context.tabsList.value?.querySelector<HTMLButtonElement>('[role=\"tab\"][data-state=\"active\"]')\n\n  if (!activeTab.value)\n    return\n\n  if (context.orientation.value === 'horizontal') {\n    indicatorStyle.value = {\n      size: activeTab.value.offsetWidth,\n      position: activeTab.value.offsetLeft,\n    }\n  }\n  else {\n    indicatorStyle.value = {\n      size: activeTab.value.offsetHeight,\n      position: activeTab.value.offsetTop,\n    }\n  }\n}\n</script>\n\n<template>\n  <Primitive\n    v-if=\"typeof indicatorStyle.size === 'number'\"\n    v-bind=\"props\"\n    :style=\"{\n      '--reka-tabs-indicator-size': `${indicatorStyle.size}px`,\n      '--reka-tabs-indicator-position': `${indicatorStyle.position}px`,\n    }\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TabsListProps extends PrimitiveProps {\n  /** When `true`, keyboard navigation will loop from last tab to first, and vice versa. */\n  loop?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { injectTabsRootContext } from './TabsRoot.vue'\n\nconst props = withDefaults(defineProps<TabsListProps>(), {\n  loop: true,\n})\nconst { loop } = toRefs(props)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst context = injectTabsRootContext()\n\ncontext.tabsList = currentElement\n</script>\n\n<template>\n  <RovingFocusGroup\n    as-child\n    :orientation=\"context.orientation.value\"\n    :dir=\"context.dir.value\"\n    :loop=\"loop\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"tablist\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :aria-orientation=\"context.orientation.value\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TabsListProps extends PrimitiveProps {\n  /** When `true`, keyboard navigation will loop from last tab to first, and vice versa. */\n  loop?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { injectTabsRootContext } from './TabsRoot.vue'\n\nconst props = withDefaults(defineProps<TabsListProps>(), {\n  loop: true,\n})\nconst { loop } = toRefs(props)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst context = injectTabsRootContext()\n\ncontext.tabsList = currentElement\n</script>\n\n<template>\n  <RovingFocusGroup\n    as-child\n    :orientation=\"context.orientation.value\"\n    :dir=\"context.dir.value\"\n    :loop=\"loop\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"tablist\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n      :aria-orientation=\"context.orientation.value\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { StringOrNumber } from '@/shared/types'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TabsTriggerProps extends PrimitiveProps {\n  /** A unique value that associates the trigger with a content. */\n  value: StringOrNumber\n  /** When `true`, prevents the user from interacting with the tab. */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { injectTabsRootContext } from './TabsRoot.vue'\nimport { makeContentId, makeTriggerId } from './utils'\n\nconst props = withDefaults(defineProps<TabsTriggerProps>(), {\n  disabled: false,\n  as: 'button',\n})\n\nconst { forwardRef } = useForwardExpose()\nconst rootContext = injectTabsRootContext()\n\nconst triggerId = computed(() => makeTriggerId(rootContext.baseId, props.value))\nconst contentId = computed(() => makeContentId(rootContext.baseId, props.value))\n\nconst isSelected = computed(() => props.value === rootContext.modelValue.value)\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    :focusable=\"!disabled\"\n    :active=\"isSelected\"\n  >\n    <Primitive\n      :id=\"triggerId\"\n      :ref=\"forwardRef\"\n      role=\"tab\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-selected=\"isSelected ? 'true' : 'false'\"\n      :aria-controls=\"contentId\"\n      :data-state=\"isSelected ? 'active' : 'inactive'\"\n      :disabled=\"disabled\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-orientation=\"rootContext.orientation.value\"\n      @mousedown.left=\"(event) => {\n        // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n        // but not when the control key is pressed (avoiding MacOS right click)\n        if (!disabled && event.ctrlKey === false) {\n          rootContext.changeModelValue(value);\n        }\n        else {\n          // prevent focus to avoid accidental activation\n          event.preventDefault();\n        }\n      }\"\n      @keydown.enter.space=\"rootContext.changeModelValue(value)\"\n      @focus=\"() => {\n        // handle 'automatic' activation if necessary\n        // ie. activate tab following focus\n        const isAutomaticActivation = rootContext.activationMode !== 'manual';\n        if (!isSelected && !disabled && isAutomaticActivation) {\n          rootContext.changeModelValue(value);\n        }\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { StringOrNumber } from '@/shared/types'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TabsTriggerProps extends PrimitiveProps {\n  /** A unique value that associates the trigger with a content. */\n  value: StringOrNumber\n  /** When `true`, prevents the user from interacting with the tab. */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { injectTabsRootContext } from './TabsRoot.vue'\nimport { makeContentId, makeTriggerId } from './utils'\n\nconst props = withDefaults(defineProps<TabsTriggerProps>(), {\n  disabled: false,\n  as: 'button',\n})\n\nconst { forwardRef } = useForwardExpose()\nconst rootContext = injectTabsRootContext()\n\nconst triggerId = computed(() => makeTriggerId(rootContext.baseId, props.value))\nconst contentId = computed(() => makeContentId(rootContext.baseId, props.value))\n\nconst isSelected = computed(() => props.value === rootContext.modelValue.value)\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    :focusable=\"!disabled\"\n    :active=\"isSelected\"\n  >\n    <Primitive\n      :id=\"triggerId\"\n      :ref=\"forwardRef\"\n      role=\"tab\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-selected=\"isSelected ? 'true' : 'false'\"\n      :aria-controls=\"contentId\"\n      :data-state=\"isSelected ? 'active' : 'inactive'\"\n      :disabled=\"disabled\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-orientation=\"rootContext.orientation.value\"\n      @mousedown.left=\"(event) => {\n        // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n        // but not when the control key is pressed (avoiding MacOS right click)\n        if (!disabled && event.ctrlKey === false) {\n          rootContext.changeModelValue(value);\n        }\n        else {\n          // prevent focus to avoid accidental activation\n          event.preventDefault();\n        }\n      }\"\n      @keydown.enter.space=\"rootContext.changeModelValue(value)\"\n      @focus=\"() => {\n        // handle 'automatic' activation if necessary\n        // ie. activate tab following focus\n        const isAutomaticActivation = rootContext.activationMode !== 'manual';\n        if (!isSelected && !disabled && isAutomaticActivation) {\n          rootContext.changeModelValue(value);\n        }\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { computed, ref, toRefs } from 'vue'\nimport { createContext, useArrowNavigation, useDirection, useFormControl, useForwardExpose } from '@/shared'\n\nexport type AcceptableInputValue = string | Record<string, any>\n\nexport interface TagsInputRootProps<T = AcceptableInputValue> extends PrimitiveProps, FormFieldProps {\n  /** The controlled value of the tags input. Can be bind as `v-model`. */\n  modelValue?: Array<T> | null\n  /** The value of the tags that should be added. Use when you do not need to control the state of the tags input */\n  defaultValue?: Array<T>\n  /** When `true`, allow adding tags on paste. Work in conjunction with delimiter prop. */\n  addOnPaste?: boolean\n  /** When `true` allow adding tags on tab keydown */\n  addOnTab?: boolean\n  /** When `true` allow adding tags blur input */\n  addOnBlur?: boolean\n  /** When `true`, allow duplicated tags. */\n  duplicate?: boolean\n  /** When `true`, prevents the user from interacting with the tags input. */\n  disabled?: boolean\n  /** The character or regular expression to trigger the addition of a new tag. Also used to split tags for `@paste` event */\n  delimiter?: string | RegExp\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** Maximum number of tags. */\n  max?: number\n  id?: string\n  /** Convert the input value to the desired type. Mandatory when using objects as values and using `TagsInputInput` */\n  convertValue?: (value: string) => T\n  /** Display the value of the tag. Useful when you want to apply modifications to the value like adding a suffix or when using object as values */\n  displayValue?: (value: T) => string\n}\n\nexport type TagsInputRootEmits<T = AcceptableInputValue> = {\n  /** Event handler called when the value changes */\n  'update:modelValue': [payload: Array<T>]\n  /** Event handler called when the value is invalid */\n  'invalid': [payload: T]\n  /** Event handler called when tag is added */\n  'addTag': [payload: T]\n  /** Event handler called when tag is removed */\n  'removeTag': [payload: T]\n}\n\nexport interface TagsInputRootContext<T = AcceptableInputValue> {\n  modelValue: Ref<Array<T>>\n  onAddValue: (payload: string) => boolean\n  onRemoveValue: (index: number) => void\n  onInputKeydown: (event: KeyboardEvent) => void\n  selectedElement: Ref<HTMLElement | undefined>\n  isInvalidInput: Ref<boolean>\n  addOnPaste: Ref<boolean>\n  addOnTab: Ref<boolean>\n  addOnBlur: Ref<boolean>\n  disabled: Ref<boolean>\n  delimiter: Ref<string | RegExp>\n  dir: Ref<Direction>\n  max: Ref<number>\n  id: Ref<string | undefined> | undefined\n  displayValue: (value: T) => string\n}\n\nexport const [injectTagsInputRootContext, provideTagsInputRootContext]\n  = createContext<TagsInputRootContext>('TagsInputRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableInputValue = string\">\nimport { useFocusWithin, useVModel } from '@vueuse/core'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\nconst props = withDefaults(defineProps<TagsInputRootProps<T>>(), {\n  defaultValue: () => [],\n  delimiter: ',',\n  max: 0,\n  displayValue: (value: T) => value.toString(),\n})\nconst emits = defineEmits<TagsInputRootEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { addOnPaste, disabled, delimiter, max, id, dir: propDir, addOnBlur, addOnTab } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: true,\n  deep: true,\n}) as Ref<Array<AcceptableInputValue>>\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { focused } = useFocusWithin(currentElement)\nconst isFormControl = useFormControl(currentElement)\n\nconst { getItems, CollectionSlot } = useCollection({ isProvider: true })\n\nconst selectedElement = ref<HTMLElement>()\nconst isInvalidInput = ref(false)\n\nconst currentModelValue = computed(() => Array.isArray(modelValue.value) ? [...modelValue.value] : [])\n\nfunction handleRemoveTag(index: number) {\n  if (index !== -1) {\n    const collection = getItems().filter(i => i.ref.dataset.disabled !== '')\n    modelValue.value = modelValue.value.filter((_, i) => i !== index)\n    emits('removeTag', collection[index].value)\n  }\n}\n\nprovideTagsInputRootContext({\n  modelValue,\n  onAddValue: (_payload) => {\n    const array = [...currentModelValue.value]\n    const modelValueIsObject = array.length > 0 && typeof array[0] === 'object'\n    const defaultValueIsObject = array.length > 0 && typeof props.defaultValue[0] === 'object'\n\n    // Check if the value is an object and if the convertValue function is provided. We don't check this a type level because the use\n    // of `TagsInputInput` is optional.\n    if ((modelValueIsObject || defaultValueIsObject) && typeof props.convertValue !== 'function')\n      throw new Error('You must provide a `convertValue` function when using objects as values.')\n    const payload = props.convertValue ? props.convertValue(_payload) : _payload as T\n\n    if ((array.length >= max.value) && !!max.value) {\n      emits('invalid', payload)\n      return false\n    }\n\n    if (props.duplicate) {\n      modelValue.value = [...array, payload]\n      emits('addTag', payload)\n      return true\n    }\n    else {\n      const exist = array.includes(payload)\n      if (!exist) {\n        modelValue.value = [...array, payload]\n        emits('addTag', payload)\n        return true\n      }\n      else {\n        isInvalidInput.value = true\n      }\n    }\n    emits('invalid', payload)\n    return false\n  },\n  onRemoveValue: handleRemoveTag,\n  onInputKeydown: (event) => {\n    const target = event.target as HTMLInputElement\n    const collection = getItems().map(i => i.ref).filter(i => i.dataset.disabled !== '')\n    if (!collection.length)\n      return\n    const lastTag = collection.at(-1)\n    switch (event.key) {\n      case 'Delete':\n      case 'Backspace': {\n        if (target.selectionStart !== 0 || target.selectionEnd !== 0)\n          break\n\n        if (selectedElement.value) {\n          const index = collection.findIndex(i => i === selectedElement.value)\n          handleRemoveTag(index)\n          selectedElement.value = selectedElement.value === lastTag ? collection.at(index - 1) : collection.at(index + 1)\n          event.preventDefault()\n        }\n        else if (event.key === 'Backspace') {\n          selectedElement.value = lastTag\n          event.preventDefault()\n        }\n        break\n      }\n      case 'Home':\n      case 'End':\n      case 'ArrowRight':\n      case 'ArrowLeft': {\n        const isArrowRight = (event.key === 'ArrowRight' && dir.value === 'ltr') || (event.key === 'ArrowLeft' && dir.value === 'rtl')\n        const isArrowLeft = !isArrowRight\n        // only focus on tags when cursor is at the first position\n        if (target.selectionStart !== 0 || target.selectionEnd !== 0)\n          break\n\n        // if you press ArrowLeft, then we last tag\n        if (isArrowLeft && !selectedElement.value) {\n          selectedElement.value = lastTag\n          event.preventDefault()\n        }\n        // if you press ArrowRight on last tag, you deselect\n        else if (isArrowRight && lastTag && selectedElement.value === lastTag) {\n          selectedElement.value = undefined\n          event.preventDefault()\n        }\n        else if (selectedElement.value) {\n          const el = useArrowNavigation(event, selectedElement.value, undefined, {\n            itemsArray: collection,\n            loop: false,\n            dir: dir.value,\n          })\n          if (el)\n            selectedElement.value = el\n          event.preventDefault()\n        }\n        break\n      }\n      case 'ArrowUp':\n      case 'ArrowDown': {\n        if (selectedElement.value)\n          event.preventDefault()\n        break\n      }\n      default: {\n        selectedElement.value = undefined\n      }\n    }\n  },\n  selectedElement,\n  isInvalidInput,\n  addOnPaste,\n  addOnBlur,\n  addOnTab,\n  dir,\n  disabled,\n  delimiter,\n  max,\n  id,\n  displayValue: props.displayValue as (value: AcceptableInputValue) => string,\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      :ref=\"forwardRef\"\n      :dir=\"dir\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :data-invalid=\"isInvalidInput ? '' : undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-focused=\"focused ? '' : undefined\"\n    >\n      <slot :model-value=\"modelValue\" />\n\n      <VisuallyHiddenInput\n        v-if=\"isFormControl && name\"\n        :name=\"name\"\n        :value=\"modelValue\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n      />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { computed, ref, toRefs } from 'vue'\nimport { createContext, useArrowNavigation, useDirection, useFormControl, useForwardExpose } from '@/shared'\n\nexport type AcceptableInputValue = string | Record<string, any>\n\nexport interface TagsInputRootProps<T = AcceptableInputValue> extends PrimitiveProps, FormFieldProps {\n  /** The controlled value of the tags input. Can be bind as `v-model`. */\n  modelValue?: Array<T> | null\n  /** The value of the tags that should be added. Use when you do not need to control the state of the tags input */\n  defaultValue?: Array<T>\n  /** When `true`, allow adding tags on paste. Work in conjunction with delimiter prop. */\n  addOnPaste?: boolean\n  /** When `true` allow adding tags on tab keydown */\n  addOnTab?: boolean\n  /** When `true` allow adding tags blur input */\n  addOnBlur?: boolean\n  /** When `true`, allow duplicated tags. */\n  duplicate?: boolean\n  /** When `true`, prevents the user from interacting with the tags input. */\n  disabled?: boolean\n  /** The character or regular expression to trigger the addition of a new tag. Also used to split tags for `@paste` event */\n  delimiter?: string | RegExp\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** Maximum number of tags. */\n  max?: number\n  id?: string\n  /** Convert the input value to the desired type. Mandatory when using objects as values and using `TagsInputInput` */\n  convertValue?: (value: string) => T\n  /** Display the value of the tag. Useful when you want to apply modifications to the value like adding a suffix or when using object as values */\n  displayValue?: (value: T) => string\n}\n\nexport type TagsInputRootEmits<T = AcceptableInputValue> = {\n  /** Event handler called when the value changes */\n  'update:modelValue': [payload: Array<T>]\n  /** Event handler called when the value is invalid */\n  'invalid': [payload: T]\n  /** Event handler called when tag is added */\n  'addTag': [payload: T]\n  /** Event handler called when tag is removed */\n  'removeTag': [payload: T]\n}\n\nexport interface TagsInputRootContext<T = AcceptableInputValue> {\n  modelValue: Ref<Array<T>>\n  onAddValue: (payload: string) => boolean\n  onRemoveValue: (index: number) => void\n  onInputKeydown: (event: KeyboardEvent) => void\n  selectedElement: Ref<HTMLElement | undefined>\n  isInvalidInput: Ref<boolean>\n  addOnPaste: Ref<boolean>\n  addOnTab: Ref<boolean>\n  addOnBlur: Ref<boolean>\n  disabled: Ref<boolean>\n  delimiter: Ref<string | RegExp>\n  dir: Ref<Direction>\n  max: Ref<number>\n  id: Ref<string | undefined> | undefined\n  displayValue: (value: T) => string\n}\n\nexport const [injectTagsInputRootContext, provideTagsInputRootContext]\n  = createContext<TagsInputRootContext>('TagsInputRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends AcceptableInputValue = string\">\nimport { useFocusWithin, useVModel } from '@vueuse/core'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { VisuallyHiddenInput } from '@/VisuallyHidden'\n\nconst props = withDefaults(defineProps<TagsInputRootProps<T>>(), {\n  defaultValue: () => [],\n  delimiter: ',',\n  max: 0,\n  displayValue: (value: T) => value.toString(),\n})\nconst emits = defineEmits<TagsInputRootEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current input values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { addOnPaste, disabled, delimiter, max, id, dir: propDir, addOnBlur, addOnTab } = toRefs(props)\nconst dir = useDirection(propDir)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: true,\n  deep: true,\n}) as Ref<Array<AcceptableInputValue>>\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { focused } = useFocusWithin(currentElement)\nconst isFormControl = useFormControl(currentElement)\n\nconst { getItems, CollectionSlot } = useCollection({ isProvider: true })\n\nconst selectedElement = ref<HTMLElement>()\nconst isInvalidInput = ref(false)\n\nconst currentModelValue = computed(() => Array.isArray(modelValue.value) ? [...modelValue.value] : [])\n\nfunction handleRemoveTag(index: number) {\n  if (index !== -1) {\n    const collection = getItems().filter(i => i.ref.dataset.disabled !== '')\n    modelValue.value = modelValue.value.filter((_, i) => i !== index)\n    emits('removeTag', collection[index].value)\n  }\n}\n\nprovideTagsInputRootContext({\n  modelValue,\n  onAddValue: (_payload) => {\n    const array = [...currentModelValue.value]\n    const modelValueIsObject = array.length > 0 && typeof array[0] === 'object'\n    const defaultValueIsObject = array.length > 0 && typeof props.defaultValue[0] === 'object'\n\n    // Check if the value is an object and if the convertValue function is provided. We don't check this a type level because the use\n    // of `TagsInputInput` is optional.\n    if ((modelValueIsObject || defaultValueIsObject) && typeof props.convertValue !== 'function')\n      throw new Error('You must provide a `convertValue` function when using objects as values.')\n    const payload = props.convertValue ? props.convertValue(_payload) : _payload as T\n\n    if ((array.length >= max.value) && !!max.value) {\n      emits('invalid', payload)\n      return false\n    }\n\n    if (props.duplicate) {\n      modelValue.value = [...array, payload]\n      emits('addTag', payload)\n      return true\n    }\n    else {\n      const exist = array.includes(payload)\n      if (!exist) {\n        modelValue.value = [...array, payload]\n        emits('addTag', payload)\n        return true\n      }\n      else {\n        isInvalidInput.value = true\n      }\n    }\n    emits('invalid', payload)\n    return false\n  },\n  onRemoveValue: handleRemoveTag,\n  onInputKeydown: (event) => {\n    const target = event.target as HTMLInputElement\n    const collection = getItems().map(i => i.ref).filter(i => i.dataset.disabled !== '')\n    if (!collection.length)\n      return\n    const lastTag = collection.at(-1)\n    switch (event.key) {\n      case 'Delete':\n      case 'Backspace': {\n        if (target.selectionStart !== 0 || target.selectionEnd !== 0)\n          break\n\n        if (selectedElement.value) {\n          const index = collection.findIndex(i => i === selectedElement.value)\n          handleRemoveTag(index)\n          selectedElement.value = selectedElement.value === lastTag ? collection.at(index - 1) : collection.at(index + 1)\n          event.preventDefault()\n        }\n        else if (event.key === 'Backspace') {\n          selectedElement.value = lastTag\n          event.preventDefault()\n        }\n        break\n      }\n      case 'Home':\n      case 'End':\n      case 'ArrowRight':\n      case 'ArrowLeft': {\n        const isArrowRight = (event.key === 'ArrowRight' && dir.value === 'ltr') || (event.key === 'ArrowLeft' && dir.value === 'rtl')\n        const isArrowLeft = !isArrowRight\n        // only focus on tags when cursor is at the first position\n        if (target.selectionStart !== 0 || target.selectionEnd !== 0)\n          break\n\n        // if you press ArrowLeft, then we last tag\n        if (isArrowLeft && !selectedElement.value) {\n          selectedElement.value = lastTag\n          event.preventDefault()\n        }\n        // if you press ArrowRight on last tag, you deselect\n        else if (isArrowRight && lastTag && selectedElement.value === lastTag) {\n          selectedElement.value = undefined\n          event.preventDefault()\n        }\n        else if (selectedElement.value) {\n          const el = useArrowNavigation(event, selectedElement.value, undefined, {\n            itemsArray: collection,\n            loop: false,\n            dir: dir.value,\n          })\n          if (el)\n            selectedElement.value = el\n          event.preventDefault()\n        }\n        break\n      }\n      case 'ArrowUp':\n      case 'ArrowDown': {\n        if (selectedElement.value)\n          event.preventDefault()\n        break\n      }\n      default: {\n        selectedElement.value = undefined\n      }\n    }\n  },\n  selectedElement,\n  isInvalidInput,\n  addOnPaste,\n  addOnBlur,\n  addOnTab,\n  dir,\n  disabled,\n  delimiter,\n  max,\n  id,\n  displayValue: props.displayValue as (value: AcceptableInputValue) => string,\n})\n</script>\n\n<template>\n  <CollectionSlot>\n    <Primitive\n      :ref=\"forwardRef\"\n      :dir=\"dir\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :data-invalid=\"isInvalidInput ? '' : undefined\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-focused=\"focused ? '' : undefined\"\n    >\n      <slot :model-value=\"modelValue\" />\n\n      <VisuallyHiddenInput\n        v-if=\"isFormControl && name\"\n        :name=\"name\"\n        :value=\"modelValue\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n      />\n    </Primitive>\n  </CollectionSlot>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectTagsInputRootContext } from './TagsInputRoot.vue'\n\nexport interface TagsInputClearProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<TagsInputClearProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst context = injectTagsInputRootContext()\n\nfunction handleCancel() {\n  if (context.disabled.value)\n    return\n  context.modelValue.value = []\n}\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    @click=\"handleCancel\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\nimport { injectTagsInputRootContext } from './TagsInputRoot.vue'\n\nexport interface TagsInputClearProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<TagsInputClearProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst context = injectTagsInputRootContext()\n\nfunction handleCancel() {\n  if (context.disabled.value)\n    return\n  context.modelValue.value = []\n}\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :data-disabled=\"context.disabled.value ? '' : undefined\"\n    @click=\"handleCancel\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TagsInputInputProps extends PrimitiveProps {\n  /** The placeholder character to use for empty tags input. */\n  placeholder?: string\n  /** Focus on element when mounted. */\n  autoFocus?: boolean\n  /** Maximum number of character allowed. */\n  maxLength?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectTagsInputRootContext } from './TagsInputRoot.vue'\n\nconst props = withDefaults(defineProps<TagsInputInputProps>(), {\n  as: 'input',\n})\n\nconst context = injectTagsInputRootContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nfunction handleBlur(event: Event) {\n  context.selectedElement.value = undefined\n\n  if (!context.addOnBlur.value)\n    return\n\n  const target = event.target as HTMLInputElement\n  if (!target.value)\n    return\n\n  const isAdded = context.onAddValue(target.value)\n  if (isAdded)\n    target.value = ''\n}\n\nfunction handleTab(event: Event) {\n  if (!context.addOnTab.value)\n    return\n\n  handleCustomKeydown(event)\n}\n\nconst isComposing = ref(false)\nfunction onCompositionStart() {\n  isComposing.value = true\n}\nfunction onCompositionEnd() {\n  nextTick(() => {\n    isComposing.value = false\n  })\n}\nasync function handleCustomKeydown(event: Event) {\n  if (isComposing.value)\n    return\n  await nextTick()\n  // if keydown 'Enter' or `Tab` was prevented, we let user handle updating the value themselves\n  if (event.defaultPrevented)\n    return\n\n  const target = event.target as HTMLInputElement\n  if (!target.value)\n    return\n\n  const isAdded = context.onAddValue(target.value)\n  if (isAdded)\n    target.value = ''\n\n  // prevent reloading when using inside of form\n  event.preventDefault()\n}\n\nfunction handleInput(event: InputEvent) {\n  context.isInvalidInput.value = false\n  if (event.data === null)\n    return\n\n  const delimiter = context.delimiter.value\n  const matchesDelimiter = delimiter === event.data || (delimiter instanceof RegExp && delimiter.test(event.data))\n  if (matchesDelimiter) {\n    const target = event.target as HTMLInputElement\n    target.value = target.value.replace(delimiter, '')\n\n    if (target.value.trim() === '') {\n      target.value = ''\n      return\n    }\n\n    const isAdded = context.onAddValue(target.value)\n    if (isAdded)\n      target.value = ''\n  }\n}\n\nfunction handlePaste(event: ClipboardEvent) {\n  if (context.addOnPaste.value) {\n    event.preventDefault()\n    const clipboardData = event.clipboardData\n    if (!clipboardData)\n      return\n\n    const value = clipboardData.getData('text')\n    if (context.delimiter.value) {\n      const splitValue = value.split(context.delimiter.value)\n      splitValue.forEach((v) => {\n        context.onAddValue(v)\n      })\n    }\n    else {\n      context.onAddValue(value)\n    }\n  }\n}\n\nonMounted(() => {\n  const inputEl = currentElement.value.nodeName === 'INPUT'\n    ? currentElement.value\n    : currentElement.value.querySelector('input')\n\n  if (!inputEl)\n    return\n\n  setTimeout(() => {\n    // make sure all DOM was flush then only capture the focus\n    if (props.autoFocus)\n      inputEl?.focus()\n  }, 1)\n})\n</script>\n\n<template>\n  <Primitive\n    :id=\"context.id?.value\"\n    :ref=\"forwardRef\"\n    type=\"text\"\n    autocomplete=\"off\"\n    autocorrect=\"off\"\n    autocapitalize=\"off\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :maxlength=\"maxLength\"\n    :placeholder=\"placeholder\"\n    :disabled=\"context.disabled.value\"\n    :data-invalid=\"context.isInvalidInput.value ? '' : undefined\"\n    @input=\"handleInput\"\n    @keydown.enter=\"handleCustomKeydown\"\n    @keydown.tab=\"handleTab\"\n    @blur=\"handleBlur\"\n    @keydown=\"context.onInputKeydown\"\n    @compositionstart=\"onCompositionStart\"\n    @compositionend=\"onCompositionEnd\"\n    @paste=\"handlePaste\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TagsInputInputProps extends PrimitiveProps {\n  /** The placeholder character to use for empty tags input. */\n  placeholder?: string\n  /** Focus on element when mounted. */\n  autoFocus?: boolean\n  /** Maximum number of character allowed. */\n  maxLength?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { nextTick, onMounted, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { injectTagsInputRootContext } from './TagsInputRoot.vue'\n\nconst props = withDefaults(defineProps<TagsInputInputProps>(), {\n  as: 'input',\n})\n\nconst context = injectTagsInputRootContext()\nconst { forwardRef, currentElement } = useForwardExpose()\n\nfunction handleBlur(event: Event) {\n  context.selectedElement.value = undefined\n\n  if (!context.addOnBlur.value)\n    return\n\n  const target = event.target as HTMLInputElement\n  if (!target.value)\n    return\n\n  const isAdded = context.onAddValue(target.value)\n  if (isAdded)\n    target.value = ''\n}\n\nfunction handleTab(event: Event) {\n  if (!context.addOnTab.value)\n    return\n\n  handleCustomKeydown(event)\n}\n\nconst isComposing = ref(false)\nfunction onCompositionStart() {\n  isComposing.value = true\n}\nfunction onCompositionEnd() {\n  nextTick(() => {\n    isComposing.value = false\n  })\n}\nasync function handleCustomKeydown(event: Event) {\n  if (isComposing.value)\n    return\n  await nextTick()\n  // if keydown 'Enter' or `Tab` was prevented, we let user handle updating the value themselves\n  if (event.defaultPrevented)\n    return\n\n  const target = event.target as HTMLInputElement\n  if (!target.value)\n    return\n\n  const isAdded = context.onAddValue(target.value)\n  if (isAdded)\n    target.value = ''\n\n  // prevent reloading when using inside of form\n  event.preventDefault()\n}\n\nfunction handleInput(event: InputEvent) {\n  context.isInvalidInput.value = false\n  if (event.data === null)\n    return\n\n  const delimiter = context.delimiter.value\n  const matchesDelimiter = delimiter === event.data || (delimiter instanceof RegExp && delimiter.test(event.data))\n  if (matchesDelimiter) {\n    const target = event.target as HTMLInputElement\n    target.value = target.value.replace(delimiter, '')\n\n    if (target.value.trim() === '') {\n      target.value = ''\n      return\n    }\n\n    const isAdded = context.onAddValue(target.value)\n    if (isAdded)\n      target.value = ''\n  }\n}\n\nfunction handlePaste(event: ClipboardEvent) {\n  if (context.addOnPaste.value) {\n    event.preventDefault()\n    const clipboardData = event.clipboardData\n    if (!clipboardData)\n      return\n\n    const value = clipboardData.getData('text')\n    if (context.delimiter.value) {\n      const splitValue = value.split(context.delimiter.value)\n      splitValue.forEach((v) => {\n        context.onAddValue(v)\n      })\n    }\n    else {\n      context.onAddValue(value)\n    }\n  }\n}\n\nonMounted(() => {\n  const inputEl = currentElement.value.nodeName === 'INPUT'\n    ? currentElement.value\n    : currentElement.value.querySelector('input')\n\n  if (!inputEl)\n    return\n\n  setTimeout(() => {\n    // make sure all DOM was flush then only capture the focus\n    if (props.autoFocus)\n      inputEl?.focus()\n  }, 1)\n})\n</script>\n\n<template>\n  <Primitive\n    :id=\"context.id?.value\"\n    :ref=\"forwardRef\"\n    type=\"text\"\n    autocomplete=\"off\"\n    autocorrect=\"off\"\n    autocapitalize=\"off\"\n    :as=\"as\"\n    :as-child=\"asChild\"\n    :maxlength=\"maxLength\"\n    :placeholder=\"placeholder\"\n    :disabled=\"context.disabled.value\"\n    :data-invalid=\"context.isInvalidInput.value ? '' : undefined\"\n    @input=\"handleInput\"\n    @keydown.enter=\"handleCustomKeydown\"\n    @keydown.tab=\"handleTab\"\n    @blur=\"handleBlur\"\n    @keydown=\"context.onInputKeydown\"\n    @compositionstart=\"onCompositionStart\"\n    @compositionend=\"onCompositionEnd\"\n    @paste=\"handlePaste\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { AcceptableInputValue } from './TagsInputRoot.vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed, toRefs } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\nimport { injectTagsInputRootContext } from './TagsInputRoot.vue'\n\nexport interface TagsInputItemProps extends PrimitiveProps {\n  /** Value associated with the tags */\n  value: AcceptableInputValue\n  /** When `true`, prevents the user from interacting with the tags input. */\n  disabled?: boolean\n}\n\nexport interface TagsInputItemContext {\n  value: Ref<AcceptableInputValue>\n  displayValue: ComputedRef<string>\n  isSelected: Ref<boolean>\n  disabled?: Ref<boolean>\n  textId: string\n}\n\nexport const [injectTagsInputItemContext, provideTagsInputItemContext]\n  = createContext<TagsInputItemContext>('TagsInputItem')\n</script>\n\n<script setup lang=\"ts\">\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<TagsInputItemProps>()\nconst { value } = toRefs(props)\n\nconst context = injectTagsInputRootContext()\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst isSelected = computed(() => context.selectedElement.value === currentElement.value)\n\nconst disabled = computed(() => props.disabled || context.disabled.value)\n\nconst itemContext = provideTagsInputItemContext({\n  value,\n  isSelected,\n  disabled,\n  textId: '',\n  displayValue: computed(() => context.displayValue(value.value)),\n})\n</script>\n\n<template>\n  <CollectionItem :value=\"value\">\n    <Primitive\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-labelledby=\"itemContext.textId\"\n      :aria-current=\"isSelected\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-state=\"isSelected ? 'active' : 'inactive'\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { AcceptableInputValue } from './TagsInputRoot.vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed, toRefs } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\nimport { injectTagsInputRootContext } from './TagsInputRoot.vue'\n\nexport interface TagsInputItemProps extends PrimitiveProps {\n  /** Value associated with the tags */\n  value: AcceptableInputValue\n  /** When `true`, prevents the user from interacting with the tags input. */\n  disabled?: boolean\n}\n\nexport interface TagsInputItemContext {\n  value: Ref<AcceptableInputValue>\n  displayValue: ComputedRef<string>\n  isSelected: Ref<boolean>\n  disabled?: Ref<boolean>\n  textId: string\n}\n\nexport const [injectTagsInputItemContext, provideTagsInputItemContext]\n  = createContext<TagsInputItemContext>('TagsInputItem')\n</script>\n\n<script setup lang=\"ts\">\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<TagsInputItemProps>()\nconst { value } = toRefs(props)\n\nconst context = injectTagsInputRootContext()\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst isSelected = computed(() => context.selectedElement.value === currentElement.value)\n\nconst disabled = computed(() => props.disabled || context.disabled.value)\n\nconst itemContext = provideTagsInputItemContext({\n  value,\n  isSelected,\n  disabled,\n  textId: '',\n  displayValue: computed(() => context.displayValue(value.value)),\n})\n</script>\n\n<template>\n  <CollectionItem :value=\"value\">\n    <Primitive\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-labelledby=\"itemContext.textId\"\n      :aria-current=\"isSelected\"\n      :data-disabled=\"disabled ? '' : undefined\"\n      :data-state=\"isSelected ? 'active' : 'inactive'\"\n    >\n      <slot />\n    </Primitive>\n  </CollectionItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { isEqual } from 'ohash'\nimport { computed } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { injectTagsInputItemContext } from './TagsInputItem.vue'\nimport { injectTagsInputRootContext } from './TagsInputRoot.vue'\n\nexport interface TagsInputItemDeleteProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<TagsInputItemDeleteProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst context = injectTagsInputRootContext()\nconst itemContext = injectTagsInputItemContext()\n\nconst disabled = computed(() => itemContext.disabled?.value || context.disabled.value)\n\nfunction handleDelete() {\n  if (disabled.value)\n    return\n  const index = context.modelValue.value.findIndex(i => isEqual(i, itemContext.value.value))\n  context.onRemoveValue(index)\n}\n</script>\n\n<template>\n  <Primitive\n    tabindex=\"-1\"\n    v-bind=\"props\"\n    :aria-labelledby=\"itemContext.textId\"\n    :aria-current=\"itemContext.isSelected.value\"\n    :data-state=\"itemContext.isSelected.value ? 'active' : 'inactive'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    @click=\"handleDelete\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { isEqual } from 'ohash'\nimport { computed } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { injectTagsInputItemContext } from './TagsInputItem.vue'\nimport { injectTagsInputRootContext } from './TagsInputRoot.vue'\n\nexport interface TagsInputItemDeleteProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<TagsInputItemDeleteProps>(), {\n  as: 'button',\n})\n\nuseForwardExpose()\nconst context = injectTagsInputRootContext()\nconst itemContext = injectTagsInputItemContext()\n\nconst disabled = computed(() => itemContext.disabled?.value || context.disabled.value)\n\nfunction handleDelete() {\n  if (disabled.value)\n    return\n  const index = context.modelValue.value.findIndex(i => isEqual(i, itemContext.value.value))\n  context.onRemoveValue(index)\n}\n</script>\n\n<template>\n  <Primitive\n    tabindex=\"-1\"\n    v-bind=\"props\"\n    :aria-labelledby=\"itemContext.textId\"\n    :aria-current=\"itemContext.isSelected.value\"\n    :data-state=\"itemContext.isSelected.value ? 'active' : 'inactive'\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    @click=\"handleDelete\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\nimport { injectTagsInputItemContext } from './TagsInputItem.vue'\n\nexport interface TagsInputItemTextProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<TagsInputItemTextProps>(), {\n  as: 'span',\n})\n\nconst itemContext = injectTagsInputItemContext()\nuseForwardExpose()\n\nitemContext.textId ||= useId(undefined, 'reka-tags-input-item-text')\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"itemContext.textId\"\n  >\n    <slot>{{ itemContext.displayValue.value }}</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose, useId } from '@/shared'\nimport { injectTagsInputItemContext } from './TagsInputItem.vue'\n\nexport interface TagsInputItemTextProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<TagsInputItemTextProps>(), {\n  as: 'span',\n})\n\nconst itemContext = injectTagsInputItemContext()\nuseForwardExpose()\n\nitemContext.textId ||= useId(undefined, 'reka-tags-input-item-text')\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"props\"\n    :id=\"itemContext.textId\"\n  >\n    <slot>{{ itemContext.displayValue.value }}</slot>\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Formatter } from '@/shared'\nimport type { DateStep, HourCycle, SegmentPart, SegmentValueObj, TimeValue } from '@/shared/date'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { getLocalTimeZone, isEqualDay, Time, toCalendarDateTime, today } from '@internationalized/date'\nimport { isBefore } from '@/date'\nimport { createContext, isNullish, useDateFormatter, useDirection, useKbd, useLocale } from '@/shared'\nimport {\n  createContent,\n  getDefaultTime,\n  getTimeFieldSegmentElements,\n\n  initializeTimeSegmentValues,\n  isSegmentNavigationKey,\n  normalizeDateStep,\n  normalizeHourCycle,\n\n  syncTimeSegmentValues,\n\n} from '@/shared/date'\n\ntype TimeFieldRootContext = {\n  locale: Ref<string>\n  modelValue: Ref<DateValue | undefined>\n  placeholder: Ref<DateValue>\n  isInvalid: Ref<boolean>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  formatter: Formatter\n  hourCycle: HourCycle\n  step: Ref<DateStep>\n  segmentValues: Ref<SegmentValueObj>\n  segmentContents: Ref<{ part: SegmentPart, value: string }[]>\n  elements: Ref<Set<HTMLElement>>\n  focusNext: () => void\n  setFocusedElement: (el: HTMLElement) => void\n}\n\nexport interface TimeFieldRootProps extends PrimitiveProps, FormFieldProps {\n  /** The default value for the calendar */\n  defaultValue?: TimeValue\n  /** The default placeholder date */\n  defaultPlaceholder?: TimeValue\n  /** The placeholder date, which is used to determine what time to display when no time is selected. This updates as the user navigates the field */\n  placeholder?: TimeValue\n  /** The controlled checked state of the field. Can be bound as `v-model`. */\n  modelValue?: TimeValue | null\n  /** The hour cycle used for formatting times. Defaults to the local preference */\n  hourCycle?: HourCycle\n  /** The stepping interval for the time fields. Defaults to `1`. */\n  step?: DateStep\n  /** The granularity to use for formatting times. Defaults to minute if a Time is provided, otherwise defaults to minute. The field will render segments for each part of the date up to and including the specified granularity */\n  granularity?: 'hour' | 'minute' | 'second'\n  /** Whether or not to hide the time zone segment of the field */\n  hideTimeZone?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: TimeValue\n  /** The minimum date that can be selected */\n  minValue?: TimeValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** Whether or not the time field is disabled */\n  disabled?: boolean\n  /** Whether or not the time field is readonly */\n  readonly?: boolean\n  /** Id of the element */\n  id?: string\n  /** The reading direction of the time field when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n}\n\nexport type TimeFieldRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: TimeValue | undefined]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: TimeValue]\n}\n\nexport const [injectTimeFieldRootContext, provideTimeFieldRootContext]\n  = createContext<TimeFieldRootContext>('TimeFieldRoot')\n\nfunction convertValue(value: TimeValue, date: DateValue = today(getLocalTimeZone())) {\n  if (value && 'day' in value) {\n    return value\n  }\n\n  return toCalendarDateTime(date, value)\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, onMounted, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHidden } from '@/VisuallyHidden'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<TimeFieldRootProps>(), {\n  defaultValue: undefined,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  isDateUnavailable: undefined,\n})\nconst emits = defineEmits<TimeFieldRootEmits>()\ndefineSlots<{\n  default?: (props: {\n    /** The current time of the field */\n    modelValue: TimeValue | undefined\n    /** The time field segment contents */\n    segments: { part: SegmentPart, value: string }[]\n    /** Value if the input is invalid */\n    isInvalid: boolean\n  }) => any\n}>()\n\nconst { disabled, readonly, granularity, defaultValue, minValue, maxValue, dir: propDir, locale: propLocale } = toRefs(props)\nconst locale = useLocale(propLocale)\nconst dir = useDirection(propDir)\n\nconst formatter = useDateFormatter(locale.value, {\n  hourCycle: normalizeHourCycle(props.hourCycle),\n})\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst segmentElements = ref<Set<HTMLElement>>(new Set())\n\nconst step = computed(() => normalizeDateStep(props))\n\nconst convertedMinValue = computed(() => minValue.value ? convertValue(minValue.value) : undefined)\nconst convertedMaxValue = computed(() => maxValue.value ? convertValue(maxValue.value) : undefined)\n\nonMounted(() => {\n  getTimeFieldSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n})\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<TimeValue>\n\nconst convertedModelValue = computed({\n  get() {\n    if (isNullish(modelValue.value))\n      return modelValue.value\n    return convertValue(modelValue.value)\n  },\n  set(newValue) {\n    if (newValue) {\n      modelValue.value = modelValue.value && 'day' in modelValue.value ? newValue : new Time(newValue.hour, newValue.minute, newValue.second, modelValue.value?.millisecond)\n    }\n    else {\n      modelValue.value = newValue\n    }\n    return newValue\n  },\n})\n\nconst defaultDate = getDefaultTime({\n  defaultPlaceholder: props.placeholder,\n  defaultValue: modelValue.value,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<TimeValue>\n\nconst convertedPlaceholder = computed({\n  get() {\n    return convertValue(placeholder.value)\n  },\n  set(newValue) {\n    if (newValue)\n      placeholder.value = 'day' in placeholder.value ? newValue.copy() : new Time(newValue.hour, newValue.minute, newValue.second, placeholder.value?.millisecond)\n    return newValue\n  },\n})\n\nconst inferredGranularity = computed(() => {\n  if (granularity.value)\n    return granularity.value\n\n  return 'minute'\n})\n\nconst isInvalid = computed(() => {\n  if (!modelValue.value)\n    return false\n\n  if (convertedMinValue.value && isBefore(convertedModelValue.value, convertedMinValue.value))\n    return true\n\n  if (convertedMaxValue.value && isBefore(convertedMaxValue.value, convertedModelValue.value))\n    return true\n\n  return false\n})\n\nconst initialSegments = initializeTimeSegmentValues(inferredGranularity.value)\n\nconst segmentValues = ref<SegmentValueObj>(modelValue.value ? { ...syncTimeSegmentValues({ value: convertedModelValue.value, formatter }) } : { ...initialSegments })\n\nconst allSegmentContent = computed(() => createContent({\n  granularity: inferredGranularity.value,\n  dateRef: convertedPlaceholder.value,\n  formatter,\n  hideTimeZone: props.hideTimeZone,\n  hourCycle: props.hourCycle,\n  segmentValues: segmentValues.value,\n  locale,\n  isTimeValue: true,\n}))\n\nconst segmentContents = computed(() => allSegmentContent.value.arr)\n\nconst editableSegmentContents = computed(() => segmentContents.value.filter(({ part }) => part !== 'literal'))\n\nwatch(locale, (value) => {\n  if (formatter.getLocale() !== value) {\n    formatter.setLocale(value)\n    // Locale changed, so we need to clear the segment elements and re-get them (different order)\n    // Get the focusable elements again on the next tick\n    nextTick(() => {\n      segmentElements.value.clear()\n      getTimeFieldSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n    })\n  }\n})\n\nwatch(convertedModelValue, (_modelValue) => {\n  if (!isNullish(_modelValue) && (!isEqualDay(convertedPlaceholder.value, _modelValue) || convertedPlaceholder.value.compare(_modelValue) !== 0))\n    placeholder.value = _modelValue.copy()\n})\n\nwatch([convertedModelValue, locale], ([_modelValue]) => {\n  if (!isNullish(_modelValue)) {\n    segmentValues.value = { ...syncTimeSegmentValues({ value: _modelValue, formatter }) }\n  }\n  // If segment has null value, means that user modified it, thus do not reset the segmentValues\n  else if (Object.values(segmentValues.value).every(value => value !== null) && isNullish(_modelValue)) {\n    segmentValues.value = { ...initialSegments }\n  }\n})\n\nconst currentFocusedElement = ref<HTMLElement | null>(null)\n\nconst currentSegmentIndex = computed(() =>\n  Array.from(segmentElements.value).findIndex(el =>\n    el.getAttribute('data-reka-time-field-segment')\n    === currentFocusedElement.value?.getAttribute('data-reka-time-field-segment')))\n\nconst nextFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const nextCondition = sign < 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (nextCondition)\n    return null\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value + sign]\n  return segmentToFocus\n})\n\nconst prevFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const prevCondition = sign > 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (prevCondition)\n    return null\n\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value - sign]\n  return segmentToFocus\n})\n\nconst kbd = useKbd()\n\nfunction handleKeydown(e: KeyboardEvent) {\n  if (!isSegmentNavigationKey(e.key))\n    return\n  if (e.key === kbd.ARROW_LEFT)\n    prevFocusableSegment.value?.focus()\n  if (e.key === kbd.ARROW_RIGHT)\n    nextFocusableSegment.value?.focus()\n}\n\nfunction setFocusedElement(el: HTMLElement) {\n  currentFocusedElement.value = el\n}\n\nprovideTimeFieldRootContext({\n  locale,\n  modelValue: convertedModelValue,\n  placeholder: convertedPlaceholder,\n  disabled,\n  formatter,\n  hourCycle: props.hourCycle,\n  step,\n  readonly,\n  segmentValues,\n  isInvalid,\n  segmentContents: editableSegmentContents,\n  elements: segmentElements,\n  setFocusedElement,\n  focusNext() {\n    nextFocusableSegment.value?.focus()\n  },\n})\n\ndefineExpose({\n  /** Helper to set the focused element inside the DateField */\n  setFocusedElement,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    role=\"group\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n    @keydown.left.right=\"handleKeydown\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :segments=\"segmentContents\"\n      :is-invalid=\"isInvalid\"\n    />\n\n    <VisuallyHidden\n      :id=\"id\"\n      as=\"input\"\n      feature=\"focusable\"\n      tabindex=\"-1\"\n      :value=\"modelValue ? modelValue.toString() : ''\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      @focus=\"Array.from(segmentElements)?.[0]?.focus()\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { DateValue } from '@internationalized/date'\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { Formatter } from '@/shared'\nimport type { DateStep, HourCycle, SegmentPart, SegmentValueObj, TimeValue } from '@/shared/date'\nimport type { Direction, FormFieldProps } from '@/shared/types'\nimport { getLocalTimeZone, isEqualDay, Time, toCalendarDateTime, today } from '@internationalized/date'\nimport { isBefore } from '@/date'\nimport { createContext, isNullish, useDateFormatter, useDirection, useKbd, useLocale } from '@/shared'\nimport {\n  createContent,\n  getDefaultTime,\n  getTimeFieldSegmentElements,\n\n  initializeTimeSegmentValues,\n  isSegmentNavigationKey,\n  normalizeDateStep,\n  normalizeHourCycle,\n\n  syncTimeSegmentValues,\n\n} from '@/shared/date'\n\ntype TimeFieldRootContext = {\n  locale: Ref<string>\n  modelValue: Ref<DateValue | undefined>\n  placeholder: Ref<DateValue>\n  isInvalid: Ref<boolean>\n  disabled: Ref<boolean>\n  readonly: Ref<boolean>\n  formatter: Formatter\n  hourCycle: HourCycle\n  step: Ref<DateStep>\n  segmentValues: Ref<SegmentValueObj>\n  segmentContents: Ref<{ part: SegmentPart, value: string }[]>\n  elements: Ref<Set<HTMLElement>>\n  focusNext: () => void\n  setFocusedElement: (el: HTMLElement) => void\n}\n\nexport interface TimeFieldRootProps extends PrimitiveProps, FormFieldProps {\n  /** The default value for the calendar */\n  defaultValue?: TimeValue\n  /** The default placeholder date */\n  defaultPlaceholder?: TimeValue\n  /** The placeholder date, which is used to determine what time to display when no time is selected. This updates as the user navigates the field */\n  placeholder?: TimeValue\n  /** The controlled checked state of the field. Can be bound as `v-model`. */\n  modelValue?: TimeValue | null\n  /** The hour cycle used for formatting times. Defaults to the local preference */\n  hourCycle?: HourCycle\n  /** The stepping interval for the time fields. Defaults to `1`. */\n  step?: DateStep\n  /** The granularity to use for formatting times. Defaults to minute if a Time is provided, otherwise defaults to minute. The field will render segments for each part of the date up to and including the specified granularity */\n  granularity?: 'hour' | 'minute' | 'second'\n  /** Whether or not to hide the time zone segment of the field */\n  hideTimeZone?: boolean\n  /** The maximum date that can be selected */\n  maxValue?: TimeValue\n  /** The minimum date that can be selected */\n  minValue?: TimeValue\n  /** The locale to use for formatting dates */\n  locale?: string\n  /** Whether or not the time field is disabled */\n  disabled?: boolean\n  /** Whether or not the time field is readonly */\n  readonly?: boolean\n  /** Id of the element */\n  id?: string\n  /** The reading direction of the time field when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n}\n\nexport type TimeFieldRootEmits = {\n  /** Event handler called whenever the model value changes */\n  'update:modelValue': [date: TimeValue | undefined]\n  /** Event handler called whenever the placeholder value changes */\n  'update:placeholder': [date: TimeValue]\n}\n\nexport const [injectTimeFieldRootContext, provideTimeFieldRootContext]\n  = createContext<TimeFieldRootContext>('TimeFieldRoot')\n\nfunction convertValue(value: TimeValue, date: DateValue = today(getLocalTimeZone())) {\n  if (value && 'day' in value) {\n    return value\n  }\n\n  return toCalendarDateTime(date, value)\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { computed, nextTick, onMounted, ref, toRefs, watch } from 'vue'\nimport { Primitive, usePrimitiveElement } from '@/Primitive'\nimport { VisuallyHidden } from '@/VisuallyHidden'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<TimeFieldRootProps>(), {\n  defaultValue: undefined,\n  disabled: false,\n  readonly: false,\n  placeholder: undefined,\n  isDateUnavailable: undefined,\n})\nconst emits = defineEmits<TimeFieldRootEmits>()\ndefineSlots<{\n  default?: (props: {\n    /** The current time of the field */\n    modelValue: TimeValue | undefined\n    /** The time field segment contents */\n    segments: { part: SegmentPart, value: string }[]\n    /** Value if the input is invalid */\n    isInvalid: boolean\n  }) => any\n}>()\n\nconst { disabled, readonly, granularity, defaultValue, minValue, maxValue, dir: propDir, locale: propLocale } = toRefs(props)\nconst locale = useLocale(propLocale)\nconst dir = useDirection(propDir)\n\nconst formatter = useDateFormatter(locale.value, {\n  hourCycle: normalizeHourCycle(props.hourCycle),\n})\nconst { primitiveElement, currentElement: parentElement }\n  = usePrimitiveElement()\nconst segmentElements = ref<Set<HTMLElement>>(new Set())\n\nconst step = computed(() => normalizeDateStep(props))\n\nconst convertedMinValue = computed(() => minValue.value ? convertValue(minValue.value) : undefined)\nconst convertedMaxValue = computed(() => maxValue.value ? convertValue(maxValue.value) : undefined)\n\nonMounted(() => {\n  getTimeFieldSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n})\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: defaultValue.value,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<TimeValue>\n\nconst convertedModelValue = computed({\n  get() {\n    if (isNullish(modelValue.value))\n      return modelValue.value\n    return convertValue(modelValue.value)\n  },\n  set(newValue) {\n    if (newValue) {\n      modelValue.value = modelValue.value && 'day' in modelValue.value ? newValue : new Time(newValue.hour, newValue.minute, newValue.second, modelValue.value?.millisecond)\n    }\n    else {\n      modelValue.value = newValue\n    }\n    return newValue\n  },\n})\n\nconst defaultDate = getDefaultTime({\n  defaultPlaceholder: props.placeholder,\n  defaultValue: modelValue.value,\n})\n\nconst placeholder = useVModel(props, 'placeholder', emits, {\n  defaultValue: props.defaultPlaceholder ?? defaultDate.copy(),\n  passive: (props.placeholder === undefined) as false,\n}) as Ref<TimeValue>\n\nconst convertedPlaceholder = computed({\n  get() {\n    return convertValue(placeholder.value)\n  },\n  set(newValue) {\n    if (newValue)\n      placeholder.value = 'day' in placeholder.value ? newValue.copy() : new Time(newValue.hour, newValue.minute, newValue.second, placeholder.value?.millisecond)\n    return newValue\n  },\n})\n\nconst inferredGranularity = computed(() => {\n  if (granularity.value)\n    return granularity.value\n\n  return 'minute'\n})\n\nconst isInvalid = computed(() => {\n  if (!modelValue.value)\n    return false\n\n  if (convertedMinValue.value && isBefore(convertedModelValue.value, convertedMinValue.value))\n    return true\n\n  if (convertedMaxValue.value && isBefore(convertedMaxValue.value, convertedModelValue.value))\n    return true\n\n  return false\n})\n\nconst initialSegments = initializeTimeSegmentValues(inferredGranularity.value)\n\nconst segmentValues = ref<SegmentValueObj>(modelValue.value ? { ...syncTimeSegmentValues({ value: convertedModelValue.value, formatter }) } : { ...initialSegments })\n\nconst allSegmentContent = computed(() => createContent({\n  granularity: inferredGranularity.value,\n  dateRef: convertedPlaceholder.value,\n  formatter,\n  hideTimeZone: props.hideTimeZone,\n  hourCycle: props.hourCycle,\n  segmentValues: segmentValues.value,\n  locale,\n  isTimeValue: true,\n}))\n\nconst segmentContents = computed(() => allSegmentContent.value.arr)\n\nconst editableSegmentContents = computed(() => segmentContents.value.filter(({ part }) => part !== 'literal'))\n\nwatch(locale, (value) => {\n  if (formatter.getLocale() !== value) {\n    formatter.setLocale(value)\n    // Locale changed, so we need to clear the segment elements and re-get them (different order)\n    // Get the focusable elements again on the next tick\n    nextTick(() => {\n      segmentElements.value.clear()\n      getTimeFieldSegmentElements(parentElement.value).forEach(item => segmentElements.value.add(item as HTMLElement))\n    })\n  }\n})\n\nwatch(convertedModelValue, (_modelValue) => {\n  if (!isNullish(_modelValue) && (!isEqualDay(convertedPlaceholder.value, _modelValue) || convertedPlaceholder.value.compare(_modelValue) !== 0))\n    placeholder.value = _modelValue.copy()\n})\n\nwatch([convertedModelValue, locale], ([_modelValue]) => {\n  if (!isNullish(_modelValue)) {\n    segmentValues.value = { ...syncTimeSegmentValues({ value: _modelValue, formatter }) }\n  }\n  // If segment has null value, means that user modified it, thus do not reset the segmentValues\n  else if (Object.values(segmentValues.value).every(value => value !== null) && isNullish(_modelValue)) {\n    segmentValues.value = { ...initialSegments }\n  }\n})\n\nconst currentFocusedElement = ref<HTMLElement | null>(null)\n\nconst currentSegmentIndex = computed(() =>\n  Array.from(segmentElements.value).findIndex(el =>\n    el.getAttribute('data-reka-time-field-segment')\n    === currentFocusedElement.value?.getAttribute('data-reka-time-field-segment')))\n\nconst nextFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const nextCondition = sign < 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (nextCondition)\n    return null\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value + sign]\n  return segmentToFocus\n})\n\nconst prevFocusableSegment = computed(() => {\n  const sign = dir.value === 'rtl' ? -1 : 1\n  const prevCondition = sign > 0 ? currentSegmentIndex.value < 0 : currentSegmentIndex.value > segmentElements.value.size - 1\n  if (prevCondition)\n    return null\n\n  const segmentToFocus = Array.from(segmentElements.value)[currentSegmentIndex.value - sign]\n  return segmentToFocus\n})\n\nconst kbd = useKbd()\n\nfunction handleKeydown(e: KeyboardEvent) {\n  if (!isSegmentNavigationKey(e.key))\n    return\n  if (e.key === kbd.ARROW_LEFT)\n    prevFocusableSegment.value?.focus()\n  if (e.key === kbd.ARROW_RIGHT)\n    nextFocusableSegment.value?.focus()\n}\n\nfunction setFocusedElement(el: HTMLElement) {\n  currentFocusedElement.value = el\n}\n\nprovideTimeFieldRootContext({\n  locale,\n  modelValue: convertedModelValue,\n  placeholder: convertedPlaceholder,\n  disabled,\n  formatter,\n  hourCycle: props.hourCycle,\n  step,\n  readonly,\n  segmentValues,\n  isInvalid,\n  segmentContents: editableSegmentContents,\n  elements: segmentElements,\n  setFocusedElement,\n  focusNext() {\n    nextFocusableSegment.value?.focus()\n  },\n})\n\ndefineExpose({\n  /** Helper to set the focused element inside the DateField */\n  setFocusedElement,\n})\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"$attrs\"\n    ref=\"primitiveElement\"\n    role=\"group\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-readonly=\"readonly ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :dir=\"dir\"\n    @keydown.left.right=\"handleKeydown\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :segments=\"segmentContents\"\n      :is-invalid=\"isInvalid\"\n    />\n\n    <VisuallyHidden\n      :id=\"id\"\n      as=\"input\"\n      feature=\"focusable\"\n      tabindex=\"-1\"\n      :value=\"modelValue ? modelValue.toString() : ''\"\n      :name=\"name\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      @focus=\"Array.from(segmentElements)?.[0]?.focus()\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { SegmentPart } from '@/shared/date'\nimport { computed, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useDateField } from '@/shared/date/useDateField'\nimport { injectTimeFieldRootContext } from './TimeFieldRoot.vue'\n\nexport interface TimeFieldInputProps extends PrimitiveProps {\n  /** The part of the date to render */\n  part: SegmentPart\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<TimeFieldInputProps>()\n\nconst rootContext = injectTimeFieldRootContext()\n\nconst hasLeftFocus = ref(true)\nconst lastKeyZero = ref(false)\n\nconst {\n  handleSegmentClick,\n  handleSegmentKeydown,\n  attributes,\n} = useDateField({\n  hasLeftFocus,\n  lastKeyZero,\n  placeholder: rootContext.placeholder,\n  hourCycle: rootContext.hourCycle,\n  step: rootContext.step,\n  segmentValues: rootContext.segmentValues,\n  formatter: rootContext.formatter,\n  part: props.part,\n  disabled: rootContext.disabled,\n  readonly: rootContext.readonly,\n  focusNext: rootContext.focusNext,\n  modelValue: rootContext.modelValue,\n})\n\nconst disabled = computed(() => rootContext.disabled.value)\nconst readonly = computed(() => rootContext.readonly.value)\nconst isInvalid = computed(() => rootContext.isInvalid.value)\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    v-bind=\"attributes\"\n    :contenteditable=\"disabled || readonly ? false : part !== 'literal'\"\n    :data-reka-time-field-segment=\"part\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :aria-readonly=\"readonly ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :aria-invalid=\"isInvalid ? true : undefined\"\n    v-on=\"part !== 'literal' ? {\n      mousedown: handleSegmentClick,\n      keydown: handleSegmentKeydown,\n      focusout: () => { hasLeftFocus = true },\n      focusin: (e: FocusEvent) => {\n        rootContext.setFocusedElement(e.target as HTMLElement)\n      },\n    } : {}\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { SegmentPart } from '@/shared/date'\nimport { computed, ref } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { useDateField } from '@/shared/date/useDateField'\nimport { injectTimeFieldRootContext } from './TimeFieldRoot.vue'\n\nexport interface TimeFieldInputProps extends PrimitiveProps {\n  /** The part of the date to render */\n  part: SegmentPart\n}\n</script>\n\n<script setup lang=\"ts\">\nconst props = defineProps<TimeFieldInputProps>()\n\nconst rootContext = injectTimeFieldRootContext()\n\nconst hasLeftFocus = ref(true)\nconst lastKeyZero = ref(false)\n\nconst {\n  handleSegmentClick,\n  handleSegmentKeydown,\n  attributes,\n} = useDateField({\n  hasLeftFocus,\n  lastKeyZero,\n  placeholder: rootContext.placeholder,\n  hourCycle: rootContext.hourCycle,\n  step: rootContext.step,\n  segmentValues: rootContext.segmentValues,\n  formatter: rootContext.formatter,\n  part: props.part,\n  disabled: rootContext.disabled,\n  readonly: rootContext.readonly,\n  focusNext: rootContext.focusNext,\n  modelValue: rootContext.modelValue,\n})\n\nconst disabled = computed(() => rootContext.disabled.value)\nconst readonly = computed(() => rootContext.readonly.value)\nconst isInvalid = computed(() => rootContext.isInvalid.value)\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    v-bind=\"attributes\"\n    :contenteditable=\"disabled || readonly ? false : part !== 'literal'\"\n    :data-reka-time-field-segment=\"part\"\n    :aria-disabled=\"disabled ? true : undefined\"\n    :aria-readonly=\"readonly ? true : undefined\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :data-invalid=\"isInvalid ? '' : undefined\"\n    :aria-invalid=\"isInvalid ? true : undefined\"\n    v-on=\"part !== 'literal' ? {\n      mousedown: handleSegmentClick,\n      keydown: handleSegmentKeydown,\n      focusout: () => { hasLeftFocus = true },\n      focusin: (e: FocusEvent) => {\n        rootContext.setFocusedElement(e.target as HTMLElement)\n      },\n    } : {}\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ToastAnnounceExcludeProps extends PrimitiveProps {\n  altText?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\ndefineProps<ToastAnnounceExcludeProps>()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    data-reka-toast-announce-exclude=\"\"\n    :data-reka-toast-announce-alt=\"altText || undefined\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ToastAnnounceExcludeProps extends PrimitiveProps {\n  altText?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\ndefineProps<ToastAnnounceExcludeProps>()\n</script>\n\n<template>\n  <Primitive\n    :as=\"as\"\n    :as-child=\"asChild\"\n    data-reka-toast-announce-exclude=\"\"\n    :data-reka-toast-announce-alt=\"altText || undefined\"\n  >\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { SwipeDirection } from './utils'\nimport { useCollection } from '@/Collection'\nimport { createContext } from '@/shared'\n\ntype ToastProviderContext = {\n  label: Ref<string>\n  duration: Ref<number>\n  swipeDirection: Ref<SwipeDirection>\n  swipeThreshold: Ref<number>\n  toastCount: Ref<number>\n  viewport: Ref<HTMLElement | undefined>\n  onViewportChange: (viewport: HTMLElement) => void\n  onToastAdd: () => void\n  onToastRemove: () => void\n  isFocusedToastEscapeKeyDownRef: Ref<boolean>\n  isClosePausedRef: Ref<boolean>\n}\n\nexport interface ToastProviderProps {\n  /**\n   * An author-localized label for each toast. Used to help screen reader users\n   * associate the interruption with a toast.\n   * @defaultValue 'Notification'\n   */\n  label?: string\n  /**\n   * Time in milliseconds that each toast should remain visible for.\n   * @defaultValue 5000\n   */\n  duration?: number\n  /**\n   * Direction of pointer swipe that should close the toast.\n   * @defaultValue 'right'\n   */\n  swipeDirection?: SwipeDirection\n  /**\n   * Distance in pixels that the swipe must pass before a close is triggered.\n   * @defaultValue 50\n   */\n  swipeThreshold?: number\n}\n\nexport const [injectToastProviderContext, provideToastProviderContext]\n  = createContext<ToastProviderContext>('ToastProvider')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, toRefs } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ToastProviderProps>(), {\n  label: 'Notification',\n  duration: 5000,\n  swipeDirection: 'right',\n  swipeThreshold: 50,\n})\nconst { label, duration, swipeDirection, swipeThreshold } = toRefs(props)\nuseCollection({ isProvider: true })\n\nconst viewport = ref<HTMLElement>()\nconst toastCount = ref(0)\nconst isFocusedToastEscapeKeyDownRef = ref(false)\nconst isClosePausedRef = ref(false)\n\nif (props.label && typeof props.label === 'string' && !props.label.trim()) {\n  const error = 'Invalid prop `label` supplied to `ToastProvider`. Expected non-empty `string`.'\n  throw new Error(error)\n}\n\nprovideToastProviderContext({\n  label,\n  duration,\n  swipeDirection,\n  swipeThreshold,\n  toastCount,\n  viewport,\n  onViewportChange(el) {\n    viewport.value = el\n  },\n  onToastAdd() {\n    toastCount.value++\n  },\n  onToastRemove() {\n    toastCount.value--\n  },\n  isFocusedToastEscapeKeyDownRef,\n  isClosePausedRef,\n\n})\n</script>\n\n<template>\n  <slot />\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { SwipeDirection } from './utils'\nimport { useCollection } from '@/Collection'\nimport { createContext } from '@/shared'\n\ntype ToastProviderContext = {\n  label: Ref<string>\n  duration: Ref<number>\n  swipeDirection: Ref<SwipeDirection>\n  swipeThreshold: Ref<number>\n  toastCount: Ref<number>\n  viewport: Ref<HTMLElement | undefined>\n  onViewportChange: (viewport: HTMLElement) => void\n  onToastAdd: () => void\n  onToastRemove: () => void\n  isFocusedToastEscapeKeyDownRef: Ref<boolean>\n  isClosePausedRef: Ref<boolean>\n}\n\nexport interface ToastProviderProps {\n  /**\n   * An author-localized label for each toast. Used to help screen reader users\n   * associate the interruption with a toast.\n   * @defaultValue 'Notification'\n   */\n  label?: string\n  /**\n   * Time in milliseconds that each toast should remain visible for.\n   * @defaultValue 5000\n   */\n  duration?: number\n  /**\n   * Direction of pointer swipe that should close the toast.\n   * @defaultValue 'right'\n   */\n  swipeDirection?: SwipeDirection\n  /**\n   * Distance in pixels that the swipe must pass before a close is triggered.\n   * @defaultValue 50\n   */\n  swipeThreshold?: number\n}\n\nexport const [injectToastProviderContext, provideToastProviderContext]\n  = createContext<ToastProviderContext>('ToastProvider')\n</script>\n\n<script setup lang=\"ts\">\nimport { ref, toRefs } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ToastProviderProps>(), {\n  label: 'Notification',\n  duration: 5000,\n  swipeDirection: 'right',\n  swipeThreshold: 50,\n})\nconst { label, duration, swipeDirection, swipeThreshold } = toRefs(props)\nuseCollection({ isProvider: true })\n\nconst viewport = ref<HTMLElement>()\nconst toastCount = ref(0)\nconst isFocusedToastEscapeKeyDownRef = ref(false)\nconst isClosePausedRef = ref(false)\n\nif (props.label && typeof props.label === 'string' && !props.label.trim()) {\n  const error = 'Invalid prop `label` supplied to `ToastProvider`. Expected non-empty `string`.'\n  throw new Error(error)\n}\n\nprovideToastProviderContext({\n  label,\n  duration,\n  swipeDirection,\n  swipeThreshold,\n  toastCount,\n  viewport,\n  onViewportChange(el) {\n    viewport.value = el\n  },\n  onToastAdd() {\n    toastCount.value++\n  },\n  onToastRemove() {\n    toastCount.value--\n  },\n  isFocusedToastEscapeKeyDownRef,\n  isClosePausedRef,\n\n})\n</script>\n\n<template>\n  <slot />\n</template>\n", "<script setup lang=\"ts\">\nimport { useRafFn } from '@vueuse/core'\nimport { useTimeout } from '@vueuse/shared'\nimport { ref } from 'vue'\nimport { VisuallyHidden } from '@/VisuallyHidden'\nimport { injectToastProviderContext } from './ToastProvider.vue'\n\nconst providerContext = injectToastProviderContext()\n\nconst isAnnounced = useTimeout(1000)\nconst renderAnnounceText = ref(false)\n\nuseRafFn(() => {\n  renderAnnounceText.value = true\n})\n</script>\n\n<template>\n  <VisuallyHidden v-if=\"isAnnounced || renderAnnounceText\">\n    {{ providerContext.label.value }}\n    <slot />\n  </VisuallyHidden>\n</template>\n", "<script setup lang=\"ts\">\nimport { useRafFn } from '@vueuse/core'\nimport { useTimeout } from '@vueuse/shared'\nimport { ref } from 'vue'\nimport { VisuallyHidden } from '@/VisuallyHidden'\nimport { injectToastProviderContext } from './ToastProvider.vue'\n\nconst providerContext = injectToastProviderContext()\n\nconst isAnnounced = useTimeout(1000)\nconst renderAnnounceText = ref(false)\n\nuseRafFn(() => {\n  renderAnnounceText.value = true\n})\n</script>\n\n<template>\n  <VisuallyHidden v-if=\"isAnnounced || renderAnnounceText\">\n    {{ providerContext.label.value }}\n    <slot />\n  </VisuallyHidden>\n</template>\n", "export const TOAST_SWIPE_START = 'toast.swipeStart'\nexport const TOAST_SWIPE_MOVE = 'toast.swipeMove'\nexport const TOAST_SWIPE_CANCEL = 'toast.swipeCancel'\nexport const TOAST_SWIPE_END = 'toast.swipeEnd'\n\nexport const VIEWPORT_NAME = 'ToastViewport'\nexport const VIEWPORT_DEFAULT_HOTKEY = ['F8']\nexport const VIEWPORT_PAUSE = 'toast.viewportPause'\nexport const VIEWPORT_RESUME = 'toast.viewportResume'\n\nexport type SwipeDirection = 'up' | 'down' | 'left' | 'right'\n\nexport type SwipeEvent = { currentTarget: EventTarget & HTMLElement } & Omit<\n  CustomEvent<{ originalEvent: PointerEvent, delta: { x: number, y: number } }>,\n  'currentTarget'\n>\n\nexport function handleAndDispatchCustomEvent<\n  E extends CustomEvent,\n  OriginalEvent extends Event,\n>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D>\n    ? D\n    : never),\n) {\n  const currentTarget = detail.originalEvent.currentTarget as HTMLElement\n  const event = new CustomEvent(name, {\n    bubbles: false,\n    cancelable: true,\n    detail,\n  })\n  if (handler)\n    currentTarget.addEventListener(name, handler as EventListener, { once: true })\n\n  currentTarget.dispatchEvent(event)\n}\n\nexport function isDeltaInDirection(delta: { x: number, y: number }, direction: SwipeDirection, threshold = 0) {\n  const deltaX = Math.abs(delta.x)\n  const deltaY = Math.abs(delta.y)\n  const isDeltaX = deltaX > deltaY\n  if (direction === 'left' || direction === 'right')\n    return isDeltaX && deltaX > threshold\n  else\n    return !isDeltaX && deltaY > threshold\n}\n\nexport function isHTMLElement(node: any): node is HTMLElement {\n  return node.nodeType === node.ELEMENT_NODE\n}\n\nexport function getAnnounceTextContent(container: HTMLElement) {\n  const textContent: string[] = []\n  const childNodes = Array.from(container.childNodes)\n\n  childNodes.forEach((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent)\n      textContent.push(node.textContent)\n    if (isHTMLElement(node)) {\n      const isHidden = node.ariaHidden || node.hidden || node.style.display === 'none'\n      const isExcluded = node.dataset.rekaToastAnnounceExclude === ''\n\n      if (!isHidden) {\n        if (isExcluded) {\n          const altText = node.dataset.rekaToastAnnounceAlt\n          if (altText)\n            textContent.push(altText)\n        }\n        else {\n          textContent.push(...getAnnounceTextContent(node))\n        }\n      }\n    }\n  })\n  // We return a collection of text rather than a single concatenated string.\n  // This allows SR VO to naturally pause break between nodes while announcing.\n  return textContent\n}\n", "<script lang=\"ts\">\nimport type { SwipeEvent } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { isClient } from '@vueuse/shared'\nimport { useCollection } from '@/Collection'\nimport { createContext, getActiveElement, useForwardExpose } from '@/shared'\n\nexport type ToastRootImplEmits = {\n  close: []\n  /** Event handler called when the escape key is down. It can be prevented by calling `event.preventDefault`. */\n  escapeKeyDown: [event: KeyboardEvent]\n  /** Event handler called when the dismiss timer is paused. This occurs when the pointer is moved over the viewport, the viewport is focused or when the window is blurred. */\n  pause: []\n  /** Event handler called when the dismiss timer is resumed. This occurs when the pointer is moved away from the viewport, the viewport is blurred or when the window is focused. */\n  resume: []\n  /** Event handler called when starting a swipe interaction. It can be prevented by calling `event.preventDefault`. */\n  swipeStart: [event: SwipeEvent]\n  /** Event handler called during a swipe interaction. It can be prevented by calling `event.preventDefault`. */\n  swipeMove: [event: SwipeEvent]\n  /** Event handler called when swipe interaction is cancelled. It can be prevented by calling `event.preventDefault`. */\n  swipeCancel: [event: SwipeEvent]\n  /** Event handler called at the end of a swipe interaction. It can be prevented by calling `event.preventDefault`. */\n  swipeEnd: [event: SwipeEvent]\n}\n\nexport interface ToastRootImplProps extends PrimitiveProps {\n  /**\n   * Control the sensitivity of the toast for accessibility purposes.\n   *\n   * For toasts that are the result of a user action, choose `foreground`. Toasts generated from background tasks should use `background`.\n   */\n  type?: 'foreground' | 'background'\n  /**\n   * The controlled open state of the dialog. Can be bind as `v-model:open`.\n   */\n  open?: boolean\n  /**\n   * Time in milliseconds that toast should remain visible for. Overrides value\n   * given to `ToastProvider`.\n   */\n  duration?: number\n}\n\nexport const [injectToastRootContext, provideToastRootContext]\n  = createContext<{ onClose: () => void }>('ToastRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { onKeyStroke, useRafFn } from '@vueuse/core'\nimport { computed, onMounted, onUnmounted, ref, watch, watchEffect } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport ToastAnnounce from './ToastAnnounce.vue'\nimport { injectToastProviderContext } from './ToastProvider.vue'\nimport { getAnnounceTextContent, handleAndDispatchCustomEvent, isDeltaInDirection, TOAST_SWIPE_CANCEL, TOAST_SWIPE_END, TOAST_SWIPE_MOVE, TOAST_SWIPE_START, VIEWPORT_PAUSE, VIEWPORT_RESUME } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ToastRootImplProps>(), {\n  open: false,\n  as: 'li',\n})\n\nconst emits = defineEmits<ToastRootImplEmits>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst providerContext = injectToastProviderContext()\nconst pointerStartRef = ref<{ x: number, y: number } | null>(null)\nconst swipeDeltaRef = ref<{ x: number, y: number } | null>(null)\nconst duration = computed(\n  () => typeof props.duration === 'number'\n    ? props.duration\n    : providerContext.duration.value,\n)\n\nconst closeTimerStartTimeRef = ref(0)\nconst closeTimerRemainingTimeRef = ref(duration.value)\nconst closeTimerRef = ref(0)\nconst remainingTime = ref(duration.value)\n\nconst remainingRaf = useRafFn(() => {\n  const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.value\n  remainingTime.value = Math.max(closeTimerRemainingTimeRef.value - elapsedTime, 0)\n}, { fpsLimit: 60 })\n\nfunction startTimer(duration: number) {\n  if (duration <= 0 || duration === Number.POSITIVE_INFINITY)\n    return\n  // startTimer is used inside a watch with immediate set to true.\n  // This results in code execution during SSR.\n  // Ensure this code only runs in a browser environment\n  if (!isClient)\n    return\n  window.clearTimeout(closeTimerRef.value)\n  closeTimerStartTimeRef.value = new Date().getTime()\n  closeTimerRef.value = window.setTimeout(handleClose, duration)\n}\n\nfunction handleClose(event?: PointerEvent) {\n  const isNonPointerEvent = event?.pointerType === ''\n\n  // reka: update to only perform focus when user focus via keyboard\n  // focus viewport if focus is within toast to read the remaining toast\n  // count to SR users and ensure focus isn't lost\n  const isFocusInToast = currentElement.value?.contains(getActiveElement())\n  if (isFocusInToast && isNonPointerEvent)\n    providerContext.viewport.value?.focus()\n\n  if (isNonPointerEvent) {\n    // when manually close the toast, we reset isClosePausedRef\n    providerContext.isClosePausedRef.value = false\n  }\n\n  emits('close')\n}\n\nconst announceTextContent = computed(() => currentElement.value ? getAnnounceTextContent(currentElement.value) : null)\n\nif (props.type && !['foreground', 'background'].includes(props.type)) {\n  const error = 'Invalid prop `type` supplied to `Toast`. Expected `foreground | background`.'\n  throw new Error(error)\n}\n\nwatchEffect((cleanupFn) => {\n  const viewport = providerContext.viewport.value\n  if (viewport) {\n    const handleResume = () => {\n      startTimer(closeTimerRemainingTimeRef.value)\n      remainingRaf.resume()\n      emits('resume')\n    }\n    const handlePause = () => {\n      const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.value\n      closeTimerRemainingTimeRef.value = closeTimerRemainingTimeRef.value - elapsedTime\n      window.clearTimeout(closeTimerRef.value)\n      remainingRaf.pause()\n      emits('pause')\n    }\n    viewport.addEventListener(VIEWPORT_PAUSE, handlePause)\n    viewport.addEventListener(VIEWPORT_RESUME, handleResume)\n    return () => {\n      viewport.removeEventListener(VIEWPORT_PAUSE, handlePause)\n      viewport.removeEventListener(VIEWPORT_RESUME, handleResume)\n    }\n  }\n})\n\n// start timer when toast opens or duration changes.\n// we include `open` in deps because closed !== unmounted when animating\n// so it could reopen before being completely unmounted\nwatch(() => [props.open, duration.value], () => {\n  // Reset the timer when the toast is rerendered with the new duration\n  closeTimerRemainingTimeRef.value = duration.value\n\n  if (props.open && !providerContext.isClosePausedRef.value)\n    startTimer(duration.value)\n}, { immediate: true })\n\nonKeyStroke('Escape', (event) => {\n  emits('escapeKeyDown', event)\n  if (!event.defaultPrevented) {\n    providerContext.isFocusedToastEscapeKeyDownRef.value = true\n    handleClose()\n  }\n})\n\nonMounted(() => {\n  providerContext.onToastAdd()\n})\nonUnmounted(() => {\n  providerContext.onToastRemove()\n})\n\nprovideToastRootContext({ onClose: handleClose })\n</script>\n\n<template>\n  <ToastAnnounce\n    v-if=\"announceTextContent\"\n    role=\"alert\"\n    :aria-live=\"type === 'foreground' ? 'assertive' : 'polite'\"\n    aria-atomic=\"true\"\n  >\n    {{ announceTextContent }}\n  </ToastAnnounce>\n\n  <Teleport\n    v-if=\"providerContext.viewport.value\"\n    :to=\"providerContext.viewport.value\"\n  >\n    <CollectionItem>\n      <Primitive\n        :ref=\"forwardRef\"\n        role=\"alert\"\n        aria-live=\"off\"\n        aria-atomic=\"true\"\n        tabindex=\"0\"\n        v-bind=\"$attrs\"\n        :as=\"as\"\n        :as-child=\"asChild\"\n        :data-state=\"open ? 'open' : 'closed'\"\n        :data-swipe-direction=\"providerContext.swipeDirection.value\"\n        :style=\"{ userSelect: 'none', touchAction: 'none' }\"\n        @pointerdown.left=\"(event: PointerEvent) => {\n          pointerStartRef = { x: event.clientX, y: event.clientY };\n        }\"\n        @pointermove=\"(event: PointerEvent) => {\n          if (!pointerStartRef) return;\n          const x = event.clientX - pointerStartRef.x;\n          const y = event.clientY - pointerStartRef.y;\n          const hasSwipeMoveStarted = Boolean(swipeDeltaRef);\n          const isHorizontalSwipe = ['left', 'right'].includes(providerContext.swipeDirection.value);\n          const clamp = ['left', 'up'].includes(providerContext.swipeDirection.value)\n            ? Math.min\n            : Math.max;\n          const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n          const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n          const moveStartBuffer = event.pointerType === 'touch' ? 10 : 2;\n          const delta = { x: clampedX, y: clampedY };\n          const eventDetail = { originalEvent: event, delta };\n          if (hasSwipeMoveStarted) {\n            swipeDeltaRef = delta;\n            handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, (ev: SwipeEvent) => emits('swipeMove', ev), eventDetail);\n          }\n          else if (isDeltaInDirection(delta, providerContext.swipeDirection.value, moveStartBuffer)) {\n            swipeDeltaRef = delta;\n            handleAndDispatchCustomEvent(TOAST_SWIPE_START, (ev: SwipeEvent) => emits('swipeStart', ev), eventDetail);\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n          else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n            // User is swiping in wrong direction so we disable swipe gesture\n            // for the current pointer down interaction\n            pointerStartRef = null;\n          }\n        }\"\n        @pointerup=\"(event: PointerEvent) => {\n          const delta = swipeDeltaRef;\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n          }\n          swipeDeltaRef = null;\n          pointerStartRef = null;\n          if (delta) {\n            const toast = event.currentTarget;\n            const eventDetail = { originalEvent: event, delta };\n            if (\n              isDeltaInDirection(delta, providerContext.swipeDirection.value, providerContext.swipeThreshold.value)\n            ) {\n              handleAndDispatchCustomEvent(TOAST_SWIPE_END, (ev: SwipeEvent) => emits('swipeEnd', ev), eventDetail);\n            }\n            else {\n              handleAndDispatchCustomEvent(TOAST_SWIPE_CANCEL, (ev: SwipeEvent) => emits('swipeCancel', ev), eventDetail);\n            }\n            // Prevent click event from triggering on items within the toast when\n            // pointer up is part of a swipe gesture\n            toast?.addEventListener('click', (event) => event.preventDefault(), {\n              once: true,\n            });\n          }\n        }\"\n      >\n        <slot\n          :remaining=\"remainingTime\"\n          :duration=\"duration\"\n        />\n      </Primitive>\n    </CollectionItem>\n  </Teleport>\n</template>\n", "<script lang=\"ts\">\nimport type { SwipeEvent } from './utils'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { isClient } from '@vueuse/shared'\nimport { useCollection } from '@/Collection'\nimport { createContext, getActiveElement, useForwardExpose } from '@/shared'\n\nexport type ToastRootImplEmits = {\n  close: []\n  /** Event handler called when the escape key is down. It can be prevented by calling `event.preventDefault`. */\n  escapeKeyDown: [event: KeyboardEvent]\n  /** Event handler called when the dismiss timer is paused. This occurs when the pointer is moved over the viewport, the viewport is focused or when the window is blurred. */\n  pause: []\n  /** Event handler called when the dismiss timer is resumed. This occurs when the pointer is moved away from the viewport, the viewport is blurred or when the window is focused. */\n  resume: []\n  /** Event handler called when starting a swipe interaction. It can be prevented by calling `event.preventDefault`. */\n  swipeStart: [event: SwipeEvent]\n  /** Event handler called during a swipe interaction. It can be prevented by calling `event.preventDefault`. */\n  swipeMove: [event: SwipeEvent]\n  /** Event handler called when swipe interaction is cancelled. It can be prevented by calling `event.preventDefault`. */\n  swipeCancel: [event: SwipeEvent]\n  /** Event handler called at the end of a swipe interaction. It can be prevented by calling `event.preventDefault`. */\n  swipeEnd: [event: SwipeEvent]\n}\n\nexport interface ToastRootImplProps extends PrimitiveProps {\n  /**\n   * Control the sensitivity of the toast for accessibility purposes.\n   *\n   * For toasts that are the result of a user action, choose `foreground`. Toasts generated from background tasks should use `background`.\n   */\n  type?: 'foreground' | 'background'\n  /**\n   * The controlled open state of the dialog. Can be bind as `v-model:open`.\n   */\n  open?: boolean\n  /**\n   * Time in milliseconds that toast should remain visible for. Overrides value\n   * given to `ToastProvider`.\n   */\n  duration?: number\n}\n\nexport const [injectToastRootContext, provideToastRootContext]\n  = createContext<{ onClose: () => void }>('ToastRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { onKeyStroke, useRafFn } from '@vueuse/core'\nimport { computed, onMounted, onUnmounted, ref, watch, watchEffect } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport ToastAnnounce from './ToastAnnounce.vue'\nimport { injectToastProviderContext } from './ToastProvider.vue'\nimport { getAnnounceTextContent, handleAndDispatchCustomEvent, isDeltaInDirection, TOAST_SWIPE_CANCEL, TOAST_SWIPE_END, TOAST_SWIPE_MOVE, TOAST_SWIPE_START, VIEWPORT_PAUSE, VIEWPORT_RESUME } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ToastRootImplProps>(), {\n  open: false,\n  as: 'li',\n})\n\nconst emits = defineEmits<ToastRootImplEmits>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { CollectionItem } = useCollection()\n\nconst providerContext = injectToastProviderContext()\nconst pointerStartRef = ref<{ x: number, y: number } | null>(null)\nconst swipeDeltaRef = ref<{ x: number, y: number } | null>(null)\nconst duration = computed(\n  () => typeof props.duration === 'number'\n    ? props.duration\n    : providerContext.duration.value,\n)\n\nconst closeTimerStartTimeRef = ref(0)\nconst closeTimerRemainingTimeRef = ref(duration.value)\nconst closeTimerRef = ref(0)\nconst remainingTime = ref(duration.value)\n\nconst remainingRaf = useRafFn(() => {\n  const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.value\n  remainingTime.value = Math.max(closeTimerRemainingTimeRef.value - elapsedTime, 0)\n}, { fpsLimit: 60 })\n\nfunction startTimer(duration: number) {\n  if (duration <= 0 || duration === Number.POSITIVE_INFINITY)\n    return\n  // startTimer is used inside a watch with immediate set to true.\n  // This results in code execution during SSR.\n  // Ensure this code only runs in a browser environment\n  if (!isClient)\n    return\n  window.clearTimeout(closeTimerRef.value)\n  closeTimerStartTimeRef.value = new Date().getTime()\n  closeTimerRef.value = window.setTimeout(handleClose, duration)\n}\n\nfunction handleClose(event?: PointerEvent) {\n  const isNonPointerEvent = event?.pointerType === ''\n\n  // reka: update to only perform focus when user focus via keyboard\n  // focus viewport if focus is within toast to read the remaining toast\n  // count to SR users and ensure focus isn't lost\n  const isFocusInToast = currentElement.value?.contains(getActiveElement())\n  if (isFocusInToast && isNonPointerEvent)\n    providerContext.viewport.value?.focus()\n\n  if (isNonPointerEvent) {\n    // when manually close the toast, we reset isClosePausedRef\n    providerContext.isClosePausedRef.value = false\n  }\n\n  emits('close')\n}\n\nconst announceTextContent = computed(() => currentElement.value ? getAnnounceTextContent(currentElement.value) : null)\n\nif (props.type && !['foreground', 'background'].includes(props.type)) {\n  const error = 'Invalid prop `type` supplied to `Toast`. Expected `foreground | background`.'\n  throw new Error(error)\n}\n\nwatchEffect((cleanupFn) => {\n  const viewport = providerContext.viewport.value\n  if (viewport) {\n    const handleResume = () => {\n      startTimer(closeTimerRemainingTimeRef.value)\n      remainingRaf.resume()\n      emits('resume')\n    }\n    const handlePause = () => {\n      const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.value\n      closeTimerRemainingTimeRef.value = closeTimerRemainingTimeRef.value - elapsedTime\n      window.clearTimeout(closeTimerRef.value)\n      remainingRaf.pause()\n      emits('pause')\n    }\n    viewport.addEventListener(VIEWPORT_PAUSE, handlePause)\n    viewport.addEventListener(VIEWPORT_RESUME, handleResume)\n    return () => {\n      viewport.removeEventListener(VIEWPORT_PAUSE, handlePause)\n      viewport.removeEventListener(VIEWPORT_RESUME, handleResume)\n    }\n  }\n})\n\n// start timer when toast opens or duration changes.\n// we include `open` in deps because closed !== unmounted when animating\n// so it could reopen before being completely unmounted\nwatch(() => [props.open, duration.value], () => {\n  // Reset the timer when the toast is rerendered with the new duration\n  closeTimerRemainingTimeRef.value = duration.value\n\n  if (props.open && !providerContext.isClosePausedRef.value)\n    startTimer(duration.value)\n}, { immediate: true })\n\nonKeyStroke('Escape', (event) => {\n  emits('escapeKeyDown', event)\n  if (!event.defaultPrevented) {\n    providerContext.isFocusedToastEscapeKeyDownRef.value = true\n    handleClose()\n  }\n})\n\nonMounted(() => {\n  providerContext.onToastAdd()\n})\nonUnmounted(() => {\n  providerContext.onToastRemove()\n})\n\nprovideToastRootContext({ onClose: handleClose })\n</script>\n\n<template>\n  <ToastAnnounce\n    v-if=\"announceTextContent\"\n    role=\"alert\"\n    :aria-live=\"type === 'foreground' ? 'assertive' : 'polite'\"\n    aria-atomic=\"true\"\n  >\n    {{ announceTextContent }}\n  </ToastAnnounce>\n\n  <Teleport\n    v-if=\"providerContext.viewport.value\"\n    :to=\"providerContext.viewport.value\"\n  >\n    <CollectionItem>\n      <Primitive\n        :ref=\"forwardRef\"\n        role=\"alert\"\n        aria-live=\"off\"\n        aria-atomic=\"true\"\n        tabindex=\"0\"\n        v-bind=\"$attrs\"\n        :as=\"as\"\n        :as-child=\"asChild\"\n        :data-state=\"open ? 'open' : 'closed'\"\n        :data-swipe-direction=\"providerContext.swipeDirection.value\"\n        :style=\"{ userSelect: 'none', touchAction: 'none' }\"\n        @pointerdown.left=\"(event: PointerEvent) => {\n          pointerStartRef = { x: event.clientX, y: event.clientY };\n        }\"\n        @pointermove=\"(event: PointerEvent) => {\n          if (!pointerStartRef) return;\n          const x = event.clientX - pointerStartRef.x;\n          const y = event.clientY - pointerStartRef.y;\n          const hasSwipeMoveStarted = Boolean(swipeDeltaRef);\n          const isHorizontalSwipe = ['left', 'right'].includes(providerContext.swipeDirection.value);\n          const clamp = ['left', 'up'].includes(providerContext.swipeDirection.value)\n            ? Math.min\n            : Math.max;\n          const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n          const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n          const moveStartBuffer = event.pointerType === 'touch' ? 10 : 2;\n          const delta = { x: clampedX, y: clampedY };\n          const eventDetail = { originalEvent: event, delta };\n          if (hasSwipeMoveStarted) {\n            swipeDeltaRef = delta;\n            handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, (ev: SwipeEvent) => emits('swipeMove', ev), eventDetail);\n          }\n          else if (isDeltaInDirection(delta, providerContext.swipeDirection.value, moveStartBuffer)) {\n            swipeDeltaRef = delta;\n            handleAndDispatchCustomEvent(TOAST_SWIPE_START, (ev: SwipeEvent) => emits('swipeStart', ev), eventDetail);\n            (event.target as HTMLElement).setPointerCapture(event.pointerId);\n          }\n          else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n            // User is swiping in wrong direction so we disable swipe gesture\n            // for the current pointer down interaction\n            pointerStartRef = null;\n          }\n        }\"\n        @pointerup=\"(event: PointerEvent) => {\n          const delta = swipeDeltaRef;\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n          }\n          swipeDeltaRef = null;\n          pointerStartRef = null;\n          if (delta) {\n            const toast = event.currentTarget;\n            const eventDetail = { originalEvent: event, delta };\n            if (\n              isDeltaInDirection(delta, providerContext.swipeDirection.value, providerContext.swipeThreshold.value)\n            ) {\n              handleAndDispatchCustomEvent(TOAST_SWIPE_END, (ev: SwipeEvent) => emits('swipeEnd', ev), eventDetail);\n            }\n            else {\n              handleAndDispatchCustomEvent(TOAST_SWIPE_CANCEL, (ev: SwipeEvent) => emits('swipeCancel', ev), eventDetail);\n            }\n            // Prevent click event from triggering on items within the toast when\n            // pointer up is part of a swipe gesture\n            toast?.addEventListener('click', (event) => event.preventDefault(), {\n              once: true,\n            });\n          }\n        }\"\n      >\n        <slot\n          :remaining=\"remainingTime\"\n          :duration=\"duration\"\n        />\n      </Primitive>\n    </CollectionItem>\n  </Teleport>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToastCloseProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport ToastAnnounceExclude from './ToastAnnounceExclude.vue'\nimport { injectToastRootContext } from './ToastRootImpl.vue'\n\nconst props = withDefaults(defineProps<ToastCloseProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectToastRootContext()\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <ToastAnnounceExclude as-child>\n    <Primitive\n      v-bind=\"props\"\n      :ref=\"forwardRef\"\n      :type=\"as === 'button' ? 'button' : undefined \"\n      @click=\"rootContext.onClose\"\n    >\n      <slot />\n    </Primitive>\n  </ToastAnnounceExclude>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToastCloseProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport ToastAnnounceExclude from './ToastAnnounceExclude.vue'\nimport { injectToastRootContext } from './ToastRootImpl.vue'\n\nconst props = withDefaults(defineProps<ToastCloseProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectToastRootContext()\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <ToastAnnounceExclude as-child>\n    <Primitive\n      v-bind=\"props\"\n      :ref=\"forwardRef\"\n      :type=\"as === 'button' ? 'button' : undefined \"\n      @click=\"rootContext.onClose\"\n    >\n      <slot />\n    </Primitive>\n  </ToastAnnounceExclude>\n</template>\n", "<script lang=\"ts\">\nimport type { ToastCloseProps } from './ToastClose.vue'\n\nexport interface ToastActionProps extends ToastCloseProps {\n  /**\n   * A short description for an alternate way to carry out the action. For screen reader users\n   * who will not be able to navigate to the button easily/quickly.\n   * @example <ToastAction altText=\"Goto account settings to upgrade\">Upgrade</ToastAction>\n   * @example <ToastAction altText=\"Undo (Alt+U)\">Undo</ToastAction>\n   */\n  altText: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useForwardExpose } from '@/shared'\nimport ToastAnnounceExclude from './ToastAnnounceExclude.vue'\nimport ToastClose from './ToastClose.vue'\n\nconst props = defineProps<ToastActionProps>()\n\nif (!props.altText)\n  throw new Error('Missing prop `altText` expected on `ToastAction`')\n\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <ToastAnnounceExclude\n    v-if=\"altText\"\n    :alt-text=\"altText\"\n    as-child\n  >\n    <ToastClose\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n    >\n      <slot />\n    </ToastClose>\n  </ToastAnnounceExclude>\n</template>\n", "<script lang=\"ts\">\nimport type { ToastCloseProps } from './ToastClose.vue'\n\nexport interface ToastActionProps extends ToastCloseProps {\n  /**\n   * A short description for an alternate way to carry out the action. For screen reader users\n   * who will not be able to navigate to the button easily/quickly.\n   * @example <ToastAction altText=\"Goto account settings to upgrade\">Upgrade</ToastAction>\n   * @example <ToastAction altText=\"Undo (Alt+U)\">Undo</ToastAction>\n   */\n  altText: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useForwardExpose } from '@/shared'\nimport ToastAnnounceExclude from './ToastAnnounceExclude.vue'\nimport ToastClose from './ToastClose.vue'\n\nconst props = defineProps<ToastActionProps>()\n\nif (!props.altText)\n  throw new Error('Missing prop `altText` expected on `ToastAction`')\n\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <ToastAnnounceExclude\n    v-if=\"altText\"\n    :alt-text=\"altText\"\n    as-child\n  >\n    <ToastClose\n      :ref=\"forwardRef\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n    >\n      <slot />\n    </ToastClose>\n  </ToastAnnounceExclude>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToastDescriptionProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ToastDescriptionProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToastDescriptionProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ToastDescriptionProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface ToastPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<ToastPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface ToastPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<ToastPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { ToastRootImplEmits, ToastRootImplProps } from './ToastRootImpl.vue'\nimport { useForwardExpose } from '@/shared'\n\nexport type ToastRootEmits = Omit<ToastRootImplEmits, 'close'> & {\n  /** Event handler called when the open state changes */\n  'update:open': [value: boolean]\n}\n\nexport interface ToastRootProps extends ToastRootImplProps {\n  /** The open state of the dialog when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { Presence } from '@/Presence'\nimport ToastRootImpl from './ToastRootImpl.vue'\n\nconst props = withDefaults(defineProps<ToastRootProps>(), {\n  type: 'foreground',\n  open: undefined,\n  defaultOpen: true,\n  as: 'li',\n})\n\nconst emits = defineEmits<ToastRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n    /** Remaining time (in ms) */\n    remaining: number\n    /** Total time the toast will remain visible for (in ms) */\n    duration: number\n  }) => any\n}>()\n\nconst { forwardRef } = useForwardExpose()\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n</script>\n\n<template>\n  <Presence :present=\"forceMount || open\">\n    <ToastRootImpl\n      :ref=\"forwardRef\"\n      v-slot=\"{ remaining, duration: _duration }\"\n      :open=\"open\"\n      :type=\"type\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :duration=\"duration\"\n      v-bind=\"$attrs\"\n      @close=\"open = false\"\n      @pause=\"emits('pause')\"\n      @resume=\"emits('resume')\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @swipe-start=\"(event) => {\n        emits('swipeStart', event);\n        if (!event.defaultPrevented) {\n          (event.currentTarget as HTMLElement).setAttribute('data-swipe', 'start');\n        }\n      }\"\n      @swipe-move=\"(event) => {\n        emits('swipeMove', event);\n        if (!event.defaultPrevented) {\n          const { x, y } = event.detail.delta;\n          const target = event.currentTarget as HTMLElement\n          target.setAttribute('data-swipe', 'move');\n          target.style.setProperty('--reka-toast-swipe-move-x', `${x}px`);\n          target.style.setProperty('--reka-toast-swipe-move-y', `${y}px`);\n        }\n      }\"\n      @swipe-cancel=\"(event) => {\n        emits('swipeCancel', event);\n        if (!event.defaultPrevented) {\n          const target = event.currentTarget as HTMLElement\n          target.setAttribute('data-swipe', 'cancel');\n          target.style.removeProperty('--reka-toast-swipe-move-x');\n          target.style.removeProperty('--reka-toast-swipe-move-y');\n          target.style.removeProperty('--reka-toast-swipe-end-x');\n          target.style.removeProperty('--reka-toast-swipe-end-y');\n        }\n      }\"\n      @swipe-end=\"(event) => {\n        emits('swipeEnd', event);\n        if (!event.defaultPrevented) {\n          const { x, y } = event.detail.delta;\n          const target = event.currentTarget as HTMLElement\n          target.setAttribute('data-swipe', 'end');\n          target.style.removeProperty('--reka-toast-swipe-move-x');\n          target.style.removeProperty('--reka-toast-swipe-move-y');\n          target.style.setProperty('--reka-toast-swipe-end-x', `${x}px`);\n          target.style.setProperty('--reka-toast-swipe-end-y', `${y}px`);\n          open = false;\n        }\n      }\"\n    >\n      <slot\n        :remaining=\"remaining\"\n        :duration=\"_duration\"\n        :open=\"open\"\n      />\n    </ToastRootImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { ToastRootImplEmits, ToastRootImplProps } from './ToastRootImpl.vue'\nimport { useForwardExpose } from '@/shared'\n\nexport type ToastRootEmits = Omit<ToastRootImplEmits, 'close'> & {\n  /** Event handler called when the open state changes */\n  'update:open': [value: boolean]\n}\n\nexport interface ToastRootProps extends ToastRootImplProps {\n  /** The open state of the dialog when it is initially rendered. Use when you do not need to control its open state. */\n  defaultOpen?: boolean\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useVModel } from '@vueuse/core'\nimport { Presence } from '@/Presence'\nimport ToastRootImpl from './ToastRootImpl.vue'\n\nconst props = withDefaults(defineProps<ToastRootProps>(), {\n  type: 'foreground',\n  open: undefined,\n  defaultOpen: true,\n  as: 'li',\n})\n\nconst emits = defineEmits<ToastRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n    /** Remaining time (in ms) */\n    remaining: number\n    /** Total time the toast will remain visible for (in ms) */\n    duration: number\n  }) => any\n}>()\n\nconst { forwardRef } = useForwardExpose()\nconst open = useVModel(props, 'open', emits, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n</script>\n\n<template>\n  <Presence :present=\"forceMount || open\">\n    <ToastRootImpl\n      :ref=\"forwardRef\"\n      v-slot=\"{ remaining, duration: _duration }\"\n      :open=\"open\"\n      :type=\"type\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :duration=\"duration\"\n      v-bind=\"$attrs\"\n      @close=\"open = false\"\n      @pause=\"emits('pause')\"\n      @resume=\"emits('resume')\"\n      @escape-key-down=\"emits('escapeKeyDown', $event)\"\n      @swipe-start=\"(event) => {\n        emits('swipeStart', event);\n        if (!event.defaultPrevented) {\n          (event.currentTarget as HTMLElement).setAttribute('data-swipe', 'start');\n        }\n      }\"\n      @swipe-move=\"(event) => {\n        emits('swipeMove', event);\n        if (!event.defaultPrevented) {\n          const { x, y } = event.detail.delta;\n          const target = event.currentTarget as HTMLElement\n          target.setAttribute('data-swipe', 'move');\n          target.style.setProperty('--reka-toast-swipe-move-x', `${x}px`);\n          target.style.setProperty('--reka-toast-swipe-move-y', `${y}px`);\n        }\n      }\"\n      @swipe-cancel=\"(event) => {\n        emits('swipeCancel', event);\n        if (!event.defaultPrevented) {\n          const target = event.currentTarget as HTMLElement\n          target.setAttribute('data-swipe', 'cancel');\n          target.style.removeProperty('--reka-toast-swipe-move-x');\n          target.style.removeProperty('--reka-toast-swipe-move-y');\n          target.style.removeProperty('--reka-toast-swipe-end-x');\n          target.style.removeProperty('--reka-toast-swipe-end-y');\n        }\n      }\"\n      @swipe-end=\"(event) => {\n        emits('swipeEnd', event);\n        if (!event.defaultPrevented) {\n          const { x, y } = event.detail.delta;\n          const target = event.currentTarget as HTMLElement\n          target.setAttribute('data-swipe', 'end');\n          target.style.removeProperty('--reka-toast-swipe-move-x');\n          target.style.removeProperty('--reka-toast-swipe-move-y');\n          target.style.setProperty('--reka-toast-swipe-end-x', `${x}px`);\n          target.style.setProperty('--reka-toast-swipe-end-y', `${y}px`);\n          open = false;\n        }\n      }\"\n    >\n      <slot\n        :remaining=\"remaining\"\n        :duration=\"_duration\"\n        :open=\"open\"\n      />\n    </ToastRootImpl>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToastTitleProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ToastTitleProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToastTitleProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ToastTitleProps>()\nuseForwardExpose()\n</script>\n\n<template>\n  <Primitive v-bind=\"props\">\n    <slot />\n  </Primitive>\n</template>\n", "<script setup lang=\"ts\">\nimport { VisuallyHidden } from '@/VisuallyHidden'\nimport { injectToastProviderContext } from './ToastProvider.vue'\n\nconst emits = defineEmits<{\n  focusFromOutsideViewport: [void]\n}>()\n\nconst providerContext = injectToastProviderContext()\n</script>\n\n<template>\n  <VisuallyHidden\n    aria-hidden=\"true\"\n    tabindex=\"0\"\n    style=\"position: fixed\"\n    @focus=\"(event: FocusEvent) => {\n      const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n      const isFocusFromOutsideViewport = !providerContext.viewport.value?.contains(prevFocusedElement);\n      if (isFocusFromOutsideViewport) emits('focusFromOutsideViewport');\n    }\"\n  >\n    <slot />\n  </VisuallyHidden>\n</template>\n", "<script setup lang=\"ts\">\nimport { VisuallyHidden } from '@/VisuallyHidden'\nimport { injectToastProviderContext } from './ToastProvider.vue'\n\nconst emits = defineEmits<{\n  focusFromOutsideViewport: [void]\n}>()\n\nconst providerContext = injectToastProviderContext()\n</script>\n\n<template>\n  <VisuallyHidden\n    aria-hidden=\"true\"\n    tabindex=\"0\"\n    style=\"position: fixed\"\n    @focus=\"(event: FocusEvent) => {\n      const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n      const isFocusFromOutsideViewport = !providerContext.viewport.value?.contains(prevFocusedElement);\n      if (isFocusFromOutsideViewport) emits('focusFromOutsideViewport');\n    }\"\n  >\n    <slot />\n  </VisuallyHidden>\n</template>\n", "<script lang=\"ts\">\nimport type { ComponentPublicInstance } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { getActiveElement, useForwardExpose } from '@/shared'\n\nexport interface ToastViewportProps extends PrimitiveProps {\n  /**\n   * The keys to use as the keyboard shortcut that will move focus to the toast viewport.\n   * @defaultValue ['F8']\n   */\n  hotkey?: string[]\n  /**\n   * An author-localized label for the toast viewport to provide context for screen reader users\n   * when navigating page landmarks. The available `{hotkey}` placeholder will be replaced for you.\n   * Alternatively, you can pass in a custom function to generate the label.\n   * @defaultValue 'Notifications ({hotkey})'\n   */\n  label?: string | ((hotkey: string) => string)\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { onKeyStroke, unrefElement } from '@vueuse/core'\nimport { computed, onMounted, ref, toRefs, watchEffect } from 'vue'\nimport { DismissableLayerBranch } from '@/DismissableLayer'\nimport { focusFirst, getTabbableCandidates } from '@/FocusScope/utils'\nimport { Primitive } from '@/Primitive'\nimport FocusProxy from './FocusProxy.vue'\nimport { injectToastProviderContext } from './ToastProvider.vue'\nimport { VIEWPORT_PAUSE, VIEWPORT_RESUME } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ToastViewportProps>(), {\n  hotkey: () => ['F8'], // from VIEWPORT_DEFAULT_HOTKEY\n  label: 'Notifications ({hotkey})',\n  as: 'ol',\n})\nconst { hotkey, label } = toRefs(props)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { CollectionSlot, getItems } = useCollection()\nconst providerContext = injectToastProviderContext()\nconst hasToasts = computed(() => providerContext.toastCount.value > 0)\nconst headFocusProxyRef = ref<HTMLElement>()\nconst tailFocusProxyRef = ref<HTMLElement>()\n\nconst hotkeyMessage = computed(() => hotkey.value.join('+').replace(/Key/g, '').replace(/Digit/g, ''))\n\nonKeyStroke(hotkey.value, () => {\n  currentElement.value.focus()\n})\n\nonMounted(() => {\n  providerContext.onViewportChange(currentElement.value)\n})\n\nwatchEffect((cleanupFn) => {\n  const viewport = currentElement.value\n  if (hasToasts.value && viewport) {\n    const handlePause = () => {\n      if (!providerContext.isClosePausedRef.value) {\n        const pauseEvent = new CustomEvent(VIEWPORT_PAUSE)\n        viewport.dispatchEvent(pauseEvent)\n        providerContext.isClosePausedRef.value = true\n      }\n    }\n\n    const handleResume = () => {\n      if (providerContext.isClosePausedRef.value) {\n        const resumeEvent = new CustomEvent(VIEWPORT_RESUME)\n        viewport.dispatchEvent(resumeEvent)\n        providerContext.isClosePausedRef.value = false\n      }\n    }\n\n    const handleFocusOutResume = (event: FocusEvent) => {\n      const isFocusMovingOutside = !viewport.contains(event.relatedTarget as HTMLElement)\n      if (isFocusMovingOutside)\n        handleResume()\n    }\n\n    const handlePointerLeaveResume = () => {\n      const isFocusInside = viewport.contains(getActiveElement())\n      if (!isFocusInside)\n        handleResume()\n    }\n\n    // We programmatically manage tabbing as we are unable to influence\n    // the source order with portals, this allows us to reverse the\n    // tab order so that it runs from most recent toast to least\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n      const isTabKey = event.key === 'Tab' && !isMetaKey\n\n      if (isTabKey) {\n        const focusedElement = getActiveElement()\n        const isTabbingBackwards = event.shiftKey\n        const targetIsViewport = event.target === viewport\n\n        // If we're back tabbing after jumping to the viewport then we simply\n        // proxy focus out to the preceding document\n        if (targetIsViewport && isTabbingBackwards) {\n          headFocusProxyRef.value?.focus()\n          return\n        }\n\n        const tabbingDirection = isTabbingBackwards ? 'backwards' : 'forwards'\n        const sortedCandidates = getSortedTabbableCandidates({ tabbingDirection })\n        const index = sortedCandidates.findIndex(candidate => candidate === focusedElement)\n        if (focusFirst(sortedCandidates.slice(index + 1))) {\n          event.preventDefault()\n        }\n        else {\n          // If we can't focus that means we're at the edges so we\n          // proxy to the corresponding exit point and let the browser handle\n          // tab/shift+tab keypress and implicitly pass focus to the next valid element in the document\n          isTabbingBackwards\n            ? headFocusProxyRef.value?.focus()\n            : tailFocusProxyRef.value?.focus()\n        }\n      }\n    }\n\n    viewport.addEventListener('focusin', handlePause)\n    viewport.addEventListener('focusout', handleFocusOutResume)\n    viewport.addEventListener('pointermove', handlePause)\n    viewport.addEventListener('pointerleave', handlePointerLeaveResume)\n    viewport.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('blur', handlePause)\n    window.addEventListener('focus', handleResume)\n\n    cleanupFn(() => {\n      viewport.removeEventListener('focusin', handlePause)\n      viewport.removeEventListener('focusout', handleFocusOutResume)\n      viewport.removeEventListener('pointermove', handlePause)\n      viewport.removeEventListener('pointerleave', handlePointerLeaveResume)\n      viewport.removeEventListener('keydown', handleKeyDown)\n      window.removeEventListener('blur', handlePause)\n      window.removeEventListener('focus', handleResume)\n    })\n  }\n})\n\nfunction getSortedTabbableCandidates({ tabbingDirection }: { tabbingDirection: 'forwards' | 'backwards' }) {\n  const toastItems = getItems().map(i => i.ref)\n  const tabbableCandidates = toastItems.map((toastNode) => {\n    const toastTabbableCandidates = [toastNode, ...getTabbableCandidates(toastNode)]\n    return tabbingDirection === 'forwards'\n      ? toastTabbableCandidates\n      : toastTabbableCandidates.reverse()\n  })\n  return (\n    tabbingDirection === 'forwards' ? tabbableCandidates.reverse() : tabbableCandidates\n  ).flat()\n}\n</script>\n\n<template>\n  <DismissableLayerBranch\n    role=\"region\"\n    :aria-label=\"typeof label === 'string' ? label.replace('{hotkey}', hotkeyMessage) : label(hotkeyMessage)\"\n    tabindex=\"-1\"\n    :style=\"{\n      // incase list has size when empty (e.g. padding), we remove pointer events so\n      // it doesn't prevent interactions with page elements that it overlays\n      pointerEvents: hasToasts ? undefined : 'none',\n    }\"\n  >\n    <FocusProxy\n      v-if=\"hasToasts\"\n      :ref=\"(node: ComponentPublicInstance) => {\n        headFocusProxyRef = unrefElement(node) as HTMLElement\n        return undefined\n      }\"\n      @focus-from-outside-viewport=\"() => {\n        const tabbableCandidates = getSortedTabbableCandidates({\n          tabbingDirection: 'forwards',\n        })\n        focusFirst(tabbableCandidates)\n      }\"\n    />\n    <CollectionSlot>\n      <Primitive\n        :ref=\"forwardRef\"\n        tabindex=\"-1\"\n        :as=\"as\"\n        :as-child=\"asChild\"\n        v-bind=\"$attrs\"\n      >\n        <slot />\n      </Primitive>\n    </CollectionSlot>\n    <FocusProxy\n      v-if=\"hasToasts\"\n      :ref=\"(node: ComponentPublicInstance) => {\n        tailFocusProxyRef = unrefElement(node) as HTMLElement\n        return undefined\n      }\"\n      @focus-from-outside-viewport=\"() => {\n        const tabbableCandidates = getSortedTabbableCandidates({\n          tabbingDirection: 'backwards',\n        })\n        focusFirst(tabbableCandidates)\n      }\"\n    />\n  </DismissableLayerBranch>\n</template>\n", "<script lang=\"ts\">\nimport type { ComponentPublicInstance } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useCollection } from '@/Collection'\nimport { getActiveElement, useForwardExpose } from '@/shared'\n\nexport interface ToastViewportProps extends PrimitiveProps {\n  /**\n   * The keys to use as the keyboard shortcut that will move focus to the toast viewport.\n   * @defaultValue ['F8']\n   */\n  hotkey?: string[]\n  /**\n   * An author-localized label for the toast viewport to provide context for screen reader users\n   * when navigating page landmarks. The available `{hotkey}` placeholder will be replaced for you.\n   * Alternatively, you can pass in a custom function to generate the label.\n   * @defaultValue 'Notifications ({hotkey})'\n   */\n  label?: string | ((hotkey: string) => string)\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { onKeyStroke, unrefElement } from '@vueuse/core'\nimport { computed, onMounted, ref, toRefs, watchEffect } from 'vue'\nimport { DismissableLayerBranch } from '@/DismissableLayer'\nimport { focusFirst, getTabbableCandidates } from '@/FocusScope/utils'\nimport { Primitive } from '@/Primitive'\nimport FocusProxy from './FocusProxy.vue'\nimport { injectToastProviderContext } from './ToastProvider.vue'\nimport { VIEWPORT_PAUSE, VIEWPORT_RESUME } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<ToastViewportProps>(), {\n  hotkey: () => ['F8'], // from VIEWPORT_DEFAULT_HOTKEY\n  label: 'Notifications ({hotkey})',\n  as: 'ol',\n})\nconst { hotkey, label } = toRefs(props)\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst { CollectionSlot, getItems } = useCollection()\nconst providerContext = injectToastProviderContext()\nconst hasToasts = computed(() => providerContext.toastCount.value > 0)\nconst headFocusProxyRef = ref<HTMLElement>()\nconst tailFocusProxyRef = ref<HTMLElement>()\n\nconst hotkeyMessage = computed(() => hotkey.value.join('+').replace(/Key/g, '').replace(/Digit/g, ''))\n\nonKeyStroke(hotkey.value, () => {\n  currentElement.value.focus()\n})\n\nonMounted(() => {\n  providerContext.onViewportChange(currentElement.value)\n})\n\nwatchEffect((cleanupFn) => {\n  const viewport = currentElement.value\n  if (hasToasts.value && viewport) {\n    const handlePause = () => {\n      if (!providerContext.isClosePausedRef.value) {\n        const pauseEvent = new CustomEvent(VIEWPORT_PAUSE)\n        viewport.dispatchEvent(pauseEvent)\n        providerContext.isClosePausedRef.value = true\n      }\n    }\n\n    const handleResume = () => {\n      if (providerContext.isClosePausedRef.value) {\n        const resumeEvent = new CustomEvent(VIEWPORT_RESUME)\n        viewport.dispatchEvent(resumeEvent)\n        providerContext.isClosePausedRef.value = false\n      }\n    }\n\n    const handleFocusOutResume = (event: FocusEvent) => {\n      const isFocusMovingOutside = !viewport.contains(event.relatedTarget as HTMLElement)\n      if (isFocusMovingOutside)\n        handleResume()\n    }\n\n    const handlePointerLeaveResume = () => {\n      const isFocusInside = viewport.contains(getActiveElement())\n      if (!isFocusInside)\n        handleResume()\n    }\n\n    // We programmatically manage tabbing as we are unable to influence\n    // the source order with portals, this allows us to reverse the\n    // tab order so that it runs from most recent toast to least\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n      const isTabKey = event.key === 'Tab' && !isMetaKey\n\n      if (isTabKey) {\n        const focusedElement = getActiveElement()\n        const isTabbingBackwards = event.shiftKey\n        const targetIsViewport = event.target === viewport\n\n        // If we're back tabbing after jumping to the viewport then we simply\n        // proxy focus out to the preceding document\n        if (targetIsViewport && isTabbingBackwards) {\n          headFocusProxyRef.value?.focus()\n          return\n        }\n\n        const tabbingDirection = isTabbingBackwards ? 'backwards' : 'forwards'\n        const sortedCandidates = getSortedTabbableCandidates({ tabbingDirection })\n        const index = sortedCandidates.findIndex(candidate => candidate === focusedElement)\n        if (focusFirst(sortedCandidates.slice(index + 1))) {\n          event.preventDefault()\n        }\n        else {\n          // If we can't focus that means we're at the edges so we\n          // proxy to the corresponding exit point and let the browser handle\n          // tab/shift+tab keypress and implicitly pass focus to the next valid element in the document\n          isTabbingBackwards\n            ? headFocusProxyRef.value?.focus()\n            : tailFocusProxyRef.value?.focus()\n        }\n      }\n    }\n\n    viewport.addEventListener('focusin', handlePause)\n    viewport.addEventListener('focusout', handleFocusOutResume)\n    viewport.addEventListener('pointermove', handlePause)\n    viewport.addEventListener('pointerleave', handlePointerLeaveResume)\n    viewport.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('blur', handlePause)\n    window.addEventListener('focus', handleResume)\n\n    cleanupFn(() => {\n      viewport.removeEventListener('focusin', handlePause)\n      viewport.removeEventListener('focusout', handleFocusOutResume)\n      viewport.removeEventListener('pointermove', handlePause)\n      viewport.removeEventListener('pointerleave', handlePointerLeaveResume)\n      viewport.removeEventListener('keydown', handleKeyDown)\n      window.removeEventListener('blur', handlePause)\n      window.removeEventListener('focus', handleResume)\n    })\n  }\n})\n\nfunction getSortedTabbableCandidates({ tabbingDirection }: { tabbingDirection: 'forwards' | 'backwards' }) {\n  const toastItems = getItems().map(i => i.ref)\n  const tabbableCandidates = toastItems.map((toastNode) => {\n    const toastTabbableCandidates = [toastNode, ...getTabbableCandidates(toastNode)]\n    return tabbingDirection === 'forwards'\n      ? toastTabbableCandidates\n      : toastTabbableCandidates.reverse()\n  })\n  return (\n    tabbingDirection === 'forwards' ? tabbableCandidates.reverse() : tabbableCandidates\n  ).flat()\n}\n</script>\n\n<template>\n  <DismissableLayerBranch\n    role=\"region\"\n    :aria-label=\"typeof label === 'string' ? label.replace('{hotkey}', hotkeyMessage) : label(hotkeyMessage)\"\n    tabindex=\"-1\"\n    :style=\"{\n      // incase list has size when empty (e.g. padding), we remove pointer events so\n      // it doesn't prevent interactions with page elements that it overlays\n      pointerEvents: hasToasts ? undefined : 'none',\n    }\"\n  >\n    <FocusProxy\n      v-if=\"hasToasts\"\n      :ref=\"(node: ComponentPublicInstance) => {\n        headFocusProxyRef = unrefElement(node) as HTMLElement\n        return undefined\n      }\"\n      @focus-from-outside-viewport=\"() => {\n        const tabbableCandidates = getSortedTabbableCandidates({\n          tabbingDirection: 'forwards',\n        })\n        focusFirst(tabbableCandidates)\n      }\"\n    />\n    <CollectionSlot>\n      <Primitive\n        :ref=\"forwardRef\"\n        tabindex=\"-1\"\n        :as=\"as\"\n        :as-child=\"asChild\"\n        v-bind=\"$attrs\"\n      >\n        <slot />\n      </Primitive>\n    </CollectionSlot>\n    <FocusProxy\n      v-if=\"hasToasts\"\n      :ref=\"(node: ComponentPublicInstance) => {\n        tailFocusProxyRef = unrefElement(node) as HTMLElement\n        return undefined\n      }\"\n      @focus-from-outside-viewport=\"() => {\n        const tabbableCandidates = getSortedTabbableCandidates({\n          tabbingDirection: 'backwards',\n        })\n        focusFirst(tabbableCandidates)\n      }\"\n    />\n  </DismissableLayerBranch>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { AcceptableValue, DataOrientation, Direction, FormFieldProps, SingleOrMultipleProps } from '../shared/types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useDirection, useFormControl, useForwardExpose } from '@/shared'\nimport VisuallyHiddenInput from '@/VisuallyHidden/VisuallyHiddenInput.vue'\n\nexport interface ToggleGroupRootProps<T = AcceptableValue | AcceptableValue[]>\n  extends PrimitiveProps, FormFieldProps, SingleOrMultipleProps<T> {\n  /** When `false`, navigating through the items using arrow keys will be disabled. */\n  rovingFocus?: boolean\n  /** When `true`, prevents the user from interacting with the toggle group and all its items. */\n  disabled?: boolean\n  /** The orientation of the component, which determines how focus moves: `horizontal` for left/right arrows and `vertical` for up/down arrows. */\n  orientation?: DataOrientation\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `loop` and `rovingFocus` is `true`, keyboard navigation will loop from last item to first, and vice versa. */\n  loop?: boolean\n}\nexport type ToggleGroupRootEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [payload: AcceptableValue | AcceptableValue[]]\n}\n\ninterface ToggleGroupRootContext {\n  isSingle: ComputedRef<boolean>\n  modelValue: Ref<AcceptableValue | AcceptableValue[] | undefined>\n  changeModelValue: (value: AcceptableValue) => void\n  dir?: Ref<Direction>\n  orientation?: DataOrientation\n  loop: Ref<boolean>\n  rovingFocus: Ref<boolean>\n  disabled?: Ref<boolean>\n}\n\nexport const [injectToggleGroupRootContext, provideToggleGroupRootContext]\n  = createContext<ToggleGroupRootContext>('ToggleGroupRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { useSingleOrMultipleValue } from '@/shared/useSingleOrMultipleValue'\n\nconst props = withDefaults(defineProps<ToggleGroupRootProps>(), {\n  loop: true,\n  rovingFocus: true,\n  disabled: false,\n})\nconst emits = defineEmits<ToggleGroupRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current toggle values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { loop, rovingFocus, disabled, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst { modelValue, changeModelValue, isSingle } = useSingleOrMultipleValue(props, emits)\nconst isFormControl = useFormControl(currentElement)\n\nprovideToggleGroupRootContext({\n  isSingle,\n  modelValue,\n  changeModelValue,\n  dir,\n  orientation: props.orientation,\n  loop,\n  rovingFocus,\n  disabled,\n})\n</script>\n\n<template>\n  <component\n    :is=\"rovingFocus ? RovingFocusGroup : Primitive\"\n    as-child\n    :orientation=\"rovingFocus ? orientation : undefined\"\n    :dir=\"dir\"\n    :loop=\"rovingFocus ? loop : undefined\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"group\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n    >\n      <slot :model-value=\"modelValue\" />\n\n      <VisuallyHiddenInput\n        v-if=\"isFormControl && name\"\n        :name=\"name\"\n        :required=\"required\"\n        :value=\"modelValue\"\n      />\n    </Primitive>\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { ComputedRef, Ref } from 'vue'\nimport type { AcceptableValue, DataOrientation, Direction, FormFieldProps, SingleOrMultipleProps } from '../shared/types'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createContext, useDirection, useFormControl, useForwardExpose } from '@/shared'\nimport VisuallyHiddenInput from '@/VisuallyHidden/VisuallyHiddenInput.vue'\n\nexport interface ToggleGroupRootProps<T = AcceptableValue | AcceptableValue[]>\n  extends PrimitiveProps, FormFieldProps, SingleOrMultipleProps<T> {\n  /** When `false`, navigating through the items using arrow keys will be disabled. */\n  rovingFocus?: boolean\n  /** When `true`, prevents the user from interacting with the toggle group and all its items. */\n  disabled?: boolean\n  /** The orientation of the component, which determines how focus moves: `horizontal` for left/right arrows and `vertical` for up/down arrows. */\n  orientation?: DataOrientation\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `loop` and `rovingFocus` is `true`, keyboard navigation will loop from last item to first, and vice versa. */\n  loop?: boolean\n}\nexport type ToggleGroupRootEmits = {\n  /** Event handler called when the value changes. */\n  'update:modelValue': [payload: AcceptableValue | AcceptableValue[]]\n}\n\ninterface ToggleGroupRootContext {\n  isSingle: ComputedRef<boolean>\n  modelValue: Ref<AcceptableValue | AcceptableValue[] | undefined>\n  changeModelValue: (value: AcceptableValue) => void\n  dir?: Ref<Direction>\n  orientation?: DataOrientation\n  loop: Ref<boolean>\n  rovingFocus: Ref<boolean>\n  disabled?: Ref<boolean>\n}\n\nexport const [injectToggleGroupRootContext, provideToggleGroupRootContext]\n  = createContext<ToggleGroupRootContext>('ToggleGroupRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { useSingleOrMultipleValue } from '@/shared/useSingleOrMultipleValue'\n\nconst props = withDefaults(defineProps<ToggleGroupRootProps>(), {\n  loop: true,\n  rovingFocus: true,\n  disabled: false,\n})\nconst emits = defineEmits<ToggleGroupRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current toggle values */\n    modelValue: typeof modelValue.value\n  }) => any\n}>()\n\nconst { loop, rovingFocus, disabled, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst { modelValue, changeModelValue, isSingle } = useSingleOrMultipleValue(props, emits)\nconst isFormControl = useFormControl(currentElement)\n\nprovideToggleGroupRootContext({\n  isSingle,\n  modelValue,\n  changeModelValue,\n  dir,\n  orientation: props.orientation,\n  loop,\n  rovingFocus,\n  disabled,\n})\n</script>\n\n<template>\n  <component\n    :is=\"rovingFocus ? RovingFocusGroup : Primitive\"\n    as-child\n    :orientation=\"rovingFocus ? orientation : undefined\"\n    :dir=\"dir\"\n    :loop=\"rovingFocus ? loop : undefined\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"group\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n    >\n      <slot :model-value=\"modelValue\" />\n\n      <VisuallyHiddenInput\n        v-if=\"isFormControl && name\"\n        :name=\"name\"\n        :required=\"required\"\n        :value=\"modelValue\"\n      />\n    </Primitive>\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { FormFieldProps } from '@/shared/types'\nimport { useFormControl, useForwardExpose } from '@/shared'\nimport { injectToggleGroupRootContext } from '@/ToggleGroup/ToggleGroupRoot.vue'\nimport VisuallyHiddenInput from '@/VisuallyHidden/VisuallyHiddenInput.vue'\n\nexport type ToggleEmits = {\n  /** Event handler called when the value of the toggle changes. */\n  'update:modelValue': [value: boolean]\n}\n\nexport type DataState = 'on' | 'off'\n\nexport interface ToggleProps extends PrimitiveProps, FormFieldProps {\n  /**\n   * The pressed state of the toggle when it is initially rendered. Use when you do not need to control its open state.\n   */\n  defaultValue?: boolean\n  /**\n   * The controlled pressed state of the toggle. Can be bind as `v-model`.\n   */\n  modelValue?: boolean | null\n  /**\n   * When `true`, prevents the user from interacting with the toggle.\n   */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<ToggleProps>(), {\n  modelValue: undefined,\n  disabled: false,\n  as: 'button',\n})\n\nconst emits = defineEmits<ToggleEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current value */\n    modelValue: typeof modelValue.value\n    /** Current state */\n    state: typeof dataState.value\n    /** Current pressed state */\n    pressed: typeof modelValue.value\n    /** Current disabled state */\n    disabled: boolean\n  }) => any\n}>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst toggleGroupContext = injectToggleGroupRootContext(null)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<boolean>\n\nfunction togglePressed() {\n  modelValue.value = !modelValue.value\n}\n\nconst dataState = computed<DataState>(() => {\n  return modelValue.value ? 'on' : 'off'\n})\n\nconst isFormControl = useFormControl(currentElement)\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n    :aria-pressed=\"modelValue\"\n    :data-state=\"dataState\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :disabled=\"disabled\"\n    @click=\"togglePressed\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :disabled=\"disabled\"\n      :pressed=\"modelValue\"\n      :state=\"dataState\"\n    />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name && !toggleGroupContext\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :value=\"modelValue\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { FormFieldProps } from '@/shared/types'\nimport { useFormControl, useForwardExpose } from '@/shared'\nimport { injectToggleGroupRootContext } from '@/ToggleGroup/ToggleGroupRoot.vue'\nimport VisuallyHiddenInput from '@/VisuallyHidden/VisuallyHiddenInput.vue'\n\nexport type ToggleEmits = {\n  /** Event handler called when the value of the toggle changes. */\n  'update:modelValue': [value: boolean]\n}\n\nexport type DataState = 'on' | 'off'\n\nexport interface ToggleProps extends PrimitiveProps, FormFieldProps {\n  /**\n   * The pressed state of the toggle when it is initially rendered. Use when you do not need to control its open state.\n   */\n  defaultValue?: boolean\n  /**\n   * The controlled pressed state of the toggle. Can be bind as `v-model`.\n   */\n  modelValue?: boolean | null\n  /**\n   * When `true`, prevents the user from interacting with the toggle.\n   */\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\n\nconst props = withDefaults(defineProps<ToggleProps>(), {\n  modelValue: undefined,\n  disabled: false,\n  as: 'button',\n})\n\nconst emits = defineEmits<ToggleEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current value */\n    modelValue: typeof modelValue.value\n    /** Current state */\n    state: typeof dataState.value\n    /** Current pressed state */\n    pressed: typeof modelValue.value\n    /** Current disabled state */\n    disabled: boolean\n  }) => any\n}>()\n\nconst { forwardRef, currentElement } = useForwardExpose()\nconst toggleGroupContext = injectToggleGroupRootContext(null)\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  defaultValue: props.defaultValue,\n  passive: (props.modelValue === undefined) as false,\n}) as Ref<boolean>\n\nfunction togglePressed() {\n  modelValue.value = !modelValue.value\n}\n\nconst dataState = computed<DataState>(() => {\n  return modelValue.value ? 'on' : 'off'\n})\n\nconst isFormControl = useFormControl(currentElement)\n</script>\n\n<template>\n  <Primitive\n    :ref=\"forwardRef\"\n    :type=\"as === 'button' ? 'button' : undefined\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n    :aria-pressed=\"modelValue\"\n    :data-state=\"dataState\"\n    :data-disabled=\"disabled ? '' : undefined\"\n    :disabled=\"disabled\"\n    @click=\"togglePressed\"\n  >\n    <slot\n      :model-value=\"modelValue\"\n      :disabled=\"disabled\"\n      :pressed=\"modelValue\"\n      :state=\"dataState\"\n    />\n\n    <VisuallyHiddenInput\n      v-if=\"isFormControl && name && !toggleGroupContext\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :value=\"modelValue\"\n      :required=\"required\"\n    />\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { AcceptableValue } from '@/shared/types'\nimport type { ToggleProps } from '@/Toggle'\nimport { isValueEqualOrExist, useForwardExpose } from '@/shared'\n\nexport interface ToggleGroupItemProps extends Omit<ToggleProps, 'name' | 'required' | 'modelValue' | 'defaultValue'> {\n  /**\n   * A string value for the toggle group item. All items within a toggle group should use a unique value.\n   */\n  value: AcceptableValue\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { Toggle } from '@/Toggle'\nimport { injectToggleGroupRootContext } from './ToggleGroupRoot.vue'\n\nconst props = withDefaults(defineProps<ToggleGroupItemProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectToggleGroupRootContext()\nconst disabled = computed(() => rootContext.disabled?.value || props.disabled)\nconst pressed = computed(() => isValueEqualOrExist(rootContext.modelValue.value, props.value))\n\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <component\n    :is=\"rootContext.rovingFocus.value ? RovingFocusItem : Primitive\"\n    as-child\n    v-bind=\"rootContext.rovingFocus.value ? { focusable: !disabled, active: pressed } : {}\"\n  >\n    <Toggle\n      v-bind=\"props\"\n      :ref=\"forwardRef\"\n      v-slot=\"slotProps\"\n      :disabled=\"disabled\"\n      :model-value=\"pressed\"\n      @update:model-value=\"rootContext.changeModelValue(value)\"\n    >\n      <slot v-bind=\"slotProps\" />\n    </Toggle>\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { AcceptableValue } from '@/shared/types'\nimport type { ToggleProps } from '@/Toggle'\nimport { isValueEqualOrExist, useForwardExpose } from '@/shared'\n\nexport interface ToggleGroupItemProps extends Omit<ToggleProps, 'name' | 'required' | 'modelValue' | 'defaultValue'> {\n  /**\n   * A string value for the toggle group item. All items within a toggle group should use a unique value.\n   */\n  value: AcceptableValue\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { Toggle } from '@/Toggle'\nimport { injectToggleGroupRootContext } from './ToggleGroupRoot.vue'\n\nconst props = withDefaults(defineProps<ToggleGroupItemProps>(), {\n  as: 'button',\n})\n\nconst rootContext = injectToggleGroupRootContext()\nconst disabled = computed(() => rootContext.disabled?.value || props.disabled)\nconst pressed = computed(() => isValueEqualOrExist(rootContext.modelValue.value, props.value))\n\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <component\n    :is=\"rootContext.rovingFocus.value ? RovingFocusItem : Primitive\"\n    as-child\n    v-bind=\"rootContext.rovingFocus.value ? { focusable: !disabled, active: pressed } : {}\"\n  >\n    <Toggle\n      v-bind=\"props\"\n      :ref=\"forwardRef\"\n      v-slot=\"slotProps\"\n      :disabled=\"disabled\"\n      :model-value=\"pressed\"\n      @update:model-value=\"rootContext.changeModelValue(value)\"\n    >\n      <slot v-bind=\"slotProps\" />\n    </Toggle>\n  </component>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToolbarButtonProps extends PrimitiveProps {\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\n\nconst props = withDefaults(defineProps<ToolbarButtonProps>(), { as: 'button' })\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    :focusable=\"!disabled\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      v-bind=\"props\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToolbarButtonProps extends PrimitiveProps {\n  disabled?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\n\nconst props = withDefaults(defineProps<ToolbarButtonProps>(), { as: 'button' })\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    :focusable=\"!disabled\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :type=\"as === 'button' ? 'button' : undefined\"\n      v-bind=\"props\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToolbarLinkProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\n\nconst props = withDefaults(defineProps<ToolbarLinkProps>(), { as: 'a' })\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    focusable\n  >\n    <Primitive\n      v-bind=\"props\"\n      :ref=\"forwardRef\"\n      @keydown=\"(event: KeyboardEvent) => {\n        if (event.key === ' ') (event.currentTarget as HTMLElement)?.click()\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToolbarLinkProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\n\nconst props = withDefaults(defineProps<ToolbarLinkProps>(), { as: 'a' })\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    focusable\n  >\n    <Primitive\n      v-bind=\"props\"\n      :ref=\"forwardRef\"\n      @keydown=\"(event: KeyboardEvent) => {\n        if (event.key === ' ') (event.currentTarget as HTMLElement)?.click()\n      }\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { DataOrientation, Direction } from '@/shared/types'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface ToolbarRootProps extends PrimitiveProps {\n  /** The orientation of the toolbar */\n  orientation?: DataOrientation\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, keyboard navigation will loop from last tab to first, and vice versa. */\n  loop?: boolean\n}\n\nexport interface ToolbarRootContext {\n  orientation: Ref<DataOrientation>\n  dir: Ref<Direction>\n}\n\nexport const [injectToolbarRootContext, provideToolbarRootContext]\n  = createContext<ToolbarRootContext>('ToolbarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\n\nconst props = withDefaults(defineProps<ToolbarRootProps>(), {\n  orientation: 'horizontal',\n})\nconst { orientation, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst { forwardRef } = useForwardExpose()\n\nprovideToolbarRootContext({ orientation, dir })\n</script>\n\n<template>\n  <RovingFocusGroup\n    as-child\n    :orientation=\"orientation\"\n    :dir=\"dir\"\n    :loop=\"loop\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"toolbar\"\n      :aria-orientation=\"orientation\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport type { DataOrientation, Direction } from '@/shared/types'\nimport { createContext, useDirection, useForwardExpose } from '@/shared'\n\nexport interface ToolbarRootProps extends PrimitiveProps {\n  /** The orientation of the toolbar */\n  orientation?: DataOrientation\n  /** The reading direction of the combobox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, keyboard navigation will loop from last tab to first, and vice versa. */\n  loop?: boolean\n}\n\nexport interface ToolbarRootContext {\n  orientation: Ref<DataOrientation>\n  dir: Ref<Direction>\n}\n\nexport const [injectToolbarRootContext, provideToolbarRootContext]\n  = createContext<ToolbarRootContext>('ToolbarRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\n\nconst props = withDefaults(defineProps<ToolbarRootProps>(), {\n  orientation: 'horizontal',\n})\nconst { orientation, dir: propDir } = toRefs(props)\nconst dir = useDirection(propDir)\nconst { forwardRef } = useForwardExpose()\n\nprovideToolbarRootContext({ orientation, dir })\n</script>\n\n<template>\n  <RovingFocusGroup\n    as-child\n    :orientation=\"orientation\"\n    :dir=\"dir\"\n    :loop=\"loop\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      role=\"toolbar\"\n      :aria-orientation=\"orientation\"\n      :as-child=\"asChild\"\n      :as=\"as\"\n    >\n      <slot />\n    </Primitive>\n  </RovingFocusGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ToolbarSeparatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { useForwardExpose } from '@/shared'\nimport BaseSeparator from '../shared/component/BaseSeparator.vue'\nimport { injectToolbarRootContext } from './ToolbarRoot.vue'\n\nconst props = defineProps<ToolbarSeparatorProps>()\n\nconst rootContext = injectToolbarRootContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <BaseSeparator\n    :orientation=\"rootContext.orientation.value\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n  >\n    <slot />\n  </BaseSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\n\nexport interface ToolbarSeparatorProps extends PrimitiveProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { useForwardExpose } from '@/shared'\nimport BaseSeparator from '../shared/component/BaseSeparator.vue'\nimport { injectToolbarRootContext } from './ToolbarRoot.vue'\n\nconst props = defineProps<ToolbarSeparatorProps>()\n\nconst rootContext = injectToolbarRootContext()\nuseForwardExpose()\n</script>\n\n<template>\n  <BaseSeparator\n    :orientation=\"rootContext.orientation.value\"\n    :as-child=\"props.asChild\"\n    :as=\"as\"\n  >\n    <slot />\n  </BaseSeparator>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  ToggleGroupRootEmits,\n  ToggleGroupRootProps,\n} from '@/ToggleGroup'\n\nexport type ToolbarToggleGroupEmits = ToggleGroupRootEmits\n\nexport interface ToolbarToggleGroupProps extends ToggleGroupRootProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\nimport { ToggleGroupRoot } from '@/ToggleGroup'\nimport { injectToolbarRootContext } from './ToolbarRoot.vue'\n\nconst props = defineProps<ToolbarToggleGroupProps>()\nconst emits = defineEmits<ToolbarToggleGroupEmits>()\n\nconst rootContext = injectToolbarRootContext()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <ToggleGroupRoot\n    v-bind=\"{ ...props, ...emitsAsProps }\"\n    :data-orientation=\"rootContext.orientation.value\"\n    :dir=\"rootContext.dir.value\"\n    :roving-focus=\"false\"\n  >\n    <slot />\n  </ToggleGroupRoot>\n</template>\n", "<script lang=\"ts\">\nimport type {\n  ToggleGroupRootEmits,\n  ToggleGroupRootProps,\n} from '@/ToggleGroup'\n\nexport type ToolbarToggleGroupEmits = ToggleGroupRootEmits\n\nexport interface ToolbarToggleGroupProps extends ToggleGroupRootProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { useEmitAsProps, useForwardExpose } from '@/shared'\nimport { ToggleGroupRoot } from '@/ToggleGroup'\nimport { injectToolbarRootContext } from './ToolbarRoot.vue'\n\nconst props = defineProps<ToolbarToggleGroupProps>()\nconst emits = defineEmits<ToolbarToggleGroupEmits>()\n\nconst rootContext = injectToolbarRootContext()\n\nconst emitsAsProps = useEmitAsProps(emits)\nuseForwardExpose()\n</script>\n\n<template>\n  <ToggleGroupRoot\n    v-bind=\"{ ...props, ...emitsAsProps }\"\n    :data-orientation=\"rootContext.orientation.value\"\n    :dir=\"rootContext.dir.value\"\n    :roving-focus=\"false\"\n  >\n    <slot />\n  </ToggleGroupRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { ToggleGroupItemProps } from '@/ToggleGroup'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToolbarToggleItemProps extends ToggleGroupItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ToggleGroupItem } from '@/ToggleGroup'\nimport ToolbarButton from './ToolbarButton.vue'\n\nconst props = defineProps<ToolbarToggleItemProps>()\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <ToolbarButton as-child>\n    <ToggleGroupItem\n      v-bind=\"props\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </ToggleGroupItem>\n  </ToolbarButton>\n</template>\n", "<script lang=\"ts\">\nimport type { ToggleGroupItemProps } from '@/ToggleGroup'\nimport { useForwardExpose } from '@/shared'\n\nexport interface ToolbarToggleItemProps extends ToggleGroupItemProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { ToggleGroupItem } from '@/ToggleGroup'\nimport ToolbarButton from './ToolbarButton.vue'\n\nconst props = defineProps<ToolbarToggleItemProps>()\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <ToolbarButton as-child>\n    <ToggleGroupItem\n      v-bind=\"props\"\n      :ref=\"forwardRef\"\n    >\n      <slot />\n    </ToggleGroupItem>\n  </ToolbarButton>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TooltipArrowProps extends PrimitiveProps {\n  /**\n   * The width of the arrow in pixels.\n   *\n   * @defaultValue 10\n   */\n  width?: number\n\n  /**\n   * The height of the arrow in pixels.\n   *\n   * @defaultValue 5\n   */\n  height?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\n\nconst props = withDefaults(defineProps<TooltipArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <PopperArrow v-bind=\"props\">\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport interface TooltipArrowProps extends PrimitiveProps {\n  /**\n   * The width of the arrow in pixels.\n   *\n   * @defaultValue 10\n   */\n  width?: number\n\n  /**\n   * The height of the arrow in pixels.\n   *\n   * @defaultValue 5\n   */\n  height?: number\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { PopperArrow } from '@/Popper'\n\nconst props = withDefaults(defineProps<TooltipArrowProps>(), {\n  width: 10,\n  height: 5,\n  as: 'svg',\n})\nuseForwardExpose()\n</script>\n\n<template>\n  <PopperArrow v-bind=\"props\">\n    <slot />\n  </PopperArrow>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\n\ninterface TooltipProviderContext {\n  isOpenDelayed: Ref<boolean>\n  delayDuration: Ref<number>\n  onOpen: () => void\n  onClose: () => void\n  isPointerInTransitRef: Ref<boolean>\n  disableHoverableContent: Ref<boolean>\n  disableClosingTrigger: Ref<boolean>\n  disabled: Ref<boolean>\n  ignoreNonKeyboardFocus: Ref<boolean>\n}\n\nexport const [injectTooltipProviderContext, provideTooltipProviderContext]\n  = createContext<TooltipProviderContext>('TooltipProvider')\n\nexport interface TooltipProviderProps {\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 700\n   */\n  delayDuration?: number\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean\n  /**\n   * When `true`, clicking on trigger will not close the content.\n   * @defaultValue false\n   */\n  disableClosingTrigger?: boolean\n  /**\n   * When `true`, disable tooltip\n   * @defaultValue false\n   */\n  disabled?: boolean\n  /**\n   * Prevent the tooltip from opening if the focus did not come from\n   * the keyboard by matching against the `:focus-visible` selector.\n   * This is useful if you want to avoid opening it when switching\n   * browser tabs or closing a dialog.\n   * @defaultValue false\n   */\n  ignoreNonKeyboardFocus?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useTimeoutFn } from '@vueuse/shared'\nimport { ref, toRefs } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<TooltipProviderProps>(), {\n  delayDuration: 700,\n  skipDelayDuration: 300,\n  disableHoverableContent: false,\n  ignoreNonKeyboardFocus: false,\n})\nconst { delayDuration, skipDelayDuration, disableHoverableContent, disableClosingTrigger, ignoreNonKeyboardFocus, disabled } = toRefs(props)\nuseForwardExpose()\n\nconst isOpenDelayed = ref(true)\n// Reset the inTransit state if idle/scrolled.\nconst isPointerInTransitRef = ref(false)\n\nconst { start: startTimer, stop: clearTimer } = useTimeoutFn(() => {\n  isOpenDelayed.value = true\n}, skipDelayDuration, { immediate: false })\n\nprovideTooltipProviderContext({\n  isOpenDelayed,\n  delayDuration,\n  onOpen() {\n    clearTimer()\n    isOpenDelayed.value = false\n  },\n  onClose() {\n    startTimer()\n  },\n  isPointerInTransitRef,\n  disableHoverableContent,\n  disableClosingTrigger,\n  disabled,\n  ignoreNonKeyboardFocus,\n})\n</script>\n\n<template>\n  <slot />\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\n\ninterface TooltipProviderContext {\n  isOpenDelayed: Ref<boolean>\n  delayDuration: Ref<number>\n  onOpen: () => void\n  onClose: () => void\n  isPointerInTransitRef: Ref<boolean>\n  disableHoverableContent: Ref<boolean>\n  disableClosingTrigger: Ref<boolean>\n  disabled: Ref<boolean>\n  ignoreNonKeyboardFocus: Ref<boolean>\n}\n\nexport const [injectTooltipProviderContext, provideTooltipProviderContext]\n  = createContext<TooltipProviderContext>('TooltipProvider')\n\nexport interface TooltipProviderProps {\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 700\n   */\n  delayDuration?: number\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean\n  /**\n   * When `true`, clicking on trigger will not close the content.\n   * @defaultValue false\n   */\n  disableClosingTrigger?: boolean\n  /**\n   * When `true`, disable tooltip\n   * @defaultValue false\n   */\n  disabled?: boolean\n  /**\n   * Prevent the tooltip from opening if the focus did not come from\n   * the keyboard by matching against the `:focus-visible` selector.\n   * This is useful if you want to avoid opening it when switching\n   * browser tabs or closing a dialog.\n   * @defaultValue false\n   */\n  ignoreNonKeyboardFocus?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useTimeoutFn } from '@vueuse/shared'\nimport { ref, toRefs } from 'vue'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<TooltipProviderProps>(), {\n  delayDuration: 700,\n  skipDelayDuration: 300,\n  disableHoverableContent: false,\n  ignoreNonKeyboardFocus: false,\n})\nconst { delayDuration, skipDelayDuration, disableHoverableContent, disableClosingTrigger, ignoreNonKeyboardFocus, disabled } = toRefs(props)\nuseForwardExpose()\n\nconst isOpenDelayed = ref(true)\n// Reset the inTransit state if idle/scrolled.\nconst isPointerInTransitRef = ref(false)\n\nconst { start: startTimer, stop: clearTimer } = useTimeoutFn(() => {\n  isOpenDelayed.value = true\n}, skipDelayDuration, { immediate: false })\n\nprovideTooltipProviderContext({\n  isOpenDelayed,\n  delayDuration,\n  onOpen() {\n    clearTimer()\n    isOpenDelayed.value = false\n  },\n  onClose() {\n    startTimer()\n  },\n  isPointerInTransitRef,\n  disableHoverableContent,\n  disableClosingTrigger,\n  disabled,\n  ignoreNonKeyboardFocus,\n})\n</script>\n\n<template>\n  <slot />\n</template>\n", "export const TOOLTIP_OPEN = 'tooltip.open'\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface TooltipRootProps {\n  /**\n   * The open state of the tooltip when it is initially rendered.\n   * Use when you do not need to control its open state.\n   */\n  defaultOpen?: boolean\n  /**\n   * The controlled open state of the tooltip.\n   */\n  open?: boolean\n  /**\n   * Override the duration given to the `Provider` to customise\n   * the open delay for a specific tooltip.\n   *\n   * @defaultValue 700\n   */\n  delayDuration?: number\n  /**\n   * Prevents Tooltip.Content from remaining open when hovering.\n   * Disabling this has accessibility consequences. Inherits\n   * from Tooltip.Provider.\n   */\n  disableHoverableContent?: boolean\n  /**\n   * When `true`, clicking on trigger will not close the content.\n   * @defaultValue false\n   */\n  disableClosingTrigger?: boolean\n  /**\n   * When `true`, disable tooltip\n   * @defaultValue false\n   */\n  disabled?: boolean\n  /**\n   * Prevent the tooltip from opening if the focus did not come from\n   * the keyboard by matching against the `:focus-visible` selector.\n   * This is useful if you want to avoid opening it when switching\n   * browser tabs or closing a dialog.\n   * @defaultValue false\n   */\n  ignoreNonKeyboardFocus?: boolean\n}\n\nexport type TooltipRootEmits = {\n  /** Event handler called when the open state of the tooltip changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface TooltipContext {\n  contentId: string\n  open: Ref<boolean>\n  stateAttribute: Ref<'closed' | 'delayed-open' | 'instant-open'>\n  trigger: Ref<HTMLElement | undefined>\n  onTriggerChange: (trigger: HTMLElement | undefined) => void\n  onTriggerEnter: () => void\n  onTriggerLeave: () => void\n  onOpen: () => void\n  onClose: () => void\n  disableHoverableContent: Ref<boolean>\n  disableClosingTrigger: Ref<boolean>\n  disabled: Ref<boolean>\n  ignoreNonKeyboardFocus: Ref<boolean>\n}\n\nexport const [injectTooltipRootContext, provideTooltipRootContext]\n  = createContext<TooltipContext>('TooltipRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useTimeoutFn, useVModel } from '@vueuse/core'\nimport { computed, ref, watch } from 'vue'\nimport { PopperRoot } from '@/Popper'\nimport { injectTooltipProviderContext } from './TooltipProvider.vue'\nimport { TOOLTIP_OPEN } from './utils'\n\nconst props = withDefaults(defineProps<TooltipRootProps>(), {\n  defaultOpen: false,\n  open: undefined,\n  delayDuration: undefined,\n  disableHoverableContent: undefined,\n  disableClosingTrigger: undefined,\n  disabled: undefined,\n  ignoreNonKeyboardFocus: undefined,\n})\n\nconst emit = defineEmits<TooltipRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst providerContext = injectTooltipProviderContext()\n\nconst disableHoverableContent = computed(() => props.disableHoverableContent ?? providerContext.disableHoverableContent.value)\nconst disableClosingTrigger = computed(() => props.disableClosingTrigger ?? providerContext.disableClosingTrigger.value)\nconst disableTooltip = computed(() => props.disabled ?? providerContext.disabled.value)\n\nconst delayDuration = computed(() => props.delayDuration ?? providerContext.delayDuration.value)\nconst ignoreNonKeyboardFocus = computed(() => props.ignoreNonKeyboardFocus ?? providerContext.ignoreNonKeyboardFocus.value)\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nwatch(open, (isOpen) => {\n  if (!providerContext.onClose)\n    return\n  if (isOpen) {\n    providerContext.onOpen()\n    // as `onChange` is called within a lifecycle method we\n    // avoid dispatching via `dispatchDiscreteCustomEvent`.\n    document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN))\n  }\n  else {\n    providerContext.onClose()\n  }\n})\n\nconst wasOpenDelayedRef = ref(false)\nconst trigger = ref<HTMLElement>()\n\nconst stateAttribute = computed(() => {\n  if (!open.value)\n    return 'closed'\n  return wasOpenDelayedRef.value ? 'delayed-open' : 'instant-open'\n})\n\nconst { start: startTimer, stop: clearTimer } = useTimeoutFn(() => {\n  wasOpenDelayedRef.value = true\n  open.value = true\n}, delayDuration, { immediate: false })\n\nfunction handleOpen() {\n  clearTimer()\n  wasOpenDelayedRef.value = false\n  open.value = true\n}\nfunction handleClose() {\n  clearTimer()\n  open.value = false\n}\nfunction handleDelayedOpen() {\n  startTimer()\n}\n\nprovideTooltipRootContext({\n  contentId: '',\n  open,\n  stateAttribute,\n  trigger,\n  onTriggerChange(el) {\n    trigger.value = el\n  },\n  onTriggerEnter() {\n    if (providerContext.isOpenDelayed.value)\n      handleDelayedOpen()\n    else handleOpen()\n  },\n  onTriggerLeave() {\n    if (disableHoverableContent.value) {\n      handleClose()\n    }\n    else {\n      // Clear the timer in case the pointer leaves the trigger before the tooltip is opened.\n      clearTimer()\n    }\n  },\n  onOpen: handleOpen,\n  onClose: handleClose,\n  disableHoverableContent,\n  disableClosingTrigger,\n  disabled: disableTooltip,\n  ignoreNonKeyboardFocus,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot :open=\"open\" />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { Ref } from 'vue'\nimport { createContext, useForwardExpose } from '@/shared'\n\nexport interface TooltipRootProps {\n  /**\n   * The open state of the tooltip when it is initially rendered.\n   * Use when you do not need to control its open state.\n   */\n  defaultOpen?: boolean\n  /**\n   * The controlled open state of the tooltip.\n   */\n  open?: boolean\n  /**\n   * Override the duration given to the `Provider` to customise\n   * the open delay for a specific tooltip.\n   *\n   * @defaultValue 700\n   */\n  delayDuration?: number\n  /**\n   * Prevents Tooltip.Content from remaining open when hovering.\n   * Disabling this has accessibility consequences. Inherits\n   * from Tooltip.Provider.\n   */\n  disableHoverableContent?: boolean\n  /**\n   * When `true`, clicking on trigger will not close the content.\n   * @defaultValue false\n   */\n  disableClosingTrigger?: boolean\n  /**\n   * When `true`, disable tooltip\n   * @defaultValue false\n   */\n  disabled?: boolean\n  /**\n   * Prevent the tooltip from opening if the focus did not come from\n   * the keyboard by matching against the `:focus-visible` selector.\n   * This is useful if you want to avoid opening it when switching\n   * browser tabs or closing a dialog.\n   * @defaultValue false\n   */\n  ignoreNonKeyboardFocus?: boolean\n}\n\nexport type TooltipRootEmits = {\n  /** Event handler called when the open state of the tooltip changes. */\n  'update:open': [value: boolean]\n}\n\nexport interface TooltipContext {\n  contentId: string\n  open: Ref<boolean>\n  stateAttribute: Ref<'closed' | 'delayed-open' | 'instant-open'>\n  trigger: Ref<HTMLElement | undefined>\n  onTriggerChange: (trigger: HTMLElement | undefined) => void\n  onTriggerEnter: () => void\n  onTriggerLeave: () => void\n  onOpen: () => void\n  onClose: () => void\n  disableHoverableContent: Ref<boolean>\n  disableClosingTrigger: Ref<boolean>\n  disabled: Ref<boolean>\n  ignoreNonKeyboardFocus: Ref<boolean>\n}\n\nexport const [injectTooltipRootContext, provideTooltipRootContext]\n  = createContext<TooltipContext>('TooltipRoot')\n</script>\n\n<script setup lang=\"ts\">\nimport { useTimeoutFn, useVModel } from '@vueuse/core'\nimport { computed, ref, watch } from 'vue'\nimport { PopperRoot } from '@/Popper'\nimport { injectTooltipProviderContext } from './TooltipProvider.vue'\nimport { TOOLTIP_OPEN } from './utils'\n\nconst props = withDefaults(defineProps<TooltipRootProps>(), {\n  defaultOpen: false,\n  open: undefined,\n  delayDuration: undefined,\n  disableHoverableContent: undefined,\n  disableClosingTrigger: undefined,\n  disabled: undefined,\n  ignoreNonKeyboardFocus: undefined,\n})\n\nconst emit = defineEmits<TooltipRootEmits>()\n\ndefineSlots<{\n  default?: (props: {\n    /** Current open state */\n    open: typeof open.value\n  }) => any\n}>()\n\nuseForwardExpose()\nconst providerContext = injectTooltipProviderContext()\n\nconst disableHoverableContent = computed(() => props.disableHoverableContent ?? providerContext.disableHoverableContent.value)\nconst disableClosingTrigger = computed(() => props.disableClosingTrigger ?? providerContext.disableClosingTrigger.value)\nconst disableTooltip = computed(() => props.disabled ?? providerContext.disabled.value)\n\nconst delayDuration = computed(() => props.delayDuration ?? providerContext.delayDuration.value)\nconst ignoreNonKeyboardFocus = computed(() => props.ignoreNonKeyboardFocus ?? providerContext.ignoreNonKeyboardFocus.value)\n\nconst open = useVModel(props, 'open', emit, {\n  defaultValue: props.defaultOpen,\n  passive: (props.open === undefined) as false,\n}) as Ref<boolean>\n\nwatch(open, (isOpen) => {\n  if (!providerContext.onClose)\n    return\n  if (isOpen) {\n    providerContext.onOpen()\n    // as `onChange` is called within a lifecycle method we\n    // avoid dispatching via `dispatchDiscreteCustomEvent`.\n    document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN))\n  }\n  else {\n    providerContext.onClose()\n  }\n})\n\nconst wasOpenDelayedRef = ref(false)\nconst trigger = ref<HTMLElement>()\n\nconst stateAttribute = computed(() => {\n  if (!open.value)\n    return 'closed'\n  return wasOpenDelayedRef.value ? 'delayed-open' : 'instant-open'\n})\n\nconst { start: startTimer, stop: clearTimer } = useTimeoutFn(() => {\n  wasOpenDelayedRef.value = true\n  open.value = true\n}, delayDuration, { immediate: false })\n\nfunction handleOpen() {\n  clearTimer()\n  wasOpenDelayedRef.value = false\n  open.value = true\n}\nfunction handleClose() {\n  clearTimer()\n  open.value = false\n}\nfunction handleDelayedOpen() {\n  startTimer()\n}\n\nprovideTooltipRootContext({\n  contentId: '',\n  open,\n  stateAttribute,\n  trigger,\n  onTriggerChange(el) {\n    trigger.value = el\n  },\n  onTriggerEnter() {\n    if (providerContext.isOpenDelayed.value)\n      handleDelayedOpen()\n    else handleOpen()\n  },\n  onTriggerLeave() {\n    if (disableHoverableContent.value) {\n      handleClose()\n    }\n    else {\n      // Clear the timer in case the pointer leaves the trigger before the tooltip is opened.\n      clearTimer()\n    }\n  },\n  onOpen: handleOpen,\n  onClose: handleClose,\n  disableHoverableContent,\n  disableClosingTrigger,\n  disabled: disableTooltip,\n  ignoreNonKeyboardFocus,\n})\n</script>\n\n<template>\n  <PopperRoot>\n    <slot :open=\"open\" />\n  </PopperRoot>\n</template>\n", "<script lang=\"ts\">\nimport type { VNode } from 'vue'\nimport type { PopperContentProps } from '@/Popper'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport type TooltipContentImplEmits = {\n  /** Event handler called when focus moves to the destructive action after opening. It can be prevented by calling `event.preventDefault` */\n  escapeKeyDown: [event: KeyboardEvent]\n  /** Event handler called when a pointer event occurs outside the bounds of the component. It can be prevented by calling `event.preventDefault`. */\n  pointerDownOutside: [event: Event]\n}\n\nexport interface TooltipContentImplProps\n  extends PrimitiveProps,\n  Pick<\n    PopperContentProps,\n    | 'side'\n    | 'sideOffset'\n    | 'align'\n    | 'alignOffset'\n    | 'avoidCollisions'\n    | 'collisionBoundary'\n    | 'collisionPadding'\n    | 'arrowPadding'\n    | 'sticky'\n    | 'hideWhenDetached'\n    | 'positionStrategy'\n    | 'updatePositionStrategy'\n  > {\n  /**\n   * By default, screenreaders will announce the content inside\n   * the component. If this is not descriptive enough, or you have\n   * content that cannot be announced, use aria-label as a more\n   * descriptive label.\n   *\n   * @defaultValue String\n   */\n  ariaLabel?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { Comment, computed, onMounted, useSlots } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { PopperContent } from '@/Popper'\nimport { VisuallyHidden } from '@/VisuallyHidden'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\nimport { TOOLTIP_OPEN } from './utils'\n\nconst props = withDefaults(defineProps<TooltipContentImplProps>(), {\n  side: 'top',\n  sideOffset: 0,\n  align: 'center',\n  avoidCollisions: true,\n  collisionBoundary: () => [],\n  collisionPadding: 0,\n  arrowPadding: 0,\n  sticky: 'partial',\n  hideWhenDetached: false,\n})\nconst emits = defineEmits<TooltipContentImplEmits>()\n\nconst rootContext = injectTooltipRootContext()\n\nconst { forwardRef } = useForwardExpose()\nconst slot = useSlots()\nconst defaultSlot = computed(() => slot.default?.({}))\nconst ariaLabel = computed(() => {\n  if (props.ariaLabel)\n    return props.ariaLabel\n  let content = ''\n\n  function recursiveTextSearch(node: VNode) {\n    if (typeof node.children === 'string' && node.type !== Comment)\n      content += node.children\n    else if (Array.isArray(node.children))\n      node.children.forEach(child => recursiveTextSearch(child as VNode))\n  }\n\n  defaultSlot.value?.forEach((node: VNode) => recursiveTextSearch(node))\n  return content\n})\n\nconst popperContentProps = computed(() => {\n  const { ariaLabel: _, ...restProps } = props\n  return restProps\n})\n\nonMounted(() => {\n  // Close the tooltip if the trigger is scrolled\n  useEventListener(window, 'scroll', (event) => {\n    const target = event.target as HTMLElement\n    if (target?.contains(rootContext.trigger.value!))\n      rootContext.onClose()\n  })\n  // Close this tooltip if another one opens\n  useEventListener(window, TOOLTIP_OPEN, rootContext.onClose)\n})\n</script>\n\n<template>\n  <DismissableLayer\n    as-child\n    :disable-outside-pointer-events=\"false\"\n    @escape-key-down=\"emits('escapeKeyDown', $event)\"\n    @pointer-down-outside=\"(event) => {\n      if (rootContext.disableClosingTrigger.value && rootContext.trigger.value?.contains(event.target as HTMLElement))\n        event.preventDefault()\n\n      emits('pointerDownOutside', event)\n    }\"\n    @focus-outside.prevent\n    @dismiss=\"rootContext.onClose()\"\n  >\n    <PopperContent\n      :ref=\"forwardRef\"\n      :data-state=\"rootContext.stateAttribute.value\"\n      v-bind=\"{ ...$attrs, ...popperContentProps }\"\n      :style=\"{\n        '--reka-tooltip-content-transform-origin': 'var(--reka-popper-transform-origin)',\n        '--reka-tooltip-content-available-width': 'var(--reka-popper-available-width)',\n        '--reka-tooltip-content-available-height': 'var(--reka-popper-available-height)',\n        '--reka-tooltip-trigger-width': 'var(--reka-popper-anchor-width)',\n        '--reka-tooltip-trigger-height': 'var(--reka-popper-anchor-height)',\n      }\"\n    >\n      <slot />\n      <VisuallyHidden\n        :id=\"rootContext.contentId\"\n        role=\"tooltip\"\n      >\n        {{ ariaLabel }}\n      </VisuallyHidden>\n    </PopperContent>\n  </DismissableLayer>\n</template>\n", "<script lang=\"ts\">\nimport type { VNode } from 'vue'\nimport type { PopperContentProps } from '@/Popper'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { useForwardExpose } from '@/shared'\n\nexport type TooltipContentImplEmits = {\n  /** Event handler called when focus moves to the destructive action after opening. It can be prevented by calling `event.preventDefault` */\n  escapeKeyDown: [event: KeyboardEvent]\n  /** Event handler called when a pointer event occurs outside the bounds of the component. It can be prevented by calling `event.preventDefault`. */\n  pointerDownOutside: [event: Event]\n}\n\nexport interface TooltipContentImplProps\n  extends PrimitiveProps,\n  Pick<\n    PopperContentProps,\n    | 'side'\n    | 'sideOffset'\n    | 'align'\n    | 'alignOffset'\n    | 'avoidCollisions'\n    | 'collisionBoundary'\n    | 'collisionPadding'\n    | 'arrowPadding'\n    | 'sticky'\n    | 'hideWhenDetached'\n    | 'positionStrategy'\n    | 'updatePositionStrategy'\n  > {\n  /**\n   * By default, screenreaders will announce the content inside\n   * the component. If this is not descriptive enough, or you have\n   * content that cannot be announced, use aria-label as a more\n   * descriptive label.\n   *\n   * @defaultValue String\n   */\n  ariaLabel?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useEventListener } from '@vueuse/core'\nimport { Comment, computed, onMounted, useSlots } from 'vue'\nimport { DismissableLayer } from '@/DismissableLayer'\nimport { PopperContent } from '@/Popper'\nimport { VisuallyHidden } from '@/VisuallyHidden'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\nimport { TOOLTIP_OPEN } from './utils'\n\nconst props = withDefaults(defineProps<TooltipContentImplProps>(), {\n  side: 'top',\n  sideOffset: 0,\n  align: 'center',\n  avoidCollisions: true,\n  collisionBoundary: () => [],\n  collisionPadding: 0,\n  arrowPadding: 0,\n  sticky: 'partial',\n  hideWhenDetached: false,\n})\nconst emits = defineEmits<TooltipContentImplEmits>()\n\nconst rootContext = injectTooltipRootContext()\n\nconst { forwardRef } = useForwardExpose()\nconst slot = useSlots()\nconst defaultSlot = computed(() => slot.default?.({}))\nconst ariaLabel = computed(() => {\n  if (props.ariaLabel)\n    return props.ariaLabel\n  let content = ''\n\n  function recursiveTextSearch(node: VNode) {\n    if (typeof node.children === 'string' && node.type !== Comment)\n      content += node.children\n    else if (Array.isArray(node.children))\n      node.children.forEach(child => recursiveTextSearch(child as VNode))\n  }\n\n  defaultSlot.value?.forEach((node: VNode) => recursiveTextSearch(node))\n  return content\n})\n\nconst popperContentProps = computed(() => {\n  const { ariaLabel: _, ...restProps } = props\n  return restProps\n})\n\nonMounted(() => {\n  // Close the tooltip if the trigger is scrolled\n  useEventListener(window, 'scroll', (event) => {\n    const target = event.target as HTMLElement\n    if (target?.contains(rootContext.trigger.value!))\n      rootContext.onClose()\n  })\n  // Close this tooltip if another one opens\n  useEventListener(window, TOOLTIP_OPEN, rootContext.onClose)\n})\n</script>\n\n<template>\n  <DismissableLayer\n    as-child\n    :disable-outside-pointer-events=\"false\"\n    @escape-key-down=\"emits('escapeKeyDown', $event)\"\n    @pointer-down-outside=\"(event) => {\n      if (rootContext.disableClosingTrigger.value && rootContext.trigger.value?.contains(event.target as HTMLElement))\n        event.preventDefault()\n\n      emits('pointerDownOutside', event)\n    }\"\n    @focus-outside.prevent\n    @dismiss=\"rootContext.onClose()\"\n  >\n    <PopperContent\n      :ref=\"forwardRef\"\n      :data-state=\"rootContext.stateAttribute.value\"\n      v-bind=\"{ ...$attrs, ...popperContentProps }\"\n      :style=\"{\n        '--reka-tooltip-content-transform-origin': 'var(--reka-popper-transform-origin)',\n        '--reka-tooltip-content-available-width': 'var(--reka-popper-available-width)',\n        '--reka-tooltip-content-available-height': 'var(--reka-popper-available-height)',\n        '--reka-tooltip-trigger-width': 'var(--reka-popper-anchor-width)',\n        '--reka-tooltip-trigger-height': 'var(--reka-popper-anchor-height)',\n      }\"\n    >\n      <slot />\n      <VisuallyHidden\n        :id=\"rootContext.contentId\"\n        role=\"tooltip\"\n      >\n        {{ ariaLabel }}\n      </VisuallyHidden>\n    </PopperContent>\n  </DismissableLayer>\n</template>\n", "<script setup lang=\"ts\">\nimport type { TooltipContentImplProps } from './TooltipContentImpl.vue'\nimport { useForwardExpose, useForwardProps, useGraceArea } from '@/shared'\nimport TooltipContentImpl from './TooltipContentImpl.vue'\nimport { injectTooltipProviderContext } from './TooltipProvider.vue'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\n\nconst props = defineProps<TooltipContentImplProps>()\nconst forwardedProps = useForwardProps(props)\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst { trigger, onClose } = injectTooltipRootContext()\nconst providerContext = injectTooltipProviderContext()\n\nconst { isPointerInTransit, onPointerExit } = useGraceArea(trigger, currentElement)\n\nproviderContext.isPointerInTransitRef = isPointerInTransit\nonPointerExit(() => {\n  onClose()\n})\n</script>\n\n<template>\n  <TooltipContentImpl\n    :ref=\"forwardRef\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </TooltipContentImpl>\n</template>\n", "<script setup lang=\"ts\">\nimport type { TooltipContentImplProps } from './TooltipContentImpl.vue'\nimport { useForwardExpose, useForwardProps, useGraceArea } from '@/shared'\nimport TooltipContentImpl from './TooltipContentImpl.vue'\nimport { injectTooltipProviderContext } from './TooltipProvider.vue'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\n\nconst props = defineProps<TooltipContentImplProps>()\nconst forwardedProps = useForwardProps(props)\nconst { forwardRef, currentElement } = useForwardExpose()\n\nconst { trigger, onClose } = injectTooltipRootContext()\nconst providerContext = injectTooltipProviderContext()\n\nconst { isPointerInTransit, onPointerExit } = useGraceArea(trigger, currentElement)\n\nproviderContext.isPointerInTransitRef = isPointerInTransit\nonPointerExit(() => {\n  onClose()\n})\n</script>\n\n<template>\n  <TooltipContentImpl\n    :ref=\"forwardRef\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </TooltipContentImpl>\n</template>\n", "<script lang=\"ts\">\nimport type { TooltipContentImplEmits, TooltipContentImplProps } from './TooltipContentImpl.vue'\n\nexport type TooltipContentEmits = TooltipContentImplEmits\n\nexport interface TooltipContentProps extends TooltipContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\nimport TooltipContentHoverable from './TooltipContentHoverable.vue'\nimport TooltipContentImpl from './TooltipContentImpl.vue'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\n\nconst props = withDefaults(defineProps<TooltipContentProps>(), {\n  side: 'top',\n})\nconst emits = defineEmits<TooltipContentEmits>()\n\nconst rootContext = injectTooltipRootContext()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <component\n      :is=\"rootContext.disableHoverableContent.value ? TooltipContentImpl : TooltipContentHoverable\"\n      :ref=\"forwardRef\"\n      v-bind=\"forwarded\"\n    >\n      <slot />\n    </component>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { TooltipContentImplEmits, TooltipContentImplProps } from './TooltipContentImpl.vue'\n\nexport type TooltipContentEmits = TooltipContentImplEmits\n\nexport interface TooltipContentProps extends TooltipContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with Vue animation libraries.\n   */\n  forceMount?: boolean\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Presence } from '@/Presence'\nimport { useForwardExpose, useForwardPropsEmits } from '@/shared'\nimport TooltipContentHoverable from './TooltipContentHoverable.vue'\nimport TooltipContentImpl from './TooltipContentImpl.vue'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\n\nconst props = withDefaults(defineProps<TooltipContentProps>(), {\n  side: 'top',\n})\nconst emits = defineEmits<TooltipContentEmits>()\n\nconst rootContext = injectTooltipRootContext()\nconst forwarded = useForwardPropsEmits(props, emits)\nconst { forwardRef } = useForwardExpose()\n</script>\n\n<template>\n  <Presence :present=\"forceMount || rootContext.open.value\">\n    <component\n      :is=\"rootContext.disableHoverableContent.value ? TooltipContentImpl : TooltipContentHoverable\"\n      :ref=\"forwardRef\"\n      v-bind=\"forwarded\"\n    >\n      <slot />\n    </component>\n  </Presence>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface TooltipPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<TooltipPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport type { TeleportProps } from '@/Teleport'\n\nexport interface TooltipPortalProps extends TeleportProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport { TeleportPrimitive } from '@/Teleport'\n\nconst props = defineProps<TooltipPortalProps>()\n</script>\n\n<template>\n  <TeleportPrimitive v-bind=\"props\">\n    <slot />\n  </TeleportPrimitive>\n</template>\n", "<script lang=\"ts\">\nimport { useForwardExpose, useId } from '@/shared'\n\nexport type TooltipTriggerDataState =\n  | 'closed'\n  | 'delayed-open'\n  | 'instant-open'\n\nexport interface TooltipTriggerProps extends PopperAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { computed, onMounted, ref } from 'vue'\nimport { PopperAnchor } from '@/Popper'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectTooltipProviderContext } from './TooltipProvider.vue'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\n\nconst props = withDefaults(defineProps<TooltipTriggerProps>(), {\n  as: 'button',\n})\nconst rootContext = injectTooltipRootContext()\nconst providerContext = injectTooltipProviderContext()\n\nrootContext.contentId ||= useId(undefined, 'reka-tooltip-content')\n\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\n\nconst isPointerDown = ref(false)\nconst hasPointerMoveOpened = ref(false)\n\nconst tooltipListeners = computed(() => {\n  if (rootContext.disabled.value)\n    return {}\n\n  return {\n    click: handleClick,\n    focus: handleFocus,\n    pointermove: handlePointerMove,\n    pointerleave: handlePointerLeave,\n    pointerdown: handlePointerDown,\n    blur: handleBlur,\n  }\n})\n\nonMounted(() => {\n  rootContext.onTriggerChange(triggerElement.value)\n})\n\nfunction handlePointerUp() {\n  setTimeout(() => {\n    isPointerDown.value = false\n  }, 1)\n}\n\nfunction handlePointerDown() {\n  if (rootContext.open && !rootContext.disableClosingTrigger.value) {\n    rootContext.onClose()\n  }\n  isPointerDown.value = true\n  document.addEventListener('pointerup', handlePointerUp, { once: true })\n}\n\nfunction handlePointerMove(event: PointerEvent) {\n  if (event.pointerType === 'touch')\n    return\n  if (\n    !hasPointerMoveOpened.value && !providerContext.isPointerInTransitRef.value\n  ) {\n    rootContext.onTriggerEnter()\n    hasPointerMoveOpened.value = true\n  }\n}\n\nfunction handlePointerLeave() {\n  rootContext.onTriggerLeave()\n  hasPointerMoveOpened.value = false\n}\n\nfunction handleFocus(event: FocusEvent) {\n  if (isPointerDown.value)\n    return\n\n  if (rootContext.ignoreNonKeyboardFocus.value && !(event.target as HTMLElement).matches?.(':focus-visible'))\n    return\n\n  rootContext.onOpen()\n}\n\nfunction handleBlur() {\n  rootContext.onClose()\n}\n\nfunction handleClick() {\n  if (!rootContext.disableClosingTrigger.value)\n    rootContext.onClose()\n}\n</script>\n\n<template>\n  <PopperAnchor\n    as-child\n    :reference=\"reference\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :aria-describedby=\"\n        rootContext.open.value ? rootContext.contentId : undefined\n      \"\n      :data-state=\"rootContext.stateAttribute.value\"\n      :as=\"as\"\n      :as-child=\"props.asChild\"\n      data-grace-area-trigger\n      v-on=\"tooltipListeners\"\n    >\n      <slot />\n    </Primitive>\n  </PopperAnchor>\n</template>\n", "<script lang=\"ts\">\nimport { useForwardExpose, useId } from '@/shared'\n\nexport type TooltipTriggerDataState =\n  | 'closed'\n  | 'delayed-open'\n  | 'instant-open'\n\nexport interface TooltipTriggerProps extends PopperAnchorProps {}\n</script>\n\n<script setup lang=\"ts\">\nimport type { PopperAnchorProps } from '@/Popper'\nimport { computed, onMounted, ref } from 'vue'\nimport { PopperAnchor } from '@/Popper'\nimport {\n  Primitive,\n} from '@/Primitive'\nimport { injectTooltipProviderContext } from './TooltipProvider.vue'\nimport { injectTooltipRootContext } from './TooltipRoot.vue'\n\nconst props = withDefaults(defineProps<TooltipTriggerProps>(), {\n  as: 'button',\n})\nconst rootContext = injectTooltipRootContext()\nconst providerContext = injectTooltipProviderContext()\n\nrootContext.contentId ||= useId(undefined, 'reka-tooltip-content')\n\nconst { forwardRef, currentElement: triggerElement } = useForwardExpose()\n\nconst isPointerDown = ref(false)\nconst hasPointerMoveOpened = ref(false)\n\nconst tooltipListeners = computed(() => {\n  if (rootContext.disabled.value)\n    return {}\n\n  return {\n    click: handleClick,\n    focus: handleFocus,\n    pointermove: handlePointerMove,\n    pointerleave: handlePointerLeave,\n    pointerdown: handlePointerDown,\n    blur: handleBlur,\n  }\n})\n\nonMounted(() => {\n  rootContext.onTriggerChange(triggerElement.value)\n})\n\nfunction handlePointerUp() {\n  setTimeout(() => {\n    isPointerDown.value = false\n  }, 1)\n}\n\nfunction handlePointerDown() {\n  if (rootContext.open && !rootContext.disableClosingTrigger.value) {\n    rootContext.onClose()\n  }\n  isPointerDown.value = true\n  document.addEventListener('pointerup', handlePointerUp, { once: true })\n}\n\nfunction handlePointerMove(event: PointerEvent) {\n  if (event.pointerType === 'touch')\n    return\n  if (\n    !hasPointerMoveOpened.value && !providerContext.isPointerInTransitRef.value\n  ) {\n    rootContext.onTriggerEnter()\n    hasPointerMoveOpened.value = true\n  }\n}\n\nfunction handlePointerLeave() {\n  rootContext.onTriggerLeave()\n  hasPointerMoveOpened.value = false\n}\n\nfunction handleFocus(event: FocusEvent) {\n  if (isPointerDown.value)\n    return\n\n  if (rootContext.ignoreNonKeyboardFocus.value && !(event.target as HTMLElement).matches?.(':focus-visible'))\n    return\n\n  rootContext.onOpen()\n}\n\nfunction handleBlur() {\n  rootContext.onClose()\n}\n\nfunction handleClick() {\n  if (!rootContext.disableClosingTrigger.value)\n    rootContext.onClose()\n}\n</script>\n\n<template>\n  <PopperAnchor\n    as-child\n    :reference=\"reference\"\n  >\n    <Primitive\n      :ref=\"forwardRef\"\n      :aria-describedby=\"\n        rootContext.open.value ? rootContext.contentId : undefined\n      \"\n      :data-state=\"rootContext.stateAttribute.value\"\n      :as=\"as\"\n      :as-child=\"props.asChild\"\n      data-grace-area-trigger\n      v-on=\"tooltipListeners\"\n    >\n      <slot />\n    </Primitive>\n  </PopperAnchor>\n</template>\n", "export function flatten<U, T extends { children: any[] }>(items: T[]): U[] {\n  return items.reduce((acc: any[], item: T) => {\n    acc.push(item)\n\n    if (item.children)\n      acc.push(...flatten(item.children))\n\n    return acc\n  }, [])\n}\n\n// TODO: expose more utility function to handle flattened item\n", "<script lang=\"ts\">\nimport type { Direction } from '@/shared/types'\nimport { createContext, getActiveElement, useDirection, useSelectionBehavior, useTypeahead } from '@/shared'\nimport { flatten } from './utils'\n\nexport interface TreeRootProps<T = Record<string, any>, U extends Record<string, any> = Record<string, any>, M extends boolean = false> extends PrimitiveProps {\n  /** The controlled value of the tree. Can be binded with with `v-model`. */\n  modelValue?: M extends true ? U[] : U\n  /** The value of the tree when initially rendered. Use when you do not need to control the state of the tree */\n  defaultValue?: M extends true ? U[] : U\n  /** List of items */\n  items?: T[]\n  /** The controlled value of the expanded item. Can be binded with with `v-model`. */\n  expanded?: string[]\n  /** The value of the expanded tree when initially rendered. Use when you do not need to control the state of the expanded tree */\n  defaultExpanded?: string[]\n  /** This function is passed the index of each item and should return a unique key for that item */\n  getKey: (val: T) => string\n  /** This function is passed the index of each item and should return a list of children for that item */\n  getChildren?: (val: T) => T[] | undefined\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: 'toggle' | 'replace'\n  /** Whether multiple options can be selected or not.  */\n  multiple?: M | boolean\n  /** The reading direction of the listbox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, prevents the user from interacting with tree  */\n  disabled?: boolean\n  /** When `true`, selecting parent will select the descendants. */\n  propagateSelect?: boolean\n  /** When `true`, selecting children will update the parent state. */\n  bubbleSelect?: boolean\n}\n\nexport type TreeRootEmits<T = Record<string, any>, M extends boolean = false> = {\n  'update:modelValue': [val: M extends true ? T[] : T]\n  'update:expanded': [val: string[]]\n}\n\ninterface TreeRootContext<T = Record<string, any>> {\n  modelValue: Ref<T | T[]>\n  selectedKeys: Ref<string[]>\n  onSelect: (val: T) => void\n  expanded: Ref<string[]>\n  onToggle: (val: T) => void\n  items: Ref<T[]>\n  expandedItems: Ref<T[]>\n  getKey: (val: T) => string\n  getChildren: (val: T) => T[] | undefined\n  multiple: Ref<boolean>\n  disabled: Ref<boolean>\n  dir: Ref<Direction>\n  propagateSelect: Ref<boolean>\n  bubbleSelect: Ref<boolean>\n  isVirtual: Ref<boolean>\n  virtualKeydownHook: EventHook<KeyboardEvent>\n\n  handleMultipleReplace: ReturnType<typeof useSelectionBehavior>['handleMultipleReplace']\n}\n\nexport type FlattenedItem<T> = {\n  _id: string\n  index: number\n  value: T\n  level: number\n  hasChildren: boolean\n  parentItem?: T\n  bind: {\n    value: T\n    level: number\n    [key: string]: any\n  }\n}\n\nexport const [injectTreeRootContext, provideTreeRootContext] = createContext<TreeRootContext<any>>('TreeRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends Record<string, any>, U extends Record<string, any>, M extends boolean = false\">\nimport type { EventHook } from '@vueuse/core'\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createEventHook, useVModel } from '@vueuse/core'\nimport { computed, nextTick, ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { MAP_KEY_TO_FOCUS_INTENT } from '@/RovingFocus/utils'\n\nconst props = withDefaults(defineProps<TreeRootProps<T, U, M>>(), {\n  as: 'ul',\n  selectionBehavior: 'toggle',\n  getChildren: (val: T) => val.children,\n})\nconst emits = defineEmits<TreeRootEmits<U, M>>()\n\ndefineSlots<{\n  default?: (props: {\n    flattenItems: FlattenedItem<T>[]\n    modelValue: M extends true ? U[] : U\n    expanded: typeof expanded.value\n  }) => any\n}>()\n\nconst { items, multiple, disabled, propagateSelect, dir: propDir, bubbleSelect } = toRefs(props)\nconst { handleTypeaheadSearch } = useTypeahead()\nconst dir = useDirection(propDir)\nconst rovingFocusGroupRef = ref<InstanceType<typeof RovingFocusGroup>>()\n\n// Virtualizer\nconst isVirtual = ref(false)\nconst virtualKeydownHook = createEventHook<KeyboardEvent>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  // @ts-expect-error idk\n  defaultValue: props.defaultValue ?? (multiple.value ? [] : undefined),\n  passive: true,\n  deep: true,\n}) as Ref<U | U[]>\n\nconst expanded = useVModel(props, 'expanded', emits, {\n  // @ts-expect-error idk\n  defaultValue: props.defaultExpanded ?? [],\n  passive: (props.expanded === undefined) as false,\n  deep: true,\n}) as Ref<string[]>\n\nconst { onSelectItem, handleMultipleReplace } = useSelectionBehavior(modelValue, props)\n\nconst selectedKeys = computed(() => {\n  if (multiple.value && Array.isArray(modelValue.value))\n    return modelValue.value.map(i => props.getKey(i as any))\n  else\n    return [props.getKey(modelValue.value as any ?? {})]\n})\n\nfunction flattenItems(items: T[], level: number = 1, parentItem?: T): FlattenedItem<T>[] {\n  return items.reduce((acc: FlattenedItem<T>[], item: T, index: number) => {\n    const key = props.getKey(item)\n    const children = props.getChildren(item)\n    const isExpanded = expanded.value.includes(key)\n\n    const flattenedItem: FlattenedItem<T> = {\n      _id: key,\n      value: item,\n      index,\n      level,\n      parentItem,\n      hasChildren: !!children,\n      bind: {\n        'value': item,\n        level,\n        'aria-setsize': items.length,\n        'aria-posinset': index + 1,\n      },\n    }\n    acc.push(flattenedItem)\n\n    if (children && isExpanded)\n      acc.push(...flattenItems(children, level + 1, item))\n\n    return acc\n  }, [])\n}\n\nconst expandedItems = computed(() => {\n  const items = props.items\n  const expandedKeys = expanded.value.map(i => i)\n  return flattenItems(items ?? [])\n})\n\nfunction handleKeydown(event: KeyboardEvent) {\n  if (isVirtual.value) {\n    virtualKeydownHook.trigger(event)\n  }\n  else {\n    const collections = rovingFocusGroupRef.value?.getItems() ?? []\n    handleTypeaheadSearch(event.key, collections)\n  }\n}\n\nfunction handleKeydownNavigation(event: KeyboardEvent) {\n  if (isVirtual.value)\n    return\n\n  const intent = MAP_KEY_TO_FOCUS_INTENT[event.key]\n  nextTick(() => {\n    handleMultipleReplace(\n      intent,\n      getActiveElement(),\n      rovingFocusGroupRef.value?.getItems!,\n      expandedItems.value.map(i => i.value),\n    )\n  })\n}\n\nfunction handleBubbleSelect(item: FlattenedItem<T>) {\n  if (item.parentItem != null && Array.isArray(modelValue.value) && props.multiple) {\n    const parentItem = expandedItems.value.find((i) => {\n      return item.parentItem != null && props.getKey(i.value) === props.getKey(item.parentItem)\n    })\n\n    if (parentItem != null) {\n      const areAllChilredOfParentSelected = props.getChildren(parentItem.value)?.every(i => modelValue.value.find((v: any) => props.getKey(v) === props.getKey(i)))\n\n      if (areAllChilredOfParentSelected) {\n        modelValue.value = [...modelValue.value, parentItem.value as any]\n      }\n      else {\n        modelValue.value = modelValue.value.filter((v: any) => props.getKey(v) !== props.getKey(parentItem.value))\n      }\n\n      handleBubbleSelect(parentItem)\n    }\n  }\n}\n\nprovideTreeRootContext({\n  modelValue,\n  selectedKeys,\n  onSelect: (val) => {\n    const condition = (baseValue: U) => props.getKey(baseValue as any ?? {}) === props.getKey(val)\n    const exist = props.multiple && Array.isArray(modelValue.value) ? modelValue.value?.findIndex(condition) !== -1 : undefined\n    onSelectItem(val, condition)\n\n    if (props.bubbleSelect && props.multiple && Array.isArray(modelValue.value)) {\n      const item = expandedItems.value.find((i) => {\n        return props.getKey(i.value) === props.getKey(val)\n      })\n      if (item != null) {\n        handleBubbleSelect(item)\n      }\n    }\n\n    if (props.propagateSelect && props.multiple && Array.isArray(modelValue.value)) {\n      const children = flatten<U, any>(props.getChildren(val) ?? [])\n\n      if (exist) {\n        // remove all child\n        modelValue.value = [...modelValue.value]\n          .filter(i => !children.some(child => props.getKey(i as any ?? {}) === props.getKey(child as any)))\n      }\n      else {\n        // select all child\n        modelValue.value = [...modelValue.value, ...children]\n      }\n    }\n  },\n  expanded,\n  onToggle(val) {\n    const children = val ? props.getChildren(val) : undefined\n    if (!children)\n      return\n\n    const key = props.getKey(val) ?? val\n    if (expanded.value.includes(key))\n      expanded.value = expanded.value.filter(val => val !== key)\n    else\n      expanded.value.push(key)\n  },\n  getKey: props.getKey,\n  getChildren: props.getChildren,\n  items,\n  expandedItems,\n  disabled,\n  multiple,\n  dir,\n  propagateSelect,\n  bubbleSelect,\n\n  isVirtual,\n  virtualKeydownHook,\n  handleMultipleReplace,\n})\n</script>\n\n<template>\n  <RovingFocusGroup\n    ref=\"rovingFocusGroupRef\"\n    as-child\n    orientation=\"vertical\"\n    :dir=\"dir\"\n  >\n    <Primitive\n      role=\"tree\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-multiselectable=\"multiple ? true : undefined\"\n      @keydown=\"handleKeydown\"\n      @keydown.up.down.shift=\"handleKeydownNavigation\"\n    >\n      <slot\n        :flatten-items=\"expandedItems\"\n        :model-value=\"modelValue as M extends true ? U[] : U\"\n        :expanded=\"expanded\"\n      />\n    </Primitive>\n  </RovingFocusGroup>\n</template>\n", "<script lang=\"ts\">\nimport type { Direction } from '@/shared/types'\nimport { createContext, getActiveElement, useDirection, useSelectionBehavior, useTypeahead } from '@/shared'\nimport { flatten } from './utils'\n\nexport interface TreeRootProps<T = Record<string, any>, U extends Record<string, any> = Record<string, any>, M extends boolean = false> extends PrimitiveProps {\n  /** The controlled value of the tree. Can be binded with with `v-model`. */\n  modelValue?: M extends true ? U[] : U\n  /** The value of the tree when initially rendered. Use when you do not need to control the state of the tree */\n  defaultValue?: M extends true ? U[] : U\n  /** List of items */\n  items?: T[]\n  /** The controlled value of the expanded item. Can be binded with with `v-model`. */\n  expanded?: string[]\n  /** The value of the expanded tree when initially rendered. Use when you do not need to control the state of the expanded tree */\n  defaultExpanded?: string[]\n  /** This function is passed the index of each item and should return a unique key for that item */\n  getKey: (val: T) => string\n  /** This function is passed the index of each item and should return a list of children for that item */\n  getChildren?: (val: T) => T[] | undefined\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: 'toggle' | 'replace'\n  /** Whether multiple options can be selected or not.  */\n  multiple?: M | boolean\n  /** The reading direction of the listbox when applicable. <br> If omitted, inherits globally from `ConfigProvider` or assumes LTR (left-to-right) reading mode. */\n  dir?: Direction\n  /** When `true`, prevents the user from interacting with tree  */\n  disabled?: boolean\n  /** When `true`, selecting parent will select the descendants. */\n  propagateSelect?: boolean\n  /** When `true`, selecting children will update the parent state. */\n  bubbleSelect?: boolean\n}\n\nexport type TreeRootEmits<T = Record<string, any>, M extends boolean = false> = {\n  'update:modelValue': [val: M extends true ? T[] : T]\n  'update:expanded': [val: string[]]\n}\n\ninterface TreeRootContext<T = Record<string, any>> {\n  modelValue: Ref<T | T[]>\n  selectedKeys: Ref<string[]>\n  onSelect: (val: T) => void\n  expanded: Ref<string[]>\n  onToggle: (val: T) => void\n  items: Ref<T[]>\n  expandedItems: Ref<T[]>\n  getKey: (val: T) => string\n  getChildren: (val: T) => T[] | undefined\n  multiple: Ref<boolean>\n  disabled: Ref<boolean>\n  dir: Ref<Direction>\n  propagateSelect: Ref<boolean>\n  bubbleSelect: Ref<boolean>\n  isVirtual: Ref<boolean>\n  virtualKeydownHook: EventHook<KeyboardEvent>\n\n  handleMultipleReplace: ReturnType<typeof useSelectionBehavior>['handleMultipleReplace']\n}\n\nexport type FlattenedItem<T> = {\n  _id: string\n  index: number\n  value: T\n  level: number\n  hasChildren: boolean\n  parentItem?: T\n  bind: {\n    value: T\n    level: number\n    [key: string]: any\n  }\n}\n\nexport const [injectTreeRootContext, provideTreeRootContext] = createContext<TreeRootContext<any>>('TreeRoot')\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends Record<string, any>, U extends Record<string, any>, M extends boolean = false\">\nimport type { EventHook } from '@vueuse/core'\nimport type { Ref } from 'vue'\nimport type { PrimitiveProps } from '@/Primitive'\nimport { createEventHook, useVModel } from '@vueuse/core'\nimport { computed, nextTick, ref, toRefs } from 'vue'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusGroup } from '@/RovingFocus'\nimport { MAP_KEY_TO_FOCUS_INTENT } from '@/RovingFocus/utils'\n\nconst props = withDefaults(defineProps<TreeRootProps<T, U, M>>(), {\n  as: 'ul',\n  selectionBehavior: 'toggle',\n  getChildren: (val: T) => val.children,\n})\nconst emits = defineEmits<TreeRootEmits<U, M>>()\n\ndefineSlots<{\n  default?: (props: {\n    flattenItems: FlattenedItem<T>[]\n    modelValue: M extends true ? U[] : U\n    expanded: typeof expanded.value\n  }) => any\n}>()\n\nconst { items, multiple, disabled, propagateSelect, dir: propDir, bubbleSelect } = toRefs(props)\nconst { handleTypeaheadSearch } = useTypeahead()\nconst dir = useDirection(propDir)\nconst rovingFocusGroupRef = ref<InstanceType<typeof RovingFocusGroup>>()\n\n// Virtualizer\nconst isVirtual = ref(false)\nconst virtualKeydownHook = createEventHook<KeyboardEvent>()\n\nconst modelValue = useVModel(props, 'modelValue', emits, {\n  // @ts-expect-error idk\n  defaultValue: props.defaultValue ?? (multiple.value ? [] : undefined),\n  passive: true,\n  deep: true,\n}) as Ref<U | U[]>\n\nconst expanded = useVModel(props, 'expanded', emits, {\n  // @ts-expect-error idk\n  defaultValue: props.defaultExpanded ?? [],\n  passive: (props.expanded === undefined) as false,\n  deep: true,\n}) as Ref<string[]>\n\nconst { onSelectItem, handleMultipleReplace } = useSelectionBehavior(modelValue, props)\n\nconst selectedKeys = computed(() => {\n  if (multiple.value && Array.isArray(modelValue.value))\n    return modelValue.value.map(i => props.getKey(i as any))\n  else\n    return [props.getKey(modelValue.value as any ?? {})]\n})\n\nfunction flattenItems(items: T[], level: number = 1, parentItem?: T): FlattenedItem<T>[] {\n  return items.reduce((acc: FlattenedItem<T>[], item: T, index: number) => {\n    const key = props.getKey(item)\n    const children = props.getChildren(item)\n    const isExpanded = expanded.value.includes(key)\n\n    const flattenedItem: FlattenedItem<T> = {\n      _id: key,\n      value: item,\n      index,\n      level,\n      parentItem,\n      hasChildren: !!children,\n      bind: {\n        'value': item,\n        level,\n        'aria-setsize': items.length,\n        'aria-posinset': index + 1,\n      },\n    }\n    acc.push(flattenedItem)\n\n    if (children && isExpanded)\n      acc.push(...flattenItems(children, level + 1, item))\n\n    return acc\n  }, [])\n}\n\nconst expandedItems = computed(() => {\n  const items = props.items\n  const expandedKeys = expanded.value.map(i => i)\n  return flattenItems(items ?? [])\n})\n\nfunction handleKeydown(event: KeyboardEvent) {\n  if (isVirtual.value) {\n    virtualKeydownHook.trigger(event)\n  }\n  else {\n    const collections = rovingFocusGroupRef.value?.getItems() ?? []\n    handleTypeaheadSearch(event.key, collections)\n  }\n}\n\nfunction handleKeydownNavigation(event: KeyboardEvent) {\n  if (isVirtual.value)\n    return\n\n  const intent = MAP_KEY_TO_FOCUS_INTENT[event.key]\n  nextTick(() => {\n    handleMultipleReplace(\n      intent,\n      getActiveElement(),\n      rovingFocusGroupRef.value?.getItems!,\n      expandedItems.value.map(i => i.value),\n    )\n  })\n}\n\nfunction handleBubbleSelect(item: FlattenedItem<T>) {\n  if (item.parentItem != null && Array.isArray(modelValue.value) && props.multiple) {\n    const parentItem = expandedItems.value.find((i) => {\n      return item.parentItem != null && props.getKey(i.value) === props.getKey(item.parentItem)\n    })\n\n    if (parentItem != null) {\n      const areAllChilredOfParentSelected = props.getChildren(parentItem.value)?.every(i => modelValue.value.find((v: any) => props.getKey(v) === props.getKey(i)))\n\n      if (areAllChilredOfParentSelected) {\n        modelValue.value = [...modelValue.value, parentItem.value as any]\n      }\n      else {\n        modelValue.value = modelValue.value.filter((v: any) => props.getKey(v) !== props.getKey(parentItem.value))\n      }\n\n      handleBubbleSelect(parentItem)\n    }\n  }\n}\n\nprovideTreeRootContext({\n  modelValue,\n  selectedKeys,\n  onSelect: (val) => {\n    const condition = (baseValue: U) => props.getKey(baseValue as any ?? {}) === props.getKey(val)\n    const exist = props.multiple && Array.isArray(modelValue.value) ? modelValue.value?.findIndex(condition) !== -1 : undefined\n    onSelectItem(val, condition)\n\n    if (props.bubbleSelect && props.multiple && Array.isArray(modelValue.value)) {\n      const item = expandedItems.value.find((i) => {\n        return props.getKey(i.value) === props.getKey(val)\n      })\n      if (item != null) {\n        handleBubbleSelect(item)\n      }\n    }\n\n    if (props.propagateSelect && props.multiple && Array.isArray(modelValue.value)) {\n      const children = flatten<U, any>(props.getChildren(val) ?? [])\n\n      if (exist) {\n        // remove all child\n        modelValue.value = [...modelValue.value]\n          .filter(i => !children.some(child => props.getKey(i as any ?? {}) === props.getKey(child as any)))\n      }\n      else {\n        // select all child\n        modelValue.value = [...modelValue.value, ...children]\n      }\n    }\n  },\n  expanded,\n  onToggle(val) {\n    const children = val ? props.getChildren(val) : undefined\n    if (!children)\n      return\n\n    const key = props.getKey(val) ?? val\n    if (expanded.value.includes(key))\n      expanded.value = expanded.value.filter(val => val !== key)\n    else\n      expanded.value.push(key)\n  },\n  getKey: props.getKey,\n  getChildren: props.getChildren,\n  items,\n  expandedItems,\n  disabled,\n  multiple,\n  dir,\n  propagateSelect,\n  bubbleSelect,\n\n  isVirtual,\n  virtualKeydownHook,\n  handleMultipleReplace,\n})\n</script>\n\n<template>\n  <RovingFocusGroup\n    ref=\"rovingFocusGroupRef\"\n    as-child\n    orientation=\"vertical\"\n    :dir=\"dir\"\n  >\n    <Primitive\n      role=\"tree\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-multiselectable=\"multiple ? true : undefined\"\n      @keydown=\"handleKeydown\"\n      @keydown.up.down.shift=\"handleKeydownNavigation\"\n    >\n      <slot\n        :flatten-items=\"expandedItems\"\n        :model-value=\"modelValue as M extends true ? U[] : U\"\n        :expanded=\"expanded\"\n      />\n    </Primitive>\n  </RovingFocusGroup>\n</template>\n", "<script lang=\"ts\">\nexport interface TreeItemProps<T> extends PrimitiveProps {\n  /** Value given to this item */\n  value: T\n  /** Level of depth */\n  level: number\n}\n\nexport type SelectEvent<T> = CustomEvent<{ originalEvent: PointerEvent | KeyboardEvent, value?: T, isExpanded: boolean, isSelected: boolean }>\nexport type ToggleEvent<T> = CustomEvent<{ originalEvent: PointerEvent | KeyboardEvent, value?: T, isExpanded: boolean, isSelected: boolean }>\n\nexport type TreeItemEmits<T> = {\n  /** Event handler called when the selecting item. <br> It can be prevented by calling `event.preventDefault`. */\n  select: [event: SelectEvent<T>]\n  /** Event handler called when the selecting item. <br> It can be prevented by calling `event.preventDefault`. */\n  toggle: [event: ToggleEvent<T>]\n}\n\nconst TREE_SELECT = 'tree.select'\nconst TREE_TOGGLE = 'tree.toggle'\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends Record<string, any>\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { getActiveElement, handleAndDispatchCustomEvent } from '@/shared'\nimport { injectTreeRootContext } from './TreeRoot.vue'\nimport { flatten } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<TreeItemProps<T>>(), {\n  as: 'li',\n})\n\nconst emits = defineEmits<TreeItemEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    isExpanded: boolean\n    isSelected: boolean\n    isIndeterminate: boolean | undefined\n    handleToggle: () => void\n    handleSelect: () => void\n  }) => any\n}>()\nconst rootContext = injectTreeRootContext()\nconst { getItems } = useCollection()\n\nconst hasChildren = computed(() => !!rootContext.getChildren(props.value))\n\nconst isExpanded = computed(() => {\n  const key = rootContext.getKey(props.value)\n  return rootContext.expanded.value.includes(key)\n})\n\nconst isSelected = computed(() => {\n  const key = rootContext.getKey(props.value)\n  return rootContext.selectedKeys.value.includes(key)\n})\n\nconst isIndeterminate = computed(() => {\n  if (rootContext.bubbleSelect.value && hasChildren.value && Array.isArray(rootContext.modelValue.value)) {\n    const children = flatten<T, any>(rootContext.getChildren(props.value) || [])\n\n    return children.some(child => rootContext.modelValue.value.find((v: any) => rootContext.getKey(v) === rootContext.getKey(child)))\n      && !children.every(child => rootContext.modelValue.value.find((v: any) => rootContext.getKey(v) === rootContext.getKey(child)))\n  }\n  else if (rootContext.propagateSelect.value && isSelected.value && hasChildren.value && Array.isArray(rootContext.modelValue.value)) {\n    const children = flatten<T, any>(rootContext.getChildren(props.value) || [])\n\n    return !children.every(child => rootContext.modelValue.value.find((v: any) => rootContext.getKey(v) === rootContext.getKey(child)))\n  }\n  else {\n    return undefined\n  }\n})\n\nfunction handleKeydownRight(ev: KeyboardEvent) {\n  if (!hasChildren.value)\n    return\n\n  if (isExpanded.value) {\n    // go to first child\n    const collection = getItems().map(i => i.ref)\n    const currentElement = getActiveElement() as HTMLElement\n    const currentIndex = collection.indexOf(currentElement)\n    const list = [...collection].slice(currentIndex)\n    const nextElement = list.find(el => Number(el.getAttribute('data-indent')) === (props.level + 1))\n\n    if (nextElement)\n      nextElement.focus()\n  }\n  else {\n    //  open expanded\n    handleToggleCustomEvent(ev)\n  }\n}\n\nfunction handleKeydownLeft(ev: KeyboardEvent) {\n  if (isExpanded.value) {\n    //  close expanded\n    handleToggleCustomEvent(ev)\n  }\n  else {\n    // go back to parent\n    const collection = getItems().map(i => i.ref)\n    const currentElement = getActiveElement() as HTMLElement\n    const currentIndex = collection.indexOf(currentElement)\n    const list = [...collection].slice(0, currentIndex).reverse()\n    const parentElement = list.find(el => Number(el.getAttribute('data-indent')) === (props.level - 1))\n\n    if (parentElement)\n      parentElement.focus()\n  }\n}\n\nasync function handleSelect(ev: SelectEvent<T>) {\n  emits('select', ev)\n  if (ev?.defaultPrevented)\n    return\n\n  rootContext.onSelect(props.value)\n}\nasync function handleToggle(ev: ToggleEvent<T>) {\n  emits('toggle', ev)\n  if (ev?.defaultPrevented)\n    return\n\n  rootContext.onToggle(props.value)\n}\n\nasync function handleSelectCustomEvent(ev?: PointerEvent | KeyboardEvent) {\n  if (!ev)\n    return\n\n  const eventDetail = { originalEvent: ev, value: props.value, isExpanded: isExpanded.value, isSelected: isSelected.value }\n  handleAndDispatchCustomEvent(TREE_SELECT, handleSelect, eventDetail)\n}\n\nasync function handleToggleCustomEvent(ev?: PointerEvent | KeyboardEvent) {\n  if (!ev)\n    return\n\n  const eventDetail = { originalEvent: ev, value: props.value, isExpanded: isExpanded.value, isSelected: isSelected.value }\n  handleAndDispatchCustomEvent(TREE_TOGGLE, handleToggle, eventDetail)\n}\n\ndefineExpose({\n  isExpanded,\n  isSelected,\n  isIndeterminate,\n  handleToggle: () => rootContext.onToggle(props.value),\n  handleSelect: () => rootContext.onSelect(props.value),\n})\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    :value=\"value\"\n    allow-shift-key\n  >\n    <Primitive\n      v-bind=\"$attrs\"\n      role=\"treeitem\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-selected=\"isSelected\"\n      :aria-expanded=\"hasChildren ? isExpanded : undefined\"\n      :aria-level=\"level\"\n      :data-indent=\"level\"\n      :data-selected=\"isSelected ? '' : undefined\"\n      :data-expanded=\"isExpanded ? '' : undefined\"\n      @keydown.enter.space.self.prevent=\"handleSelectCustomEvent\"\n      @keydown.right.prevent=\"(ev) => rootContext.dir.value === 'ltr' ? handleKeydownRight(ev) : handleKeydownLeft(ev)\"\n      @keydown.left.prevent=\"(ev) => rootContext.dir.value === 'ltr' ? handleKeydownLeft(ev) : handleKeydownRight(ev)\"\n      @click.stop=\"(ev) => {\n        handleSelectCustomEvent(ev)\n        handleToggleCustomEvent(ev)\n      }\"\n    >\n      <slot\n        :is-expanded=\"isExpanded\"\n        :is-selected=\"isSelected\"\n        :is-indeterminate=\"isIndeterminate\"\n        :handle-select=\"() => rootContext.onSelect(value)\"\n        :handle-toggle=\"() => rootContext.onToggle(value)\"\n      />\n    </Primitive>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nexport interface TreeItemProps<T> extends PrimitiveProps {\n  /** Value given to this item */\n  value: T\n  /** Level of depth */\n  level: number\n}\n\nexport type SelectEvent<T> = CustomEvent<{ originalEvent: PointerEvent | KeyboardEvent, value?: T, isExpanded: boolean, isSelected: boolean }>\nexport type ToggleEvent<T> = CustomEvent<{ originalEvent: PointerEvent | KeyboardEvent, value?: T, isExpanded: boolean, isSelected: boolean }>\n\nexport type TreeItemEmits<T> = {\n  /** Event handler called when the selecting item. <br> It can be prevented by calling `event.preventDefault`. */\n  select: [event: SelectEvent<T>]\n  /** Event handler called when the selecting item. <br> It can be prevented by calling `event.preventDefault`. */\n  toggle: [event: ToggleEvent<T>]\n}\n\nconst TREE_SELECT = 'tree.select'\nconst TREE_TOGGLE = 'tree.toggle'\n</script>\n\n<script setup lang=\"ts\" generic=\"T extends Record<string, any>\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { computed } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { Primitive } from '@/Primitive'\nimport { RovingFocusItem } from '@/RovingFocus'\nimport { getActiveElement, handleAndDispatchCustomEvent } from '@/shared'\nimport { injectTreeRootContext } from './TreeRoot.vue'\nimport { flatten } from './utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(defineProps<TreeItemProps<T>>(), {\n  as: 'li',\n})\n\nconst emits = defineEmits<TreeItemEmits<T>>()\n\ndefineSlots<{\n  default?: (props: {\n    isExpanded: boolean\n    isSelected: boolean\n    isIndeterminate: boolean | undefined\n    handleToggle: () => void\n    handleSelect: () => void\n  }) => any\n}>()\nconst rootContext = injectTreeRootContext()\nconst { getItems } = useCollection()\n\nconst hasChildren = computed(() => !!rootContext.getChildren(props.value))\n\nconst isExpanded = computed(() => {\n  const key = rootContext.getKey(props.value)\n  return rootContext.expanded.value.includes(key)\n})\n\nconst isSelected = computed(() => {\n  const key = rootContext.getKey(props.value)\n  return rootContext.selectedKeys.value.includes(key)\n})\n\nconst isIndeterminate = computed(() => {\n  if (rootContext.bubbleSelect.value && hasChildren.value && Array.isArray(rootContext.modelValue.value)) {\n    const children = flatten<T, any>(rootContext.getChildren(props.value) || [])\n\n    return children.some(child => rootContext.modelValue.value.find((v: any) => rootContext.getKey(v) === rootContext.getKey(child)))\n      && !children.every(child => rootContext.modelValue.value.find((v: any) => rootContext.getKey(v) === rootContext.getKey(child)))\n  }\n  else if (rootContext.propagateSelect.value && isSelected.value && hasChildren.value && Array.isArray(rootContext.modelValue.value)) {\n    const children = flatten<T, any>(rootContext.getChildren(props.value) || [])\n\n    return !children.every(child => rootContext.modelValue.value.find((v: any) => rootContext.getKey(v) === rootContext.getKey(child)))\n  }\n  else {\n    return undefined\n  }\n})\n\nfunction handleKeydownRight(ev: KeyboardEvent) {\n  if (!hasChildren.value)\n    return\n\n  if (isExpanded.value) {\n    // go to first child\n    const collection = getItems().map(i => i.ref)\n    const currentElement = getActiveElement() as HTMLElement\n    const currentIndex = collection.indexOf(currentElement)\n    const list = [...collection].slice(currentIndex)\n    const nextElement = list.find(el => Number(el.getAttribute('data-indent')) === (props.level + 1))\n\n    if (nextElement)\n      nextElement.focus()\n  }\n  else {\n    //  open expanded\n    handleToggleCustomEvent(ev)\n  }\n}\n\nfunction handleKeydownLeft(ev: KeyboardEvent) {\n  if (isExpanded.value) {\n    //  close expanded\n    handleToggleCustomEvent(ev)\n  }\n  else {\n    // go back to parent\n    const collection = getItems().map(i => i.ref)\n    const currentElement = getActiveElement() as HTMLElement\n    const currentIndex = collection.indexOf(currentElement)\n    const list = [...collection].slice(0, currentIndex).reverse()\n    const parentElement = list.find(el => Number(el.getAttribute('data-indent')) === (props.level - 1))\n\n    if (parentElement)\n      parentElement.focus()\n  }\n}\n\nasync function handleSelect(ev: SelectEvent<T>) {\n  emits('select', ev)\n  if (ev?.defaultPrevented)\n    return\n\n  rootContext.onSelect(props.value)\n}\nasync function handleToggle(ev: ToggleEvent<T>) {\n  emits('toggle', ev)\n  if (ev?.defaultPrevented)\n    return\n\n  rootContext.onToggle(props.value)\n}\n\nasync function handleSelectCustomEvent(ev?: PointerEvent | KeyboardEvent) {\n  if (!ev)\n    return\n\n  const eventDetail = { originalEvent: ev, value: props.value, isExpanded: isExpanded.value, isSelected: isSelected.value }\n  handleAndDispatchCustomEvent(TREE_SELECT, handleSelect, eventDetail)\n}\n\nasync function handleToggleCustomEvent(ev?: PointerEvent | KeyboardEvent) {\n  if (!ev)\n    return\n\n  const eventDetail = { originalEvent: ev, value: props.value, isExpanded: isExpanded.value, isSelected: isSelected.value }\n  handleAndDispatchCustomEvent(TREE_TOGGLE, handleToggle, eventDetail)\n}\n\ndefineExpose({\n  isExpanded,\n  isSelected,\n  isIndeterminate,\n  handleToggle: () => rootContext.onToggle(props.value),\n  handleSelect: () => rootContext.onSelect(props.value),\n})\n</script>\n\n<template>\n  <RovingFocusItem\n    as-child\n    :value=\"value\"\n    allow-shift-key\n  >\n    <Primitive\n      v-bind=\"$attrs\"\n      role=\"treeitem\"\n      :as=\"as\"\n      :as-child=\"asChild\"\n      :aria-selected=\"isSelected\"\n      :aria-expanded=\"hasChildren ? isExpanded : undefined\"\n      :aria-level=\"level\"\n      :data-indent=\"level\"\n      :data-selected=\"isSelected ? '' : undefined\"\n      :data-expanded=\"isExpanded ? '' : undefined\"\n      @keydown.enter.space.self.prevent=\"handleSelectCustomEvent\"\n      @keydown.right.prevent=\"(ev) => rootContext.dir.value === 'ltr' ? handleKeydownRight(ev) : handleKeydownLeft(ev)\"\n      @keydown.left.prevent=\"(ev) => rootContext.dir.value === 'ltr' ? handleKeydownLeft(ev) : handleKeydownRight(ev)\"\n      @click.stop=\"(ev) => {\n        handleSelectCustomEvent(ev)\n        handleToggleCustomEvent(ev)\n      }\"\n    >\n      <slot\n        :is-expanded=\"isExpanded\"\n        :is-selected=\"isSelected\"\n        :is-indeterminate=\"isIndeterminate\"\n        :handle-select=\"() => rootContext.onSelect(value)\"\n        :handle-toggle=\"() => rootContext.onToggle(value)\"\n      />\n    </Primitive>\n  </RovingFocusItem>\n</template>\n", "<script lang=\"ts\">\nexport interface TreeVirtualizerProps {\n  /** Number of items rendered outside the visible area */\n  overscan?: number\n  /** Estimated size (in px) of each item */\n  estimateSize?: number\n  /** Text content for each item to achieve type-ahead feature */\n  textContent?: (item: Record<string, any>) => string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { VirtualItem, Virtualizer } from '@tanstack/vue-virtual'\nimport type { Ref } from 'vue'\nimport type { FlattenedItem } from './TreeRoot.vue'\nimport { useVirtualizer } from '@tanstack/vue-virtual'\nimport { refAutoReset, useParentElement } from '@vueuse/core'\nimport { cloneVNode, computed, nextTick, useSlots } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { MAP_KEY_TO_FOCUS_INTENT } from '@/RovingFocus/utils'\nimport { getActiveElement } from '@/shared'\nimport { getNextMatch } from '@/shared/useTypeahead'\nimport { injectTreeRootContext } from './TreeRoot.vue'\n\nconst props = defineProps<TreeVirtualizerProps>()\n\ndefineSlots<{\n  default?: (props: {\n    item: FlattenedItem<Record<string, any>>\n    virtualizer: Virtualizer<Element | Window, Element>\n    virtualItem: VirtualItem\n  }) => any\n}>()\n\nconst slots = useSlots()\nconst rootContext = injectTreeRootContext()\nconst parentEl = useParentElement() as Ref<HTMLElement>\nconst { getItems } = useCollection()\n\n// Reset `search` 1 second after it was last updated\nconst search = refAutoReset('', 1000)\nconst optionsWithMetadata = computed(() => {\n  const parseTextContent = (option: Record<string, any>) => {\n    if (props.textContent)\n      return props.textContent(option)\n    else\n      return option.toString().toLowerCase()\n  }\n\n  return rootContext.expandedItems.value.map((option, index) => ({\n    index,\n    textContent: parseTextContent(option.value),\n  }))\n})\n\n// set virtual true when this component mounted\nrootContext.isVirtual.value = true\n\nconst padding = computed(() => {\n  const el = parentEl.value\n  if (!el) {\n    return { start: 0, end: 0 }\n  }\n  else {\n    const styles = window.getComputedStyle(el)\n    return {\n      start: Number.parseFloat(styles.paddingBlockStart || styles.paddingTop),\n      end: Number.parseFloat(styles.paddingBlockEnd || styles.paddingBottom),\n    }\n  }\n})\n\nconst virtualizer = useVirtualizer(\n  {\n    get scrollPaddingStart() { return padding.value.start },\n    get scrollPaddingEnd() { return padding.value.end },\n    get count() { return rootContext.expandedItems.value.length ?? 0 },\n    get horizontal() { return false },\n    getItemKey(index) {\n      return index + rootContext.getKey(rootContext.expandedItems.value[index].value)\n    },\n    estimateSize() {\n      return props.estimateSize ?? 28\n    },\n    getScrollElement() { return parentEl.value },\n    overscan: props.overscan ?? 12,\n  },\n)\n\nconst virtualizedItems = computed(() => virtualizer.value.getVirtualItems().map((item) => {\n  return {\n    item,\n    is: cloneVNode(slots.default!({\n      item: rootContext.expandedItems.value[item.index],\n      virtualizer: virtualizer.value,\n      virtualItem: item,\n    })![0], {\n      'data-index': item.index,\n      'style': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        transform: `translateY(${item.start}px)`,\n        overflowAnchor: 'none',\n      },\n    }),\n  }\n}))\n\nfunction scrollToIndexAndFocus(index: number) {\n  virtualizer.value.scrollToIndex(index, { align: 'start' })\n  requestAnimationFrame(() => {\n    const item = parentEl.value.querySelector(`[data-index=\"${index}\"]`) as HTMLElement\n    if (item instanceof HTMLElement)\n      item.focus()\n  })\n}\n\nrootContext.virtualKeydownHook.on((event) => {\n  const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n  const isTabKey = event.key === 'Tab' && !isMetaKey\n  if (isTabKey)\n    return\n\n  const intent = MAP_KEY_TO_FOCUS_INTENT[event.key]\n\n  if (['first', 'last'].includes(intent)) {\n    event.preventDefault()\n\n    const index = intent === 'first' ? 0 : rootContext.expandedItems.value.length - 1\n    virtualizer.value.scrollToIndex(index)\n    requestAnimationFrame(() => {\n      const items = getItems()\n      const item = intent === 'first' ? items[0] : items[items.length - 1]\n      item.ref.focus()\n    })\n  }\n  else if (intent === 'prev' && event.key !== 'ArrowUp') {\n    const currentElement = getActiveElement() as HTMLElement\n    const currentIndex = Number(currentElement.getAttribute('data-index'))\n    const currentLevel = Number(currentElement.getAttribute('data-indent'))\n    const list = rootContext.expandedItems.value.slice(0, currentIndex).map((item, index) => ({ ...item, index })).reverse()\n\n    const parentItem = list.find(item => item.level === (currentLevel - 1))\n    if (parentItem)\n      scrollToIndexAndFocus(parentItem.index)\n  }\n  else if (!intent && !isMetaKey) {\n    search.value += event.key\n    const currentIndex = Number(getActiveElement()?.getAttribute('data-index'))\n    const currentMatch = optionsWithMetadata.value[currentIndex].textContent\n    const filteredOptions = optionsWithMetadata.value.map(i => i.textContent)\n    const next = getNextMatch(filteredOptions, search.value, currentMatch)\n\n    const nextMatch = optionsWithMetadata.value.find(option => option.textContent === next)\n    if (nextMatch)\n      scrollToIndexAndFocus(nextMatch.index)\n  }\n\n  nextTick(() => {\n    if (event.shiftKey && intent)\n      rootContext.handleMultipleReplace(intent, getActiveElement(), getItems, rootContext.expandedItems.value.map(i => i.value))\n  })\n})\n</script>\n\n<template>\n  <div\n    data-reka-virtualizer\n    :style=\"{\n      position: 'relative',\n      width: '100%',\n      height: `${virtualizer.getTotalSize()}px`,\n    }\"\n  >\n    <component\n      :is=\"is\"\n      v-for=\"{ is, item } in virtualizedItems\"\n      :key=\"item.key\"\n    />\n  </div>\n</template>\n", "<script lang=\"ts\">\nexport interface TreeVirtualizerProps {\n  /** Number of items rendered outside the visible area */\n  overscan?: number\n  /** Estimated size (in px) of each item */\n  estimateSize?: number\n  /** Text content for each item to achieve type-ahead feature */\n  textContent?: (item: Record<string, any>) => string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport type { VirtualItem, Virtualizer } from '@tanstack/vue-virtual'\nimport type { Ref } from 'vue'\nimport type { FlattenedItem } from './TreeRoot.vue'\nimport { useVirtualizer } from '@tanstack/vue-virtual'\nimport { refAutoReset, useParentElement } from '@vueuse/core'\nimport { cloneVNode, computed, nextTick, useSlots } from 'vue'\nimport { useCollection } from '@/Collection'\nimport { MAP_KEY_TO_FOCUS_INTENT } from '@/RovingFocus/utils'\nimport { getActiveElement } from '@/shared'\nimport { getNextMatch } from '@/shared/useTypeahead'\nimport { injectTreeRootContext } from './TreeRoot.vue'\n\nconst props = defineProps<TreeVirtualizerProps>()\n\ndefineSlots<{\n  default?: (props: {\n    item: FlattenedItem<Record<string, any>>\n    virtualizer: Virtualizer<Element | Window, Element>\n    virtualItem: VirtualItem\n  }) => any\n}>()\n\nconst slots = useSlots()\nconst rootContext = injectTreeRootContext()\nconst parentEl = useParentElement() as Ref<HTMLElement>\nconst { getItems } = useCollection()\n\n// Reset `search` 1 second after it was last updated\nconst search = refAutoReset('', 1000)\nconst optionsWithMetadata = computed(() => {\n  const parseTextContent = (option: Record<string, any>) => {\n    if (props.textContent)\n      return props.textContent(option)\n    else\n      return option.toString().toLowerCase()\n  }\n\n  return rootContext.expandedItems.value.map((option, index) => ({\n    index,\n    textContent: parseTextContent(option.value),\n  }))\n})\n\n// set virtual true when this component mounted\nrootContext.isVirtual.value = true\n\nconst padding = computed(() => {\n  const el = parentEl.value\n  if (!el) {\n    return { start: 0, end: 0 }\n  }\n  else {\n    const styles = window.getComputedStyle(el)\n    return {\n      start: Number.parseFloat(styles.paddingBlockStart || styles.paddingTop),\n      end: Number.parseFloat(styles.paddingBlockEnd || styles.paddingBottom),\n    }\n  }\n})\n\nconst virtualizer = useVirtualizer(\n  {\n    get scrollPaddingStart() { return padding.value.start },\n    get scrollPaddingEnd() { return padding.value.end },\n    get count() { return rootContext.expandedItems.value.length ?? 0 },\n    get horizontal() { return false },\n    getItemKey(index) {\n      return index + rootContext.getKey(rootContext.expandedItems.value[index].value)\n    },\n    estimateSize() {\n      return props.estimateSize ?? 28\n    },\n    getScrollElement() { return parentEl.value },\n    overscan: props.overscan ?? 12,\n  },\n)\n\nconst virtualizedItems = computed(() => virtualizer.value.getVirtualItems().map((item) => {\n  return {\n    item,\n    is: cloneVNode(slots.default!({\n      item: rootContext.expandedItems.value[item.index],\n      virtualizer: virtualizer.value,\n      virtualItem: item,\n    })![0], {\n      'data-index': item.index,\n      'style': {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        transform: `translateY(${item.start}px)`,\n        overflowAnchor: 'none',\n      },\n    }),\n  }\n}))\n\nfunction scrollToIndexAndFocus(index: number) {\n  virtualizer.value.scrollToIndex(index, { align: 'start' })\n  requestAnimationFrame(() => {\n    const item = parentEl.value.querySelector(`[data-index=\"${index}\"]`) as HTMLElement\n    if (item instanceof HTMLElement)\n      item.focus()\n  })\n}\n\nrootContext.virtualKeydownHook.on((event) => {\n  const isMetaKey = event.altKey || event.ctrlKey || event.metaKey\n  const isTabKey = event.key === 'Tab' && !isMetaKey\n  if (isTabKey)\n    return\n\n  const intent = MAP_KEY_TO_FOCUS_INTENT[event.key]\n\n  if (['first', 'last'].includes(intent)) {\n    event.preventDefault()\n\n    const index = intent === 'first' ? 0 : rootContext.expandedItems.value.length - 1\n    virtualizer.value.scrollToIndex(index)\n    requestAnimationFrame(() => {\n      const items = getItems()\n      const item = intent === 'first' ? items[0] : items[items.length - 1]\n      item.ref.focus()\n    })\n  }\n  else if (intent === 'prev' && event.key !== 'ArrowUp') {\n    const currentElement = getActiveElement() as HTMLElement\n    const currentIndex = Number(currentElement.getAttribute('data-index'))\n    const currentLevel = Number(currentElement.getAttribute('data-indent'))\n    const list = rootContext.expandedItems.value.slice(0, currentIndex).map((item, index) => ({ ...item, index })).reverse()\n\n    const parentItem = list.find(item => item.level === (currentLevel - 1))\n    if (parentItem)\n      scrollToIndexAndFocus(parentItem.index)\n  }\n  else if (!intent && !isMetaKey) {\n    search.value += event.key\n    const currentIndex = Number(getActiveElement()?.getAttribute('data-index'))\n    const currentMatch = optionsWithMetadata.value[currentIndex].textContent\n    const filteredOptions = optionsWithMetadata.value.map(i => i.textContent)\n    const next = getNextMatch(filteredOptions, search.value, currentMatch)\n\n    const nextMatch = optionsWithMetadata.value.find(option => option.textContent === next)\n    if (nextMatch)\n      scrollToIndexAndFocus(nextMatch.index)\n  }\n\n  nextTick(() => {\n    if (event.shiftKey && intent)\n      rootContext.handleMultipleReplace(intent, getActiveElement(), getItems, rootContext.expandedItems.value.map(i => i.value))\n  })\n})\n</script>\n\n<template>\n  <div\n    data-reka-virtualizer\n    :style=\"{\n      position: 'relative',\n      width: '100%',\n      height: `${virtualizer.getTotalSize()}px`,\n    }\"\n  >\n    <component\n      :is=\"is\"\n      v-for=\"{ is, item } in virtualizedItems\"\n      :key=\"item.key\"\n    />\n  </div>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { toRefs } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { useNonce } from '@/shared/useNonce'\n\nexport interface ViewportProps extends PrimitiveProps {\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ViewportProps>()\nconst { forwardRef } = useForwardExpose()\n\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"{ ...$attrs, ...props }\"\n    :ref=\"forwardRef\"\n    data-reka-viewport\n    role=\"presentation\"\n    :style=\"{\n      // we use position: 'relative' here on the `viewport` so that when we call\n      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n      // (independent of the scrollUpButton).\n      position: 'relative',\n      flex: 1,\n      overflow: 'auto',\n    }\"\n  >\n    <slot />\n  </Primitive>\n  <Primitive\n    as=\"style\"\n    :nonce=\"nonce\"\n  >\n    /* Hide scrollbars cross-browser and enable momentum scroll for touch\n    devices */ [data-reka-viewport] { scrollbar-width:none; -ms-overflow-style: none;\n    -webkit-overflow-scrolling: touch; }\n    [data-reka-viewport]::-webkit-scrollbar { display: none; }\n  </Primitive>\n</template>\n", "<script lang=\"ts\">\nimport type { PrimitiveProps } from '@/Primitive'\nimport { toRefs } from 'vue'\nimport { useForwardExpose } from '@/shared'\nimport { useNonce } from '@/shared/useNonce'\n\nexport interface ViewportProps extends PrimitiveProps {\n  /**\n   * Will add `nonce` attribute to the style tag which can be used by Content Security Policy. <br> If omitted, inherits globally from `ConfigProvider`.\n   */\n  nonce?: string\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { Primitive } from '@/Primitive'\n\nconst props = defineProps<ViewportProps>()\nconst { forwardRef } = useForwardExpose()\n\nconst { nonce: propNonce } = toRefs(props)\nconst nonce = useNonce(propNonce)\n</script>\n\n<template>\n  <Primitive\n    v-bind=\"{ ...$attrs, ...props }\"\n    :ref=\"forwardRef\"\n    data-reka-viewport\n    role=\"presentation\"\n    :style=\"{\n      // we use position: 'relative' here on the `viewport` so that when we call\n      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n      // (independent of the scrollUpButton).\n      position: 'relative',\n      flex: 1,\n      overflow: 'auto',\n    }\"\n  >\n    <slot />\n  </Primitive>\n  <Primitive\n    as=\"style\"\n    :nonce=\"nonce\"\n  >\n    /* Hide scrollbars cross-browser and enable momentum scroll for touch\n    devices */ [data-reka-viewport] { scrollbar-width:none; -ms-overflow-style: none;\n    -webkit-overflow-scrolling: touch; }\n    [data-reka-viewport]::-webkit-scrollbar { display: none; }\n  </Primitive>\n</template>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,UAAU,GAAE;AAAC,SAAO,OAAO,KAAG,WAAS,IAAI,CAAC,MAAI,IAAI,EAAE,EAAE,UAAU,CAAC;AAAC;AAAC,IAAM,IAAe,WAAU;AAA7G;AAAA,EAA8G,MAAM,EAAC;AAAA,IAAP;AAAQ,6BAAG,oBAAI;AAAA;AAAA,IAAI,QAAQ,GAAE,GAAE;AAAC,YAAM,IAAE,OAAO,GAAE,IAAE,OAAO;AAAE,aAAO,MAAI,YAAU,MAAI,WAAS,EAAE,cAAc,CAAC,IAAE,MAAI,YAAU,MAAI,WAAS,IAAE,IAAE,OAAO,UAAU,cAAc,KAAK,KAAK,UAAU,GAAE,IAAI,GAAE,KAAK,UAAU,GAAE,IAAI,CAAC;AAAA,IAAC;AAAA,IAAC,UAAU,GAAE,GAAE;AAAC,UAAG,MAAI,KAAK,QAAO;AAAO,cAAO,OAAO,GAAE;AAAA,QAAC,KAAK;AAAS,iBAAO,IAAE,IAAE,IAAI,CAAC;AAAA,QAAI,KAAK;AAAS,iBAAO,GAAG,CAAC;AAAA,QAAI,KAAK;AAAS,iBAAO,KAAK,QAAQ,CAAC;AAAA,QAAE,KAAK;AAAW,iBAAO,KAAK,UAAU,CAAC;AAAA,MAAC;AAAC,aAAO,OAAO,CAAC;AAAA,IAAC;AAAA,IAAC,gBAAgB,GAAE;AAAC,YAAM,IAAE,OAAO,UAAU,SAAS,KAAK,CAAC;AAAE,UAAG,MAAI,kBAAkB,QAAO,KAAK,qBAAqB,EAAE,SAAO,KAAG,WAAW,CAAC,KAAG,EAAE,MAAM,GAAE,EAAE,GAAE,CAAC;AAAE,YAAM,IAAE,EAAE,aAAY,IAAE,MAAI,UAAQ,MAAI,SAAO,KAAG,EAAE;AAAK,UAAG,MAAI,MAAI,WAAW,CAAC,MAAI,EAAE,QAAO,KAAK,qBAAqB,GAAE,CAAC;AAAE,UAAG,OAAO,EAAE,UAAQ,YAAW;AAAC,cAAM,IAAE,EAAE,OAAO;AAAE,eAAO,KAAG,MAAI,QAAM,OAAO,KAAG,WAAS,KAAK,QAAQ,CAAC,IAAE,IAAI,KAAK,UAAU,CAAC,CAAC;AAAA,MAAI;AAAC,aAAO,KAAK,uBAAuB,GAAE,OAAO,QAAQ,CAAC,CAAC;AAAA,IAAC;AAAA,IAAC,qBAAqB,GAAE,GAAE;AAAC,YAAM,IAAE,KAAK,MAAI,CAAC;AAAE,UAAG,EAAE,QAAO,EAAE,KAAK,MAAK,CAAC;AAAE,UAAG,QAAO,uBAAG,YAAS,WAAW,QAAO,KAAK,uBAAuB,GAAE,EAAE,QAAQ,CAAC;AAAE,YAAM,IAAI,MAAM,oBAAoB,CAAC,EAAE;AAAA,IAAC;AAAA,IAAC,uBAAuB,GAAE,GAAE;AAAC,YAAM,IAAE,MAAM,KAAK,CAAC,EAAE,KAAK,CAAC,GAAE,MAAI,KAAK,QAAQ,EAAE,CAAC,GAAE,EAAE,CAAC,CAAC,CAAC;AAAE,UAAI,IAAE,GAAG,CAAC;AAAI,eAAQ,IAAE,GAAE,IAAE,EAAE,QAAO,KAAI;AAAC,cAAK,CAAC,GAAE,CAAC,IAAE,EAAE,CAAC;AAAE,aAAG,GAAG,KAAK,UAAU,GAAE,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,IAAG,IAAE,EAAE,SAAO,MAAI,KAAG;AAAA,MAAK;AAAC,aAAO,IAAE;AAAA,IAAG;AAAA,IAAC,QAAQ,GAAE;AAAC,UAAI,IAAE,mBAAK,IAAG,IAAI,CAAC;AAAE,aAAO,MAAI,WAAS,mBAAK,IAAG,IAAI,GAAE,IAAI,mBAAK,IAAG,IAAI,EAAE,GAAE,IAAE,KAAK,gBAAgB,CAAC,GAAE,mBAAK,IAAG,IAAI,GAAE,CAAC,IAAG;AAAA,IAAC;AAAA,IAAC,UAAU,GAAE;AAAC,YAAM,IAAE,SAAS,UAAU,SAAS,KAAK,CAAC;AAAE,aAAO,EAAE,MAAM,GAAG,MAAI,oBAAkB,GAAG,EAAE,QAAM,EAAE,eAAa,GAAG,EAAE,IAAI,IAAI,EAAE,MAAM,IAAI,EAAE,QAAQ,aAAY,EAAE,CAAC;AAAA,IAAE;AAAA,IAAC,OAAO,GAAE;AAAC,UAAI,IAAE;AAAI,eAAQ,IAAE,GAAE,IAAE,EAAE,QAAO,IAAI,MAAG,KAAK,UAAU,EAAE,CAAC,CAAC,GAAE,IAAE,EAAE,SAAO,MAAI,KAAG;AAAK,aAAO,IAAE;AAAA,IAAG;AAAA,IAAC,MAAM,GAAE;AAAC,UAAG;AAAC,eAAO,QAAQ,EAAE,YAAY,CAAC;AAAA,MAAG,QAAM;AAAC,eAAO;AAAA,MAAY;AAAA,IAAC;AAAA,IAAC,aAAa,GAAE;AAAC,aAAO,eAAe,IAAI,WAAW,CAAC,EAAE,KAAK,GAAG,CAAC;AAAA,IAAG;AAAA,IAAC,KAAK,GAAE;AAAC,aAAO,MAAM,KAAK,OAAO,MAAM,KAAK,CAAC,EAAE,KAAK,CAAC,GAAE,MAAI,KAAK,QAAQ,GAAE,CAAC,CAAC,CAAC,CAAC;AAAA,IAAE;AAAA,IAAC,KAAK,GAAE;AAAC,aAAO,KAAK,uBAAuB,OAAM,EAAE,QAAQ,CAAC;AAAA,IAAC;AAAA,EAAC;AAA1/D;AAA2/D,aAAU,KAAK,CAAC,SAAQ,UAAS,KAAK,EAAE,GAAE,UAAU,MAAI,CAAC,IAAE,SAAS,GAAE;AAAC,WAAO,GAAG,CAAC,IAAI,CAAC;AAAA,EAAG;AAAE,aAAU,KAAK,CAAC,aAAY,cAAa,qBAAoB,cAAa,eAAc,cAAa,eAAc,gBAAe,cAAc,EAAE,GAAE,UAAU,MAAI,CAAC,IAAE,SAAS,GAAE;AAAC,WAAO,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC;AAAA,EAAG;AAAE,aAAU,KAAK,CAAC,iBAAgB,gBAAgB,EAAE,GAAE,UAAU,MAAI,CAAC,IAAE,SAAS,GAAE;AAAC,WAAO,GAAG,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,EAAE,SAAO,IAAE,MAAI,EAAE;AAAA,EAAG;AAAE,SAAO;AAAC,EAAE;AAE5iF,SAAS,QAAQ,SAAS,SAAS;AACjC,MAAI,YAAY,SAAS;AACvB,WAAO;AAAA,EACT;AACA,MAAI,UAAU,OAAO,MAAM,UAAU,OAAO,GAAG;AAC7C,WAAO;AAAA,EACT;AACA,SAAO;AACT;;;ACCA,SAAgB,SAASA,QAAeC,QAAwB;AAC9D,MAAI,OAAO,WAAW,OAAO,OAC3B,QAAO;AAET,WAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,QACzC,KAAI,OAAO,KAAA,MAAW,OAAO,KAAA,EAC3B,QAAO;AAGX,SAAO;AACR;AAmCD,SAAgB,kBAAqBC,OAAYC,OAAUC,KAAQ;AACjE,QAAM,aAAa,MAAM,UAAU,CAAA,MAAK,QAAQ,GAAG,KAAA,CAAM;AACzD,QAAM,WAAW,MAAM,UAAU,CAAA,MAAK,QAAQ,GAAG,GAAA,CAAI;AACrD,MAAI,eAAe,MAAM,aAAa,GACpC,QAAO,CAAE;AAEX,QAAM,CAAC,UAAU,QAAA,IAAY,CAAC,YAAY,QAAS,EAAC,KAAK,CAAC,GAAG,MAAM,IAAI,CAAA;AAEvE,SAAO,MAAM,MAAM,UAAU,WAAW,CAAA;AACzC;;;ACjED,IAAa,YAAA,OAAmB,aAAa;;;ACY7C,SAAgB,MAAMC,OAAeC,OAAc,OAAO,mBAAmBC,OAAc,OAAO,mBAA2B;AAC3H,SAAO,KAAK,IAAIC,MAAK,KAAK,IAAIC,MAAK,KAAA,CAAM;AAC1C;AAWD,SAAgB,qBAAqBJ,OAAeK,MAAc;AAChE,MAAI,eAAe;AACnB,QAAM,aAAa,KAAK,SAAA;AACxB,QAAM,aAAa,WAAW,QAAQ,GAAA;AACtC,QAAM,YAAY,cAAc,IAAI,WAAW,SAAS,aAAa;AACrE,MAAI,YAAY,GAAG;AACjB,UAAM,MAAM,MAAM;AAClB,mBAAe,KAAK,MAAM,eAAe,GAAA,IAAO;EACjD;AACD,SAAO;AACR;AAgBD,SAAgB,gBAAgBL,OAAeM,MAAyBC,MAAyBF,MAAsB;AACrH,EAAAD,OAAM,OAAOA,IAAA;AACb,EAAAD,OAAM,OAAOA,IAAA;AACb,QAAM,aAAc,SAAS,OAAO,MAAMC,IAAA,IAAO,IAAIA,SAAQ;AAC7D,MAAI,eAAe,qBAAqB,KAAK,IAAI,SAAA,IAAa,KAAK,OAC/D,QAAQ,KAAK,KAAK,SAAA,KAAc,OAAO,KAAK,IAAI,SAAA,KAChD,QAAQ,WAAW,IAAA;AAEvB,MAAA,CAAK,OAAO,MAAMA,IAAA,GAChB;QAAI,eAAeA,KACjB,gBAAeA;cACP,OAAO,MAAMD,IAAA,KAAQ,eAAeA,KAC5C,gBAAeC,OAAM,KAAK,MAAM,sBAAsBD,OAAMC,QAAO,MAAM,IAAA,CAAK,IAAI;EAAI,WAAA,CAEhF,OAAO,MAAMD,IAAA,KAAQ,eAAeA,KAC5C,gBAAe,KAAK,MAAM,qBAAqBA,OAAM,MAAM,IAAA,CAAK,IAAI;AAItE,iBAAe,qBAAqB,cAAc,IAAA;AAElD,SAAO;AACR;;;AC/DD,SAAgB,cACdK,uBACAC,aACA;AACA,QAAM,oBAAA,OACK,0BAA0B,YAAA,CAAa,cAC5C,GAAG,qBAAA,YACH;AAEN,QAAMC,eAAkD,OAAO,iBAAA;AAQ/D,QAAM,gBAAgB,CAGpBC,aACwD;AACxD,UAAMC,WAAU,OAAO,cAAc,QAAA;AACrC,QAAIA,SACF,QAAOA;AAET,QAAIA,aAAY,KACd,QAAOA;AAET,UAAM,IAAI,MACR,eAAe,aAAa,SAAA,CAAU,+CACpC,MAAM,QAAQ,qBAAA,IACV,oCAAoC,sBAAsB,KAC1D,IAAA,CACD,KACC,KAAK,qBAAA,IAAyB,EAClC;EAEL;AAED,QAAM,iBAAiB,CAACC,iBAA+B;AACrD,YAAQ,cAAc,YAAA;AACtB,WAAO;EACR;AAED,SAAO,CAAC,eAAe,cAAe;AACvC;;;ACxDD,SAAgB,mBAAmC;AACjD,MAAI,gBAAgB,SAAS;AAC7B,MAAI,iBAAiB,KACnB,QAAO;AAGT,SAAO,iBAAiB,QAAQ,cAAc,cAAc,QAAQ,cAAc,WAAW,iBAAiB,KAC5G,iBAAgB,cAAc,WAAW;AAG3C,SAAO;AACR;;;ACXD,SAAgB,6BAIdC,MACAC,SACAC,QAGA;AACA,QAAM,SAAS,OAAO,cAAc;AACpC,QAAM,QAAQ,IAAI,YAAY,MAAM;IAClC,SAAS;IACT,YAAY;IACZ;EACD,CAAA;AACD,MAAI,QACF,QAAO,iBAAiB,MAAM,SAA0B,EAAE,MAAM,KAAM,CAAA;AAExE,SAAO,cAAc,KAAA;AACtB;;;ACpBD,SAAgB,UAAUC,OAAuC;AAC/D,SAAO,UAAU,QAAQ,UAAA;AAC1B;;;ACUD,SAAgB,oBAAuBC,MAA2BC,SAA8B;AAC9F,MAAI,UAAU,IAAA,EACZ,QAAO;AACT,MAAI,MAAM,QAAQ,IAAA,EAChB,QAAO,KAAK,KAAK,CAAA,QAAO,QAAQ,KAAK,OAAA,CAAQ;MAG7C,QAAO,QAAQ,MAAM,OAAA;AAExB;;;AClBD,SAAgB,oBAAoBC,UAA6B;AAC/D,MAAA,CAAK,SACH,QAAO,CAAE;AACX,SAAO,SAAS,QAAQ,CAAC,UAAU;AACjC,QAAI,MAAM,SAAS,SACjB,QAAO,oBAAoB,MAAM,QAAA;AAEnC,WAAO,CAAC,KAAM;EACf,CAAA;AACF;;;ACoDD,IAAM,iBAAiB,CAAC,SAAS,UAAW;AAW5C,SAAgB,mBACdC,GACAC,gBACAC,eACAC,UAAkC,CAAE,GAChB;AACpB,MAAA,CAAK,kBAAmB,QAAQ,wBAAwB,eAAe,SAAS,eAAe,QAAA,EAC7F,QAAO;AAET,QAAM,EACJ,kBAAkB,QAClB,gBAAgB,+BAChB,aAAa,CAAE,GACf,OAAO,MACP,MAAM,OACN,gBAAgB,MAChB,OAAAC,SAAQ,MAAA,IACN;AAEJ,QAAM,CAAC,OAAO,MAAM,IAAI,MAAM,MAAM,GAAA,IAAO;IACzC,EAAE,QAAQ;IACV,EAAE,QAAQ;IACV,EAAE,QAAQ;IACV,EAAE,QAAQ;IACV,EAAE,QAAQ;IACV,EAAE,QAAQ;EACX;AACD,QAAM,gBAAgB,MAAM;AAC5B,QAAM,kBAAkB,SAAS;AACjC,MAAA,CACG,QAAA,CACG,QAAA,CACE,iBAAA,CAAkB,mBAClB,oBAAoB,cAAc,mBAClC,oBAAoB,gBAAgB,eAE1C,QAAO;AAGT,QAAMC,qBAAoC,gBACtC,MAAM,KAAK,cAAc,iBAAiB,aAAA,CAAc,IACxD;AAEJ,MAAA,CAAK,mBAAmB,OACtB,QAAO;AAET,MAAI,cACF,GAAE,eAAA;AAEJ,MAAIC,OAA2B;AAE/B,MAAI,mBAAmB,eAAe;AACpC,UAAM,YAAY,gBAAgB,OAAO,QAAQ,QAAQ,QAAQ;AACjE,WAAO,yBAAyB,oBAAoB,gBAAgB;MAClE;MACA;IACD,CAAA;EACF,WACQ,KACP,QAAO,mBAAmB,GAAG,CAAA,KAAM;WAE5B,IACP,QAAO,mBAAmB,GAAG,EAAA,KAAO;AAGtC,MAAIF,OACF,8BAAM;AAER,SAAO;AACR;AAuBD,SAAS,yBACPG,UACAN,gBACAO,SACA,aAAa,SAAS,QACF;AACpB,MAAI,EAAE,eAAe,EACnB,QAAO;AAET,QAAM,QAAQ,SAAS,QAAQ,cAAA;AAC/B,QAAM,WAAW,QAAQ,YAAY,QAAQ,IAAI,QAAQ;AAEzD,MAAA,CAAK,QAAQ,SAAS,WAAW,KAAK,YAAY,SAAS,QACzD,QAAO;AAET,QAAM,oBAAoB,WAAW,SAAS,UAAU,SAAS;AACjE,QAAM,YAAY,SAAS,gBAAA;AAC3B,MAAA,CAAK,UACH,QAAO;AAET,QAAM,aACF,UAAU,aAAa,UAAA,KACpB,UAAU,aAAa,UAAA,MAAgB;AAC9C,MAAI,WACF,QAAO,yBACL,UACA,WACA,SACA,UAAA;AAGJ,SAAO;AACR;;;AC1LD,IAAa,CAAC,6BAA6B,4BAAA,IACvC,cAA0C,gBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqC9C,UAAMC,SAAQ;AAQd,UAAM,EAAE,KAAK,QAAQ,YAAY,MAAA,IAAU,OAAOA,MAAA;AAElD,iCAA6B;MAC3B;MACA;MACA;MACA;MACA,OAAOA,OAAM;IACd,CAAA;;aAIC,WAAQ,KAAA,QAAA,SAAA;;;;;;;AEvEV,SAAS,cAAc,OAAO;AAC5B,MAAI,UAAU,QAAQ,OAAO,UAAU,UAAU;AAC/C,WAAO;AAAA,EACT;AACA,QAAM,YAAY,OAAO,eAAe,KAAK;AAC7C,MAAI,cAAc,QAAQ,cAAc,OAAO,aAAa,OAAO,eAAe,SAAS,MAAM,MAAM;AACrG,WAAO;AAAA,EACT;AACA,MAAI,OAAO,YAAY,OAAO;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,OAAO,eAAe,OAAO;AAC/B,WAAO,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM;AAAA,EACnD;AACA,SAAO;AACT;AAEA,SAAS,MAAM,YAAY,UAAU,YAAY,KAAK,QAAQ;AAC5D,MAAI,CAAC,cAAc,QAAQ,GAAG;AAC5B,WAAO,MAAM,YAAY,CAAC,GAAG,WAAW,MAAM;AAAA,EAChD;AACA,QAAM,SAAS,OAAO,OAAO,CAAC,GAAG,QAAQ;AACzC,aAAW,OAAO,YAAY;AAC5B,QAAI,QAAQ,eAAe,QAAQ,eAAe;AAChD;AAAA,IACF;AACA,UAAM,QAAQ,WAAW,GAAG;AAC5B,QAAI,UAAU,QAAQ,UAAU,QAAQ;AACtC;AAAA,IACF;AACA,QAAI,UAAU,OAAO,QAAQ,KAAK,OAAO,SAAS,GAAG;AACnD;AAAA,IACF;AACA,QAAI,MAAM,QAAQ,KAAK,KAAK,MAAM,QAAQ,OAAO,GAAG,CAAC,GAAG;AACtD,aAAO,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC;AAAA,IACzC,WAAW,cAAc,KAAK,KAAK,cAAc,OAAO,GAAG,CAAC,GAAG;AAC7D,aAAO,GAAG,IAAI;AAAA,QACZ;AAAA,QACA,OAAO,GAAG;AAAA,SACT,YAAY,GAAG,SAAS,MAAM,MAAM,IAAI,SAAS;AAAA,QAClD;AAAA,MACF;AAAA,IACF,OAAO;AACL,aAAO,GAAG,IAAI;AAAA,IAChB;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,WAAW,QAAQ;AAC1B,SAAO,IAAI;AAAA;AAAA,IAET,WAAW,OAAO,CAAC,GAAGC,OAAM,MAAM,GAAGA,IAAG,IAAI,MAAM,GAAG,CAAC,CAAC;AAAA;AAE3D;AACA,IAAM,OAAO,WAAW;AACxB,IAAM,SAAS,WAAW,CAAC,QAAQ,KAAK,iBAAiB;AACvD,MAAI,OAAO,GAAG,MAAM,UAAU,OAAO,iBAAiB,YAAY;AAChE,WAAO,GAAG,IAAI,aAAa,OAAO,GAAG,CAAC;AACtC,WAAO;AAAA,EACT;AACF,CAAC;AACD,IAAM,cAAc,WAAW,CAAC,QAAQ,KAAK,iBAAiB;AAC5D,MAAI,MAAM,QAAQ,OAAO,GAAG,CAAC,KAAK,OAAO,iBAAiB,YAAY;AACpE,WAAO,GAAG,IAAI,aAAa,OAAO,GAAG,CAAC;AACtC,WAAO;AAAA,EACT;AACF,CAAC;;;ACxDD,IAAM,wBAAwB,uBAAuB,MAAM;AACzD,QAAM,MAAM,IAA0B,oBAAI,IAAA,CAAA;AAC1C,QAAM,kBAAkB,IAAA;AAExB,QAAM,SAAS,SAAS,MAAM;AAC5B,eAAW,SAAS,IAAI,MAAM,OAAA,EAC5B,KAAI,MACF,QAAO;AAEX,WAAO;EACR,CAAA;AAED,QAAMC,WAAU,4BAA4B,EAC1C,YAAY,IAAI,IAAA,EACjB,CAAA;AAED,MAAIC,wBAAmC;AAEvC,QAAM,iBAAiB,MAAM;AAC3B,aAAS,KAAK,MAAM,eAAe;AACnC,aAAS,KAAK,MAAM,cAAc;AAClC,aAAS,KAAK,MAAM,gBAAgB;AACpC,aAAS,gBAAgB,MAAM,eAAe,mBAAA;AAC9C,aAAS,KAAK,MAAM,WAAW,gBAAgB,SAAS;AACxD,cAAS;AAET,oBAAgB,QAAA;EACjB;AAED,QAAM,QAAQ,CAAC,KAAK,WAAW;;AAC7B,QAAA,CAAK,SACH;AAEF,QAAA,CAAK,KAAK;AACR,UAAI,OACF,gBAAA;AACF;IACD;AAED,QAAI,gBAAgB,UAAA,OAClB,iBAAgB,QAAQ,SAAS,KAAK,MAAM;AAE9C,UAAM,yBAAyB,OAAO,aAAa,SAAS,gBAAgB;AAC5E,UAAM,gBAAgB;MAAE,SAAS;MAAwB,QAAQ;IAAG;AAEpE,UAAM,WAAS,KAAAD,SAAQ,eAAR,mBAAoB,SAAA,OACxBA,SAAQ,WAAW,UAAU,WAClC,KAAK;MACH,SAASA,SAAQ,WAAW,MAAM,YAAY,OAAO,yBAAyBA,SAAQ,WAAW,MAAM;MACvG,QAAQA,SAAQ,WAAW,MAAM,WAAW,OAAO,yBAAyBA,SAAQ,WAAW,MAAM;IACtG,GAAE,aAAA,IACH,gBACD;MAAE,SAAS;MAAG,QAAQ;IAAG;AAE9B,QAAI,yBAAyB,GAAG;AAC9B,eAAS,KAAK,MAAM,eAAA,OAAsB,OAAO,YAAY,WAAW,GAAG,OAAO,OAAA,OAAc,OAAO,OAAO,OAAA;AAC9G,eAAS,KAAK,MAAM,cAAA,OAAqB,OAAO,WAAW,WAAW,GAAG,OAAO,MAAA,OAAa,OAAO,OAAO,MAAA;AAC3G,eAAS,gBAAgB,MAAM,YAAY,qBAAqB,GAAG,sBAAA,IAA0B;AAC7F,eAAS,KAAK,MAAM,WAAW;IAChC;AAED,QAAI,MACF,yBAAwB,iBACtB,UACA,aACA,CAACE,MAAkB,eAAe,CAAA,GAClC,EAAE,SAAS,MAAO,CAAA;AAKtB,aAAS,MAAM;AACb,eAAS,KAAK,MAAM,gBAAgB;AACpC,eAAS,KAAK,MAAM,WAAW;IAChC,CAAA;EACF,GAAE;IAAE,WAAW;IAAM,OAAO;EAAQ,CAAA;AAErC,SAAO;AACR,CAAA;AAED,SAAgB,kBAAkBC,cAAoC;AACpE,QAAM,KAAK,KAAK,OAAA,EAAS,SAAS,EAAA,EAAI,UAAU,GAAG,CAAA;AACnD,QAAM,MAAM,sBAAA;AAEZ,MAAI,MAAM,IAAI,IAAI,gBAAgB,KAAA;AAElC,QAAM,SAAS,SAAS;IACtB,KAAK,MAAM,IAAI,MAAM,IAAI,EAAA,KAAO;IAChC,KAAK,CAAA,UAAS,IAAI,MAAM,IAAI,IAAI,KAAA;EACjC,CAAA;AAED,qBAAmB,MAAM;AACvB,QAAI,MAAM,OAAO,EAAA;EAClB,CAAA;AAED,SAAO;AACR;AAGD,SAAS,oBAAoBC,KAAuB;AAClD,QAAM,QAAQ,OAAO,iBAAiB,GAAA;AACtC,MACE,MAAM,cAAc,YACjB,MAAM,cAAc,YACnB,MAAM,cAAc,UAAU,IAAI,cAAc,IAAI,eACpD,MAAM,cAAc,UAAU,IAAI,eAAe,IAAI,aAEzD,QAAO;OAEJ;AACH,UAAM,SAAS,IAAI;AAEnB,QAAA,EAAM,kBAAkB,YAAY,OAAO,YAAY,OACrD,QAAO;AAET,WAAO,oBAAoB,MAAA;EAC5B;AACF;AAED,SAAS,eAAeC,UAA+B;AACrD,QAAM,IAAI,YAAY,OAAO;AAE7B,QAAM,UAAU,EAAE;AAGlB,MAAI,mBAAmB,WAAW,oBAAoB,OAAA,EACpD,QAAO;AAGT,MAAI,EAAE,QAAQ,SAAS,EACrB,QAAO;AAET,MAAI,EAAE,kBAAkB,EAAE,WACxB,GAAE,eAAA;AAEJ,SAAO;AACR;;;AClIM,SAAS,0CAAI,QAAgB,WAAiB;AACnD,SAAO,SAAS,YAAY,KAAK,MAAM,SAAS,SAAA;AAClD;;;ACCA,IAAM,8BAAQ;AACP,SAAS,0CAAqB,KAAa,MAAc,OAAe,KAAW;AACxF,SAAO,0CAAgB,KAAK,IAAA;AAE5B,MAAI,KAAK,OAAO;AAChB,MAAI,cAAc;AAClB,MAAI,SAAS,EACX,eAAc;WACL,0CAAW,IAAA,EACpB,eAAc;AAGhB,SACE,8BACA,IACA,MAAM,KACN,KAAK,MAAM,KAAK,CAAA,IAChB,KAAK,MAAM,KAAK,GAAA,IAChB,KAAK,MAAM,KAAK,GAAA,IAChB,KAAK,OAAO,MAAM,QAAQ,OAAO,KAAK,cAAc,GAAA;AAExD;AAEO,SAAS,0CAAW,MAAY;AACrC,SAAO,OAAO,MAAM,MAAM,OAAO,QAAQ,KAAK,OAAO,QAAQ;AAC/D;AAEO,SAAS,0CAAgB,KAAa,MAAY;AACvD,SAAO,QAAQ,OAAO,IAAI,OAAO;AACnC;AAEO,SAAS,0CAAiB,MAAY;AAC3C,MAAI,MAAM;AACV,MAAI,QAAQ,GAAG;AACb,UAAM;AACN,WAAO,IAAI;EACb;AAEA,SAAO;IAAC;IAAK;;AACf;AAEA,IAAM,oCAAc;EAClB,UAAU;IAAC;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;;EACvD,UAAU;IAAC;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;IAAI;;AACzD;AAMO,IAAM,4CAAN,MAAM;EAGX,cAAc,IAA0B;AACtC,QAAI,MAAM;AACV,QAAI,SAAS,MAAM;AACnB,QAAI,aAAa,KAAK,MAAM,SAAS,MAAA;AACrC,QAAI,OAAM,GAAA,2CAAI,QAAQ,MAAA;AACtB,QAAI,OAAO,KAAK,MAAM,MAAM,KAAA;AAC5B,QAAI,SAAQ,GAAA,2CAAI,KAAK,KAAA;AACrB,QAAI,OAAO,KAAK,MAAM,QAAQ,IAAA;AAC9B,QAAI,SAAQ,GAAA,2CAAI,OAAO,IAAA;AACvB,QAAI,SAAS,KAAK,MAAM,QAAQ,GAAA;AAEhC,QAAI,eAAe,aAAa,MAAM,OAAO,MAAM,OAAO,IAAI,UAAU,SAAS,KAAK,WAAW,IAAI,IAAI;AACzG,QAAI,CAAC,KAAK,IAAA,IAAQ,0CAAiB,YAAA;AACnC,QAAI,UAAU,MAAM,0CAAqB,KAAK,MAAM,GAAG,CAAA;AACvD,QAAI,UAAU;AACd,QAAI,MAAM,0CAAqB,KAAK,MAAM,GAAG,CAAA,EAC3C,WAAU;aACD,0CAAW,IAAA,EACpB,WAAU;AAEZ,QAAI,QAAQ,KAAK,QAAQ,UAAU,WAAW,KAAK,OAAO,GAAA;AAC1D,QAAI,MAAM,MAAM,0CAAqB,KAAK,MAAM,OAAO,CAAA,IAAK;AAE5D,WAAO,KAAI,GAAA,2CAAa,KAAK,MAAM,OAAO,GAAA;EAC5C;EAEA,YAAY,MAA+B;AACzC,WAAO,0CAAqB,KAAK,KAAK,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG;EACvE;EAEA,eAAe,MAA+B;AAC5C,WAAO,kCAAY,0CAAW,KAAK,IAAI,IAAI,aAAa,UAAA,EAAY,KAAK,QAAQ,CAAA;EACnF;;EAGA,gBAAgB,MAA+B;AAC7C,WAAO;EACT;EAEA,cAAc,MAA+B;AAC3C,WAAO,0CAAW,KAAK,IAAI,IAAI,MAAM;EACvC;;EAGA,cAAc,MAA+B;AAC3C,WAAO;EACT;EAEA,UAAoB;AAClB,WAAO;MAAC;MAAM;;EAChB;EAEA,aAAa,MAAgC;AAC3C,WAAO,KAAK,QAAQ;EACtB;EAEA,YAAY,MAAsC;AAChD,QAAI,KAAK,QAAQ,GAAG;AAClB,WAAK,MAAM,KAAK,QAAQ,OAAO,OAAO;AACtC,WAAK,OAAO,IAAI,KAAK;IACvB;EACF;;SA/DA,aAAiC;;AAgEnC;;;ACxHO,IAAM,4CAAgB;EAC3B,OAAO;EACP,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;EACJ,IAAI;AACN;;;AC1FO,SAAS,0CAAU,GAAc,GAAY;AAClD,OAAI,GAAA,2CAAW,GAAG,EAAE,QAAQ;AAC5B,SAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE;AACpF;AAGO,SAAS,0CAAY,GAAc,GAAY;AACpD,OAAI,GAAA,2CAAW,GAAG,EAAE,QAAQ;AAE5B,MAAI,0CAAa,CAAA;AACjB,MAAI,0CAAa,CAAA;AACjB,SAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE;AAC/D;AAWO,SAAS,0CAAW,GAAc,GAAY;AACnD,SAAO,yCAAgB,EAAE,UAAU,EAAE,QAAQ,KAAK,0CAAU,GAAG,CAAA;AACjE;AAGO,SAAS,0CAAa,GAAc,GAAY;AACrD,SAAO,yCAAgB,EAAE,UAAU,EAAE,QAAQ,KAAK,0CAAY,GAAG,CAAA;AACnE;AAQO,SAAS,yCAAgB,GAAa,GAAW;MAC/C,YAAkB;MAAlB,aAAA;AAAP,UAAO,QAAA,eAAA,aAAA,EAAE,aAAO,QAAT,eAAA,SAAA,SAAA,WAAA,KAAA,GAAY,CAAA,OAAA,QAAZ,gBAAA,SAAA,eAAkB,aAAA,EAAE,aAAO,QAAT,eAAA,SAAA,SAAA,WAAA,KAAA,GAAY,CAAA,OAAA,QAA9B,SAAA,SAAA,OAAoC,EAAE,eAAe,EAAE;AAChE;AAGO,SAAS,0CAAQ,MAAiB,UAAgB;AACvD,SAAO,0CAAU,MAAM,0CAAM,QAAA,CAAA;AAC/B;AAEA,IAAM,gCAAU;EACd,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;EACL,KAAK;AACP;AASO,SAAS,0CAAa,MAAiB,QAAgB,gBAA0B;AACtF,MAAI,SAAS,KAAK,SAAS,YAAY,IAAA;AAIvC,MAAI,YAAY,iBAAiB,8BAAQ,cAAA,IAAkB,mCAAa,MAAA;AACxE,MAAI,YAAY,KAAK,KAAK,SAAS,IAAI,SAAA,IAAa;AACpD,MAAI,YAAY,EACd,cAAa;AAGf,SAAO;AACT;AAGO,SAAS,yCAAI,UAAgB;AAClC,UAAO,GAAA,2CAAa,KAAK,IAAG,GAAI,QAAA;AAClC;AAGO,SAAS,0CAAM,UAAgB;AACpC,UAAO,GAAA,2CAAe,yCAAI,QAAA,CAAA;AAC5B;AAEO,SAAS,0CAAY,GAAoB,GAAkB;AAChE,SAAO,EAAE,SAAS,YAAY,CAAA,IAAK,EAAE,SAAS,YAAY,CAAA;AAC5D;AAEO,SAAS,0CAAY,GAAY,GAAU;AAChD,SAAO,+BAAS,CAAA,IAAK,+BAAS,CAAA;AAChC;AAEA,SAAS,+BAAS,GAAU;AAC1B,SAAO,EAAE,OAAF,OAA0B,EAAE,SAAF,MAAuB,EAAE,SAAS,MAAO,EAAE;AAC9E;AAaA,IAAI,sCAA+B;AAG5B,SAAS,4CAAA;AACd,MAAI,uCAAiB,KACnB,uCAAgB,IAAI,KAAK,eAAc,EAAG,gBAAe,EAAG;AAG9D,SAAO;AACT;AAiBO,SAAS,0CAAa,MAAe;AAE1C,SAAO,KAAK,SAAS;IAAC,MAAM,KAAK,MAAM;EAAC,CAAA;AAC1C;AAOO,SAAS,0CAAW,MAAe;AACxC,SAAO,KAAK,IAAI;IAAC,MAAM,KAAK,SAAS,eAAe,IAAA,IAAQ,KAAK;EAAG,CAAA;AACtE;AAuDA,IAAM,sCAAgB,oBAAI,IAAA;AAC1B,IAAM,uCAAiB,oBAAI,IAAA;AAE3B,SAAS,gCAAU,QAAc;AAG/B,MAAI,KAAK,QAAQ;AAEf,QAAI,SAAS,oCAAc,IAAI,MAAA;AAC/B,QAAI,CAAC,QAAQ;AAEX,eAAS,IAAI,KAAK,OAAO,MAAA,EAAQ,SAAQ,EAAG;AAC5C,UAAI,OACF,qCAAc,IAAI,QAAQ,MAAA;IAE9B;AACA,WAAO;EACT;AAMA,MAAI,OAAO,OAAO,MAAM,GAAA,EAAK,CAAA;AAC7B,SAAO,SAAS,MAAM,SAAY;AACpC;AAEA,SAAS,mCAAa,QAAc;AAGlC,MAAI,WAAW,qCAAe,IAAI,MAAA;AAClC,MAAI,CAAC,UAAU;AACb,QAAI,KAAK,QAAQ;AAEf,UAAI,aAAa,IAAI,KAAK,OAAO,MAAA;AACjC,UAAI,iBAAiB,YAAY;AAE/B,mBAAW,WAAW,YAAW;AACjC,YAAI,UAAU;AACZ,+CAAe,IAAI,QAAQ,QAAA;AAC3B,iBAAO,SAAS;QAClB;MACF;IACF;AACA,QAAI,SAAS,gCAAU,MAAA;AACvB,QAAI,OAAO,SAAS,MAAA,GAAS;AAG3B,UAAI,MAAM,OAAO,MAAM,MAAA,EAAQ,CAAA,EAAG,MAAM,GAAA,EAAK,CAAA;AAC7C,UAAI,QAAQ,MACV,YAAW;QAAC,UAAU;MAAC;eACd,QAAQ,MACjB,YAAW;QAAC,UAAU;MAAC;eACd,QAAQ,MACjB,YAAW;QAAC,UAAU;MAAC;eACd,QAAQ,MACjB,YAAW;QAAC,UAAU;MAAC;eACd,QAAQ,MACjB,YAAW;QAAC,UAAU;MAAC;eACd,QAAQ,MACjB,YAAW;QAAC,UAAU;MAAC;UAEvB,YAAW;QAAC,UAAU;MAAC;IAE3B,WAAW,OAAO,SAAS,aAAA,EACzB,YAAW;MAAC,UAAU;IAAC;QAEvB,YAAW;MAAC,UAAU,UAAS,GAAA,2CAAc,MAAA,KAAW,IAAI;IAAC;AAE/D,yCAAe,IAAI,QAAQ,QAAA;EAC7B;AAEA,SAAO,SAAS;AAClB;;;ACnRO,SAAS,yCAAc,MAAiB;AAC7C,SAAO,0CAAW,MAAM,KAAI,GAAA,2CAAgB,CAAA;AAC5C,MAAI,QAAO,GAAA,2CAAgB,KAAK,KAAK,KAAK,IAAI;AAC9C,SAAO,qCAAe,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,WAAW;AACzG;AAEA,SAAS,qCAAe,MAAc,OAAe,KAAa,MAAc,QAAgB,QAAgB,aAAmB;AAGjI,MAAI,OAAO,oBAAI,KAAA;AACf,OAAK,YAAY,MAAM,QAAQ,QAAQ,WAAA;AACvC,OAAK,eAAe,MAAM,QAAQ,GAAG,GAAA;AACrC,SAAO,KAAK,QAAO;AACrB;AAEO,SAAS,0CAAkB,IAAY,UAAgB;AAE5D,MAAI,aAAa,MACf,QAAO;AAIT,MAAI,KAAK,KAAK,cAAa,GAAA,2CAAe,EACxC,QAAO,IAAI,KAAK,EAAA,EAAI,kBAAiB,IAA9B;AAGT,MAAI,EAAA,MAAK,OAAO,KAAK,MAAM,QAAQ,OAAQ,IAAI,uCAAiB,IAAI,QAAA;AACpE,MAAI,MAAM,qCAAe,MAAM,OAAO,KAAK,MAAM,QAAQ,QAAQ,CAAA;AACjE,SAAO,MAAM,KAAK,MAAM,KAAK,GAAA,IAAQ;AACvC;AAEA,IAAM,6CAAuB,oBAAI,IAAA;AAEjC,SAAS,uCAAiB,IAAY,UAAgB;AACpD,MAAI,YAAY,2CAAqB,IAAI,QAAA;AACzC,MAAI,CAAC,WAAW;AACd,gBAAY,IAAI,KAAK,eAAe,SAAS;;MAE3C,QAAQ;MACR,KAAK;MACL,MAAM;MACN,OAAO;MACP,KAAK;MACL,MAAM;MACN,QAAQ;MACR,QAAQ;IACV,CAAA;AAEA,+CAAqB,IAAI,UAAU,SAAA;EACrC;AAEA,MAAI,QAAQ,UAAU,cAAc,IAAI,KAAK,EAAA,CAAA;AAC7C,MAAI,aAAuC,CAAC;AAC5C,WAAS,QAAQ,MACf,KAAI,KAAK,SAAS,UAChB,YAAW,KAAK,IAAI,IAAI,KAAK;AAKjC,SAAO;;IAEL,MAAM,WAAW,QAAQ,QAAQ,WAAW,QAAQ,MAAM,CAAC,WAAW,OAAO,IAAI,CAAC,WAAW;IAC7F,OAAO,CAAC,WAAW;IACnB,KAAK,CAAC,WAAW;IACjB,MAAM,WAAW,SAAS,OAAO,IAAI,CAAC,WAAW;IACjD,QAAQ,CAAC,WAAW;IACpB,QAAQ,CAAC,WAAW;EACtB;AACF;AAEA,IAAM,kCAAY;AAEX,SAAS,0CAAkB,MAAwB,UAAgB;AACxE,MAAI,KAAK,yCAAc,IAAA;AACvB,MAAI,UAAU,KAAK,0CAAkB,KAAK,iCAAW,QAAA;AACrD,MAAI,QAAQ,KAAK,0CAAkB,KAAK,iCAAW,QAAA;AACnD,SAAO,wCAAkB,MAAM,UAAU,SAAS,KAAA;AACpD;AAEA,SAAS,wCAAkB,MAAwB,UAAkB,SAAiB,OAAa;AACjG,MAAI,QAAQ,YAAY,QAAQ;IAAC;MAAW;IAAC;IAAS;;AACtD,SAAO,MAAM,OAAO,CAAA,aAAY,sCAAgB,MAAM,UAAU,QAAA,CAAA;AAClE;AAEA,SAAS,sCAAgB,MAAwB,UAAkB,UAAgB;AACjF,MAAI,QAAQ,uCAAiB,UAAU,QAAA;AACvC,SAAO,KAAK,SAAS,MAAM,QACtB,KAAK,UAAU,MAAM,SACrB,KAAK,QAAQ,MAAM,OACnB,KAAK,SAAS,MAAM,QACpB,KAAK,WAAW,MAAM,UACtB,KAAK,WAAW,MAAM;AAC7B;AAEO,SAAS,0CAAW,MAAuC,UAAkB,iBAAiC,cAAY;AAC/H,MAAI,WAAW,0CAAmB,IAAA;AAGlC,MAAI,aAAa,MACf,QAAO,yCAAc,QAAA;AAIvB,MAAI,cAAa,GAAA,2CAAe,KAAO,mBAAmB,cAAc;AACtE,eAAW,0CAAW,UAAU,KAAI,GAAA,2CAAgB,CAAA;AAGpD,QAAIC,QAAO,oBAAI,KAAA;AACf,QAAI,QAAO,GAAA,2CAAgB,SAAS,KAAK,SAAS,IAAI;AACtD,IAAAA,MAAK,YAAY,MAAM,SAAS,QAAQ,GAAG,SAAS,GAAG;AACvD,IAAAA,MAAK,SAAS,SAAS,MAAM,SAAS,QAAQ,SAAS,QAAQ,SAAS,WAAW;AACnF,WAAOA,MAAK,QAAO;EACrB;AAEA,MAAI,KAAK,yCAAc,QAAA;AACvB,MAAI,eAAe,0CAAkB,KAAK,iCAAW,QAAA;AACrD,MAAI,cAAc,0CAAkB,KAAK,iCAAW,QAAA;AACpD,MAAI,QAAQ,wCAAkB,UAAU,UAAU,KAAK,cAAc,KAAK,WAAA;AAE1E,MAAI,MAAM,WAAW,EACnB,QAAO,MAAM,CAAA;AAGf,MAAI,MAAM,SAAS,EACjB,SAAQ,gBAAA;IAEN,KAAK;IACL,KAAK;AACH,aAAO,MAAM,CAAA;IACf,KAAK;AACH,aAAO,MAAM,MAAM,SAAS,CAAA;IAC9B,KAAK;AACH,YAAM,IAAI,WAAW,wCAAA;EACzB;AAGF,UAAQ,gBAAA;IACN,KAAK;AACH,aAAO,KAAK,IAAI,KAAK,cAAc,KAAK,WAAA;IAE1C,KAAK;IACL,KAAK;AACH,aAAO,KAAK,IAAI,KAAK,cAAc,KAAK,WAAA;IAC1C,KAAK;AACH,YAAM,IAAI,WAAW,6BAAA;EACzB;AACF;AAEO,SAAS,0CAAO,UAA2C,UAAkB,iBAAiC,cAAY;AAC/H,SAAO,IAAI,KAAK,0CAAW,UAAU,UAAU,cAAA,CAAA;AACjD;AAKO,SAAS,0CAAa,IAAY,UAAgB;AACvD,MAAIC,UAAS,0CAAkB,IAAI,QAAA;AACnC,MAAI,OAAO,IAAI,KAAK,KAAKA,OAAA;AACzB,MAAI,OAAO,KAAK,eAAc;AAC9B,MAAI,QAAQ,KAAK,YAAW,IAAK;AACjC,MAAI,MAAM,KAAK,WAAU;AACzB,MAAI,OAAO,KAAK,YAAW;AAC3B,MAAI,SAAS,KAAK,cAAa;AAC/B,MAAI,SAAS,KAAK,cAAa;AAC/B,MAAI,cAAc,KAAK,mBAAkB;AAEzC,SAAO,KAAI,GAAA,2CAAc,OAAO,IAAI,OAAO,MAAM,OAAO,IAAI,CAAC,OAAO,IAAI,MAAM,OAAO,KAAK,UAAUA,SAAQ,MAAM,QAAQ,QAAQ,WAAA;AACpI;AAcO,SAAS,0CAAe,UAAyB;AACtD,SAAO,KAAI,GAAA,2CAAa,SAAS,UAAU,SAAS,KAAK,SAAS,MAAM,SAAS,OAAO,SAAS,GAAG;AACtG;AAwBO,SAAS,0CAAmB,MAAuD,MAAc;AACtG,MAAI,OAAO,GAAG,SAAS,GAAG,SAAS,GAAG,cAAc;AACpD,MAAI,cAAc,KACf,EAAA,EAAA,MAAK,QAAQ,QAAQ,YAAa,IAAI;WAC9B,UAAU,QAAQ,CAAC,KAC5B,QAAO;AAGT,MAAI,KACD,EAAA,EAAA,MAAK,QAAQ,QAAQ,YAAa,IAAI;AAGzC,SAAO,KAAI,GAAA,2CACT,KAAK,UACL,KAAK,KACL,KAAK,MACL,KAAK,OACL,KAAK,KACL,MACA,QACA,QACA,WAAA;AAEJ;AAQO,SAAS,0CAAsC,MAAS,UAAkB;AAC/E,OAAI,GAAA,0CAAgB,KAAK,UAAU,QAAA,EACjC,QAAO;AAGT,MAAI,eAAe,SAAS,cAAc,KAAK,SAAS,YAAY,IAAA,CAAA;AACpE,MAAI,OAAmB,KAAK,KAAI;AAChC,OAAK,WAAW;AAChB,OAAK,MAAM,aAAa;AACxB,OAAK,OAAO,aAAa;AACzB,OAAK,QAAQ,aAAa;AAC1B,OAAK,MAAM,aAAa;AACxB,GAAA,GAAA,2CAAU,IAAA;AACV,SAAO;AACT;AAMO,SAAS,0CAAQ,MAAuD,UAAkB,gBAA+B;AAC9H,MAAI,iBAAgB,GAAA,4CAAe;AACjC,QAAI,KAAK,aAAa,SACpB,QAAO;AAGT,WAAO,0CAAW,MAAM,QAAA;EAC1B;AAEA,MAAI,KAAK,0CAAW,MAAM,UAAU,cAAA;AACpC,SAAO,0CAAa,IAAI,QAAA;AAC1B;AAEO,SAAS,yCAAY,MAAmB;AAC7C,MAAI,KAAK,yCAAc,IAAA,IAAQ,KAAK;AACpC,SAAO,IAAI,KAAK,EAAA;AAClB;AAGO,SAAS,0CAAW,MAAqB,UAAgB;AAC9D,MAAI,KAAK,yCAAc,IAAA,IAAQ,KAAK;AACpC,SAAO,0CAAW,0CAAa,IAAI,QAAA,GAAW,KAAK,QAAQ;AAC7D;;;AC7RA,IAAM,iCAAW;AAKV,SAAS,0CAAI,MAAuC,UAA0B;AACnF,MAAI,cAAsD,KAAK,KAAI;AACnE,MAAI,OAAO,UAAU,cAAc,oCAAc,aAAa,QAAA,IAAY;AAE1E,iCAAS,aAAa,SAAS,SAAS,CAAA;AACxC,MAAI,YAAY,SAAS,iBACvB,aAAY,SAAS,iBAAiB,aAAa,IAAA;AAGrD,cAAY,SAAS,SAAS,UAAU;AAExC,yCAAiB,WAAA;AACjB,0CAAkB,WAAA;AAElB,cAAY,QAAQ,SAAS,SAAS,KAAK;AAC3C,cAAY,OAAO,SAAS,QAAQ;AACpC,cAAY,OAAO;AAEnB,mCAAW,WAAA;AAEX,MAAI,YAAY,SAAS,YACvB,aAAY,SAAS,YAAY,WAAA;AAOnC,MAAI,YAAY,OAAO,GAAG;AACxB,gBAAY,OAAO;AACnB,gBAAY,QAAQ;AACpB,gBAAY,MAAM;EACpB;AAEA,MAAI,UAAU,YAAY,SAAS,cAAc,WAAA;AACjD,MAAI,YAAY,OAAO,SAAS;QACX,oCAAA;AAAnB,QAAI,gBAAe,sCAAA,wBAAA,YAAY,UAAS,kBAAY,QAAjC,uCAAA,SAAA,SAAA,mCAAA,KAAA,uBAAoC,WAAA;AACvD,gBAAY,OAAO;AACnB,gBAAY,QAAQ,eAAe,IAAI,YAAY,SAAS,gBAAgB,WAAA;AAC5E,gBAAY,MAAM,eAAe,IAAI,YAAY,SAAS,eAAe,WAAA;EAC3E;AAEA,MAAI,YAAY,QAAQ,GAAG;AACzB,gBAAY,QAAQ;AACpB,gBAAY,MAAM;EACpB;AAEA,MAAI,WAAW,YAAY,SAAS,gBAAgB,WAAA;AACpD,MAAI,YAAY,QAAQ,UAAU;AAChC,gBAAY,QAAQ;AACpB,gBAAY,MAAM,YAAY,SAAS,eAAe,WAAA;EACxD;AAEA,cAAY,MAAM,KAAK,IAAI,GAAG,KAAK,IAAI,YAAY,SAAS,eAAe,WAAA,GAAc,YAAY,GAAG,CAAA;AACxG,SAAO;AACT;AAEA,SAAS,+BAAS,MAAgC,OAAa;MACzD,6BAAA;AAAJ,OAAI,+BAAA,iBAAA,KAAK,UAAS,kBAAY,QAA1B,gCAAA,SAAA,SAAA,4BAAA,KAAA,gBAA6B,IAAA,EAC/B,SAAQ,CAAC;AAGX,OAAK,QAAQ;AACf;AAEA,SAAS,uCAAiB,MAA8B;AACtD,SAAO,KAAK,QAAQ,GAAG;AACrB,mCAAS,MAAM,EAAA;AACf,SAAK,SAAS,KAAK,SAAS,gBAAgB,IAAA;EAC9C;AAEA,MAAI,eAAe;AACnB,SAAO,KAAK,SAAS,eAAe,KAAK,SAAS,gBAAgB,IAAA,IAAQ;AACxE,SAAK,SAAS;AACd,mCAAS,MAAM,CAAA;EACjB;AACF;AAEA,SAAS,iCAAW,MAA8B;AAChD,SAAO,KAAK,MAAM,GAAG;AACnB,SAAK;AACL,2CAAiB,IAAA;AACjB,SAAK,OAAO,KAAK,SAAS,eAAe,IAAA;EAC3C;AAEA,SAAO,KAAK,MAAM,KAAK,SAAS,eAAe,IAAA,GAAO;AACpD,SAAK,OAAO,KAAK,SAAS,eAAe,IAAA;AACzC,SAAK;AACL,2CAAiB,IAAA;EACnB;AACF;AAEA,SAAS,wCAAkB,MAA8B;AACvD,OAAK,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,SAAS,gBAAgB,IAAA,GAAO,KAAK,KAAK,CAAA;AACjF,OAAK,MAAM,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,SAAS,eAAe,IAAA,GAAO,KAAK,GAAG,CAAA;AAC9E;AAEO,SAAS,0CAAU,MAA8B;AACtD,MAAI,KAAK,SAAS,cAChB,MAAK,SAAS,cAAc,IAAA;AAG9B,OAAK,OAAO,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,SAAS,cAAc,IAAA,GAAO,KAAK,IAAI,CAAA;AAC7E,0CAAkB,IAAA;AACpB;AAEO,SAAS,0CAAe,UAA0B;AACvD,MAAI,kBAAkB,CAAC;AACvB,WAAS,OAAO,SACd,KAAI,OAAO,SAAS,GAAA,MAAS,SAC3B,iBAAgB,GAAA,IAAO,CAAC,SAAS,GAAA;AAIrC,SAAO;AACT;AAIO,SAAS,0CAAS,MAAuC,UAA0B;AACxF,SAAO,0CAAI,MAAM,0CAAe,QAAA,CAAA;AAClC;AAIO,SAAS,0CAAI,MAAuC,QAAkB;AAC3E,MAAI,cAAwC,KAAK,KAAI;AAErD,MAAI,OAAO,OAAO,KAChB,aAAY,MAAM,OAAO;AAG3B,MAAI,OAAO,QAAQ,KACjB,aAAY,OAAO,OAAO;AAG5B,MAAI,OAAO,SAAS,KAClB,aAAY,QAAQ,OAAO;AAG7B,MAAI,OAAO,OAAO,KAChB,aAAY,MAAM,OAAO;AAG3B,4CAAU,WAAA;AACV,SAAO;AACT;AAIO,SAAS,0CAAQ,OAAgC,QAAkB;AACxE,MAAI,eAAiD,MAAM,KAAI;AAE/D,MAAI,OAAO,QAAQ,KACjB,cAAa,OAAO,OAAO;AAG7B,MAAI,OAAO,UAAU,KACnB,cAAa,SAAS,OAAO;AAG/B,MAAI,OAAO,UAAU,KACnB,cAAa,SAAS,OAAO;AAG/B,MAAI,OAAO,eAAe,KACxB,cAAa,cAAc,OAAO;AAGpC,4CAAc,YAAA;AACd,SAAO;AACT;AAEA,SAAS,kCAAY,MAAsB;AACzC,OAAK,UAAU,KAAK,MAAM,KAAK,cAAc,GAAA;AAC7C,OAAK,cAAc,qCAAe,KAAK,aAAa,GAAA;AAEpD,OAAK,UAAU,KAAK,MAAM,KAAK,SAAS,EAAA;AACxC,OAAK,SAAS,qCAAe,KAAK,QAAQ,EAAA;AAE1C,OAAK,QAAQ,KAAK,MAAM,KAAK,SAAS,EAAA;AACtC,OAAK,SAAS,qCAAe,KAAK,QAAQ,EAAA;AAE1C,MAAI,OAAO,KAAK,MAAM,KAAK,OAAO,EAAA;AAClC,OAAK,OAAO,qCAAe,KAAK,MAAM,EAAA;AAEtC,SAAO;AACT;AAEO,SAAS,0CAAc,MAAsB;AAClD,OAAK,cAAc,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,aAAa,GAAA,CAAA;AAC1D,OAAK,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,QAAQ,EAAA,CAAA;AAChD,OAAK,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,QAAQ,EAAA,CAAA;AAChD,OAAK,OAAO,KAAK,IAAI,GAAG,KAAK,IAAI,KAAK,MAAM,EAAA,CAAA;AAC9C;AAEA,SAAS,qCAAe,GAAW,GAAS;AAC1C,MAAI,SAAS,IAAI;AACjB,MAAI,SAAS,EACX,WAAU;AAEZ,SAAO;AACT;AAEA,SAAS,oCAAc,MAAwB,UAAsB;AACnE,OAAK,QAAQ,SAAS,SAAS;AAC/B,OAAK,UAAU,SAAS,WAAW;AACnC,OAAK,UAAU,SAAS,WAAW;AACnC,OAAK,eAAe,SAAS,gBAAgB;AAC7C,SAAO,kCAAY,IAAA;AACrB;AAEO,SAAS,0CAAQ,MAAY,UAAsB;AACxD,MAAI,MAAM,KAAK,KAAI;AACnB,sCAAc,KAAK,QAAA;AACnB,SAAO;AACT;AAEO,SAAS,0CAAa,MAAY,UAAsB;AAC7D,SAAO,0CAAQ,MAAM,0CAAe,QAAA,CAAA;AACtC;AAIO,SAAS,0CAAU,OAAwC,OAAkB,QAAgB,SAAsB;AACxH,MAAI,UAAoD,MAAM,KAAI;AAElE,UAAQ,OAAA;IACN,KAAK,OAAO;AACV,UAAI,OAAO,MAAM,SAAS,QAAO;AACjC,UAAI,WAAW,KAAK,QAAQ,MAAM,GAAG;AACrC,UAAI,WAAW,EACb,OAAM,IAAI,MAAM,kBAAkB,MAAM,GAAG;AAE7C,iBAAW,iCAAW,UAAU,QAAQ,GAAG,KAAK,SAAS,GAAG,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK;AAC1E,cAAQ,MAAM,KAAK,QAAA;AAGnB,gDAAU,OAAA;AACV;IACF;IACA,KAAK;UACC,gCAAA;AAAJ,WAAI,kCAAA,oBAAA,QAAQ,UAAS,kBAAY,QAA7B,mCAAA,SAAA,SAAA,+BAAA,KAAA,mBAAgC,OAAA,EAClC,UAAS,CAAC;AAMZ,cAAQ,OAAO,iCAAW,MAAM,MAAM,QAAQ,WAAW,MAAM,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK;AAC7E,UAAI,QAAQ,SAAS,UACnB,SAAQ,OAAO;AAGjB,UAAI,QAAQ,SAAS,iBACnB,SAAQ,SAAS,iBAAiB,SAAS,KAAA;AAE7C;IAEF,KAAK;AACH,cAAQ,QAAQ,iCAAW,MAAM,OAAO,QAAQ,GAAG,MAAM,SAAS,gBAAgB,KAAA,GAAQ,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK;AACxG;IACF,KAAK;AACH,cAAQ,MAAM,iCAAW,MAAM,KAAK,QAAQ,GAAG,MAAM,SAAS,eAAe,KAAA,GAAQ,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK;AACnG;IACF;AACE,YAAM,IAAI,MAAM,uBAAuB,KAAA;EAC3C;AAEA,MAAI,MAAM,SAAS,YACjB,OAAM,SAAS,YAAY,OAAA;AAG7B,4CAAU,OAAA;AACV,SAAO;AACT;AAIO,SAAS,0CAAU,OAAgC,OAAkB,QAAgB,SAA0B;AACpH,MAAI,UAA4C,MAAM,KAAI;AAE1D,UAAQ,OAAA;IACN,KAAK,QAAQ;AACX,UAAI,QAAQ,MAAM;AAClB,UAAIC,OAAM;AACV,UAAIC,OAAM;AACV,WAAI,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,eAAc,IAAI;AAC7B,YAAI,OAAO,SAAS;AACpB,QAAAD,OAAM,OAAO,KAAK;AAClB,QAAAC,OAAM,OAAO,KAAK;MACpB;AACA,cAAQ,OAAO,iCAAW,OAAO,QAAQD,MAAKC,MAAK,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK;AACjE;IACF;IACA,KAAK;AACH,cAAQ,SAAS,iCAAW,MAAM,QAAQ,QAAQ,GAAG,IAAI,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK;AACvE;IACF,KAAK;AACH,cAAQ,SAAS,iCAAW,MAAM,QAAQ,QAAQ,GAAG,IAAI,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK;AACvE;IACF,KAAK;AACH,cAAQ,cAAc,iCAAW,MAAM,aAAa,QAAQ,GAAG,KAAK,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK;AAClF;IACF;AACE,YAAM,IAAI,MAAM,uBAAuB,KAAA;EAC3C;AAEA,SAAO;AACT;AAEA,SAAS,iCAAW,OAAe,QAAgBD,MAAaC,MAAaC,SAAQ,OAAK;AACxF,MAAIA,QAAO;AACT,aAAS,KAAK,KAAK,MAAA;AAEnB,QAAI,QAAQF,KACV,SAAQC;AAGV,QAAI,MAAM,KAAK,IAAI,MAAA;AACnB,QAAI,SAAS,EACX,SAAQ,KAAK,KAAK,QAAQ,GAAA,IAAO;QAEjC,SAAQ,KAAK,MAAM,QAAQ,GAAA,IAAO;AAGpC,QAAI,QAAQA,KACV,SAAQD;EAEZ,OAAO;AACL,aAAS;AACT,QAAI,QAAQA,KACV,SAAQC,QAAOD,OAAM,QAAQ;aACpB,QAAQC,KACjB,SAAQD,QAAO,QAAQC,OAAM;EAEjC;AAEA,SAAO;AACT;AAEO,SAAS,0CAAS,UAAyB,UAA0B;AAC1E,MAAI;AACJ,MAAK,SAAS,SAAS,QAAQ,SAAS,UAAU,KAAO,SAAS,UAAU,QAAQ,SAAS,WAAW,KAAO,SAAS,SAAS,QAAQ,SAAS,UAAU,KAAO,SAAS,QAAQ,QAAQ,SAAS,SAAS,GAAI;AAChN,QAAIE,OAAM,2CAAI,GAAA,2CAAmB,QAAA,GAAW;MAC1C,OAAO,SAAS;MAChB,QAAQ,SAAS;MACjB,OAAO,SAAS;MAChB,MAAM,SAAS;IACjB,CAAA;AAIA,UAAK,GAAA,2CAAWA,MAAK,SAAS,QAAQ;EACxC;AAEE,UAAK,GAAA,0CAAc,QAAA,IAAY,SAAS;AAM1C,QAAM,SAAS,gBAAgB;AAC/B,SAAO,SAAS,WAAW,KAAK;AAChC,SAAO,SAAS,WAAW,KAArB;AACN,SAAO,SAAS,SAAS,KAAnB;AAEN,MAAI,OAAM,GAAA,2CAAa,IAAI,SAAS,QAAQ;AAC5C,UAAO,GAAA,2CAAW,KAAK,SAAS,QAAQ;AAC1C;AAEO,SAAS,0CAAc,UAAyB,UAA0B;AAC/E,SAAO,0CAAS,UAAU,0CAAe,QAAA,CAAA;AAC3C;AAEO,SAAS,0CAAW,UAAyB,OAA8B,QAAgB,SAA0B;AAI1H,UAAQ,OAAA;IACN,KAAK,QAAQ;AACX,UAAIH,OAAM;AACV,UAAIC,OAAM;AACV,WAAI,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,eAAc,IAAI;AAC7B,YAAI,OAAO,SAAS,QAAQ;AAC5B,QAAAD,OAAM,OAAO,KAAK;AAClB,QAAAC,OAAM,OAAO,KAAK;MACpB;AAOA,UAAI,iBAAgB,GAAA,2CAAmB,QAAA;AACvC,UAAI,WAAU,GAAA,2CAAW,0CAAQ,eAAe;QAAC,MAAMD;MAAG,CAAA,GAAI,KAAI,GAAA,2CAAgB,CAAA;AAClF,UAAI,cAAc;SAAC,GAAA,2CAAW,SAAS,SAAS,UAAU,SAAA;SAAY,GAAA,2CAAW,SAAS,SAAS,UAAU,OAAA;QAC1G,OAAO,CAAAI,SAAM,GAAA,2CAAaA,KAAI,SAAS,QAAQ,EAAE,QAAQ,QAAQ,GAAG,EAAE,CAAA;AAEzE,UAAI,WAAU,GAAA,2CAAW,0CAAQ,eAAe;QAAC,MAAMH;MAAG,CAAA,GAAI,KAAI,GAAA,2CAAgB,CAAA;AAClF,UAAI,cAAc;SAAC,GAAA,2CAAW,SAAS,SAAS,UAAU,SAAA;SAAY,GAAA,2CAAW,SAAS,SAAS,UAAU,OAAA;QAC1G,OAAO,CAAAG,SAAM,GAAA,2CAAaA,KAAI,SAAS,QAAQ,EAAE,QAAQ,QAAQ,GAAG,EAAE,IAAG;AAK5E,UAAI,MAAK,GAAA,0CAAc,QAAA,IAAY,SAAS;AAC5C,UAAI,QAAQ,KAAK,MAAM,KAAK,8BAAA;AAC5B,UAAI,YAAY,KAAK;AACrB,WAAK,iCACH,OACA,QACA,KAAK,MAAM,cAAc,8BAAA,GACzB,KAAK,MAAM,cAAc,8BAAA,GACzB,YAAA,QAAA,YAAA,SAAA,SAAA,QAAS,KAAK,IACZ,iCAAW;AAGf,cAAO,GAAA,4CAAW,GAAA,2CAAa,IAAI,SAAS,QAAQ,GAAG,SAAS,QAAQ;IAC1E;IACA,KAAK;IACL,KAAK;IACL,KAAK;AAEH,aAAO,0CAAU,UAAU,OAAO,QAAQ,OAAA;IAC5C,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK,OAAO;AACV,UAAI,MAAM,2CAAU,GAAA,2CAAmB,QAAA,GAAW,OAAO,QAAQ,OAAA;AACjE,UAAI,MAAK,GAAA,2CAAW,KAAK,SAAS,QAAQ;AAC1C,cAAO,GAAA,4CAAW,GAAA,2CAAa,IAAI,SAAS,QAAQ,GAAG,SAAS,QAAQ;IAC1E;IACA;AACE,YAAM,IAAI,MAAM,uBAAuB,KAAA;EAC3C;AACF;AAEO,SAAS,0CAAS,UAAyB,QAAiC,gBAA+B;AAGhH,MAAI,iBAAgB,GAAA,2CAAmB,QAAA;AACvC,MAAI,MAAM,0CAAQ,0CAAI,eAAe,MAAA,GAAS,MAAA;AAI9C,MAAI,IAAI,QAAQ,aAAA,MAAmB,EACjC,QAAO;AAGT,MAAI,MAAK,GAAA,2CAAW,KAAK,SAAS,UAAU,cAAA;AAC5C,UAAO,GAAA,4CAAW,GAAA,2CAAa,IAAI,SAAS,QAAQ,GAAG,SAAS,QAAQ;AAC1E;;;ACvcA,IAAM,gCAAU;AAChB,IAAM,qCAAe;AACrB,IAAM,2CAAqB;AAI3B,IAAM,mDAA6B;EAAC;EAAS;EAAW;;AACxD,IAAM,+CAAyB;EAAC;EAAS;EAAU;EAAS;KAAW;;AAkBhE,SAAS,yCAAU,OAAa;AACrC,MAAI,IAAI,MAAM,MAAM,6BAAA;AACpB,MAAI,CAAC,EACH,OAAM,IAAI,MAAM,mCAAmC,KAAA;AAGrD,MAAI,OAA8B,KAAI,GAAA,2CACpC,kCAAY,EAAE,CAAA,GAAI,GAAG,IAAA,GACrB,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,GACrB,CAAA;AAGF,OAAK,MAAM,kCAAY,EAAE,CAAA,GAAI,GAAG,KAAK,SAAS,eAAe,IAAA,CAAA;AAC7D,SAAO;AACT;AAGO,SAAS,0CAAc,OAAa;AACzC,MAAI,IAAI,MAAM,MAAM,kCAAA;AACpB,MAAI,CAAC,EACH,OAAM,IAAI,MAAM,wCAAwC,KAAA;AAG1D,MAAI,OAAO,kCAAY,EAAE,CAAA,GAAI,OAAO,IAAA;AACpC,MAAI,MAAM,OAAO,IAAI,OAAO;AAE5B,MAAI,OAAkC,KAAI,GAAA,2CACxC,KACA,OAAO,IAAI,CAAC,OAAO,IAAI,MACvB,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,GACrB,GACA,EAAE,CAAA,IAAK,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,IAAM,GAClC,EAAE,CAAA,IAAK,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,IAAM,GAClC,EAAE,CAAA,IAAK,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,IAAM,GAClC,EAAE,CAAA,IAAK,kCAAY,EAAE,CAAA,GAAI,GAAG,QAAA,IAAY,MAAO,CAAA;AAGjD,OAAK,MAAM,kCAAY,EAAE,CAAA,GAAI,GAAG,KAAK,SAAS,eAAe,IAAA,CAAA;AAC7D,SAAO;AACT;AAQO,SAAS,0CAAmB,OAAe,gBAA+B;AAC/E,MAAI,IAAI,MAAM,MAAM,wCAAA;AACpB,MAAI,CAAC,EACH,OAAM,IAAI,MAAM,wCAAwC,KAAA;AAG1D,MAAI,OAAO,kCAAY,EAAE,CAAA,GAAI,OAAO,IAAA;AACpC,MAAI,MAAM,OAAO,IAAI,OAAO;AAE5B,MAAI,OAA+B,KAAI,GAAA,2CACrC,KACA,OAAO,IAAI,CAAC,OAAO,IAAI,MACvB,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,GACrB,GACA,EAAE,EAAA,GACF,GACA,EAAE,CAAA,IAAK,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,IAAM,GAClC,EAAE,CAAA,IAAK,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,IAAM,GAClC,EAAE,CAAA,IAAK,kCAAY,EAAE,CAAA,GAAI,GAAG,EAAA,IAAM,GAClC,EAAE,CAAA,IAAK,kCAAY,EAAE,CAAA,GAAI,GAAG,QAAA,IAAY,MAAO,CAAA;AAGjD,OAAK,MAAM,kCAAY,EAAE,CAAA,GAAI,GAAG,KAAK,SAAS,eAAe,IAAA,CAAA;AAE7D,MAAI,iBAAgB,GAAA,2CAAmB,IAAA;AAEvC,MAAI;AACJ,MAAI,EAAE,CAAA,GAAI;AACR,QAAI,aAAa,kCAAY,EAAE,CAAA,GAAI,KAAK,EAAA;QACmD,KAA8C;AAAzI,SAAK,SAAS,KAAK,KAAK,UAAA,KAAe,KAAK,IAAI,UAAA,IAAT,OAAwC,mCAAY,MAAA,EAAE,CAAA,OAAE,QAAJ,QAAA,SAAA,MAAQ,KAAK,GAAG,EAAA,IAA5B,MAA8C,mCAAY,OAAA,EAAE,EAAA,OAAG,QAAL,SAAA,SAAA,OAAS,KAAK,GAAG,EAAA,IAAM;AAChK,UAAK,GAAA,0CAAc,IAAA,IAAyB,KAAK;AAGjD,QAAI,aAAY,GAAA,2CAAkB,eAAe,KAAK,QAAQ;AAC9D,QAAI,CAAC,UAAU,SAAS,EAAA,EACtB,OAAM,IAAI,MAAM,UAAU,qCAAe,KAAK,MAAM,CAAA,mBAAoB,0CAAiB,IAAA,CAAA,OAAY,KAAK,QAAQ,EAAE;EAExH;AAEE,UAAK,GAAA,4CAAW,GAAA,2CAAmB,aAAA,GAAgB,KAAK,UAAU,cAAA;AAGpE,UAAO,GAAA,2CAAa,IAAI,KAAK,QAAQ;AACvC;AA6CA,SAAS,kCAAY,OAAeC,MAAaC,MAAW;AAC1D,MAAI,MAAM,OAAO,KAAA;AACjB,MAAI,MAAMD,QAAO,MAAMC,KACrB,OAAM,IAAI,WAAW,uBAAuBD,IAAA,OAAU,GAAA,OAAUC,IAAA,EAAK;AAGvE,SAAO;AACT;AAEO,SAAS,0CAAa,MAAU;AACrC,SAAO,GAAG,OAAO,KAAK,IAAI,EAAE,SAAS,GAAG,GAAA,CAAA,IAAQ,OAAO,KAAK,MAAM,EAAE,SAAS,GAAG,GAAA,CAAA,IAAQ,OAAO,KAAK,MAAM,EAAE,SAAS,GAAG,GAAA,CAAA,GAAO,KAAK,cAAc,OAAO,KAAK,cAAc,GAAA,EAAM,MAAM,CAAA,IAAK,EAAA;AAC/L;AAEO,SAAS,0CAAa,MAAkB;AAC7C,MAAI,iBAAgB,GAAA,2CAAW,MAAM,KAAI,GAAA,2CAAgB,CAAA;AACzD,MAAI;AACJ,MAAI,cAAc,QAAQ,KACxB,QAAO,cAAc,SAAS,IAC1B,SACA,MAAM,OAAO,KAAK,IAAI,IAAI,cAAc,IAAI,CAAA,EAAG,SAAS,GAAG,IAAA;MAE/D,QAAO,OAAO,cAAc,IAAI,EAAE,SAAS,GAAG,GAAA;AAEhD,SAAO,GAAG,IAAA,IAAQ,OAAO,cAAc,KAAK,EAAE,SAAS,GAAG,GAAA,CAAA,IAAQ,OAAO,cAAc,GAAG,EAAE,SAAS,GAAG,GAAA,CAAA;AAC1G;AAEO,SAAS,0CAAiB,MAAiB;AAEhD,SAAO,GAAG,0CAAa,IAAA,CAAA,IAAS,0CAAa,IAAA,CAAA;AAC/C;AAEA,SAAS,qCAAeC,SAAc;AACpC,MAAI,OAAO,KAAK,KAAKA,OAAA,IAAU,IAAI,MAAM;AACzC,EAAAA,UAAS,KAAK,IAAIA,OAAA;AAClB,MAAI,cAAc,KAAK,MAAMA,UAAU,IAAA;AACvC,MAAI,gBAAgB,KAAK,MAAOA,UAAU,OAAoB,GAAA;AAC9D,MAAI,gBAAgB,KAAK,MAAOA,UAAU,OAAoB,MAAa,GAAA;AAC3E,MAAI,eAAe,GAAG,IAAA,GAAO,OAAO,WAAA,EAAa,SAAS,GAAG,GAAA,CAAA,IAAQ,OAAO,aAAA,EAAe,SAAS,GAAG,GAAA,CAAA;AACvG,MAAI,kBAAkB,EACpB,iBAAgB,IAAI,OAAO,aAAA,EAAe,SAAS,GAAG,GAAA,CAAA;AAGxD,SAAO;AACT;AAEO,SAAS,0CAAsB,MAAmB;AACvD,SAAO,GAAG,0CAAiB,IAAA,CAAA,GAAQ,qCAAe,KAAK,MAAM,CAAA,IAAK,KAAK,QAAQ;AACjF;;;ACnOA,SAAS,6BAA6B,KAAK,mBAAmB;AAC1D,MAAI,kBAAkB,IAAI,GAAG,GAAG;AAC5B,UAAM,IAAI,UAAU,gEAAgE;AAAA,EACxF;AACJ;;;ACFA,SAAS,0BAA0B,KAAK,YAAY,OAAO;AACvD,+BAA6B,KAAK,UAAU;AAC5C,aAAW,IAAI,KAAK,KAAK;AAC7B;;;ACcA,SAAS,gCAAU,MAAW;AAC5B,MAAI,WAAqB,OAAO,KAAK,CAAA,MAAO,WACxC,KAAK,MAAK,IACV,KAAI,GAAA,2CAAgB;AAExB,MAAI;AACJ,MAAI,OAAO,KAAK,CAAA,MAAO,SACrB,OAAM,KAAK,MAAK;OACX;AACL,QAAI,OAAO,SAAS,QAAO;AAC3B,UAAM,KAAK,KAAK,SAAS,CAAA;EAC3B;AAEA,MAAI,OAAO,KAAK,MAAK;AACrB,MAAI,QAAQ,KAAK,MAAK;AACtB,MAAI,MAAM,KAAK,MAAK;AAEpB,SAAO;IAAC;IAAU;IAAK;IAAM;IAAO;;AACtC;IAQE,8BAAA,oBAAA,QAAA;AALK,IAAM,4CAAN,MAAM,2CAAA;;EAqCX,OAAqB;AACnB,QAAI,KAAK,IACP,QAAO,IAAI,2CAAa,KAAK,UAAU,KAAK,KAAK,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG;QAEhF,QAAO,IAAI,2CAAa,KAAK,UAAU,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG;EAE1E;;EAGA,IAAI,UAAsC;AACxC,YAAO,GAAA,2CAAI,MAAM,QAAA;EACnB;;EAGA,SAAS,UAAsC;AAC7C,YAAO,GAAA,2CAAS,MAAM,QAAA;EACxB;;EAGA,IAAI,QAAkC;AACpC,YAAO,GAAA,2CAAI,MAAM,MAAA;EACnB;;;;;EAMA,MAAM,OAAkB,QAAgB,SAAsC;AAC5E,YAAO,GAAA,2CAAU,MAAM,OAAO,QAAQ,OAAA;EACxC;;EAGA,OAAO,UAAwB;AAC7B,YAAO,GAAA,2CAAO,MAAM,QAAA;EACtB;;EAGA,WAAmB;AACjB,YAAO,GAAA,2CAAa,IAAI;EAC1B;;EAGA,QAAQ,GAA4B;AAClC,YAAO,GAAA,2CAAY,MAAM,CAAA;EAC3B;EAxDA,eAAe,MAAa;AApB5B,KAAA,GAAA,2BAAA,MAAA,6BAAA;;aAAA;;AAqBE,QAAI,CAAC,UAAU,KAAK,MAAM,OAAO,GAAA,IAAO,gCAAU,IAAA;AAClD,SAAK,WAAW;AAChB,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,MAAM;AAEX,KAAA,GAAA,2CAAU,IAAI;EAChB;AAgDF;IAME,+BAAA,oBAAA,QAAA;AAHK,IAAM,2CAAN,MAAM,0CAAA;;EA2BX,OAAa;AACX,WAAO,IAAI,0CAAK,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,WAAW;EACvE;;EAGA,IAAI,UAA8B;AAChC,YAAO,GAAA,2CAAQ,MAAM,QAAA;EACvB;;EAGA,SAAS,UAA8B;AACrC,YAAO,GAAA,2CAAa,MAAM,QAAA;EAC5B;;EAGA,IAAI,QAA0B;AAC5B,YAAO,GAAA,2CAAQ,MAAM,MAAA;EACvB;;;;;EAMA,MAAM,OAAkB,QAAgB,SAAkC;AACxE,YAAO,GAAA,2CAAU,MAAM,OAAO,QAAQ,OAAA;EACxC;;EAGA,WAAmB;AACjB,YAAO,GAAA,2CAAa,IAAI;EAC1B;;EAGA,QAAQ,GAAoB;AAC1B,YAAO,GAAA,2CAAY,MAAM,CAAA;EAC3B;EAjDA,YACE,OAAe,GACf,SAAiB,GACjB,SAAiB,GACjB,cAAsB,GACtB;AAfF,KAAA,GAAA,2BAAA,MAAA,8BAAA;;aAAA;;AAgBE,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,cAAc;AACnB,KAAA,GAAA,2CAAc,IAAI;EACpB;AAuCF;IAME,+BAAA,oBAAA,QAAA;AAHK,IAAM,4CAAN,MAAM,2CAAA;;EA+CX,OAAyB;AACvB,QAAI,KAAK,IACP,QAAO,IAAI,2CAAiB,KAAK,UAAU,KAAK,KAAK,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,WAAW;QAE3I,QAAO,IAAI,2CAAiB,KAAK,UAAU,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,WAAW;EAErI;;EAGA,IAAI,UAA8C;AAChD,YAAO,GAAA,2CAAI,MAAM,QAAA;EACnB;;EAGA,SAAS,UAA8C;AACrD,YAAO,GAAA,2CAAS,MAAM,QAAA;EACxB;;EAGA,IAAI,QAAmD;AACrD,YAAO,GAAA,4CAAI,GAAA,2CAAQ,MAAM,MAAA,GAAS,MAAA;EACpC;;;;;EAMA,MAAM,OAA8B,QAAgB,SAA8C;AAChG,YAAQ,OAAA;MACN,KAAK;MACL,KAAK;MACL,KAAK;MACL,KAAK;AACH,gBAAO,GAAA,2CAAU,MAAM,OAAO,QAAQ,OAAA;MACxC;AACE,gBAAO,GAAA,2CAAU,MAAM,OAAO,QAAQ,OAAA;IAC1C;EACF;;EAGA,OAAO,UAAkB,gBAAuC;AAC9D,YAAO,GAAA,2CAAO,MAAM,UAAU,cAAA;EAChC;;EAGA,WAAmB;AACjB,YAAO,GAAA,2CAAiB,IAAI;EAC9B;;EAGA,QAAQ,GAA4D;AAClE,QAAI,OAAM,GAAA,2CAAY,MAAM,CAAA;AAC5B,QAAI,QAAQ,EACV,SAAO,GAAA,2CAAY,OAAM,GAAA,2CAAmB,CAAA,CAAA;AAG9C,WAAO;EACT;EAzEA,eAAe,MAAa;AA5B5B,KAAA,GAAA,2BAAA,MAAA,8BAAA;;aAAA;;AA6BE,QAAI,CAAC,UAAU,KAAK,MAAM,OAAO,GAAA,IAAO,gCAAU,IAAA;AAClD,SAAK,WAAW;AAChB,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,MAAM;AACX,SAAK,OAAO,KAAK,MAAK,KAAM;AAC5B,SAAK,SAAS,KAAK,MAAK,KAAM;AAC9B,SAAK,SAAS,KAAK,MAAK,KAAM;AAC9B,SAAK,cAAc,KAAK,MAAK,KAAM;AAEnC,KAAA,GAAA,2CAAU,IAAI;EAChB;AA6DF;IAME,+BAAA,oBAAA,QAAA;AAHK,IAAM,4CAAN,MAAM,2CAAA;;EAuDX,OAAsB;AACpB,QAAI,KAAK,IACP,QAAO,IAAI,2CAAc,KAAK,UAAU,KAAK,KAAK,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,UAAU,KAAK,QAAQ,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,WAAW;QAEpK,QAAO,IAAI,2CAAc,KAAK,UAAU,KAAK,MAAM,KAAK,OAAO,KAAK,KAAK,KAAK,UAAU,KAAK,QAAQ,KAAK,MAAM,KAAK,QAAQ,KAAK,QAAQ,KAAK,WAAW;EAE9J;;EAGA,IAAI,UAA2C;AAC7C,YAAO,GAAA,2CAAS,MAAM,QAAA;EACxB;;EAGA,SAAS,UAA2C;AAClD,YAAO,GAAA,2CAAc,MAAM,QAAA;EAC7B;;EAGA,IAAI,QAAiC,gBAAgD;AACnF,YAAO,GAAA,2CAAS,MAAM,QAAQ,cAAA;EAChC;;;;;EAMA,MAAM,OAA8B,QAAgB,SAA2C;AAC7F,YAAO,GAAA,2CAAW,MAAM,OAAO,QAAQ,OAAA;EACzC;;EAGA,SAAe;AACb,YAAO,GAAA,0CAAY,IAAI;EACzB;;EAGA,WAAmB;AACjB,YAAO,GAAA,2CAAsB,IAAI;EACnC;;EAGA,mBAA2B;AACzB,WAAO,KAAK,OAAM,EAAG,YAAW;EAClC;;EAGA,QAAQ,GAA4D;AAElE,WAAO,KAAK,OAAM,EAAG,QAAO,KAAK,GAAA,2CAAQ,GAAG,KAAK,QAAQ,EAAE,OAAM,EAAG,QAAO;EAC7E;EAtEA,eAAe,MAAa;AAhC5B,KAAA,GAAA,2BAAA,MAAA,8BAAA;;aAAA;;AAiCE,QAAI,CAAC,UAAU,KAAK,MAAM,OAAO,GAAA,IAAO,gCAAU,IAAA;AAClD,QAAI,WAAW,KAAK,MAAK;AACzB,QAAIC,UAAS,KAAK,MAAK;AACvB,SAAK,WAAW;AAChB,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,SAAK,MAAM;AACX,SAAK,WAAW;AAChB,SAAK,SAASA;AACd,SAAK,OAAO,KAAK,MAAK,KAAM;AAC5B,SAAK,SAAS,KAAK,MAAK,KAAM;AAC9B,SAAK,SAAS,KAAK,MAAK,KAAM;AAC9B,SAAK,cAAc,KAAK,MAAK,KAAM;AAEnC,KAAA,GAAA,2CAAU,IAAI;EAChB;AAsDF;;;ACjYA,IAAM,wCAAkB;EAAC;IAAC;IAAM;IAAG;;EAAI;IAAC;IAAM;IAAG;;EAAK;IAAC;IAAM;IAAI;;EAAK;IAAC;IAAM;IAAG;;EAAI;IAAC;IAAM;IAAG;;;AAC9F,IAAM,sCAAgB;EAAC;IAAC;IAAM;IAAG;;EAAK;IAAC;IAAM;IAAI;;EAAK;IAAC;IAAM;IAAG;;EAAI;IAAC;IAAM;IAAG;;;AAC9E,IAAM,oCAAc;EAAC;EAAM;EAAM;EAAM;EAAM;;AAC7C,IAAM,kCAAY;EAAC;EAAS;EAAU;EAAS;EAAU;;AAEzD,SAAS,+CAAyB,MAAqB;AACrD,QAAM,MAAM,sCAAgB,UAAU,CAAC,CAAC,MAAM,OAAO,GAAA,MAAI;AACvD,QAAI,KAAK,OAAO,KACd,QAAO;AAGT,QAAI,KAAK,SAAS,QAAQ,KAAK,QAAQ,MACrC,QAAO;AAGT,QAAI,KAAK,SAAS,QAAQ,KAAK,UAAU,SAAS,KAAK,MAAM,IAC3D,QAAO;AAGT,WAAO;EACT,CAAA;AAEA,MAAI,QAAQ,GACV,QAAO,sCAAgB,SAAS;AAGlC,MAAI,QAAQ,EACV,QAAO;AAGT,SAAO,MAAM;AACf;AAEA,SAAS,kCAAY,MAAqB;AACxC,MAAI,YAAY,kCAAY,gCAAU,QAAQ,KAAK,GAAG,CAAA;AACtD,MAAI,CAAC,UACH,OAAM,IAAI,MAAM,kBAAkB,KAAK,GAAG;AAG5C,SAAO,KAAI,GAAA,2CACT,KAAK,OAAO,WACZ,KAAK,OACL,KAAK,GAAG;AAEZ;AAOO,IAAM,4CAAN,eAA+B,GAAA,2CAAgB;EAGpD,cAAc,IAA0B;AACtC,QAAI,OAAO,MAAM,cAAc,EAAA;AAC/B,QAAI,MAAM,+CAAyB,IAAA;AAEnC,WAAO,KAAI,GAAA,2CACT,MACA,gCAAU,GAAA,GACV,KAAK,OAAO,kCAAY,GAAA,GACxB,KAAK,OACL,KAAK,GAAG;EAEZ;EAEA,YAAY,MAA+B;AACzC,WAAO,MAAM,YAAY,kCAAY,IAAA,CAAA;EACvC;EAEA,YAAY,MAAsC;AAChD,QAAI,gBAAgB,kCAAY,IAAA;AAChC,QAAI,MAAM,+CAAyB,aAAA;AAEnC,QAAI,gCAAU,GAAA,MAAS,KAAK,KAAK;AAC/B,WAAK,MAAM,gCAAU,GAAA;AACrB,WAAK,OAAO,cAAc,OAAO,kCAAY,GAAA;IAC/C;AAGA,SAAK,cAAc,IAAA;EACrB;EAEA,cAAc,MAAsC;AAClD,QAAI,MAAM,gCAAU,QAAQ,KAAK,GAAG;AACpC,QAAI,MAAM,oCAAc,GAAA;AACxB,QAAI,OAAO,MAAM;AACf,UAAI,CAAC,SAAS,UAAU,MAAA,IAAU;AAIlC,UAAI,UAAU,UAAU,kCAAY,GAAA;AACpC,WAAK,OAAO,KAAK,IAAI,GAAG,KAAK,IAAI,SAAS,KAAK,IAAI,CAAA;AACnD,UAAI,KAAK,SAAS,SAAS;AACzB,aAAK,QAAQ,KAAK,IAAI,UAAU,KAAK,KAAK;AAE1C,YAAI,KAAK,UAAU,SACjB,MAAK,MAAM,KAAK,IAAI,QAAQ,KAAK,GAAG;MAExC;IACF;AAEA,QAAI,KAAK,SAAS,KAAK,OAAO,GAAG;AAC/B,UAAI,CAAA,EAAG,YAAY,QAAA,IAAY,sCAAgB,GAAA;AAC/C,WAAK,QAAQ,KAAK,IAAI,YAAY,KAAK,KAAK;AAE5C,UAAI,KAAK,UAAU,WACjB,MAAK,MAAM,KAAK,IAAI,UAAU,KAAK,GAAG;IAE1C;EACF;EAEA,UAAoB;AAClB,WAAO;EACT;EAEA,cAAc,MAA+B;AAE3C,QAAI,MAAM,gCAAU,QAAQ,KAAK,GAAG;AACpC,QAAI,MAAM,sCAAgB,GAAA;AAC1B,QAAI,OAAO,sCAAgB,MAAM,CAAA;AACjC,QAAI,QAAQ;AAEV,aAAO,OAAO,IAAI,CAAA,IAAK;AAGzB,QAAI,QAAQ,KAAK,CAAA,IAAK,IAAI,CAAA;AAE1B,QAAI,KAAK,QAAQ,KAAK,CAAA,KAAO,KAAK,UAAU,KAAK,CAAA,KAAM,KAAK,MAAM,KAAK,CAAA,EACrE;AAGF,WAAO;EACT;EAEA,eAAe,MAA+B;AAC5C,WAAO,MAAM,eAAe,kCAAY,IAAA,CAAA;EAC1C;EAEA,sBAAsB,MAA+B;AACnD,QAAI,QAAQ,kCAAY,IAAA;AACxB,WAAO,QAAQ,MAAM,CAAA,IAAK;EAC5B;EAEA,qBAAqB,MAA+B;AAClD,QAAI,QAAQ,kCAAY,IAAA;AACxB,WAAO,SAAS,KAAK,UAAU,MAAM,CAAA,IAAK,MAAM,CAAA,IAAK;EACvD;;AAjGK,UAAA,GAAA,IAAA,GAAA,KACL,aAAiC;;AAiGnC;AAEA,SAAS,kCAAY,MAAqB;AACxC,MAAI,KAAK,SAAS,GAAG;AACnB,QAAI,MAAM,gCAAU,QAAQ,KAAK,GAAG;AACpC,WAAO,sCAAgB,GAAA;EACzB;AACF;;;AC7JA,IAAM,2CAAqB;AAOpB,IAAM,4CAAN,eAA+B,GAAA,2CAAgB;EAGpD,cAAc,IAA0B;AACtC,QAAI,gBAAgB,MAAM,cAAc,EAAA;AACxC,QAAI,QAAO,GAAA,2CAAgB,cAAc,KAAK,cAAc,IAAI;AAChE,WAAO,KAAI,GAAA,2CACT,MACA,OAAO,0CACP,cAAc,OACd,cAAc,GAAG;EAErB;EAEA,YAAY,MAA+B;AACzC,WAAO,MAAM,YAAY,kCAAY,IAAA,CAAA;EACvC;EAEA,UAAoB;AAClB,WAAO;MAAC;;EACV;EAEA,eAAe,MAA+B;AAC5C,WAAO,MAAM,eAAe,kCAAY,IAAA,CAAA;EAC1C;EAEA,cAAoB;EAAC;;AA1BhB,UAAA,GAAA,IAAA,GAAA,KACL,aAAiC;;AA0BnC;AAEA,SAAS,kCAAY,MAAqB;AACxC,MAAI,CAAC,KAAK,IAAA,KAAQ,GAAA,2CAAiB,KAAK,OAAO,wCAAA;AAC/C,SAAO,KAAI,GAAA,2CACT,KACA,MACA,KAAK,OACL,KAAK,GAAG;AAEZ;;;AC3CA,IAAM,yCAAmB;AAEzB,SAAS,oCAAc,MAAqB;AAC1C,SAAO,KAAK,QAAQ,WAChB,KAAK,OAAO,yCACZ,IAAI,KAAK,OAAO;AACtB;AAEA,SAAS,wCAAkB,MAAY;AACrC,MAAI,IAAI,OAAO;AACf,MAAI,IAAI,EACN,QAAO;IAAC;IAAU;;MAElB,QAAO;IAAC;IAAiB,IAAI;;AAEjC;AAOO,IAAM,4CAAN,eAA6B,GAAA,2CAAgB;EAGlD,cAAc,IAA0B;AACtC,QAAI,OAAO,MAAM,cAAc,EAAA;AAC/B,QAAI,gBAAe,GAAA,2CAAgB,KAAK,KAAK,KAAK,IAAI;AACtD,QAAI,CAAC,KAAK,IAAA,IAAQ,wCAAkB,YAAA;AACpC,WAAO,KAAI,GAAA,2CAAa,MAAM,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG;EAC/D;EAEA,YAAY,MAA+B;AACzC,WAAO,MAAM,YAAY,kCAAY,IAAA,CAAA;EACvC;EAEA,UAAoB;AAClB,WAAO;MAAC;MAAiB;;EAC3B;EAEA,YAAY,MAAsC;AAChD,QAAI,CAAC,KAAK,IAAA,IAAQ,wCAAkB,oCAAc,IAAA,CAAA;AAClD,SAAK,MAAM;AACX,SAAK,OAAO;EACd;EAEA,aAAa,MAAgC;AAC3C,WAAO,KAAK,QAAQ;EACtB;EAEA,eAAe,MAA+B;AAC5C,WAAO,MAAM,eAAe,kCAAY,IAAA,CAAA;EAC1C;EAEA,cAAc,MAA+B;AAC3C,WAAO,KAAK,QAAQ,kBAAkB,OAAO,OAAO;EACtD;;AAlCK,UAAA,GAAA,IAAA,GAAA,KACL,aAAiC;;AAkCnC;AAEA,SAAS,kCAAY,MAAqB;AACxC,MAAI,CAAC,KAAK,IAAA,KAAQ,GAAA,2CAAiB,oCAAc,IAAA,CAAA;AACjD,SAAO,KAAI,GAAA,2CACT,KACA,MACA,KAAK,OACL,KAAK,GAAG;AAEZ;;;ACpEA,IAAM,sCAAgB;AAGtB,IAAM,oCAAc;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AASK,IAAM,4CAAN,MAAM;EAGX,cAAc,IAA0B;AACtC,QAAI,iBAAiB,KAAK;AAC1B,QAAI,OAAO,IAAI,KAAK,OAAO,KAAK,iBAAiB,KAAK,KAAA;AACtD,QAAI,aAAa,OAAO,OAAO,KAAK,KAAK,OAAO,IAAI,OAAO,MAAM,EAAA;AACjE,QAAI,YAAY,iBAAiB;AACjC,QAAI,QAAQ,YAAY,MACpB,KAAK,MAAM,YAAY,EAAA,IACvB,KAAK,OAAO,YAAY,KAAK,EAAA;AACjC,QAAI,MAAM,YAAY,kCAAY,KAAA,IAAS;AAC3C,WAAO,KAAI,GAAA,2CAAa,MAAM,MAAM,QAAQ,GAAG,GAAA;EACjD;EAEA,YAAY,MAA+B;AACzC,QAAI,KAAK,sCAAgB,IAAI,OAAO,KAAK,OAAO,KAAK,KAAK,OAAO,IAAI,KAAK,OAAO,MAAM,EAAA;AACvF,UAAM,kCAAY,KAAK,QAAQ,CAAA;AAC/B,UAAM,KAAK;AACX,WAAO;EACT;EAEA,kBAA0B;AACxB,WAAO;EACT;EAEA,eAAe,MAA+B;AAC5C,QAAI,KAAK,SAAS,EAChB,QAAO;AAGT,QAAI,KAAK,SAAS,GAChB,QAAO;AAGT,QAAI,cAAa,GAAA,2CAAI,KAAK,KAAK,OAAO,IAAI,EAAA,IAAM;AAChD,WAAO,aAAa,KAAK;EAC3B;EAEA,UAAoB;AAClB,WAAO;MAAC;;EACV;EAEA,gBAAwB;AAGtB,WAAO;EACT;;SA9CA,aAAiC;;AA+CnC;;;ACvEA,IAAM,yCAAmB;AAGzB,IAAM,0CAAoB;AAOnB,IAAM,4CAAN,eAA6B,GAAA,2CAAgB;EAGlD,cAAc,IAA0B;AAEtC,QAAI,OAAO,MAAM,cAAc,EAAA;AAG/B,QAAI,aAAa,KAAK,OAAO;AAG7B,QAAI,OAAO,MAAK,GAAA,2CAAqB,KAAK,KAAK,KAAK,MAAM,GAAG,CAAA;AAE7D,QAAI;AACJ,QAAI,OAAO,yCAAmB;AAE5B;AAGA,mBAAY,GAAA,2CAAW,KAAK,OAAO,CAAA,IAAK,KAAK;AAC7C,cAAQ,YAAa,MAAW,KAAU;IAC5C,OAAO;AAEL,mBAAY,GAAA,2CAAW,KAAK,IAAI,IAAI,KAAK;AACzC,cAAQ;IACV;AAEA,QAAI;AACJ,QAAI;AACJ,QAAI,OAAO,WAAW;AACpB,oBAAc;AACd,kBAAY,OAAO;IACrB,OAAO;AACL,UAAI,OAAO,OAAO;AAClB,UAAI,OAAQ,KAAS;AACnB,sBAAc,KAAK,MAAM,OAAO,EAAA,IAAM;AACtC,oBAAa,OAAO,KAAM;MAC5B,OAAO;AACL,gBAAQ;AACR,sBAAc,KAAK,MAAM,OAAO,EAAA,IAAM;AACtC,oBAAa,OAAO,KAAM;MAC5B;IACF;AAEA,WAAO,KAAI,GAAA,2CAAa,MAAM,YAAY,aAAa,SAAA;EACzD;EAEA,YAAY,MAA+B;AACzC,QAAI,eAAe,KAAK,OAAO;AAC/B,QAAI,CAAC,KAAK,IAAA,KAAQ,GAAA,2CAAiB,YAAA;AAEnC,QAAI;AACJ,QAAI;AACJ,SAAI,GAAA,2CAAW,IAAA,GAAO;AACpB,kBAAY;AACZ,YAAK,GAAA,2CAAqB,KAAK,MAAM,GAAG,EAAA;IAC1C,OAAO;AACL,kBAAY;AACZ,YAAK,GAAA,2CAAqB,KAAK,MAAM,GAAG,EAAA;IAC1C;AAEA,QAAI,KAAK,UAAU,EACjB,QAAO,KAAK,KAAK,MAAM;AAGzB,UAAM,YAAY,KAAK,IAAI,KAAK,QAAQ,GAAG,CAAA,IAAK;AAEhD,QAAI,KAAK,SAAS,EAChB,QAAO,KAAK,QAAQ,KAAK;AAG3B,UAAM,KAAK,MAAM;AACjB,WAAO;EACT;EAEA,eAAe,MAA+B;AAC5C,QAAI,KAAK,UAAU,MAAK,GAAA,2CAAW,KAAK,OAAO,sCAAA,EAC7C,QAAO;AAGT,QAAI,KAAK,SAAS,KAAK,KAAK,SAAS,EACnC,QAAO;AAGT,WAAO;EACT;EAEA,gBAAwB;AAGtB,WAAO;EACT;EAEA,UAAoB;AAClB,WAAO;MAAC;;EACV;EAEA,cAAoB;EAAC;;AAjGhB,UAAA,GAAA,IAAA,GAAA,KACL,aAAiC;;AAiGnC;;;AC9GA,IAAM,mCAAa;AACnB,IAAM,0CAAoB;AAC1B,IAAM,4CAAsB;AAC5B,IAAM,0CAAoB;AAC1B,IAAM,4CAAsB;AAE5B,SAAS,yCAAmB,OAAe,MAAc,OAAe,KAAW;AACjF,SAAO,MACL,KAAK,KAAK,QAAQ,QAAQ,EAAA,KACzB,OAAO,KAAK,MACb,KAAK,OAAO,IAAI,KAAK,QAAQ,EAAA,IAC7B,QAAQ;AACZ;AAEA,SAAS,yCAAmB,UAAoB,OAAe,IAAU;AACvE,MAAI,OAAO,KAAK,OAAO,MAAM,KAAK,SAAS,SAAS,KAAA;AACpD,MAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,MAAM,MAAM,KAAK,yCAAmB,OAAO,MAAM,GAAG,CAAA,MAAO,IAAA,IAAQ,CAAA;AACjG,MAAI,MAAM,KAAK,yCAAmB,OAAO,MAAM,OAAO,CAAA,IAAK;AAE3D,SAAO,KAAI,GAAA,2CAAa,UAAU,MAAM,OAAO,GAAA;AACjD;AAEA,SAAS,iCAAW,MAAY;AAC9B,UAAQ,KAAK,KAAK,QAAQ,KAAK;AACjC;AASO,IAAM,4CAAN,MAAM;EAGX,cAAc,IAA0B;AACtC,WAAO,yCAAmB,MAAM,kCAAY,EAAA;EAC9C;EAEA,YAAY,MAA+B;AACzC,WAAO,yCAAmB,kCAAY,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG;EACvE;EAEA,eAAe,MAA+B;AAC5C,QAAI,SAAS,KAAK,KAAK,QAAQ;AAC/B,QAAI,KAAK,UAAU,MAAM,iCAAW,KAAK,IAAI,EAC3C;AAGF,WAAO;EACT;EAEA,kBAA0B;AACxB,WAAO;EACT;EAEA,cAAc,MAA+B;AAC3C,WAAO,iCAAW,KAAK,IAAI,IAAI,MAAM;EACvC;EAEA,gBAAwB;AAEtB,WAAO;EACT;EAEA,UAAoB;AAClB,WAAO;MAAC;;EACV;;SAlCA,aAAiC;;AAmCnC;AASO,IAAM,4CAAN,cAAqC,0CAAA;EAG1C,cAAc,IAA0B;AACtC,WAAO,yCAAmB,MAAM,yCAAmB,EAAA;EACrD;EAEA,YAAY,MAA+B;AACzC,WAAO,yCAAmB,yCAAmB,KAAK,MAAM,KAAK,OAAO,KAAK,GAAG;EAC9E;;AATK,UAAA,GAAA,IAAA,GAAA,KACL,aAAiC;;AASnC;AAGA,IAAM,sCAAgB;AACtB,IAAI;AACJ,IAAI;AAEJ,SAAS,wCAAkB,MAAY;AACrC,SAAO,4CAAsB,gDAA0B,OAAO,yCAAA;AAChE;AAEA,SAAS,0CAAoB,MAAc,OAAa;AACtD,MAAI,MAAO,OAAO;AAClB,MAAI,OAAQ,KAAS,MAAM,QAAQ;AACnC,OAAK,2CAAqB,GAAA,IAAO,UAAU,EACzC,QAAO;MAEP,QAAO;AAEX;AAEA,SAAS,yCAAmB,MAAc,OAAa;AACrD,MAAI,MAAM,wCAAkB,IAAA;AAC5B,WAAS,IAAI,GAAG,IAAI,OAAO,IACzB,QAAO,0CAAoB,MAAM,CAAA;AAEnC,SAAO;AACT;AAEA,SAAS,yCAAmB,MAAY;AACtC,SAAO,gDAA0B,OAAO,IAAI,yCAAA,IAAuB,gDAA0B,OAAO,yCAAA;AACtG;AASO,IAAM,4CAAN,cAAsC,0CAAA;EAsB3C,cAAc,IAA0B;AACtC,QAAI,OAAO,KAAK;AAChB,QAAI,YAAY,wCAAkB,yCAAA;AAClC,QAAI,UAAU,wCAAkB,uCAAA;AAChC,QAAI,OAAO,aAAa,OAAO,QAC7B,QAAO,MAAM,cAAc,EAAA;SACtB;AACL,UAAI,IAAI,4CAAsB;AAC9B,UAAI,IAAI;AACR,UAAI,IAAI;AACR,aAAO,IAAI,GAAG;AACZ;AACA,YAAI,OAAO,wCAAkB,CAAA,IAAK;AAClC,YAAI,aAAa,yCAAmB,CAAA;AACpC,YAAI,MAAM,YAAY;AACpB,cAAI;AACJ;QACF,WAAW,IAAI,YAAY;AACzB,cAAI,cAAc,0CAAoB,GAAG,CAAA;AACzC,cAAI;AACJ,iBAAO,IAAI,aAAa;AACtB,iBAAK;AACL;AACA,0BAAc,0CAAoB,GAAG,CAAA;UACvC;AACA;QACF;MACF;AAEA,aAAO,KAAI,GAAA,2CAAa,MAAM,GAAG,GAAI,OAAO,yCAAmB,GAAG,CAAA,IAAK,CAAA;IACzE;EACF;EAEA,YAAY,MAA+B;AACzC,QAAI,KAAK,OAAO,6CAAuB,KAAK,OAAO,wCACjD,QAAO,MAAM,YAAY,IAAA;AAG3B,WAAO,mCAAa,yCAAmB,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,MAAM;EAC9E;EAEA,eAAe,MAA+B;AAC5C,QAAI,KAAK,OAAO,6CAAuB,KAAK,OAAO,wCACjD,QAAO,MAAM,eAAe,IAAA;AAG9B,WAAO,0CAAoB,KAAK,MAAM,KAAK,KAAK;EAClD;EAEA,cAAc,MAA+B;AAC3C,QAAI,KAAK,OAAO,6CAAuB,KAAK,OAAO,wCACjD,QAAO,MAAM,cAAc,IAAA;AAG7B,WAAO,yCAAmB,KAAK,IAAI;EACrC;EA1EA,cAAc;AACZ,UAAK,GAAA,KAHP,aAAiC;AAI/B,QAAI,CAAC,2CACH,8CAAuB,IAAI,YAAY,WAAW,KAAK,KAAK,mCAAA,GAAgB,CAAAC,OAAKA,GAAE,WAAW,CAAA,CAAA,EAAI,MAAM;AAG1G,QAAI,CAAC,iDAA2B;AAC9B,wDAA4B,IAAI,YAAY,0CAAoB,4CAAsB,CAAA;AAEtF,UAAI,YAAY;AAChB,eAAS,OAAO,2CAAqB,QAAQ,yCAAmB,QAAQ;AACtE,wDAA0B,OAAO,yCAAA,IAAuB;AACxD,iBAAS,IAAI,GAAG,KAAK,IAAI,IACvB,cAAa,0CAAoB,MAAM,CAAA;MAE3C;IACF;EACF;AA0DF;;;AC7MA,IAAM,qCAAe;AAIrB,IAAM,mCAAa;AACnB,IAAM,kCAAa,KAAK;AAKxB,IAAM,mCAAa;AACnB,IAAM,oCAAc,KAAK,mCAAa;AACtC,IAAM,oCAAc,mCAAa,kCAAY;AAE7C,SAAS,iCAAW,MAAY;AAC9B,UAAO,GAAA,2CAAI,OAAO,IAAI,GAAG,EAAA,IAAM;AACjC;AAIA,SAAS,mCAAa,MAAY;AAChC,MAAI,SAAS,KAAK,OAAO,MAAM,OAAO,OAAO,EAAA;AAC7C,MAAI,QAAQ,QAAQ,QAAQ;AAC5B,MAAI,MAAM,SAAS,KAAK,KAAK,MAAM,QAAQ,KAAA;AAE3C,OAAI,GAAA,2CAAI,KAAK,MAAM,IAAI,CAAA,IAAK,EAC1B,QAAO;AAGT,SAAO;AACT;AAGA,SAAS,mCAAa,MAAY;AAChC,MAAI,OAAO,mCAAa,OAAO,CAAA;AAC/B,MAAI,UAAU,mCAAa,IAAA;AAC3B,MAAI,OAAO,mCAAa,OAAO,CAAA;AAE/B,MAAI,OAAO,YAAY,IACrB,QAAO;AAGT,MAAI,UAAU,SAAS,IACrB,QAAO;AAGT,SAAO;AACT;AAEA,SAAS,kCAAY,MAAY;AAC/B,SAAO,mCAAa,IAAA,IAAQ,mCAAa,IAAA;AAC3C;AAEA,SAAS,oCAAc,MAAY;AACjC,SAAO,kCAAY,OAAO,CAAA,IAAK,kCAAY,IAAA;AAC7C;AAEA,SAAS,kCAAY,MAAY;AAC/B,MAAI,aAAa,oCAAc,IAAA;AAE/B,MAAI,aAAa,IACf,eAAc;AAGhB,UAAQ,YAAA;IACN,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;EACX;AACF;AAEA,SAAS,qCAAe,MAAc,OAAa;AAEjD,MAAI,SAAS,KAAK,CAAC,iCAAW,IAAA,EAC5B;AAIF,MAAI,UAAU,KAAK,UAAU,KAAK,UAAU,KAAK,UAAU,MAAM,UAAU,GACzE,QAAO;AAGT,MAAI,WAAW,kCAAY,IAAA;AAG3B,MAAI,UAAU,EACZ,QAAO,aAAa,IAAI,KAAK;AAI/B,MAAI,UAAU,EACZ,QAAO,aAAa,IAAI,KAAK;AAI/B,MAAI,UAAU,EACZ,QAAO,iCAAW,IAAA,IAAQ,KAAK;AAGjC,SAAO;AACT;AAOO,IAAM,2CAAN,MAAM;EAGX,cAAc,IAA0B;AACtC,QAAI,IAAI,KAAK;AACb,QAAI,IAAK,IAAI,kCAAa;AAC1B,QAAI,OAAO,KAAK,OAAO,KAAK,IAAI,OAAO,GAAA,IAAO;AAC9C,QAAI,KAAK,kCAAY,IAAA;AACrB,QAAI,YAAY,KAAK,MAAM,IAAI,EAAA;AAG/B,WAAO,YAAY,GAAG;AACpB;AACA,WAAK,kCAAY,IAAA;AACjB,kBAAY,KAAK,MAAM,IAAI,EAAA;IAC7B;AAGA,QAAI,QAAQ;AACZ,QAAI,aAAa;AACjB,WAAO,aAAa,WAAW;AAC7B,oBAAc,qCAAe,MAAM,KAAA;AACnC;IACF;AAEA;AACA,kBAAc,qCAAe,MAAM,KAAA;AAEnC,QAAI,MAAM,YAAY;AACtB,WAAO,KAAI,GAAA,2CAAa,MAAM,MAAM,OAAO,GAAA;EAC7C;EAEA,YAAY,MAA+B;AACzC,QAAI,KAAK,kCAAY,KAAK,IAAI;AAC9B,aAAS,QAAQ,GAAG,QAAQ,KAAK,OAAO,QACtC,OAAM,qCAAe,KAAK,MAAM,KAAA;AAGlC,WAAO,KAAK,KAAK,MAAM;EACzB;EAEA,eAAe,MAA+B;AAC5C,WAAO,qCAAe,KAAK,MAAM,KAAK,KAAK;EAC7C;EAEA,gBAAgB,MAA+B;AAC7C,WAAO,iCAAW,KAAK,IAAI,IAAI,KAAK;EACtC;EAEA,cAAc,MAA+B;AAC3C,WAAO,oCAAc,KAAK,IAAI;EAChC;EAEA,gBAAwB;AAEtB,WAAO;EACT;EAEA,UAAoB;AAClB,WAAO;MAAC;;EACV;EAEA,iBAAiB,MAAgC,cAAqC;AAEpF,QAAI,aAAa,SAAS,KAAK,MAAM;AACnC,UAAI,iCAAW,aAAa,IAAI,KAAK,CAAC,iCAAW,KAAK,IAAI,KAAK,aAAa,QAAQ,EAClF,MAAK;eACI,CAAC,iCAAW,aAAa,IAAI,KAAK,iCAAW,KAAK,IAAI,KAAK,aAAa,QAAQ,EACzF,MAAK;IAET;EACF;;SAtEA,aAAiC;;AAuEnC;;;ACtLA,IAAM,uCAAiB;AACvB,IAAM,qCAAe;AAIrB,IAAM,2CAAqB;AAE3B,SAAS,oCAAc,OAAe,MAAc,OAAe,KAAW;AAC5E,SACE,QACE,MAAM,OACN,KAAK,MAAM,OAAO,CAAA,IAClB,MAAM,QAAQ,KACd,MAAM;AAEZ;AAEA,SAAS,oCAAc,OAAe,IAAU;AAC9C,MAAI,OAAO,KAAK,MAAO,KAAK,KAAK,SAAU,IAAA;AAC3C,MAAI,QAAQ,IAAI,KAAK,OAAO,KAAK,oCAAc,OAAO,MAAM,GAAG,CAAA,KAAM,EAAA;AACrE,MAAI,MAAM,KAAK,IAAI,oCAAc,OAAO,MAAM,OAAO,CAAA;AACrD,SAAO;IAAC;IAAM;IAAO;;AACvB;AAEA,SAAS,iCAAW,MAAY;AAC9B,SAAO,KAAK,MAAO,OAAO,IAAK,CAAA;AACjC;AAEA,SAAS,qCAAe,MAAc,OAAa;AAMjD,MAAI,QAAQ,OAAO;AAEjB,WAAO;;AAGP,WAAO,iCAAW,IAAA,IAAQ;AAE9B;AAOO,IAAM,4CAAN,MAAM;EAGX,cAAc,IAA0B;AACtC,QAAI,CAAC,MAAM,OAAO,GAAA,IAAO,oCAAc,sCAAgB,EAAA;AACvD,QAAI,MAAM;AACV,QAAI,QAAQ,GAAG;AACb,YAAM;AACN,cAAQ;IACV;AAEA,WAAO,KAAI,GAAA,2CAAa,MAAM,KAAK,MAAM,OAAO,GAAA;EAClD;EAEA,YAAY,MAA+B;AACzC,QAAI,OAAO,KAAK;AAChB,QAAI,KAAK,QAAQ,KACf,SAAQ;AAGV,WAAO,oCAAc,sCAAgB,MAAM,KAAK,OAAO,KAAK,GAAG;EACjE;EAEA,eAAe,MAA+B;AAC5C,WAAO,qCAAe,KAAK,MAAM,KAAK,KAAK;EAC7C;EAEA,kBAA0B;AACxB,WAAO;EACT;EAEA,cAAc,MAA+B;AAC3C,WAAO,MAAM,iCAAW,KAAK,IAAI;EACnC;EAEA,cAAc,MAA+B;AAI3C,WAAO,KAAK,QAAQ,OAAO,OAAO;EACpC;EAEA,UAAoB;AAClB,WAAO;MAAC;MAAM;;EAChB;;SA3CA,aAAiC;;AA4CnC;AAMO,IAAM,4CAAN,cAAwC,0CAAA;EAG7C,cAAc,IAA0B;AACtC,QAAI,CAAC,MAAM,OAAO,GAAA,IAAO,oCAAc,sCAAgB,EAAA;AACvD,YAAQ;AACR,WAAO,KAAI,GAAA,2CAAa,MAAM,MAAM,MAAM,OAAO,GAAA;EACnD;EAEA,UAAoB;AAClB,WAAO;MAAC;;EACV;EAEA,gBAAwB;AAEtB,WAAO;EACT;;AAhBK,UAAA,GAAA,IAAA,GAAA,KACL,aAAiC;;AAgBnC;AAOO,IAAM,4CAAN,cAA6B,0CAAA;EAGlC,cAAc,IAA0B;AACtC,QAAI,CAAC,MAAM,OAAO,GAAA,IAAO,oCAAc,oCAAc,EAAA;AACrD,QAAI,MAAM;AACV,QAAI,QAAQ,GAAG;AACb,YAAM;AACN,aAAO,IAAI;IACb;AAEA,WAAO,KAAI,GAAA,2CAAa,MAAM,KAAK,MAAM,OAAO,GAAA;EAClD;EAEA,YAAY,MAA+B;AACzC,QAAI,OAAO,KAAK;AAChB,QAAI,KAAK,QAAQ,MACf,QAAO,IAAI;AAGb,WAAO,oCAAc,oCAAc,MAAM,KAAK,OAAO,KAAK,GAAG;EAC/D;EAEA,eAAe,MAA+B;AAC5C,QAAI,OAAO,KAAK;AAChB,QAAI,KAAK,QAAQ,MACf,QAAO,IAAI;AAGb,WAAO,qCAAe,MAAM,KAAK,KAAK;EACxC;EAEA,aAAa,MAAgC;AAC3C,WAAO,KAAK,QAAQ;EACtB;EAEA,YAAY,MAAsC;AAChD,QAAI,KAAK,QAAQ,GAAG;AAClB,WAAK,MAAM,KAAK,QAAQ,QAAQ,OAAO;AACvC,WAAK,OAAO,IAAI,KAAK;IACvB;EACF;EAEA,UAAoB;AAClB,WAAO;MAAC;MAAO;;EACjB;EAEA,cAAc,MAA+B;AAI3C,WAAO,KAAK,QAAQ,QAAQ,OAAO;EACrC;;AApDK,UAAA,GAAA,IAAA,GAAA,KACL,aAAiC;;AAoDnC;;;AC3KO,SAAS,0CAAe,MAAwB;AACrD,UAAQ,MAAA;IACN,KAAK;AACH,aAAO,KAAI,GAAA,2CAAe;IAC5B,KAAK;AACH,aAAO,KAAI,GAAA,2CAAe;IAC5B,KAAK;AACH,aAAO,KAAI,GAAA,2CAAwB;IACrC,KAAK;AACH,aAAO,KAAI,GAAA,2CAAa;IAC1B,KAAK;AACH,aAAO,KAAI,GAAA,0CAAa;IAC1B,KAAK;AACH,aAAO,KAAI,GAAA,2CAAa;IAC1B,KAAK;AACH,aAAO,KAAI,GAAA,2CAAmB;IAChC,KAAK;AACH,aAAO,KAAI,GAAA,2CAAqB;IAClC,KAAK;AACH,aAAO,KAAI,GAAA,2CAAsB;IACnC,KAAK;AACH,aAAO,KAAI,GAAA,2CAAe;IAC5B,KAAK;AACH,aAAO,KAAI,GAAA,2CAAc;IAC3B,KAAK;AACH,aAAO,KAAI,GAAA,2CAAa;IAC1B,KAAK;IACL;AACE,aAAO,KAAI,GAAA,2CAAgB;EAC/B;AACF;;;AC1CA,IAAI,uCAAiB,oBAAI,IAAA;AAOlB,IAAM,4CAAN,MAAM;;EAWX,OAAO,OAAqB;AAC1B,WAAO,KAAK,UAAU,OAAO,KAAA;EAC/B;;EAGA,cAAc,OAAwC;AACpD,WAAO,KAAK,UAAU,cAAc,KAAA;EACtC;;EAGA,YAAY,OAAa,KAAmB;AAE1C,QAAI,OAAO,KAAK,UAAU,gBAAgB;AAExC,aAAO,KAAK,UAAU,YAAY,OAAO,GAAA;AAG3C,QAAI,MAAM,MACR,OAAM,IAAI,WAAW,gCAAA;AAIvB,WAAO,GAAG,KAAK,UAAU,OAAO,KAAA,CAAA,MAAY,KAAK,UAAU,OAAO,GAAA,CAAA;EACpE;;EAGA,mBAAmB,OAAa,KAAkC;AAEhE,QAAI,OAAO,KAAK,UAAU,uBAAuB;AAE/C,aAAO,KAAK,UAAU,mBAAmB,OAAO,GAAA;AAGlD,QAAI,MAAM,MACR,OAAM,IAAI,WAAW,gCAAA;AAGvB,QAAI,aAAa,KAAK,UAAU,cAAc,KAAA;AAC9C,QAAI,WAAW,KAAK,UAAU,cAAc,GAAA;AAC5C,WAAO;SACF,WAAW,IAAI,CAAA,OAAM;QAAC,GAAG;QAAG,QAAQ;MAAY,EAAA;MACnD;QAAC,MAAM;QAAW,OAAO;QAAO,QAAQ;MAAQ;SAC7C,SAAS,IAAI,CAAA,OAAM;QAAC,GAAG;QAAG,QAAQ;MAAU,EAAA;;EAEnD;;EAGA,kBAAsD;AACpD,QAAI,kBAAkB,KAAK,UAAU,gBAAe;AACpD,QAAI,gDAAA,GAA6B;AAC/B,UAAI,CAAC,KAAK,kBACR,MAAK,oBAAoB,2CAAqB,gBAAgB,QAAQ,KAAK,OAAO;AAEpF,sBAAgB,YAAY,KAAK;AACjC,sBAAgB,SAAS,KAAK,sBAAsB,SAAS,KAAK,sBAAsB;IAC1F;AAIA,QAAI,gBAAgB,aAAa,sBAC/B,iBAAgB,WAAW;AAG7B,WAAO;EACT;EAtEA,YAAY,QAAgB,UAAsC,CAAC,GAAG;AACpE,SAAK,YAAY,6CAAuB,QAAQ,OAAA;AAChD,SAAK,UAAU;EACjB;AAoEF;AAaA,IAAM,0CAAoB;EACxB,MAAM;;IAEJ,IAAI;EACN;EACA,OAAO,CAEP;AACF;AAEA,SAAS,6CAAuB,QAAgB,UAAsC,CAAC,GAAC;AAGtF,MAAI,OAAO,QAAQ,WAAW,aAAa,6CAAA,GAA0B;AACnE,cAAU;MAAC,GAAG;IAAO;AACrB,QAAI,OAAO,wCAAkB,OAAO,QAAQ,MAAM,CAAA,EAAG,OAAO,MAAM,GAAA,EAAK,CAAA,CAAE;AACzE,QAAI,mBAAmB,QAAQ,SAAS,QAAQ;AAChD,YAAQ,YAAY,SAAA,QAAA,SAAA,SAAA,OAAQ;AAC5B,WAAO,QAAQ;EACjB;AAEA,MAAI,WAAW,UAAU,UAAU,OAAO,QAAQ,OAAA,EAAS,KAAK,CAAC,GAAG,MAAM,EAAE,CAAA,IAAK,EAAE,CAAA,IAAK,KAAK,CAAA,EAAG,KAAI,IAAK;AACzG,MAAI,qCAAe,IAAI,QAAA,EACrB,QAAO,qCAAe,IAAI,QAAA;AAG5B,MAAI,kBAAkB,IAAI,KAAK,eAAe,QAAQ,OAAA;AACtD,uCAAe,IAAI,UAAU,eAAA;AAC7B,SAAO;AACT;AAEA,IAAI,gDAA0C;AAC9C,SAAS,+CAAA;AACP,MAAI,iDAA2B,KAC7B,iDAA0B,IAAI,KAAK,eAAe,SAAS;IACzD,MAAM;IACN,QAAQ;EACV,CAAA,EAAG,OAAO,IAAI,KAAK,MAAM,GAAG,GAAG,CAAA,CAAA,MAAQ;AAGzC,SAAO;AACT;AAEA,IAAI,mDAA6C;AACjD,SAAS,kDAAA;AACP,MAAI,oDAA8B,KAChC,oDAA6B,IAAI,KAAK,eAAe,MAAM;IACzD,MAAM;IACN,QAAQ;EACV,CAAA,EAAG,gBAAe,EAAG,cAAc;AAGrC,SAAO;AACT;AAEA,SAAS,2CAAqB,QAAgB,SAAmC;AAC/E,MAAI,CAAC,QAAQ,aAAa,CAAC,QAAQ,KACjC,QAAO;AAKT,WAAS,OAAO,QAAQ,0BAA0B,EAAA;AAClD,aAAW,OAAO,SAAS,KAAA,IAAS,KAAK,QAAQ;AACjD,MAAI,YAAY,6CAAuB,QAAQ;IAC7C,GAAG;IACH,UAAU;;EACZ,CAAA;AAEA,MAAIC,OAAM,SAAS,UAAU,cAAc,IAAI,KAAK,MAAM,GAAG,GAAG,CAAA,CAAA,EAAI,KAAK,CAAA,MAAK,EAAE,SAAS,MAAA,EAAS,OAAO,EAAA;AACzG,MAAIC,OAAM,SAAS,UAAU,cAAc,IAAI,KAAK,MAAM,GAAG,GAAG,EAAA,CAAA,EAAK,KAAK,CAAA,MAAK,EAAE,SAAS,MAAA,EAAS,OAAO,EAAA;AAE1G,MAAID,SAAQ,KAAKC,SAAQ,GACvB,QAAO;AAGT,MAAID,SAAQ,MAAMC,SAAQ,GACxB,QAAO;AAGT,MAAID,SAAQ,KAAKC,SAAQ,GACvB,QAAO;AAGT,MAAID,SAAQ,MAAMC,SAAQ,GACxB,QAAO;AAGT,QAAM,IAAI,MAAM,8BAAA;AAClB;;;AC1LA,SAAgB,uBAAuBC,SAAiBC,cAAoC;AAC1F,MAAIC;AACJ,MAAI,gBAAgB,YAAA,EAClB,aAAY,0CAAmB,OAAA;WAExB,mBAAmB,YAAA,EAC1B,aAAY,0CAAc,OAAA;MAG1B,aAAY,yCAAU,OAAA;AAExB,SAAO,UAAU,aAAa,aAAa,WAAW,0CAAW,WAAW,aAAa,QAAA,IAAY;AACtG;AAOD,SAAgB,OAAOA,WAAsBC,KAAa,0CAAA,GAAoB;AAC5E,MAAI,gBAAgB,SAAA,EAClB,QAAO,UAAU,OAAA;MAEjB,QAAO,UAAU,OAAO,EAAA;AAC3B;AAED,SAAgB,mBAAmBD,WAAqD;AACtF,SAAO,qBAAqB;AAC7B;AAED,SAAgB,gBAAgBA,WAAkD;AAChF,SAAO,qBAAqB;AAC7B;AAED,SAAgB,QAAQA,WAAsB;AAC5C,SAAO,mBAAmB,SAAA,KAAc,gBAAgB,SAAA;AACzD;AAKD,SAAgB,eAAeE,MAAwB;AACrD,MAAI,gBAAgB,MAAM;AACxB,UAAM,OAAO,KAAK,YAAA;AAClB,UAAM,QAAQ,KAAK,SAAA,IAAa;AAMhC,WAAO,IAAI,KAAK,MAAM,OAAO,CAAA,EAAG,QAAA;EACjC,MAEC,QAAO,KAAK,IAAI,EAAE,KAAK,IAAK,CAAA,EAAE;AAEjC;AASD,SAAgB,SAASC,eAA0BC,eAA0B;AAC3E,SAAO,cAAc,QAAQ,aAAA,IAAiB;AAC/C;AASD,SAAgB,QAAQD,eAA0BC,eAA0B;AAC1E,SAAO,cAAc,QAAQ,aAAA,IAAiB;AAC/C;AAUD,SAAgB,eAAeD,eAA0BC,eAA0B;AACjF,SAAO,cAAc,QAAQ,aAAA,KAAkB;AAChD;AAUD,SAAgB,cAAcD,eAA0BC,eAA0B;AAChF,SAAO,cAAc,QAAQ,aAAA,KAAkB;AAChD;AAWD,SAAgB,mBAAmBC,MAAiBC,OAAkBC,KAAgB;AACpF,SAAO,cAAc,MAAM,KAAA,KAAU,eAAe,MAAM,GAAA;AAC3D;AAWD,SAAgB,UAAUF,MAAiBC,OAAkBC,KAAgB;AAC3E,SAAO,QAAQ,MAAM,KAAA,KAAU,SAAS,MAAM,GAAA;AAC/C;AAED,SAAgB,sBACdC,MACAC,gBACAC,QACG;AACH,QAAM,MAAM,0CAAa,MAAM,MAAA;AAE/B,MAAI,iBAAiB,IACnB,QAAO,KAAK,SAAS,EAAE,MAAM,MAAM,IAAI,eAAgB,CAAA;AAEzD,MAAI,mBAAmB,IACrB,QAAO;AAET,SAAO,KAAK,SAAS,EAAE,MAAM,MAAM,eAAgB,CAAA;AACpD;AAED,SAAgB,qBACdF,MACAC,gBACAC,QACG;AACH,QAAM,MAAM,0CAAa,MAAM,MAAA;AAC/B,QAAM,gBAAgB,mBAAmB,IAAI,IAAI,iBAAiB;AAElE,MAAI,QAAQ,cACV,QAAO;AAET,MAAI,MAAM,cACR,QAAO,KAAK,IAAI,EAAE,MAAM,IAAI,MAAM,cAAe,CAAA;AAEnD,SAAO,KAAK,IAAI,EAAE,MAAM,gBAAgB,IAAK,CAAA;AAC9C;AAED,SAAgB,uBACdJ,OACAC,KACAI,eACAC,YACAC,iBACA;AACA,MAAI,kBAAA,UAA+B,eAAA,UAA4B,oBAAA,OAC7D,QAAO;AAET,MAAI,WAAW,MAAM,IAAI,EAAE,MAAM,EAAG,CAAA;AACpC,QAAK,yCAAa,eAAa,+CAAgB,eAAS,EAClD,mDAAkB,WACtB,QAAO;AAGT,QAAM,OAAO;AACb,SAAO,SAAS,QAAQ,IAAA,IAAQ,GAAG;AACjC,eAAW,SAAS,IAAI,EAAE,MAAM,EAAG,CAAA;AACnC,UAAK,yCAAa,eAAa,+CAAgB,eAAS,EAClD,mDAAkB,WACtB,QAAO;EAEV;AACD,SAAO;AACR;ACzKD,SAAgB,eAAeC,QAAuC;AACpE,QAAM,EAAE,cAAc,oBAAoB,cAAc,OAAO,SAAS,KAAA,IAASC;AAEjF,MAAI,MAAM,QAAQ,YAAA,KAAiB,aAAa,OAC9C,QAAO,aAAa,GAAG,EAAA,EAAK,KAAA;AAE9B,MAAI,gBAAA,CAAiB,MAAM,QAAQ,YAAA,EACjC,QAAO,aAAa,KAAA;AAEtB,MAAI,mBACF,QAAO,mBAAmB,KAAA;AAE5B,QAAM,OAAO,oBAAI,KAAA;AACjB,QAAM,OAAO,KAAK,YAAA;AAClB,QAAM,QAAQ,KAAK,SAAA,IAAa;AAChC,QAAM,MAAM,KAAK,QAAA;AACjB,QAAMC,iCAAgC;IAAC;IAAQ;IAAU;EAAS;AAElE,QAAM,mBAAmB,IAAI,0CAAc,MAAA;AAC3C,QAAM,WAAW,0CAAe,iBAAiB,gBAAA,EAAkB,QAAA;AAEnE,MAAIA,+BAA8B,SAAS,eAAe,KAAA,EACxD,QAAO,0CAAW,IAAI,0CAAiB,MAAM,OAAO,KAAK,GAAG,GAAG,CAAA,GAAI,QAAA;AAErE,SAAO,0CAAW,IAAI,0CAAa,MAAM,OAAO,GAAA,GAAM,QAAA;AACvD;AAOD,SAAgB,eAAeC,QAAuC;AACpE,QAAM,EAAE,cAAc,mBAAA,IAAuBF;AAE7C,MAAI,aACF,QAAO,aAAa,KAAA;AAGtB,MAAI,mBACF,QAAO,mBAAmB,KAAA;AAG5B,SAAO,IAAI,yCAAK,GAAG,GAAG,CAAA;AACvB;;;AC9DD,SAAgB,MAASG,KAAUC,OAAqB;AACtD,QAAM,SAAS,CAAE;AACjB,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAKC,MACnC,QAAO,KAAK,IAAI,MAAM,GAAG,IAAIA,KAAA,CAAK;AAEpC,SAAO;AACR;ACbD,SAAgB,qBAAqBC,aAA0BC,WAAsBC,cAAuB,OAAO;AACjH,QAAMC,OAAmC;IACvC,MAAM;IACN,OAAO;IACP,KAAK;IACL,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,cAAc;IACd,WAAW,mBAAmB,SAAA;IAC9B,QAAQ,gBAAgB,SAAA;EACzB;AACD,MAAI,aAAa;AACf,WAAO,KAAK;AACZ,WAAO,KAAK;AACZ,WAAO,KAAK;EACb;AAED,MAAI,gBAAgB,OAAO;AACzB,WAAO,KAAK;AACZ,WAAO,KAAK;AACZ,WAAO,KAAK;AACZ,WAAO,KAAK;EACb;AACD,MAAI,gBAAgB,QAAQ;AAC1B,WAAO,KAAK;AACZ,WAAO,KAAK;EACb;AAED,MAAI,gBAAgB,SAClB,QAAO,KAAK;AAEd,SAAO;AACR;AAMD,SAAgB,kBAAkBC,QAA2C;AAC3E,SAAO,KAAKC,UAAA,gBAAAA,OAAO,MAAM;IACvB,MAAM;IACN,OAAO;IACP,KAAK;IACL,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,aAAa;EACd,CAAA;AACF;AAED,SAAgB,2BAA2BC,UAAuB;AAChE,QAAM,cAAc,SAAS,cAA2B,iBAAA;AACxD,MAAI,YACF,QAAO,YAAY,MAAA;AAErB,QAAM,QAAQ,SAAS,cAA2B,cAAA;AAClD,MAAI,MACF,QAAO,MAAM,MAAA;AAEf,QAAM,WAAW,SAAS,cAA2B,0BAAA;AACrD,MAAI,SACF,QAAO,SAAS,MAAA;AACnB;AAED,SAAgB,mBAAmBL,WAAsB;AACvD,MAAI,cAAc,GAChB,QAAO;AACT,MAAI,cAAc,GAChB,QAAO;AACT,SAAA;AACD;AAED,SAAgB,gBAAgBA,WAAsB;AACpD,MAAI,cAAc,GAChB,QAAO;AACT,MAAI,cAAc,GAChB,QAAO;AACT,SAAA;AACD;;;ACpCD,SAAgB,eAAeM,OAAkBC,KAAgB;AAC/D,QAAMC,OAAoB,CAAE;AAC5B,MAAI,WAAW,MAAM,IAAI,EAAE,MAAM,EAAG,CAAA;AACpC,QAAM,OAAO;AACb,SAAO,SAAS,QAAQ,IAAA,IAAQ,GAAG;AACjC,SAAK,KAAK,QAAA;AACV,eAAW,SAAS,IAAI,EAAE,MAAM,EAAG,CAAA;EACpC;AACD,SAAO;AACR;AAED,SAAgB,YAAYC,QAA0C;AACpE,QAAM,EAAE,SAAS,cAAc,YAAY,OAAA,IAAWC;AACtD,QAAM,cAAc,eAAe,OAAA;AAEnC,QAAM,aAAa,MAAM,KAAK,EAAE,QAAQ,YAAa,GAAE,CAAC,GAAG,MAAM,QAAQ,IAAI,EAAE,KAAK,IAAI,EAAG,CAAA,CAAC;AAE5F,QAAM,kBAAkB,0CAAa,OAAA;AACrC,QAAM,iBAAiB,0CAAW,OAAA;AAElC,QAAM,aAAa,sBAAsB,iBAAiB,cAAc,MAAA;AACxE,QAAM,eAAe,qBAAqB,gBAAgB,cAAc,MAAA;AAExE,QAAM,gBAAgB,eAAe,WAAW,SAAS,EAAE,MAAM,EAAG,CAAA,GAAG,eAAA;AACvE,QAAM,gBAAgB,eAAe,gBAAgB,aAAa,IAAI,EAAE,MAAM,EAAG,CAAA,CAAC;AAElF,QAAM,YAAY,cAAc,SAAS,WAAW,SAAS,cAAc;AAE3E,MAAI,cAAc,YAAY,IAAI;AAChC,UAAM,YAAY,KAAK;AAEvB,QAAI,YAAY,cAAc,cAAc,SAAS,CAAA;AAErD,QAAA,CAAK,UACH,aAAY,0CAAW,OAAA;AAEzB,UAAM,iBAAiB,MAAM,KAAK,EAAE,QAAQ,UAAW,GAAE,CAAC,GAAG,MAAM;AACjE,YAAM,OAAO,IAAI;AACjB,aAAO,UAAU,IAAI,EAAE,MAAM,KAAM,CAAA;IACpC,CAAA;AACD,kBAAc,KAAK,GAAG,cAAA;EACvB;AAED,QAAM,UAAU,cAAc,OAAO,YAAY,aAAA;AAEjD,QAAM,QAAQ,MAAM,SAAS,CAAA;AAE7B,SAAO;IACL,OAAO;IACP,OAAO;IACP,MAAM;EACP;AACF;AAqDD,SAAgB,aAAaC,QAAsB;AACjD,QAAM,EAAE,gBAAgB,SAAS,GAAG,WAAA,IAAeC;AAEnD,QAAMC,SAA4B,CAAE;AAEpC,MAAA,CAAK,kBAAkB,mBAAmB,GAAG;AAC3C,WAAO,KACL,YAAY;MACV,GAAG;MACH;IACD,CAAA,CAAC;AAEJ,WAAO;EACR;AAED,SAAO,KACL,YAAY;IACV,GAAG;IACH;EACD,CAAA,CAAC;AAIJ,WAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACvC,UAAM,YAAY,QAAQ,IAAI,EAAE,QAAQ,EAAG,CAAA;AAC3C,WAAO,KACL,YAAY;MACV,GAAG;MACH,SAAS;IACV,CAAA,CAAC;EAEL;AAED,SAAO;AACR;;;ACtJD,SAAgB,iBAAiBC,eAAuBC,OAA6B,CAAE,GAAa;AAClG,QAAM,SAAS,IAAI,aAAA;AAEnB,WAAS,YAAY;AACnB,WAAO,OAAO;EACf;AAED,WAAS,UAAUC,WAAmB;AACpC,WAAO,QAAQ;EAChB;AAED,WAAS,OAAOC,MAAYC,SAA+B;AACzD,WAAO,IAAI,0CAAc,OAAO,OAAO;MAAE,GAAG;MAAM,GAAG;IAAS,CAAA,EAAE,OAAO,IAAA;EACxE;AAED,WAAS,aAAaC,MAAiB,cAAc,MAAM;AACzD,QAAI,QAAQ,IAAA,KAAS,YACnB,QAAO,OAAO,OAAO,IAAA,GAAO;MAC1B,WAAW;MACX,WAAW;IACZ,CAAA;QAGD,QAAO,OAAO,OAAO,IAAA,GAAO,EAC1B,WAAW,OACZ,CAAA;EAEJ;AAED,WAAS,iBAAiBF,MAAYC,UAAgC,CAAE,GAAE;AACxE,WAAO,IAAI,0CAAc,OAAO,OAAO;MAAE,GAAG;MAAM,OAAO;MAAQ,MAAM;MAAW,GAAG;IAAS,CAAA,EAAE,OAAO,IAAA;EACxG;AAED,WAAS,UAAUD,MAAYC,UAAgC,CAAE,GAAE;AACjE,WAAO,IAAI,0CAAc,OAAO,OAAO;MAAE,GAAG;MAAM,OAAO;MAAQ,GAAG;IAAS,CAAA,EAAE,OAAO,IAAA;EACvF;AAED,WAAS,YAAY;AACnB,UAAM,cAAc,0CAAM,0CAAA,CAAkB;AAC5C,UAAM,SAAS;MAAC;MAAG;MAAG;MAAG;MAAG;MAAG;MAAG;MAAG;MAAG;MAAG;MAAI;MAAI;IAAG;AACtD,WAAO,OAAO,IAAI,CAAA,UAAS;MAAE,OAAO,UAAU,OAAO,YAAY,IAAI,EAAE,OAAO,KAAM,CAAA,CAAC,CAAC;MAAG,OAAO;IAAM,EAAA;EACvG;AAED,WAAS,SAASD,MAAYC,UAAgC,CAAE,GAAE;AAChE,WAAO,IAAI,0CAAc,OAAO,OAAO;MAAE,GAAG;MAAM,MAAM;MAAW,GAAG;IAAS,CAAA,EAAE,OAAO,IAAA;EACzF;AAED,WAAS,QAAQC,MAAiBC,SAAgC;AAChE,QAAI,gBAAgB,IAAA,EAClB,QAAO,IAAI,0CAAc,OAAO,OAAO;MACrC,GAAG;MACH,GAAG;MACH,UAAW,KAAuB;IACnC,CAAA,EAAE,cAAc,OAAO,IAAA,CAAK;QAG7B,QAAO,IAAI,0CAAc,OAAO,OAAO;MAAE,GAAG;MAAM,GAAG;IAAS,CAAA,EAAE,cAAc,OAAO,IAAA,CAAK;EAE7F;AAED,WAAS,UAAUH,MAAYI,SAA0C,UAAU;AACjF,WAAO,IAAI,0CAAc,OAAO,OAAO;MAAE,GAAG;MAAM,SAAS;IAAQ,CAAA,EAAE,OAAO,IAAA;EAC7E;AAED,WAAS,UAAUJ,MAAY;;AAC7B,UAAM,QAAQ,IAAI,0CAAc,OAAO,OAAO;MAC5C,GAAG;MACH,MAAM;MACN,QAAQ;IACT,CAAA,EAAE,cAAc,IAAA;AACjB,UAAM,SAAQ,WAAM,KAAK,CAAA,MAAK,EAAE,SAAS,WAAA,MAA3B,mBAAyC;AAEvD,QAAI,UAAU,QAAQ,UAAU,OAC9B,QAAO;AAET,WAAO;EACR;AAED,QAAMK,qBAA2C;IAC/C,MAAM;IACN,OAAO;IACP,KAAK;IACL,MAAM;IACN,QAAQ;IACR,QAAQ;EACT;AAED,WAAS,KACPC,SACAC,MACAN,UAAgC,CAAE,GAClC;AACA,UAAMO,SAAO;MAAE,GAAG;MAAoB,GAAG;IAAS;AAClD,UAAM,QAAQ,QAAQ,SAASA,MAAAA;AAC/B,UAAMC,SAAO,MAAM,KAAK,CAAA,MAAK,EAAE,SAAS,IAAA;AACxC,WAAOA,SAAOA,OAAK,QAAQ;EAC5B;AAED,SAAO;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;AACF;;;AC/ID,SAAgB,aAAaC,KAAkC;AAC7D,QAAMC,WAAU,4BAA4B,EAC1C,KAAK,IAAI,KAAA,EACV,CAAA;AACD,SAAO,SAAS,MAAA;;AAAM,uCAAK,YAAS,KAAAA,SAAQ,QAAR,mBAAa,UAAS;GAAA;AAC3D;;;ACGD,SAAgB,eACdC,MACA;AACA,QAAM,KAAK,mBAAA;AAEX,QAAM,SAAS,yBAAI,KAAK;AACxB,QAAMC,SAA8B,CAAE;AAEtC,MAAA,EAAK,iCAAQ,QACX,SAAQ,KACN,mDAAmD,yBAAI,KAAK,MAAA,EAAQ;AAIxE,mCAAQ,QAAQ,CAAC,OAAO;AACtB,WAAO,aAAa,SAAS,EAAA,CAAG,CAAC,IAAI,IAAI,QAAa,KAAK,IAAI,GAAG,GAAA;EACnE;AACD,SAAO;AACR;;;ACbD,SAAgB,UAAUC,SAA0C;AAClE,QAAM,kBAAkB,SAAS,MAAM,MAAM,OAAA,CAAQ;AACrD,QAAM,WAAW,SAAS,MAAM,IAAI,KAAK,SAAS,MAAM;IAAE,OAAO;IAAU,GAAG,gBAAgB;EAAO,CAAA,CAAA;AAErG,QAAM,aAAa,CAACC,QAAgBC,cAAsB;AACxD,QAAI,UAAU,WAAW,EACvB,QAAO;AAET,aAAS,OAAO,UAAU,KAAA;AAC1B,gBAAY,UAAU,UAAU,KAAA;AAChC,WAAO,SAAS,MAAM,QAAQ,OAAO,MAAM,GAAG,UAAU,MAAA,GAAS,SAAA,MAAe;EACjF;AAED,QAAM,WAAW,CAACD,QAAgBC,cAAsB;AACtD,QAAI,UAAU,WAAW,EACvB,QAAO;AAET,aAAS,OAAO,UAAU,KAAA;AAC1B,gBAAY,UAAU,UAAU,KAAA;AAChC,WAAO,SAAS,MAAM,QAAQ,OAAO,MAAA,CAAO,UAAU,MAAA,GAAS,SAAA,MAAe;EAC/E;AAED,QAAM,WAAW,CAACD,QAAgBC,cAAsB;AACtD,QAAI,UAAU,WAAW,EACvB,QAAO;AAET,aAAS,OAAO,UAAU,KAAA;AAC1B,gBAAY,UAAU,UAAU,KAAA;AAEhC,QAAI,OAAO;AACX,UAAM,WAAW,UAAU;AAC3B,WAAO,OAAO,YAAY,OAAO,QAAQ,QAAQ;AAC/C,YAAM,QAAQ,OAAO,MAAM,MAAM,OAAO,QAAA;AACxC,UAAI,SAAS,MAAM,QAAQ,WAAW,KAAA,MAAW,EAC/C,QAAO;IACV;AAED,WAAO;EACR;AAED,SAAO;IACL;IACA;IACA;EACD;AACF;;;AC3DD,IAAI,QAAQ;AAMZ,SAAgB,iBAAiB;AAC/B,cAAY,CAAC,cAAc;AACzB,QAAA,CAAK,SACH;AACF,UAAM,aAAa,SAAS,iBAAiB,yBAAA;AAC7C,aAAS,KAAK,sBACZ,cACA,WAAW,CAAA,KAAM,iBAAA,CAAkB;AAErC,aAAS,KAAK,sBACZ,aACA,WAAW,CAAA,KAAM,iBAAA,CAAkB;AAErC;AAEA,cAAU,MAAM;AACd,UAAI,UAAU,EACZ,UACG,iBAAiB,yBAAA,EACjB,QAAQ,CAAA,SAAQ,KAAK,OAAA,CAAQ;AAElC;IACD,CAAA;EACF,CAAA;AACF;AAED,SAAS,mBAAmB;AAC1B,QAAM,UAAU,SAAS,cAAc,MAAA;AACvC,UAAQ,aAAa,yBAAyB,EAAA;AAC9C,UAAQ,WAAW;AACnB,UAAQ,MAAM,UAAU;AACxB,UAAQ,MAAM,UAAU;AACxB,UAAQ,MAAM,WAAW;AACzB,UAAQ,MAAM,gBAAgB;AAC9B,SAAO;AACR;;;ACzCD,SAAgB,eAAeC,IAAqB;AAElD,SAAO,SAAS,MAAA;;AAAM,WAAAC,SAAQ,EAAA,IAAM,SAAQ,kBAAa,EAAA,MAAb,mBAAkB,QAAQ,OAAO,IAAI;GAAA;AAClF;;;ACFD,SAAgB,mBAAsD;AACpE,QAAM,WAAW,mBAAA;AAEjB,QAAM,aAAa,IAAA;AACnB,QAAM,iBAAiB,SAAsB,MAAM;;AAGjD,WAAO,CAAC,SAAS,UAAW,EAAC,UAAS,gBAAW,UAAX,mBAAkB,IAAI,QAAA,KAAY,gBAAW,UAAX,mBAAkB,IAAI,qBAAqB,aAAa,UAAA;EACjI,CAAA;AAID,QAAMC,cAA0C,OAAO,OAAO,CAAE,GAAE,SAAS,OAAA;AAC3E,QAAMC,MAA2B,CAAE;AAGnC,aAAW,OAAO,SAAS,MACzB,QAAO,eAAe,KAAK,KAAK;IAC9B,YAAY;IACZ,cAAc;IACd,KAAK,MAAM,SAAS,MAAM,GAAA;EAC3B,CAAA;AAIH,MAAI,OAAO,KAAK,WAAA,EAAa,SAAS,EACpC,YAAW,OAAO,YAChB,QAAO,eAAe,KAAK,KAAK;IAC9B,YAAY;IACZ,cAAc;IACd,KAAK,MAAM,YAAa,GAAA;EACzB,CAAA;AAKL,SAAO,eAAe,KAAK,OAAO;IAChC,YAAY;IACZ,cAAc;IACd,KAAK,MAAM,SAAS,MAAM;EAC3B,CAAA;AACD,WAAS,UAAU;AAEnB,WAAS,WAAWC,OAAyB;AAC3C,eAAW,QAAQC;AAEnB,QAAA,CAAKA,MACH;AAGF,WAAO,eAAe,KAAK,OAAO;MAChC,YAAY;MACZ,cAAc;MACd,KAAK,MAAOA,iBAAe,UAAUA,QAAMA,MAAI;IAChD,CAAA;AAED,aAAS,UAAU;EACpB;AAED,SAAO;IAAE;IAAY;IAAY;EAAgB;AAClD;;;ACjDD,SAAgB,gBAA+CC,QAA4B;AACzF,QAAM,KAAK,mBAAA;AAEX,QAAM,eAAe,OAAO,MAAK,yBAAI,KAAK,UAAS,CAAE,CAAA,EAAE,OAAO,CAAC,MAAM,SAAS;AAC5E,UAAM,gBAAgB,yBAAI,KAAK,MAAM,OAAsB;AAC3D,QAAI,iBAAA,OACF,MAAK,IAAA,IAAmB;AAC1B,WAAO;EACR,GAAE,CAAE,CAAA;AAEL,QAAM,WAAW,MAAMC,MAAA;AACvB,SAAO,SAAS,MAAM;AACpB,UAAM,iBAAiB,CAAE;AACzB,UAAM,iBAAgB,yBAAI,MAAM,UAAS,CAAE;AAE3C,WAAO,KAAK,aAAA,EAAe,QAAQ,CAAC,QAAQ;AAC1C,qBAAe,SAAS,GAAA,CAAI,IAAe,cAAc,GAAA;IAC1D,CAAA;AAGD,WAAO,OAAO,KAAK;MAAE,GAAG;MAAc,GAAG;IAAgB,CAAA,EAAE,OAAO,CAAC,MAAM,SAAS;AAChF,UAAI,SAAS,MAAM,IAAA,MAAA,OACjB,MAAK,IAAA,IAAmB,SAAS,MAAM,IAAA;AACzC,aAAO;IACR,GAAE,CAAE,CAAA;EACN,CAAA;AACF;;;ACzBD,SAAgB,qBAAyEC,QAA4BC,MAA6C;AAChK,QAAM,cAAc,gBAAgBC,MAAA;AACpC,QAAM,eAAe,OAAO,eAAe,IAAA,IAAQ,CAAE;AAErD,SAAO,SAAS,OAAO;IACrB,GAAG,YAAY;IACf,GAAG;EACJ,EAAA;AACF;;;ACpBD,SAAgB,aAAaC,gBAA8CC,kBAAgD;AAEzH,QAAM,qBAAqB,aAAa,OAAO,GAAA;AAE/C,QAAM,mBAAmB,IAAoB,IAAA;AAC7C,QAAM,cAAc,gBAAA;AAEpB,WAAS,wBAAwB;AAC/B,qBAAiB,QAAQ;AACzB,uBAAmB,QAAQ;EAC5B;AAED,WAAS,sBAAsBC,OAAqBC,aAA0B;AAC5E,UAAM,gBAAgB,MAAM;AAC5B,UAAM,YAAY;MAAE,GAAG,MAAM;MAAS,GAAG,MAAM;IAAS;AACxD,UAAM,WAAW,oBAAoB,WAAW,cAAc,sBAAA,CAAuB;AACrF,UAAM,mBAAmB,oBAAoB,WAAW,QAAA;AACxD,UAAM,oBAAoB,kBAAkB,YAAY,sBAAA,CAAuB;AAC/E,UAAM,YAAY,QAAQ,CAAC,GAAG,kBAAkB,GAAG,iBAAkB,CAAA;AACrE,qBAAiB,QAAQ;AACzB,uBAAmB,QAAQ;EAC5B;AAED,cAAY,CAAC,cAAc;AACzB,QAAI,eAAe,SAAS,iBAAiB,OAAO;AAClD,YAAM,qBAAqB,CAACD,UAAwB,sBAAsB,OAAO,iBAAiB,KAAA;AAClG,YAAM,qBAAqB,CAACA,UAAwB,sBAAsB,OAAO,eAAe,KAAA;AAEhG,qBAAe,MAAM,iBAAiB,gBAAgB,kBAAA;AACtD,uBAAiB,MAAM,iBAAiB,gBAAgB,kBAAA;AAExD,gBAAU,MAAM;;AACd,6BAAe,UAAf,mBAAsB,oBAAoB,gBAAgB;AAC1D,+BAAiB,UAAjB,mBAAwB,oBAAoB,gBAAgB;MAC7D,CAAA;IACF;EACF,CAAA;AAED,cAAY,CAAC,cAAc;;AACzB,QAAI,iBAAiB,OAAO;AAC1B,YAAM,0BAA0B,CAACA,UAAwB;;AACvD,YAAA,CAAK,iBAAiB,SAAA,EAAW,MAAM,kBAAkB,aACvD;AAEF,cAAM,SAAS,MAAM;AACrB,cAAM,kBAAkB;UAAE,GAAG,MAAM;UAAS,GAAG,MAAM;QAAS;AAC9D,cAAM,qBAAmBE,MAAA,eAAe,UAAf,gBAAAA,IAAsB,SAAS,cAAW,sBAAiB,UAAjB,mBAAwB,SAAS;AACpG,cAAM,4BAAA,CAA6B,iBAAiB,iBAAiB,iBAAiB,KAAA;AACtF,cAAM,4BAAA,CAAA,CAA8B,OAAO,QAAQ,2BAAA;AAEnD,YAAI,iBACF,uBAAA;iBAEO,6BAA6B,2BAA2B;AAC/D,gCAAA;AACA,sBAAY,QAAA;QACb;MACF;AACD,2BAAe,UAAf,mBAAsB,cAAc,iBAAiB,eAAe;AAEpE,gBAAU,MAAA;;AAAM,gBAAAA,MAAA,eAAe,UAAf,gBAAAA,IAAsB,cAAc,oBAAoB,eAAe;OAAwB;IAChH;EACF,CAAA;AAED,SAAO;IACL;IACA,eAAe,YAAY;EAC5B;AACF;AAKD,SAAS,oBAAoBC,OAAcC,MAAqB;AAC9D,QAAM,MAAM,KAAK,IAAI,KAAK,MAAM,MAAM,CAAA;AACtC,QAAM,SAAS,KAAK,IAAI,KAAK,SAAS,MAAM,CAAA;AAC5C,QAAM,QAAQ,KAAK,IAAI,KAAK,QAAQ,MAAM,CAAA;AAC1C,QAAM,OAAO,KAAK,IAAI,KAAK,OAAO,MAAM,CAAA;AAExC,UAAQ,KAAK,IAAI,KAAK,QAAQ,OAAO,IAAA,GAArC;IACE,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AACE,YAAM,IAAI,MAAM,aAAA;EACnB;AACF;AAED,SAAS,oBAAoBC,WAAkBC,UAAgB,UAAU,GAAG;AAC1E,QAAMC,mBAA4B,CAAE;AACpC,UAAQ,UAAR;IACE,KAAK;AACH,uBAAiB,KACf;QAAE,GAAG,UAAU,IAAI;QAAS,GAAG,UAAU,IAAI;MAAS,GACtD;QAAE,GAAG,UAAU,IAAI;QAAS,GAAG,UAAU,IAAI;MAAS,CAAA;AAExD;IACF,KAAK;AACH,uBAAiB,KACf;QAAE,GAAG,UAAU,IAAI;QAAS,GAAG,UAAU,IAAI;MAAS,GACtD;QAAE,GAAG,UAAU,IAAI;QAAS,GAAG,UAAU,IAAI;MAAS,CAAA;AAExD;IACF,KAAK;AACH,uBAAiB,KACf;QAAE,GAAG,UAAU,IAAI;QAAS,GAAG,UAAU,IAAI;MAAS,GACtD;QAAE,GAAG,UAAU,IAAI;QAAS,GAAG,UAAU,IAAI;MAAS,CAAA;AAExD;IACF,KAAK;AACH,uBAAiB,KACf;QAAE,GAAG,UAAU,IAAI;QAAS,GAAG,UAAU,IAAI;MAAS,GACtD;QAAE,GAAG,UAAU,IAAI;QAAS,GAAG,UAAU,IAAI;MAAS,CAAA;AAExD;EACH;AACD,SAAO;AACR;AAED,SAAS,kBAAkBH,MAAe;AACxC,QAAM,EAAE,KAAK,OAAO,QAAQ,KAAA,IAAS;AACrC,SAAO;IACL;MAAE,GAAG;MAAM,GAAG;IAAK;IACnB;MAAE,GAAG;MAAO,GAAG;IAAK;IACpB;MAAE,GAAG;MAAO,GAAG;IAAQ;IACvB;MAAE,GAAG;MAAM,GAAG;IAAQ;EACvB;AACF;AAID,SAAS,iBAAiBD,OAAcK,SAAkB;AACxD,QAAM,EAAE,GAAG,EAAA,IAAM;AACjB,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,GAAG,IAAI,QAAQ,QAAQ,IAAI,KAAK;AACnE,UAAM,KAAK,QAAQ,CAAA,EAAG;AACtB,UAAM,KAAK,QAAQ,CAAA,EAAG;AACtB,UAAM,KAAK,QAAQ,CAAA,EAAG;AACtB,UAAM,KAAK,QAAQ,CAAA,EAAG;AAGtB,UAAM,YAAc,KAAK,MAAQ,KAAK,KAAQ,KAAK,KAAK,OAAO,IAAI,OAAO,KAAK,MAAM;AACrF,QAAI,UACF,UAAA,CAAU;EACb;AAED,SAAO;AACR;AAID,SAAS,QAAyBC,QAAsC;AACtE,QAAMC,YAAsB,OAAO,MAAA;AACnC,YAAU,KAAK,CAACC,GAAUC,MAAa;AACrC,QAAI,EAAE,IAAI,EAAE,EACV,QAAO;aACA,EAAE,IAAI,EAAE,EACf,QAAO;aACA,EAAE,IAAI,EAAE,EACf,QAAO;aACA,EAAE,IAAI,EAAE,EACf,QAAO;QACJ,QAAO;EACb,CAAA;AACD,SAAO,iBAAiB,SAAA;AACzB;AAGD,SAAS,iBAAkCH,QAAsC;AAC/E,MAAI,OAAO,UAAU,EACnB,QAAO,OAAO,MAAA;AAEhB,QAAMI,YAAsB,CAAE;AAC9B,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAM,IAAI,OAAO,CAAA;AACjB,WAAO,UAAU,UAAU,GAAG;AAC5B,YAAM,IAAI,UAAU,UAAU,SAAS,CAAA;AACvC,YAAM,IAAI,UAAU,UAAU,SAAS,CAAA;AACvC,WAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GACtD,WAAU,IAAA;UACP;IACN;AACD,cAAU,KAAK,CAAA;EAChB;AACD,YAAU,IAAA;AAEV,QAAMC,YAAsB,CAAE;AAC9B,WAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,UAAM,IAAI,OAAO,CAAA;AACjB,WAAO,UAAU,UAAU,GAAG;AAC5B,YAAM,IAAI,UAAU,UAAU,SAAS,CAAA;AACvC,YAAM,IAAI,UAAU,UAAU,SAAS,CAAA;AACvC,WAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,GACtD,WAAU,IAAA;UACP;IACN;AACD,cAAU,KAAK,CAAA;EAChB;AACD,YAAU,IAAA;AAEV,MACE,UAAU,WAAW,KAClB,UAAU,WAAW,KACrB,UAAU,CAAA,EAAG,MAAM,UAAU,CAAA,EAAG,KAChC,UAAU,CAAA,EAAG,MAAM,UAAU,CAAA,EAAG,EAEnC,QAAO;MAIP,QAAO,UAAU,OAAO,SAAA;AAE3B;;;AC9ND,IAAI,mBAAmB,SAAU,gBAAgB;AAC7C,MAAI,OAAO,aAAa,aAAa;AACjC,WAAO;AAAA,EACX;AACA,MAAI,eAAe,MAAM,QAAQ,cAAc,IAAI,eAAe,CAAC,IAAI;AACvE,SAAO,aAAa,cAAc;AACtC;AACA,IAAI,aAAa,oBAAI,QAAQ;AAC7B,IAAI,oBAAoB,oBAAI,QAAQ;AACpC,IAAI,YAAY,CAAC;AACjB,IAAI,YAAY;AAChB,IAAI,aAAa,SAAU,MAAM;AAC7B,SAAO,SAAS,KAAK,QAAQ,WAAW,KAAK,UAAU;AAC3D;AACA,IAAI,iBAAiB,SAAU,QAAQ,SAAS;AAC5C,SAAO,QACF,IAAI,SAAU,QAAQ;AACvB,QAAI,OAAO,SAAS,MAAM,GAAG;AACzB,aAAO;AAAA,IACX;AACA,QAAI,kBAAkB,WAAW,MAAM;AACvC,QAAI,mBAAmB,OAAO,SAAS,eAAe,GAAG;AACrD,aAAO;AAAA,IACX;AACA,YAAQ,MAAM,eAAe,QAAQ,2BAA2B,QAAQ,iBAAiB;AACzF,WAAO;AAAA,EACX,CAAC,EACI,OAAO,SAAU,GAAG;AAAE,WAAO,QAAQ,CAAC;AAAA,EAAG,CAAC;AACnD;AASA,IAAI,yBAAyB,SAAU,gBAAgB,YAAY,YAAY,kBAAkB;AAC7F,MAAI,UAAU,eAAe,YAAY,MAAM,QAAQ,cAAc,IAAI,iBAAiB,CAAC,cAAc,CAAC;AAC1G,MAAI,CAAC,UAAU,UAAU,GAAG;AACxB,cAAU,UAAU,IAAI,oBAAI,QAAQ;AAAA,EACxC;AACA,MAAI,gBAAgB,UAAU,UAAU;AACxC,MAAI,cAAc,CAAC;AACnB,MAAI,iBAAiB,oBAAI,IAAI;AAC7B,MAAI,iBAAiB,IAAI,IAAI,OAAO;AACpC,MAAI,OAAO,SAAU,IAAI;AACrB,QAAI,CAAC,MAAM,eAAe,IAAI,EAAE,GAAG;AAC/B;AAAA,IACJ;AACA,mBAAe,IAAI,EAAE;AACrB,SAAK,GAAG,UAAU;AAAA,EACtB;AACA,UAAQ,QAAQ,IAAI;AACpB,MAAI,OAAO,SAAU,QAAQ;AACzB,QAAI,CAAC,UAAU,eAAe,IAAI,MAAM,GAAG;AACvC;AAAA,IACJ;AACA,UAAM,UAAU,QAAQ,KAAK,OAAO,UAAU,SAAU,MAAM;AAC1D,UAAI,eAAe,IAAI,IAAI,GAAG;AAC1B,aAAK,IAAI;AAAA,MACb,OACK;AACD,YAAI;AACA,cAAI,OAAO,KAAK,aAAa,gBAAgB;AAC7C,cAAI,gBAAgB,SAAS,QAAQ,SAAS;AAC9C,cAAI,gBAAgB,WAAW,IAAI,IAAI,KAAK,KAAK;AACjD,cAAI,eAAe,cAAc,IAAI,IAAI,KAAK,KAAK;AACnD,qBAAW,IAAI,MAAM,YAAY;AACjC,wBAAc,IAAI,MAAM,WAAW;AACnC,sBAAY,KAAK,IAAI;AACrB,cAAI,iBAAiB,KAAK,eAAe;AACrC,8BAAkB,IAAI,MAAM,IAAI;AAAA,UACpC;AACA,cAAI,gBAAgB,GAAG;AACnB,iBAAK,aAAa,YAAY,MAAM;AAAA,UACxC;AACA,cAAI,CAAC,eAAe;AAChB,iBAAK,aAAa,kBAAkB,MAAM;AAAA,UAC9C;AAAA,QACJ,SACO,GAAG;AACN,kBAAQ,MAAM,mCAAmC,MAAM,CAAC;AAAA,QAC5D;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AACA,OAAK,UAAU;AACf,iBAAe,MAAM;AACrB;AACA,SAAO,WAAY;AACf,gBAAY,QAAQ,SAAU,MAAM;AAChC,UAAI,eAAe,WAAW,IAAI,IAAI,IAAI;AAC1C,UAAI,cAAc,cAAc,IAAI,IAAI,IAAI;AAC5C,iBAAW,IAAI,MAAM,YAAY;AACjC,oBAAc,IAAI,MAAM,WAAW;AACnC,UAAI,CAAC,cAAc;AACf,YAAI,CAAC,kBAAkB,IAAI,IAAI,GAAG;AAC9B,eAAK,gBAAgB,gBAAgB;AAAA,QACzC;AACA,0BAAkB,OAAO,IAAI;AAAA,MACjC;AACA,UAAI,CAAC,aAAa;AACd,aAAK,gBAAgB,UAAU;AAAA,MACnC;AAAA,IACJ,CAAC;AACD;AACA,QAAI,CAAC,WAAW;AAEZ,mBAAa,oBAAI,QAAQ;AACzB,mBAAa,oBAAI,QAAQ;AACzB,0BAAoB,oBAAI,QAAQ;AAChC,kBAAY,CAAC;AAAA,IACjB;AAAA,EACJ;AACJ;AAQO,IAAI,aAAa,SAAU,gBAAgB,YAAY,YAAY;AACtE,MAAI,eAAe,QAAQ;AAAE,iBAAa;AAAA,EAAoB;AAC9D,MAAI,UAAU,MAAM,KAAK,MAAM,QAAQ,cAAc,IAAI,iBAAiB,CAAC,cAAc,CAAC;AAC1F,MAAI,mBAAmB,cAAc,iBAAiB,cAAc;AACpE,MAAI,CAAC,kBAAkB;AACnB,WAAO,WAAY;AAAE,aAAO;AAAA,IAAM;AAAA,EACtC;AAGA,UAAQ,KAAK,MAAM,SAAS,MAAM,KAAK,iBAAiB,iBAAiB,qBAAqB,CAAC,CAAC;AAChG,SAAO,uBAAuB,SAAS,kBAAkB,YAAY,aAAa;AACtF;;;AC1HA,SAAgB,cAAcC,QAAyB;AACrD,MAAIC;AACJ,QAAM,MAAM,aAAa,MAAA,GAAS,CAAC,OAAO;AAIxC,QAAI,GACF,QAAO,WAAW,EAAA;aACX,KACP,MAAA;EACH,CAAA;AAED,cAAY,MAAM;AAChB,QAAI,KACF,MAAA;EACH,CAAA;AACF;;;ACvBD,IAAIC,SAAQ;AASZ,SAAgBC,OAAMC,iBAA6C,SAAS,QAAQ;;AAClF,MAAI,gBACF,QAAO;AAET,MAAI,WAAW,gCACb,QAAO,GAAG,MAAA,KAAU,KAAI,UAAJ,oBAAa;AAGnC,QAAM,wBAAwB,4BAA4B,EAAE,OAAA,OAAkB,CAAA;AAE9E,MAAI,sBAAsB,MACxB,QAAO,GAAG,MAAA,IAAU,sBAAsB,MAAA,CAAO;AAGnD,SAAO,GAAG,MAAA,IAAU,EAAEF,MAAA;AACvB;;;AC7BD,SAAgB,SAAS;AACvB,SAAO;IACL,KAAK;IACL,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,UAAU;IACV,WAAW;IACX,WAAW;IACX,SAAS;IACT,QAAQ;IACR,KAAK;IACL,OAAO;IACP,QAAQ;IACR,IAAI;IACJ,KAAK;IACL,KAAK;IACL,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,MAAM;IACN,MAAM;IACN,WAAW;IACX,SAAS;IACT,OAAO;IACP,OAAO;IACP,KAAK;IACL,MAAM;IACN,UAAU;IACV,YAAY;EACb;AACF;;;ACjCD,SAAgB,UAAUG,QAAkC;AAC1D,QAAMC,WAAU,4BAA4B,EAC1C,QAAQ,IAAI,IAAA,EACb,CAAA;AACD,SAAO,SAAS,MAAA;;AAAM,6CAAQ,YAAS,KAAAA,SAAQ,WAAR,mBAAgB,UAAS;GAAA;AACjE;;;ACLD,SAAgB,qBACdC,YACAC,QACA;AACA,QAAM,aAAa,IAAA;AAEnB,QAAM,eAAe,CAACC,KAAQC,cAA6C;AAEzE,QAAIC,OAAM,YAAY,MAAM,QAAQ,WAAW,KAAA,EAC7C,KAAIA,OAAM,sBAAsB,WAAW;AACzC,iBAAW,QAAQ,CAAC,GAAI;AACxB,iBAAW,QAAQ;IACpB,OACI;AACH,YAAM,QAAQ,WAAW,MAAM,UAAU,CAAA,MAAK,UAAU,CAAA,CAAE;AAC1D,UAAI,UAAU,GACZ,YAAW,QAAQ,WAAW,MAAM,OAAO,CAAC,GAAG,MAAM,MAAM,KAAA;UAE3D,YAAW,QAAQ,CAAC,GAAG,WAAW,OAAO,GAAI;IAChD;aAIGA,OAAM,sBAAsB,UAC9B,YAAW,QAAQ,EAAE,GAAG,IAAK;cAGxB,MAAM,QAAQ,WAAW,KAAA,KAAU,UAAU,WAAW,KAAA,EAC3D,YAAW,QAAA;QAEX,YAAW,QAAQ,EAAE,GAAG,IAAK;AAGnC,WAAO,WAAW;EACnB;AAED,WAAS,sBAAsBC,QAA4CC,gBAA8CC,UAAqDC,SAAgB;;AAC5L,QAAA,EAAK,yCAAY,UAAA,CAAUJ,OAAM,YAAA,CAAa,MAAM,QAAQ,WAAW,KAAA,EACrE;AAEF,UAAM,aAAa,SAAA,EAAW,OAAO,CAAA,MAAK,EAAE,IAAI,QAAQ,aAAa,EAAA;AACrE,UAAM,aAAY,gBAAW,KAAK,CAAA,MAAK,EAAE,QAAQ,cAAA,MAA/B,mBAAgD;AAClE,QAAA,CAAK,UACH;AAEF,QAAIK,QAAoB;AACxB,YAAQ,QAAR;MACE,KAAK;MACL,KAAK,QAAQ;AACX,gBAAQ,kBAAkB,SAAS,WAAW,OAAO,SAAA;AACrD;MACD;MACD,KAAK,SAAS;AACZ,gBAAQ,kBAAkB,SAAS,WAAW,OAAO,mCAAU,EAAA;AAC/D;MACD;MACD,KAAK,QAAQ;AACX,gBAAQ,kBAAkB,SAAS,WAAW,OAAO,mCAAU,QAAQ,SAAS,EAAA;AAChF;MACD;IACF;AAED,eAAW,QAAQ;EACpB;AAED,SAAO;IACL;IACA;IACA;EACD;AACF;;;ACtED,SAAgB,QAAQC,SAA0B;AAChD,QAAMC,QAAO,IAAA;AACb,QAAM,QAAQ,SAAS,MAAA;;AAAM,kBAAAA,MAAK,UAAL,mBAAY,UAAS;GAAA;AAClD,QAAM,SAAS,SAAS,MAAA;;AAAM,kBAAAA,MAAK,UAAL,mBAAY,WAAU;GAAA;AAEpD,YAAU,MAAM;AACd,UAAM,KAAK,aAAa,OAAA;AACxB,QAAI,IAAI;AAEN,MAAAA,MAAK,QAAQ;QAAE,OAAO,GAAG;QAAa,QAAQ,GAAG;MAAc;AAE/D,YAAM,iBAAiB,IAAI,eAAe,CAAC,YAAY;AACrD,YAAA,CAAK,MAAM,QAAQ,OAAA,EACjB;AAIF,YAAA,CAAK,QAAQ,OACX;AAEF,cAAM,QAAQ,QAAQ,CAAA;AACtB,YAAIC;AACJ,YAAIC;AAEJ,YAAI,mBAAmB,OAAO;AAC5B,gBAAM,kBAAkB,MAAM;AAE9B,gBAAM,aAAa,MAAM,QAAQ,eAAA,IAC7B,gBAAgB,CAAA,IAChB;AACJ,oBAAQ,WAAW;AACnB,qBAAS,WAAW;QACrB,OACI;AAGH,oBAAQ,GAAG;AACX,qBAAS,GAAG;QACb;AAGD,QAAAF,MAAK,QAAQ;UAAE,OAAA;UAAO,QAAA;QAAQ;MAC/B,CAAA;AAED,qBAAe,QAAQ,IAAI,EAAE,KAAK,aAAc,CAAA;AAEhD,aAAO,MAAM,eAAe,UAAU,EAAA;IACvC,MAIC,CAAAA,MAAK,QAAA;EAER,CAAA;AAED,SAAO;IACL;IACA;EACD;AACF;;;ACpCD,SAAgB,gBACdG,cACAC,SACA;AACA,QAAM,QAAQ,IAAI,YAAA;AAElB,WAAS,QAAQC,OAAwB;AAEvC,UAAM,YAAY,QAAQ,MAAM,KAAA,EAAO,KAAA;AACvC,WAAO,aAAa,MAAM;EAC3B;AAED,QAAM,WAAW,CAACA,UAA2B;AAC3C,UAAM,QAAQ,QAAQ,KAAA;EACvB;AAED,SAAO;IACL;IACA;EACD;AACF;;;AC5CD,SAAgB,aAAaC,UAAqC;AAEhE,QAAM,SAAS,aAAa,IAAI,GAAA;AAEhC,QAAM,wBAAwB,CAACC,KAAaC,UAA+C;AACzF,WAAO,QAAQ,OAAO,QAAQ;AAE9B,QAAI,SACF,UAAS,GAAA;SAEN;AACH,YAAM,cAAc,iBAAA;AACpB,YAAM,qBAAqB,MAAM,IAAI,CAAA,SAAA;;AAAS;UAC5C,GAAG;UACH,aAAW,UAAK,UAAL,mBAAY,gBAAa,UAAK,IAAI,gBAAT,mBAAsB,WAAU;QACrE;OAAA;AACD,YAAM,eAAe,mBAAmB,KAAK,CAAA,SAAQ,KAAK,QAAQ,WAAA;AAClE,YAAM,SAAS,mBAAmB,IAAI,CAAA,SAAQ,KAAK,SAAA;AACnD,YAAM,YAAY,aAAa,QAAQ,OAAO,OAAO,6CAAc,SAAA;AAEnE,YAAM,UAAU,mBAAmB,KAAK,CAAA,SAAQ,KAAK,cAAc,SAAA;AAEnE,UAAI,QACD,SAAQ,IAAoB,MAAA;AAC/B,aAAO,mCAAS;IACjB;EACF;AAED,QAAM,iBAAiB,MAAM;AAC3B,WAAO,QAAQ;EAChB;AAED,SAAO;IACL;IACA;IACA;EACD;AACF;AAMD,SAAgB,UAAaC,OAAYC,YAAoB;AAC3D,SAAO,MAAM,IAAI,CAAC,GAAG,UAAU,OAAO,aAAa,SAAS,MAAM,MAAA,CAAA;AACnE;AAmBD,SAAgB,aACdC,QACAC,QACAC,cACA;AACA,QAAM,aACF,OAAO,SAAS,KAAK,MAAM,KAAK,MAAA,EAAQ,MAAM,CAAA,SAAQ,SAAS,OAAO,CAAA,CAAA;AAC1E,QAAM,mBAAmB,aAAa,OAAO,CAAA,IAAK;AAClD,QAAM,oBAAoB,eAAe,OAAO,QAAQ,YAAA,IAAgB;AACxE,MAAI,gBAAgB,UAAU,QAAQ,KAAK,IAAI,mBAAmB,CAAA,CAAE;AACpE,QAAM,sBAAsB,iBAAiB,WAAW;AACxD,MAAI,oBACF,iBAAgB,cAAc,OAAO,CAAA,MAAK,MAAM,YAAA;AAClD,QAAM,YAAY,cAAc,KAAK,CAAA,UACnC,MAAM,YAAA,EAAc,WAAW,iBAAiB,YAAA,CAAa,CAAC;AAEhE,SAAO,cAAc,eAAe,YAAA;AACrC;;;ACtCD,SAAgB,YAAiFC,kBAAqBC,SAAgC;AACpJ,SAAQ;IACN,cAAc;IACd,MAAM,GAAG,iBAAiB,UAAU,EAAA;IACpC,MAAM,GAAG,KAAK;AACZ,aAAO,MAAM;AACX,cAAM,cAAA,QAAqB,mCAAS,WAAU,aAAa,mCAAS,MAAM,IAAI,SAAS,mCAAS;AAChG,cAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,cAAM,cAAc,WAAW,aAAa,IAAI,KAAA;AAChD,eAAO,EAAE,kBAAkB;UAAE,GAAG;UAAa,KAAK;QAAY,GAAE,IAAI,KAAA;MACrE;IACF;EACF;AACF;;;ACtDD,SAAgB,YACdC,SACAC,MACA;;AACA,QAAM,YAAY,IAAyB,CAAE,CAAA;AAC7C,QAAM,uBAAuB,IAAY,MAAA;AACzC,QAAM,iBAAiB,IAAI,OAAA;AAC3B,QAAM,eAAe,QAAQ,QAAQ,YAAY;AACjD,MAAIC;AACJ,QAAM,gBAAc,UAAK,UAAL,mBAAY,cAAc,gBAAe;AAE7D,QAAM,EAAE,OAAO,SAAA,IAAa,gBAAgB,cAAc;IACxD,SAAS;MACP,SAAS;MACT,eAAe;IAChB;IACD,kBAAkB;MAChB,OAAO;MACP,eAAe;IAChB;IACD,WAAW,EACT,OAAO,UACR;EACF,CAAA;AAED,QAAM,sBAAsB,CAACC,SAA4D;;AAGvF,QAAI,UAAU;AACZ,YAAM,cAAc,IAAI,YAAY,MAAM;QAAE,SAAS;QAAO,YAAY;MAAO,CAAA;AAC/E,OAAAC,MAAA,KAAK,UAAL,gBAAAA,IAAY,cAAc;IAC3B;EACF;AAED,QACE,SACA,OAAO,gBAAgB,gBAAgB;;AACrC,UAAM,oBAAoB,gBAAgB;AAC1C,UAAM,SAAA;AACN,QAAI,mBAAmB;AACrB,YAAM,oBAAoB,qBAAqB;AAC/C,YAAM,uBAAuB,iBAAiB,KAAK,KAAA;AAEnD,UAAI,gBAAgB;AAClB,iBAAS,OAAA;AACT,4BAAoB,OAAA;AACpB,YAAI,yBAAyB,OAC3B,qBAAoB,aAAA;MACvB,WAEC,yBAAyB,UAAU,yBAAyB,iBACzDA,MAAA,UAAU,UAAV,gBAAAA,IAAiB,aAAY,QAChC;AAGA,iBAAS,SAAA;AACT,4BAAoB,OAAA;AACpB,4BAAoB,aAAA;MACrB,OACI;AAOH,cAAM,cAAc,sBAAsB;AAC1C,YAAI,eAAe,aAAa;AAC9B,mBAAS,eAAA;AACT,8BAAoB,OAAA;QACrB,OACI;AACH,mBAAS,SAAA;AACT,8BAAoB,aAAA;QACrB;MACF;IACF;EACF,GACD,EAAE,WAAW,KAAM,CAAA;AAQrB,QAAM,qBAAqB,CAACC,UAA0B;AACpD,UAAM,uBAAuB,iBAAiB,KAAK,KAAA;AACnD,UAAM,qBAAqB,qBAAqB,SAC9C,IAAI,OAAO,MAAM,aAAA,CAAc;AAEjC,UAAM,gBAAgB,MAAM,UAAU,YAAY,UAAU;AAC5D,QAAI,MAAM,WAAW,KAAK,SAAS,oBAAoB;AACrD,0BAAoB,SAAS,aAAA,EAAe;AAC5C,eAAS,eAAA;AAET,UAAA,CAAK,eAAe,OAAO;AACzB,cAAM,kBAAkB,KAAK,MAAM,MAAM;AACzC,aAAK,MAAM,MAAM,oBAAoB;AAKrC,oBAAY,2CAAa,WAAW,MAAM;;AACxC,gBAAID,MAAA,KAAK,UAAL,gBAAAA,IAAY,MAAM,uBAAsB,WAC1C,MAAK,MAAM,MAAM,oBAAoB;QAExC;MACF;IACF;AAED,QAAI,MAAM,WAAW,KAAK,SAAS,yBAAyB,OAC1D,UAAS,eAAA;EACZ;AACD,QAAM,uBAAuB,CAACC,UAA0B;AACtD,QAAI,MAAM,WAAW,KAAK,MAExB,sBAAqB,QAAQ,iBAAiB,KAAK,KAAA;EAEtD;AAED,QAAM,UAAU,MACd,MACA,CAAC,SAAS,YAAY;AACpB,QAAI,SAAS;AACX,gBAAU,QAAQ,iBAAiB,OAAA;AACnC,cAAQ,iBAAiB,kBAAkB,oBAAA;AAC3C,cAAQ,iBAAiB,mBAAmB,kBAAA;AAC5C,cAAQ,iBAAiB,gBAAgB,kBAAA;IAC1C,OACI;AAGH,eAAS,eAAA;AAET,UAAI,cAAA,OACF,4CAAa,aAAa;AAC5B,yCAAS,oBAAoB,kBAAkB;AAC/C,yCAAS,oBAAoB,mBAAmB;AAChD,yCAAS,oBAAoB,gBAAgB;IAC9C;EACF,GACD,EAAE,WAAW,KAAM,CAAA;AAGrB,QAAM,eAAe,MAAM,OAAO,MAAM;AACtC,UAAM,uBAAuB,iBAAiB,KAAK,KAAA;AACnD,yBAAqB,QACjB,MAAM,UAAU,YAAY,uBAAuB;EACxD,CAAA;AAED,cAAY,MAAM;AAChB,YAAA;AACA,iBAAA;EACD,CAAA;AAED,QAAM,YAAY,SAAS,MACzB,CAAC,WAAW,kBAAmB,EAAC,SAAS,MAAM,KAAA,CAAM;AAGvD,SAAO,EACL,UACD;AACF;AAED,SAAS,iBAAiBC,MAAoB;AAC5C,SAAO,OAAO,iBAAiB,IAAA,EAAM,iBAAiB,SAAS;AAChE;;;AC7ID,IAAA,mBAAe,gBAAgB;EAC7B,MAAM;EACN,OAAO;IACL,SAAS;MACP,MAAM;MACN,UAAU;IACX;IACD,YAAY,EACV,MAAM,QACP;EACF;EACD,OAAO,CAAE;EAGT,MAAMC,QAAO,EAAE,OAAO,OAAA,GAAU;;AAC9B,UAAM,EAAE,SAAS,WAAA,IAAe,OAAOA,MAAA;AAEvC,UAAM,OAAO,IAAA;AAEb,UAAM,EAAE,UAAA,IAAc,YAAY,SAAS,IAAA;AAC3C,WAAO,EAAE,SAAS,UAAW,CAAA;AAE7B,QAAI,WAAW,MAAM,QAAQ,EAAE,SAAS,UAAU,MAAO,CAAA;AACzD,eAAW,oBAAoB,YAAY,CAAE,CAAA;AAC7C,UAAM,WAAW,mBAAA;AAEjB,QAAI,aAAY,qCAAU,UAAS,GAAG;AACpC,YAAM,kBAAgB,0CAAU,WAAV,mBAAkB,KAAK,QACzC,IAAI,SAAS,OAAO,KAAK,IAAA,QACzB;AAEJ,YAAM,IAAI,MACR;QACE,sCAAsC,aAAA;QACtC;QACA;QACA;QACA,CACE,iFACA,yFACD,EACE,IAAI,CAAA,SAAQ,OAAO,IAAA,EAAM,EACzB,KAAK,IAAA;MACT,EAAC,KAAK,IAAA,CAAK;IAEf;AAED,WAAO,MAAM;AACX,UAAI,WAAW,SAAS,QAAQ,SAAS,UAAU,MACjD,QAAO,EAAE,MAAM,QAAQ,EAAE,SAAS,UAAU,MAAO,CAAA,EAAE,CAAA,GAAa,EAChE,KAAK,CAAC,MAAM;AACV,cAAM,KAAK,aAAa,CAAA;AACxB,YAAA,QAAW,yBAAI,kBAAiB,YAC9B,QAAO;AAGT,YAAI,yBAAI,aAAa,oCACnB,MAAK,QAAQ,GAAG;YAEhB,MAAK,QAAQ;AAEf,eAAO;MACR,EACF,CAAA;UAEI,QAAO;IACf;EACF;AACF,CAAA;;;ACjGD,IAAa,OAAO,gBAAgB;EAClC,MAAM;EACN,cAAc;EACd,MAAM,GAAG,EAAE,OAAO,MAAA,GAAS;AACzB,WAAO,MAAM;;AACX,UAAA,CAAK,MAAM,QACT,QAAO;AAET,YAAM,WAAW,oBAAoB,MAAM,QAAA,CAAS;AACpD,YAAM,+BAA+B,SAAS,UAAU,CAAA,UAAS,MAAM,SAAS,OAAA;AAChF,UAAI,iCAAiC,GACnC,QAAO;AAET,YAAM,0BAA0B,SAAS,4BAAA;AAGzC,YAAO,wBAAwB,UAA/B,wBAAsC;AAMtC,YAAM,cAAc,wBAAwB,QACxC,WAAW,OAAO,wBAAwB,KAAA,IAC1C;AACJ,YAAM,SAAS,WAAW;QAAE,GAAG;QAAyB,OAAO,CAAE;MAAE,GAAE,WAAA;AAErE,UAAI,SAAS,WAAW,EACtB,QAAO;AAET,eAAS,4BAAA,IAAgC;AACzC,aAAO;IACR;EACF;AACF,CAAA;;;ACED,IAAM,oBAAoB;EAAC;EAAQ;EAAO;AAAQ;AAElD,IAAa,YAAY,gBAAgB;EACvC,MAAM;EACN,cAAc;EACd,OAAO;IACL,SAAS;MACP,MAAM;MACN,SAAS;IACV;IACD,IAAI;MACF,MAAM,CAAC,QAAQ,MAAO;MACtB,SAAS;IACV;EACF;EACD,MAAMC,QAAO,EAAE,OAAO,MAAA,GAAS;AAC7B,UAAM,QAAQA,OAAM,UAAU,aAAaA,OAAM;AAEjD,QAAA,OAAW,UAAU,YAAY,kBAAkB,SAAS,KAAA,EAC1D,QAAO,MAAM,EAAE,OAAO,KAAA;AAExB,QAAI,UAAU,WACZ,QAAO,MAAM,EAAEA,OAAM,IAAI,OAAO,EAAE,SAAS,MAAM,QAAS,CAAA;AAE5D,WAAO,MAAM,EAAE,MAAM,OAAO,EAAE,SAAS,MAAM,QAAS,CAAA;EACvD;AACF,CAAA;;;AC7DD,SAAgB,sBAAyD;AACvE,QAAM,mBAAmB,IAAA;AACzB,QAAM,iBAAiB,SAAsB,MAAA;;AAAM,YAAC,SAAS,UAAW,EAAC,UAAS,sBAAiB,UAAjB,mBAAwB,IAAI,QAAA,KAAY,sBAAiB,UAAjB,mBAAwB,IAAI,qBAAqB,aAAa,gBAAA;GAAiB;AAEzM,SAAO;IACL;IACA;EACD;AACF;;;ACkBD,IAAa,CAAC,8BAA8B,6BAAA,IACxC,cAAsC,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO1C,UAAMC,SAAQ;AAMd,UAAM,OAAO;AASb,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,EAAE,UAAU,cAAA,IAAkB,OAAOA,MAAA;AAE3C,kCAA8B;MAC5B,WAAW;MACX;MACA;MACA;MACA,cAAc,MAAM;AAClB,YAAI,SAAS,MACX;AAEF,aAAK,QAAA,CAAS,KAAK;MACpB;IACF,CAAA;AAED,aAAa,EAAE,KAAM,CAAA;AACrB,qBAAA;;0BAIE,YAOY,MAAA,SAAA,GAAA;QANT,IAAIC,KAAAA;QACJ,YAAUD,OAAM;QAChB,cAAY,MAAA,IAAA,IAAI,SAAA;QAChB,iBAAe,MAAA,QAAA,IAAQ,KAAA;;yBAExB,MAAqB,CAArB,WAAqB,KAAA,QAAA,WAAA,EAAd,MAAM,MAAA,IAAA,EAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtDrB,UAAME,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,cAAc,6BAAA;AACpB,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,0BAAA;AAE3C,UAAM,aAAa,IAAA;AACnB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,QAAQ,IAAI,CAAA;AAClB,UAAM,SAAS,IAAI,CAAA;AAInB,UAAM,SAAS,SAAS,MAAM,YAAY,KAAK,KAAA;AAC/C,UAAM,4BAA4B,IAAI,OAAO,KAAA;AAC7C,UAAM,eAAe,IAAA;AAErB,UACE,MAAA;;AAAM,cAAC,OAAO,QAAO,gBAAW,UAAX,mBAAkB,OAAQ;OAC/C,YAAY;AACV,YAAM,SAAA;AACN,YAAM,OAAO,eAAe;AAC5B,UAAA,CAAK,KACH;AACF,mBAAa,QAAQ,aAAa,SAAS;QACzC,oBAAoB,KAAK,MAAM;QAC/B,eAAe,KAAK,MAAM;MAC5B;AAEA,WAAK,MAAM,qBAAqB;AAChC,WAAK,MAAM,gBAAgB;AAG3B,YAAM,OAAO,KAAK,sBAAA;AAClB,aAAO,QAAQ,KAAK;AACpB,YAAM,QAAQ,KAAK;AAGnB,UAAA,CAAK,0BAA0B,OAAO;AACpC,aAAK,MAAM,qBAAqB,aAAa,MAAM;AACnD,aAAK,MAAM,gBAAgB,aAAa,MAAM;MAChD;IACD,GACD,EACE,WAAW,KACZ,CAAA;AAGH,UAAM,gBAAgB,SAAS,MAAM,0BAA0B,SAAS,YAAY,KAAK,KAAA;AAEzF,cAAU,MAAM;AACd,4BAAsB,MAAM;AAC1B,kCAA0B,QAAQ;MACnC,CAAA;IACF,CAAA;AAED,qBAAiB,gBAAgB,eAAe,CAAC,OAAO;AACtD,4BAAsB,MAAM;AAC1B,oBAAY,aAAA;AACZ,cAAM,cAAA;MACP,CAAA;IACF,CAAA;;0BAIC,YAsBW,MAAA,gBAAA,GAAA;iBApBL;QAAJ,KAAI;QACH,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK;QACxC,eAAa;;yBAEd,CAeY,EApBF,QAAA,MAAO;;AAAA,kBAKjB,YAeY,MAAA,SAAA,GAfZ,WACUC,KAcE,QAdI;YACb,IAAI,MAAA,WAAA,EAAY;YAChB,KAAK,MAAA,UAAA;YACL,YAAUH,OAAM;YAChB,IAAII,KAAAA;YACJ,QAAA,CAAS,UAAU,MAAA,WAAA,EAAY,cAAc,QAAK,KAAA,gBAAA;YAClD,cAAY,cAAA,QAAA,SAA4B,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;YAC9D,mBAAe,WAAA,WAAA,EAAY,aAAZ,mBAAsB,SAAK,KAAA;YAC1C,OAAK;wDAAsD,OAAA,KAAA;uDAA6D,MAAA,KAAA;;;6BAKzH,MAAgE,EAApD,MAAA,WAAA,EAAY,cAAc,QAAQ,UAAO,QAArD,WAAgE,KAAA,QAAA,WAAA,EAAA,KAAA,EAAA,CAAA,IAAA,mBAAA,QAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzGtE,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAM,cAAc,6BAAA;;;0BAIlB,YAYY,MAAA,SAAA,GAAA;QAXT,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,IAAIA,KAAAA;QACJ,YAAUD,OAAM;QAChB,iBAAe,MAAA,WAAA,EAAY;QAC3B,iBAAe,MAAA,WAAA,EAAY,KAAK;QAChC,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;QAClC,mBAAe,WAAA,WAAA,EAAY,aAAZ,mBAAsB,SAAK,KAAA;QAC1C,WAAU,WAAA,WAAA,EAAY,aAAZ,mBAAsB;QAChC,SAAO,MAAA,WAAA,EAAY;;yBAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;AEdZ,SAAS,cAAc,EAAE,MAAM,cAAc,WAAA,GAAqC;AAChF,QAAM,QAAQ,cAAc;AAC5B,QAAM,oBAAoB,eAAA,UAA4B,iBAAA;AAEtD,MAAI,kBACF,QAAO,MAAM,QAAQ,KAAA,IAAS,aAAa;MAE3C,QAAO,QAAQ;AAClB;AAED,SAAS,eAAe,EAAE,MAAM,cAAc,WAAA,GAAqC;AACjF,MAAI,KACF,QAAO;AAET,SAAO,cAAc;IAAE;IAAM;IAAc;EAAY,CAAA;AACxD;AAED,SAAS,gBAAgB,EAAE,MAAM,aAAA,GAAuC;AACtE,MAAI,iBAAA,OACF,QAAO;AAET,SAAQ,SAAS,WAAA,SAAwB,CAAE;AAC5C;AAED,SAAgB,yBACdE,QACAC,OACA;AACA,QAAM,OAAO,SAAS,MAAM,eAAeC,MAAA,CAAM;AACjD,QAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;IACvD,cAAc,gBAAgBA,MAAA;IAC9B,SAAUA,OAAM,eAAA;IAChB,MAAM;EACP,CAAA;AAED,WAAS,iBAAiBC,OAAwB;AAChD,QAAI,KAAK,UAAU,SACjB,YAAW,QAAQ,QAAQ,OAAO,WAAW,KAAA,IAAM,SAAe;SAE/D;AACH,YAAM,kBAAkB,MAAM,QAAQ,WAAW,KAAA,IAAS,CAAC,GAAI,WAAW,SAA8B,CAAE,CAAE,IAAG,CAAC,WAAW,KAAM,EAAC,OAAO,OAAA;AACzI,UAAI,oBAAoB,iBAAiB,KAAA,GAAQ;AAC/C,cAAM,QAAQ,gBAAgB,UAAU,CAAA,MAAK,QAAQ,GAAG,KAAA,CAAM;AAC9D,wBAAgB,OAAO,OAAO,CAAA;MAC/B,MAEC,iBAAgB,KAAK,KAAA;AAEvB,iBAAW,QAAQ;IACpB;EACF;AAED,QAAM,WAAW,SAAS,MAAM,KAAK,UAAU,QAAA;AAE/C,SAAO;IACL;IACA;IACA;EACD;AACF;;;ACZD,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAwD,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5D,UAAMC,SAAQ;AAOd,UAAM,QAAQ;AASd,UAAM,EAAE,KAAK,UAAU,cAAA,IAAkB,OAAOA,MAAA;AAChD,UAAM,YAAY,aAAa,GAAA;AAE/B,UAAM,EAAE,YAAY,kBAAkB,SAAA,IAAa,yBAAyBA,QAAO,KAAA;AAEnF,UAAM,EAAE,YAAY,gBAAgB,cAAA,IAAkB,iBAAA;AAEtD,gCAA4B;MAC1B;MACA;MACA,aAAaA,OAAM;MACnB;MACA;MACA,aAAaA,OAAM;MACnB;MACA;MACA;IACD,CAAA;;0BAIC,YAMY,MAAA,SAAA,GAAA;QALT,KAAK,MAAA,UAAA;QACL,YAAUC,KAAAA;QACV,IAAIC,KAAAA;;yBAEL,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;AE7GlC,IAAK,qBAAA,SAAA,sBAAL;AACE,uBAAA,MAAA,IAAA;AACA,uBAAA,QAAA,IAAA;;AACF,EAHK,sBAAA,CAAA,CAAA;AA+BL,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxC,UAAMC,SAAQ;AASd,UAAM,cAAc,2BAAA;AAEpB,UAAM,OAAO,SAAS,MACpB,YAAY,SAAS,QACjBA,OAAM,UAAU,YAAY,WAAW,QACvC,MAAM,QAAQ,YAAY,WAAW,KAAA,KAClC,YAAY,WAAW,MAAM,SAASA,OAAM,KAAA,CAAM;AAG3D,UAAM,WAAW,SAAS,MAAM;AAC9B,aAAQ,YAAY,SAAS,SAASA,OAAM;IAC7C,CAAA;AAED,UAAM,eAAe,SAAS,MAAO,SAAS,QAAQ,KAAA,MAAA;AAEtD,UAAM,YAAY,SAAS,MACzB,KAAK,QAAQ,mBAAmB,OAAO,mBAAmB,MAAA;AAG5D,aAAa;MAAE;MAAM;IAAc,CAAA;AACnC,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,gCAA4B;MAC1B;MACA;MACA;MACA;MACA,WAAW;MACX;MACA;MACA,OAAO,SAAS,MAAMA,OAAM,KAAA;IAC7B,CAAA;AAED,aAAS,eAAe,GAAkB;;AACxC,YAAM,SAAS,EAAE;AACjB,YAAM,qBAAoC,MAAM,OAAK,iBAAY,cAAc,UAA1B,mBAAiC,iBAAiB,mCAAkC,CAAE,CAAA;AAE3I,YAAM,sBAAsB,mBAAmB,UAAU,CAAA,SAAQ,SAAS,MAAA;AAC1E,UAAI,wBAAwB,GAC1B,QAAO;AAET,yBACE,GACA,QACA,YAAY,cAAc,OAC1B;QACE,iBAAiB,YAAY;QAC7B,KAAK,YAAY,UAAU;QAC3B,OAAO;MACR,CAAA;IAEL;;0BAIE,YAYkB,MAAA,uBAAA,GAAA;QAXf,oBAAkB,MAAA,WAAA,EAAY;QAC9B,iBAAe,aAAA;QACf,cAAY,UAAA;QACZ,UAAU,SAAA;QACV,MAAM,KAAA;QACN,IAAIA,OAAM;QACV,YAAUA,OAAM;QAChB,mBAAiB,MAAA,WAAA,EAAY,cAAc;QAC3C,WAAO,SAA8B,gBAAc;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA,CAAA;;yBAEpD,MAAqB,CAArB,WAAqB,KAAA,QAAA,WAAA,EAAd,MAAM,KAAA,MAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5GrB,UAAMC,SAAQ;AAEd,UAAM,cAAc,2BAAA;AACpB,UAAM,cAAc,2BAAA;AAEpB,qBAAA;;0BAIE,YAgBqB,MAAA,0BAAA,GAAA;QAfnB,MAAK;QACJ,YAAUA,OAAM;QAChB,IAAIC,KAAAA;QACJ,eAAaD,OAAM;QACnB,mBAAiB,MAAA,WAAA,EAAY;QAC7B,cAAY,MAAA,WAAA,EAAY,UAAU;QAClC,iBAAe,MAAA,WAAA,EAAY,aAAa;QACxC,oBAAkB,MAAA,WAAA,EAAY;QAC/B,OAAA;UAAA,kCAAA;UAAA,mCAAA;QAGC;QACA,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,iBAAiB,MAAA,WAAA,EAAY,MAAM,KAAA;;yBAE/D,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBZ,UAAME,SAAQ;AAId,UAAM,cAAc,2BAAA;AACpB,UAAM,cAAc,2BAAA;AAEpB,qBAAA;;0BAIE,YAQY,MAAA,SAAA,GAAA;QAPT,IAAIA,OAAM;QACV,YAAUA,OAAM;QAChB,oBAAkB,MAAA,WAAA,EAAY;QAC9B,cAAY,MAAA,WAAA,EAAY,UAAU;QAClC,iBAAe,MAAA,WAAA,EAAY,aAAa;;yBAEzC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBZ,UAAMC,SAAQ;AAEd,UAAM,cAAc,2BAAA;AACpB,UAAM,cAAc,2BAAA;AAEpB,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,wBAAA;AAC3C,aAAS,aAAa;AACpB,YAAM,kBAAkB,YAAY,SAAS,SAAS,YAAY,KAAK,SAAA,CAAU,YAAY;AAC7F,UAAI,YAAY,SAAS,SAAS,gBAChC;AAEF,kBAAY,iBAAiB,YAAY,MAAM,KAAA;IACjD;;0BAIE,YAeqB,MAAA,0BAAA,GAAA;QAdlB,IAAI,MAAA,WAAA,EAAY;QAChB,KAAK,MAAA,WAAA,EAAY;QAClB,6BAAA;QACC,IAAID,OAAM;QACV,YAAUA,OAAM;QAChB,iBAAe,MAAA,WAAA,EAAY,SAAS,SAAA;QACpC,iBAAe,MAAA,WAAA,EAAY,KAAK,SAAK;QACrC,iBAAe,MAAA,WAAA,EAAY,aAAa;QACxC,oBAAkB,MAAA,WAAA,EAAY;QAC9B,cAAY,MAAA,WAAA,EAAY,UAAU;QAClC,UAAU,MAAA,WAAA,EAAY,SAAS;QAC/B,SAAO;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;AETZ,IAAa,CAAC,yBAAyB,wBAAA,IACnC,cAAiC,YAAA;;;;;;;;;;;;;;;;;;;;;;;AAWrC,UAAME,SAAQ;AAKd,UAAM,OAAO;AAWb,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,iBAAiB,IAAA;AACvB,UAAM,iBAAiB,IAAA;AACvB,UAAM,EAAE,MAAA,IAAU,OAAOA,MAAA;AAEzB,6BAAyB;MACvB;MACA;MACA,WAAW,MAAM;AACf,aAAK,QAAQ;MACd;MACD,cAAc,CAAC,UAAU;AACvB,aAAK,QAAQ;MACd;MACD,cAAc,MAAM;AAClB,aAAK,QAAA,CAAS,KAAK;MACpB;MACD,WAAW;MACX,SAAS;MACT,eAAe;MACf;MACA;IACD,CAAA;;aAIC,WAGE,KAAA,QAAA,WAAA;QAFC,MAAM,MAAA,IAAA;QACN,OAAK,MAAQ,KAAA,QAAI;;;;;;;;;;;;;;;;;;;;;;AEnFtB,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAM,cAAc,wBAAA;;0BAIlB,YAMY,MAAA,SAAA,GANZ,WACUA,QAAK;QACZ,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAY,KAAA;;yBAEhC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEbZ,IAAa,uBAAuB;AACpC,IAAa,gBAAgB;AAE7B,SAAS,aAAaC,cAA2BC,eAA4B;AAC3E,QAAM,cAAc,cAAc,QAChC,0BAAA;AAGF,QAAM,YAAY,aAAa,QAAQ,qBAAqB,KACxD,eACA,aAAa,cACb,0BAAA;AAGJ,QAAM,WAAW,MAAM,KACrB,aAAa,cAAc,iBAAiB,0BAAA,CAA2B;AAGzE,MAAI,gBAAgB,cAAc,eAAe,SAAS,QAAQ,SAAA,IAAa,SAAS,QAAQ,WAAA,GAE9F,QAAO;MAGP,QAAO;AAEV;AAOD,SAAgB,sBACdC,sBACAC,SACAC,UAAqC,MACrC;;AACA,QAAMC,kBACF,wCAAS,UAAT,mBAAgB,mBAAiB,yCAAY;AAEjD,QAAM,yBAAyB,IAAI,KAAA;AACnC,QAAM,iBAAiB,IAAI,MAAM;EAAE,CAAA;AAEnC,cAAY,CAAC,cAAc;AACzB,QAAA,CAAK,YAAA,CAAa,QAAQ,OAAA,EACxB;AACF,UAAMC,qBAAoB,OAAOC,UAAwB;AACvD,YAAM,SAAS,MAAM;AAErB,UAAA,EAAK,mCAAS,UAAA,CAAU,OACtB;AAEF,UAAI,aAAa,QAAQ,OAAO,MAAA,GAAS;AACvC,+BAAuB,QAAQ;AAC/B;MACD;AAED,UAAI,MAAM,UAAA,CAAW,uBAAuB,OAAO;AAGjD,YAAS,2CAAT,WAAoD;AAClD,uCACE,sBACA,sBACA,WAAA;QAEH;AARD,cAAM,cAAc,EAAE,eAAe,MAAO;AAsB5C,YAAI,MAAM,gBAAgB,SAAS;AACjC,wBAAc,oBAAoB,SAAS,eAAe,KAAA;AAC1D,yBAAe,QAAQ;AACvB,wBAAc,iBAAiB,SAAS,eAAe,OAAO,EAC5D,MAAM,KACP,CAAA;QACF,MAEC,0CAAA;MAEH,MAIC,eAAc,oBAAoB,SAAS,eAAe,KAAA;AAE5D,6BAAuB,QAAQ;IAChC;AAcD,UAAM,UAAU,OAAO,WAAW,MAAM;AACtC,oBAAc,iBAAiB,eAAeD,kBAAA;IAC/C,GAAE,CAAA;AAEH,cAAU,MAAM;AACd,aAAO,aAAa,OAAA;AACpB,oBAAc,oBAAoB,eAAeA,kBAAA;AACjD,oBAAc,oBAAoB,SAAS,eAAe,KAAA;IAC3D,CAAA;EACF,CAAA;AAED,SAAO,EACL,sBAAsB,MAAM;AAC1B,QAAA,CAAK,QAAQ,OAAA,EACX;AACF,2BAAuB,QAAQ;EAChC,EACF;AACF;AAMD,SAAgB,gBACdE,gBACAL,SACAC,UAAqC,MACrC;;AACA,QAAMC,kBACF,wCAAS,UAAT,mBAAgB,mBAAiB,yCAAY;AAEjD,QAAM,uBAAuB,IAAI,KAAA;AACjC,cAAY,CAAC,cAAc;AACzB,QAAA,CAAK,YAAA,CAAa,QAAQ,OAAA,EACxB;AACF,UAAM,cAAc,OAAOI,UAAsB;AAC/C,UAAA,EAAK,mCAAS,OACZ;AAEF,YAAM,SAAA;AACN,YAAM,SAAA;AACN,YAAM,SAAS,MAAM;AACrB,UAAA,CAAK,QAAQ,SAAA,CAAU,UAAU,aAAa,QAAQ,OAAO,MAAA,EAC3D;AAEF,UAAI,MAAM,UAAA,CAAW,qBAAqB,OAAO;AAC/C,cAAM,cAAc,EAAE,eAAe,MAAO;AAC5C,qCACE,eACA,gBACA,WAAA;MAEH;IACF;AAED,kBAAc,iBAAiB,WAAW,WAAA;AAE1C,cAAU,MAAM,cAAc,oBAAoB,WAAW,WAAA,CAAY;EAC1E,CAAA;AAED,SAAO;IACL,gBAAgB,MAAM;AACpB,UAAA,CAAK,QAAQ,OAAA,EACX;AAEF,2BAAqB,QAAQ;IAC9B;IACD,eAAe,MAAM;AACnB,UAAA,CAAK,QAAQ,OAAA,EACX;AAEF,2BAAqB,QAAQ;IAC9B;EACF;AACF;;;AC/ID,IAAa,UAAU,SAAS;EAC9B,YAAY,oBAAI,IAAA;EAChB,wCAAwC,oBAAI,IAAA;EAC5C,UAAU,oBAAI,IAAA;AACf,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAaD,UAAMC,SAAQ;AAId,UAAM,QAAQ;AAEd,UAAM,EAAE,YAAY,gBAAgB,aAAA,IAAiB,iBAAA;AACrD,UAAM,gBAAgB,SACpB,MAAA;;AAAM,iCAAa,UAAb,mBAAoB,kBAAiB,WAAW;KAAA;AAGxD,UAAM,SAAS,SAAS,MAAM,QAAQ,UAAA;AAEtC,UAAM,QAAQ,SAAS,MAAM;AAC3B,aAAO,aAAa,QAChB,MAAM,KAAK,OAAO,KAAA,EAAO,QAAQ,aAAa,KAAA,IAC9C;IACL,CAAA;AAED,UAAM,8BAA8B,SAAS,MAAM;AACjD,aAAO,QAAQ,uCAAuC,OAAO;IAC9D,CAAA;AAED,UAAM,yBAAyB,SAAS,MAAM;AAC5C,YAAM,cAAc,MAAM,KAAK,OAAO,KAAA;AACtC,YAAM,CAAC,4CAAA,IAAgD,CAAC,GAAG,QAAQ,sCAAuC,EAAC,MAAM,EAAA;AACjH,YAAM,oDAAoD,YAAY,QAAQ,4CAAA;AAE9E,aAAO,MAAM,SAAS;IACvB,CAAA;AAED,UAAM,qBAAqB,sBAAsB,OAAO,UAAU;AAChE,YAAM,wBAAwB,CAAC,GAAG,QAAQ,QAAS,EAAC,KAAK,CAAA,WACvD,iCAAQ,SAAS,MAAM,OAAsB;AAG/C,UAAA,CAAK,uBAAuB,SAAS,sBACnC;AACF,YAAM,sBAAsB,KAAA;AAC5B,YAAM,mBAAmB,KAAA;AACzB,YAAM,SAAA;AACN,UAAA,CAAK,MAAM,iBACT,OAAM,SAAA;IACT,GAAE,YAAA;AAEH,UAAM,eAAe,gBAAgB,CAAC,UAAU;AAC9C,YAAM,kBAAkB,CAAC,GAAG,QAAQ,QAAS,EAAC,KAAK,CAAA,WACjD,iCAAQ,SAAS,MAAM,OAAsB;AAG/C,UAAI,gBACF;AACF,YAAM,gBAAgB,KAAA;AACtB,YAAM,mBAAmB,KAAA;AACzB,UAAA,CAAK,MAAM,iBACT,OAAM,SAAA;IACT,GAAE,YAAA;AAEH,gBAAY,UAAU,CAAC,UAAU;AAC/B,YAAM,iBAAiB,MAAM,UAAU,OAAO,MAAM,OAAO;AAC3D,UAAA,CAAK,eACH;AACF,YAAM,iBAAiB,KAAA;AACvB,UAAA,CAAK,MAAM,iBACT,OAAM,SAAA;IACT,CAAA;AAED,QAAI;AACJ,gBAAY,CAAC,cAAc;AACzB,UAAA,CAAK,aAAa,MAChB;AACF,UAAIA,OAAM,6BAA6B;AACrC,YAAI,QAAQ,uCAAuC,SAAS,GAAG;AAC7D,sCAA4B,cAAc,MAAM,KAAK,MAAM;AAC3D,wBAAc,MAAM,KAAK,MAAM,gBAAgB;QACjD;AACA,gBAAQ,uCAAuC,IAAI,aAAa,KAAA;MAClE;AACA,aAAO,MAAM,IAAI,aAAa,KAAA;AAE9B,gBAAU,MAAM;AACd,YACEA,OAAM,+BACH,QAAQ,uCAAuC,SAAS,EAE3D,eAAc,MAAM,KAAK,MAAM,gBAAgB;MAElD,CAAA;IACF,CAAA;AAED,gBAAY,CAAC,cAAc;AACzB,gBAAU,MAAM;AACd,YAAA,CAAK,aAAa,MAChB;AACF,eAAO,MAAM,OAAO,aAAa,KAAA;AACjC,gBAAQ,uCAAuC,OAAO,aAAa,KAAA;MACpE,CAAA;IACF,CAAA;;0BAIC,YAiBY,MAAA,SAAA,GAAA;QAhBT,KAAK,MAAA,UAAA;QACL,YAAUC,KAAAA;QACV,IAAIC,KAAAA;QACL,0BAAA;QACC,OAAK,eAAA,EAAA,eAAyB,4BAAA,QAAsC,uBAAA,QAAA,SAAA,SAAA,OAAA,CAAA;wBAOrD,MAAA,YAAA,EAAa;uBACd,MAAA,YAAA,EAAa;8BACN,MAAA,kBAAA,EAAmB;;yBAEzC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjLZ,UAAMC,SAAQ;AAEd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,cAAU,MAAM;AACd,cAAQ,SAAS,IAAI,eAAe,KAAA;IACrC,CAAA;AACD,gBAAY,MAAM;AAChB,cAAQ,SAAS,OAAO,eAAe,KAAA;IACxC,CAAA;;0BAIC,YAKY,MAAA,SAAA,GALZ,WAKY,EAJT,KAAK,MAAA,UAAA,EAAU,GACRA,MAAA,GAAK;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEnBZ,IAAM,qBAAqB,kBAAkB,MAAM;AACjD,QAAM,QAAQ,IAAqB,CAAE,CAAA;AACrC,SAAO;AACR,CAAA;AAED,SAAgB,yBAAyB;AAEvC,QAAM,QAAQ,mBAAA;AAEd,SAAO;IACL,IAAIC,YAA2B;AAE7B,YAAM,mBAAmB,MAAM,MAAM,CAAA;AACrC,UAAI,eAAe,iBACjB,sDAAkB;AAGpB,YAAM,QAAQ,YAAY,MAAM,OAAO,UAAA;AACvC,YAAM,MAAM,QAAQ,UAAA;IACrB;IAED,OAAOA,YAA2B;;AAChC,YAAM,QAAQ,YAAY,MAAM,OAAO,UAAA;AACvC,kBAAM,MAAM,CAAA,MAAZ,mBAAgB;IACjB;EACF;AACF;AAED,SAAgB,YAAeC,OAAYC,MAAS;AAClD,QAAM,eAAe,CAAC,GAAG,KAAM;AAC/B,QAAM,QAAQ,aAAa,QAAQ,IAAA;AACnC,MAAI,UAAU,GACZ,cAAa,OAAO,OAAO,CAAA;AAE7B,SAAO;AACR;AAED,SAAgB,YAAYC,OAAsB;AAChD,SAAO,MAAM,OAAO,CAAA,SAAQ,KAAK,YAAY,GAAA;AAC9C;;;AC9CD,IAAa,qBAAqB;AAClC,IAAa,uBAAuB;AACpC,IAAa,gBAAgB;EAAE,SAAS;EAAO,YAAY;AAAM;AAQjE,SAAgB,WAAWC,YAA2B,EAAE,SAAS,MAAA,IAAU,CAAE,GAAE;AAC7E,QAAM,2BAA2B,iBAAA;AACjC,aAAW,aAAa,YAAY;AAClC,UAAM,WAAW,EAAE,OAAQ,CAAA;AAC3B,QAAI,iBAAA,MAAuB,yBACzB,QAAO;EACV;AACF;AAKD,SAAgB,iBAAiBC,WAAwB;AACvD,QAAM,aAAa,sBAAsB,SAAA;AACzC,QAAM,QAAQ,YAAY,YAAY,SAAA;AACtC,QAAM,OAAO,YAAY,WAAW,QAAA,GAAW,SAAA;AAC/C,SAAO,CAAC,OAAO,IAAK;AACrB;AAYD,SAAgB,sBAAsBA,WAAwB;AAC5D,QAAMC,QAAuB,CAAE;AAC/B,QAAM,SAAS,SAAS,iBAAiB,WAAW,WAAW,cAAc,EAC3E,YAAY,CAACC,SAAc;AACzB,UAAM,gBAAgB,KAAK,YAAY,WAAW,KAAK,SAAS;AAChE,QAAI,KAAK,YAAY,KAAK,UAAU,cAClC,QAAO,WAAW;AAIpB,WAAO,KAAK,YAAY,IACpB,WAAW,gBACX,WAAW;EAChB,EACF,CAAA;AACD,SAAO,OAAO,SAAA,EAAY,OAAM,KAAK,OAAO,WAAA;AAG5C,SAAO;AACR;AAMD,SAAgB,YAAYC,UAAyBH,WAAwB;AAC3E,aAAW,WAAW,SAEpB,KAAA,CAAK,SAAS,SAAS,EAAE,MAAM,UAAW,CAAA,EACxC,QAAO;AAEZ;AAED,SAAgB,SAASI,MAAmB,EAAE,KAAA,GAAgC;AAC5E,MAAI,iBAAiB,IAAA,EAAM,eAAe,SACxC,QAAO;AACT,SAAO,MAAM;AAEX,QAAI,SAAA,UAAsB,SAAS,KACjC,QAAO;AACT,QAAI,iBAAiB,IAAA,EAAM,YAAY,OACrC,QAAO;AACT,WAAO,KAAK;EACb;AACD,SAAO;AACR;AAED,SAAgB,kBACdC,SACqD;AACrD,SAAO,mBAAmB,oBAAoB,YAAY;AAC3D;AAED,SAAgB,MACdC,SACA,EAAE,SAAS,MAAA,IAAU,CAAE,GACvB;AAEA,MAAI,WAAW,QAAQ,OAAO;AAC5B,UAAM,2BAA2B,iBAAA;AAEjC,YAAQ,MAAM,EAAE,eAAe,KAAM,CAAA;AAErC,QACE,YAAY,4BACT,kBAAkB,OAAA,KAClB,OAEH,SAAQ,OAAA;EAEX;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DD,UAAMC,SAAQ;AAId,UAAM,QAAQ;AAEd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,wBAAwB,IAAwB,IAAA;AACtD,UAAM,mBAAmB,uBAAA;AAEzB,UAAM,aAAa,SAAS;MAC1B,QAAQ;MACR,QAAQ;AACN,aAAK,SAAS;MACf;MACD,SAAS;AACP,aAAK,SAAS;MACf;IACF,CAAA;AAED,gBAAY,CAAC,cAAc;AACzB,UAAA,CAAK,SACH;AACF,YAAM,YAAY,eAAe;AACjC,UAAA,CAAKA,OAAM,QACT;AAEF,eAAS,cAAc,OAAmB;AACxC,YAAI,WAAW,UAAA,CAAW,UACxB;AACF,cAAM,SAAS,MAAM;AACrB,YAAI,UAAU,SAAS,MAAA,EACrB,uBAAsB,QAAQ;YAC3B,OAAM,sBAAsB,OAAO,EAAE,QAAQ,KAAM,CAAA;MAC1D;AAEA,eAAS,eAAe,OAAmB;AACzC,YAAI,WAAW,UAAA,CAAW,UACxB;AACF,cAAM,gBAAgB,MAAM;AAY5B,YAAI,kBAAkB,KACpB;AAIF,YAAA,CAAK,UAAU,SAAS,aAAA,EACtB,OAAM,sBAAsB,OAAO,EAAE,QAAQ,KAAM,CAAA;MACvD;AAUA,eAAS,gBAAgB,WAA6B;AACpD,cAAM,4BAA4B,UAAU,SAAS,sBAAsB,KAAA;AAC3E,YAAA,CAAK,0BACH,OAAM,SAAA;MACV;AAEA,eAAS,iBAAiB,WAAW,aAAA;AACrC,eAAS,iBAAiB,YAAY,cAAA;AACtC,YAAM,mBAAmB,IAAI,iBAAiB,eAAA;AAC9C,UAAI,UACF,kBAAiB,QAAQ,WAAW;QAAE,WAAW;QAAM,SAAS;MAAM,CAAA;AAExE,gBAAU,MAAM;AACd,iBAAS,oBAAoB,WAAW,aAAA;AACxC,iBAAS,oBAAoB,YAAY,cAAA;AACzC,yBAAiB,WAAA;MAClB,CAAA;IACF,CAAA;AAED,gBAAY,OAAO,cAAc;AAC/B,YAAM,YAAY,eAAe;AAEjC,YAAM,SAAA;AACN,UAAA,CAAK,UACH;AACF,uBAAiB,IAAI,UAAA;AACrB,YAAM,2BAA2B,iBAAA;AACjC,YAAM,sBAAsB,UAAU,SAAS,wBAAA;AAE/C,UAAA,CAAK,qBAAqB;AACxB,cAAM,aAAa,IAAI,YAAY,oBAAoB,aAAA;AACvD,kBAAU,iBAAiB,oBAAoB,CAAC,OAC9C,MAAM,kBAAkB,EAAA,CAAG;AAC7B,kBAAU,cAAc,UAAA;AAExB,YAAA,CAAK,WAAW,kBAAkB;AAChC,qBAAW,YAAY,sBAAsB,SAAA,CAAU,GAAG,EACxD,QAAQ,KACT,CAAA;AACD,cAAI,iBAAA,MAAuB,yBACzB,OAAM,SAAA;QACV;MACF;AAEA,gBAAU,MAAM;AACd,kBAAU,oBAAoB,oBAAoB,CAAC,OACjD,MAAM,kBAAkB,EAAA,CAAG;AAE7B,cAAM,eAAe,IAAI,YAAY,sBAAsB,aAAA;AAC3D,cAAM,sBAAsB,CAAC,OAAc;AACzC,gBAAM,oBAAoB,EAAA;QAC5B;AACA,kBAAU,iBAAiB,sBAAsB,mBAAA;AACjD,kBAAU,cAAc,YAAA;AAExB,mBAAW,MAAM;AACf,cAAA,CAAK,aAAa,iBAChB,OAAM,4BAA4B,SAAS,MAAM,EAAE,QAAQ,KAAM,CAAA;AAGnE,oBAAU,oBAAoB,sBAAsB,mBAAA;AAEpD,2BAAiB,OAAO,UAAA;QACzB,GAAE,CAAA;MACJ,CAAA;IACF,CAAA;AAED,aAAS,cAAc,OAAsB;AAC3C,UAAA,CAAKA,OAAM,QAAA,CAASA,OAAM,QACxB;AACF,UAAI,WAAW,OACb;AAEF,YAAM,WACF,MAAM,QAAQ,SAAA,CAAU,MAAM,UAAA,CAAW,MAAM,WAAA,CAAY,MAAM;AACrE,YAAM,iBAAiB,iBAAA;AAEvB,UAAI,YAAY,gBAAgB;AAC9B,cAAM,YAAY,MAAM;AACxB,cAAM,CAAC,OAAO,IAAA,IAAQ,iBAAiB,SAAA;AACvC,cAAM,4BAA4B,SAAS;AAG3C,YAAA,CAAK,2BACH;cAAI,mBAAmB,UACrB,OAAM,eAAA;oBAGH,MAAM,YAAY,mBAAmB,MAAM;AAC9C,gBAAM,eAAA;AACN,cAAIA,OAAM,KACR,OAAM,OAAO,EAAE,QAAQ,KAAM,CAAA;QACjC,WACS,MAAM,YAAY,mBAAmB,OAAO;AACnD,gBAAM,eAAA;AACN,cAAIA,OAAM,KACR,OAAM,MAAM,EAAE,QAAQ,KAAM,CAAA;QAChC;MAEJ;IACF;;0BAIE,YAQY,MAAA,SAAA,GAAA;iBAPN;QAAJ,KAAI;QACJ,UAAS;QACR,YAAUC,KAAAA;QACV,IAAIC,KAAAA;QACJ,WAAS;;yBAEV,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AE/NZ,IAAa,cAAc;AAC3B,IAAa,iBAAiB,CAAC,SAAS,GAAI;AAC5C,IAAa,aAAa;EAAC;EAAa;EAAU;AAAO;AACzD,IAAa,YAAY;EAAC;EAAW;EAAY;AAAM;AACvD,IAAa,kBAAkB,CAAC,GAAG,YAAY,GAAG,SAAU;AAC5D,IAAaC,gBAA6C;EACxD,KAAK,CAAC,GAAG,gBAAgB,YAAa;EACtC,KAAK,CAAC,GAAG,gBAAgB,WAAY;AACtC;AACD,IAAaC,iBAA8C;EACzD,KAAK,CAAC,WAAY;EAClB,KAAK,CAAC,YAAa;AACpB;AAED,SAAgB,aAAaC,MAAe;AAC1C,SAAO,OAAO,SAAS;AACxB;AAED,SAAgB,gBACdC,SAC4B;AAC5B,SAAO,YAAY;AACpB;AAED,SAAgB,gBAAgBC,SAAuB;AACrD,SAAO,gBAAgB,OAAA,IACnB,kBACA,UACE,YACA;AACP;AAED,SAAgBC,YAAWC,YAA2B;AACpD,QAAM,6BAA6B,iBAAA;AACnC,aAAW,aAAa,YAAY;AAElC,QAAI,cAAc,2BAChB;AACF,cAAU,MAAA;AACV,QAAI,iBAAA,MAAuB,2BACzB;EACH;AACF;AAeD,SAAgBC,kBAAiBC,OAAcC,SAAkB;AAC/D,QAAM,EAAE,GAAG,EAAA,IAAM;AACjB,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,GAAG,IAAI,QAAQ,QAAQ,IAAI,KAAK;AACnE,UAAM,KAAK,QAAQ,CAAA,EAAG;AACtB,UAAM,KAAK,QAAQ,CAAA,EAAG;AACtB,UAAM,KAAK,QAAQ,CAAA,EAAG;AACtB,UAAM,KAAK,QAAQ,CAAA,EAAG;AAEtB,UAAM,YAAc,KAAK,MAAQ,KAAK,KAAQ,KAAK,KAAK,OAAO,IAAI,OAAO,KAAK,MAAM;AACrF,QAAI,UACF,UAAA,CAAU;EACb;AAED,SAAO;AACR;AAED,SAAgB,qBAAqBC,OAAqBC,MAAgB;AACxE,MAAA,CAAK,KACH,QAAO;AACT,QAAM,YAAY;IAAE,GAAG,MAAM;IAAS,GAAG,MAAM;EAAS;AACxD,SAAOJ,kBAAiB,WAAW,IAAA;AACpC;AAED,SAAgB,aAAaG,OAAqB;AAChD,SAAO,MAAM,gBAAgB;AAC9B;;;ACtFD,IAAM,qBAAqB;AAC3B,IAAM,uBAAuB;AAW7B,SAAgB,WAAW,EACzB,YAAY,oBACZ,cAAc,sBACd,gBAAgB,qBAChB,SACA,eACA,eAAA,GACe;AACf,QAAM,gBAAgB,cAAc,WAAA,mBAA8B,SAAA;;4BAExC,SAAA;;oEAEwC,aAAA;AAElE,QAAM,sBAAsB,4EAA4E,WAAA;AAExG,YAAU,MAAM;;AACd,UAAM,WAAW,SAAS,eAAe,OAAA;AACzC,QAAA,CAAK,SACH,SAAQ,KAAK,aAAA;AAEf,UAAM,iBAAgB,oBAAe,UAAf,mBAAsB,aAAa;AAEzD,QAAI,iBAAiB,eAAe;AAClC,YAAM,iBAAiB,SAAS,eAAe,aAAA;AAC/C,UAAA,CAAK,eACH,SAAQ,KAAK,mBAAA;IAChB;EACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDD,UAAME,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,cAAc,wBAAA;AACpB,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AAEvD,gBAAY,YAAZ,YAAY,UAAYC,OAAA,QAAiB,mBAAA;AACzC,gBAAY,kBAAZ,YAAY,gBAAkBA,OAAA,QAAiB,yBAAA;AAE/C,cAAU,MAAM;AACd,kBAAY,iBAAiB;AAG7B,UAAI,iBAAA,MAAuB,SAAS,KAClC,aAAY,eAAe,QAAQ,iBAAA;IACtC,CAAA;AAED,QAAI,KACF,YAAW;MACT,WAAW;MACX,aAAa;MACb,eAAe;MACf,SAAS,YAAY;MACrB,eAAe,YAAY;MAC3B;IACD,CAAA;;0BAKD,YA0Ba,MAAA,kBAAA,GAAA;QAzBX,YAAA;QACA,MAAA;QACC,SAASD,OAAM;QACf,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;QACzC,oBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,kBAAmB,MAAA;;yBAE7C,MAkBmB,CAlBnB,YAkBmB,MAAA,wBAAA,GAlBnB,WAkBmB;UAjBhB,IAAI,MAAA,WAAA,EAAY;UAChB,KAAK,MAAA,UAAA;UACL,IAAIE,KAAAA;UACJ,YAAUC,KAAAA;UACV,kCAAgCC,KAAAA;UACjC,MAAK;UACJ,oBAAkB,MAAA,WAAA,EAAY;UAC9B,mBAAiB,MAAA,WAAA,EAAY;UAC7B,cAAY,MAAA,YAAA,EAAa,MAAA,WAAA,EAAY,KAAK,KAAA;WACnCC,KAAAA,QAAM;UACb,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAY,KAAA;UACjC,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;UACxC,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,gBAAiB,MAAA;UACrC,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,mBAAoB,MAAA;UAC3C,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,sBAAuB,MAAA;;2BAEnD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3Fd,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,cAAc,wBAAA;AAEpB,UAAM,eAAe,eAAe,KAAA;AAEpC,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,kBAAc,cAAA;;0BAIZ,YAkCoB,2BAlCpB,WAkCoB;QAAA,GAjCLA;QAAK,GAAK,MAAA,YAAA;MAAY,GAAA;QAClC,KAAK,MAAA,UAAA;QACL,cAAY,MAAA,WAAA,EAAY,KAAK;QAC7B,kCAAgC;QAChC,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;;eAAoB,MAAM,kBAAgB;AAAc,kBAAM,eAAA;AAA4B,wBAAA,WAAA,EAAY,eAAe,UAA3B,mBAAkC;;;QAQ3J,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;gBAAqB,gBAAgB,MAAM,OAAO;gBAA6B,gBAA0B,cAAc,WAAM,KAAU,cAAc,YAAO;gBAAyB,eAAe,cAAc,WAAM,KAAU;cAAoK,aAAc,OAAM,eAAA;;QAY7b,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;AAA6J,gBAAM,eAAA;;;yBAQhM,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5CZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;AAEA,UAAM,cAAc,wBAAA;AACpB,UAAM,0BAA0B,IAAI,KAAA;AACpC,UAAM,2BAA2B,IAAI,KAAA;;0BAInC,YAyCoB,2BAzCpB,WAyCoB;QAAA,GAxCLA;QAAK,GAAK,MAAA,YAAA;MAAY,GAAA;QAClC,cAAY;QACZ,kCAAgC;QAChC,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;;eAAoB,MAAM,kBAAgB;iBAAmB,wBAAA,MAAyB,aAAA,WAAA,EAAY,eAAe,UAA3B,mBAAkC;AAAoH,kBAAM,eAAA;;AAAqC,kCAAA,QAAuB;AAAkB,mCAAA,QAAwB;;QAYvX,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;;eAAkB,MAAM,kBAAgB;AAAY,oCAAA,QAAuB;gBAAqB,MAAM,OAAO,cAAc,SAAI,cAAgC,0BAAA,QAAwB;;gBAA0N,SAAS,MAAM;gBAAmC,mBAAkB,WAAA,WAAA,EAAY,eAAe,UAA3B,mBAAkC,SAAS;cAAmB,gBAAiB,OAAM,eAAA;cAA8V,MAAM,OAAO,cAAc,SAAI,aAAkB,yBAAA,MAAoC,OAAM,eAAA;;;yBAwB5/B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnCZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,cAAc,wBAAA;AAEpB,UAAM,eAAe,eAAe,KAAA;AACpC,UAAM,EAAE,WAAA,IAAe,iBAAA;;0BAIrB,YAeW,MAAA,gBAAA,GAAA,EAfA,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK,MAAA,GAAA;yBACjD,MAMqB,CALb,MAAA,WAAA,EAAY,MAAM,SAAA,UAAA,GAD1B,YAMqB,4BANrB,WAMqB;;UAJlB,KAAK,MAAA,UAAA;;aACOD;UAAK,GAAK,MAAA,YAAA;UAAY,GAAKE,KAAAA;QAAM,CAAA,GAAA;2BAE9C,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;gCAEV,YAMwB,+BANxB,WAMwB;;UAJrB,KAAK,MAAA,UAAA;;aACOF;UAAK,GAAK,MAAA,YAAA;UAAY,GAAKE,KAAAA;QAAM,CAAA,GAAA;2BAE9C,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;AEpCd,UAAMC,SAAQ;AAEd,qBAAA;AACA,UAAM,cAAc,wBAAA;;0BAIlB,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACZ,IAAI,MAAA,WAAA,EAAY,cAAA,CAAA,GAAA;yBAEjB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AETZ,UAAM,cAAc,wBAAA;AAEpB,sBAAkB,IAAA;AAClB,qBAAA;;0BAIE,YAOY,MAAA,SAAA,GAAA;QANT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;QACnC,OAAA,EAAA,kBAAA,OAA4B;;yBAE5B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPZ,UAAM,cAAc,wBAAA;AAEpB,UAAM,EAAE,WAAA,IAAe,iBAAA;;;eAKb,WAAA,WAAA,MAAA,mBAAa,MAAM,UAAA,UAAA,GAD3B,YAYW,MAAA,gBAAA,GAAA;;QAVR,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK;;yBAEzC,MAOoB,CAPpB,YAOoB,2BAPpB,WACUC,KAMU,QANJ;UACb,KAAK,MAAA,UAAA;UACL,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;;2BAEX,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AECd,UAAM,YAAY,WAAA;;aAKR,MAAA,SAAA,KAAaC,KAAAA,cAAAA,UAAAA,GADrB,YAOW,UAAA;;QALR,IAAIC,KAAAA;QACJ,UAAUC,KAAAA;QACV,OAAOC,KAAAA;UAER,WAAQ,KAAA,QAAA,SAAA,CAAA,GAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErCZ,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEHZ,UAAMC,SAAQ;AACd,UAAM,cAAc,wBAAA;AACpB,qBAAA;;0BAIE,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACZ,IAAI,MAAA,WAAA,EAAY,QAAA,CAAA,GAAA;yBAEjB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AETZ,UAAMC,SAAQ;AAGd,UAAM,cAAc,wBAAA;AACpB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,qBAAA;AAC3C,cAAU,MAAM;AACd,kBAAY,eAAe,QAAQ,eAAe;IACnD,CAAA;;0BAIC,YAWY,MAAA,SAAA,GAXZ,WACUD,QAAK;QACZ,KAAK,MAAA,UAAA;QACL,MAAME,KAAAA,OAAE,WAAA,WAAA;QACT,iBAAc;QACb,iBAAe,MAAA,WAAA,EAAY,KAAK,SAAK;QACrC,iBAAe,MAAA,WAAA,EAAY,KAAK,QAAQ,MAAA,WAAA,EAAY,YAAA;QACpD,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;QAClC,SAAO,MAAA,WAAA,EAAY;;yBAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzBZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEc,MAAA,mBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACxB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AELZ,IAAa,CAAC,iCAAiC,gCAAA,IAC3C,cAAyC,oBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU7C,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;AAEA,UAAM,gBAAgB,IAAA;AAEtB,qCAAiC,EAC/B,uBAAuB,CAAC,OAAO;AAC7B,oBAAc,QAAQ;IACvB,EACF,CAAA;;0BAIC,YAgBgB,MAAA,qBAAA,GAhBhB,WAgBgB;QAAA,GAfDA;QAAK,GAAK,MAAA,YAAA;MAAY,GAAA;QACnC,MAAK;QACJ,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAArB,MAAA;QAA6B,GAAA,CAAA,SAAA,CAAA;QAC5B,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAjB,MAAA;QAAyB,GAAA,CAAA,SAAA,CAAA;QACxB,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;AAAyB,mBAAQ,MAAA;;AAAmB,gCAAA,UAAA,mBAAe,MAAK,EAAA,eAAA,KAAA;;;;yBAUxF,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEzCZ,UAAMC,SAAQ;AACd,UAAM,iBAAiB,gCAAA;AACvB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,cAAU,MAAM;AACd,qBAAe,sBAAsB,eAAe,KAAA;IACrD,CAAA;;0BAIC,YAKc,MAAA,mBAAA,GALd,WACUA,QAAK,EACZ,KAAK,MAAA,UAAA,EAAU,CAAA,GAAA;yBAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEhBZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEoB,MAAA,yBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC1B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPZ,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEAZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,qBAAA;;0BAIE,YAMa,MAAA,kBAAA,GANb,WAEU,MAIG,SAAA,GAJM,EAChB,OAAO,KAAI,CAAA,GAAA;yBAEZ,CAJQ,cAAS,CAIjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEjB3B,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEc,MAAA,mBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACxB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC1B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEKZ,UAAMC,SAAQ;AAUd,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,SAAS,SAAS,MAAM;AAC5B,aAAQ,IAAIA,OAAM,QAAS;IAC5B,CAAA;;0BAIC,mBAaM,OAAA;QAZH,OAAK,eAAA,oDAAsD,OAAA,KAAA,GAAM;QAClE,kCAAA;UAEA,YAQY,MAAA,SAAA,GARZ,WAQY;QAPT,KAAK,MAAA,UAAA;QACL,YAAUC,KAAAA;QACV,IAAIC,KAAAA;QACL,OAAA;UAAA,YAAA;UAAA,SAAA;QAAsC;SAC9BC,KAAAA,MAAAA,GAAM;yBAEd,MAAyB,CAAzB,WAAyB,KAAA,QAAA,WAAA,EAAlB,QAAQ,OAAA,MAAM,CAAA,CAAA,CAAA;;;;;;;;;AEtC3B,IAAa,CAAC,yBAAyB,wBAAA,IACnC,cAAiC,YAAA;;;;;;;;;;;;;;;AAWrC,qBAAA;AAEA,6BAAyB,EACvB,oBAAoB,IAAwB,MAAA,EAC7C,CAAA;;0BAIC,YAKY,MAAA,SAAA,GAAA;QAJT,YAAUC,KAAAA;QACV,IAAIC,KAAAA;;yBAEL,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBZ,UAAMC,SAAQ;AAId,UAAM,cAAc,wBAAA;AACpB,qBAAA;AAEA,UAAM,YAAY,IAAIA,OAAM,YAAA,MAAA;AAE5B,gBAAY,CAAC,cAAc;AACzB,UAAIA,OAAM,WAAW,UAAU;AAC7B,cAAM,UAAU,OAAO,WAAW,MAAM;AACtC,oBAAU,QAAQ;QACnB,GAAEA,OAAM,OAAA;AAET,kBAAU,MAAM;AACd,iBAAO,aAAa,OAAA;QACrB,CAAA;MACH;IACD,CAAA;;aAKS,UAAA,SAAa,MAAA,WAAA,EAAY,mBAAmB,UAAK,YAAA,UAAA,GADzD,YAMY,MAAA,SAAA,GAAA;;QAJT,YAAUC,KAAAA;QACV,IAAIC,KAAAA;;yBAEL,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEtCZ,SAAS,qBAAqBC,OAAgCC,KAAkC;AAC9F,MAAA,CAAK,MACH,QAAO;AAET,MAAA,CAAK,IACH,QAAO;AAET,MAAI,MAAM,QAAQ,IAChB,OAAM,MAAM;AAEd,SAAO,MAAM,YAAY,MAAM,eAAe,IAAI,WAAW;AAC9D;AAED,SAAgB,sBAAsBC,KAAkB,EAAE,gBAAgB,YAAA,IAAoI,CAAE,GAAE;AAChN,QAAM,YAAY,IAAI,KAAA;AACtB,QAAM,WAAW,IAA6B,IAAA;AAC9C,QAAM,QAAQ,SAAS,MAAM;AAC3B,QAAA,CAAK,UAAU,MACb,QAAO;AAET,QAAA,CAAK,SAAS,SAAS,SACrB,UAAS,QAAQ,IAAI,OAAO,MAAA;AAE9B,WAAO,SAAS;EACjB,CAAA;AAED,QAAM,gBAAgB,IAAwB,qBAAqB,MAAM,OAAO,IAAI,KAAA,CAAM;AAE1F,QAAM,eAAe,CAACC,WAA+B,MAAM;AACzD,QAAI,UAAU,MACZ,eAAc,QAAQ;EACzB;AAED,YAAU,MAAM;AACd,cAAU,QAAQ;AAElB,gBAAY,CAAC,cAAc;AACzB,YAAM,MAAM,MAAM;AAClB,UAAA,CAAK,IACH;AAEF,oBAAc,QAAQ,qBAAqB,KAAK,IAAI,KAAA;AAEpD,YAAM,aAAa,aAAa,QAAA;AAChC,YAAM,cAAc,aAAa,OAAA;AAEjC,UAAI,iBAAiB,QAAQ,UAAA;AAC7B,UAAI,iBAAiB,SAAS,WAAA;AAE9B,UAAI,iDAAgB,MAClB,KAAI,iBAAiB,eAAe;AACtC,UAAA,QAAW,2CAAa,WAAU,SAChC,KAAI,cAAc,YAAY;AAEhC,gBAAU,MAAM;AACd,YAAI,oBAAoB,QAAQ,UAAA;AAChC,YAAI,oBAAoB,SAAS,WAAA;MAClC,CAAA;IACF,CAAA;EACF,CAAA;AAED,cAAY,MAAM;AAChB,cAAU,QAAQ;EACnB,CAAA;AAED,SAAO;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CD,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,EAAE,KAAK,gBAAgB,YAAA,IAAgB,OAAOA,MAAA;AACpD,qBAAA;AACA,UAAM,cAAc,wBAAA;AAEpB,UAAM,qBAAqB,sBAAsB,KAAK;MAAE;MAAgB;IAAa,CAAA;AAErF,UACE,oBACA,CAAC,aAAa;AACZ,YAAM,uBAAuB,QAAA;AAC7B,UAAI,aAAa,OACf,aAAY,mBAAmB,QAAQ;IAC1C,GACD,EAAE,WAAW,KAAM,CAAA;;0CAKnB,YASY,MAAA,SAAA,GAAA;QAPV,MAAK;QACJ,YAAUC,KAAAA;QACV,IAAIC,KAAAA;QACJ,KAAK,MAAA,GAAA;QACL,mBAAiB,MAAA,cAAA;;yBAElB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;oBAPA,MAAA,kBAAA,MAAkB,QAAA,CAAA,CAAA;;;;;;;AE1C9B,IAAa,qBAAqB;EAAC;EAAO;EAAS;AAAO;AAC1D,IAAa,qBAAqB;EAAC;EAAQ;EAAU;EAAU;AAAY;AAC3E,IAAa,6BAA6B,CAAC,WAAW,cAAe;AACrE,IAAa,yBAAyB,CAAC,GAAG,oBAAoB,GAAG,kBAAmB;AACpF,IAAa,8BAA8B,CAAC,GAAG,kBAAmB;AAClE,IAAa,oBAAoB,CAC/B,GAAG,wBACH,GAAG,0BACJ;AACD,IAAa,2BAA2B,kBAAkB,OAAO,CAAA,SAAQ,SAAS,SAAA;AAElF,SAAgB,kBAAkBC,MAAwC;AACxE,SAAO,mBAAmB,SAAS,IAAA;AACpC;AAMD,SAAgB,cAAcC,MAA2C;AACvE,SAAO,uBAAuB,SAAS,IAAA;AACxC;;;ACvBD,IAAM,mBAAmB;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;AAED,IAAM,oBAAoB;EAAC;EAAQ;EAAS;AAAM;AAMlD,IAAMC,eAA+B;EACnC,OAAO;IAAE,MAAM;IAAS,OAAO;IAAO,KAAK;EAAQ;EACnD,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAO,OAAO;IAAO,KAAK;EAAO;EAC/C,OAAO;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC/C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAQ,KAAK;EAAM;EAChD,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,OAAO;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAU;EACnD,OAAO;IAAE,MAAM;IAAO,OAAO;IAAQ,KAAK;EAAO;EACjD,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,OAAO;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC/C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAO,OAAO;IAAO,KAAK;EAAO;EAC/C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAO,OAAO;IAAQ,KAAK;EAAO;EAChD,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,OAAO;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC/C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAO,OAAO;IAAK,KAAK;EAAK;EAC3C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAQ,KAAK;EAAQ;EAClD,MAAM;IAAE,MAAM;IAAM,OAAO;IAAK,KAAK;EAAK;EAC1C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,OAAO;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC/C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAQ,KAAK;EAAS;EACnD,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,OAAO;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC/C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,OAAO;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC/C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,MAAM;IAAE,MAAM;IAAQ,OAAO;IAAM,KAAK;EAAM;EAC9C,SAAS;IAAE,MAAM;IAAK,OAAO;IAAK,KAAK;EAAK;EAC5C,SAAS;IAAE,MAAM;IAAK,OAAO;IAAK,KAAK;EAAK;AAC7C;AAED,SAAS,kBAAkBC,QAAyC;AAClE,MAAA,CAAK,kBAAkB,MAAA,GAAS;AAC9B,UAAM,iBAAiB,kBAAkB,MAAA;AACzC,QAAA,CAAK,kBAAkB,cAAA,EACrB,QAAO,aAAa;QAGpB,QAAO,aAAa,cAAA;EACvB,MAEC,QAAO,aAAa,MAAA;AAEvB;AAID,SAAgB,eACdC,OACAC,OACAF,QACA;AACA,MAAI,mBAAmB,KAAA,EACrB,QAAO,kBAAkB,MAAA,EAAQ,KAAA;AAEnC,MAAI,eAAe,KAAA,EACjB,QAAO;AAET,MAAI,YAAY,KAAA,EACd,QAAO;AAET,SAAO;AACR;AAED,SAAS,kBAAkBG,QAA2C;AACpE,SAAO,iBAAiB,SAAS,MAAA;AAClC;AAED,SAAS,mBAAmBC,OAA2C;AACrE,SAAO,kBAAkB,SAAS,KAAA;AACnC;AAED,SAAS,YAAYA,OAAuD;AAC1E,SAAO,UAAU,UAAU,UAAU,YAAY,UAAU;AAC5D;AAED,SAAS,eAAeA,OAA8C;AACpE,SAAO,UAAU,SAAS,UAAU;AACrC;AAED,SAAS,kBAAkBD,QAAgB;AACzC,MAAI,KAAK,OACP,QAAO,IAAI,KAAK,OAAO,MAAA,EAAQ;AAEjC,SAAO,OAAO,MAAM,GAAA,EAAK,CAAA;AAC1B;;;ACrND,IAAM,gCAAgC;EAAC;EAAQ;EAAU;AAAS;AAYlE,SAAgB,sBAAsBE,QAAmC;AACvE,SAAO,OAAO,YAAY,mBAAmB,IAAI,CAAC,SAAS;AACzD,QAAI,SAAS,YACX,QAAO,CAAC,MAAMC,OAAM,UAAU,UAAU,OAAOA,OAAM,KAAA,CAAM,CAAE;AAC/D,WAAO,CAAC,MAAMA,OAAM,MAAM,IAAA,CAAyB;EACpD,CAAA,CAAC;AACH;AAED,SAAgB,kBAAkBC,QAAmC;AACnE,QAAM,EAAE,UAAA,IAAcD;AAEtB,QAAM,aAAa,mBAAmB,IAAI,CAAC,SAAS;AAClD,WAAO,CAAC,MAAMA,OAAM,MAAM,IAAA,CAAM;EACjC,CAAA;AACD,MAAI,UAAUA,OAAM,OAAO;AACzB,UAAM,aAAa,sBAAsB;MAAE,OAAOA,OAAM;MAAO;IAAW,CAAA;AAE1E,WAAO;MAAE,GAAG,OAAO,YAAY,UAAA;MAAa,GAAG;IAAY;EAC5D;AAED,SAAO,OAAO,YAAY,UAAA;AAC3B;AAED,SAAgB,4BAA4BE,aAA4D;AACtG,SAAO,OAAO,YACZ,mBAAmB,IAAI,CAAC,SAAS;AAC/B,QAAI,SAAS,YACX,QAAO,CAAC,MAAM,IAAK;AACrB,WAAO,CAAC,MAAM,IAAK;EACpB,CAAA,EAAE,OAAO,CAAC,CAAC,GAAA,MAAS;AACnB,QAAI,QAAQ,aAAa,QAAQ,KAC/B,QAAO;AACT,QAAI,gBAAgB,YAAY,QAAQ,SACtC,QAAO;AACT,QAAI,gBAAgB,WAAW,QAAQ,YAAY,QAAQ,UACzD,QAAO;QACJ,QAAO;EACb,CAAA,CAAC;AAEL;AAED,SAAgB,wBAAwBC,aAA2C;AACjF,QAAM,eAAe,uBAAuB,IAAI,CAAC,SAAS;AACxD,QAAI,SAAS,YACX,QAAO,CAAC,MAAM,IAAK;AAErB,WAAO,CAAC,MAAM,IAAK;EACpB,CAAA,EAAE,OAAO,CAAC,CAAC,GAAA,MAAS;AACnB,QAAI,QAAQ,aAAa,QAAQ,KAC/B,QAAO;AACT,QAAI,gBAAgB,YAAY,QAAQ,SACtC,QAAO;AACT,QAAI,gBAAgB,WAAW,QAAQ,YAAY,QAAQ,UACzD,QAAO;AACT,QAAI,gBAAgB,MAClB,QAAA,CAAQ,8BAA8B,SAAS,GAAA,KAAQ,QAAQ;QAC5D,QAAO;EACb,CAAA;AAED,SAAO,OAAO,YAAY,YAAA;AAC3B;AAoBD,SAAS,iBAAiBC,QAA8B;AACtD,QAAM,EAAE,eAAe,WAAW,OAAA,IAAWJ;AAC7C,WAAS,eAAeK,MAAyC;AAC/D,QAAI,UAAU,eAAe;AAC3B,YAAM,QAAQ,cAAc,IAAA;AAC5B,UAAI,UAAU,MAAM;AAClB,YAAI,SAAS,MACX,QAAO,UAAU,KAAKL,OAAM,QAAQ,IAAI;WACrC,IAAA,GAA2B;UAU5B,OAAO,cAAc,SAAS;QAC/B,CAAA,GAAG,MAAM,EAAE,WAAW,mBAAmBA,OAAM,SAAA,EAAY,CAAA;AAE9D,eAAO,UAAU,KAAKA,OAAM,QAAQ,IAAI,EAAA,CAAG,IAAA,GAAO,MAAO,CAAA,GAAG,MAAM,EAChE,WAAW,mBAAmBA,OAAM,SAAA,EACrC,CAAA;MACF,MAEC,QAAO,eAAe,MAAM,IAAI,OAAO,KAAA;IAE1C,OACI;AACH,UAAI,kBAAkB,IAAA,GAAO;AAC3B,cAAM,QAAQ,cAAc,IAAA;AAC5B,YAAI,UAAU,MAAM;AAClB,cAAI,SAAS,MACX,QAAO,UAAU,KAAKA,OAAM,QAAQ,IAAI;aACrC,IAAA,GAAO;YAER,OAAO,cAAc,SAAS;UAC/B,CAAA,GAAG,IAAA;AAGN,iBAAO,UAAU,KAAKA,OAAM,QAAQ,IAAI,EAAA,CAAG,IAAA,GAAO,MAAO,CAAA,GAAG,IAAA;QAC7D,MAGC,QAAO,eAAe,MAAM,IAAI,OAAO,KAAA;MAE1C;AACD,aAAO;IACR;EACF;AAED,QAAM,UAAU,OAAO,KAAK,aAAA,EAAe,OAAO,CAAC,KAAK,SAAS;AAC/D,QAAA,CAAK,cAAc,IAAA,EACjB,QAAO;AACT,QAAI,UAAU,iBAAiB,SAAS,aAAa;AACnD,YAAM,QAAQ,cAAc,IAAA;AAE5B,UAAI,UAAU,KACZ,KAAI,IAAA,IAAQ;UAGZ,KAAI,IAAA,IAAQ,eAAe,MAAM,MAAM,OAAO,KAAA;IACjD,MAEC,KAAI,IAAA,IAAQ,eAAe,IAAA;AAG7B,WAAO;EACR,GAAE,CAAE,CAAA;AAEL,SAAO;AACR;AAED,SAAS,iBAAiBM,QAA8B;AACtD,QAAM,EAAE,aAAa,WAAW,YAAY,cAAc,WAAW,YAAA,IAAgBN;AACrF,QAAM,QAAQ,UAAU,QAAQA,OAAM,SAAS,qBAAqB,aAAa,WAAW,WAAA,CAAY;AAExG,QAAM,oBAAoB,MACvB,IAAI,CAAC,SAAS;AACb,UAAM,eAAe;MAAC;MAAW;MAAgB;IAAK;AAEtD,QAAI,aAAa,SAAS,KAAK,IAAA,KAAK,CAAK,cAAc,KAAK,IAAA,EAC1D,QAAO;MACL,MAAM,KAAK;MACX,OAAO,KAAK;IACb;AAGH,WAAO;MACL,MAAM,KAAK;MACX,OAAO,WAAW,KAAK,IAAA;IACxB;EACF,CAAA,EACA,OAAO,CAAC,YAA6D;AACpE,QAAI,QAAQ,SAAS,QAAQ,QAAQ,UAAU,KAC7C,QAAO;AACT,QAAI,QAAQ,SAAS,mBAAA,CAAoB,gBAAgBA,OAAM,OAAA,KAAY,cACzE,QAAO;AAET,WAAO;EACR,CAAA;AAEH,SAAO;AACR;AAID,SAAgB,cAAcO,QAA2B;AACvD,QAAM,aAAa,iBAAiBP,MAAA;AAEpC,QAAM,aAAa,iBAAiB;IAClC;IACA,GAAGA;EACJ,CAAA;AAED,SAAO;IACL,KAAK;IACL,KAAK;EACN;AACF;;;ACzND,SAAgB,uBAAuBQ,KAAa;AAClD,QAAM,MAAM,OAAA;AACZ,MAAI,QAAQ,IAAI,eAAe,QAAQ,IAAI,WACzC,QAAO;AACT,SAAO;AACR;AAED,SAAgB,eAAeC,OAAe;AAC5C,MAAI,OAAO,MAAM,OAAO,SAAS,KAAA,CAAM,EACrC,QAAO;AACT,SAAO;AACR;AAED,SAAgB,uBAAuBD,KAAa;AAClD,QAAM,MAAM,OAAA;AACZ,QAAM,wBAAwB;IAC5B,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ;IACA;IACA;IACA;EACD;AACD,MAAI,sBAAsB,SAAS,GAAA,EACjC,QAAO;AACT,MAAI,eAAe,GAAA,EACjB,QAAO;AACT,SAAO;AACR;AAED,SAAgB,mBAAmBE,eAAuC;AACxE,SAAO,MAAM,KAAK,cAAc,iBAAiB,gCAAA,CAAiC,EAAE,OAAO,CAAA,SAAQ,KAAK,aAAa,8BAAA,MAAoC,SAAA;AAC1J;AAED,SAAgB,4BAA4BA,eAAuC;AACjF,SAAO,MAAM,KAAK,cAAc,iBAAiB,gCAAA,CAAiC,EAAE,OAAO,CAAA,SAAQ,KAAK,aAAa,8BAAA,MAAoC,SAAA;AAC1J;;;ACXD,SAAS,mBAAmBC,QAAyB;AACnD,SAAO;IACL,MAAM;IACN,iBAAiB;IACjB,UAAUC,OAAM,WAAA,SAAuB;IACvC,YAAY;IACZ,WAAW;IACX,aAAa;IACb,cAAc;IACd,OAAO;EACR;AACF;AAED,SAAS,gBAAgBD,QAAyB;AAChD,QAAM,EAAE,eAAe,YAAA,IAAgBC;AACvC,QAAM,UAAU,cAAc,QAAQ;AACtC,QAAM,OAAO,cAAc,MAAM,YAAY,IAAI,EAAE,KAAK,cAAc,IAAK,CAAA,IAAI;AAE/E,QAAM,WAAW,KAAK;AACtB,QAAM,WAAW;AACjB,QAAM,WAAW,eAAe,IAAA;AAChC,QAAM,YAAY,UAAU,UAAU,GAAG,QAAA;AAEzC,SAAO;IACL,GAAG,mBAAmBA,MAAA;IACtB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,oBAAoB,UAAU,KAAA;EAC/B;AACF;AAED,SAAS,kBAAkBD,QAAyB;AAClD,QAAM,EAAE,eAAe,aAAa,UAAA,IAAcC;AAClD,QAAM,UAAU,cAAc,UAAU;AACxC,QAAM,OAAO,cAAc,QACvB,YAAY,IAAI,EAAE,OAAO,cAAc,MAAO,CAAA,IAC9C;AACJ,QAAM,WAAW,KAAK;AACtB,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,YAAY,UAAU,UAAU,GAAG,QAAA,MAAc,UAAU,UAAU,OAAO,IAAA,CAAK,CAAC;AAExF,SAAO;IACL,GAAG,mBAAmBA,MAAA;IACtB,cAAc;IACd,mBAAmB;IACnB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,oBAAoB,UAAU,KAAA;EAC/B;AACF;AAED,SAAS,iBAAiBD,QAAyB;AACjD,QAAM,EAAE,eAAe,YAAA,IAAgBC;AACvC,QAAM,UAAU,cAAc,SAAS;AACvC,QAAM,OAAO,cAAc,OAAO,YAAY,IAAI,EAAE,MAAM,cAAc,KAAM,CAAA,IAAI;AAClF,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,WAAW,KAAK;AACtB,QAAM,YAAY,UAAU,UAAU,GAAG,QAAA;AAEzC,SAAO;IACL,GAAG,mBAAmBA,MAAA;IACtB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,oBAAoB,UAAU,KAAA;EAC/B;AACF;AAED,SAAS,iBAAiBD,QAAyB;AACjD,QAAM,EAAE,eAAe,WAAW,YAAA,IAAgBC;AAElD,MAAA,EAAM,UAAU,kBAAA,EAAoB,UAAU,aAC5C,QAAO,CAAE;AACX,QAAM,UAAU,cAAc,SAAS;AACvC,QAAM,OAAO,cAAc,OAAO,YAAY,IAAI,EAAE,MAAM,cAAc,KAAM,CAAA,IAAI;AAClF,QAAM,WAAW,cAAc,KAAK,IAAI;AACxC,QAAM,WAAW,cAAc,KAAK,KAAK;AACzC,QAAM,WAAW,KAAK;AACtB,QAAM,YAAY,UAAU,UAAU,GAAG,QAAA,IAAY,cAAc,aAAa,EAAA;AAEhF,SAAO;IACL,GAAG,mBAAmBA,MAAA;IACtB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,oBAAoB,UAAU,KAAA;EAC/B;AACF;AAED,SAAS,mBAAmBD,QAAyB;AACnD,QAAM,EAAE,eAAe,YAAA,IAAgBC;AACvC,MAAA,EAAM,YAAY,kBAAA,EAAoB,YAAY,aAChD,QAAO,CAAE;AACX,QAAM,UAAU,cAAc,WAAW;AACzC,QAAM,OAAO,cAAc,SACvB,YAAY,IAAI,EAAE,QAAQ,cAAc,OAAQ,CAAA,IAChD;AACJ,QAAM,WAAW,KAAK;AACtB,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,YAAY,UAAU,UAAU,GAAG,QAAA;AAEzC,SAAO;IACL,GAAG,mBAAmBA,MAAA;IACtB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,oBAAoB,UAAU,KAAA;EAC/B;AACF;AAED,SAAS,mBAAmBD,QAAyB;AACnD,QAAM,EAAE,eAAe,YAAA,IAAgBC;AACvC,MAAA,EAAM,YAAY,kBAAA,EAAoB,YAAY,aAChD,QAAO,CAAE;AACX,QAAM,UAAU,cAAc,WAAW;AACzC,QAAM,OAAO,cAAc,SACvB,YAAY,IAAI,EAAE,QAAQ,cAAc,OAAQ,CAAA,IAChD;AACJ,QAAM,WAAW,KAAK;AACtB,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,YAAY,UAAU,UAAU,GAAG,QAAA;AAEzC,SAAO;IACL,GAAG,mBAAmBA,MAAA;IACtB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,oBAAoB,UAAU,KAAA;EAC/B;AACF;AAED,SAAS,sBAAsBD,QAAyB;AACtD,QAAM,EAAE,cAAA,IAAkBC;AAC1B,MAAA,EAAM,eAAe,eACnB,QAAO,CAAE;AAEX,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,WAAW,cAAc,OAAQ,cAAc,OAAO,KAAK,cAAc,OAAO,KAAK,cAAc,OAAQ;AACjH,QAAM,YAAY,cAAc,aAAa;AAE7C,SAAO;IACL,GAAG,mBAAmBA,MAAA;IACtB,aAAa;IACb,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;EACnB;AACF;AAED,SAAS,oBAAoBC,QAA0B;AACrD,SAAO;IACL,eAAe;IACf,gBAAgB;EACjB;AACF;AAED,SAAS,qBAAqBF,QAAyB;AACrD,SAAO;IACL,QAAQ;IACR,cAAc;IACd,iBAAiB;IACjB,gBAAgB;IAChB,YAAYC,OAAM,WAAA,SAAuB;IACzC,SAAS;EACV;AACF;AAED,SAAS,gBAAgBD,QAAyB;AAChD,QAAM,EAAE,eAAe,YAAA,IAAgBC;AAEvC,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,YAAY,SAAS,gBAAgB,cAAc,MAAM,YAAY;AAE3E,SAAO;IACL,GAAG,mBAAmBA,MAAA;IACtB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;EACnB;AACF;AAED,IAAa,kBAAkB;EAC7B,KAAK,EACH,OAAO,gBACR;EACD,OAAO,EACL,OAAO,kBACR;EACD,MAAM,EACJ,OAAO,iBACR;EACD,MAAM,EACJ,OAAO,iBACR;EACD,QAAQ,EACN,OAAO,mBACR;EACD,QAAQ,EACN,OAAO,mBACR;EACD,WAAW,EACT,OAAO,sBACR;EACD,SAAS,EACP,OAAO,oBACR;EACD,cAAc,EACZ,OAAO,qBACR;EACD,KAAK,EACH,OAAO,gBACR;AACF;AAiBD,SAAgB,aAAaE,QAA0B;AACrD,QAAM,MAAM,OAAA;AAEZ,WAAS,2BAA2B,EAAE,GAAG,MAAM,SAAS,UAAA,GAAiD;AACvG,UAAM,OAAOF,OAAM,KAAK,MAAM,IAAA,KAAS;AACvC,UAAM,OAAO,EAAE,QAAQ,IAAI,WAAW,OAAA,CAAQ;AAC9C,UAAMG,OAAM;AACZ,UAAMC,OAAM;AAEZ,QAAI,cAAc,KAChB,QAAO,OAAO,IAAID,OAAMC;AAE1B,UAAMC,YAAwC,CAAC,MAAM,IAAK;AAC1D,WAAQ,QAA6B,IAAI,EAAA,CAAG,IAAA,GAAO,UAAW,CAAA,EAAE,MAAM,GAAG,SAAA,EAAW,IAAA;EACrF;AAED,WAAS,YAAYC,WAA0B;AAC7C,IAAAN,OAAM,aAAa,QAAQ;AAC3B,QAAI,cAAc,KAChB,QAAO;AAET,UAAM,MAAM,UAAU,SAAA;AACtB,QAAI,IAAI,WAAW,GAAG;AACpB,MAAAA,OAAM,WAAW,QAAA;AACjB,aAAO;IACR;AAED,WAAO,OAAO,SAAS,IAAI,MAAM,GAAG,EAAA,CAAG;EACxC;AACD,WAAS,4BAA4B,EAAE,GAAG,MAAM,SAAS,WAAW,UAAA,GAAkD;AACpH,UAAM,OAAOA,OAAM,KAAK,MAAM,IAAA,KAAS;AACvC,UAAM,OAAO,EAAE,QAAQ,IAAI,WAAW,OAAA,CAAQ;AAE9C,QAAI,cAAc,KAChB,QAAO,QAAQ,IAAA;AAEjB,QAAI,SAAS,UAAU,UAAU,SAAS;AACxC,YAAMO,cAA8E;QAAC;QAAM;QAAM,EAAE,UAAW;MAAC;AAC/G,aAAO,QAAQ,IAAI,EAAA,CAAG,IAAA,GAA0B,UAAW,CAAA,EAAE,MAAM,GAAGC,WAAAA,EAAW,IAAA;IAClF;AAED,UAAMC,YAAwC,CAAC,MAA0B,IAAK;AAC9E,QAAI,SAAS,MACX,QAAO,QAAQ,IAAI;OAChB,IAAA,GAA0B;MAU3B,OAAOT,OAAM,cAAc,MAAM,SAAS;IAC3C,CAAA,EAAE,MAAM,GAAG,SAAA,EAAW,IAAA;AAGzB,WAAO,QAAQ,IAAI,EAAA,CAAG,IAAA,GAA0B,UAAW,CAAA,EAAE,MAAM,GAAG,SAAA,EAAW,IAAA;EAClF;AACD,WAAS,iBAAiBU,MAAaC,KAAaC,MAAqB;AACvE,QAAI,aAAa;AACjB,UAAM,WAAW,KAAK,MAAMR,OAAM,EAAA;AAOlC,QAAIJ,OAAM,aAAa,OAAO;AAC5B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,aAAO;IACR;AAED,QAAI,SAAS,MAAM;AAOjB,UAAI,QAAQ,GAAG;AACb,QAAAA,OAAM,YAAY,QAAQ;AAC1B,eAAO;UAAE,OAAO;UAAM;QAAY;MACnC;AAQD,UAAIA,OAAM,YAAY,SAAS,MAAM,SAEnC,cAAa;AAEf,MAAAA,OAAM,YAAY,QAAQ;AAM1B,aAAO;QAAE,OAAO;QAAK;MAAY;IAClC;AAQD,UAAM,SAAS,KAAK,SAAA,EAAW;AAC/B,UAAM,QAAQ,OAAO,SAAS,KAAK,SAAA,IAAa,IAAI,SAAA,CAAU;AAQ9D,QAAI,WAAW,KAAK,QAAQI,MAAK;AAM/B,UAAI,MAAM,YAAY,QAAQA,KAE5B,cAAa;AAEf,aAAO;QAAE,OAAO;QAAK;MAAY;IAClC;AAED,iBAAa;AACb,WAAO;MAAE,OAAO;MAAO;IAAY;EACpC;AAED,WAAS,qBAAqBO,KAAaC,MAAqB;AAC9D,UAAMR,OAAM;AACZ,QAAI,aAAa;AACjB,UAAM,WAAW,KAAK,MAAMA,OAAM,EAAA;AAOlC,QAAIJ,OAAM,aAAa,OAAO;AAC5B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,aAAO;IACR;AAED,QAAI,SAAS,MAAM;AAOjB,UAAI,QAAQ,GAAG;AACb,QAAAA,OAAM,YAAY,QAAQ;AAC1B,eAAO;UAAE,OAAO;UAAG;QAAY;MAChC;AAQD,UAAIA,OAAM,YAAY,SAAS,MAAM,SAEnC,cAAa;AAEf,MAAAA,OAAM,YAAY,QAAQ;AAM1B,aAAO;QAAE,OAAO;QAAK;MAAY;IAClC;AAQD,UAAM,SAAS,KAAK,SAAA,EAAW;AAC/B,UAAM,QAAQ,OAAO,SAAS,KAAK,SAAA,IAAa,IAAI,SAAA,CAAU;AAS9D,QAAI,WAAW,KAAK,QAAQI,MAAK;AAM/B,UAAI,MAAM,SAER,cAAa;AAEf,aAAO;QAAE,OAAO;QAAK;MAAY;IAClC;AAED,iBAAa;AACb,WAAO;MAAE,OAAO;MAAO;IAAY;EACpC;AAED,WAAS,WAAWO,KAAaC,MAAqB;AACpD,UAAMR,OAAM;AACZ,QAAI,aAAa;AACjB,UAAM,WAAW,KAAK,MAAMA,OAAM,EAAA;AAQlC,QAAIJ,OAAM,aAAa,OAAO;AAC5B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,aAAO;IACR;AAED,QAAI,SAAS,MAAM;AAOjB,UAAI,QAAQ,GAAG;AACb,QAAAA,OAAM,YAAY,QAAQ;AAC1B,eAAO;UAAE,OAAO;UAAG;QAAY;MAChC;AAQD,UAAIA,OAAM,YAAY,SAAS,MAAM,SAEnC,cAAa;AAEf,MAAAA,OAAM,YAAY,QAAQ;AAM1B,aAAO;QAAE,OAAO;QAAK;MAAY;IAClC;AAQD,UAAM,SAAS,KAAK,SAAA,EAAW;AAC/B,UAAM,QAAQ,OAAO,SAAS,KAAK,SAAA,IAAa,IAAI,SAAA,CAAU;AAS9D,QAAI,WAAW,KAAK,QAAQI,MAAK;AAM/B,UAAI,MAAM,SAER,cAAa;AAEf,aAAO;QAAE,OAAO;QAAK;MAAY;IAClC;AAED,iBAAa;AACb,WAAO;MAAE,OAAO;MAAO;IAAY;EACpC;AAED,WAAS,WAAWO,KAAaC,MAAqB;AACpD,QAAI,aAAa;AAQjB,QAAIZ,OAAM,aAAa,OAAO;AAC5B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,aAAO;IACR;AAED,QAAI,SAAS,KACX,QAAO;MAAE,OAAO,QAAQ,IAAI,IAAI;MAAK;IAAY;AAEnD,UAAM,MAAM,KAAK,SAAA,IAAa,IAAI,SAAA;AAElC,QAAI,IAAI,SAAS,EACf,QAAO;MAAE,OAAO,QAAQ,IAAI,IAAI;MAAK;IAAY;AAEnD,QAAI,IAAI,WAAW,EACjB,cAAa;AAEf,UAAM,MAAM,OAAO,SAAS,GAAA;AAC5B,WAAO;MAAE,OAAO;MAAK;IAAY;EAClC;AAED,QAAM,aAAa,SAAS,MAAA;;AAAM,kCAAgBA,OAAM,IAAA,MAAtB,mBAA6B,MAAM;MACnE,UAAUA,OAAM,SAAS;MACzB,aAAaA,OAAM,YAAY;MAC/B,WAAWA,OAAM;MACjB,eAAeA,OAAM,cAAc;MACnC,WAAWA,OAAM;IAClB,OAAK,CAAE;GAAA;AAGR,WAAS,wBAAwBa,GAAkB;AACjD,QAAA,CAAK,uBAAuB,EAAE,GAAA,KAAQ,uBAAuB,EAAE,GAAA,EAC7D;AAEF,UAAM,YAAYb,OAAM,cAAc,MAAM;AAE5C,QAAI,EAAE,QAAQ,IAAI,cAAc,EAAE,QAAQ,IAAI,UAAU;AACtD,MAAAA,OAAM,cAAc,MAAM,MAAM,4BAA4B;QAAE;QAAG,MAAM;QAAO,SAASA,OAAM,YAAY;QAAO;MAAW,CAAA;AAC3H;IACD;AAED,QAAI,eAAe,EAAE,GAAA,GAAM;AACzB,YAAM,MAAM,OAAO,SAAS,EAAE,GAAA;AAC9B,YAAM,oBAAoBA,OAAM,cAAc,MAAM;AAEpD,YAAM,cAAc,oBAChB,eAAeA,OAAM,YAAY,MAAM,IAAI,EAAE,OAAO,kBAAmB,CAAA,CAAC,IAGxE;AAEJ,YAAM,EAAE,OAAO,WAAA,IAAe,iBAAiB,aAAa,KAAK,SAAA;AAEjE,MAAAA,OAAM,cAAc,MAAM,MAAM;AAEhC,UAAI,WACF,CAAAA,OAAM,UAAA;IACT;AAED,QAAI,EAAE,QAAQ,IAAI,WAAW;AAC3B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,MAAAA,OAAM,cAAc,MAAM,MAAM,YAAY,SAAA;IAC7C;EACF;AAED,WAAS,0BAA0Ba,GAAkB;AACnD,QAAA,CAAK,uBAAuB,EAAE,GAAA,KAAQ,uBAAuB,EAAE,GAAA,EAC7D;AAEF,UAAM,YAAYb,OAAM,cAAc,MAAM;AAE5C,QAAI,EAAE,QAAQ,IAAI,cAAc,EAAE,QAAQ,IAAI,UAAU;AACtD,MAAAA,OAAM,cAAc,MAAM,QAAQ,4BAA4B;QAAE;QAAG,MAAM;QAAS,SAASA,OAAM,YAAY;QAAO;MAAW,CAAA;AAC/H;IACD;AAED,QAAI,eAAe,EAAE,GAAA,GAAM;AACzB,YAAM,MAAM,OAAO,SAAS,EAAE,GAAA;AAC9B,YAAM,EAAE,OAAO,WAAA,IAAe,iBAAiB,IAAI,KAAK,SAAA;AAExD,MAAAA,OAAM,cAAc,MAAM,QAAQ;AAElC,UAAI,WACF,CAAAA,OAAM,UAAA;IACT;AAED,QAAI,EAAE,QAAQ,IAAI,WAAW;AAC3B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,MAAAA,OAAM,cAAc,MAAM,QAAQ,YAAY,SAAA;IAC/C;EACF;AAED,WAAS,yBAAyBa,GAAkB;AAClD,QAAA,CAAK,uBAAuB,EAAE,GAAA,KAAQ,uBAAuB,EAAE,GAAA,EAC7D;AAEF,UAAM,YAAYb,OAAM,cAAc,MAAM;AAE5C,QAAI,EAAE,QAAQ,IAAI,cAAc,EAAE,QAAQ,IAAI,UAAU;AACtD,MAAAA,OAAM,cAAc,MAAM,OAAO,4BAA4B;QAAE;QAAG,MAAM;QAAQ,SAASA,OAAM,YAAY;QAAO;MAAW,CAAA;AAC7H;IACD;AAED,QAAI,eAAe,EAAE,GAAA,GAAM;AACzB,YAAM,MAAM,OAAO,SAAS,EAAE,GAAA;AAC9B,YAAM,EAAE,OAAO,WAAA,IAAe,WAAW,KAAK,SAAA;AAE9C,MAAAA,OAAM,cAAc,MAAM,OAAO;AAEjC,UAAI,WACF,CAAAA,OAAM,UAAA;IACT;AAED,QAAI,EAAE,QAAQ,IAAI,WAAW;AAC3B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,MAAAA,OAAM,cAAc,MAAM,OAAO,YAAY,SAAA;IAC9C;EACF;AAED,WAAS,yBAAyBa,GAAkB;AAClD,UAAM,UAAUb,OAAM,YAAY;AAClC,QAAA,CAAK,uBAAuB,EAAE,GAAA,KAAQ,uBAAuB,EAAE,GAAA,KAAI,EAAM,UAAU,YAAA,EAAc,UAAUA,OAAM,cAAc,OAC7H;AAEF,UAAM,YAAYA,OAAM,cAAc,MAAM;AAE5C,UAAM,YAAYA,OAAM;AAExB,QAAI,EAAE,QAAQ,IAAI,YAAY,EAAE,QAAQ,IAAI,YAAY;AACtD,MAAAA,OAAM,cAAc,MAAM,OAAO,4BAA4B;QAAE;QAAG,MAAM;QAAQ,SAASA,OAAM,YAAY;QAAO;QAAW;MAAW,CAAA;AAExI,UAAI,eAAeA,OAAM,cAAc,OACrC;YAAIA,OAAM,cAAc,MAAM,OAAO,GACnC,CAAAA,OAAM,cAAc,MAAM,YAAY;iBAC/BA,OAAM,cAAc,MAAM,KACjC,CAAAA,OAAM,cAAc,MAAM,YAAY;MAAI;AAG9C;IACD;AAED,QAAI,eAAe,EAAE,GAAA,GAAM;AACzB,YAAM,MAAM,OAAO,SAAS,EAAE,GAAA;AAC9B,YAAM,EAAE,OAAO,WAAA,IAAe,WAAW,KAAK,SAAA;AAE9C,UAAI,eAAeA,OAAM,cAAc,SAAS,SAAS,QAAQ,GAC/D,CAAAA,OAAM,cAAc,MAAM,YAAY;eAC/B,eAAeA,OAAM,cAAc,SAAS,MACnD,CAAAA,OAAM,cAAc,MAAM,YAAY;AAExC,MAAAA,OAAM,cAAc,MAAM,OAAO;AAEjC,UAAI,WACF,CAAAA,OAAM,UAAA;IACT;AAED,QAAI,EAAE,QAAQ,IAAI,WAAW;AAC3B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,MAAAA,OAAM,cAAc,MAAM,OAAO,YAAY,SAAA;IAC9C;EACF;AAED,WAAS,2BAA2Ba,GAAkB;AACpD,UAAM,UAAUb,OAAM,YAAY;AAElC,QAAA,CAAK,uBAAuB,EAAE,GAAA,KAAQ,uBAAuB,EAAE,GAAA,KAAI,EAAM,YAAY,YAAA,EAAc,YAAYA,OAAM,cAAc,OACjI;AAEF,UAAM,YAAYA,OAAM,cAAc,MAAM;AAE5C,QAAI,EAAE,QAAQ,IAAI,YAAY,EAAE,QAAQ,IAAI,WAC1C,CAAAA,OAAM,cAAc,MAAM,SAAS,2BAA2B;MAAE;MAAG,MAAM;MAAU,SAASA,OAAM,YAAY;MAAO;IAAW,CAAA;AAGlI,QAAI,eAAe,EAAE,GAAA,GAAM;AACzB,YAAM,MAAM,OAAO,SAAS,EAAE,GAAA;AAE9B,YAAM,EAAE,OAAO,WAAA,IAAe,qBAAqB,KAAK,SAAA;AAExD,MAAAA,OAAM,cAAc,MAAM,SAAS;AAEnC,UAAI,WACF,CAAAA,OAAM,UAAA;IACT;AAED,QAAI,EAAE,QAAQ,IAAI,WAAW;AAC3B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,MAAAA,OAAM,cAAc,MAAM,SAAS,YAAY,SAAA;IAChD;EACF;AAED,WAAS,2BAA2Ba,GAAkB;AACpD,UAAM,UAAUb,OAAM,YAAY;AAElC,QAAA,CAAK,uBAAuB,EAAE,GAAA,KAAQ,uBAAuB,EAAE,GAAA,KAAI,EAAM,YAAY,YAAA,EAAc,YAAYA,OAAM,cAAc,OACjI;AAEF,UAAM,YAAYA,OAAM,cAAc,MAAM;AAE5C,QAAI,EAAE,QAAQ,IAAI,YAAY,EAAE,QAAQ,IAAI,WAC1C,CAAAA,OAAM,cAAc,MAAM,SAAS,2BAA2B;MAAE;MAAG,MAAM;MAAU,SAASA,OAAM,YAAY;MAAO;IAAW,CAAA;AAGlI,QAAI,eAAe,EAAE,GAAA,GAAM;AACzB,YAAM,MAAM,OAAO,SAAS,EAAE,GAAA;AAC9B,YAAM,EAAE,OAAO,WAAA,IAAe,qBAAqB,KAAK,SAAA;AAExD,MAAAA,OAAM,cAAc,MAAM,SAAS;AAEnC,UAAI,WACF,CAAAA,OAAM,UAAA;IACT;AAED,QAAI,EAAE,QAAQ,IAAI,WAAW;AAC3B,MAAAA,OAAM,aAAa,QAAQ;AAC3B,MAAAA,OAAM,cAAc,MAAM,SAAS,YAAY,SAAA;IAChD;EACF;AAED,WAAS,8BAA8Ba,GAAkB;AACvD,SAAA,CAAO,uBAAuB,EAAE,GAAA,KAAQ,uBAAuB,EAAE,GAAA,MAAS,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAA,EAAU,UAAUb,OAAM,YAAY,UAAA,EAAY,eAAeA,OAAM,cAAc,OACxL;AAEF,QAAI,EAAE,QAAQ,IAAI,YAAY,EAAE,QAAQ,IAAI,YAAY;AACtD,UAAIA,OAAM,cAAc,MAAM,cAAc,MAAM;AAChD,QAAAA,OAAM,cAAc,MAAM,YAAY;AACtC,QAAAA,OAAM,cAAc,MAAM,OAAOA,OAAM,cAAc,MAAM,OAAQ;AACnE;MACD;AACD,MAAAA,OAAM,cAAc,MAAM,YAAY;AACtC,MAAAA,OAAM,cAAc,MAAM,OAAOA,OAAM,cAAc,MAAM,OAAQ;AACnE;IACD;AAED,QAAI,CAAC,KAAK,GAAI,EAAC,SAAS,EAAE,GAAA,KAAQA,OAAM,cAAc,MAAM,cAAc,MAAM;AAC9E,MAAAA,OAAM,cAAc,MAAM,YAAY;AACtC,MAAAA,OAAM,cAAc,MAAM,OAAOA,OAAM,cAAc,MAAM,OAAQ;AACnE;IACD;AAED,QAAI,CAAC,KAAK,GAAI,EAAC,SAAS,EAAE,GAAA,KAAQA,OAAM,cAAc,MAAM,cAAc,MAAM;AAC9E,MAAAA,OAAM,cAAc,MAAM,YAAY;AACtC,MAAAA,OAAM,cAAc,MAAM,OAAOA,OAAM,cAAc,MAAM,OAAQ;IACpE;EACF;AAED,WAAS,mBAAmBc,GAAe;AACzC,UAAM,WAAWd,OAAM,SAAS;AAChC,QAAI,SACF,GAAE,eAAA;EACL;AAED,WAAS,qBAAqBa,GAAkB;AAC9C,UAAM,WAAWb,OAAM,SAAS;AAChC,UAAM,WAAWA,OAAM,SAAS;AAChC,QAAI,EAAE,QAAQ,IAAI,IAChB,GAAE,eAAA;AAEJ,QAAI,YAAY,SACd;AACF,UAAM,yBAAyB;MAC7B,KAAK;MACL,OAAO;MACP,MAAM;MACN,MAAM;MACN,QAAQ;MACR,QAAQ;MACR,WAAW;MACX,cAAc,MAAM;MAAE;IACvB;AAED,2BAAuBA,OAAM,IAAA,EAA6C,CAAA;AAE1E,QAAA,CAAK,CAAC,IAAI,YAAY,IAAI,WAAY,EAAC,SAAS,EAAE,GAAA,KAAQ,EAAE,QAAQ,IAAI,OAAO,EAAE,QAAQ,IAAI,SAAS,uBAAuB,EAAE,GAAA,GAC7H;UAAI,OAAO,OAAOA,OAAM,cAAc,KAAA,EAAO,MAAM,CAAA,SAAQ,SAAS,IAAA,GAAO;AACzE,cAAM,eAAe,EAAE,GAAGA,OAAM,cAAc,MAA2C;AAEzF,YAAI,UAAUA,OAAM,YAAY,MAAM,KAAA;AAEtC,eAAO,KAAK,YAAA,EAAc,QAAQ,CAAC,SAAS;AAC1C,gBAAM,QAAQ,aAAa,IAAA;AAC3B,oBAAU,QAAQ,IAAI,EAAA,CAAG,IAAA,GAAO,MAAO,CAAA;QACxC,CAAA;AAED,QAAAA,OAAM,WAAW,QAAQ,QAAQ,KAAA;MAClC;;EAEJ;AAED,SAAO;IACL;IACA;IACA;EACD;AACF;;;AC90BD,SAAgB,iBAAiBe,QAA8B;AAC7D,WAAS,eAAeC,SAAoB;AAC1C,QAAI,MAAM,QAAQC,OAAM,KAAK,KAAA,EAC3B,QAAOA,OAAM,KAAK,MAAM,KAAK,CAAA,MAAK,0CAAU,GAAG,OAAA,CAAQ;cAE/CA,OAAM,KAAK,MACnB,QAAO;QAGP,QAAO,0CAAUA,OAAM,KAAK,OAAO,OAAA;EACtC;AAED,QAAM,YAAY,SAChB,MAAM;;AACJ,QAAI,MAAM,QAAQA,OAAM,KAAK,KAAA,GAAQ;AACnC,UAAA,CAAKA,OAAM,KAAK,MAAM,OACpB,QAAO;AACT,iBAAW,WAAWA,OAAM,KAAK,OAAO;AACtC,aAAI,KAAAA,OAAM,mBAAN,wBAAAA,QAAuB,SACzB,QAAO;AACT,aAAI,KAAAA,OAAM,sBAAN,wBAAAA,QAA0B,SAC5B,QAAO;MACV;IACF,OACI;AACH,UAAA,CAAKA,OAAM,KAAK,MACd,QAAO;AACT,WAAI,KAAAA,OAAM,mBAAN,wBAAAA,QAAuBA,OAAM,KAAK,OACpC,QAAO;AACT,WAAI,KAAAA,OAAM,sBAAN,wBAAAA,QAA0BA,OAAM,KAAK,OACvC,QAAO;IACV;AACD,WAAO;EACR,CAAA;AAGH,SAAO;IACL;IACA;EACD;AACF;AAED,SAAS,mBAAmBC,kBAA6BC,cAAyD;AAChH,QAAM,wBAAwB,aAAa,gBAAA;AAC3C,QAAM,OAAO,sBAAsB,QAAQ,gBAAA;AAC3C,QAAMC,WAAuB,CAAE;AAC/B,MAAI,QAAQ,EACV,UAAS,MAAM;AACjB,MAAI,QAAQ,eAAe,gBAAA,EACzB,UAAS,QAAQ;AACnB,SAAO,sBAAsB,IAAI,EAAE,GAAG,SAAU,CAAA;AACjD;AACD,SAAS,mBAAmBC,mBAA8BC,cAAyD;AACjH,QAAM,uBAAuB,aAAa,iBAAA;AAC1C,QAAM,OAAO,kBAAkB,QAAQ,oBAAA;AACvC,QAAMF,WAAuB,CAAE;AAC/B,MAAI,QAAQ,EACV,UAAS,MAAM;AACjB,MAAI,QAAQ,eAAe,iBAAA,EACzB,UAAS,QAAQ;AACnB,SAAO,qBAAqB,IAAI,EAAE,GAAG,SAAU,CAAA;AAChD;AACD,SAAS,eAAeG,MAAiBJ,cAAyD;AAChG,SAAO,aAAa,IAAA;AACrB;AAED,SAAS,eAAeI,MAAiBD,cAAyD;AAChG,SAAO,aAAa,IAAA;AACrB;AAED,SAAgB,YAAYE,QAAyB;AACnD,QAAM,YAAY,iBAAiBP,OAAM,OAAO,KAAA;AAEhD,QAAM,uBAAuB,SAAS,MAAM;AAC1C,UAAMQ,UAAgC,EACpC,UAAUR,OAAM,YAAY,MAAM,SAAS,WAC5C;AAED,QAAIA,OAAM,YAAY,MAAM,SAAS,eAAe,aAAaA,OAAM,YAAY,MAAM,QAAQ,KAC/F,SAAQ,MAAM;AAEhB,WAAO;EACR,CAAA;AAED,QAAM,OAAO,IAAuB,aAAa;IAC/C,SAASA,OAAM,YAAY;IAC3B,cAAcA,OAAM,aAAa;IACjC,QAAQA,OAAM,OAAO;IACrB,YAAYA,OAAM,WAAW;IAC7B,gBAAgBA,OAAM,eAAe;EACtC,CAAA,CAAC;AAEF,QAAM,cAAc,SAAS,MAAM;AACjC,WAAO,KAAK,MAAM,IAAI,CAAA,UAAS,MAAM,KAAA;EACtC,CAAA;AAED,WAAS,qBAAqBM,MAAiB;AAC7C,WAAA,CAAQ,YAAY,MAAM,KAAK,CAAA,UAAS,0CAAa,MAAM,KAAA,CAAM;EAClE;AAED,QAAM,uBAAuB,CAACG,iBAAkD;AAC9E,QAAA,CAAKT,OAAM,SAAS,SAAA,CAAU,KAAK,MAAM,OACvC,QAAO;AACT,QAAIA,OAAM,SAAS,MACjB,QAAO;AAET,UAAM,mBAAmB,KAAK,MAAM,KAAK,MAAM,SAAS,CAAA,EAAG;AAE3D,QAAA,CAAK,gBAAA,CAAiBA,OAAM,SAAS,OAAO;AAC1C,YAAMU,0BAAwB,iBAAiB,IAAI,EAAE,QAAQ,EAAG,CAAA,EAAE,IAAI,EAAE,KAAK,EAAG,CAAA;AAChF,aAAO,QAAQA,yBAAuBV,OAAM,SAAS,KAAA;IACtD;AAED,UAAM,wBAAwB,mBAAmB,kBAAkB,gBAAgBA,OAAM,SAAS,KAAA;AAClG,WAAO,QAAQ,uBAAuBA,OAAM,SAAS,KAAA;EACtD;AAED,QAAM,uBAAuB,CAACW,iBAAkD;AAC9E,QAAA,CAAKX,OAAM,SAAS,SAAA,CAAU,KAAK,MAAM,OACvC,QAAO;AACT,QAAIA,OAAM,SAAS,MACjB,QAAO;AACT,UAAM,oBAAoB,KAAK,MAAM,CAAA,EAAG;AAExC,QAAA,CAAK,gBAAA,CAAiBA,OAAM,SAAS,OAAO;AAC1C,YAAMY,yBAAuB,kBAAkB,SAAS,EAAE,QAAQ,EAAG,CAAA,EAAE,IAAI,EAAE,KAAK,GAAI,CAAA;AACtF,aAAO,SAASA,wBAAsBZ,OAAM,SAAS,KAAA;IACtD;AAED,UAAM,uBAAuB,mBAAmB,mBAAmB,gBAAgBA,OAAM,SAAS,KAAA;AAClG,WAAO,SAAS,sBAAsBA,OAAM,SAAS,KAAA;EACtD;AAED,WAAS,eAAeD,SAAoB;;AAC1C,UAAI,KAAAC,OAAM,mBAAN,wBAAAA,QAAuB,aAAYA,OAAM,SAAS,MACpD,QAAO;AACT,QAAIA,OAAM,SAAS,SAAS,QAAQ,SAASA,OAAM,SAAS,KAAA,EAC1D,QAAO;AACT,QAAIA,OAAM,SAAS,SAAS,SAAS,SAASA,OAAM,SAAS,KAAA,EAC3D,QAAO;AACT,WAAO;EACR;AAED,QAAM,oBAAoB,CAACM,SAAoB;;AAC7C,SAAI,KAAAN,OAAM,sBAAN,wBAAAA,QAA0B,MAC5B,QAAO;AACT,WAAO;EACR;AAED,QAAM,WAAW,SAAS,MAAM;AAC9B,QAAA,CAAK,KAAK,MAAM,OACd,QAAO,CAAE;AACX,WAAO,KAAK,MAAM,CAAA,EAAG,KAAK,CAAA,EAAG,IAAI,CAAC,SAAS;AACzC,aAAO,UAAU,UAAU,OAAO,IAAA,GAAOA,OAAM,cAAc,KAAA;IAC9D,CAAA;EACF,CAAA;AAED,QAAM,WAAW,CAACS,iBAAkD;AAClE,UAAM,YAAY,KAAK,MAAM,CAAA,EAAG;AAEhC,QAAA,CAAK,gBAAA,CAAiBT,OAAM,SAAS,OAAO;AAC1C,YAAMa,YAAU,UAAU,IAAI,EAAE,QAAQb,OAAM,gBAAgB,QAAQA,OAAM,eAAe,QAAQ,EAAG,CAAA;AAEtG,YAAMc,YAAU,aAAa;QAC3B,SAASD;QACT,cAAcb,OAAM,aAAa;QACjC,QAAQA,OAAM,OAAO;QACrB,YAAYA,OAAM,WAAW;QAC7B,gBAAgBA,OAAM,eAAe;MACtC,CAAA;AAED,WAAK,QAAQc;AAEb,MAAAd,OAAM,YAAY,QAAQ,UAAQ,CAAA,EAAG,MAAM,IAAI,EAAE,KAAK,EAAG,CAAA;AACzD;IACD;AAED,UAAM,UAAU,eAAe,WAAW,gBAAgBA,OAAM,SAAS,KAAA;AACzE,UAAM,UAAU,aAAa;MAC3B,SAAS;MACT,cAAcA,OAAM,aAAa;MACjC,QAAQA,OAAM,OAAO;MACrB,YAAYA,OAAM,WAAW;MAC7B,gBAAgBA,OAAM,eAAe;IACtC,CAAA;AAED,SAAK,QAAQ;AAEb,UAAMG,WAAuB,CAAE;AAG/B,QAAA,CAAK,cAAc;AACjB,YAAM,OAAO,QAAQ,CAAA,EAAG,MAAM,QAAQ,SAAA;AACtC,UAAI,QAAQ,eAAe,SAAA,EACzB,UAAS,MAAM;AAEjB,UAAI,QAAQ,IACV,UAAS,QAAQ;IACpB;AAED,IAAAH,OAAM,YAAY,QAAQ,QAAQ,CAAA,EAAG,MAAM,IAAI,EAAE,GAAG,SAAU,CAAA;EAC/D;AAED,QAAM,WAAW,CAACW,iBAAkD;AAClE,UAAM,YAAY,KAAK,MAAM,CAAA,EAAG;AAEhC,QAAA,CAAK,gBAAA,CAAiBX,OAAM,SAAS,OAAO;AAC1C,YAAMa,YAAU,UAAU,SAAS,EAAE,QAAQb,OAAM,gBAAgB,QAAQA,OAAM,eAAe,QAAQ,EAAG,CAAA;AAE3G,YAAMc,YAAU,aAAa;QAC3B,SAASD;QACT,cAAcb,OAAM,aAAa;QACjC,QAAQA,OAAM,OAAO;QACrB,YAAYA,OAAM,WAAW;QAC7B,gBAAgBA,OAAM,eAAe;MACtC,CAAA;AAED,WAAK,QAAQc;AAEb,MAAAd,OAAM,YAAY,QAAQ,UAAQ,CAAA,EAAG,MAAM,IAAI,EAAE,KAAK,EAAG,CAAA;AACzD;IACD;AAED,UAAM,UAAU,eAAe,WAAW,gBAAgBA,OAAM,SAAS,KAAA;AACzE,UAAM,UAAU,aAAa;MAC3B,SAAS;MACT,cAAcA,OAAM,aAAa;MACjC,QAAQA,OAAM,OAAO;MACrB,YAAYA,OAAM,WAAW;MAC7B,gBAAgBA,OAAM,eAAe;IACtC,CAAA;AAED,SAAK,QAAQ;AAEb,UAAMG,WAAuB,CAAE;AAG/B,QAAA,CAAK,cAAc;AACjB,YAAM,OAAO,UAAU,QAAQ,QAAQ,CAAA,EAAG,KAAA;AAC1C,UAAI,QAAQ,eAAe,SAAA,EACzB,UAAS,MAAM;AAEjB,UAAI,QAAQ,IACV,UAAS,QAAQ;IACpB;AAED,IAAAH,OAAM,YAAY,QAAQ,QAAQ,CAAA,EAAG,MAAM,IAAI,EAAE,GAAG,SAAU,CAAA;EAC/D;AAED,QAAMA,OAAM,aAAa,CAAC,UAAU;AAClC,QAAI,YAAY,MAAM,KAAK,CAAA,UAAS,0CAAa,OAAO,KAAA,CAAM,EAC5D;AACF,SAAK,QAAQ,aAAa;MACxB,SAAS;MACT,cAAcA,OAAM,aAAa;MACjC,QAAQA,OAAM,OAAO;MACrB,YAAYA,OAAM,WAAW;MAC7B,gBAAgBA,OAAM,eAAe;IACtC,CAAA;EACF,CAAA;AAED,QAAM;IAACA,OAAM;IAAQA,OAAM;IAAcA,OAAM;IAAYA,OAAM;EAAe,GAAE,MAAM;AACtF,SAAK,QAAQ,aAAa;MACxB,SAASA,OAAM,YAAY;MAC3B,cAAcA,OAAM,aAAa;MACjC,QAAQA,OAAM,OAAO;MACrB,YAAYA,OAAM,WAAW;MAC7B,gBAAgBA,OAAM,eAAe;IACtC,CAAA;EACF,CAAA;AAED,QAAM,eAAe,SAAS,MAAM;AAClC,QAAA,CAAK,KAAK,MAAM,OACd,QAAO;AAET,QAAIA,OAAM,OAAO,UAAU,UAAU,UAAA,EACnC,WAAU,UAAUA,OAAM,OAAO,KAAA;AAEnC,QAAI,KAAK,MAAM,WAAW,GAAG;AAC3B,YAAM,QAAQ,KAAK,MAAM,CAAA,EAAG;AAC5B,aAAO,GAAG,UAAU,iBAAiB,OAAO,KAAA,GAAQ,qBAAqB,KAAA,CAAM;IAChF;AAED,UAAM,aAAa,OAAO,KAAK,MAAM,CAAA,EAAG,KAAA;AACxC,UAAM,WAAW,OAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAA,EAAG,KAAA;AAE1D,UAAM,iBAAiB,UAAU,UAAU,YAAY,qBAAqB,KAAA;AAC5E,UAAM,eAAe,UAAU,UAAU,UAAU,qBAAqB,KAAA;AACxE,UAAM,iBAAiB,UAAU,SAAS,YAAY,qBAAqB,KAAA;AAC3E,UAAM,eAAe,UAAU,SAAS,UAAU,qBAAqB,KAAA;AAEvE,UAAM,UACJ,mBAAmB,eACjB,GAAG,cAAA,MAAoB,YAAA,IAAgB,YAAA,KACvC,GAAG,cAAA,IAAkB,cAAA,MAAoB,YAAA,IAAgB,YAAA;AAE7D,WAAO;EACR,CAAA;AAED,QAAM,oBAAoB,SAAS,MAAM,GAAGA,OAAM,cAAc,SAAS,YAAA,KAAiB,aAAa,KAAA,EAAO;AAE9G,SAAO;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;AACF;;;;;;;;;;;;;;;;;;;ACpPD,IAAa,CAAC,2BAA2B,0BAAA,IACrC,cAAmC,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQvC,UAAMe,SAAQ;AAkBd,UAAM,QAAQ;AAoBd,UAAM,EACJ,UACA,UACA,cACA,iBACA,cACA,eACA,YACA,UACA,UACA,UACA,gBACA,iBACA,gBAAgB,qBAChB,mBAAmB,wBACnB,eACA,cACA,UAAU,eACV,UAAU,eACV,KAAK,SACL,QAAQ,YACR,8BAAA,IACE,OAAOA,MAAA;AAEX,UAAM,EAAE,kBAAkB,gBAAgB,cAAA,IACtC,oBAAA;AACJ,UAAM,SAAS,UAAU,UAAA;AACzB,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAc,aAAa;MAC3B,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,cAAc,eAAe;MACjC,oBAAoBA,OAAM;MAC1B,cAAc,WAAW;MACzB,QAAQA,OAAM;IACf,CAAA;AAED,UAAM,cAAc,UAAUA,QAAO,eAAe,OAAO;MACzD,cAAcA,OAAM,sBAAsB,YAAY,KAAA;MACtD,SAAUA,OAAM,gBAAA;IACjB,CAAA;AAED,aAAS,oBAAoB,OAAkB;AAC7C,kBAAY,QAAQ,MAAM,KAAA;IAC5B;AAEA,UAAM,EACJ,mBACA,cACA,gBACA,mBACA,sBACA,sBACA,UACA,sBACA,UACA,UACA,WACA,KAAA,IACE,YAAY;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,gBAAgB,oBAAoB;MACpC,mBAAmB,uBAAuB;MAC1C;MACA,UAAU;MACV,UAAU;IACX,CAAA;AAED,UAAM,EACJ,WACA,eAAA,IACE,iBAAiB;MACnB,MAAM;MACN;MACA;IACD,CAAA;AAED,UAAM,YAAY,CAAC,gBAAgB;AACjC,UAAI,MAAM,QAAQ,WAAA,KAAgB,YAAY,QAAQ;AACpD,cAAM,YAAY,YAAY,YAAY,SAAS,CAAA;AACnD,YAAI,aAAA,CAAc,0CAAW,YAAY,OAAO,SAAA,EAC9C,qBAAoB,SAAA;MACxB,WAAA,CACU,MAAM,QAAQ,WAAA,KAAgB,eAAA,CAAgB,0CAAW,YAAY,OAAO,WAAA,EACpF,qBAAoB,WAAA;IAEvB,CAAA;AAED,aAAS,aAAa,OAAkB;AACtC,UAAA,CAAK,SAAS,OAAO;AACnB,YAAA,CAAK,WAAW,OAAO;AACrB,qBAAW,QAAQ,MAAM,KAAA;AACzB;QACF;AAEA,YAAA,CAAK,gBAAgB,SAAS,0CAAW,WAAW,OAAoB,KAAA,GAAQ;AAC9E,sBAAY,QAAQ,MAAM,KAAA;AAC1B,qBAAW,QAAA;QACb,MACO,YAAW,QAAQ,MAAM,KAAA;MAClC,WAAA,CACU,WAAW,MACnB,YAAW,QAAQ,CAAC,MAAM,KAAA,CAAM;eAEzB,MAAM,QAAQ,WAAW,KAAA,GAAQ;AACxC,cAAM,QAAQ,WAAW,MAAM,UAAU,CAAA,SAAQ,0CAAU,MAAM,KAAA,CAAM;AACvE,YAAI,UAAU,GACZ,YAAW,QAAQ,CAAC,GAAG,WAAW,OAAO,KAAK;kBAEtC,gBAAgB,OAAO;AAC/B,gBAAM,OAAO,WAAW,MAAM,OAAO,CAAA,SAAA,CAAS,0CAAU,MAAM,KAAA,CAAM;AACpE,cAAA,CAAK,KAAK,QAAQ;AAChB,wBAAY,QAAQ,MAAM,KAAA;AAC1B,uBAAW,QAAA;AACX;UACF;AACA,qBAAW,QAAQ,KAAK,IAAI,CAAA,SAAQ,KAAK,KAAA,CAAM;QACjD;MACF;IACF;AAEA,cAAU,MAAM;AACd,UAAI,aAAa,MACf,4BAA2B,cAAc,KAAA;IAC5C,CAAA;AAED,+BAA2B;MACzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,UAAU;MACV;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;;0BAIC,YA8BY,MAAA,SAAA,GAAA;iBA7BN;QAAJ,KAAI;QACH,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,MAAK;QACJ,cAAY,MAAA,iBAAA;QACZ,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,gBAAc,MAAA,SAAA,IAAS,KAAA;QACvB,KAAK,MAAA,GAAA;;yBAEN,MAQE,CARF,WAQE,KAAA,QAAA,WAAA;UAPC,MAAM,MAAA,WAAA;UACN,MAAM,MAAA,IAAA;UACN,UAAW,MAAA,QAAA;UACX,cAAgB,MAAA,YAAA;UAChB,QAAQ,MAAA,MAAA;UACR,YAAa,MAAA,UAAA;UACb,YAAa,MAAA,UAAA;YAEhB,gBASM,OATN,YASM,CANJ,gBAKM,OALN,YAKM,gBADD,MAAA,iBAAA,CAAiB,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzV5B,UAAM,cAAc,0BAAA;;;0BAIlB,YASY,MAAA,SAAA,GAAA;QART,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,MAAK;QACJ,iBAAe,MAAA,WAAA,EAAY,eAAeC,KAAAA,IAAAA,IAAI,OAAA;QAC9C,iBAAe,MAAA,WAAA,EAAY,eAAeA,KAAAA,IAAAA,OAAS,iBAAA,WAAA,GAAY,sBAAZ,4BAAgCA,KAAAA,UAAS,MAAA,WAAA,EAAY,8BAA8B;QACtI,iBAAe,MAAA,WAAA,EAAY,eAAeA,KAAAA,IAAAA,KAAS,MAAA,WAAA,EAAY,8BAA8B,QAAK,KAAA;;yBAEnG,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;AE3BZ,IAAa,WACT;AACJ,SAAgB,mBAAmBC,UAAsC;AACvE,SAAO,MAAM,KAAK,SAAS,iBAAiB,QAAA,CAAS,KAAK,CAAE;AAC7D;;;;;;;;;;;;;;;;;;;;;;;;;AC0CD,UAAMC,SAAQ;AAMd,UAAM,MAAM,OAAA;AACZ,UAAM,cAAc,0BAAA;AAEpB,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAE7C,UAAM,WAAW,SAAS,MAAMA,OAAM,IAAI,IAAI,eAAe,YAAY,OAAO,KAAA,CAAM;AAEtF,UAAM,YAAY,SAAS,MAAM;AAC/B,aAAO,YAAY,UAAU,OAAO,OAAOA,OAAM,GAAA,GAAM;QACrD,SAAS;QACT,OAAO;QACP,KAAK;QACL,MAAM;MACP,CAAA;IACF,CAAA;AAED,UAAM,gBAAgB,SAAS,MAAA;;AAC7B,gCAAY,sBAAZ,qCAAgCA,OAAM,SAAQ;KAAA;AAEhD,UAAM,cAAc,SAAS,MAAM;AACjC,aAAO,0CAAQA,OAAM,KAAK,0CAAA,CAAkB;IAC7C,CAAA;AACD,UAAM,gBAAgB,SAAS,MAAM;AACnC,aAAA,CAAQ,0CAAYA,OAAM,KAAKA,OAAM,KAAA;IACtC,CAAA;AAED,UAAM,uBAAuB,SAAS,MACpC,YAAY,qBAAqBA,OAAM,GAAA,CAAI;AAG7C,UAAM,aAAa,SAAS,MAAM,YAAY,eAAeA,OAAM,GAAA,KAAS,YAAY,8BAA8B,SAAS,cAAc,KAAA;AAE7I,UAAM,gBAAgB,SAAS,MAAM;AACnC,aAAA,CAAQ,YAAY,SAAS,SAAS,0CAAUA,OAAM,KAAK,YAAY,YAAY,KAAA;IACpF,CAAA;AACD,UAAM,iBAAiB,SAAS,MAAM,YAAY,eAAeA,OAAM,GAAA,CAAI;AAE3E,aAAS,WAAW,MAAiB;;AACnC,UAAI,YAAY,SAAS,MACvB;AACF,UAAI,YAAY,eAAe,IAAA,OAAS,iBAAY,sBAAZ,qCAAgC,OACtE;AAEF,kBAAY,aAAa,IAAA;IAC3B;AAEA,aAAS,cAAc;AACrB,UAAI,WAAW,MACb;AACF,iBAAWA,OAAM,GAAA;IACnB;AAEA,aAAS,eAAe,GAAkB;AACxC,UAAI,WAAW,MACb;AACF,QAAE,eAAA;AACF,QAAE,gBAAA;AACF,YAAM,gBAAgB,YAAY,cAAc;AAChD,YAAM,sBAAsB;AAC5B,YAAM,OAAO,YAAY,IAAI,UAAU,QAAQ,KAAK;AACpD,cAAQ,EAAE,MAAV;QACE,KAAK,IAAI;AACP,qBAAW,eAAe,OAAO,IAAA;AACjC;QACF,KAAK,IAAI;AACP,qBAAW,eAAe,OAAA,CAAQ,IAAA;AAClC;QACF,KAAK,IAAI;AACP,qBAAW,eAAe,OAAA,CAAQ,mBAAA;AAClC;QACF,KAAK,IAAI;AACP,qBAAW,eAAe,OAAO,mBAAA;AACjC;QACF,KAAK,IAAI;QACT,KAAK,IAAI;AACP,qBAAWA,OAAM,GAAA;MACrB;AAEA,eAAS,WAAW,MAAmB,KAAa;AAClD,cAAM,qBAAoC,mBAAmB,aAAA;AAC7D,YAAA,CAAK,mBAAmB,OACtB;AAEF,cAAM,QAAQ,mBAAmB,QAAQ,IAAA;AACzC,cAAM,WAAW,QAAQ;AAEzB,YAAI,YAAY,KAAK,WAAW,mBAAmB,QAAQ;AACzD,gBAAM,UAAU,mBAAmB,QAAA,EAAU,aAAa,YAAA;AAC1D,gBAAM,eAAe,uBAAuB,SAAU,YAAY,YAAY,KAAA;AAC9E,gBAAM,WAAW,YAAY,SAAS;AACtC,gBAAM,WAAW,YAAY,SAAS;AACtC,cAAK,YAAY,aAAa,QAAQ,QAAA,IAAY,KAAO,YAAY,aAAa,QAAQ,QAAA,IAAY,EACpG;AAEF,cAAI,mBAAmB,QAAA,EAAU,aAAa,eAAA,EAC5C,YAAW,mBAAmB,QAAA,GAAW,GAAA;AAE3C,sBAAY,oBAAoB,YAAA;AAChC,6BAAmB,QAAA,EAAU,MAAA;AAC7B;QACF;AAEA,YAAI,WAAW,GAAG;AAChB,cAAI,YAAY,qBAAA,EACd;AACF,sBAAY,SAAA;AACZ,mBAAS,MAAM;AACb,kBAAM,qBAAoC,mBAAmB,aAAA;AAC7D,gBAAA,CAAK,mBAAmB,OACtB;AACF,gBAAA,CAAK,YAAY,gBAAgB,SAAS,YAAY,eAAe,QAAQ,GAAG;AAE9E,oBAAM,eAAe,eAAe,YAAY,YAAY,KAAA;AAC5D,oBAAM,kBAAgB,eAAe,KAAK,IAAI,QAAA;AAC9C,kBAAI,mBAAmB,eAAA,EAAe,aAAa,eAAA,EACjD,YAAW,mBAAmB,eAAA,GAAgB,GAAA;AAEhD,oBAAM,YAAU,mBAAmB,eAAA,EAAe,aAAa,YAAA;AAC/D,iCACE,eAAA,EACA,MAAA;AAEF,0BAAY,oBAAoB,uBAAuB,WAAU,YAAY,YAAY,KAAA,CAAM;AAC/F;YACF;AACA,kBAAM,gBAAgB,mBAAmB,SAAS,KAAK,IAAI,QAAA;AAC3D,gBAAI,mBAAmB,aAAA,EAAe,aAAa,eAAA,EACjD,YAAW,mBAAmB,aAAA,GAAgB,GAAA;AAEhD,kBAAM,UAAU,mBAAmB,aAAA,EAAe,aAAa,YAAA;AAC/D,wBAAY,oBAAoB,uBAAuB,SAAU,YAAY,YAAY,KAAA,CAAM;AAC/F,+BACE,aAAA,EACA,MAAA;UACH,CAAA;AACD;QACF;AAEA,YAAI,YAAY,mBAAmB,QAAQ;AACzC,cAAI,YAAY,qBAAA,EACd;AACF,sBAAY,SAAA;AACZ,mBAAS,MAAM;AACb,kBAAM,qBAAoC,mBAAmB,aAAA;AAC7D,gBAAA,CAAK,mBAAmB,OACtB;AAEF,gBAAA,CAAK,YAAY,gBAAgB,SAAS,YAAY,eAAe,QAAQ,GAAG;AAE9E,oBAAM,eAAe,eACnB,YAAY,YAAY,MAAM,IAAI,EAAE,QAAQ,YAAY,eAAe,QAAQ,EAAG,CAAA,CAAC;AAGrF,oBAAM,kBAAgB,WAAW,mBAAmB,UAAU,mBAAmB,SAAS;AAE1F,kBAAI,mBAAmB,eAAA,EAAe,aAAa,eAAA,EACjD,YAAW,mBAAmB,eAAA,GAAgB,GAAA;AAEhD,oBAAM,YAAU,mBAAmB,eAAA,EAAe,aAAa,YAAA;AAC/D,0BAAY,oBAAoB,uBAAuB,WAAU,YAAY,YAAY,KAAA,CAAM;AAC/F,iCAAmB,eAAA,EAAe,MAAA;AAClC;YACF;AAEA,kBAAM,gBAAgB,WAAW,mBAAmB;AACpD,gBAAI,mBAAmB,aAAA,EAAe,aAAa,eAAA,EACjD,YAAW,mBAAmB,aAAA,GAAgB,GAAA;AAGhD,kBAAM,UAAU,mBAAmB,aAAA,EAAe,aAAa,YAAA;AAC/D,wBAAY,oBAAoB,uBAAuB,SAAU,YAAY,YAAY,KAAA,CAAM;AAE/F,+BAAmB,aAAA,EAAe,MAAA;UACnC,CAAA;QACH;MACF;IACF;;0BAIE,YA+BY,MAAA,SAAA,GA/BZ,WA+BY;iBA9BN;QAAJ,KAAI;SACIA,QAAK;QACb,MAAK;QACJ,cAAY,UAAA;QACb,mCAAA;QACC,iBAAe,WAAA,SAAc,cAAA,QAAa,OAAA;QAC1C,iBAAe,eAAA,QAAc,OAAA;QAC7B,cAAYC,KAAAA,IAAI,SAAA;QAChB,iBAAe,WAAA,QAAU,KAAA;QACzB,oBAAkB,cAAA,QAAa,KAAA;QAC/B,cAAY,YAAA,QAAW,KAAA;QACvB,qBAAmB,cAAA,QAAa,KAAA;QAChC,6BAA2B,qBAAA,QAAoB,KAAA;QAC/C,gBAAc,cAAA,QAAa,KAAA;QAC3B,UAAU,cAAA,QAAa,IAAO,cAAA,SAAiB,WAAA,QAAA,SAAsB;QACrE,SAAO;QACP,WAAO,CAAA,SAAiC,gBAAc;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA,CAAA,GAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,SAAA,cACvD,MAAA;QAAsB,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA,EAAA;;yBAEtB,MAUO,CAVP,WAUO,KAAA,QAAA,WAAA;UATJ,UAAW,SAAA;UACX,UAAU,WAAA;UACV,OAAO,YAAA;UACP,UAAU,eAAA;UACV,aAAc,cAAA;UACd,oBAAsB,qBAAA;UACtB,aAAa,cAAA;WAPhB,MAUO,CAAA,gBAAA,gBADF,SAAA,KAAA,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1PjB,UAAMC,SAAQ;AAEd,UAAM,cAAc,0BAAA;AACpB,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,QAAQ,OAAA,MAAA;AAC7D,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,QAAQ,OAAA,MAAA;;0BAI3D,YAUY,MAAA,SAAA,GAVZ,WACUA,QAAK;QACb,UAAS;QACT,MAAK;QACJ,iBAAe,SAAA;QACf,iBAAe,SAAA;QACf,iBAAe,SAAA,SAAQ;QACvB,iBAAe,SAAA,SAAQ;;yBAExB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBZ,UAAMC,SAAQ;;0BAIZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACb,eAAY,OAAM,CAAA,GAAA;yBAElB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AERZ,UAAMC,SAAQ;;0BAIZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;AASd,UAAM,cAAc,0BAAA;;0BAIlB,YAOY,MAAA,SAAA,GAPZ,WACUA,QAAK,EACZ,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA,OAAA,CAAA,GAAA;yBAE1C,MAEO,CAFP,WAEO,KAAA,QAAA,WAAA,EAFA,cAAe,MAAA,WAAA,EAAY,aAAa,MAAA,GAA/C,MAEO,CAAA,gBAAA,gBADF,MAAA,WAAA,EAAY,aAAa,KAAA,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AENvC,UAAMC,SAAQ;AAGd,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,SAAS,YAAY,qBAAqBA,OAAM,QAAA,CAAS;AAE9G,UAAM,cAAc,0BAAA;;0BAIlB,YAaY,MAAA,SAAA,GAAA;QAZT,IAAIA,OAAM;QACV,YAAUA,OAAM;QACjB,cAAW;QACV,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,iBAAe,SAAA,SAAA;QACf,iBAAe,SAAA,SAAA;QACf,UAAU,SAAA;QACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,SAASD,OAAM,QAAA;;yBAEnC,MAEO,CAFP,WAEO,KAAA,QAAA,WAAA,EAFA,UAAA,SAAA,MAAQ,GAAf,MAEO,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAFS,aAAA,EAEhB,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBJ,UAAME,SAAQ;AAGd,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,SAAS,YAAY,qBAAqBA,OAAM,QAAA,CAAS;AAE9G,UAAM,cAAc,0BAAA;;0BAIlB,YAaY,MAAA,SAAA,GAAA;QAZV,cAAW;QACV,IAAIA,OAAM;QACV,YAAUA,OAAM;QAChB,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,iBAAe,SAAA,SAAA;QACf,iBAAe,SAAA,SAAA;QACf,UAAU,SAAA;QACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,SAASD,OAAM,QAAA;;yBAEnC,MAEO,CAFP,WAEO,KAAA,QAAA,WAAA,EAFA,UAAA,SAAA,MAAQ,GAAf,MAEO,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAFS,aAAA,EAEhB,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AElCJ,IAAM,iBAAiB;AAEvB,SAAgB,cAA6BE,UAAkD,CAAE,GAAE;AACjG,QAAM,EAAE,MAAM,IAAI,aAAa,MAAA,IAAU;AACzC,QAAM,eAAe,GAAG,GAAA;AACxB,MAAIC;AAEJ,MAAI,YAAY;AACd,UAAM,UAAU,IAAuD,oBAAI,IAAA,CAAA;AAC3E,UAAM,gBAAgB,IAAA;AAEtB,IAAAC,WAAU;MACR;MACA;IACD;AACD,YAAQ,cAAcA,QAAA;EACvB,MAEC,CAAAA,WAAU,OAAO,YAAA;AAGnB,QAAM,WAAW,CAAC,sBAAsB,UAAU;AAChD,UAAM,iBAAiBA,SAAQ,cAAc;AAC7C,QAAA,CAAK,eACH,QAAO,CAAE;AACX,UAAM,eAAe,MAAM,KAAK,eAAe,iBAAiB,IAAI,cAAA,GAAiB,CAAC;AACtF,UAAM,QAAQ,MAAM,KAAKA,SAAQ,QAAQ,MAAM,OAAA,CAAQ;AACvD,UAAM,eAAe,MAAM,KACzB,CAAC,GAAG,MAAM,aAAa,QAAQ,EAAE,GAAA,IAAO,aAAa,QAAQ,EAAE,GAAA,CAAI;AAGrE,QAAI,oBACF,QAAO;QAEP,QAAO,aAAa,OAAO,CAAA,MAAK,EAAE,IAAI,QAAQ,aAAa,EAAA;EAC9D;AAED,QAAM,iBAAiB,gBAAgB;IACrC,MAAM;IACN,MAAM,GAAG,EAAE,MAAA,GAAS;AAClB,YAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,YAAM,gBAAgB,MAAM;AAC1B,QAAAA,SAAQ,cAAc,QAAQ,eAAe;MAC9C,CAAA;AACD,aAAO,MAAM,EAAE,MAAM,EAAE,KAAK,iBAAkB,GAAE,KAAA;IACjD;EACF,CAAA;AAED,QAAM,iBAAiB,gBAAgB;IACrC,MAAM;IACN,cAAc;IACd,OAAO,EACL,OAAO,EAEL,WAAW,MAAM,KAClB,EACF;IACD,MAAMC,QAAO,EAAE,OAAO,MAAA,GAAS;AAC7B,YAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAE7C,kBAAY,CAAC,cAAc;AACzB,YAAI,eAAe,OAAO;AACxB,gBAAMC,QAAM,QAAQ,eAAe,KAAA;AAEnC,UAAAF,SAAQ,QAAQ,MAAM,IAAIE,OAAK;YAAE,KAAK,eAAe;YAAQ,OAAOD,OAAM;UAAO,CAAA;AACjF,oBAAU,MAAMD,SAAQ,QAAQ,MAAM,OAAOE,KAAAA,CAAI;QAClD;MACF,CAAA;AAED,aAAO,MAAM,EAAE,MAAM;QAAE,GAAG;SAAQ,cAAA,GAAiB;QAAI,KAAK;MAAkB,GAAE,KAAA;IACjF;EACF,CAAA;AAED,QAAM,gBAAgB,SAAS,MAAM,MAAM,KAAKF,SAAQ,QAAQ,MAAM,OAAA,CAAQ,CAAC;AAC/E,QAAM,cAAc,SAAS,MAAMA,SAAQ,QAAQ,MAAM,IAAA;AAEzD,SAAO;IAAE;IAAU;IAAe;IAAa;IAAgB;EAAgB;AAChF;;;ACjFD,IAAa,cAAc;AAC3B,IAAaG,iBAAgB;EAAE,SAAS;EAAO,YAAY;AAAM;AAEjE,IAAaC,0BAAuD;EAClE,WAAW;EACX,SAAS;EACT,YAAY;EACZ,WAAW;EACX,QAAQ;EACR,MAAM;EACN,UAAU;EACV,KAAK;AACN;AAED,SAAgB,qBAAqBC,KAAaC,KAAiB;AACjE,MAAI,QAAQ,MACV,QAAO;AACT,SAAO,QAAQ,cACX,eACA,QAAQ,eACN,cACA;AACP;AAID,SAAgB,eACdC,OACAC,aACAF,KACA;AACA,QAAM,MAAM,qBAAqB,MAAM,KAAK,GAAA;AAC5C,MAAI,gBAAgB,cAAc,CAAC,aAAa,YAAa,EAAC,SAAS,GAAA,EACrE,QAAA;AACF,MAAI,gBAAgB,gBAAgB,CAAC,WAAW,WAAY,EAAC,SAAS,GAAA,EACpE,QAAA;AACF,SAAO,wBAAwB,GAAA;AAChC;AAED,SAAgBG,YAAWC,YAA2B,gBAAgB,OAAO;AAC3E,QAAM,6BAA6B,iBAAA;AACnC,aAAW,aAAa,YAAY;AAElC,QAAI,cAAc,2BAChB;AACF,cAAU,MAAM,EAAE,cAAe,CAAA;AACjC,QAAI,iBAAA,MAAuB,2BACzB;EACH;AACF;AAMD,SAAgBC,WAAaC,OAAYC,YAAoB;AAC3D,SAAO,MAAM,IAAI,CAAC,GAAG,UAAU,OAAO,aAAa,SAAS,MAAM,MAAA,CAAA;AACnE;;;ACRD,IAAa,CAAC,+BAA+B,8BAAA,IACzC,cAA6B,kBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjC,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AAEd,UAAM,EAAE,MAAM,aAAa,KAAK,QAAA,IAAY,OAAOA,MAAA;AACnD,UAAM,MAAM,aAAa,OAAA;AACzB,UAAM,mBAAmB,UAAUA,QAAO,oBAAoB,OAAO;MACnE,cAAcA,OAAM;MACpB,SAAUA,OAAM,qBAAA;IACjB,CAAA;AACD,UAAM,mBAAmB,IAAI,KAAA;AAC7B,UAAM,eAAe,IAAI,KAAA;AACzB,UAAM,sBAAsB,IAAI,CAAA;AAEhC,UAAM,EAAE,UAAU,eAAA,IAAmB,cAAc,EAAE,YAAY,KAAM,CAAA;AAEvE,aAAS,YAAY,OAAmB;AAKtC,YAAM,kBAAA,CAAmB,aAAa;AAEtC,UACE,MAAM,iBACH,MAAM,WAAW,MAAM,iBACvB,mBAAA,CACC,iBAAiB,OACrB;AACA,cAAM,kBAAkB,IAAI,YAAY,aAAaC,cAAA;AACrD,cAAM,cAAc,cAAc,eAAA;AAClC,cAAM,cAAc,eAAA;AAEpB,YAAA,CAAK,gBAAgB,kBAAkB;AACrC,gBAAM,QAAQ,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA,EAAK,OAAO,CAAA,MAAK,EAAE,QAAQ,aAAa,EAAA;AAC5E,gBAAM,aAAa,MAAM,KAAK,CAAA,SAAQ,KAAK,aAAa,aAAA,MAAmB,EAAA;AAC3E,gBAAM,kBAAkB,MAAM,KAAK,CAAA,SAAQ,KAAK,aAAa,kBAAA,MAAwB,EAAA;AACrF,gBAAM,cAAc,MAAM,KACxB,CAAA,SAAQ,KAAK,OAAO,iBAAiB,KAAA;AAEvC,gBAAM,iBAAiB;YAAC;YAAY;YAAiB;YAAa,GAAG;UAAM,EAAC,OAC1E,OAAA;AAEF,UAAAC,YAAW,gBAAgBF,OAAM,yBAAA;QACnC;MACF;AACA,mBAAa,QAAQ;IACvB;AAEA,aAAS,gBAAgB;AAEvB,iBAAW,MAAM;AACf,qBAAa,QAAQ;MACtB,GAAE,CAAA;IACL;AAEA,aAAa,EACX,SACD,CAAA;AAED,mCAA+B;MAC7B;MACA;MACA;MACA;MACA,aAAa,CAAC,cAAc;AAC1B,yBAAiB,QAAQ;MAC1B;MACD,gBAAgB,MAAM;AACpB,yBAAiB,QAAQ;MAC1B;MACD,oBAAoB,MAAM;AACxB,4BAAoB;MACrB;MACD,uBAAuB,MAAM;AAC3B,4BAAoB;MACrB;IACF,CAAA;;0BAIC,YAeiB,MAAA,cAAA,GAAA,MAAA;yBAdf,MAaY,CAbZ,YAaY,MAAA,SAAA,GAAA;UAZT,UAAU,iBAAA,SAAoB,oBAAA,UAAmB,IAAA,KAAA;UACjD,oBAAkB,MAAA,WAAA;UAClB,IAAIG,KAAAA;UACJ,YAAUC,KAAAA;UACV,KAAK,MAAA,GAAA;UACN,OAAA,EAAA,WAAA,OAAqB;UACpB,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,aAAA,QAAY;UACvB,WAAS;UACT,SAAO;UACP,QAAI,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,iBAAA,QAAgB;;2BAEvB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzId,UAAMC,SAAQ;AAKd,UAAMC,WAAU,8BAAA;AAChB,UAAM,WAAWC,OAAA;AACjB,UAAM,KAAK,SAAS,MAAMF,OAAM,aAAa,QAAA;AAC7C,UAAM,mBAAmB,SACvB,MAAMC,SAAQ,iBAAiB,UAAU,GAAG,KAAA;AAG9C,UAAM,EAAE,UAAU,eAAA,IAAmB,cAAA;AAErC,cAAU,MAAM;AACd,UAAID,OAAM,UACR,CAAAC,SAAQ,mBAAA;IACX,CAAA;AACD,gBAAY,MAAM;AAChB,UAAID,OAAM,UACR,CAAAC,SAAQ,sBAAA;IACX,CAAA;AAED,aAAS,cAAc,OAAsB;AAC3C,UAAI,MAAM,QAAQ,SAAS,MAAM,UAAU;AACzC,QAAAA,SAAQ,eAAA;AACR;MACF;AAEA,UAAI,MAAM,WAAW,MAAM,cACzB;AAEF,YAAM,cAAc,eAClB,OACAA,SAAQ,YAAY,OACpBA,SAAQ,IAAI,KAAA;AAGd,UAAI,gBAAA,QAA2B;AAC7B,YAAI,MAAM,WAAW,MAAM,WAAW,MAAM,WAAWD,OAAM,gBAAgB,QAAQ,MAAM,UACzF;AACF,cAAM,eAAA;AACN,YAAI,iBAAiB,CAAC,GAAG,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA,EAAK,OAAO,CAAA,MAAK,EAAE,QAAQ,aAAa,EAAA,CAAG;AAE1F,YAAI,gBAAgB,OAClB,gBAAe,QAAA;iBAER,gBAAgB,UAAU,gBAAgB,QAAQ;AACzD,cAAI,gBAAgB,OAClB,gBAAe,QAAA;AACjB,gBAAM,eAAe,eAAe,QAClC,MAAM,aAAA;AAGR,2BAAiBC,SAAQ,KAAK,QAC1BE,WAAU,gBAAgB,eAAe,CAAA,IACzC,eAAe,MAAM,eAAe,CAAA;QAC1C;AAEA,iBAAS,MAAMC,YAAW,cAAA,CAAe;MAC3C;IACF;;0BAIE,YAsBiB,MAAA,cAAA,GAAA,MAAA;yBArBf,MAoBY,CApBZ,YAoBY,MAAA,SAAA,GAAA;UAnBT,UAAU,iBAAA,QAAgB,IAAA;UAC1B,oBAAkB,MAAAH,QAAA,EAAQ,YAAY;UACtC,eAAaI,KAAAA,SAAM,KAAA;UACnB,iBAAA,CAAgBC,KAAAA,YAAS,KAAA;UACzB,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAY,UAAK;iBAA8LF,KAAAA,UAAW,OAAM,eAAA;gBAA+H,OAAAL,QAAA,EAAQ,YAAY,GAAA,KAAA;;UAS5X,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAAA,QAAA,EAAQ,YAAY,GAAA,KAAA;UAC3B,WAAS;;2BAEV,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BE/FZ,YA2BY,MAAA,SAAA,GAAA;QA1BT,IAAIQ,KAAAA;QACJ,YAAUC,KAAAA;QACV,eAAaC,KAAAA,YAAO,cAAA,SAAA;QACpB,eAAaA,KAAAA,YAAO,iBAAA,KAAA;QACpB,UAAUA,KAAAA,YAAO,iBAAA,OAAA;QACjB,OAAO;;;;;;;;;;;;;;QAkBP;;yBAED,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBZ,UAAMC,SAAQ;AAKd,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,UAAM,aAAa,SAAS,MAAMA,OAAM,WAAWA,OAAM,KAAA;AAEzD,UAAM,YAAY,CAAC,KAAK,SAAS;AAC/B,UAAA,CAAK,eAAe,MAClB;AAEF,YAAM,QAAQ,eAAe;AAC7B,YAAM,aAAa,OAAO,iBAAiB;AAC3C,YAAM,aAAa,OAAO,yBAAyB,YAAY,OAAA;AAC/D,YAAM,WAAW,WAAW;AAC5B,UAAI,YAAY,QAAQ,MAAM;AAC5B,cAAM,aAAa,IAAI,MAAM,SAAS,EAAE,SAAS,KAAM,CAAA;AACvD,cAAM,cAAc,IAAI,MAAM,UAAU,EAAE,SAAS,KAAM,CAAA;AACzD,iBAAS,KAAK,OAAO,GAAA;AACrB,cAAM,cAAc,UAAA;AACpB,cAAM,cAAc,WAAA;MACtB;IACD,CAAA;;0BAIC,YAIE,wBAJF,WAIE;iBAHI;QAAJ,KAAI;;WACSA;QAAK,GAAKC,KAAAA;MAAM,GAAA,EAC7B,IAAG,QAAO,CAAA,GAAA,MAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1Cd,UAAMC,SAAQ;AAKd,UAAM,8BAA8B,SAAS,MAAA,OACpCA,OAAM,UAAU,YACpB,MAAM,QAAQA,OAAM,KAAA,KACpBA,OAAM,MAAM,WAAW,KACvBA,OAAM,QAAA;AAGX,UAAM,cAAc,SAAS,MAAM;AAEjC,UAAA,OAAWA,OAAM,UAAU,YAAA,OAAmBA,OAAM,UAAU,YAAA,OAAmBA,OAAM,UAAU,aAAaA,OAAM,UAAU,QAAQA,OAAM,UAAA,OAC1I,QAAO,CAAC;QAAE,MAAMA,OAAM;QAAM,OAAOA,OAAM;MAAO,CAAA;sBAIlCA,OAAM,UAAU,YAAY,MAAM,QAAQA,OAAM,KAAA,EAC9D,QAAOA,OAAM,MAAM,QAAQ,CAAC,KAAK,UAAU;AAEzC,YAAA,OAAW,QAAQ,SACjB,QAAO,OAAO,QAAQ,GAAA,EAAK,IAAI,CAAC,CAAC,KAAK,KAAA,OAAY;UAAE,MAAM,GAAGA,OAAM,IAAA,IAAQ,KAAA,KAAU,GAAA;UAAQ;QAAO,EAAA;YAGpG,QAAQ;UAAE,MAAM,GAAGA,OAAM,IAAA,IAAQ,KAAA;UAAU,OAAO;QAAK;MAC1D,CAAA;eAIMA,OAAM,UAAU,QAAA,OAAeA,OAAM,UAAU,YAAA,CAAa,MAAM,QAAQA,OAAM,KAAA,EACvF,QAAO,OAAO,QAAQA,OAAM,KAAA,EAAiB,IAAI,CAAC,CAAC,KAAK,KAAA,OAAY;QAAE,MAAM,GAAGA,OAAM,IAAA,IAAQ,GAAA;QAAQ;MAAO,EAAA;AAG9G,aAAO,CAAC;IACT,CAAA;;8DAIC,mBAAA,2CAAA,GAEQ,4BAAA,SAAA,UAAA,GADR,YAME,mCANF,WAME,EAJC,KAAKC,KAAAA,KAAI,GAAA;QAAA,GACGD;QAAK,GAAKE,KAAAA;MAAM,GAAA;QAC5B,MAAMD,KAAAA;QACN,OAAOE,KAAAA;4DAGV,mBAOE,UAAA,EAAA,KAAA,EAAA,GAAA,WANiB,YAAA,OAAW,CAArB,WAAM;4BADf,YAOE,mCAPF,WAOE,EAJC,KAAK,OAAO,KAAA,GAAA,EAAA,SAAA,KAAA,GAAA;aACAH;UAAK,GAAKE,KAAAA;QAAM,GAAA;UAC5B,MAAM,OAAO;UACb,OAAO,OAAO;;;;;;;;;AEjCnB,IAAa,CAAC,gCAAgC,+BAAA,IAC1C,cAAwC,mBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5C,UAAME,SAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,EAAE,UAAU,aAAa,KAAK,QAAA,IAAY,OAAOA,MAAA;AACvD,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,UAAM,gBAAgB,eAAe,cAAA;AAErC,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM,gBAAgB,CAAE;MACtC,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,mBAAmB,SAAS,MAAM;AACtC,aAAO,YAAY,QAAQ;QAAE,MAAMA,OAAM;QAAM,KAAK,IAAI;QAAO,aAAaA,OAAM;MAAa,IAAG,CAAC;IACpG,CAAA;AAED,oCAAgC;MAC9B;MACA;MACA;IACD,CAAA;;0BAIC,YAeY,wBAdL,MAAA,WAAA,IAAc,MAAA,wBAAA,IAAmB,MAAA,SAAA,CAAS,GADjD,WAeY;iBAbN;QAAJ,KAAI;QACH,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;SACH,iBAAA,KAAA,GAAgB;yBAExB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,GAGA,MAAA,aAAA,KAAiBC,KAAAA,QAAAA,UAAAA,GADzB,YAKE,MAAA,2BAAA,GAAA;;UAHC,MAAMA,KAAAA;UACN,OAAO,MAAA,UAAA;UACP,UAAUC,KAAAA;;;;;;;;;;;;;;AE9EjB,SAAgBC,iBAAgBC,SAAoD;AAClF,SAAO,YAAY;AACpB;AAED,SAAgB,SAASC,SAAuB;AAC9C,SAAOF,iBAAgB,OAAA,IAAW,kBAAkB,UAAU,YAAY;AAC3E;;;AC2BD,IAAa,CAAC,2BAA2B,0BAAA,IACrC,cAAmC,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAevC,UAAMG,SAAQ;AAKd,UAAM,QAAQ;AAWd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,uBAAuB,+BAA+B,IAAA;AAE5D,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM;MACpB,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,WAAW,SAAS,OAAM,6DAAsB,SAAS,UAASA,OAAM,QAAA;AAE9E,UAAM,gBAAgB,SAAuB,MAAM;AACjD,UAAA,CAAK,UAAU,6DAAsB,WAAW,KAAA,EAC9C,QAAO,oBAAoB,qBAAqB,WAAW,OAAOA,OAAM,KAAA;UAGxE,QAAO,WAAW,UAAU,kBAAkB,kBAAkB,WAAW;IAE9E,CAAA;AAED,aAAS,cAAc;AACrB,UAAA,CAAK,UAAU,6DAAsB,WAAW,KAAA,GAAQ;AACtD,cAAM,kBAAkB,CAAC,GAAI,qBAAqB,WAAW,SAAS,CAAE,CAAC;AACzE,YAAI,oBAAoB,iBAAiBA,OAAM,KAAA,GAAQ;AACrD,gBAAM,QAAQ,gBAAgB,UAAU,CAAA,MAAK,QAAQ,GAAGA,OAAM,KAAA,CAAM;AACpE,0BAAgB,OAAO,OAAO,CAAA;QAChC,MAEE,iBAAgB,KAAKA,OAAM,KAAA;AAE7B,6BAAqB,WAAW,QAAQ;MAC1C,MAEE,YAAW,QAAQC,iBAAgB,WAAW,KAAA,IAAS,OAAA,CAAQ,WAAW;IAE9E;AAEA,UAAM,gBAAgB,eAAe,cAAA;AACrC,UAAM,YAAY,SAAS,MAAA;;AAAM,aAAAD,OAAM,MAAM,eAAe,SACvD,cAAS,cAAc,SAASA,OAAM,EAAA,IAAM,MAA5C,mBAAoE,YAAA;KAAA;AAGzE,+BAA2B;MACzB;MACA,OAAO;IACR,CAAA;;;0BAIC,YAmCY,0BAjCL,WAAA,oBAAA,MAAA,mBAAsB,YAAY,SAAQ,MAAA,uBAAA,IAAkB,MAAA,SAAA,CAAS,GAF5E,WACUE,KAkCE,QAlCI;QAEb,IAAIC,KAAAA;QACJ,KAAK,MAAA,UAAA;QACN,MAAK;QACJ,YAAUC,KAAAA;QACV,IAAIC,KAAAA;QACJ,MAAMA,KAAAA,OAAE,WAAA,WAAA;QACR,gBAAc,MAAAJ,gBAAA,EAAgB,cAAA,KAAA,IAAa,UAAc,cAAA;QACzD,iBAAeK,KAAAA;QACf,cAAYJ,KAAAA,OAAM,YAAA,KAAkB,UAAA;QACpC,cAAY,MAAA,QAAA,EAAS,cAAA,KAAA;QACrB,iBAAe,SAAA,QAAQ,KAAA;QACvB,UAAU,SAAA;QACV,aAAW,WAAA,oBAAA,MAAA,mBAAsB,YAAY,SAAA,CAAS,SAAA,QAAA;QACtD,WAAO,SAAA,cAAgB,MAAA;QAEvB,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;QACA,SAAO;;yBAER,MAGE,CAHF,WAGE,KAAA,QAAA,WAAA;UAFC,YAAa,MAAA,UAAA;UACb,OAAO,cAAA;YAIF,MAAA,aAAA,KAAiBK,KAAAA,QAAAA,CAAS,MAAA,oBAAA,KAAoB,UAAA,GADtD,YAQE,MAAA,2BAAA,GAAA;;UANA,MAAK;UACJ,SAAA,CAAA,CAAW,cAAA;UACX,MAAMA,KAAAA;UACN,OAAOC,KAAAA;UACP,UAAU,SAAA;UACV,UAAUF,KAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/HjB,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,cAAc,0BAAA;;0BAIlB,YAcW,MAAA,gBAAA,GAAA,EAbR,SAASG,KAAAA,cAAc,MAAAC,gBAAA,EAAgB,MAAA,WAAA,EAAY,MAAM,KAAA,KAAU,MAAA,WAAA,EAAY,MAAM,UAAK,KAAA,GAAA;yBAE3F,MAUY,CAVZ,YAUY,MAAA,SAAA,GAVZ,WAUY;UATT,KAAK,MAAA,UAAA;UACL,cAAY,MAAA,QAAA,EAAS,MAAA,WAAA,EAAY,MAAM,KAAA;UACvC,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;UACzC,OAAO,EAAA,eAAA,OAAyB;UAChC,YAAUC,KAAAA;UACV,IAAIC,KAAAA;WACGC,KAAAA,MAAAA,GAAM;2BAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AE1Bd,IAAa,CAAC,yBAAyB,wBAAA,IACnC,cAAiC,YAAA;;;;;AAUrC,UAAM,SAAS,IAAA;AAEf,6BAAyB;MACvB;MACA,gBAAgB,CAAA,YAAW,OAAO,QAAQ;IAC3C,CAAA;;aAIC,WAAQ,KAAA,QAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;AEZV,UAAMC,SAAQ;AAEd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,cAAc,wBAAA;AAEpB,oBAAgB,MAAM;AACpB,kBAAY,eAAeA,OAAM,aAAa,eAAe,KAAA;IAC9D,CAAA;;0BAIC,YAMY,MAAA,SAAA,GAAA;QALT,KAAK,MAAA,UAAA;QACL,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;;yBAEX,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVZ,UAAMC,SAAQ;AAMd,qBAAA;;0BAIE,YAiBY,MAAA,SAAA,GAjBZ,WACUA,QAAK;QACZ,OAAOC,KAAAA;QACP,QAAQC,KAAAA;QACR,SAASC,KAAAA,UAAAA,SAAmB;QAC5B,qBAAqBA,KAAAA,UAAAA,SAAmB;;yBAEzC,MASO,CATP,WASO,KAAA,QAAA,WAAA,CAAA,GATP,MASO,CAAA,CAPIC,KAAAA,WAAAA,UAAAA,GADT,mBAGE,QAHFC,WAAA,MAGE,UAAA,GACF,mBAGE,QAHFC,WAAA,EAGE,CAAA,CAAA,CAAA;;;;;;;;;;;;;;AE9CR,SAAgB,UAAaC,OAA6B;AACxD,SAAO,UAAU;AAClB;AAED,SAAgB,gBAAgBC,SAGjB;AACb,SAAO;IACL,MAAM;IACN;IACA,GAAG,MAAM;;AACP,YAAM,EAAE,WAAW,OAAO,eAAA,IAAmB;AAE7C,YAAM,sBAAoB,oBAAe,UAAf,mBAAsB,kBAAiB;AACjE,YAAM,gBAAgB;AACtB,YAAM,aAAa,gBAAgB,IAAI,QAAQ;AAC/C,YAAM,cAAc,gBAAgB,IAAI,QAAQ;AAEhD,YAAM,CAAC,YAAY,WAAA,IAAe,6BAA6B,SAAA;AAC/D,YAAM,eAAe;QAAE,OAAO;QAAM,QAAQ;QAAO,KAAK;MAAQ,EAC9D,WAAA;AAGF,YAAM,kBAAgB,oBAAe,UAAf,mBAAsB,MAAK,KAAK,aAAa;AACnE,YAAM,kBAAgB,oBAAe,UAAf,mBAAsB,MAAK,KAAK,cAAc;AAEpE,UAAI,IAAI;AACR,UAAI,IAAI;AAER,UAAI,eAAe,UAAU;AAC3B,YAAI,gBAAgB,eAAe,GAAG,YAAA;AACtC,YAAI,GAAA,CAAI,WAAA;MACT,WACQ,eAAe,OAAO;AAC7B,YAAI,gBAAgB,eAAe,GAAG,YAAA;AACtC,YAAI,GAAG,MAAM,SAAS,SAAS,WAAA;MAChC,WACQ,eAAe,SAAS;AAC/B,YAAI,GAAA,CAAI,WAAA;AACR,YAAI,gBAAgB,eAAe,GAAG,YAAA;MACvC,WACQ,eAAe,QAAQ;AAC9B,YAAI,GAAG,MAAM,SAAS,QAAQ,WAAA;AAC9B,YAAI,gBAAgB,eAAe,GAAG,YAAA;MACvC;AACD,aAAO,EAAE,MAAM;QAAE;QAAG;MAAG,EAAE;IAC1B;EACF;AACF;AAED,SAAgB,6BAA6BC,WAAsB;AACjE,QAAM,CAAC,MAAM,QAAQ,QAAA,IAAY,UAAU,MAAM,GAAA;AACjD,SAAO,CAAC,MAAc,KAAe;AACtC;;;ACzDD,IAAM,QAAQ,CAAC,OAAO,SAAS,UAAU,MAAM;AAC/C,IAAM,aAAa,CAAC,SAAS,KAAK;AAClC,IAAM,aAA0B,MAAM,OAAO,CAAC,KAAK,SAAS,IAAI,OAAO,MAAM,OAAO,MAAM,WAAW,CAAC,GAAG,OAAO,MAAM,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;AACxI,IAAM,MAAM,KAAK;AACjB,IAAM,MAAM,KAAK;AACjB,IAAM,QAAQ,KAAK;AACnB,IAAM,QAAQ,KAAK;AACnB,IAAM,eAAe,QAAM;AAAA,EACzB,GAAG;AAAA,EACH,GAAG;AACL;AACA,IAAM,kBAAkB;AAAA,EACtB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AACP;AACA,IAAM,uBAAuB;AAAA,EAC3B,OAAO;AAAA,EACP,KAAK;AACP;AACA,SAASC,OAAM,OAAO,OAAO,KAAK;AAChC,SAAO,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC;AACnC;AACA,SAAS,SAAS,OAAO,OAAO;AAC9B,SAAO,OAAO,UAAU,aAAa,MAAM,KAAK,IAAI;AACtD;AACA,SAAS,QAAQ,WAAW;AAC1B,SAAO,UAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;AACA,SAAS,aAAa,WAAW;AAC/B,SAAO,UAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;AACA,SAAS,gBAAgB,MAAM;AAC7B,SAAO,SAAS,MAAM,MAAM;AAC9B;AACA,SAAS,cAAc,MAAM;AAC3B,SAAO,SAAS,MAAM,WAAW;AACnC;AACA,IAAM,aAA0B,oBAAI,IAAI,CAAC,OAAO,QAAQ,CAAC;AACzD,SAAS,YAAY,WAAW;AAC9B,SAAO,WAAW,IAAI,QAAQ,SAAS,CAAC,IAAI,MAAM;AACpD;AACA,SAAS,iBAAiB,WAAW;AACnC,SAAO,gBAAgB,YAAY,SAAS,CAAC;AAC/C;AACA,SAAS,kBAAkB,WAAW,OAAO,KAAK;AAChD,MAAI,QAAQ,QAAQ;AAClB,UAAM;AAAA,EACR;AACA,QAAM,YAAY,aAAa,SAAS;AACxC,QAAM,gBAAgB,iBAAiB,SAAS;AAChD,QAAM,SAAS,cAAc,aAAa;AAC1C,MAAI,oBAAoB,kBAAkB,MAAM,eAAe,MAAM,QAAQ,WAAW,UAAU,SAAS,cAAc,UAAU,WAAW;AAC9I,MAAI,MAAM,UAAU,MAAM,IAAI,MAAM,SAAS,MAAM,GAAG;AACpD,wBAAoB,qBAAqB,iBAAiB;AAAA,EAC5D;AACA,SAAO,CAAC,mBAAmB,qBAAqB,iBAAiB,CAAC;AACpE;AACA,SAAS,sBAAsB,WAAW;AACxC,QAAM,oBAAoB,qBAAqB,SAAS;AACxD,SAAO,CAAC,8BAA8B,SAAS,GAAG,mBAAmB,8BAA8B,iBAAiB,CAAC;AACvH;AACA,SAAS,8BAA8B,WAAW;AAChD,SAAO,UAAU,QAAQ,cAAc,eAAa,qBAAqB,SAAS,CAAC;AACrF;AACA,IAAM,cAAc,CAAC,QAAQ,OAAO;AACpC,IAAM,cAAc,CAAC,SAAS,MAAM;AACpC,IAAM,cAAc,CAAC,OAAO,QAAQ;AACpC,IAAM,cAAc,CAAC,UAAU,KAAK;AACpC,SAAS,YAAY,MAAM,SAAS,KAAK;AACvC,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAA,IACL,KAAK;AACH,UAAI,IAAK,QAAO,UAAU,cAAc;AACxC,aAAO,UAAU,cAAc;AAAA,IACjC,KAAK;AAAA,IACL,KAAK;AACH,aAAO,UAAU,cAAc;AAAA,IACjC;AACE,aAAO,CAAC;AAAA,EACZ;AACF;AACA,SAAS,0BAA0B,WAAW,eAAe,WAAW,KAAK;AAC3E,QAAM,YAAY,aAAa,SAAS;AACxC,MAAI,OAAO,YAAY,QAAQ,SAAS,GAAG,cAAc,SAAS,GAAG;AACrE,MAAI,WAAW;AACb,WAAO,KAAK,IAAI,UAAQ,OAAO,MAAM,SAAS;AAC9C,QAAI,eAAe;AACjB,aAAO,KAAK,OAAO,KAAK,IAAI,6BAA6B,CAAC;AAAA,IAC5D;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,qBAAqB,WAAW;AACvC,SAAO,UAAU,QAAQ,0BAA0B,UAAQ,gBAAgB,IAAI,CAAC;AAClF;AACA,SAAS,oBAAoB,SAAS;AACpC,SAAO;AAAA,IACL,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,GAAG;AAAA,EACL;AACF;AACA,SAAS,iBAAiB,SAAS;AACjC,SAAO,OAAO,YAAY,WAAW,oBAAoB,OAAO,IAAI;AAAA,IAClE,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,EACR;AACF;AACA,SAAS,iBAAiB,MAAM;AAC9B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA,IACZ;AAAA,IACA;AAAA,EACF;AACF;;;ACrIA,SAAS,2BAA2B,MAAM,WAAW,KAAK;AACxD,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,WAAW,YAAY,SAAS;AACtC,QAAM,gBAAgB,iBAAiB,SAAS;AAChD,QAAM,cAAc,cAAc,aAAa;AAC/C,QAAM,OAAO,QAAQ,SAAS;AAC9B,QAAM,aAAa,aAAa;AAChC,QAAM,UAAU,UAAU,IAAI,UAAU,QAAQ,IAAI,SAAS,QAAQ;AACrE,QAAM,UAAU,UAAU,IAAI,UAAU,SAAS,IAAI,SAAS,SAAS;AACvE,QAAM,cAAc,UAAU,WAAW,IAAI,IAAI,SAAS,WAAW,IAAI;AACzE,MAAI;AACJ,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,eAAS;AAAA,QACP,GAAG;AAAA,QACH,GAAG,UAAU,IAAI,SAAS;AAAA,MAC5B;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAG;AAAA,QACH,GAAG,UAAU,IAAI,UAAU;AAAA,MAC7B;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAG,UAAU,IAAI,UAAU;AAAA,QAC3B,GAAG;AAAA,MACL;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAG,UAAU,IAAI,SAAS;AAAA,QAC1B,GAAG;AAAA,MACL;AACA;AAAA,IACF;AACE,eAAS;AAAA,QACP,GAAG,UAAU;AAAA,QACb,GAAG,UAAU;AAAA,MACf;AAAA,EACJ;AACA,UAAQ,aAAa,SAAS,GAAG;AAAA,IAC/B,KAAK;AACH,aAAO,aAAa,KAAK,eAAe,OAAO,aAAa,KAAK;AACjE;AAAA,IACF,KAAK;AACH,aAAO,aAAa,KAAK,eAAe,OAAO,aAAa,KAAK;AACjE;AAAA,EACJ;AACA,SAAO;AACT;AASA,IAAM,kBAAkB,OAAO,WAAW,UAAU,WAAW;AAC7D,QAAM;AAAA,IACJ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,aAAa,CAAC;AAAA,IACd,UAAAC;AAAA,EACF,IAAI;AACJ,QAAM,kBAAkB,WAAW,OAAO,OAAO;AACjD,QAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,QAAQ;AAC5E,MAAI,QAAQ,MAAMA,UAAS,gBAAgB;AAAA,IACzC;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAI,2BAA2B,OAAO,WAAW,GAAG;AACpD,MAAI,oBAAoB;AACxB,MAAI,iBAAiB,CAAC;AACtB,MAAI,aAAa;AACjB,WAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,gBAAgB,CAAC;AACrB,UAAM;AAAA,MACJ,GAAG;AAAA,MACH,GAAG;AAAA,MACH;AAAA,MACA;AAAA,IACF,IAAI,MAAM,GAAG;AAAA,MACX;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAAA;AAAA,MACA,UAAU;AAAA,QACR;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,SAAS,OAAO,QAAQ;AAC5B,QAAI,SAAS,OAAO,QAAQ;AAC5B,qBAAiB;AAAA,MACf,GAAG;AAAA,MACH,CAAC,IAAI,GAAG;AAAA,QACN,GAAG,eAAe,IAAI;AAAA,QACtB,GAAG;AAAA,MACL;AAAA,IACF;AACA,QAAI,SAAS,cAAc,IAAI;AAC7B;AACA,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAI,MAAM,WAAW;AACnB,8BAAoB,MAAM;AAAA,QAC5B;AACA,YAAI,MAAM,OAAO;AACf,kBAAQ,MAAM,UAAU,OAAO,MAAMA,UAAS,gBAAgB;AAAA,YAC5D;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC,IAAI,MAAM;AAAA,QACb;AACA,SAAC;AAAA,UACC;AAAA,UACA;AAAA,QACF,IAAI,2BAA2B,OAAO,mBAAmB,GAAG;AAAA,MAC9D;AACA,UAAI;AAAA,IACN;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX;AAAA,IACA;AAAA,EACF;AACF;AAUA,eAAe,eAAe,OAAO,SAAS;AAC5C,MAAI;AACJ,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA,UAAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM;AAAA,IACJ,WAAW;AAAA,IACX,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,UAAU;AAAA,EACZ,IAAI,SAAS,SAAS,KAAK;AAC3B,QAAM,gBAAgB,iBAAiB,OAAO;AAC9C,QAAM,aAAa,mBAAmB,aAAa,cAAc;AACjE,QAAM,UAAU,SAAS,cAAc,aAAa,cAAc;AAClE,QAAM,qBAAqB,iBAAiB,MAAMA,UAAS,gBAAgB;AAAA,IACzE,WAAW,wBAAwB,OAAOA,UAAS,aAAa,OAAO,SAASA,UAAS,UAAU,OAAO,OAAO,OAAO,wBAAwB,QAAQ,UAAU,QAAQ,kBAAmB,OAAOA,UAAS,sBAAsB,OAAO,SAASA,UAAS,mBAAmB,SAAS,QAAQ;AAAA,IAChS;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,CAAC;AACF,QAAM,OAAO,mBAAmB,aAAa;AAAA,IAC3C;AAAA,IACA;AAAA,IACA,OAAO,MAAM,SAAS;AAAA,IACtB,QAAQ,MAAM,SAAS;AAAA,EACzB,IAAI,MAAM;AACV,QAAM,eAAe,OAAOA,UAAS,mBAAmB,OAAO,SAASA,UAAS,gBAAgB,SAAS,QAAQ;AAClH,QAAM,cAAe,OAAOA,UAAS,aAAa,OAAO,SAASA,UAAS,UAAU,YAAY,KAAO,OAAOA,UAAS,YAAY,OAAO,SAASA,UAAS,SAAS,YAAY,MAAO;AAAA,IACvL,GAAG;AAAA,IACH,GAAG;AAAA,EACL,IAAI;AAAA,IACF,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,QAAM,oBAAoB,iBAAiBA,UAAS,wDAAwD,MAAMA,UAAS,sDAAsD;AAAA,IAC/K;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,IAAI,IAAI;AACT,SAAO;AAAA,IACL,MAAM,mBAAmB,MAAM,kBAAkB,MAAM,cAAc,OAAO,YAAY;AAAA,IACxF,SAAS,kBAAkB,SAAS,mBAAmB,SAAS,cAAc,UAAU,YAAY;AAAA,IACpG,OAAO,mBAAmB,OAAO,kBAAkB,OAAO,cAAc,QAAQ,YAAY;AAAA,IAC5F,QAAQ,kBAAkB,QAAQ,mBAAmB,QAAQ,cAAc,SAAS,YAAY;AAAA,EAClG;AACF;AAOA,IAAM,QAAQ,cAAY;AAAA,EACxB,MAAM;AAAA,EACN;AAAA,EACA,MAAM,GAAG,OAAO;AACd,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAAA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,UAAM;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,IACZ,IAAI,SAAS,SAAS,KAAK,KAAK,CAAC;AACjC,QAAI,WAAW,MAAM;AACnB,aAAO,CAAC;AAAA,IACV;AACA,UAAM,gBAAgB,iBAAiB,OAAO;AAC9C,UAAM,SAAS;AAAA,MACb;AAAA,MACA;AAAA,IACF;AACA,UAAM,OAAO,iBAAiB,SAAS;AACvC,UAAM,SAAS,cAAc,IAAI;AACjC,UAAM,kBAAkB,MAAMA,UAAS,cAAc,OAAO;AAC5D,UAAM,UAAU,SAAS;AACzB,UAAM,UAAU,UAAU,QAAQ;AAClC,UAAM,UAAU,UAAU,WAAW;AACrC,UAAM,aAAa,UAAU,iBAAiB;AAC9C,UAAM,UAAU,MAAM,UAAU,MAAM,IAAI,MAAM,UAAU,IAAI,IAAI,OAAO,IAAI,IAAI,MAAM,SAAS,MAAM;AACtG,UAAM,YAAY,OAAO,IAAI,IAAI,MAAM,UAAU,IAAI;AACrD,UAAM,oBAAoB,OAAOA,UAAS,mBAAmB,OAAO,SAASA,UAAS,gBAAgB,OAAO;AAC7G,QAAI,aAAa,oBAAoB,kBAAkB,UAAU,IAAI;AAGrE,QAAI,CAAC,cAAc,CAAE,OAAOA,UAAS,aAAa,OAAO,SAASA,UAAS,UAAU,iBAAiB,IAAK;AACzG,mBAAa,SAAS,SAAS,UAAU,KAAK,MAAM,SAAS,MAAM;AAAA,IACrE;AACA,UAAM,oBAAoB,UAAU,IAAI,YAAY;AAIpD,UAAM,yBAAyB,aAAa,IAAI,gBAAgB,MAAM,IAAI,IAAI;AAC9E,UAAM,aAAa,IAAI,cAAc,OAAO,GAAG,sBAAsB;AACrE,UAAM,aAAa,IAAI,cAAc,OAAO,GAAG,sBAAsB;AAIrE,UAAM,QAAQ;AACd,UAAMC,OAAM,aAAa,gBAAgB,MAAM,IAAI;AACnD,UAAM,SAAS,aAAa,IAAI,gBAAgB,MAAM,IAAI,IAAI;AAC9D,UAAMC,UAASC,OAAM,OAAO,QAAQF,IAAG;AAMvC,UAAM,kBAAkB,CAAC,eAAe,SAAS,aAAa,SAAS,KAAK,QAAQ,WAAWC,WAAU,MAAM,UAAU,MAAM,IAAI,KAAK,SAAS,QAAQ,aAAa,cAAc,gBAAgB,MAAM,IAAI,IAAI;AAClN,UAAM,kBAAkB,kBAAkB,SAAS,QAAQ,SAAS,QAAQ,SAASD,OAAM;AAC3F,WAAO;AAAA,MACL,CAAC,IAAI,GAAG,OAAO,IAAI,IAAI;AAAA,MACvB,MAAM;AAAA,QACJ,CAAC,IAAI,GAAGC;AAAA,QACR,cAAc,SAASA,UAAS;AAAA,QAChC,GAAI,mBAAmB;AAAA,UACrB;AAAA,QACF;AAAA,MACF;AAAA,MACA,OAAO;AAAA,IACT;AAAA,EACF;AACF;AA+GA,IAAM,OAAO,SAAU,SAAS;AAC9B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,UAAI,uBAAuB;AAC3B,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAAE;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,UAAU,gBAAgB;AAAA,QAC1B,WAAW,iBAAiB;AAAA,QAC5B,oBAAoB;AAAA,QACpB,mBAAmB;AAAA,QACnB,4BAA4B;AAAA,QAC5B,gBAAgB;AAAA,QAChB,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAM3B,WAAK,wBAAwB,eAAe,UAAU,QAAQ,sBAAsB,iBAAiB;AACnG,eAAO,CAAC;AAAA,MACV;AACA,YAAM,OAAO,QAAQ,SAAS;AAC9B,YAAM,kBAAkB,YAAY,gBAAgB;AACpD,YAAM,kBAAkB,QAAQ,gBAAgB,MAAM;AACtD,YAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,SAAS,QAAQ;AACrF,YAAM,qBAAqB,gCAAgC,mBAAmB,CAAC,gBAAgB,CAAC,qBAAqB,gBAAgB,CAAC,IAAI,sBAAsB,gBAAgB;AAChL,YAAM,+BAA+B,8BAA8B;AACnE,UAAI,CAAC,+BAA+B,8BAA8B;AAChE,2BAAmB,KAAK,GAAG,0BAA0B,kBAAkB,eAAe,2BAA2B,GAAG,CAAC;AAAA,MACvH;AACA,YAAMC,cAAa,CAAC,kBAAkB,GAAG,kBAAkB;AAC3D,YAAM,WAAW,MAAM,eAAe,OAAO,qBAAqB;AAClE,YAAM,YAAY,CAAC;AACnB,UAAI,kBAAkB,uBAAuB,eAAe,SAAS,OAAO,SAAS,qBAAqB,cAAc,CAAC;AACzH,UAAI,eAAe;AACjB,kBAAU,KAAK,SAAS,IAAI,CAAC;AAAA,MAC/B;AACA,UAAI,gBAAgB;AAClB,cAAMC,SAAQ,kBAAkB,WAAW,OAAO,GAAG;AACrD,kBAAU,KAAK,SAASA,OAAM,CAAC,CAAC,GAAG,SAASA,OAAM,CAAC,CAAC,CAAC;AAAA,MACvD;AACA,sBAAgB,CAAC,GAAG,eAAe;AAAA,QACjC;AAAA,QACA;AAAA,MACF,CAAC;AAGD,UAAI,CAAC,UAAU,MAAM,CAAAC,UAAQA,SAAQ,CAAC,GAAG;AACvC,YAAI,uBAAuB;AAC3B,cAAM,eAAe,wBAAwB,eAAe,SAAS,OAAO,SAAS,sBAAsB,UAAU,KAAK;AAC1H,cAAM,gBAAgBF,YAAW,SAAS;AAC1C,YAAI,eAAe;AACjB,gBAAM,0BAA0B,mBAAmB,cAAc,oBAAoB,YAAY,aAAa,IAAI;AAClH,cAAI,CAAC;AAAA;AAAA,UAGL,cAAc,MAAM,OAAK,YAAY,EAAE,SAAS,MAAM,kBAAkB,EAAE,UAAU,CAAC,IAAI,IAAI,IAAI,GAAG;AAElG,mBAAO;AAAA,cACL,MAAM;AAAA,gBACJ,OAAO;AAAA,gBACP,WAAW;AAAA,cACb;AAAA,cACA,OAAO;AAAA,gBACL,WAAW;AAAA,cACb;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAIA,YAAI,kBAAkB,wBAAwB,cAAc,OAAO,OAAK,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,MAAM,OAAO,SAAS,sBAAsB;AAG1L,YAAI,CAAC,gBAAgB;AACnB,kBAAQ,kBAAkB;AAAA,YACxB,KAAK,WACH;AACE,kBAAI;AACJ,oBAAMG,cAAa,yBAAyB,cAAc,OAAO,OAAK;AACpE,oBAAI,8BAA8B;AAChC,wBAAM,kBAAkB,YAAY,EAAE,SAAS;AAC/C,yBAAO,oBAAoB;AAAA;AAAA,kBAG3B,oBAAoB;AAAA,gBACtB;AACA,uBAAO;AAAA,cACT,CAAC,EAAE,IAAI,OAAK,CAAC,EAAE,WAAW,EAAE,UAAU,OAAO,CAAAC,cAAYA,YAAW,CAAC,EAAE,OAAO,CAAC,KAAKA,cAAa,MAAMA,WAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,OAAO,SAAS,uBAAuB,CAAC;AACjM,kBAAID,YAAW;AACb,iCAAiBA;AAAA,cACnB;AACA;AAAA,YACF;AAAA,YACF,KAAK;AACH,+BAAiB;AACjB;AAAA,UACJ;AAAA,QACF;AACA,YAAI,cAAc,gBAAgB;AAChC,iBAAO;AAAA,YACL,OAAO;AAAA,cACL,WAAW;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AACF;AAEA,SAAS,eAAe,UAAU,MAAM;AACtC,SAAO;AAAA,IACL,KAAK,SAAS,MAAM,KAAK;AAAA,IACzB,OAAO,SAAS,QAAQ,KAAK;AAAA,IAC7B,QAAQ,SAAS,SAAS,KAAK;AAAA,IAC/B,MAAM,SAAS,OAAO,KAAK;AAAA,EAC7B;AACF;AACA,SAAS,sBAAsB,UAAU;AACvC,SAAO,MAAM,KAAK,UAAQ,SAAS,IAAI,KAAK,CAAC;AAC/C;AAMA,IAAM,OAAO,SAAU,SAAS;AAC9B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,WAAW;AAAA,QACX,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAC3B,cAAQ,UAAU;AAAA,QAChB,KAAK,mBACH;AACE,gBAAM,WAAW,MAAM,eAAe,OAAO;AAAA,YAC3C,GAAG;AAAA,YACH,gBAAgB;AAAA,UAClB,CAAC;AACD,gBAAM,UAAU,eAAe,UAAU,MAAM,SAAS;AACxD,iBAAO;AAAA,YACL,MAAM;AAAA,cACJ,wBAAwB;AAAA,cACxB,iBAAiB,sBAAsB,OAAO;AAAA,YAChD;AAAA,UACF;AAAA,QACF;AAAA,QACF,KAAK,WACH;AACE,gBAAM,WAAW,MAAM,eAAe,OAAO;AAAA,YAC3C,GAAG;AAAA,YACH,aAAa;AAAA,UACf,CAAC;AACD,gBAAM,UAAU,eAAe,UAAU,MAAM,QAAQ;AACvD,iBAAO;AAAA,YACL,MAAM;AAAA,cACJ,gBAAgB;AAAA,cAChB,SAAS,sBAAsB,OAAO;AAAA,YACxC;AAAA,UACF;AAAA,QACF;AAAA,QACF,SACE;AACE,iBAAO,CAAC;AAAA,QACV;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF;AAqIA,IAAM,cAA2B,oBAAI,IAAI,CAAC,QAAQ,KAAK,CAAC;AAKxD,eAAe,qBAAqB,OAAO,SAAS;AAClD,QAAM;AAAA,IACJ;AAAA,IACA,UAAAE;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,SAAS,QAAQ;AACrF,QAAM,OAAO,QAAQ,SAAS;AAC9B,QAAM,YAAY,aAAa,SAAS;AACxC,QAAM,aAAa,YAAY,SAAS,MAAM;AAC9C,QAAM,gBAAgB,YAAY,IAAI,IAAI,IAAI,KAAK;AACnD,QAAM,iBAAiB,OAAO,aAAa,KAAK;AAChD,QAAM,WAAW,SAAS,SAAS,KAAK;AAGxC,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,OAAO,aAAa,WAAW;AAAA,IACjC,UAAU;AAAA,IACV,WAAW;AAAA,IACX,eAAe;AAAA,EACjB,IAAI;AAAA,IACF,UAAU,SAAS,YAAY;AAAA,IAC/B,WAAW,SAAS,aAAa;AAAA,IACjC,eAAe,SAAS;AAAA,EAC1B;AACA,MAAI,aAAa,OAAO,kBAAkB,UAAU;AAClD,gBAAY,cAAc,QAAQ,gBAAgB,KAAK;AAAA,EACzD;AACA,SAAO,aAAa;AAAA,IAClB,GAAG,YAAY;AAAA,IACf,GAAG,WAAW;AAAA,EAChB,IAAI;AAAA,IACF,GAAG,WAAW;AAAA,IACd,GAAG,YAAY;AAAA,EACjB;AACF;AASA,IAAM,SAAS,SAAU,SAAS;AAChC,MAAI,YAAY,QAAQ;AACtB,cAAU;AAAA,EACZ;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,UAAI,uBAAuB;AAC3B,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM,aAAa,MAAM,qBAAqB,OAAO,OAAO;AAI5D,UAAI,gBAAgB,wBAAwB,eAAe,WAAW,OAAO,SAAS,sBAAsB,eAAe,wBAAwB,eAAe,UAAU,QAAQ,sBAAsB,iBAAiB;AACzN,eAAO,CAAC;AAAA,MACV;AACA,aAAO;AAAA,QACL,GAAG,IAAI,WAAW;AAAA,QAClB,GAAG,IAAI,WAAW;AAAA,QAClB,MAAM;AAAA,UACJ,GAAG;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAOA,IAAM,QAAQ,SAAU,SAAS;AAC/B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,UAAU,gBAAgB;AAAA,QAC1B,WAAW,iBAAiB;AAAA,QAC5B,UAAU;AAAA,UACR,IAAI,UAAQ;AACV,gBAAI;AAAA,cACF,GAAAC;AAAA,cACA,GAAAC;AAAA,YACF,IAAI;AACJ,mBAAO;AAAA,cACL,GAAAD;AAAA,cACA,GAAAC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAC3B,YAAM,SAAS;AAAA,QACb;AAAA,QACA;AAAA,MACF;AACA,YAAM,WAAW,MAAM,eAAe,OAAO,qBAAqB;AAClE,YAAM,YAAY,YAAY,QAAQ,SAAS,CAAC;AAChD,YAAM,WAAW,gBAAgB,SAAS;AAC1C,UAAI,gBAAgB,OAAO,QAAQ;AACnC,UAAI,iBAAiB,OAAO,SAAS;AACrC,UAAI,eAAe;AACjB,cAAM,UAAU,aAAa,MAAM,QAAQ;AAC3C,cAAM,UAAU,aAAa,MAAM,WAAW;AAC9C,cAAMC,OAAM,gBAAgB,SAAS,OAAO;AAC5C,cAAMC,OAAM,gBAAgB,SAAS,OAAO;AAC5C,wBAAgBC,OAAMF,MAAK,eAAeC,IAAG;AAAA,MAC/C;AACA,UAAI,gBAAgB;AAClB,cAAM,UAAU,cAAc,MAAM,QAAQ;AAC5C,cAAM,UAAU,cAAc,MAAM,WAAW;AAC/C,cAAMD,OAAM,iBAAiB,SAAS,OAAO;AAC7C,cAAMC,OAAM,iBAAiB,SAAS,OAAO;AAC7C,yBAAiBC,OAAMF,MAAK,gBAAgBC,IAAG;AAAA,MACjD;AACA,YAAM,gBAAgB,QAAQ,GAAG;AAAA,QAC/B,GAAG;AAAA,QACH,CAAC,QAAQ,GAAG;AAAA,QACZ,CAAC,SAAS,GAAG;AAAA,MACf,CAAC;AACD,aAAO;AAAA,QACL,GAAG;AAAA,QACH,MAAM;AAAA,UACJ,GAAG,cAAc,IAAI;AAAA,UACrB,GAAG,cAAc,IAAI;AAAA,UACrB,SAAS;AAAA,YACP,CAAC,QAAQ,GAAG;AAAA,YACZ,CAAC,SAAS,GAAG;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAIA,IAAM,aAAa,SAAU,SAAS;AACpC,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL;AAAA,IACA,GAAG,OAAO;AACR,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,QAAAE,UAAS;AAAA,QACT,UAAU,gBAAgB;AAAA,QAC1B,WAAW,iBAAiB;AAAA,MAC9B,IAAI,SAAS,SAAS,KAAK;AAC3B,YAAM,SAAS;AAAA,QACb;AAAA,QACA;AAAA,MACF;AACA,YAAM,YAAY,YAAY,SAAS;AACvC,YAAM,WAAW,gBAAgB,SAAS;AAC1C,UAAI,gBAAgB,OAAO,QAAQ;AACnC,UAAI,iBAAiB,OAAO,SAAS;AACrC,YAAM,YAAY,SAASA,SAAQ,KAAK;AACxC,YAAM,iBAAiB,OAAO,cAAc,WAAW;AAAA,QACrD,UAAU;AAAA,QACV,WAAW;AAAA,MACb,IAAI;AAAA,QACF,UAAU;AAAA,QACV,WAAW;AAAA,QACX,GAAG;AAAA,MACL;AACA,UAAI,eAAe;AACjB,cAAM,MAAM,aAAa,MAAM,WAAW;AAC1C,cAAM,WAAW,MAAM,UAAU,QAAQ,IAAI,MAAM,SAAS,GAAG,IAAI,eAAe;AAClF,cAAM,WAAW,MAAM,UAAU,QAAQ,IAAI,MAAM,UAAU,GAAG,IAAI,eAAe;AACnF,YAAI,gBAAgB,UAAU;AAC5B,0BAAgB;AAAA,QAClB,WAAW,gBAAgB,UAAU;AACnC,0BAAgB;AAAA,QAClB;AAAA,MACF;AACA,UAAI,gBAAgB;AAClB,YAAI,uBAAuB;AAC3B,cAAM,MAAM,aAAa,MAAM,UAAU;AACzC,cAAM,eAAe,YAAY,IAAI,QAAQ,SAAS,CAAC;AACvD,cAAM,WAAW,MAAM,UAAU,SAAS,IAAI,MAAM,SAAS,GAAG,KAAK,iBAAiB,wBAAwB,eAAe,WAAW,OAAO,SAAS,sBAAsB,SAAS,MAAM,IAAI,MAAM,eAAe,IAAI,eAAe;AACzO,cAAM,WAAW,MAAM,UAAU,SAAS,IAAI,MAAM,UAAU,GAAG,KAAK,eAAe,MAAM,yBAAyB,eAAe,WAAW,OAAO,SAAS,uBAAuB,SAAS,MAAM,MAAM,eAAe,eAAe,YAAY;AACpP,YAAI,iBAAiB,UAAU;AAC7B,2BAAiB;AAAA,QACnB,WAAW,iBAAiB,UAAU;AACpC,2BAAiB;AAAA,QACnB;AAAA,MACF;AACA,aAAO;AAAA,QACL,CAAC,QAAQ,GAAG;AAAA,QACZ,CAAC,SAAS,GAAG;AAAA,MACf;AAAA,IACF;AAAA,EACF;AACF;AAQA,IAAM,OAAO,SAAU,SAAS;AAC9B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,UAAI,uBAAuB;AAC3B,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA,UAAAN;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,QAAQ,MAAM;AAAA,QAAC;AAAA,QACf,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAC3B,YAAM,WAAW,MAAM,eAAe,OAAO,qBAAqB;AAClE,YAAM,OAAO,QAAQ,SAAS;AAC9B,YAAM,YAAY,aAAa,SAAS;AACxC,YAAM,UAAU,YAAY,SAAS,MAAM;AAC3C,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,MAAM;AACV,UAAI;AACJ,UAAI;AACJ,UAAI,SAAS,SAAS,SAAS,UAAU;AACvC,qBAAa;AACb,oBAAY,eAAgB,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,SAAS,QAAQ,KAAM,UAAU,SAAS,SAAS;AAAA,MACzI,OAAO;AACL,oBAAY;AACZ,qBAAa,cAAc,QAAQ,QAAQ;AAAA,MAC7C;AACA,YAAM,wBAAwB,SAAS,SAAS,MAAM,SAAS;AAC/D,YAAM,uBAAuB,QAAQ,SAAS,OAAO,SAAS;AAC9D,YAAM,0BAA0B,IAAI,SAAS,SAAS,UAAU,GAAG,qBAAqB;AACxF,YAAM,yBAAyB,IAAI,QAAQ,SAAS,SAAS,GAAG,oBAAoB;AACpF,YAAM,UAAU,CAAC,MAAM,eAAe;AACtC,UAAI,kBAAkB;AACtB,UAAI,iBAAiB;AACrB,WAAK,wBAAwB,MAAM,eAAe,UAAU,QAAQ,sBAAsB,QAAQ,GAAG;AACnG,yBAAiB;AAAA,MACnB;AACA,WAAK,yBAAyB,MAAM,eAAe,UAAU,QAAQ,uBAAuB,QAAQ,GAAG;AACrG,0BAAkB;AAAA,MACpB;AACA,UAAI,WAAW,CAAC,WAAW;AACzB,cAAM,OAAO,IAAI,SAAS,MAAM,CAAC;AACjC,cAAM,OAAO,IAAI,SAAS,OAAO,CAAC;AAClC,cAAM,OAAO,IAAI,SAAS,KAAK,CAAC;AAChC,cAAM,OAAO,IAAI,SAAS,QAAQ,CAAC;AACnC,YAAI,SAAS;AACX,2BAAiB,QAAQ,KAAK,SAAS,KAAK,SAAS,IAAI,OAAO,OAAO,IAAI,SAAS,MAAM,SAAS,KAAK;AAAA,QAC1G,OAAO;AACL,4BAAkB,SAAS,KAAK,SAAS,KAAK,SAAS,IAAI,OAAO,OAAO,IAAI,SAAS,KAAK,SAAS,MAAM;AAAA,QAC5G;AAAA,MACF;AACA,YAAM,MAAM;AAAA,QACV,GAAG;AAAA,QACH;AAAA,QACA;AAAA,MACF,CAAC;AACD,YAAM,iBAAiB,MAAMA,UAAS,cAAc,SAAS,QAAQ;AACrE,UAAI,UAAU,eAAe,SAAS,WAAW,eAAe,QAAQ;AACtE,eAAO;AAAA,UACL,OAAO;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AACA,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AACF;;;ACthCA,SAAS,YAAY;AACnB,SAAO,OAAO,WAAW;AAC3B;AACA,SAAS,YAAY,MAAM;AACzB,MAAI,OAAO,IAAI,GAAG;AAChB,YAAQ,KAAK,YAAY,IAAI,YAAY;AAAA,EAC3C;AAIA,SAAO;AACT;AACA,SAAS,UAAU,MAAM;AACvB,MAAI;AACJ,UAAQ,QAAQ,SAAS,sBAAsB,KAAK,kBAAkB,OAAO,SAAS,oBAAoB,gBAAgB;AAC5H;AACA,SAAS,mBAAmB,MAAM;AAChC,MAAI;AACJ,UAAQ,QAAQ,OAAO,IAAI,IAAI,KAAK,gBAAgB,KAAK,aAAa,OAAO,aAAa,OAAO,SAAS,KAAK;AACjH;AACA,SAAS,OAAO,OAAO;AACrB,MAAI,CAAC,UAAU,GAAG;AAChB,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,QAAQ,iBAAiB,UAAU,KAAK,EAAE;AACpE;AACA,SAAS,UAAU,OAAO;AACxB,MAAI,CAAC,UAAU,GAAG;AAChB,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,WAAW,iBAAiB,UAAU,KAAK,EAAE;AACvE;AACA,SAAS,cAAc,OAAO;AAC5B,MAAI,CAAC,UAAU,GAAG;AAChB,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,eAAe,iBAAiB,UAAU,KAAK,EAAE;AAC3E;AACA,SAAS,aAAa,OAAO;AAC3B,MAAI,CAAC,UAAU,KAAK,OAAO,eAAe,aAAa;AACrD,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,cAAc,iBAAiB,UAAU,KAAK,EAAE;AAC1E;AACA,IAAM,+BAA4C,oBAAI,IAAI,CAAC,UAAU,UAAU,CAAC;AAChF,SAAS,kBAAkB,SAAS;AAClC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAIO,kBAAiB,OAAO;AAC5B,SAAO,kCAAkC,KAAK,WAAW,YAAY,SAAS,KAAK,CAAC,6BAA6B,IAAI,OAAO;AAC9H;AACA,IAAM,gBAA6B,oBAAI,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC;AAChE,SAAS,eAAe,SAAS;AAC/B,SAAO,cAAc,IAAI,YAAY,OAAO,CAAC;AAC/C;AACA,IAAM,oBAAoB,CAAC,iBAAiB,QAAQ;AACpD,SAAS,WAAW,SAAS;AAC3B,SAAO,kBAAkB,KAAK,cAAY;AACxC,QAAI;AACF,aAAO,QAAQ,QAAQ,QAAQ;AAAA,IACjC,SAAS,IAAI;AACX,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AACH;AACA,IAAM,sBAAsB,CAAC,aAAa,aAAa,SAAS,UAAU,aAAa;AACvF,IAAM,mBAAmB,CAAC,aAAa,aAAa,SAAS,UAAU,eAAe,QAAQ;AAC9F,IAAM,gBAAgB,CAAC,SAAS,UAAU,UAAU,SAAS;AAC7D,SAAS,kBAAkB,cAAc;AACvC,QAAM,SAAS,SAAS;AACxB,QAAM,MAAM,UAAU,YAAY,IAAIA,kBAAiB,YAAY,IAAI;AAIvE,SAAO,oBAAoB,KAAK,WAAS,IAAI,KAAK,IAAI,IAAI,KAAK,MAAM,SAAS,KAAK,MAAM,IAAI,gBAAgB,IAAI,kBAAkB,WAAW,UAAU,CAAC,WAAW,IAAI,iBAAiB,IAAI,mBAAmB,SAAS,UAAU,CAAC,WAAW,IAAI,SAAS,IAAI,WAAW,SAAS,UAAU,iBAAiB,KAAK,YAAU,IAAI,cAAc,IAAI,SAAS,KAAK,CAAC,KAAK,cAAc,KAAK,YAAU,IAAI,WAAW,IAAI,SAAS,KAAK,CAAC;AACza;AACA,SAAS,mBAAmB,SAAS;AACnC,MAAI,cAAc,cAAc,OAAO;AACvC,SAAO,cAAc,WAAW,KAAK,CAAC,sBAAsB,WAAW,GAAG;AACxE,QAAI,kBAAkB,WAAW,GAAG;AAClC,aAAO;AAAA,IACT,WAAW,WAAW,WAAW,GAAG;AAClC,aAAO;AAAA,IACT;AACA,kBAAc,cAAc,WAAW;AAAA,EACzC;AACA,SAAO;AACT;AACA,SAAS,WAAW;AAClB,MAAI,OAAO,QAAQ,eAAe,CAAC,IAAI,SAAU,QAAO;AACxD,SAAO,IAAI,SAAS,2BAA2B,MAAM;AACvD;AACA,IAAM,2BAAwC,oBAAI,IAAI,CAAC,QAAQ,QAAQ,WAAW,CAAC;AACnF,SAAS,sBAAsB,MAAM;AACnC,SAAO,yBAAyB,IAAI,YAAY,IAAI,CAAC;AACvD;AACA,SAASA,kBAAiB,SAAS;AACjC,SAAO,UAAU,OAAO,EAAE,iBAAiB,OAAO;AACpD;AACA,SAAS,cAAc,SAAS;AAC9B,MAAI,UAAU,OAAO,GAAG;AACtB,WAAO;AAAA,MACL,YAAY,QAAQ;AAAA,MACpB,WAAW,QAAQ;AAAA,IACrB;AAAA,EACF;AACA,SAAO;AAAA,IACL,YAAY,QAAQ;AAAA,IACpB,WAAW,QAAQ;AAAA,EACrB;AACF;AACA,SAAS,cAAc,MAAM;AAC3B,MAAI,YAAY,IAAI,MAAM,QAAQ;AAChC,WAAO;AAAA,EACT;AACA,QAAM;AAAA;AAAA,IAEN,KAAK;AAAA,IAEL,KAAK;AAAA,IAEL,aAAa,IAAI,KAAK,KAAK;AAAA,IAE3B,mBAAmB,IAAI;AAAA;AACvB,SAAO,aAAa,MAAM,IAAI,OAAO,OAAO;AAC9C;AACA,SAAS,2BAA2B,MAAM;AACxC,QAAM,aAAa,cAAc,IAAI;AACrC,MAAI,sBAAsB,UAAU,GAAG;AACrC,WAAO,KAAK,gBAAgB,KAAK,cAAc,OAAO,KAAK;AAAA,EAC7D;AACA,MAAI,cAAc,UAAU,KAAK,kBAAkB,UAAU,GAAG;AAC9D,WAAO;AAAA,EACT;AACA,SAAO,2BAA2B,UAAU;AAC9C;AACA,SAAS,qBAAqB,MAAM,MAAM,iBAAiB;AACzD,MAAI;AACJ,MAAI,SAAS,QAAQ;AACnB,WAAO,CAAC;AAAA,EACV;AACA,MAAI,oBAAoB,QAAQ;AAC9B,sBAAkB;AAAA,EACpB;AACA,QAAM,qBAAqB,2BAA2B,IAAI;AAC1D,QAAM,SAAS,yBAAyB,uBAAuB,KAAK,kBAAkB,OAAO,SAAS,qBAAqB;AAC3H,QAAM,MAAM,UAAU,kBAAkB;AACxC,MAAI,QAAQ;AACV,UAAM,eAAe,gBAAgB,GAAG;AACxC,WAAO,KAAK,OAAO,KAAK,IAAI,kBAAkB,CAAC,GAAG,kBAAkB,kBAAkB,IAAI,qBAAqB,CAAC,GAAG,gBAAgB,kBAAkB,qBAAqB,YAAY,IAAI,CAAC,CAAC;AAAA,EAC9L;AACA,SAAO,KAAK,OAAO,oBAAoB,qBAAqB,oBAAoB,CAAC,GAAG,eAAe,CAAC;AACtG;AACA,SAAS,gBAAgB,KAAK;AAC5B,SAAO,IAAI,UAAU,OAAO,eAAe,IAAI,MAAM,IAAI,IAAI,eAAe;AAC9E;;;ACzJA,SAAS,iBAAiB,SAAS;AACjC,QAAM,MAAMC,kBAAmB,OAAO;AAGtC,MAAI,QAAQ,WAAW,IAAI,KAAK,KAAK;AACrC,MAAI,SAAS,WAAW,IAAI,MAAM,KAAK;AACvC,QAAM,YAAY,cAAc,OAAO;AACvC,QAAM,cAAc,YAAY,QAAQ,cAAc;AACtD,QAAM,eAAe,YAAY,QAAQ,eAAe;AACxD,QAAM,iBAAiB,MAAM,KAAK,MAAM,eAAe,MAAM,MAAM,MAAM;AACzE,MAAI,gBAAgB;AAClB,YAAQ;AACR,aAAS;AAAA,EACX;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL;AACF;AAEA,SAAS,cAAc,SAAS;AAC9B,SAAO,CAAC,UAAU,OAAO,IAAI,QAAQ,iBAAiB;AACxD;AAEA,SAAS,SAAS,SAAS;AACzB,QAAM,aAAa,cAAc,OAAO;AACxC,MAAI,CAAC,cAAc,UAAU,GAAG;AAC9B,WAAO,aAAa,CAAC;AAAA,EACvB;AACA,QAAM,OAAO,WAAW,sBAAsB;AAC9C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,iBAAiB,UAAU;AAC/B,MAAI,KAAK,IAAI,MAAM,KAAK,KAAK,IAAI,KAAK,SAAS;AAC/C,MAAI,KAAK,IAAI,MAAM,KAAK,MAAM,IAAI,KAAK,UAAU;AAIjD,MAAI,CAAC,KAAK,CAAC,OAAO,SAAS,CAAC,GAAG;AAC7B,QAAI;AAAA,EACN;AACA,MAAI,CAAC,KAAK,CAAC,OAAO,SAAS,CAAC,GAAG;AAC7B,QAAI;AAAA,EACN;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,IAAM,YAAyB,aAAa,CAAC;AAC7C,SAAS,iBAAiB,SAAS;AACjC,QAAM,MAAM,UAAU,OAAO;AAC7B,MAAI,CAAC,SAAS,KAAK,CAAC,IAAI,gBAAgB;AACtC,WAAO;AAAA,EACT;AACA,SAAO;AAAA,IACL,GAAG,IAAI,eAAe;AAAA,IACtB,GAAG,IAAI,eAAe;AAAA,EACxB;AACF;AACA,SAAS,uBAAuB,SAAS,SAAS,sBAAsB;AACtE,MAAI,YAAY,QAAQ;AACtB,cAAU;AAAA,EACZ;AACA,MAAI,CAAC,wBAAwB,WAAW,yBAAyB,UAAU,OAAO,GAAG;AACnF,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEA,SAAS,sBAAsB,SAAS,cAAc,iBAAiB,cAAc;AACnF,MAAI,iBAAiB,QAAQ;AAC3B,mBAAe;AAAA,EACjB;AACA,MAAI,oBAAoB,QAAQ;AAC9B,sBAAkB;AAAA,EACpB;AACA,QAAM,aAAa,QAAQ,sBAAsB;AACjD,QAAM,aAAa,cAAc,OAAO;AACxC,MAAI,QAAQ,aAAa,CAAC;AAC1B,MAAI,cAAc;AAChB,QAAI,cAAc;AAChB,UAAI,UAAU,YAAY,GAAG;AAC3B,gBAAQ,SAAS,YAAY;AAAA,MAC/B;AAAA,IACF,OAAO;AACL,cAAQ,SAAS,OAAO;AAAA,IAC1B;AAAA,EACF;AACA,QAAM,gBAAgB,uBAAuB,YAAY,iBAAiB,YAAY,IAAI,iBAAiB,UAAU,IAAI,aAAa,CAAC;AACvI,MAAI,KAAK,WAAW,OAAO,cAAc,KAAK,MAAM;AACpD,MAAI,KAAK,WAAW,MAAM,cAAc,KAAK,MAAM;AACnD,MAAI,QAAQ,WAAW,QAAQ,MAAM;AACrC,MAAI,SAAS,WAAW,SAAS,MAAM;AACvC,MAAI,YAAY;AACd,UAAM,MAAM,UAAU,UAAU;AAChC,UAAM,YAAY,gBAAgB,UAAU,YAAY,IAAI,UAAU,YAAY,IAAI;AACtF,QAAI,aAAa;AACjB,QAAI,gBAAgB,gBAAgB,UAAU;AAC9C,WAAO,iBAAiB,gBAAgB,cAAc,YAAY;AAChE,YAAM,cAAc,SAAS,aAAa;AAC1C,YAAM,aAAa,cAAc,sBAAsB;AACvD,YAAM,MAAMA,kBAAmB,aAAa;AAC5C,YAAM,OAAO,WAAW,QAAQ,cAAc,aAAa,WAAW,IAAI,WAAW,KAAK,YAAY;AACtG,YAAM,MAAM,WAAW,OAAO,cAAc,YAAY,WAAW,IAAI,UAAU,KAAK,YAAY;AAClG,WAAK,YAAY;AACjB,WAAK,YAAY;AACjB,eAAS,YAAY;AACrB,gBAAU,YAAY;AACtB,WAAK;AACL,WAAK;AACL,mBAAa,UAAU,aAAa;AACpC,sBAAgB,gBAAgB,UAAU;AAAA,IAC5C;AAAA,EACF;AACA,SAAO,iBAAiB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAIA,SAAS,oBAAoB,SAAS,MAAM;AAC1C,QAAM,aAAa,cAAc,OAAO,EAAE;AAC1C,MAAI,CAAC,MAAM;AACT,WAAO,sBAAsB,mBAAmB,OAAO,CAAC,EAAE,OAAO;AAAA,EACnE;AACA,SAAO,KAAK,OAAO;AACrB;AAEA,SAAS,cAAc,iBAAiB,QAAQ;AAC9C,QAAM,WAAW,gBAAgB,sBAAsB;AACvD,QAAM,IAAI,SAAS,OAAO,OAAO,aAAa,oBAAoB,iBAAiB,QAAQ;AAC3F,QAAM,IAAI,SAAS,MAAM,OAAO;AAChC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,sDAAsD,MAAM;AACnE,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,UAAU,aAAa;AAC7B,QAAM,kBAAkB,mBAAmB,YAAY;AACvD,QAAM,WAAW,WAAW,WAAW,SAAS,QAAQ,IAAI;AAC5D,MAAI,iBAAiB,mBAAmB,YAAY,SAAS;AAC3D,WAAO;AAAA,EACT;AACA,MAAI,SAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACA,MAAI,QAAQ,aAAa,CAAC;AAC1B,QAAM,UAAU,aAAa,CAAC;AAC9B,QAAM,0BAA0B,cAAc,YAAY;AAC1D,MAAI,2BAA2B,CAAC,2BAA2B,CAAC,SAAS;AACnE,QAAI,YAAY,YAAY,MAAM,UAAU,kBAAkB,eAAe,GAAG;AAC9E,eAAS,cAAc,YAAY;AAAA,IACrC;AACA,QAAI,cAAc,YAAY,GAAG;AAC/B,YAAM,aAAa,sBAAsB,YAAY;AACrD,cAAQ,SAAS,YAAY;AAC7B,cAAQ,IAAI,WAAW,IAAI,aAAa;AACxC,cAAQ,IAAI,WAAW,IAAI,aAAa;AAAA,IAC1C;AAAA,EACF;AACA,QAAM,aAAa,mBAAmB,CAAC,2BAA2B,CAAC,UAAU,cAAc,iBAAiB,MAAM,IAAI,aAAa,CAAC;AACpI,SAAO;AAAA,IACL,OAAO,KAAK,QAAQ,MAAM;AAAA,IAC1B,QAAQ,KAAK,SAAS,MAAM;AAAA,IAC5B,GAAG,KAAK,IAAI,MAAM,IAAI,OAAO,aAAa,MAAM,IAAI,QAAQ,IAAI,WAAW;AAAA,IAC3E,GAAG,KAAK,IAAI,MAAM,IAAI,OAAO,YAAY,MAAM,IAAI,QAAQ,IAAI,WAAW;AAAA,EAC5E;AACF;AAEA,SAAS,eAAe,SAAS;AAC/B,SAAO,MAAM,KAAK,QAAQ,eAAe,CAAC;AAC5C;AAIA,SAAS,gBAAgB,SAAS;AAChC,QAAM,OAAO,mBAAmB,OAAO;AACvC,QAAM,SAAS,cAAc,OAAO;AACpC,QAAM,OAAO,QAAQ,cAAc;AACnC,QAAM,QAAQ,IAAI,KAAK,aAAa,KAAK,aAAa,KAAK,aAAa,KAAK,WAAW;AACxF,QAAM,SAAS,IAAI,KAAK,cAAc,KAAK,cAAc,KAAK,cAAc,KAAK,YAAY;AAC7F,MAAI,IAAI,CAAC,OAAO,aAAa,oBAAoB,OAAO;AACxD,QAAM,IAAI,CAAC,OAAO;AAClB,MAAIA,kBAAmB,IAAI,EAAE,cAAc,OAAO;AAChD,SAAK,IAAI,KAAK,aAAa,KAAK,WAAW,IAAI;AAAA,EACjD;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAKA,IAAM,gBAAgB;AACtB,SAAS,gBAAgB,SAAS,UAAU;AAC1C,QAAM,MAAM,UAAU,OAAO;AAC7B,QAAM,OAAO,mBAAmB,OAAO;AACvC,QAAM,iBAAiB,IAAI;AAC3B,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAClB,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,gBAAgB;AAClB,YAAQ,eAAe;AACvB,aAAS,eAAe;AACxB,UAAM,sBAAsB,SAAS;AACrC,QAAI,CAAC,uBAAuB,uBAAuB,aAAa,SAAS;AACvE,UAAI,eAAe;AACnB,UAAI,eAAe;AAAA,IACrB;AAAA,EACF;AACA,QAAM,mBAAmB,oBAAoB,IAAI;AAIjD,MAAI,oBAAoB,GAAG;AACzB,UAAM,MAAM,KAAK;AACjB,UAAM,OAAO,IAAI;AACjB,UAAM,aAAa,iBAAiB,IAAI;AACxC,UAAM,mBAAmB,IAAI,eAAe,eAAe,WAAW,WAAW,UAAU,IAAI,WAAW,WAAW,WAAW,KAAK,IAAI;AACzI,UAAM,+BAA+B,KAAK,IAAI,KAAK,cAAc,KAAK,cAAc,gBAAgB;AACpG,QAAI,gCAAgC,eAAe;AACjD,eAAS;AAAA,IACX;AAAA,EACF,WAAW,oBAAoB,eAAe;AAG5C,aAAS;AAAA,EACX;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEA,IAAM,kBAA+B,oBAAI,IAAI,CAAC,YAAY,OAAO,CAAC;AAElE,SAAS,2BAA2B,SAAS,UAAU;AACrD,QAAM,aAAa,sBAAsB,SAAS,MAAM,aAAa,OAAO;AAC5E,QAAM,MAAM,WAAW,MAAM,QAAQ;AACrC,QAAM,OAAO,WAAW,OAAO,QAAQ;AACvC,QAAM,QAAQ,cAAc,OAAO,IAAI,SAAS,OAAO,IAAI,aAAa,CAAC;AACzE,QAAM,QAAQ,QAAQ,cAAc,MAAM;AAC1C,QAAM,SAAS,QAAQ,eAAe,MAAM;AAC5C,QAAM,IAAI,OAAO,MAAM;AACvB,QAAM,IAAI,MAAM,MAAM;AACtB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACA,SAAS,kCAAkC,SAAS,kBAAkB,UAAU;AAC9E,MAAI;AACJ,MAAI,qBAAqB,YAAY;AACnC,WAAO,gBAAgB,SAAS,QAAQ;AAAA,EAC1C,WAAW,qBAAqB,YAAY;AAC1C,WAAO,gBAAgB,mBAAmB,OAAO,CAAC;AAAA,EACpD,WAAW,UAAU,gBAAgB,GAAG;AACtC,WAAO,2BAA2B,kBAAkB,QAAQ;AAAA,EAC9D,OAAO;AACL,UAAM,gBAAgB,iBAAiB,OAAO;AAC9C,WAAO;AAAA,MACL,GAAG,iBAAiB,IAAI,cAAc;AAAA,MACtC,GAAG,iBAAiB,IAAI,cAAc;AAAA,MACtC,OAAO,iBAAiB;AAAA,MACxB,QAAQ,iBAAiB;AAAA,IAC3B;AAAA,EACF;AACA,SAAO,iBAAiB,IAAI;AAC9B;AACA,SAAS,yBAAyB,SAAS,UAAU;AACnD,QAAM,aAAa,cAAc,OAAO;AACxC,MAAI,eAAe,YAAY,CAAC,UAAU,UAAU,KAAK,sBAAsB,UAAU,GAAG;AAC1F,WAAO;AAAA,EACT;AACA,SAAOA,kBAAmB,UAAU,EAAE,aAAa,WAAW,yBAAyB,YAAY,QAAQ;AAC7G;AAKA,SAAS,4BAA4B,SAAS,OAAO;AACnD,QAAM,eAAe,MAAM,IAAI,OAAO;AACtC,MAAI,cAAc;AAChB,WAAO;AAAA,EACT;AACA,MAAI,SAAS,qBAAqB,SAAS,CAAC,GAAG,KAAK,EAAE,OAAO,QAAM,UAAU,EAAE,KAAK,YAAY,EAAE,MAAM,MAAM;AAC9G,MAAI,sCAAsC;AAC1C,QAAM,iBAAiBA,kBAAmB,OAAO,EAAE,aAAa;AAChE,MAAI,cAAc,iBAAiB,cAAc,OAAO,IAAI;AAG5D,SAAO,UAAU,WAAW,KAAK,CAAC,sBAAsB,WAAW,GAAG;AACpE,UAAM,gBAAgBA,kBAAmB,WAAW;AACpD,UAAM,0BAA0B,kBAAkB,WAAW;AAC7D,QAAI,CAAC,2BAA2B,cAAc,aAAa,SAAS;AAClE,4CAAsC;AAAA,IACxC;AACA,UAAM,wBAAwB,iBAAiB,CAAC,2BAA2B,CAAC,sCAAsC,CAAC,2BAA2B,cAAc,aAAa,YAAY,CAAC,CAAC,uCAAuC,gBAAgB,IAAI,oCAAoC,QAAQ,KAAK,kBAAkB,WAAW,KAAK,CAAC,2BAA2B,yBAAyB,SAAS,WAAW;AAC9Y,QAAI,uBAAuB;AAEzB,eAAS,OAAO,OAAO,cAAY,aAAa,WAAW;AAAA,IAC7D,OAAO;AAEL,4CAAsC;AAAA,IACxC;AACA,kBAAc,cAAc,WAAW;AAAA,EACzC;AACA,QAAM,IAAI,SAAS,MAAM;AACzB,SAAO;AACT;AAIA,SAAS,gBAAgB,MAAM;AAC7B,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,2BAA2B,aAAa,sBAAsB,WAAW,OAAO,IAAI,CAAC,IAAI,4BAA4B,SAAS,KAAK,EAAE,IAAI,CAAC,EAAE,OAAO,QAAQ;AACjK,QAAM,oBAAoB,CAAC,GAAG,0BAA0B,YAAY;AACpE,QAAM,wBAAwB,kBAAkB,CAAC;AACjD,QAAM,eAAe,kBAAkB,OAAO,CAAC,SAAS,qBAAqB;AAC3E,UAAM,OAAO,kCAAkC,SAAS,kBAAkB,QAAQ;AAClF,YAAQ,MAAM,IAAI,KAAK,KAAK,QAAQ,GAAG;AACvC,YAAQ,QAAQ,IAAI,KAAK,OAAO,QAAQ,KAAK;AAC7C,YAAQ,SAAS,IAAI,KAAK,QAAQ,QAAQ,MAAM;AAChD,YAAQ,OAAO,IAAI,KAAK,MAAM,QAAQ,IAAI;AAC1C,WAAO;AAAA,EACT,GAAG,kCAAkC,SAAS,uBAAuB,QAAQ,CAAC;AAC9E,SAAO;AAAA,IACL,OAAO,aAAa,QAAQ,aAAa;AAAA,IACzC,QAAQ,aAAa,SAAS,aAAa;AAAA,IAC3C,GAAG,aAAa;AAAA,IAChB,GAAG,aAAa;AAAA,EAClB;AACF;AAEA,SAAS,cAAc,SAAS;AAC9B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,iBAAiB,OAAO;AAC5B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,8BAA8B,SAAS,cAAc,UAAU;AACtE,QAAM,0BAA0B,cAAc,YAAY;AAC1D,QAAM,kBAAkB,mBAAmB,YAAY;AACvD,QAAM,UAAU,aAAa;AAC7B,QAAM,OAAO,sBAAsB,SAAS,MAAM,SAAS,YAAY;AACvE,MAAI,SAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACA,QAAM,UAAU,aAAa,CAAC;AAI9B,WAAS,4BAA4B;AACnC,YAAQ,IAAI,oBAAoB,eAAe;AAAA,EACjD;AACA,MAAI,2BAA2B,CAAC,2BAA2B,CAAC,SAAS;AACnE,QAAI,YAAY,YAAY,MAAM,UAAU,kBAAkB,eAAe,GAAG;AAC9E,eAAS,cAAc,YAAY;AAAA,IACrC;AACA,QAAI,yBAAyB;AAC3B,YAAM,aAAa,sBAAsB,cAAc,MAAM,SAAS,YAAY;AAClF,cAAQ,IAAI,WAAW,IAAI,aAAa;AACxC,cAAQ,IAAI,WAAW,IAAI,aAAa;AAAA,IAC1C,WAAW,iBAAiB;AAC1B,gCAA0B;AAAA,IAC5B;AAAA,EACF;AACA,MAAI,WAAW,CAAC,2BAA2B,iBAAiB;AAC1D,8BAA0B;AAAA,EAC5B;AACA,QAAM,aAAa,mBAAmB,CAAC,2BAA2B,CAAC,UAAU,cAAc,iBAAiB,MAAM,IAAI,aAAa,CAAC;AACpI,QAAM,IAAI,KAAK,OAAO,OAAO,aAAa,QAAQ,IAAI,WAAW;AACjE,QAAM,IAAI,KAAK,MAAM,OAAO,YAAY,QAAQ,IAAI,WAAW;AAC/D,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,OAAO,KAAK;AAAA,IACZ,QAAQ,KAAK;AAAA,EACf;AACF;AAEA,SAAS,mBAAmB,SAAS;AACnC,SAAOA,kBAAmB,OAAO,EAAE,aAAa;AAClD;AAEA,SAAS,oBAAoB,SAAS,UAAU;AAC9C,MAAI,CAAC,cAAc,OAAO,KAAKA,kBAAmB,OAAO,EAAE,aAAa,SAAS;AAC/E,WAAO;AAAA,EACT;AACA,MAAI,UAAU;AACZ,WAAO,SAAS,OAAO;AAAA,EACzB;AACA,MAAI,kBAAkB,QAAQ;AAM9B,MAAI,mBAAmB,OAAO,MAAM,iBAAiB;AACnD,sBAAkB,gBAAgB,cAAc;AAAA,EAClD;AACA,SAAO;AACT;AAIA,SAAS,gBAAgB,SAAS,UAAU;AAC1C,QAAM,MAAM,UAAU,OAAO;AAC7B,MAAI,WAAW,OAAO,GAAG;AACvB,WAAO;AAAA,EACT;AACA,MAAI,CAAC,cAAc,OAAO,GAAG;AAC3B,QAAI,kBAAkB,cAAc,OAAO;AAC3C,WAAO,mBAAmB,CAAC,sBAAsB,eAAe,GAAG;AACjE,UAAI,UAAU,eAAe,KAAK,CAAC,mBAAmB,eAAe,GAAG;AACtE,eAAO;AAAA,MACT;AACA,wBAAkB,cAAc,eAAe;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AACA,MAAI,eAAe,oBAAoB,SAAS,QAAQ;AACxD,SAAO,gBAAgB,eAAe,YAAY,KAAK,mBAAmB,YAAY,GAAG;AACvF,mBAAe,oBAAoB,cAAc,QAAQ;AAAA,EAC3D;AACA,MAAI,gBAAgB,sBAAsB,YAAY,KAAK,mBAAmB,YAAY,KAAK,CAAC,kBAAkB,YAAY,GAAG;AAC/H,WAAO;AAAA,EACT;AACA,SAAO,gBAAgB,mBAAmB,OAAO,KAAK;AACxD;AAEA,IAAM,kBAAkB,eAAgB,MAAM;AAC5C,QAAM,oBAAoB,KAAK,mBAAmB;AAClD,QAAM,kBAAkB,KAAK;AAC7B,QAAM,qBAAqB,MAAM,gBAAgB,KAAK,QAAQ;AAC9D,SAAO;AAAA,IACL,WAAW,8BAA8B,KAAK,WAAW,MAAM,kBAAkB,KAAK,QAAQ,GAAG,KAAK,QAAQ;AAAA,IAC9G,UAAU;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO,mBAAmB;AAAA,MAC1B,QAAQ,mBAAmB;AAAA,IAC7B;AAAA,EACF;AACF;AAEA,SAAS,MAAM,SAAS;AACtB,SAAOA,kBAAmB,OAAO,EAAE,cAAc;AACnD;AAEA,IAAM,WAAW;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,SAAS,cAAc,GAAG,GAAG;AAC3B,SAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE;AAC7E;AAGA,SAAS,YAAY,SAAS,QAAQ;AACpC,MAAI,KAAK;AACT,MAAI;AACJ,QAAM,OAAO,mBAAmB,OAAO;AACvC,WAAS,UAAU;AACjB,QAAI;AACJ,iBAAa,SAAS;AACtB,KAAC,MAAM,OAAO,QAAQ,IAAI,WAAW;AACrC,SAAK;AAAA,EACP;AACA,WAAS,QAAQ,MAAM,WAAW;AAChC,QAAI,SAAS,QAAQ;AACnB,aAAO;AAAA,IACT;AACA,QAAI,cAAc,QAAQ;AACxB,kBAAY;AAAA,IACd;AACA,YAAQ;AACR,UAAM,2BAA2B,QAAQ,sBAAsB;AAC/D,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AACA,QAAI,CAAC,SAAS,CAAC,QAAQ;AACrB;AAAA,IACF;AACA,UAAM,WAAW,MAAM,GAAG;AAC1B,UAAM,aAAa,MAAM,KAAK,eAAe,OAAO,MAAM;AAC1D,UAAM,cAAc,MAAM,KAAK,gBAAgB,MAAM,OAAO;AAC5D,UAAM,YAAY,MAAM,IAAI;AAC5B,UAAM,aAAa,CAAC,WAAW,QAAQ,CAAC,aAAa,QAAQ,CAAC,cAAc,QAAQ,CAAC,YAAY;AACjG,UAAM,UAAU;AAAA,MACd;AAAA,MACA,WAAW,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC,KAAK;AAAA,IAC1C;AACA,QAAI,gBAAgB;AACpB,aAAS,cAAc,SAAS;AAC9B,YAAM,QAAQ,QAAQ,CAAC,EAAE;AACzB,UAAI,UAAU,WAAW;AACvB,YAAI,CAAC,eAAe;AAClB,iBAAO,QAAQ;AAAA,QACjB;AACA,YAAI,CAAC,OAAO;AAGV,sBAAY,WAAW,MAAM;AAC3B,oBAAQ,OAAO,IAAI;AAAA,UACrB,GAAG,GAAI;AAAA,QACT,OAAO;AACL,kBAAQ,OAAO,KAAK;AAAA,QACtB;AAAA,MACF;AACA,UAAI,UAAU,KAAK,CAAC,cAAc,0BAA0B,QAAQ,sBAAsB,CAAC,GAAG;AAQ5F,gBAAQ;AAAA,MACV;AACA,sBAAgB;AAAA,IAClB;AAIA,QAAI;AACF,WAAK,IAAI,qBAAqB,eAAe;AAAA,QAC3C,GAAG;AAAA;AAAA,QAEH,MAAM,KAAK;AAAA,MACb,CAAC;AAAA,IACH,SAAS,IAAI;AACX,WAAK,IAAI,qBAAqB,eAAe,OAAO;AAAA,IACtD;AACA,OAAG,QAAQ,OAAO;AAAA,EACpB;AACA,UAAQ,IAAI;AACZ,SAAO;AACT;AAUA,SAAS,WAAW,WAAW,UAAU,QAAQ,SAAS;AACxD,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM;AAAA,IACJ,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,gBAAgB,OAAO,mBAAmB;AAAA,IAC1C,cAAc,OAAO,yBAAyB;AAAA,IAC9C,iBAAiB;AAAA,EACnB,IAAI;AACJ,QAAM,cAAc,cAAc,SAAS;AAC3C,QAAM,YAAY,kBAAkB,iBAAiB,CAAC,GAAI,cAAc,qBAAqB,WAAW,IAAI,CAAC,GAAI,GAAG,qBAAqB,QAAQ,CAAC,IAAI,CAAC;AACvJ,YAAU,QAAQ,cAAY;AAC5B,sBAAkB,SAAS,iBAAiB,UAAU,QAAQ;AAAA,MAC5D,SAAS;AAAA,IACX,CAAC;AACD,sBAAkB,SAAS,iBAAiB,UAAU,MAAM;AAAA,EAC9D,CAAC;AACD,QAAM,YAAY,eAAe,cAAc,YAAY,aAAa,MAAM,IAAI;AAClF,MAAI,iBAAiB;AACrB,MAAI,iBAAiB;AACrB,MAAI,eAAe;AACjB,qBAAiB,IAAI,eAAe,UAAQ;AAC1C,UAAI,CAAC,UAAU,IAAI;AACnB,UAAI,cAAc,WAAW,WAAW,eAAe,gBAAgB;AAGrE,uBAAe,UAAU,QAAQ;AACjC,6BAAqB,cAAc;AACnC,yBAAiB,sBAAsB,MAAM;AAC3C,cAAI;AACJ,WAAC,kBAAkB,mBAAmB,QAAQ,gBAAgB,QAAQ,QAAQ;AAAA,QAChF,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT,CAAC;AACD,QAAI,eAAe,CAAC,gBAAgB;AAClC,qBAAe,QAAQ,WAAW;AAAA,IACpC;AACA,mBAAe,QAAQ,QAAQ;AAAA,EACjC;AACA,MAAI;AACJ,MAAI,cAAc,iBAAiB,sBAAsB,SAAS,IAAI;AACtE,MAAI,gBAAgB;AAClB,cAAU;AAAA,EACZ;AACA,WAAS,YAAY;AACnB,UAAM,cAAc,sBAAsB,SAAS;AACnD,QAAI,eAAe,CAAC,cAAc,aAAa,WAAW,GAAG;AAC3D,aAAO;AAAA,IACT;AACA,kBAAc;AACd,cAAU,sBAAsB,SAAS;AAAA,EAC3C;AACA,SAAO;AACP,SAAO,MAAM;AACX,QAAI;AACJ,cAAU,QAAQ,cAAY;AAC5B,wBAAkB,SAAS,oBAAoB,UAAU,MAAM;AAC/D,wBAAkB,SAAS,oBAAoB,UAAU,MAAM;AAAA,IACjE,CAAC;AACD,iBAAa,QAAQ,UAAU;AAC/B,KAAC,mBAAmB,mBAAmB,QAAQ,iBAAiB,WAAW;AAC3E,qBAAiB;AACjB,QAAI,gBAAgB;AAClB,2BAAqB,OAAO;AAAA,IAC9B;AAAA,EACF;AACF;AAmBA,IAAMC,UAAS;AAef,IAAMC,SAAQ;AAQd,IAAMC,QAAO;AAQb,IAAMC,QAAO;AAOb,IAAMC,QAAO;AAOb,IAAMC,SAAQ;AAYd,IAAMC,cAAa;AAMnB,IAAMC,mBAAkB,CAAC,WAAW,UAAU,YAAY;AAIxD,QAAM,QAAQ,oBAAI,IAAI;AACtB,QAAM,gBAAgB;AAAA,IACpB;AAAA,IACA,GAAG;AAAA,EACL;AACA,QAAM,oBAAoB;AAAA,IACxB,GAAG,cAAc;AAAA,IACjB,IAAI;AAAA,EACN;AACA,SAAO,gBAAkB,WAAW,UAAU;AAAA,IAC5C,GAAG;AAAA,IACH,UAAU;AAAA,EACZ,CAAC;AACH;;;ACjwBA,SAAS,0BAA0B,QAAQ;AACzC,SAAO,UAAU,QAAQ,OAAO,WAAW,YAAY,SAAS;AAClE;AACA,SAASC,eAAc,QAAQ;AAC7B,MAAI,0BAA0B,MAAM,GAAG;AACrC,UAAM,UAAU,OAAO;AACvB,WAAO,OAAO,OAAO,KAAK,YAAY,OAAO,MAAM,aAAa,OAAO;AAAA,EACzE;AACA,SAAO;AACT;AAEA,SAASC,SAAQ,QAAQ;AACvB,SAAO,OAAO,WAAW,aAAa,OAAO,IAAI,MAAM,MAAM;AAC/D;AAOA,SAASC,OAAM,SAAS;AACtB,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,GAAG,MAAM;AACP,YAAM,UAAUF,eAAcC,SAAQ,QAAQ,OAAO,CAAC;AACtD,UAAI,WAAW,MAAM;AACnB,eAAO,CAAC;AAAA,MACV;AACA,aAAOC,OAAQ;AAAA,QACb;AAAA,QACA,SAAS,QAAQ;AAAA,MACnB,CAAC,EAAE,GAAG,IAAI;AAAA,IACZ;AAAA,EACF;AACF;AAEA,SAAS,OAAO,SAAS;AACvB,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO;AAAA,EACT;AACA,QAAM,MAAM,QAAQ,cAAc,eAAe;AACjD,SAAO,IAAI,oBAAoB;AACjC;AAEA,SAAS,WAAW,SAAS,OAAO;AAClC,QAAM,MAAM,OAAO,OAAO;AAC1B,SAAO,KAAK,MAAM,QAAQ,GAAG,IAAI;AACnC;AASA,SAAS,YAAY,WAAW,UAAU,SAAS;AACjD,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM,6BAA6B,QAAQ;AAC3C,QAAM,aAAa,SAAS,MAAM;AAChC,QAAI;AACJ,YAAQ,WAAWD,SAAQ,QAAQ,IAAI,MAAM,OAAO,WAAW;AAAA,EACjE,CAAC;AACD,QAAM,mBAAmB,SAAS,MAAMA,SAAQ,QAAQ,UAAU,CAAC;AACnE,QAAM,kBAAkB,SAAS,MAAM;AACrC,QAAI;AACJ,YAAQ,YAAYA,SAAQ,QAAQ,SAAS,MAAM,OAAO,YAAY;AAAA,EACxE,CAAC;AACD,QAAM,iBAAiB,SAAS,MAAM;AACpC,QAAI;AACJ,YAAQ,YAAYA,SAAQ,QAAQ,QAAQ,MAAM,OAAO,YAAY;AAAA,EACvE,CAAC;AACD,QAAM,kBAAkB,SAAS,MAAM;AACrC,QAAI;AACJ,YAAQ,YAAYA,SAAQ,QAAQ,SAAS,MAAM,OAAO,YAAY;AAAA,EACxE,CAAC;AACD,QAAM,mBAAmB,SAAS,MAAMD,eAAc,UAAU,KAAK,CAAC;AACtE,QAAM,kBAAkB,SAAS,MAAMA,eAAc,SAAS,KAAK,CAAC;AACpE,QAAM,IAAI,IAAI,CAAC;AACf,QAAM,IAAI,IAAI,CAAC;AACf,QAAM,WAAW,IAAI,eAAe,KAAK;AACzC,QAAM,YAAY,IAAI,gBAAgB,KAAK;AAC3C,QAAM,iBAAiB,WAAW,CAAC,CAAC;AACpC,QAAM,eAAe,IAAI,KAAK;AAC9B,QAAM,iBAAiB,SAAS,MAAM;AACpC,UAAM,gBAAgB;AAAA,MACpB,UAAU,SAAS;AAAA,MACnB,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AACA,QAAI,CAAC,gBAAgB,OAAO;AAC1B,aAAO;AAAA,IACT;AACA,UAAM,OAAO,WAAW,gBAAgB,OAAO,EAAE,KAAK;AACtD,UAAM,OAAO,WAAW,gBAAgB,OAAO,EAAE,KAAK;AACtD,QAAI,gBAAgB,OAAO;AACzB,aAAO;AAAA,QACL,GAAG;AAAA,QACH,WAAW,eAAe,OAAO,SAAS,OAAO;AAAA,QACjD,GAAI,OAAO,gBAAgB,KAAK,KAAK,OAAO;AAAA,UAC1C,YAAY;AAAA,QACd;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,MACL,UAAU,SAAS;AAAA,MACnB,MAAM,OAAO;AAAA,MACb,KAAK,OAAO;AAAA,IACd;AAAA,EACF,CAAC;AACD,MAAI;AACJ,WAAS,SAAS;AAChB,QAAI,iBAAiB,SAAS,QAAQ,gBAAgB,SAAS,MAAM;AACnE;AAAA,IACF;AACA,UAAM,OAAO,WAAW;AACxB,IAAAG,iBAAgB,iBAAiB,OAAO,gBAAgB,OAAO;AAAA,MAC7D,YAAY,iBAAiB;AAAA,MAC7B,WAAW,gBAAgB;AAAA,MAC3B,UAAU,eAAe;AAAA,IAC3B,CAAC,EAAE,KAAK,cAAY;AAClB,QAAE,QAAQ,SAAS;AACnB,QAAE,QAAQ,SAAS;AACnB,eAAS,QAAQ,SAAS;AAC1B,gBAAU,QAAQ,SAAS;AAC3B,qBAAe,QAAQ,SAAS;AAOhC,mBAAa,QAAQ,SAAS;AAAA,IAChC,CAAC;AAAA,EACH;AACA,WAAS,UAAU;AACjB,QAAI,OAAO,gCAAgC,YAAY;AACrD,kCAA4B;AAC5B,oCAA8B;AAAA,IAChC;AAAA,EACF;AACA,WAAS,SAAS;AAChB,YAAQ;AACR,QAAI,+BAA+B,QAAW;AAC5C,aAAO;AACP;AAAA,IACF;AACA,QAAI,iBAAiB,SAAS,QAAQ,gBAAgB,SAAS,MAAM;AACnE,oCAA8B,2BAA2B,iBAAiB,OAAO,gBAAgB,OAAO,MAAM;AAC9G;AAAA,IACF;AAAA,EACF;AACA,WAAS,QAAQ;AACf,QAAI,CAAC,WAAW,OAAO;AACrB,mBAAa,QAAQ;AAAA,IACvB;AAAA,EACF;AACA,QAAM,CAAC,kBAAkB,iBAAiB,gBAAgB,UAAU,GAAG,QAAQ;AAAA,IAC7E,OAAO;AAAA,EACT,CAAC;AACD,QAAM,CAAC,kBAAkB,eAAe,GAAG,QAAQ;AAAA,IACjD,OAAO;AAAA,EACT,CAAC;AACD,QAAM,YAAY,OAAO;AAAA,IACvB,OAAO;AAAA,EACT,CAAC;AACD,MAAI,gBAAgB,GAAG;AACrB,mBAAe,OAAO;AAAA,EACxB;AACA,SAAO;AAAA,IACL,GAAG,gBAAgB,CAAC;AAAA,IACpB,GAAG,gBAAgB,CAAC;AAAA,IACpB,UAAU,gBAAgB,QAAQ;AAAA,IAClC,WAAW,gBAAgB,SAAS;AAAA,IACpC,gBAAgB,gBAAgB,cAAc;AAAA,IAC9C,cAAc,gBAAgB,YAAY;AAAA,IAC1C;AAAA,IACA;AAAA,EACF;AACF;;;AC7KA,IAAa,iCAAiC;EAC5C,MAAM;EACN,YAAY;EACZ,UAAU;EACV,OAAO;EACP,aAAa;EACb,WAAW;EACX,cAAc;EACd,iBAAiB;EACjB,mBAAmB,MAAM,CAAE;EAC3B,kBAAkB;EAClB,QAAQ;EACR,kBAAkB;EAClB,kBAAkB;EAClB,wBAAwB;EACxB,oBAAoB;AACtB;AAkJA,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BxC,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AAId,UAAM,cAAc,wBAAA;AACpB,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AAEvD,UAAM,cAAc,IAAA;AAEpB,UAAM,UAAQ,IAAA;AACd,UAAM,EAAE,OAAO,YAAY,QAAQ,YAAA,IAAgB,QAAQ,OAAA;AAE3D,UAAM,mBAAmB,SACvB,MACGA,OAAM,QACFA,OAAM,UAAU,WAAW,IAAIA,OAAM,KAAA,KAAU,GAAA;AAGxD,UAAM,mBAAmB,SAAS,MAAM;AACtC,aAAA,OAAcA,OAAM,qBAAqB,WACrCA,OAAM,mBACN;QAAE,KAAK;QAAG,OAAO;QAAG,QAAQ;QAAG,MAAM;QAAG,GAAGA,OAAM;MAAiB;IACvE,CAAA;AAED,UAAM,WAAW,SAAS,MAAM;AAC9B,aAAO,MAAM,QAAQA,OAAM,iBAAA,IACvBA,OAAM,oBACN,CAACA,OAAM,iBAAiB;IAC7B,CAAA;AAED,UAAM,wBAAwB,SAAS,MAAM;AAC3C,aAAO;QACL,SAAS,iBAAiB;QAC1B,UAAU,SAAS,MAAM,OAAO,SAAA;QAEhC,aAAa,SAAS,MAAM,SAAS;MACvC;IACD,CAAA;AAED,UAAM,cAAc,SAAS,MAAM;AACjC,aAAO;QACL,UAAUA,OAAM;QAChB,WAAWA,OAAM;MACnB;IACD,CAAA;AAED,UAAM,qBAAqB,cAAc,MAAM;AAC7C,aAAO;QACLC,QAAO;UACL,UAAUD,OAAM,aAAa,YAAY;UACzC,eAAeA,OAAM;QACtB,CAAA;QACDA,OAAM,sBACHA,OAAM,mBACNE,MAAK;UACN,GAAG,sBAAsB;UACzB,GAAG,YAAY;QAChB,CAAA;QACDF,OAAM,mBACHG,OAAM;UACP,UAAU;UACV,WAAA,CAAA,CAAaH,OAAM;UACnB,SAASA,OAAM,WAAW,YAAYI,YAAA,IAAY;UAClD,GAAG,sBAAsB;QAC1B,CAAA;SACAJ,OAAM,sBACJA,OAAM,mBACNE,MAAK;UACN,GAAG,sBAAsB;UACzB,GAAG,YAAY;QAChB,CAAA;QACDG,MAAK;UACH,GAAG,sBAAsB;UACzB,OAAO,CAAC,EAAE,UAAU,OAAO,gBAAgB,gBAAA,MAAsB;AAC/D,kBAAM,EAAE,OAAO,aAAa,QAAQ,aAAA,IAAiB,MAAM;AAC3D,kBAAM,eAAe,SAAS,SAAS;AACvC,yBAAa,YACX,iCACA,GAAG,cAAA,IAAkB;AAEvB,yBAAa,YACX,kCACA,GAAG,eAAA,IAAmB;AAExB,yBAAa,YACX,8BACA,GAAG,WAAA,IAAe;AAEpB,yBAAa,YACX,+BACA,GAAG,YAAA,IAAgB;UAEtB;QACF,CAAA;QACD,QAAM,SACHC,OAAgB;UAAE,SAAS,QAAM;UAAO,SAASN,OAAM;QAAc,CAAA;QACxE,gBAAgB;UACd,YAAY,WAAW;UACvB,aAAa,YAAY;QAC1B,CAAA;QACDA,OAAM,oBACHO,MAAK;UAAE,UAAU;UAAmB,GAAG,sBAAsB;QAAO,CAAA;MACxE;IACF,CAAA;AAGD,UAAM,YAAY,SAAS,MAAMP,OAAM,aAAa,YAAY,OAAO,KAAA;AAEvE,UAAM,EAAE,gBAAgB,WAAW,cAAc,gBAAgB,OAAA,IAAW,YAC1E,WACA,aACA;MACE,UAAUA,OAAM;MAChB,WAAW;MACX,sBAAsB,IAAI,SAAS;AACjC,cAAM,UAAU,WAAW,GAAG,MAAM;UAClC,aAAA,CAAcA,OAAM;UACpB,gBAAgBA,OAAM,2BAA2B;QAClD,CAAA;AACD,eAAO;MACR;MACD,YAAY;IACb,CAAA;AAGH,UAAM,aAAa,SACjB,MAAM,6BAA6B,UAAU,KAAA,EAAO,CAAA,CAAA;AAEtD,UAAM,cAAc,SAClB,MAAM,6BAA6B,UAAU,KAAA,EAAO,CAAA,CAAA;AAGtD,oBAAgB,MAAM;AACpB,UAAI,aAAa,MACf,OAAM,QAAA;IACT,CAAA;AAED,UAAM,oBAAoB,SACxB,MAAA;;AAAM,mCAAe,MAAM,UAArB,mBAA4B,kBAAiB;KAAA;AAGrD,UAAM,gBAAgB,IAAI,EAAA;AAC1B,gBAAY,MAAM;AAChB,UAAI,eAAe,MACjB,eAAc,QAAQ,OAAO,iBAAiB,eAAe,KAAA,EAAO;IACvE,CAAA;AAED,UAAM,SAAS,SAAS,MAAA;;AAAM,mCAAe,MAAM,UAArB,mBAA4B,MAAK;KAAA;AAC/D,UAAM,SAAS,SAAS,MAAA;;AAAM,mCAAe,MAAM,UAArB,mBAA4B,MAAK;KAAA;AAE/D,gCAA4B;MAC1B;MACA,eAAe,CAAA,YAAW,QAAM,QAAQ;MACxC;MACA;MACA,iBAAiB;IAClB,CAAA;;;0BAIC,mBAqCM,OAAA;iBApCA;QAAJ,KAAI;QACJ,oCAAiC;QAChC,OAAK,eAAA;aAAa,MAAA,cAAA;qBAAiC,MAAA,YAAA,IAAe,MAAA,cAAA,EAAe,YAAS;;kBAA2G,cAAA;gDAA0E,WAAA,cAAA,EAAe,oBAAf,mBAAgC,IAAW,WAAA,cAAA,EAAe,oBAAf,mBAAgC,CAAA,EAAW,KAAI,GAAA;eAAiO,WAAA,cAAA,EAAe,SAAf,mBAAqB,oBAAe;;;;;UAmB/mB,YAcY,MAAA,SAAA,GAdZ,WAcY,EAbT,KAAK,MAAA,UAAA,EAAU,GACRQ,KAAAA,QAAM;QACb,YAAUR,OAAM;QAChB,IAAIS,KAAAA;QACJ,aAAW,WAAA;QACX,cAAY,YAAA;QACZ,OAAK,EAAA,WAAA,CAAoN,MAAA,YAAA,IAAY,SAAA,OAAA;;yBAMtO,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;AEjZd,IAAM,gBAAoC;EACxC,KAAK;EACL,OAAO;EACP,QAAQ;EACR,MAAM;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,iBAAiB,2BAAA;AAEvB,UAAM,WAAW,SAAS,MAAM,cAAc,eAAe,WAAW,KAAA,CAAA;;;0BAItE,mBAuCO,QAAA;QAtCJ,KAAG,CAAG,OAAe;AAAa,gBAAA,cAAA,EAAe,cAAc,EAAA;;;QAI/D,OAAK,eAAA;;kBAA4C,WAAA,cAAA,EAAe,WAAf,mBAAuB,SAAK,IAAM,WAAA,cAAA,EAAe,WAAf,mBAAuB,KAAA,OAAK;iBAA6B,WAAA,cAAA,EAAe,WAAf,mBAAuB,SAAK,IAAM,WAAA,cAAA,EAAe,WAAf,mBAAuB,KAAA,OAAK;WAAyB,SAAA,KAAA,GAAQ;;;;;;YAAkI,MAAA,cAAA,EAAe,WAAW,KAAA;;;;;;YAAuO,MAAA,cAAA,EAAe,WAAW,KAAA;sBAA0B,MAAA,cAAA,EAAe,gBAAgB,QAAK,WAAA;;UAoBvsB,YAaQ,eAbR,WACUC,KAYF,QAZQ;QACb,KAAK,MAAA,UAAA;QACL,OAAO,EAAA,SAAA,QAEP;QACA,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,SAASC,KAAAA;QACT,OAAOC,KAAAA;QACP,QAAQC,KAAAA;;yBAET,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9Dd,UAAM,EAAE,WAAA,IAAe,iBAAA;;0BAIrB,YAYe,MAAA,oBAAA,GAAA;QAXb,YAAA;QACC,WAAWC,KAAAA;;yBAEZ,MAOY,CAPZ,YAOY,MAAA,SAAA,GAPZ,WAOY;UANT,KAAK,MAAA,UAAA;UACL,YAAUC,KAAAA;UACV,IAAIC,KAAAA;WACGC,KAAAA,MAAAA,GAAM;2BAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;AExBd,SAAgB,oBAAoBC,UAA8B;AAChE,SAAO,qCAAU,cAAc;AAChC;AAED,SAAgB,gBAAmBC,OAA4BC,cAAiBC,YAAiD;AAC/H,MAAI,UAAA,OACF,QAAO;WACA,MAAM,QAAQ,KAAA,EACrB,QAAO,MAAM,KAAK,CAAA,QAAO,QAAQ,KAAK,cAAc,UAAA,CAAW;MAE/D,QAAO,QAAQ,OAAO,cAAc,UAAA;AACvC;AAED,SAAgB,QAAWC,OAAWC,cAAkBF,YAAiD;AACvG,MAAI,UAAA,UAAuB,iBAAA,OACzB,QAAO;AAET,MAAA,OAAW,UAAU,SACnB,QAAO,UAAU;AAEnB,MAAA,OAAW,eAAe,WACxB,QAAO,WAAW,OAAO,YAAA;AAE3B,MAAA,OAAW,eAAe,SACxB,SAAO,+BAAQ,kBAA2B,6CAAe;AAE3D,SAAO,QAAQ,OAAO,YAAA;AACvB;;;ACSD,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAmD,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CvD,UAAMG,SAAQ;AAId,UAAM,QAAQ;AASd,UAAM,EAAE,UAAU,kBAAkB,aAAa,UAAU,mBAAmB,KAAK,QAAA,IAAY,OAAOA,MAAA;AACtG,UAAM,EAAE,SAAA,IAAa,cAA4B,EAAE,YAAY,KAAM,CAAA;AACrE,UAAM,EAAE,sBAAA,IAA0B,aAAA;AAClC,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,UAAM,MAAM,OAAA;AACZ,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,gBAAgB,eAAe,cAAA;AAErC,UAAM,aAAa,IAAA;AACnB,UAAM,eAAe,IAAI,KAAA;AACzB,UAAM,YAAY,IAAI,IAAA;AACtB,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM,iBAAiB,SAAS,QAAQ,CAAE,IAAA;MACxD,SAAUA,OAAM,eAAA;MAChB,MAAM;IACP,CAAA;AAED,aAAS,cAAc,KAAQ;AAC7B,mBAAa,QAAQ;AACrB,UAAIA,OAAM,UAAU;AAClB,cAAM,aAAa,MAAM,QAAQ,WAAW,KAAA,IAAS,CAAC,GAAG,WAAW,KAAM,IAAG,CAAC;AAC9E,cAAM,QAAQ,WAAW,UAAU,CAAA,MAAK,QAAQ,GAAG,KAAKA,OAAM,EAAA,CAAG;AACjE,YAAIA,OAAM,sBAAsB,UAAU;AACxC,oBAAU,KAAK,WAAW,KAAK,GAAA,IAAO,WAAW,OAAO,OAAO,CAAA;AAC/D,qBAAW,QAAQ;QACrB,OACK;AACH,qBAAW,QAAQ,CAAC,GAAG;AACvB,qBAAW,QAAQ;QACrB;MACF,WAEMA,OAAM,sBAAsB,SAC9B,KAAI,QAAQ,WAAW,OAAO,KAAKA,OAAM,EAAA,EACvC,YAAW,QAAA;UAEX,YAAW,QAAQ;UAGrB,YAAW,QAAQ;AAGvB,iBAAW,MAAM;AACf,qBAAa,QAAQ;MACtB,GAAE,CAAA;IACL;AAEA,UAAM,qBAAqB,IAAwB,IAAA;AACnD,UAAM,kBAAkB,IAAwB,IAAA;AAChD,UAAM,YAAY,IAAI,KAAA;AACtB,UAAM,cAAc,IAAI,KAAA;AACxB,UAAM,mBAAmB,gBAAA;AACzB,UAAM,qBAAqB,gBAAA;AAC3B,UAAM,uBAAuB,gBAAA;AAE7B,aAAS,oBAAoB;AAC3B,aAAO,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA,EAAK,OAAO,CAAA,MAAK,EAAE,QAAQ,aAAa,EAAA;IACvE;AAEA,aAAS,gBAAgB,IAAiB,iBAAiB,MAAM;AAC/D,UAAA,CAAK,GACH;AAEF,yBAAmB,QAAQ;AAC3B,UAAI,UAAU,MACZ,oBAAmB,MAAM,MAAA;AAC3B,UAAI,eACF,oBAAmB,MAAM,eAAe,EAAE,OAAO,UAAW,CAAA;AAE9D,YAAM,kBAAkB,SAAA,EAAW,KAAK,CAAA,MAAK,EAAE,QAAQ,EAAA;AACvD,YAAM,aAAa,eAAA;IACrB;AAEA,aAAS,cAAc,OAAU;AAC/B,UAAI,UAAU,MACZ,sBAAqB,QAAQ,KAAA;WAE1B;AACH,cAAM,OAAO,SAAA,EAAW,KAAK,CAAA,MAAK,QAAQ,EAAE,OAAO,OAAOA,OAAM,EAAA,CAAG;AACnE,YAAI,MAAM;AACR,6BAAmB,QAAQ,KAAK;AAChC,0BAAgB,KAAK,GAAA;QACvB;MACF;IACF;AAEA,aAAS,eAAe,OAAsB;AAC5C,UAAI,mBAAmB,SAAS,mBAAmB,MAAM,aAAa;AACpE,cAAM,eAAA;AACN,cAAM,gBAAA;AAEN,YAAA,CAAK,YAAY,MACf,oBAAmB,MAAM,MAAA;MAE7B;IACF;AAEA,aAAS,mBAAmB,OAAsB;AAChD,UAAA,CAAK,UAAU,MACb;AACF,mBAAa,QAAQ;AACrB,UAAI,UAAU,MACZ,oBAAmB,QAAQ,KAAA;WAExB;AACH,cAAM,YAAY,MAAM,UAAU,MAAM,WAAW,MAAM;AAEzD,YAAI,aAAa,MAAM,QAAQ,OAAO,SAAS,OAAO;AACpD,gBAAM,aAAa,SAAA;AACnB,gBAAM,SAAS,WAAW,IAAI,CAAA,MAAK,EAAE,KAAA;AACrC,qBAAW,QAAQ,CAAC,GAAG,MAAM;AAC7B,gBAAM,eAAA;AACN,0BAAgB,WAAW,WAAW,SAAS,CAAA,EAAG,GAAA;QACpD,WAAA,CACU,WAAW;AACnB,gBAAM,KAAK,sBAAsB,MAAM,KAAK,SAAA,CAAU;AACtD,cAAI,GACF,iBAAgB,EAAA;QACpB;MACF;AACA,iBAAW,MAAM;AACf,qBAAa,QAAQ;MACtB,GAAE,CAAA;IACL;AAEA,aAAS,qBAAqB;AAC5B,kBAAY,QAAQ;IACtB;AACA,aAAS,mBAAmB;AAC1B,eAAS,MAAM;AACb,oBAAY,QAAQ;MACrB,CAAA;IACH;AAEA,aAAS,qBAAqB;AAC5B,eAAS,MAAM;AACb,cAAM,QAAQ,IAAI,cAAc,WAAW,EAAE,KAAK,SAAU,CAAA;AAC5D,4BAAoB,KAAA;MACrB,CAAA;IACH;AAEA,aAAS,QAAQ,OAAc;AAC7B,YAAM,KAAK,mBAAmB;AAE9B,UAAK,yBAAa,YAChB,iBAAgB,QAAQ;AAG1B,yBAAmB,QAAQ;AAC3B,YAAM,SAAS,KAAA;IACjB;AAEA,aAAS,QAAQ,OAAc;;AAC7B,YAAM,kBAAkB,IAAI,YAAY,sBAAsB;QAAE,SAAS;QAAO,YAAY;MAAM,CAAA;AAClG,kBAAM,kBAAN,mBAAqB,cAAc;AACnC,YAAM,cAAc,eAAA;AAEpB,UAAI,gBAAgB,iBAClB;AAEF,UAAI,gBAAgB,MAClB,iBAAgB,gBAAgB,KAAA;WAE7B;AACH,cAAM,MAAK,uBAAA,MAAA,mBAAsB;AACjC,wBAAgB,EAAA;MAClB;IACF;AAEA,aAAS,oBAAoB,OAAsB;AACjD,YAAM,SAAS,eAAe,OAAO,YAAY,OAAO,IAAI,KAAA;AAC5D,UAAA,CAAK,OACH;AAEF,UAAI,aAAa,kBAAA;AACjB,UAAI,mBAAmB,OAAO;AAC5B,YAAI,WAAW,OACb,YAAW,QAAA;iBAEJ,WAAW,UAAU,WAAW,QAAQ;AAC/C,cAAI,WAAW,OACb,YAAW,QAAA;AAEb,gBAAM,eAAe,WAAW,QAAQ,mBAAmB,KAAA;AAC3D,uBAAa,WAAW,MAAM,eAAe,CAAA;QAC/C;AACA,8BAAsB,OAAO,WAAW,CAAA,CAAA;MAC1C;AAEA,UAAI,WAAW,QAAQ;AACrB,cAAM,QAAA,CAAS,mBAAmB,SAAS,WAAW,SAAS,WAAW,SAAS,IAAI;AACvF,wBAAgB,WAAW,KAAA,CAAA;MAC7B;AAEA,UAAI,UAAU,MACZ,QAAO,mBAAmB,QAAQ,KAAA;IACtC;AAEA,aAAS,sBAAsB,OAAsB,UAAuB;;AAC1E,UAAI,UAAU,SAASA,OAAM,sBAAsB,aAAA,CAAc,SAAS,SAAA,CAAU,MAAM,QAAQ,WAAW,KAAA,EAC3G;AACF,YAAM,YAAY,MAAM,UAAU,MAAM,WAAW,MAAM;AACzD,UAAI,aAAA,CAAc,MAAM,SACtB;AAEF,UAAI,MAAM,UAAU;AAClB,cAAM,aAAa,SAAA,EAAW,OAAO,CAAA,MAAK,EAAE,IAAI,QAAQ,aAAa,EAAA;AACrE,YAAI,aAAY,gBAAW,KAAK,CAAA,MAAK,EAAE,QAAQ,QAAA,MAA/B,mBAA0C;AAE1D,YAAI,MAAM,QAAQ,IAAI,IACpB,aAAY,WAAW,WAAW,SAAS,CAAA,EAAG;iBACvC,MAAM,QAAQ,IAAI,KACzB,aAAY,WAAW,CAAA,EAAG;AAE5B,YAAA,CAAK,aAAA,CAAc,WAAW,MAC5B;AAEF,cAAM,SAAS,kBAAkB,WAAW,IAAI,CAAA,MAAK,EAAE,KAAA,GAAQ,WAAW,OAAO,SAAA;AACjF,mBAAW,QAAQ;MACrB;IACF;AAEA,mBAAe,kBAAkB,OAAe;AAC9C,YAAM,SAAA;AACN,UAAI,UAAU,MAEZ,kBAAiB,QAAQ,KAAA;WAEtB;AACH,cAAM,aAAa,kBAAA;AACnB,cAAM,OAAO,WAAW,KAAK,CAAA,MAAK,EAAE,QAAQ,UAAU,SAAA;AACtD,YAAI,KACF,iBAAgB,IAAA;iBACT,WAAW,OAClB,iBAAgB,WAAW,CAAA,CAAA;MAC/B;IACF;AAGA,UAAM,YAAY,MAAM;AACtB,UAAA,CAAK,aAAa,MAChB,UAAS,MAAM;AACb,0BAAA;MACD,CAAA;IAEJ,GAAE;MAAE,WAAW;MAAM,MAAM;IAAM,CAAA;AAElC,aAAa;MACX;MACA;MACA;MACA;MACA;IACD,CAAA;AAED,8BAA0B;MACxB;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAIA,OAAM;MACV;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;;0BAIC,YAwBY,MAAA,SAAA,GAAA;iBAvBN;QAAJ,KAAI;QACH,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,KAAK,MAAA,GAAA;QACL,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,gBAAc;QACd,YAAQ,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAS,UAAiB;gBAAmB,SAAU,MAAM,iBAAiB,MAAM;gBAA0C,SAAA;cAAqB,mBAAA,SAAsB,MAAA,cAAA,KAAc,CAAK,MAAA,cAAA,EAAe,SAAS,MAAA,EAAmB,SAAQ,KAAA;;;yBAQxP,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,GAGtB,MAAA,aAAA,KAAiBC,KAAAA,QAAAA,UAAAA,GADzB,YAME,MAAA,2BAAA,GAAA;;UAJC,MAAMA,KAAAA;UACN,OAAO,MAAA,UAAA;UACP,UAAU,MAAA,QAAA;UACV,UAAUC,KAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3YjB,UAAM,EAAE,eAAA,IAAmB,cAAA;AAC3B,UAAM,cAAc,yBAAA;AAEpB,UAAM,eAAe,aAAa,OAAO,EAAA;;0BAIvC,YAuCiB,MAAA,cAAA,GAAA,MAAA;yBAtCf,MAqCY,CArCZ,YAqCY,MAAA,SAAA,GAAA;UApCV,MAAK;UACJ,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,UAAU,MAAA,WAAA,EAAY,UAAU,QAAQ,MAAA,WAAA,EAAY,mBAAmB,QAAK,OAAA,MAAA;UAC5E,oBAAkB,MAAA,WAAA,EAAY,YAAY;UAC1C,wBAAA,CAAA,CAAwB,MAAA,WAAA,EAAY,SAAS;UAC7C,oBAAkB,MAAA,WAAA,EAAY,YAAY;UAC1C,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAA,WAAO,aAAA,QAAY,MAAA,CAAA,MAAA,CAAA;UAC5B,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,OAAE;gBAAmB,MAAA,YAAA,EAAY;AAA2B,kBAAA,WAAA,EAAY,QAAQ,EAAA;;UAKxF,WAAO;gDAA+B,UAAoB;kBAAyG,MAAA,WAAA,EAAY,YAAY,UAAK,eAAgC,MAAM,QAAG,eAAoB,MAAM,QAAG,iBAAsH,MAAA,WAAA,EAAY,YAAY,UAAK,iBAAkC,MAAM,QAAG,aAAkB,MAAM,QAAG,aAAA;AAA8E,oBAAM,eAAA;AAAyB,oBAAA,WAAA,EAAY,UAAU,SAAQ,MAAA,WAAA,EAAY,oBAAoB,KAAA;;;;;;;;;qBAmB3nB,MAAA,WAAA,EAAY,gBAAc,CAAA,OAAA,CAAA;YAChC,MAAA,WAAA,EAAY;;;2BAEtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnCd,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AASd,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAc;MACd,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,cAAc,yBAAA;AAEpB,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,UAAM,WAAW,SAAS,MAAMA,OAAM,YAAY,YAAY,SAAS,SAAS,KAAA;AAEhF,UAAM,mBAAmB,IAAA;AACzB,oBAAgB,MAAA;;AAAM,8BAAiB,SAAQ,iBAAY,mBAAmB,UAA/B,mBAAsC;KAAA;AAErF,cAAU,MAAM;AACd,kBAAY,UAAU,QAAQ;AAE9B,iBAAW,MAAM;;AAEf,YAAIA,OAAM,UACR,sBAAe,UAAf,mBAAsB;MACzB,GAAE,CAAA;IACJ,CAAA;AAED,gBAAY,MAAM;AAChB,kBAAY,UAAU,QAAQ;IAC/B,CAAA;;0BAIC,YAoBY,MAAA,SAAA,GAAA;iBAnBN;QAAJ,KAAI;QACH,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,OAAO,MAAA,UAAA;QACP,UAAU,SAAA,QAAQ,KAAA;QAClB,iBAAe,SAAA,QAAQ,KAAA;QACvB,iBAAe,SAAA,SAAA;QACf,yBAAuB,iBAAA;QACxB,MAAK;QACJ,WAAO,CAAA,SAAA,cAA2B,MAAA,WAAA,EAAY,qBAAmB,CAAA,SAAA,CAAA,GAAA;UAAA;UAAA;UAAA;UAAA;QAAA,CAAA,GAAA,SAClD,MAAA,WAAA,EAAY,gBAAc,CAAA,OAAA,CAAA,CAAA;QACzC,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAiB;AAAa,qBAAA,QAAc,MAAM,OAA4B;AAAY,gBAAA,WAAA,EAAY,mBAAA;;QAI9G,oBAAkB,MAAA,WAAA,EAAY;QAC9B,kBAAgB,MAAA,WAAA,EAAY;;yBAE7B,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;AEzElC,IAAa,CAAC,2BAA2B,0BAAA,IACrC,cAAmC,cAAA;;;;;;;;;;;;;;AAMvC,UAAMC,SAAQ;AAEd,UAAM,KAAKC,OAAA,QAAiB,oBAAA;AAC5B,+BAA2B,EAAE,GAAI,CAAA;;0BAI/B,YAMY,MAAA,SAAA,GANZ,WAMY,EALV,MAAK,QAAO,GACJD,QAAK,EACZ,mBAAiB,MAAA,EAAA,EAAE,CAAA,GAAA;yBAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBZ,UAAME,SAAQ;AAId,UAAM,eAAe,0BAA0B,EAAE,IAAI,GAAI,CAAA;;0BAIvD,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACZ,IAAI,MAAA,YAAA,EAAa,GAAA,CAAA,GAAA;yBAElB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AERZ,IAAM,iBAAiB;AAMvB,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAkC,aAAA;;;;;;;;;;;;;;;;;;;;;;;;AAatC,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,KAAKC,OAAA,QAAiB,mBAAA;AAC5B,UAAM,EAAE,eAAA,IAAmB,cAAA;AAC3B,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,cAAc,yBAAA;AAEpB,UAAM,gBAAgB,SAAS,MAAM,eAAe,UAAU,YAAY,mBAAmB,KAAA;AAC7F,UAAM,aAAa,SAAS,MAAM,gBAAgB,YAAY,WAAW,OAAOD,OAAM,OAAO,YAAY,EAAA,CAAG;AAE5G,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,SAASA,OAAM,QAAA;AAEpE,mBAAeE,cAAa,IAAoB;AAC9C,YAAM,UAAU,EAAA;AAChB,UAAI,yBAAI,iBACN;AAEF,UAAA,CAAK,SAAS,SAAS,IAAI;AACzB,oBAAY,cAAcF,OAAM,KAAA;AAChC,oBAAY,gBAAgB,eAAe,KAAA;MAC7C;IACF;AAEA,aAAS,wBAAwB,IAAkB;AACjD,YAAM,cAAc;QAAE,eAAe;QAAI,OAAOA,OAAM;MAAW;AACjE,mCAA6B,gBAAgBE,eAAc,WAAA;IAC7D;AAEA,8BAA0B,EACxB,WACD,CAAA;;0BAIC,YA6BiB,MAAA,cAAA,GAAA,EA7BA,OAAOC,KAAAA,MAAK,GAAA;yBAC3B,MA2BY,CAAA,SAAA,CAvBD,cAAA,OAAe,WAAA,KAAU,GAAA,MAJpC,YA2BY,MAAA,SAAA,GA3BZ,WA2BY,EA1BT,IAAI,MAAA,EAAA,EAAE,GACCC,KAAAA,QAAM;UACb,KAAK,MAAA,UAAA;UAEN,MAAK;UACJ,UAAU,MAAA,WAAA,EAAY,UAAU,QAAQ,cAAA,QAAa,MAAA,OAAA;UACrD,iBAAe,WAAA;UACf,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,UAAU,SAAA,QAAQ,KAAA;UAClB,iBAAe,SAAA,QAAQ,KAAA;UACvB,oBAAkB,cAAA,QAAa,KAAA;UAC/B,cAAY,WAAA,QAAU,YAAA;UACtB,SAAO;UACP,WAAO,SAAA,cAAgB,yBAAuB,CAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;UAC9C,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,MAAA,WAAA,EAAY,mBAAmB,UAAU,MAAA,cAAA,EAAc;gBAAgC,MAAA,WAAA,EAAY,iBAAiB,MAAiB,OAAA,WAAA,EAAY,gBAAgB,MAAA,cAAA,GAAc,KAAA;gBAAgC,OAAA,WAAA,EAAY,UAAU,SAAoB,MAAA,WAAA,EAAY,gBAAgB,MAAA,cAAA,GAAc,KAAA;;;2BAU1U,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzFd,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAM,cAAc,yBAAA;;aAKV,MAAA,WAAA,EAAY,WAAW,SAAA,UAAA,GAD/B,YAMY,MAAA,SAAA,GANZ,WAMY;;QAJV,eAAY;SACJA,MAAA,GAAK;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AErBI,SAAA,KACd,SACA,IACA,MAMA;AACI,MAAA,OAAO,KAAK,eAAe,CAAC;AAC5B,MAAA;AAEJ,WAAS,mBAA4B;AAbvB,QAAA,IAAA,IAAA,IAAA;AAcR,QAAA;AACJ,QAAI,KAAK,SAAO,KAAA,KAAK,UAAL,OAAA,SAAA,GAAA,KAAA,IAAA,GAAgB,WAAU,KAAK,IAAI;AAEnD,UAAM,UAAU,QAAQ;AAExB,UAAM,cACJ,QAAQ,WAAW,KAAK,UACxB,QAAQ,KAAK,CAAC,KAAU,UAAkB,KAAK,KAAK,MAAM,GAAG;AAE/D,QAAI,CAAC,aAAa;AACT,aAAA;IAAA;AAGF,WAAA;AAEH,QAAA;AACJ,QAAI,KAAK,SAAO,KAAA,KAAK,UAAL,OAAA,SAAA,GAAA,KAAA,IAAA,GAAgB,cAAa,KAAK,IAAI;AAE7C,aAAA,GAAG,GAAG,OAAO;AAEtB,QAAI,KAAK,SAAO,KAAA,KAAK,UAAL,OAAA,SAAA,GAAA,KAAA,IAAA,IAAgB;AACxB,YAAA,aAAa,KAAK,OAAO,KAAK,IAAA,IAAQ,WAAY,GAAG,IAAI;AACzD,YAAA,gBAAgB,KAAK,OAAO,KAAK,IAAA,IAAQ,cAAe,GAAG,IAAI;AACrE,YAAM,sBAAsB,gBAAgB;AAEtC,YAAA,MAAM,CAAC,KAAsB,QAAgB;AACjD,cAAM,OAAO,GAAG;AACT,eAAA,IAAI,SAAS,KAAK;AACvB,gBAAM,MAAM;QAAA;AAEP,eAAA;MACT;AAEQ,cAAA;QACN,OAAO,IAAI,eAAe,CAAC,CAAC,KAAK,IAAI,YAAY,CAAC,CAAC;QACnD;;;yBAGiB,KAAK;UAChB;UACA,KAAK,IAAI,MAAM,MAAM,qBAAqB,GAAG;QAC9C,CAAA;QACL,QAAA,OAAA,SAAA,KAAM;MACR;IAAA;AAGF,KAAA,KAAA,QAAA,OAAA,SAAA,KAAM,aAAN,OAAA,SAAA,GAAA,KAAA,MAAiB,MAAA;AAEV,WAAA;EAAA;AAIQ,mBAAA,aAAa,CAAC,YAAwB;AAC9C,WAAA;EACT;AAEO,SAAA;AACT;AAEgB,SAAA,aAAgB,OAAsB,KAAiB;AACrE,MAAI,UAAU,QAAW;AACjB,UAAA,IAAI,MAAM,uBAAuB,MAAM,KAAK,GAAG,KAAK,EAAE,EAAE;EAAA,OACzD;AACE,WAAA;EAAA;AAEX;AAEa,IAAA,cAAc,CAAC,GAAW,MAAc,KAAK,IAAI,IAAI,CAAC,IAAI;AAEhE,IAAM,WAAW,CACtB,cACA,IACA,OACG;AACC,MAAA;AACJ,SAAO,YAAwB,MAAkB;AAC/C,iBAAa,aAAa,SAAS;AACvB,gBAAA,aAAa,WAAW,MAAM,GAAG,MAAM,MAAM,IAAI,GAAG,EAAE;EACpE;AACF;;;ACnDA,IAAM,UAAU,CAAC,YAA+B;AACxC,QAAA,EAAE,aAAa,aAAA,IAAiB;AACtC,SAAO,EAAE,OAAO,aAAa,QAAQ,aAAa;AACpD;AAEa,IAAA,sBAAsB,CAAC,UAAkB;AAEzC,IAAA,wBAAwB,CAACC,WAAiB;AACrD,QAAM,QAAQ,KAAK,IAAIA,OAAM,aAAaA,OAAM,UAAU,CAAC;AACrD,QAAA,MAAM,KAAK,IAAIA,OAAM,WAAWA,OAAM,UAAUA,OAAM,QAAQ,CAAC;AAErE,QAAM,MAAM,CAAC;AAEb,WAAS,IAAI,OAAO,KAAK,KAAK,KAAK;AACjC,QAAI,KAAK,CAAC;EAAA;AAGL,SAAA;AACT;AAEa,IAAA,qBAAqB,CAChC,UACA,OACG;AACH,QAAM,UAAU,SAAS;AACzB,MAAI,CAAC,SAAS;AACZ;EAAA;AAEF,QAAM,eAAe,SAAS;AAC9B,MAAI,CAAC,cAAc;AACjB;EAAA;AAGI,QAAA,UAAU,CAAC,SAAe;AACxB,UAAA,EAAE,OAAO,OAAA,IAAW;AACvB,OAAA,EAAE,OAAO,KAAK,MAAM,KAAK,GAAG,QAAQ,KAAK,MAAM,MAAM,EAAA,CAAG;EAC7D;AAEQ,UAAA,QAAQ,OAAiC,CAAC;AAE9C,MAAA,CAAC,aAAa,gBAAgB;AAChC,WAAO,MAAM;IAAC;EAAA;AAGhB,QAAM,WAAW,IAAI,aAAa,eAAe,CAAC,YAAY;AAC5D,UAAM,MAAM,MAAM;AACV,YAAA,QAAQ,QAAQ,CAAC;AACvB,UAAI,SAAA,OAAA,SAAA,MAAO,eAAe;AAClB,cAAA,MAAM,MAAM,cAAc,CAAC;AACjC,YAAI,KAAK;AACP,kBAAQ,EAAE,OAAO,IAAI,YAAY,QAAQ,IAAI,UAAA,CAAW;AACxD;QAAA;MACF;AAEM,cAAA,QAAQ,OAAiC,CAAC;IACpD;AAEA,aAAS,QAAQ,sCACb,sBAAsB,GAAG,IACzB,IAAI;EAAA,CACT;AAED,WAAS,QAAQ,SAAS,EAAE,KAAK,aAAA,CAAc;AAE/C,SAAO,MAAM;AACX,aAAS,UAAU,OAAO;EAC5B;AACF;AAEA,IAAM,0BAA0B;EAC9B,SAAS;AACX;AAuBA,IAAM,oBACJ,OAAO,UAAU,cAAc,OAAO,iBAAiB;AAI5C,IAAA,uBAAuB,CAClC,UACA,OACG;AACH,QAAM,UAAU,SAAS;AACzB,MAAI,CAAC,SAAS;AACZ;EAAA;AAEF,QAAM,eAAe,SAAS;AAC9B,MAAI,CAAC,cAAc;AACjB;EAAA;AAGF,MAAIC,UAAS;AACb,QAAM,WACJ,SAAS,QAAQ,qBAAqB,oBAClC,MAAM,SACN;IACE;IACA,MAAM;AACJ,SAAGA,SAAQ,KAAK;IAClB;IACA,SAAS,QAAQ;EACnB;AAEA,QAAA,gBAAgB,CAAC,gBAAyB,MAAM;AACpD,UAAM,EAAE,YAAY,MAAM,IAAI,SAAS;AAC9B,IAAAA,UAAA,aACL,QAAQ,YAAY,KAAM,SAAS,MAAO,KAC1C,QAAQ,WAAW;AACd,aAAA;AACT,OAAGA,SAAQ,WAAW;EACxB;AACM,QAAA,UAAU,cAAc,IAAI;AAC5B,QAAA,aAAa,cAAc,KAAK;AAC3B,aAAA;AAEH,UAAA,iBAAiB,UAAU,SAAS,uBAAuB;AAC7D,QAAA,yBACJ,SAAS,QAAQ,qBAAqB;AACxC,MAAI,wBAAwB;AAClB,YAAA,iBAAiB,aAAa,YAAY,uBAAuB;EAAA;AAE3E,SAAO,MAAM;AACH,YAAA,oBAAoB,UAAU,OAAO;AAC7C,QAAI,wBAAwB;AAClB,cAAA,oBAAoB,aAAa,UAAU;IAAA;EAEvD;AACF;AAkDO,IAAM,iBAAiB,CAC5B,SACA,OACA,aACG;AACH,MAAI,SAAA,OAAA,SAAA,MAAO,eAAe;AAClB,UAAA,MAAM,MAAM,cAAc,CAAC;AACjC,QAAI,KAAK;AACP,YAAMC,QAAO,KAAK;QAChB,IAAI,SAAS,QAAQ,aAAa,eAAe,WAAW;MAC9D;AACO,aAAAA;IAAA;EACT;AAGF,SAAQ,QACN,SAAS,QAAQ,aAAa,gBAAgB,cAChD;AACF;AAkBa,IAAA,gBAAgB,CAC3BC,SACA;EACE,cAAc;EACd;AACF,GACA,aACG;;AACH,QAAM,WAAWA,UAAS;AAE1B,GAAA,MAAA,KAAA,SAAS,kBAAT,OAAA,SAAA,GAAwB,aAAxB,OAAA,SAAA,GAAA,KAAA,IAAmC;IACjC,CAAC,SAAS,QAAQ,aAAa,SAAS,KAAK,GAAG;IAChD;EAAA,CAAA;AAEJ;AA0DO,IAAM,cAAN,MAGL;EAyDA,YAAY,MAAwD;AAxDpE,SAAQ,SAAqC,CAAC;AAEP,SAAA,gBAAA;AACa,SAAA,eAAA;AACtC,SAAA,cAAA;AACd,SAAA,oBAAwC,CAAC;AACjC,SAAA,gBAAA,oBAAoB,IAAiB;AAC7C,SAAQ,8BAA6C,CAAC;AAC5B,SAAA,aAAA;AACI,SAAA,eAAA;AACY,SAAA,kBAAA;AAC1C,SAAQ,oBAAoB;AAQ5B,SAAA,gBAAA,oBAAoB,IAAuB;AAC3C,SAAQ,WAAkB,uBAAA;AACxB,UAAI,MAA6B;AAEjC,YAAM,MAAM,MAAM;AAChB,YAAI,KAAK;AACA,iBAAA;QAAA;AAGT,YAAI,CAAC,KAAK,gBAAgB,CAAC,KAAK,aAAa,gBAAgB;AACpD,iBAAA;QAAA;AAGT,eAAQ,MAAM,IAAI,KAAK,aAAa,eAAe,CAAC,YAAY;AACtD,kBAAA,QAAQ,CAAC,UAAU;AACzB,kBAAM,MAAM,MAAM;AACX,mBAAA,gBAAgB,MAAM,QAAwB,KAAK;YAC1D;AACA,iBAAK,QAAQ,sCACT,sBAAsB,GAAG,IACzB,IAAI;UAAA,CACT;QAAA,CACF;MACH;AAEO,aAAA;QACL,YAAY,MAAM;;AAChB,WAAA,KAAA,IAAA,MAAA,OAAA,SAAA,GAAO,WAAA;AACD,gBAAA;QACR;QACA,SAAS,CAAC,WAAA;;AACR,kBAAA,KAAA,IAAI,MAAJ,OAAA,SAAA,GAAO,QAAQ,QAAQ,EAAE,KAAK,aAAA,CAAA;;QAChC,WAAW,CAAC,WAAA;;AAAoB,kBAAA,KAAA,IAAI,MAAJ,OAAA,SAAA,GAAO,UAAU,MAAA;QAAA;MACnD;IAAA,GACC;AACsD,SAAA,QAAA;AAMzD,SAAA,aAAa,CAACC,UAA2D;AAChE,aAAA,QAAQA,KAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC7C,YAAI,OAAO,UAAU,YAAa,QAAQA,MAAa,GAAG;MAAA,CAC3D;AAED,WAAK,UAAU;QACb,OAAO;QACP,eAAe;QACf,UAAU;QACV,cAAc;QACd,YAAY;QACZ,oBAAoB;QACpB,kBAAkB;QAClB,YAAY;QACZ,YAAY;QACZ,gBAAgB;QAChB,UAAU,MAAM;QAAC;QACjB;QACA,aAAa,EAAE,OAAO,GAAG,QAAQ,EAAE;QACnC,cAAc;QACd,KAAK;QACL,gBAAgB;QAChB,0BAA0B,CAAC;QAC3B,OAAO;QACP,uBAAuB;QACvB,SAAS;QACT,OAAO;QACP,mBAAmB;QACnB,qCAAqC;QACrC,GAAGA;MACL;IACF;AAEQ,SAAA,SAAS,CAAC,SAAkB;;AAC7B,OAAA,MAAA,KAAA,KAAA,SAAQ,aAAR,OAAA,SAAA,GAAA,KAAA,IAAmB,MAAM,IAAA;IAChC;AAEA,SAAQ,cAAc;MACpB,MAAM;AACJ,aAAK,eAAe;AAEb,eAAA;UACL,KAAK;UACL,KAAK,QAAQ,KAAK,MAAM,aAAa;UACrC,KAAK,QAAQ,KAAK,MAAM,WAAW;QACrC;MACF;MACA,CAAC,gBAAgB;AACf,aAAK,OAAO,WAAW;MACzB;MACA;QACE,KAA8C;QAC9C,OAAO,MAAM,KAAK,QAAQ;QAC1B,aAAa;UACX,KAAK;UACL,KAAK,QAAQ,KAAK,MAAM,aAAa;UACrC,KAAK,QAAQ,KAAK,MAAM,WAAW;QAAA;MACrC;IAEJ;AAEA,SAAQ,UAAU,MAAM;AACjB,WAAA,OAAO,OAAO,OAAO,EAAE,QAAQ,CAAC,MAAM,EAAA,CAAI;AAC/C,WAAK,SAAS,CAAC;AACf,WAAK,SAAS,WAAW;AACzB,WAAK,gBAAgB;AACrB,WAAK,eAAe;IACtB;AAEA,SAAA,YAAY,MAAM;AAChB,aAAO,MAAM;AACX,aAAK,QAAQ;MACf;IACF;AAEA,SAAA,cAAc,MAAM;;AAClB,YAAM,gBAAgB,KAAK,QAAQ,UAC/B,KAAK,QAAQ,iBAAA,IACb;AAEA,UAAA,KAAK,kBAAkB,eAAe;AACxC,aAAK,QAAQ;AAEb,YAAI,CAAC,eAAe;AAClB,eAAK,YAAY;AACjB;QAAA;AAGF,aAAK,gBAAgB;AAErB,YAAI,KAAK,iBAAiB,mBAAmB,KAAK,eAAe;AAC1D,eAAA,eAAe,KAAK,cAAc,cAAc;QAAA,OAChD;AACA,eAAA,iBAAe,KAAA,KAAK,kBAAL,OAAA,SAAA,GAAoB,WAAU;QAAA;AAG/C,aAAA,cAAc,QAAQ,CAAC,WAAW;AAChC,eAAA,SAAS,QAAQ,MAAM;QAAA,CAC7B;AAEI,aAAA,gBAAgB,KAAK,gBAAA,GAAmB;UAC3C,aAAa;UACb,UAAU;QAAA,CACX;AAED,aAAK,OAAO;UACV,KAAK,QAAQ,mBAAmB,MAAM,CAAC,SAAS;AAC9C,iBAAK,aAAa;AAClB,iBAAK,YAAY;UAClB,CAAA;QACH;AAEA,aAAK,OAAO;UACV,KAAK,QAAQ,qBAAqB,MAAM,CAACD,SAAQ,gBAAgB;AAC/D,iBAAK,oBAAoB;AACzB,iBAAK,kBAAkB,cACnB,KAAK,gBAAA,IAAoBA,UACvB,YACA,aACF;AACJ,iBAAK,eAAeA;AACpB,iBAAK,cAAc;AAEnB,iBAAK,YAAY;UAClB,CAAA;QACH;MAAA;IAEJ;AAEA,SAAQ,UAAU,MAAM;AAClB,UAAA,CAAC,KAAK,QAAQ,SAAS;AACzB,aAAK,aAAa;AACX,eAAA;MAAA;AAGT,WAAK,aAAa,KAAK,cAAc,KAAK,QAAQ;AAElD,aAAO,KAAK,WAAW,KAAK,QAAQ,aAAa,UAAU,QAAQ;IACrE;AAEA,SAAQ,kBAAkB,MAAM;AAC1B,UAAA,CAAC,KAAK,QAAQ,SAAS;AACzB,aAAK,eAAe;AACb,eAAA;MAAA;AAGT,WAAK,eACH,KAAK,iBACJ,OAAO,KAAK,QAAQ,kBAAkB,aACnC,KAAK,QAAQ,cAAc,IAC3B,KAAK,QAAQ;AAEnB,aAAO,KAAK;IACd;AAEQ,SAAA,yBAAyB,CAC/B,cACA,UACG;AACG,YAAA,4BAAA,oBAAgC,IAAkB;AAClD,YAAA,uBAAA,oBAA2B,IAAyB;AAC1D,eAAS,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK;AAC7B,cAAA,cAAc,aAAa,CAAC;AAElC,YAAI,0BAA0B,IAAI,YAAY,IAAI,GAAG;AACnD;QAAA;AAGF,cAAM,8BAA8B,qBAAqB;UACvD,YAAY;QACd;AACA,YACE,+BAA+B,QAC/B,YAAY,MAAM,4BAA4B,KAC9C;AACqB,+BAAA,IAAI,YAAY,MAAM,WAAW;QAC7C,WAAA,YAAY,MAAM,4BAA4B,KAAK;AAClC,oCAAA,IAAI,YAAY,MAAM,IAAI;QAAA;AAGtD,YAAI,0BAA0B,SAAS,KAAK,QAAQ,OAAO;AACzD;QAAA;MACF;AAGF,aAAO,qBAAqB,SAAS,KAAK,QAAQ,QAC9C,MAAM,KAAK,qBAAqB,OAAA,CAAQ,EAAE,KAAK,CAAC,GAAG,MAAM;AACnD,YAAA,EAAE,QAAQ,EAAE,KAAK;AACZ,iBAAA,EAAE,QAAQ,EAAE;QAAA;AAGd,eAAA,EAAE,MAAM,EAAE;MAAA,CAClB,EAAE,CAAC,IACJ;IACN;AAEA,SAAQ,wBAAwB;MAC9B,MAAM;QACJ,KAAK,QAAQ;QACb,KAAK,QAAQ;QACb,KAAK,QAAQ;QACb,KAAK,QAAQ;QACb,KAAK,QAAQ;MACf;MACA,CAACE,QAAO,cAAc,cAAc,YAAY,YAAY;AAC1D,aAAK,8BAA8B,CAAC;AAC7B,eAAA;UACL,OAAAA;UACA;UACA;UACA;UACA;QACF;MACF;MACA;QACE,KAAK;MAAA;IAET;AAEA,SAAQ,kBAAkB;MACxB,MAAM,CAAC,KAAK,sBAAA,GAAyB,KAAK,aAAa;MACvD,CACE,EAAE,OAAAA,QAAO,cAAc,cAAc,YAAY,QAAA,GACjD,kBACG;AACH,YAAI,CAAC,SAAS;AACZ,eAAK,oBAAoB,CAAC;AAC1B,eAAK,cAAc,MAAM;AACzB,iBAAO,CAAC;QAAA;AAGN,YAAA,KAAK,kBAAkB,WAAW,GAAG;AAClC,eAAA,oBAAoB,KAAK,QAAQ;AACjC,eAAA,kBAAkB,QAAQ,CAAC,SAAS;AACvC,iBAAK,cAAc,IAAI,KAAK,KAAK,KAAK,IAAI;UAAA,CAC3C;QAAA;AAGG,cAAAC,OACJ,KAAK,4BAA4B,SAAS,IACtC,KAAK,IAAI,GAAG,KAAK,2BAA2B,IAC5C;AACN,aAAK,8BAA8B,CAAC;AAEpC,cAAM,eAAe,KAAK,kBAAkB,MAAM,GAAGA,IAAG;AAExD,iBAAS,IAAIA,MAAK,IAAID,QAAO,KAAK;AAC1B,gBAAA,MAAM,WAAW,CAAC;AAExB,gBAAM,sBACJ,KAAK,QAAQ,UAAU,IACnB,aAAa,IAAI,CAAC,IAClB,KAAK,uBAAuB,cAAc,CAAC;AAEjD,gBAAM,QAAQ,sBACV,oBAAoB,MAAM,KAAK,QAAQ,MACvC,eAAe;AAEb,gBAAA,eAAe,cAAc,IAAI,GAAG;AACpC,gBAAAE,QACJ,OAAO,iBAAiB,WACpB,eACA,KAAK,QAAQ,aAAa,CAAC;AAEjC,gBAAM,MAAM,QAAQA;AAEpB,gBAAM,OAAO,sBACT,oBAAoB,OACpB,IAAI,KAAK,QAAQ;AAErB,uBAAa,CAAC,IAAI;YAChB,OAAO;YACP;YACA,MAAAA;YACA;YACA;YACA;UACF;QAAA;AAGF,aAAK,oBAAoB;AAElB,eAAA;MACT;MACA;QACE,KAA8C;QAC9C,OAAO,MAAM,KAAK,QAAQ;MAAA;IAE9B;AAEiB,SAAA,iBAAA;MACf,MAAM;QACJ,KAAK,gBAAgB;QACrB,KAAK,QAAQ;QACb,KAAK,gBAAgB;QACrB,KAAK,QAAQ;MACf;MACA,CAAC,cAAc,WAAW,cAAc,UAAU;AAChD,eAAQ,KAAK,QACX,aAAa,SAAS,KAAK,YAAY,IACnC,eAAe;UACb;UACA;UACA;UACA;QACD,CAAA,IACD;MACR;MACA;QACE,KAA8C;QAC9C,OAAO,MAAM,KAAK,QAAQ;MAAA;IAE9B;AAEoB,SAAA,oBAAA;MAClB,MAAM;AACJ,YAAI,aAA4B;AAChC,YAAI,WAA0B;AACxB,cAAAC,SAAQ,KAAK,eAAe;AAClC,YAAIA,QAAO;AACT,uBAAaA,OAAM;AACnB,qBAAWA,OAAM;QAAA;AAEnB,aAAK,YAAY,WAAW,CAAC,KAAK,aAAa,YAAY,QAAQ,CAAC;AAC7D,eAAA;UACL,KAAK,QAAQ;UACb,KAAK,QAAQ;UACb,KAAK,QAAQ;UACb;UACA;QACF;MACF;MACA,CAAC,gBAAgB,UAAUH,QAAO,YAAY,aAAa;AACzD,eAAO,eAAe,QAAQ,aAAa,OACvC,CAAA,IACA,eAAe;UACb;UACA;UACA;UACA,OAAAA;QAAA,CACD;MACP;MACA;QACE,KAA8C;QAC9C,OAAO,MAAM,KAAK,QAAQ;MAAA;IAE9B;AAEA,SAAA,mBAAmB,CAAC,SAAuB;AACnC,YAAA,gBAAgB,KAAK,QAAQ;AAC7B,YAAA,WAAW,KAAK,aAAa,aAAa;AAEhD,UAAI,CAAC,UAAU;AACL,gBAAA;UACN,2BAA2B,aAAa;QAC1C;AACO,eAAA;MAAA;AAGF,aAAA,SAAS,UAAU,EAAE;IAC9B;AAEQ,SAAA,kBAAkB,CACxB,MACA,UACG;AACG,YAAA,QAAQ,KAAK,iBAAiB,IAAI;AAClC,YAAA,OAAO,KAAK,kBAAkB,KAAK;AACzC,UAAI,CAAC,MAAM;AACT;MAAA;AAEF,YAAM,MAAM,KAAK;AACjB,YAAM,WAAW,KAAK,cAAc,IAAI,GAAG;AAE3C,UAAI,aAAa,MAAM;AACrB,YAAI,UAAU;AACP,eAAA,SAAS,UAAU,QAAQ;QAAA;AAE7B,aAAA,SAAS,QAAQ,IAAI;AACrB,aAAA,cAAc,IAAI,KAAK,IAAI;MAAA;AAGlC,UAAI,KAAK,aAAa;AACf,aAAA,WAAW,OAAO,KAAK,QAAQ,eAAe,MAAM,OAAO,IAAI,CAAC;MAAA;IAEzE;AAEa,SAAA,aAAA,CAAC,OAAeE,UAAiB;AACtC,YAAA,OAAO,KAAK,kBAAkB,KAAK;AACzC,UAAI,CAAC,MAAM;AACT;MAAA;AAEF,YAAM,WAAW,KAAK,cAAc,IAAI,KAAK,GAAG,KAAK,KAAK;AAC1D,YAAM,QAAQA,QAAO;AAErB,UAAI,UAAU,GAAG;AACf,YACE,KAAK,+CAA+C,SAChD,KAAK,2CAA2C,MAAM,OAAO,IAAI,IACjE,KAAK,QAAQ,KAAK,gBAAgB,IAAI,KAAK,mBAC/C;AACA,cAA6C,KAAK,QAAQ,OAAO;AACvD,oBAAA,KAAK,cAAc,KAAK;UAAA;AAG7B,eAAA,gBAAgB,KAAK,gBAAA,GAAmB;YAC3C,aAAc,KAAK,qBAAqB;YACxC,UAAU;UAAA,CACX;QAAA;AAGE,aAAA,4BAA4B,KAAK,KAAK,KAAK;AAC3C,aAAA,gBAAgB,IAAI,IAAI,KAAK,cAAc,IAAI,KAAK,KAAKA,KAAI,CAAC;AAEnE,aAAK,OAAO,KAAK;MAAA;IAErB;AAEA,SAAA,iBAAiB,CAAC,SAA0C;AAC1D,UAAI,CAAC,MAAM;AACT,aAAK,cAAc,QAAQ,CAAC,QAAQ,QAAQ;AACtC,cAAA,CAAC,OAAO,aAAa;AAClB,iBAAA,SAAS,UAAU,MAAM;AACzB,iBAAA,cAAc,OAAO,GAAG;UAAA;QAC/B,CACD;AACD;MAAA;AAGG,WAAA,gBAAgB,MAAM,MAAS;IACtC;AAEkB,SAAA,kBAAA;MAChB,MAAM,CAAC,KAAK,kBAAqB,GAAA,KAAK,gBAAA,CAAiB;MACvD,CAAC,SAAS,iBAAiB;AACzB,cAAM,eAAmC,CAAC;AAE1C,iBAAS,IAAI,GAAG,MAAM,QAAQ,QAAQ,IAAI,KAAK,KAAK;AAC5C,gBAAA,IAAI,QAAQ,CAAC;AACb,gBAAA,cAAc,aAAa,CAAC;AAElC,uBAAa,KAAK,WAAW;QAAA;AAGxB,eAAA;MACT;MACA;QACE,KAA8C;QAC9C,OAAO,MAAM,KAAK,QAAQ;MAAA;IAE9B;AAEA,SAAA,0BAA0B,CAACJ,YAAmB;AACtC,YAAA,eAAe,KAAK,gBAAgB;AACtC,UAAA,aAAa,WAAW,GAAG;AACtB,eAAA;MAAA;AAEF,aAAA;QACL,aACE;UACE;UACA,aAAa,SAAS;UACtB,CAAC,UAAkB,aAAa,aAAa,KAAK,CAAC,EAAE;UACrDA;QAEJ,CAAA;MACF;IACF;AAEA,SAAA,wBAAwB,CACtB,UACA,OACA,WAAW,MACR;AACG,YAAAI,QAAO,KAAK,QAAQ;AACpB,YAAA,eAAe,KAAK,gBAAgB;AAE1C,UAAI,UAAU,QAAQ;AACZ,gBAAA,YAAY,eAAeA,QAAO,QAAQ;MAAA;AAGpD,UAAI,UAAU,UAAU;AAGtB,qBAAa,WAAWA,SAAQ;MAAA,WACvB,UAAU,OAAO;AACd,oBAAAA;MAAA;AAGd,YAAM,YAAY,KAAK,aAAA,IAAiB,KAAK,QAAQ,eAAeA;AAEpE,aAAO,KAAK,IAAI,KAAK,IAAI,WAAW,QAAQ,GAAG,CAAC;IAClD;AAEoB,SAAA,oBAAA,CAAC,OAAe,QAAyB,WAAW;AAC9D,cAAA,KAAK,IAAI,GAAG,KAAK,IAAI,OAAO,KAAK,QAAQ,QAAQ,CAAC,CAAC;AAErD,YAAA,OAAO,KAAK,kBAAkB,KAAK;AACzC,UAAI,CAAC,MAAM;AACF,eAAA;MAAA;AAGH,YAAAA,QAAO,KAAK,QAAQ;AACpB,YAAA,eAAe,KAAK,gBAAgB;AAE1C,UAAI,UAAU,QAAQ;AACpB,YAAI,KAAK,OAAO,eAAeA,QAAO,KAAK,QAAQ,kBAAkB;AAC3D,kBAAA;QAAA,WACC,KAAK,SAAS,eAAe,KAAK,QAAQ,oBAAoB;AAC/D,kBAAA;QAAA,OACH;AACE,iBAAA,CAAC,cAAc,KAAK;QAAA;MAC7B;AAGI,YAAA,WACJ,UAAU,QACN,KAAK,MAAM,KAAK,QAAQ,mBACxB,KAAK,QAAQ,KAAK,QAAQ;AAEzB,aAAA;QACL,KAAK,sBAAsB,UAAU,OAAO,KAAK,IAAI;QACrD;MACF;IACF;AAEA,SAAQ,gBAAgB,MAAM,KAAK,cAAc,OAAO;AAEvC,SAAA,iBAAA,CACf,UACA,EAAE,QAAQ,SAAS,SAAS,IAA2B,CAAA,MACpD;AACH,UAAI,aAAa,YAAY,KAAK,cAAA,GAAiB;AACzC,gBAAA;UACN;QACF;MAAA;AAGF,WAAK,gBAAgB,KAAK,sBAAsB,UAAU,KAAK,GAAG;QAChE,aAAa;QACb;MAAA,CACD;IACH;AAEgB,SAAA,gBAAA,CACd,OACA,EAAE,OAAO,eAAe,QAAQ,SAAmC,IAAA,CAAA,MAChE;AACH,UAAI,aAAa,YAAY,KAAK,cAAA,GAAiB;AACzC,gBAAA;UACN;QACF;MAAA;AAGM,cAAA,KAAK,IAAI,GAAG,KAAK,IAAI,OAAO,KAAK,QAAQ,QAAQ,CAAC,CAAC;AAE3D,UAAI,WAAW;AACf,YAAM,cAAc;AAEd,YAAA,YAAY,CAAC,iBAAkC;AAC/C,YAAA,CAAC,KAAK,aAAc;AAExB,cAAM,aAAa,KAAK,kBAAkB,OAAO,YAAY;AAC7D,YAAI,CAAC,YAAY;AACP,kBAAA,KAAK,mCAAmC,KAAK;AACrD;QAAA;AAEI,cAAA,CAACJ,SAAQ,KAAK,IAAI;AACxB,aAAK,gBAAgBA,SAAQ,EAAE,aAAa,QAAW,SAAA,CAAU;AAE5D,aAAA,aAAa,sBAAsB,MAAM;AACtC,gBAAA,gBAAgB,KAAK,gBAAgB;AAC3C,gBAAM,YAAY,KAAK,kBAAkB,OAAO,KAAK;AACrD,cAAI,CAAC,WAAW;AACN,oBAAA,KAAK,mCAAmC,KAAK;AACrD;UAAA;AAGF,cAAI,CAAC,YAAY,UAAU,CAAC,GAAG,aAAa,GAAG;AAC7C,0BAAc,KAAK;UAAA;QACrB,CACD;MACH;AAEM,YAAA,gBAAgB,CAAC,UAA2B;AAC5C,YAAA,CAAC,KAAK,aAAc;AAExB;AACA,YAAI,WAAW,aAAa;AAC1B,cAA6C,KAAK,QAAQ,OAAO;AACvD,oBAAA,KAAK,kBAAkB,UAAU,WAAW;UAAA;AAEtD,eAAK,aAAa,sBAAsB,MAAM,UAAU,KAAK,CAAC;QAAA,OACzD;AACG,kBAAA;YACN,6BAA6B,KAAK,UAAU,WAAW;UACzD;QAAA;MAEJ;AAEA,gBAAU,YAAY;IACxB;AAEA,SAAA,WAAW,CAAC,OAAe,EAAE,SAAS,IAA2B,CAAA,MAAO;AACtE,UAAI,aAAa,YAAY,KAAK,cAAA,GAAiB;AACzC,gBAAA;UACN;QACF;MAAA;AAGF,WAAK,gBAAgB,KAAK,gBAAgB,IAAI,OAAO;QACnD,aAAa;QACb;MAAA,CACD;IACH;AAEA,SAAA,eAAe,MAAM;;AACb,YAAA,eAAe,KAAK,gBAAgB;AAEtC,UAAA;AAIA,UAAA,aAAa,WAAW,GAAG;AAC7B,cAAM,KAAK,QAAQ;MACV,WAAA,KAAK,QAAQ,UAAU,GAAG;AACnC,gBAAM,KAAA,aAAa,aAAa,SAAS,CAAC,MAApC,OAAA,SAAA,GAAuC,QAAO;MAAA,OAC/C;AACL,cAAM,YAAY,MAAqB,KAAK,QAAQ,KAAK,EAAE,KAAK,IAAI;AAChE,YAAA,WAAW,aAAa,SAAS;AAC9B,eAAA,YAAY,KAAK,UAAU,KAAK,CAAC,QAAQ,QAAQ,IAAI,GAAG;AACvD,gBAAA,OAAO,aAAa,QAAQ;AAClC,cAAI,UAAU,KAAK,IAAI,MAAM,MAAM;AACvB,sBAAA,KAAK,IAAI,IAAI,KAAK;UAAA;AAG9B;QAAA;AAGI,cAAA,KAAK,IAAI,GAAG,UAAU,OAAO,CAAC,QAAuB,QAAQ,IAAI,CAAC;MAAA;AAG1E,aAAO,KAAK;QACV,MAAM,KAAK,QAAQ,eAAe,KAAK,QAAQ;QAC/C;MACF;IACF;AAEQ,SAAA,kBAAkB,CACxBA,SACA;MACE;MACA;IAAA,MAKC;AACH,WAAK,QAAQ,WAAWA,SAAQ,EAAE,UAAU,YAAA,GAAe,IAAI;IACjE;AAEA,SAAA,UAAU,MAAM;AACT,WAAA,gBAAA,oBAAoB,IAAI;AAC7B,WAAK,OAAO,KAAK;IACnB;AA3pBE,SAAK,WAAW,IAAI;EAAA;AA4pBxB;AAEA,IAAM,0BAA0B,CAC9B,KACA,MACA,iBACA,UACG;AACH,SAAO,OAAO,MAAM;AACZ,UAAA,UAAW,MAAM,QAAQ,IAAK;AAC9B,UAAA,eAAe,gBAAgB,MAAM;AAE3C,QAAI,eAAe,OAAO;AACxB,YAAM,SAAS;IAAA,WACN,eAAe,OAAO;AAC/B,aAAO,SAAS;IAAA,OACX;AACE,aAAA;IAAA;EACT;AAGF,MAAI,MAAM,GAAG;AACX,WAAO,MAAM;EAAA,OACR;AACE,WAAA;EAAA;AAEX;AAEA,SAAS,eAAe;EACtB;EACA;EACA;EACA;AACF,GAKG;AACK,QAAA,YAAY,aAAa,SAAS;AACxC,QAAM,YAAY,CAAC,UAAkB,aAAa,KAAK,EAAG;AAGtD,MAAA,aAAa,UAAU,OAAO;AACzB,WAAA;MACL,YAAY;MACZ,UAAU;IACZ;EAAA;AAGF,MAAI,aAAa;IACf;IACA;IACA;IACA;EACF;AACA,MAAI,WAAW;AAEf,MAAI,UAAU,GAAG;AACf,WACE,WAAW,aACX,aAAa,QAAQ,EAAG,MAAM,eAAe,WAC7C;AACA;IAAA;EACF,WACS,QAAQ,GAAG;AAGpB,UAAM,aAAa,MAAM,KAAK,EAAE,KAAK,CAAC;AAEpC,WAAA,WAAW,aACX,WAAW,KAAK,CAAC,QAAQ,MAAM,eAAe,SAAS,GACvD;AACM,YAAA,OAAO,aAAa,QAAQ;AACvB,iBAAA,KAAK,IAAI,IAAI,KAAK;AAC7B;IAAA;AAKF,UAAM,eAAe,MAAM,KAAK,EAAE,KAAK,eAAe,SAAS;AACxD,WAAA,cAAc,KAAK,aAAa,KAAK,CAAC,QAAQ,OAAO,YAAY,GAAG;AACnE,YAAA,OAAO,aAAa,UAAU;AACvB,mBAAA,KAAK,IAAI,IAAI,KAAK;AAC/B;IAAA;AAIF,iBAAa,KAAK,IAAI,GAAG,aAAc,aAAa,KAAM;AAE1D,eAAW,KAAK,IAAI,WAAW,YAAY,QAAQ,IAAK,WAAW,MAAO;EAAA;AAGrE,SAAA,EAAE,YAAY,SAAS;AAChC;;;AC/nCA,SAAS,mBAIP,SACgD;AAChD,QAAM,cAAc,IAAI,YAAY,MAAM,OAAO,CAAC;AAC5C,QAAA,QAAQ,WAAW,WAAW;AAE9B,QAAA,UAAU,YAAY,UAAU;AAEtC;IACE,MAAM,MAAM,OAAO,EAAE,iBAAiB;IACtC,CAAC,OAAO;AACN,UAAI,IAAI;AACN,oBAAY,YAAY;MAAA;IAE5B;IACA;MACE,WAAW;IAAA;EAEf;AAEA;IACE,MAAM,MAAM,OAAO;IACnB,CAACM,aAAY;AACX,kBAAY,WAAW;QACrB,GAAGA;QACH,UAAU,CAAC,UAAU,SAAS;;AAC5B,qBAAW,KAAK;AAChBA,WAAAA,KAAAA,SAAQ,aAARA,OAAAA,SAAAA,GAAAA,KAAAA,UAAmB,UAAU,IAAA;QAAI;MACnC,CACD;AAED,kBAAY,YAAY;AACxB,iBAAW,KAAK;IAClB;IACA;MACE,WAAW;IAAA;EAEf;AAEA,iBAAe,OAAO;AAEf,SAAA;AACT;AAEO,SAAS,eAId,SAMgD;AACzC,SAAA;IACL,SAAS,OAAO;MACd;MACA;MACA,YAAY;MACZ,GAAG,MAAM,OAAO;IAAA,EAChB;EACJ;AACF;;;;;;;;;;;;;;;;;;;;;;;;AC9DA,UAAMC,SAAQ;AAUd,UAAM,QAAQ,SAAA;AACd,UAAM,cAAc,yBAAA;AACpB,UAAM,WAAW,iBAAA;AACjB,UAAM,EAAE,SAAA,IAAa,cAAA;AAGrB,gBAAY,UAAU,QAAQ;AAE9B,UAAM,UAAU,SAAS,MAAM;AAC7B,YAAM,KAAK,SAAS;AACpB,UAAA,CAAK,GACH,QAAO;QAAE,OAAO;QAAG,KAAK;MAAE;WAEvB;AACH,cAAM,SAAS,OAAO,iBAAiB,EAAA;AACvC,eAAO;UACL,OAAO,OAAO,WAAW,OAAO,qBAAqB,OAAO,UAAA;UAC5D,KAAK,OAAO,WAAW,OAAO,mBAAmB,OAAO,aAAA;QAC1D;MACF;IACD,CAAA;AAED,UAAM,cAAc,eAClB;MACE,IAAI,qBAAqB;AAAE,eAAO,QAAQ,MAAM;MAAO;MACvD,IAAI,mBAAmB;AAAE,eAAO,QAAQ,MAAM;MAAK;MACnD,IAAI,QAAQ;AAAE,eAAOA,OAAM,QAAQ;MAAQ;MAC3C,IAAI,aAAa;AAAE,eAAO,YAAY,YAAY,UAAU;MAAc;MAC1E,eAAe;AACb,eAAOA,OAAM,gBAAgB;MAC9B;MACD,mBAAmB;AAAE,eAAO,SAAS;MAAO;MAC5C,UAAUA,OAAM,YAAY;IAC7B,CAAA;AAGH,UAAM,mBAAmB,SAAS,MAAM,YAAY,MAAM,gBAAA,EAAkB,IAAI,CAAC,SAAS;AACxF,YAAM,cAAc,MAAM,QAAS;QACjC,QAAQA,OAAM,QAAQ,KAAK,KAAA;QAC3B,aAAa,YAAY;QACzB,aAAa;MACd,CAAA,EAAE,CAAA;AAEH,YAAM,aAAa,YAAY,SAAS,YAAY,MAAM,QAAQ,YAAY,QAAA,IAC1E,YAAY,SAAS,CAAA,IACrB;AAEJ,aAAO;QACL;QACA,IAAI,WAAW,YAAY;UACzB,OAAO,GAAG,KAAK,GAAA;UACf,cAAc,KAAK;UACnB,gBAAgBA,OAAM,QAAQ;UAC9B,iBAAiB,KAAK,QAAQ;UAC9B,SAAS;YACP,UAAU;YACV,KAAK;YACL,MAAM;YACN,WAAW,cAAc,KAAK,KAAA;YAC9B,gBAAgB;UACjB;QACF,CAAA;MACH;IACD,CAAA,CAAC;AAEF,gBAAY,iBAAiB,GAAG,CAAC,UAAU;AACzC,YAAM,QAAQA,OAAM,QAAQ,UAAU,CAAC,WAAW;AAChD,YAAI,MAAM,QAAQ,YAAY,WAAW,KAAA,EACvC,QAAO,QAAQ,QAAQ,YAAY,WAAW,MAAM,CAAA,GAAI,YAAY,EAAA;YAEpE,QAAO,QAAQ,QAAQ,YAAY,WAAW,OAAQ,YAAY,EAAA;MACrE,CAAA;AACD,UAAI,UAAU,IAAI;AAChB,uCAAO;AAEP,oBAAY,MAAM,cAAc,OAAO,EAAE,OAAO,QAAS,CAAA;AACzD,8BAAsB,MAAM;AAC1B,gBAAM,OAAO,oBAAoB,SAAS,KAAA;AAC1C,cAAI,MAAM;AACR,wBAAY,gBAAgB,IAAA;AAC5B,gBAAI,MACF,8BAAM;UACV;QACD,CAAA;MACH,MAEE,aAAY,mBAAA;IAEf,CAAA;AAED,gBAAY,qBAAqB,GAAG,CAAC,UAAU;AAC7C,YAAM,QAAQA,OAAM,QAAQ,UAAU,CAAC,WAAW;AAChD,eAAO,QAAQ,QAAQ,OAAO,YAAY,EAAA;MAC3C,CAAA;AACD,kBAAY,MAAM,cAAc,OAAO,EAAE,OAAO,QAAS,CAAA;AACzD,4BAAsB,MAAM;AAC1B,cAAM,OAAO,oBAAoB,SAAS,KAAA;AAC1C,YAAI,KACF,aAAY,gBAAgB,IAAA;MAC/B,CAAA;IACF,CAAA;AAGD,UAAM,SAAS,aAAa,IAAI,GAAA;AAChC,UAAM,sBAAsB,SAAS,MAAM;AACzC,YAAM,mBAAmB,CAAC,WAAc;AACtC,YAAIA,OAAM,YACR,QAAOA,OAAM,YAAY,MAAA;YAEzB,QAAO,iCAAQ,WAAW;MAC9B;AAEA,aAAOA,OAAM,QAAQ,IAAI,CAAC,QAAQ,WAAW;QAC3C;QACA,aAAa,iBAAiB,MAAA;MAC/B,EAAA;IACF,CAAA;AAED,aAAS,sBAAsB,OAAc,QAA4C;;AACvF,UAAA,GAAK,iBAAY,eAAZ,mBAAwB,UAAA,CAAU,YAAY,SAAS,SAAA,CAAU,MAAM,QAAQ,YAAY,WAAW,KAAA,EACzG;AAEF,YAAM,aAAa,SAAA,EAAW,OAAO,CAAA,MAAK,EAAE,IAAI,QAAQ,aAAa,EAAA;AACrE,YAAM,aAAY,gBAAW,KAAK,CAAA,MAAK,EAAE,QAAQ,YAAY,mBAAmB,KAAA,MAA9D,mBAAsE;AACxF,UAAA,CAAK,UACH;AAEF,UAAI,QAAoB;AACxB,cAAQ,QAAR;QACE,KAAK;QACL,KAAK,QAAQ;AACX,kBAAQ,kBAAkBA,OAAM,SAAS,YAAY,WAAW,OAAY,SAAA;AAC5E;QACF;QACA,KAAK,SAAS;AACZ,kBAAQ,kBAAkBA,OAAM,SAAS,YAAY,WAAW,QAAY,KAAAA,OAAM,YAAN,mBAAgB,EAAA;AAC5F;QACF;QACA,KAAK,QAAQ;AACX,kBAAQ,kBAAkBA,OAAM,SAAS,YAAY,WAAW,QAAY,KAAAA,OAAM,YAAN,mBAAgBA,OAAM,QAAQ,SAAS,EAAA;AACnH;QACF;MACF;AACA,kBAAY,WAAW,QAAQ;IACjC;AAEA,gBAAY,mBAAmB,GAAG,CAAC,UAAU;;AAC3C,YAAM,YAAY,MAAM,UAAU,MAAM,WAAW,MAAM;AACzD,YAAM,WAAW,MAAM,QAAQ,SAAA,CAAU;AACzC,UAAI,SACF;AAEF,UAAI,SAAS,wBAAwB,MAAM,GAAA;AAG3C,UAAI,aAAa,MAAM,QAAQ,OAAO,YAAY,SAAS,OAAO;AAChE,cAAM,eAAA;AACN,oBAAY,WAAW,QAAQ,CAAC,GAAGA,OAAM,OAAO;AAEhD,iBAAS;MACX,WACS,MAAM,YAAY,OACzB,uBAAsB,OAAO,MAAA;AAG/B,UAAI,CAAC,SAAS,MAAO,EAAC,SAAS,MAAA,GAAS;AACtC,cAAM,eAAA;AAEN,cAAM,QAAQ,WAAW,UAAU,IAAIA,OAAM,QAAQ,SAAS;AAC9D,oBAAY,MAAM,cAAc,KAAA;AAChC,8BAAsB,MAAM;AAC1B,gBAAM,QAAQ,SAAA;AACd,gBAAM,OAAO,WAAW,UAAU,MAAM,CAAA,IAAK,MAAM,MAAM,SAAS,CAAA;AAClE,cAAI,KACF,aAAY,gBAAgB,KAAK,GAAA;QACpC,CAAA;MACH,WAAA,CACU,UAAA,CAAW,WAAW;AAC9B,eAAO,SAAS,MAAM;AACtB,cAAM,eAAe,QAAO,sBAAA,MAAA,mBAAoB,aAAa,aAAa;AAC1E,cAAM,eAAe,oBAAoB,MAAM,YAAA,EAAc;AAC7D,cAAM,kBAAkB,oBAAoB,MAAM,IAAI,CAAA,MAAK,EAAE,eAAe,EAAA;AAC5E,cAAM,OAAO,aAAa,iBAAiB,OAAO,OAAO,YAAA;AAEzD,cAAM,YAAY,oBAAoB,MAAM,KAAK,CAAA,WAAU,OAAO,gBAAgB,IAAA;AAClF,YAAI,WAAW;AACb,sBAAY,MAAM,cAAc,UAAU,OAAO,EAAE,OAAO,QAAS,CAAA;AACnE,gCAAsB,MAAM;AAC1B,kBAAM,OAAO,SAAS,MAAM,cAAc,gBAAgB,UAAU,KAAA,IAAS;AAC7E,gBAAI,gBAAgB,YAClB,aAAY,gBAAgB,IAAA;UAC/B,CAAA;QACH;MACF;IACD,CAAA;;0BAIC,mBAaM,OAAA;QAZJ,yBAAA;QACC,OAAK,eAAA;;;qBAAsE,MAAA,WAAA,EAAY,aAAA,CAAY;;4BAMpG,mBAIE,UAAA,MAAA,WAFuB,iBAAA,OAAgB,CAAA,EAA9B,IAAI,KAAA,MAAI;4BAFnB,YAIE,wBAHK,EAAA,GAAE,EAEN,KAAK,KAAK,MAAA,CAAA;;;;;;;;AEtNjB,IAAa,CAAC,2BAA2B,0BAAA,IACrC,cAAoD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDxD,UAAMC,SAAQ;AAOd,UAAM,QAAQ;AAWd,UAAM,EAAE,kBAAkB,gBAAgB,cAAA,IAAkB,oBAAA;AAC5D,UAAM,EAAE,UAAU,UAAU,cAAc,yBAAyB,aAAa,aAAa,KAAK,QAAA,IAAY,OAAOA,MAAA;AAErH,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,aAAa,UAAUA,QAA+B,cAAc,OAAO;MAC/E,cAAcA,OAAM,iBAAiB,SAAS,QAAQ,CAAE,IAAA;MACxD,SAAUA,OAAM,eAAA;MAChB,MAAM;IACP,CAAA;AAED,UAAM,OAAO,UAAUA,QAAO,QAAQ,OAAO;MAC3C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,mBAAe,aAAa,KAAc;;AACxC,WAAK,QAAQ;AACb,mBAAa,QAAQ;AAErB,UAAI,KAAK;AAEP,cAAM,SAAA;AACN,SAAAC,MAAA,iBAAiB,UAAjB,gBAAAA,IAAwB;AACxB,uBAAe,QAAQ;MACzB,MAEE,gBAAe,QAAQ;AAGzB,OAAAC,MAAA,aAAa,UAAb,gBAAAA,IAAoB;AACpB,iBAAW,MAAM;AACf,YAAA,CAAK,OAAOF,OAAM,sBAChB,iBAAgB,QAAA;MACnB,GAAE,CAAA;IACL;AAEA,UAAM,kBAAkB,gBAAA;AACxB,UAAM,iBAAiB,IAAI,KAAA;AAC3B,UAAM,YAAY,IAAI,KAAA;AACtB,UAAM,eAAe,IAAA;AACrB,UAAM,iBAAiB,IAAA;AAEvB,UAAM,qBAAqB,SAAS,MAAA;;AAAM,eAAAC,MAAA,iBAAiB,UAAjB,gBAAAA,IAAwB,uBAAA;KAAA;AAElE,UAAM,WAAW,IAAyB,oBAAI,IAAA,CAAA;AAC9C,UAAM,YAAY,IAA8B,oBAAI,IAAA,CAAA;AAEpD,UAAM,EAAE,SAAA,IAAa,UAAU,EAAE,aAAa,OAAQ,CAAA;AAEtD,UAAM,eAAe,IAAI,EAAA;AAEzB,UAAM,cAAc,SAIjB,CAAC,aAAa;AACf,UAAA,CAAK,aAAa,SAASD,OAAM,gBAAgB,UAAU,MAEzD,QAAO;QACL,OAAO,SAAS,MAAM;QACtB,QAAO,qCAAU,UAAS,oBAAI,IAAA;QAC9B,SAAQ,qCAAU,WAAU,IAAI,IAAI,UAAU,MAAM,KAAA,CAAM;MAC5D;AAGF,UAAI,YAAY;AAChB,YAAM,gBAAgB,oBAAI,IAAA;AAC1B,YAAM,iBAAiB,oBAAI,IAAA;AAG3B,iBAAW,CAAC,IAAI,KAAA,KAAU,SAAS,OAAO;AACxC,cAAM,QAAQ,SAAS,OAAO,aAAa,KAAA;AAC3C,sBAAc,IAAI,IAAI,QAAQ,IAAI,CAAA;AAClC,YAAI,MACF;MACJ;AAGA,iBAAW,CAAC,SAAS,KAAA,KAAU,UAAU,MACvC,YAAW,UAAU,MACnB,KAAI,cAAc,IAAI,MAAA,IAAW,GAAG;AAClC,uBAAe,IAAI,OAAA;AACnB;MACF;AAIJ,aAAO;QACL,OAAO;QACP,OAAO;QACP,QAAQ;MACV;IACD,CAAA;AAED,UAAM,OAAO,mBAAA;AACb,cAAU,MAAM;;AACd,UAAI,6BAAM,SAAS;AACjB,aAAK,QAAQ,iBAAgBC,MAAA,iBAAiB,UAAjB,gBAAAA,IAAwB;AACrD,aAAK,QAAQ,sBAAqBC,MAAA,iBAAiB,UAAjB,gBAAAA,IAAwB;AAC1D,aAAK,QAAQ,qBAAoBC,MAAA,iBAAiB,UAAjB,gBAAAA,IAAwB;MAC3D;IACD,CAAA;AAED,aAAa;MACX,UAAU;MACV;MACA,gBAAe,sBAAiB,UAAjB,mBAAwB;MACvC,qBAAoB,sBAAiB,UAAjB,mBAAwB;MAC5C,oBAAmB,sBAAiB,UAAjB,mBAAwB;IAC5C,CAAA;AAED,+BAA2B;MACzB;MACA;MACA;MACA;MACA;MACA,WAAW;MACX;MACA;MACA;MACA;MACA,sBAAsB,CAAA,QAAO,aAAa,QAAQ;MAClD;MACA,wBAAwB,CAAA,QAAO,eAAe,QAAQ;MACtD;MACA;MACA,mBAAmB,gBAAgB;MACnC;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;;0BAIC,YAwBa,MAAA,kBAAA,GAAA,MAAA;yBAvBX,MAsBc,CAtBd,YAsBc,MAAA,mBAAA,GAtBd,WAsBc;mBArBR;UAAJ,KAAI;WACIC,KAAAA,QAAM;sBACL,MAAA,UAAA;2FAAA,WAAU,QAAA,SAAA;UAClB,OAAK,EAAA,eAA2B,MAAA,IAAA,IAAI,SAAA,OAAA;UAGpC,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,KAAK,MAAA,GAAA;UACL,UAAU,MAAA,QAAA;UACV,MAAMC,KAAAA;UACN,UAAUC,KAAAA;UACV,UAAU,MAAA,QAAA;UACV,sBAAoB;UACpB,IAAIR,OAAM;UACV,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,aAAc,MAAA;;2BAE/B,MAGE,CAHF,WAGE,KAAA,QAAA,WAAA;YAFC,MAAM,MAAA,IAAA;YACN,YAAa,MAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;AElPtB,IAAa,CAAC,8BAA8B,6BAAA,IACxC,cAEC,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWL,UAAMS,SAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,EAAE,SAAA,IAAa,OAAOA,MAAA;AAC5B,UAAM,cAAc,0BAAA;AAEpB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,sBAAkBA,OAAM,QAAA;AACxB,kBAAc,YAAY,aAAA;AAE1B,UAAM,cAAc,SAAS,MAAM;AACjC,UAAIA,OAAM,aAAa,SACrB,QAAOA;UACJ,QAAO,CAAC;IACd,CAAA;AAED,UAAM,iBAAiB,gBAAgB,YAAY,KAAA;AAEnD,UAAM,cAAc;MAElB,aAAa;MACb,4CACM;MACN,2CACM;MACN,4CACM;MACN,iCAAiC;MACjC,kCAAkC;IACpC;AAEA,kCAA8B,EAAE,SAAU,CAAA;AAG1C,UAAM,uBAAuB,IAAI,KAAA;AACjC,cAAU,MAAM;AACd,UAAI,YAAY,aAAa,OAAO;AAClC,6BAAqB,QAAQ,eAAe,MAAM,SAAS,YAAY,aAAa,KAAA;AACpF,YAAI,qBAAqB,MACvB,aAAY,aAAa,MAAM,MAAA;MAEnC;IACD,CAAA;AAED,gBAAY,MAAM;;AAChB,UAAI,qBAAqB,MACvB,mBAAY,eAAe,UAA3B,mBAAkC;IAErC,CAAA;;0BAIC,YAoCiB,MAAA,sBAAA,GAAA,EApCD,YAAA,GAAQ,GAAA;yBACtB,MAkCmB,CAlCnB,YAkCmB,MAAA,wBAAA,GAAA;UAjCjB,YAAA;UACC,kCAAgCC,KAAAA;UAChC,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAY,KAAA;UACjC,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,OAAE;;iBAA+E,WAAA,WAAA,EAAY,cAAc,UAA1B,mBAAiC,SAAS,GAAG,QAAiB,IAAG,eAAA;AAAyB,kBAAK,gBAAiB,EAAA;;UAKjN,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,mBAAoB,MAAA;UAC3C,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;UACxC,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,OAAE;;iBAA+E,WAAA,WAAA,EAAY,cAAc,UAA1B,mBAAiC,SAAS,GAAG,QAAiB,IAAG,eAAA;AAAyB,kBAAK,sBAAuB,EAAA;;;2BAM/N,MAgBY,EAAA,UAAA,GAhBZ,YAgBY,wBAfL,MAAA,QAAA,MAAQ,WAAgB,MAAA,qBAAA,IAAgB,MAAA,SAAA,CAAS,GADxD,WAgBY;YAAA,GAdGC,KAAAA;YAAM,GAAK,MAAA,cAAA;UAAc,GAAA;YACrC,IAAI,MAAA,WAAA,EAAY;YAChB,KAAK,MAAA,UAAA;YACL,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;YAClC,OAAK;;;;iBAAyP,MAAA,QAAA,MAAQ,WAAgB,cAAW,CAAA;;;6BASlS,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9GhB,UAAMC,SAAQ;AAKd,UAAM,cAAc,0BAAA;AACpB,UAAM,iBAAiB,6BAAA;AAEvB,qBAAA;;aAKU,MAAA,WAAA,EAAY,KAAK,SAAS,MAAA,cAAA,EAAe,SAAS,UAAK,YAAA,UAAA,GAD/D,YAKc,MAAA,mBAAA,GAAA,eAAA,WAAA,EAAA,KAAA,EAAA,GAHJA,MAAA,CAAK,GAAA;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEjBZ,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAM,cAAc,0BAAA;AAEpB,aAAS,cAAc;AAErB,kBAAY,aAAa,QAAQ;AAEjC,UAAI,YAAY,aAAa,OAAO;AAClC,oBAAY,aAAa,MAAM,QAAQ;AACvC,oBAAY,aAAa,MAAM,MAAA;MACjC;IACF;;0BAIE,YAOY,MAAA,SAAA,GAPZ,WAOY,EANT,MAAMC,KAAAA,OAAE,WAAA,WAAA,OAAA,GACDD,QAAK;QACb,UAAS;QACR,SAAO;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBZ,UAAME,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,cAAc,0BAAA;AAEpB,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,uBAAA;;0BAIzC,YAOW,MAAA,gBAAA,GAAA,EAPA,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK,MAAA,GAAA;yBACjD,MAKsB,CALtB,YAKsB,6BALtB,WAKsB;UAAA,GAJP,MAAA,SAAA;UAAS,GAAKC,KAAAA;QAAM,GAAA,EAChC,KAAK,MAAA,UAAA,EAAU,CAAA,GAAA;2BAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AExBd,UAAMC,SAAQ;AACd,UAAM,cAAc,0BAAA;AAEpB,UAAM,WAAW,SAAS,MAAM,YAAY,aAAa,QACrD,YAAY,SAAS,MAAM,SAAS,IACpC,YAAY,YAAY,MAAM,UAAU,CAAA;;aAMlC,SAAA,SAAA,UAAA,GADR,YAKY,MAAA,SAAA,GAAA,eAAA,WAAA,EAAA,KAAA,EAAA,GAHFA,MAAA,CAAK,GAAA;yBAEb,MAAuB,CAAvB,WAAuB,KAAA,QAAA,WAAA,CAAA,GAAvB,MAAuB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAjB,YAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;AEZpB,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;AAMxC,UAAMC,SAAQ;AACd,UAAM,KAAKC,OAAA,QAAiB,qBAAA;AAC5B,UAAM,cAAc,0BAAA;AAEpB,UAAM,WAAW,SAAS,MAAM,YAAY,aAAa,QAAQ,OAAA,CAAQ,YAAY,aAAa,QAAQ,OAAO,YAAY,YAAY,MAAM,OAAO,IAAI,EAAA,CAAG;AAE7J,UAAMC,WAAU,4BAA4B;MAC1C;MACA,SAAS;IACV,CAAA;AAED,cAAU,MAAM;AACd,UAAA,CAAK,YAAY,UAAU,MAAM,IAAI,EAAA,EACnC,aAAY,UAAU,MAAM,IAAI,IAAI,oBAAI,IAAA,CAAA;IAC3C,CAAA;AACD,gBAAY,MAAM;AAChB,kBAAY,UAAU,MAAM,OAAO,EAAA;IACpC,CAAA;;0BAIC,YAOe,MAAA,oBAAA,GAPf,WAOe;QANZ,IAAI,MAAA,EAAA;QACJ,mBAAiB,MAAAA,QAAA,EAAQ;SAClBF,QAAK,EACZ,QAAQ,SAAA,QAAA,SAAoB,KAAA,CAAA,GAAA;yBAE7B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7BZ,UAAMG,SAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,cAAc,0BAAA;AACpB,UAAM,iBAAiB,yBAAA;AACvB,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAE7C,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO,EACvD,SAAUA,OAAM,eAAA,OACjB,CAAA;AAED,cAAU,MAAM;AACd,UAAI,eAAe,MACjB,aAAY,qBAAqB,eAAe,KAAA;IACnD,CAAA;AAED,aAAS,cAAc,IAAmB;AACxC,UAAA,CAAK,YAAY,KAAK,MACpB,aAAY,aAAa,IAAA;IAC7B;AAEA,aAAS,YAAY,OAAmB;AACtC,YAAM,SAAS,MAAM;AACrB,UAAA,CAAK,YAAY,KAAK,OAAO;AAC3B,oBAAY,aAAa,IAAA;AACzB,iBAAS,MAAM;AACb,cAAI,OAAO,OAAO;AAChB,wBAAY,aAAa,QAAQ,OAAO;AACxC,2BAAe,mBAAA;UACjB;QACD,CAAA;MACH,MAEE,aAAY,aAAa,QAAQ,OAAO;IAE5C;AAEA,aAAS,cAAc;AACrB,UAAI,YAAY,YAAY,SAAA,CAAU,YAAY,KAAK,MACrD,aAAY,aAAa,IAAA;IAC7B;AAEA,aAAS,cAAc;AACrB,UAAI,YAAY,YAAY,SAAA,CAAU,YAAY,KAAK,MACrD,aAAY,aAAa,IAAA;IAC7B;AAEA,aAAS,kBAAkB;AACzB,YAAM,iBAAiB,YAAY,WAAW;AAE9C,UAAIA,OAAM,aACR,YAAW,QAAQA,OAAM,aAAa,cAAA;gBAE9B,YAAY,SAAS,SAAS,kBAAA,CAAmB,MAAM,QAAQ,cAAA,EACvE,KAAA,OAAW,mBAAmB,SAC5B,YAAW,QAAQ,eAAe,SAAA;UAC/B,YAAW,QAAQ;UAGxB,YAAW,QAAQ;AAGrB,eAAS,MAAM;AAGb,mBAAW,QAAQ,WAAW;MAC/B,CAAA;IACH;AAEA,gBAAY,kBAAkB,MAAM;AAClC,sBAAA;IACD,CAAA;AAED,UAAM,YAAY,YAAY,YAAY;AACxC,UAAA,CAAK,YAAY,eAAe,SAAS,YAAY,wBAAwB,MAC3E,iBAAA;IACH,GAAE;MAAE,WAAW;MAAM,MAAM;IAAM,CAAA;AAElC,UAAM,YAAY,aAAa,MAAM;AAGnC,UAAA,CAAK,YAAY,UAAU,SAAA,CAAU,YAAY,mBAAmB,MAClE,gBAAe,mBAAA;IAElB,CAAA;;0BAIC,YAkBgB,MAAA,qBAAA,GAAA;iBAjBV;QAAJ,KAAI;oBACK,MAAA,UAAA;yFAAA,WAAU,QAAA,SAAA;QAClB,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,cAAYC,KAAAA;QACZ,UAAUC,KAAAA;QACV,iBAAe,MAAA,WAAA,EAAY,KAAK;QAChC,iBAAe,MAAA,WAAA,EAAY;QAC5B,qBAAkB;QAClB,MAAK;QACL,cAAa;QACZ,SAAO;QACP,SAAO;QACP,WAAO,SAAA,cAAkB,eAAa,CAAA,SAAA,CAAA,GAAA,CAAA,QAAA,IAAA,CAAA;QACtC,SAAO;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpGZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,KAAKC,OAAA,QAAiB,oBAAA;AAC5B,UAAM,cAAc,0BAAA;AACpB,UAAM,eAAe,2BAA2B,IAAA;AAEhD,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAE7C,QAAID,OAAM,UAAU,GAClB,OAAM,IAAI,MACR,0LAAA;AAIJ,UAAM,WAAW,SAAS,MAAM;AAC9B,UAAI,YAAY,UAAU,SAAS,YAAY,aAAa,SAAA,CAAU,YAAY,aAAa,MAC7F,QAAO;WAEJ;AACH,cAAM,sBAAsB,YAAY,YAAY,MAAM,MAAM,IAAI,EAAA;AAGpE,YAAI,wBAAA,OACF,QAAO;AAIT,eAAO,sBAAsB;MAC/B;IACD,CAAA;AAED,cAAU,MAAM;;AAEd,kBAAY,SAAS,MAAM,IAAI,IAAIA,OAAM,aAAa,eAAe,MAAM,eAAe,eAAe,MAAM,SAAA;AAE/G,YAAM,UAAU,6CAAc;AAC9B,UAAI,QACF,KAAA,CAAK,YAAY,UAAU,MAAM,IAAI,OAAA,EACnC,aAAY,UAAU,MAAM,IAAI,SAAS,oBAAI,IAAI,CAAC,EAAG,CAAA,CAAA;UAGrD,mBAAY,UAAU,MAAM,IAAI,OAAA,MAAhC,mBAA0C,IAAI;IAGnD,CAAA;AACD,gBAAY,MAAM;AAChB,kBAAY,SAAS,MAAM,OAAO,EAAA;IACnC,CAAA;;aAKS,SAAA,SAAA,UAAA,GADR,YAmBc,MAAA,mBAAA,GAnBd,WAmBc,EAAA,KAAA,EAAA,GAjBJA,QAAK;QACZ,IAAI,MAAA,EAAA;iBACD;QAAJ,KAAI;QACH,UAAU,MAAA,WAAA,EAAY,SAAS,SAASE,KAAAA;QACxC,UAAM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;AAAa,gBAAK,UAAW,KAAA;cAAwB,MAAM,iBAAA;eAA6C,MAAA,WAAA,EAAY,SAAS,SAAA,CAAUA,KAAAA,YAAAA,CAAa,MAAA,WAAA,EAAY,SAAS,OAAK;AAAY,kBAAM,eAAA;AAAyB,kBAAA,WAAA,EAAY,aAAY,KAAA;AAAgB,kBAAA,WAAA,EAAY,WAAW,QAAQF,OAAM;;;;yBAYrT,MAAwB,CAAxB,WAAwB,KAAA,QAAA,WAAA,CAAA,GAAxB,MAAwB,CAAA,gBAAA,gBAAfG,KAAAA,KAAAA,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEtFlB,UAAMC,SAAQ;;0BAMZ,YAIuB,MAAA,4BAAA,GAAA,eAAA,mBAHbA,MAAA,CAAK,GAAA;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAM,eAAe,2BAA2B;MAAE,IAAI;MAAI,SAAS;IAAI,CAAA;AAEvE,iBAAa,YAAb,aAAa,UAAYC,OAAA,QAAiB,2BAAA;;0BAIxC,YAKY,MAAA,SAAA,GALZ,WACUD,QAAK,EACZ,IAAI,MAAA,YAAA,EAAa,QAAA,CAAA,GAAA;yBAElB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBZ,UAAME,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACb,eAAY,OAAM,CAAA,GAAA;yBAElB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;AAId,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,cAAc,0BAAA;AACpB,UAAM,WAAW,SAAS,MAAMA,OAAM,YAAY,YAAY,SAAS,SAAS,KAAA;AAEhF,cAAU,MAAM;AACd,UAAI,eAAe,MACjB,aAAY,uBAAuB,eAAe,KAAA;IACrD,CAAA;;0BAIC,YAgBY,MAAA,SAAA,GAhBZ,WACUA,QAAK;QACZ,KAAK,MAAA,UAAA;QACL,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACT,UAAS;QACT,cAAW;QACX,iBAAc;QACb,iBAAe,MAAA,WAAA,EAAY,KAAK;QAChC,iBAAe,MAAA,WAAA,EAAY;QAC3B,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;QAClC,UAAU,SAAA;QACV,iBAAe,SAAA,QAAQ,KAAA;QACvB,iBAAe,SAAA,SAAA;QACf,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAA,CAAc,MAAA,WAAA,EAAY,KAAK,KAAA;;yBAEnD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;AEzCZ,SAAgB,SAASC,OAAiC;AACxD,QAAMC,WAAU,4BAA4B,EAC1C,OAAO,IAAA,EACR,CAAA;AACD,SAAO,SAAS,MAAA;;AAAM,2CAAO,YAAS,KAAAA,SAAQ,UAAR,mBAAe;GAAA;AACtD;;;;;;;;;;;;;;;;;;;;ACSD,UAAMC,SAAQ;AACd,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,EAAE,OAAO,UAAA,IAAc,OAAOA,MAAA;AACpC,UAAM,QAAQ,SAAS,SAAA;AAEvB,UAAM,cAAc,0BAAA;;8DAIlB,YAeY,MAAA,SAAA,GAfZ,WAeY;QAAA,GAdGC,KAAAA;QAAM,GAAKD;MAAK,GAAA;QAC5B,KAAK,MAAA,UAAA;QACN,+BAAA;QACA,MAAK;QACJ,OAAK;;gBAAqQ,MAAA,WAAA,EAAY,UAAU,QAAA,SAAiB;;;;yBASlT,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;yBAEV,YAQY,MAAA,SAAA,GAAA;QAPV,IAAG;QACF,OAAO,MAAA,KAAA;;yBACT,MAKD,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,gBALC,6QAAA,CAKD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzCF,UAAME,SAAQ;AAUd,UAAM,cAAc,0BAAA;AAEpB,gBAAY,UAAU,QAAQ;;0BAI5B,YAKqB,4BAAA,eAAA,mBAHXA,MAAA,CAAK,GAAA;yBAEb,CAHQ,cAAS,CAGjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEzB3B,UAAMC,SAAQ;;0BAIZ,YAEe,MAAA,oBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACzB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEFZ,UAAMC,SAAQ;;0BAIZ,YAEc,MAAA,mBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACxB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEXZ,SAAS,yBAAyB;AAChC,QAAM,kBAAkB,IAAI,KAAA;AAE5B,YAAU,MAAM;AAGd,qBAAiB,WAAW,MAAM;AAChC,sBAAgB,QAAQ;IACzB,GAAE;MAAE,SAAS;MAAM,SAAS;IAAM,CAAA;AAEnC,qBAAiB,CAAC,eAAe,aAAc,GAAE,MAAM;AACrD,sBAAgB,QAAQ;IACzB,GAAE;MAAE,SAAS;MAAM,SAAS;IAAM,CAAA;EACpC,CAAA;AAED,SAAO;AACR;AAED,IAAa,qBAAqB,uBAAuB,sBAAA;;;ACoBzD,IAAa,CAAC,mBAAmB,kBAAA,IAC7B,cAA2B,CAAC,YAAY,SAAU,GAAE,aAAA;AAExD,IAAa,CAAC,uBAAuB,sBAAA,IACjC,cAA+B,UAAA;;;;;;;;;;;;;;;;;;;;;AAWnC,UAAMC,SAAQ;AAId,UAAM,QAAQ;AACd,UAAM,EAAE,OAAO,KAAK,QAAA,IAAY,OAAOA,MAAA;AACvC,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,OAAO,UAAUA,QAAO,QAAQ,KAAA;AAEtC,UAAM,UAAU,IAAA;AAChB,UAAM,qBAAqB,mBAAA;AAE3B,uBAAmB;MACjB;MACA,cAAc,CAAC,UAAU;AACvB,aAAK,QAAQ;MACd;MACD;MACA,iBAAiB,CAAC,YAAY;AAC5B,gBAAQ,QAAQ;MACjB;IACF,CAAA;AAED,2BAAuB;MACrB,SAAS,MAAM;AACb,aAAK,QAAQ;MACd;MACD;MACA;MACA;IACD,CAAA;;0BAIC,YAEa,MAAA,kBAAA,GAAA,MAAA;yBADX,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AE3DZ,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAkC,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EtC,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AACd,UAAM,cAAc,kBAAA;AACpB,UAAM,cAAc,sBAAA;AAEpB,UAAM,EAAE,WAAW,6BAA6B,KAAA,IAAS,OAAOA,MAAA;AAEhE,mBAAA;AACA,sBAAkB,4BAA4B,KAAA;AAE9C,UAAM,YAAY,IAAI,EAAA;AACtB,UAAM,WAAW,IAAI,CAAA;AACrB,UAAM,uBAAuB,IAAI,CAAA;AACjC,UAAM,wBAAwB,IAAwB,IAAA;AACtD,UAAM,gBAAgB,IAAU,OAAA;AAChC,UAAM,kBAAkB,IAAI,CAAA;AAC5B,UAAM,gBAAgB,IAAmB,IAAA;AAEzC,UAAM,sBAAsB,IAAA;AAC5B,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AACvD,UAAM,EAAE,sBAAA,IAA0B,aAAA;AAElC,UAAM,gBAAgB,CAAC,OAAO;AAC5B,kBAAa,gBAAgB,EAAA;IAC9B,CAAA;AAED,gBAAY,MAAM;AAChB,aAAO,aAAa,SAAS,KAAA;IAC9B,CAAA;AAED,aAAS,yBAAyB,OAAqB;;AACrD,YAAM,kBACF,cAAc,YAAU,2BAAsB,UAAtB,mBAA6B;AAEzD,aACE,mBACG,qBAAqB,QAAO,2BAAsB,UAAtB,mBAA6B,IAAA;IAEhE;AAEA,mBAAe,qBAAqB,OAAc;;AAChD,YAAM,iBAAiB,KAAA;AACvB,UAAI,MAAM,iBACR;AAGF,YAAM,eAAA;AACN,2BAAe,UAAf,mBAAsB,MAAM,EAC1B,eAAe,KAChB;IACH;AAEA,aAAS,cAAc,OAAsB;;AAC3C,UAAI,MAAM,iBACR;AAEF,YAAM,SAAS,MAAM;AACrB,YAAM,kBACF,OAAO,QAAQ,0BAAA,MAAgC,MAAM;AACzD,YAAM,gBAAgB,MAAM,WAAW,MAAM,UAAU,MAAM;AAC7D,YAAM,iBAAiB,MAAM,IAAI,WAAW;AAE5C,YAAM,KAAK,mBACT,OACA,iBAAA,GACA,eAAe,OACf;QACE,MAAM,KAAK;QACX,iBAAiB;QACjB,KAAK,2CAAa,IAAI;QACtB,OAAO;QACP,eAAe;MAChB,CAAA;AAEH,UAAI,GACF,QAAO,yBAAI;AAGb,UAAI,MAAM,SAAS,QACjB;AAEF,YAAM,oBAAkB,yBAAoB,UAApB,mBAA2B,eAAc,CAAC;AAElE,UAAI,iBAAiB;AAEnB,YAAI,MAAM,QAAQ,MAChB,OAAM,eAAA;AACR,YAAA,CAAK,iBAAiB,eACpB,uBAAsB,MAAM,KAAK,eAAA;MACrC;AAGA,UAAI,MAAM,WAAW,eAAe,MAClC;AACF,UAAA,CAAK,gBAAgB,SAAS,MAAM,GAAA,EAClC;AACF,YAAM,eAAA;AACN,YAAM,iBAAiB,CAAC,GAAG,gBAAgB,IAAI,CAAA,SAAQ,KAAK,GAAA,CAAI;AAChE,UAAI,UAAU,SAAS,MAAM,GAAA,EAC3B,gBAAe,QAAA;AACjB,MAAAC,YAAW,cAAA;IACb;AAEA,aAAS,WAAW,OAAmB;;AAGrC,UAAA,GAAK,0CAAO,kBAAP,mBAAsB,aAAtB,4BAAiC,MAAM,UAAS;AACnD,eAAO,aAAa,SAAS,KAAA;AAC7B,kBAAU,QAAQ;MACpB;IACF;AAEA,aAASC,mBAAkB,OAAqB;;AAC9C,UAAA,CAAK,aAAa,KAAA,EAChB;AACF,YAAM,SAAS,MAAM;AACrB,YAAM,qBAAqB,gBAAgB,UAAU,MAAM;AAI3D,YACG,oCAAO,kBAAP,mBAAsC,SAAS,YAC7C,oBACH;AACA,cAAM,SAAS,MAAM,UAAU,gBAAgB,QAAQ,UAAU;AACjE,sBAAc,QAAQ;AACtB,wBAAgB,QAAQ,MAAM;MAChC;IACF;AAEA,8BAA0B;MACxB,aAAa,CAAC,UAAU;AAEtB,YAAI,yBAAyB,KAAA,EAC3B,QAAO;YAEP,QAAO;MACV;MACD,aAAa,CAAC,UAAU;;AACtB,YAAI,yBAAyB,KAAA,EAC3B;AACF,6BAAe,UAAf,mBAAsB;AACtB,sBAAc,QAAQ;MACvB;MACD,gBAAgB,CAAC,UAAU;AAEzB,YAAI,yBAAyB,KAAA,EAC3B,QAAO;YAEP,QAAO;MACV;MACD;MACA;MACA,4BAA4B,CAAC,WAAW;AACtC,8BAAsB,QAAQ;MAC/B;IACF,CAAA;;0BAIC,YA2Da,MAAA,kBAAA,GAAA;QA1DX,YAAA;QACC,SAAS,MAAA,SAAA;QACT,kBAAkB;QAClB,oBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,kBAAmB,MAAA;;yBAE7C,MAoDmB,CApDnB,YAoDmB,MAAA,wBAAA,GAAA;UAnDjB,YAAA;UACC,kCAAgC,MAAA,2BAAA;UAChC,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;UACxC,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,sBAAuB,MAAA;UAClD,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,gBAAiB,MAAA;UACrC,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,mBAAoB,MAAA;UAC3C,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,SAAA;;2BAEf,MA0CmB,CA1CnB,YA0CmB,MAAA,wBAAA,GAAA;qBAzCb;YAAJ,KAAI;YACI,uBAAqB,cAAA;+EAAA,cAAa,QAAA;YAC1C,YAAA;YACA,aAAY;YACX,KAAK,MAAA,WAAA,EAAY,IAAI;YACrB,MAAM,MAAA,IAAA;YACN,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;AAAiB,oBAAK,cAAe,KAAA;mBAA6E,MAAA,WAAA,EAAY,mBAAmB,MAAO,OAAM,eAAA;;;6BAMlL,MA4BgB,CA5BhB,YA4BgB,MAAA,qBAAA,GAAA;cA3Bb,KAAK,MAAA,UAAA;cACN,MAAK;cACJ,IAAIC,KAAAA;cACJ,YAAUC,KAAAA;cACX,oBAAiB;cACjB,0BAAA;cACC,cAAY,MAAA,YAAA,EAAa,MAAA,WAAA,EAAY,KAAK,KAAA;cAC1C,KAAK,MAAA,WAAA,EAAY,IAAI;cACrB,MAAMC,KAAAA;cACN,eAAaC,KAAAA;cACb,OAAOC,KAAAA;cACP,gBAAcC,KAAAA;cACd,oBAAkBC,KAAAA;cAClB,sBAAoBC,KAAAA;cACpB,qBAAmBC,KAAAA;cACnB,iBAAeC,KAAAA;cACf,uBAAqBC,KAAAA;cACrB,qBAAmBC,KAAAA;cACnB,4BAA0BC,KAAAA;cAC1B,QAAQC,KAAAA;cACR,sBAAoBC,KAAAA;cACpB,WAAWC,KAAAA;cACX,WAAS;cACT,QAAM;cACN,eAAahB;;+BAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3SlB,UAAMiB,SAAQ;AAEd,UAAM,iBAAiB,yBAAA;AACvB,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,EAAE,eAAA,IAAmB,cAAA;AAE3B,UAAM,YAAY,IAAI,KAAA;AAEtB,mBAAeC,mBAAkB,OAAqB;AACpD,UAAI,MAAM,iBACR;AACF,UAAA,CAAK,aAAa,KAAA,EAChB;AAEF,UAAID,OAAM,SACR,gBAAe,YAAY,KAAA;WAExB;AACH,cAAM,mBAAmB,eAAe,YAAY,KAAA;AACpD,YAAA,CAAK,kBAAkB;AACrB,gBAAM,OAAO,MAAM;AAClB,uCAAsB,MAAM,EAAE,eAAe,KAAM;QACtD;MACF;IACF;AAEA,mBAAe,mBAAmB,OAAqB;AACrD,YAAM,SAAA;AACN,UAAI,MAAM,iBACR;AACF,UAAA,CAAK,aAAa,KAAA,EAChB;AAEF,qBAAe,YAAY,KAAA;IAC7B;;0BAIE,YA8BiB,MAAA,cAAA,GAAA,EA9BA,OAAK,EAAA,WAAIE,KAAAA,UAAS,EAAA,GAAA;yBACjC,MA4BY,CA5BZ,YA4BY,MAAA,SAAA,GA5BZ,WA4BY;UA3BT,KAAK,MAAA,UAAA;UACN,MAAK;UACL,UAAS;WACDC,KAAAA,QAAM;UACb,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,iBAAeC,KAAAA,YAAAA;UACf,iBAAeA,KAAAA,WAAQ,KAAA;UACvB,oBAAkB,UAAA,QAAS,KAAA;UAC3B,eAAaL;UACb,gBAAc;UACd,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAkB,UAAK;kBAAuB,SAAA;gBAA0B,MAAM,oBAAoBK,KAAAA,SAAQ;AAAoB,sBAAA,QAAS;;UAO5I,QAAI,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAkB,UAAK;kBAAuB,SAAA;gBAA0B,MAAM,iBAAgB;AAAoB,sBAAA,QAAS;;;2BAQhI,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExEd,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,cAAc,sBAAA;AACpB,UAAM,iBAAiB,yBAAA;AAEvB,UAAM,mBAAmB,IAAI,KAAA;AAE7B,mBAAeC,gBAAe;AAC5B,YAAM,WAAW,eAAe;AAChC,UAAA,CAAKD,OAAM,YAAY,UAAU;AAC/B,cAAM,kBAAkB,IAAI,YAAY,aAAa;UACnD,SAAS;UACT,YAAY;QACb,CAAA;AACD,cAAM,UAAU,eAAA;AAEhB,cAAM,SAAA;AACN,YAAI,gBAAgB,iBAClB,kBAAiB,QAAQ;YACtB,aAAY,QAAA;MACnB;IACF;;0BAIE,YAqCe,sBArCf,WACUA,QAAK;QACZ,KAAK,MAAA,UAAA;QACL,SAAOC;QACP,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;AAAyB,2BAAA,QAAgB;;QAKpD,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAgB,UAAK;;gBAAqB,SAAA;cAAwB,MAAM,iBAAgB;eAAuT,iBAAA,MAAkB,aAAM,kBAAN,mBAAqB;;QAU/b,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAgB,UAAK;gBAAqB,gBAAgB,MAAA,cAAA,EAAe,UAAU,UAAK;cAAqBC,KAAAA,YAAa,iBAAiB,MAAM,QAAG,IAAA;cAA+B,MAAA,cAAA,EAAe,SAAS,MAAM,GAAA,GAAG;AAAe,kBAAM,cAAc,MAAA;AAAiU,kBAAM,eAAA;;;;yBAiBtkB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEnEZ,IAAa,CAAC,gCAAgC,+BAAA,IAC1C,cACA,CAAC,oBAAoB,eAAgB,GACrC,0BAAA;;;;;;;;;;;;;;;;;;;AAcJ,UAAM,mBAAmB,+BAA+B,EACtD,YAAY,IAAI,KAAA,EACjB,CAAA;;0BAIC,YAcW,MAAA,gBAAA,GAAA,EAbR,SAAgBC,KAAAA,cAAsB,MAAA,eAAA,EAAgB,MAAA,gBAAA,EAAiB,WAAW,KAAA,KAAkB,MAAA,gBAAA,EAAiB,WAAW,UAAK,KAAA,GAAA;yBAMtI,MAMY,CANZ,YAMY,MAAA,SAAA,GAAA;UALT,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,cAAY,MAAA,eAAA,EAAgB,MAAA,gBAAA,EAAiB,WAAW,KAAA;;2BAEzD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5Bd,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AASd,UAAM,iBAAiB,aAAaA,QAAO,CAAC,YAAa,CAAA;AACzD,UAAM,YAAY,gBAAgB,cAAA;AAElC,UAAM,aAAa,UAAUA,QAAO,cAAc,KAAA;AAElD,oCAAgC,EAAE,WAAY,CAAA;;0BAI5C,YAkBW,kBAlBX,WAkBW,EAjBT,MAAK,mBAAkB,GACf,MAAA,SAAA,GAAS;QAChB,gBAAc,MAAA,eAAA,EAAgB,MAAA,UAAA,CAAU,IAAA,UAAc,MAAA,UAAA;QACtD,cAAY,MAAA,eAAA,EAAgB,MAAA,UAAA,CAAU;QACtC,UAAM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAgB,UAAK;AAAe,gBAAK,UAAW,KAAA;cAAoB,MAAA,eAAA,EAAgB,MAAA,UAAA,CAAU,EAAe,YAAA,QAAU;cAA4C,YAAA,QAAA,CAAc,MAAA,UAAA;;;yBAY5L,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzDlC,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAE9C,UAAM,cAAc,kBAAA;AAKpB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,kBAAc,cAAA;;0BAIZ,YAUkB,yBAVlB,WACU,MASQ,SAAA,GATC;QAChB,KAAK,MAAA,UAAA;QACL,cAAY,MAAA,WAAA,EAAY,KAAK;QAC7B,kCAAgC,MAAA,WAAA,EAAY,KAAK;QACjD,0BAAwB;QACxB,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAY,KAAA;QACjC,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAA,WAAU,MAAK,gBAAiB,MAAA,GAAM,CAAA,SAAA,CAAA;;yBAEpD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvBZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAE9C,UAAM,cAAc,kBAAA;;0BAOlB,YAQkB,yBARlB,WACU,MAOQ,SAAA,GAPC;QAChB,cAAY;QACZ,kCAAgC;QAChC,0BAAwB;QACxB,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAY,KAAA;;yBAElC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAE9C,UAAM,cAAc,kBAAA;AACpB,UAAM,cAAc,sBAAA;;0BAIlB,YAaW,MAAA,gBAAA,GAAA,EAbA,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK,MAAA,GAAA;yBACjD,MAKuB,CAJf,MAAA,WAAA,EAAY,MAAM,SAAA,UAAA,GAD1B,YAKuB,8BAAA,eAAA,WAAA,EAAA,KAAA,EAAA,GAAA;UAAA,GAHRC,KAAAA;UAAM,GAAK,MAAA,SAAA;QAAS,CAAA,CAAA,GAAA;2BAEjC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;gCAEV,YAK0B,iCAAA,eAAA,WAAA,EAAA,KAAA,EAAA,GAAA;UAAA,GAHXA,KAAAA;UAAM,GAAK,MAAA,SAAA;QAAS,CAAA,CAAA,GAAA;2BAEjC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AEnCd,UAAMC,SAAQ;;0BAIZ,YAKY,MAAA,SAAA,GALZ,WAKY,EAJV,MAAK,QAAO,GACJA,MAAA,GAAK;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AERZ,UAAMC,SAAQ;;0BAMZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPZ,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEMZ,IAAa,CAAC,6BAA6B,4BAAA,IACvC,cAAqC,gBAAA;;;;;;;;;;;;;;;;;;;;AAOzC,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AASd,UAAM,iBAAiB,aAAaA,QAAO,CAAC,YAAa,CAAA;AACzD,UAAM,YAAY,gBAAgB,cAAA;AAElC,UAAM,aAAa,UAAUA,QAAO,cAAc,KAAA;AAElD,iCAA6B;MAC3B;MACA,eAAe,CAAC,YAAY;AAC1B,mBAAW,QAAQ;MACpB;IACF,CAAA;;0BAIC,YAEY,mBAAA,eAAA,mBAFO,MAAA,SAAA,CAAS,CAAA,GAAA;yBAC1B,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhClC,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,iBAAiB,aAAaA,QAAO,CAAC,OAAQ,CAAA;AACpD,UAAM,YAAY,gBAAgB,cAAA;AAElC,UAAM,EAAE,MAAA,IAAU,OAAOA,MAAA;AACzB,UAAM,oBAAoB,4BAAA;AAC1B,UAAM,aAAa,SACjB,MAAM,kBAAkB,WAAW,WAAU,+BAAO,MAAA;AAGtD,oCAAgC,EAAE,WAAY,CAAA;;0BAI5C,YAaW,kBAbX,WAaW,EAZT,MAAK,gBAAe,GACZ,MAAA,SAAA,GAAS;QAChB,gBAAc,WAAA;QACd,cAAY,MAAA,eAAA,EAAgB,WAAA,KAAA;QAC5B,UAAM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAgB,UAAK;AAAe,gBAAK,UAAW,KAAA;AAAgB,gBAAA,iBAAA,EAAkB,cAAc,MAAA,KAAA,CAAK;;;yBAOhH,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AE1CZ,UAAMC,SAAQ;;0BAIZ,YAMY,MAAA,SAAA,GANZ,WACUA,QAAK;QACb,MAAK;QACL,oBAAiB;;yBAEjB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AELZ,IAAa,CAAC,sBAAsB,qBAAA,IAChC,cAA8B,SAAA;;;;;;;;;;AAsBlC,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,OAAO,UAAUA,QAAO,QAAQ,OAAO;MAC3C,cAAc;MACd,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,oBAAoB,kBAAA;AAC1B,UAAM,UAAU,IAAA;AAChB,UAAM,UAAU,IAAA;AAGhB,gBAAY,CAAC,cAAc;AACzB,WAAI,uDAAmB,KAAK,WAAU,MACpC,MAAK,QAAQ;AACf,gBAAU,MAAO,KAAK,QAAQ,KAAA;IAC/B,CAAA;AAED,uBAAmB;MACjB;MACA,cAAc,CAAC,UAAU;AACvB,aAAK,QAAQ;MACd;MACD;MACA,iBAAiB,CAAC,YAAY;AAC5B,gBAAQ,QAAQ;MACjB;IACF,CAAA;AAED,0BAAsB;MACpB,WAAW;MACX,WAAW;MACX;MACA,iBAAiB,CAAC,YAAY;AAC5B,gBAAQ,QAAQ;MACjB;IACF,CAAA;;0BAIC,YAEa,MAAA,kBAAA,GAAA,MAAA;yBADX,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtDZ,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAE9C,UAAM,cAAc,kBAAA;AACpB,UAAM,cAAc,sBAAA;AACpB,UAAM,iBAAiB,qBAAA;AAEvB,UAAM,EAAE,YAAY,gBAAgB,kBAAA,IAAsB,iBAAA;AAE1D,mBAAe,cAAf,eAAe,YAAcC,OAAA,QAAiB,uBAAA;;0BAI5C,YA+CW,MAAA,gBAAA,GAAA,EA/CA,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK,MAAA,GAAA;yBACjD,MA6CkB,CA7ClB,YA6CkB,yBA7ClB,WACU,MA4CQ,SAAA,GA5CC;UAChB,IAAI,MAAA,cAAA,EAAe;UACnB,KAAK,MAAA,UAAA;UACL,mBAAiB,MAAA,cAAA,EAAe;UACjC,OAAM;UACL,MAAM,MAAA,WAAA,EAAY,IAAI,UAAK,QAAA,SAAA;UAC3B,kCAAgC;UAChC,0BAAwB;UACxB,cAAY;UACZ,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAW,UAAK;;gBAA4F,MAAA,WAAA,EAAY,mBAAmB,MAAO,aAAA,iBAAA,MAAA,mBAAmB;;UAIpL,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAjB,MAAA;UAAyB,GAAA,CAAA,SAAA,CAAA;UACxB,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAY,UAAK;gBAAqB,MAAM,iBAAgB;gBAAiK,MAAM,WAAW,MAAA,cAAA,EAAe,QAAQ,MAAmB,OAAA,WAAA,EAAY,aAAY,KAAA;;UAS7T,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAY,UAAK;AAAiB,kBAAA,WAAA,EAAY,QAAA;AAAoG,kBAAM,eAAA;;UAOvK,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAoB;;kBAAiH,mBAAmB,WAAM,kBAAN,mBAAqC,SAAS,MAAM;kBAAsC,aAAa,MAAA,cAAA,EAAe,MAAA,WAAA,EAAY,IAAI,KAAA,EAAO,SAAS,MAAM,GAAA;gBAAkB,mBAAmB,YAAU;AAAc,oBAAA,WAAA,EAAY,aAAY,KAAA;AAAgG,0BAAA,cAAA,EAAe,QAAQ,UAAvB,mBAA8B;AAA8D,oBAAM,eAAA;;;;2BAatlB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtEd,UAAMC,SAAQ;AAEd,UAAM,cAAc,kBAAA;AACpB,UAAM,cAAc,sBAAA;AACpB,UAAM,aAAa,qBAAA;AACnB,UAAM,iBAAiB,yBAAA;AAEvB,UAAM,eAAe,IAAmB,IAAA;AAExC,eAAW,cAAX,WAAW,YAAcC,OAAA,QAAiB,uBAAA;AAE1C,aAAS,iBAAiB;AACxB,UAAI,aAAa,MACf,QAAO,aAAa,aAAa,KAAA;AACnC,mBAAa,QAAQ;IACvB;AAEA,gBAAY,MAAM;AAChB,qBAAA;IACD,CAAA;AAED,aAASC,mBAAkB,OAAqB;AAC9C,UAAA,CAAK,aAAa,KAAA,EAChB;AACF,YAAM,mBAAmB,eAAe,YAAY,KAAA;AACpD,UAAI,iBACF;AAEF,UAAA,CAAKF,OAAM,YAAA,CAAa,YAAY,KAAK,SAAA,CAAU,aAAa,OAAO;AACrE,uBAAe,2BAA2B,IAAA;AAC1C,qBAAa,QAAQ,OAAO,WAAW,MAAM;AAC3C,sBAAY,aAAa,IAAA;AACzB,yBAAA;QACD,GAAE,GAAA;MACL;IACF;AAEA,mBAAe,mBAAmB,OAAqB;;AACrD,UAAA,CAAK,aAAa,KAAA,EAChB;AACF,qBAAA;AAEA,YAAM,eAAc,iBAAY,QAAQ,UAApB,mBAA2B;AAC/C,UAAI,2CAAa,OAAO;AAGtB,cAAM,QAAO,iBAAY,QAAQ,UAApB,mBAA2B,QAAQ;AAEhD,cAAM,YAAY,SAAS;AAC3B,cAAM,QAAQ,YAAY,KAAK;AAC/B,cAAM,kBAAkB,YAAY,YAAY,SAAS,OAAA;AACzD,cAAM,iBAAiB,YAAY,YAAY,UAAU,MAAA;AAEzD,uBAAe,2BAA2B;UACxC,MAAM;YAGJ;cAAE,GAAG,MAAM,UAAU;cAAO,GAAG,MAAM;YAAS;YAC9C;cAAE,GAAG;cAAiB,GAAG,YAAY;YAAK;YAC1C;cAAE,GAAG;cAAgB,GAAG,YAAY;YAAK;YACzC;cAAE,GAAG;cAAgB,GAAG,YAAY;YAAQ;YAC5C;cAAE,GAAG;cAAiB,GAAG,YAAY;YAAQ;UAC9C;UACD;QACD,CAAA;AAED,eAAO,aAAa,eAAe,qBAAqB,KAAA;AACxD,uBAAe,qBAAqB,QAAQ,OAAO,WACjD,MAAM,eAAe,2BAA2B,IAAA,GAChD,GAAA;MAEJ,OACK;AACH,cAAM,mBAAmB,eAAe,eAAe,KAAA;AACvD,YAAI,iBACF;AAGF,uBAAe,2BAA2B,IAAA;MAC5C;IACF;AAEA,mBAAe,cAAc,OAAsB;;AACjD,YAAM,gBAAgB,eAAe,UAAU,UAAU;AACzD,UAAIA,OAAM,YAAa,iBAAiB,MAAM,QAAQ,IACpD;AACF,UAAI,cAAc,YAAY,IAAI,KAAA,EAAO,SAAS,MAAM,GAAA,GAAM;AAC5D,oBAAY,aAAa,IAAA;AAEzB,cAAM,SAAA;AAGN,0BAAY,QAAQ,UAApB,mBAA2B;AAE3B,cAAM,eAAA;MACR;IACF;;0BAIE,YAiCa,oBAAA,EAjCD,YAAA,GAAQ,GAAA;yBAClB,MA+Be,CA/Bf,YA+Be,sBA/Bf,WACUA,QAAK;UACZ,IAAI,MAAA,UAAA,EAAW;UACf,KAAA,CAAe,UAA8B;;AAAyC,wBAAA,UAAA,MAAA,mBAAY,gBAAgB,+BAAO;;;UAO1H,iBAAc;UACb,iBAAe,MAAA,WAAA,EAAY,KAAK;UAChC,iBAAe,MAAA,UAAA,EAAW;UAC1B,cAAY,MAAA,YAAA,EAAa,MAAA,WAAA,EAAY,KAAK,KAAA;UAC1C,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAkB,UAAK;gBAAqBA,OAAM,YAAY,MAAM,iBAAgB;AAAiR,kBAAM,cAAc,MAAA;iBAAwB,MAAA,WAAA,EAAY,KAAK,MAAO,OAAA,WAAA,EAAY,aAAY,IAAA;;UAYtc,eAAaE;UACb,gBAAc;UACd,WAAS;;2BAEV,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3Id,UAAMC,SAAQ;AAMd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEmB,MAAA,wBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBACnD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AECZ,IAAa,CAAC,8BAA8B,6BAAA,IACxC,cAAsC,iBAAA;;;;;;;;;;;;;;;;;;;;;;AAW1C,UAAMC,SAAQ;AAId,UAAM,QAAQ;AACd,UAAM,EAAE,KAAK,SAAS,OAAO,eAAA,IAAmB,OAAOA,MAAA;AACvD,qBAAA;AACA,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,OAAO,IAAI,KAAA;AACjB,UAAM,iBAAiB,IAAA;AAEvB,kCAA8B;MAC5B;MACA,cAAc,CAAC,UAAmB;AAChC,aAAK,QAAQ;MACd;MACD;MACA;MACA;MACA;IACD,CAAA;AAED,UAAM,MAAM,CAAC,UAAU;AACrB,YAAM,eAAe,KAAA;IACtB,CAAA;;0BAIC,YAMW,MAAA,gBAAA,GAAA;QALD,MAAM,KAAA;+DAAA,KAAI,QAAA;QACjB,KAAK,MAAA,GAAA;QACL,OAAO,MAAA,KAAA;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9CZ,UAAMC,SAAQ;AAQd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAE9C,qBAAA;AACA,UAAM,cAAc,6BAAA;AACpB,UAAM,uBAAuB,IAAI,KAAA;;0BAI/B,YAsCc,MAAA,mBAAA,GAtCd,WACU,MAqCI,SAAA,GArCK;QACjB,MAAK;QACJ,eAAa;QACd,OAAM;QACN,4BAAyB;QACxB,OAAO;;;;;;QAUP;QACA,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;eAAoB,MAAM,oBAAoB,qBAAA,MAAkC,OAAM,eAAA;AAAoC,+BAAA,QAAoB;;QAQ7K,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;gBAAqB,gBAAgB,MAAM,OAAO;cAA0H,cAAc,WAAM,KAAU,MAAM,WAAW,MAAA,WAAA,EAAY,eAAe,MAAmB,OAAM,eAAA;eAAwC,MAAM,oBAAA,CAAqB,MAAA,WAAA,EAAY,MAAM,MAAiB,sBAAA,QAAoB;;;yBAYza,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AErEZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEW,MAAA,gBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBAC3C,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEXZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEoB,MAAA,yBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXZ,UAAMC,SAAQ;;0BAIZ,YAEa,MAAA,kBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACvB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEKZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEiB,MAAA,sBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBACjD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AETZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBAChD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEdZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC1B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AEAZ,UAAMC,SAAQ;AAGd,UAAM,OAAO;AASb,qBAAA;AAEA,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;;0BAIC,YAEU,MAAA,eAAA,GAAA;QAFO,MAAM,MAAA,IAAA;6EAAA,KAAI,QAAA,SAAA;;yBACzB,MAAqB,CAArB,WAAqB,KAAA,QAAA,WAAA,EAAd,MAAM,MAAA,IAAA,EAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBrB,UAAMC,SAAQ;AAEd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,qBAAA;;0BAIE,YAeiB,MAAA,sBAAA,GAfjB,WACU,MAcO,SAAA,GAdE,EAChB,OAAO;;;;;;MAUP,EAAA,CAAA,GAAA;yBAED,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1BZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEiB,MAAA,sBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC3B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEhBZ,SAAgB,aAAaC,OAAqB;AAChD,SAAO,MAAM,gBAAgB;AAC9B;;;;;;;;;;;;;;;;;;;;;;;ACwBD,UAAMC,SAAQ;AAId,UAAM,EAAE,SAAA,IAAa,OAAOA,MAAA;AAE5B,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,cAAc,6BAAA;AACpB,UAAM,QAAQ,IAAW;MAAE,GAAG;MAAG,GAAG;IAAG,CAAA;AACvC,UAAM,YAAY,SAAS,OAAO,EAChC,uBAAuB,OACpB;MACC,OAAO;MACP,QAAQ;MACR,MAAM,MAAM,MAAM;MAClB,OAAO,MAAM,MAAM;MACnB,KAAK,MAAM,MAAM;MACjB,QAAQ,MAAM,MAAM;MACpB,GAAG,MAAM;IACV,GACJ,EAAA;AAED,UAAM,iBAAiB,IAAI,CAAA;AAC3B,aAAS,iBAAiB;AACxB,aAAO,aAAa,eAAe,KAAA;IACrC;AAEA,aAAS,WAAW,OAAkC;AACpD,YAAM,QAAQ;QAAE,GAAG,MAAM;QAAS,GAAG,MAAM;MAAQ;AACnD,kBAAY,aAAa,IAAA;IAC3B;AAEA,mBAAe,kBAAkB,OAAqB;AACpD,UAAA,CAAK,SAAS,OAAO;AACnB,cAAM,SAAA;AACN,YAAA,CAAK,MAAM,kBAAkB;AAC3B,yBAAA;AACA,qBAAW,KAAA;AACX,gBAAM,eAAA;QACR;MACF;IACF;AAEA,mBAAeC,mBAAkB,OAAqB;AACpD,UAAA,CAAK,SAAS,OAAO;AACnB,cAAM,SAAA;AAEN,YAAI,aAAa,KAAA,KAAM,CAAK,MAAM,kBAAkB;AAElD,yBAAA;AACA,yBAAe,QAAQ,OAAO,WAC5B,MAAM,WAAW,KAAA,GACjB,YAAY,eAAe,KAAA;QAE/B;MACF;IACF;AAEA,mBAAe,mBAAmB,OAAqB;AACrD,UAAA,CAAK,SAAS,OAAO;AACnB,cAAM,SAAA;AACN,YAAI,aAAa,KAAA,KAAM,CAAK,MAAM,iBAChC,gBAAA;MACJ;IACF;AAEA,cAAU,MAAM;AACd,UAAI,eAAe,MACjB,aAAY,eAAe,QAAQ,eAAe;IAErD,CAAA;;8DAIC,YAGE,MAAA,kBAAA,GAAA;QAFA,IAAG;QACF,WAAW,UAAA;kCAGd,YAkBY,MAAA,SAAA,GAlBZ,WAkBY;QAjBT,KAAK,MAAA,UAAA;QACL,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;QAClC,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,OAAO;;;QAGP;SACOC,KAAAA,QAAM;QACb,eAAa;QACb,eAAaH;QACb,eAAa;QACb,iBAAe;QACf,aAAW;;yBAEZ,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;AEzCZ,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaxC,UAAMI,SAAQ;AAOd,UAAM,QAAQ;AAYd,UAAM,EAAE,UAAU,UAAU,mBAAmB,wBAAwB,aAAa,cAAc,KAAK,SAAS,QAAQ,WAAA,IAAe,OAAOA,MAAA;AAC9I,UAAM,SAAS,UAAU,UAAA;AACzB,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,YAAY,iBAAiB,OAAO,OAAO,EAC/C,WAAW,mBAAmBA,OAAM,SAAA,EACrC,CAAA;AACD,UAAM,EAAE,kBAAkB,gBAAgB,cAAA,IACtC,oBAAA;AACJ,UAAM,kBAAkB,IAAsB,oBAAI,IAAA,CAAA;AAElD,cAAU,MAAM;AACd,yBAAmB,cAAc,KAAA,EAAO,QAAQ,CAAA,SAAQ,gBAAgB,MAAM,IAAI,IAAA,CAAoB;IACvG,CAAA;AAED,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAc,aAAa;MAC3B,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,cAAc,eAAe;MACjC,oBAAoBA,OAAM;MAC1B,aAAa,YAAY;MACzB,cAAc,WAAW;MACzB,QAAQA,OAAM;IACf,CAAA;AAED,UAAM,cAAc,UAAUA,QAAO,eAAe,OAAO;MACzD,cAAcA,OAAM,sBAAsB,YAAY,KAAA;MACtD,SAAUA,OAAM,gBAAA;IACjB,CAAA;AAED,UAAM,OAAO,SAAS,MAAM,kBAAkBA,MAAA,CAAM;AAEpD,UAAM,sBAAsB,SAAS,MAAM;AACzC,UAAIA,OAAM,YACR,QAAA,CAAQ,QAAQ,YAAY,KAAA,IAAS,QAAQA,OAAM;AAErD,aAAO,QAAQ,YAAY,KAAA,IAAS,WAAW;IAChD,CAAA;AAED,UAAM,YAAY,SAAS,MAAM;;AAC/B,UAAA,CAAK,WAAW,MACd,QAAO;AAET,WAAI,4BAAuB,UAAvB,gDAA+B,WAAW,OAC5C,QAAO;AAET,UAAIA,OAAM,YAAY,SAAS,WAAW,OAAOA,OAAM,QAAA,EACrD,QAAO;AAET,UAAIA,OAAM,YAAY,SAASA,OAAM,UAAU,WAAW,KAAA,EACxD,QAAO;AAET,aAAO;IACR,CAAA;AAED,UAAM,kBAAkB,wBAAwB,oBAAoB,KAAA;AAEpE,UAAM,gBAAgB,IAAqB,WAAW,QAAQ,EAAE,GAAG,kBAAkB;MAAE,OAAO,WAAW;MAAO;IAAW,CAAA,EAAG,IAAG,EAAE,GAAG,gBAAiB,CAAA;AAEvJ,UAAM,oBAAoB,SAAS,MAAM,cAAc;MACrD,aAAa,oBAAoB;MACjC,SAAS,YAAY;MACrB;MACA,cAAcA,OAAM;MACpB,WAAWA,OAAM;MACjB,eAAe,cAAc;MAC7B;IACD,CAAA,CAAC;AAEF,UAAM,kBAAkB,SAAS,MAAM,kBAAkB,MAAM,GAAA;AAE/D,UAAM,0BAA0B,SAAS,MAAM,gBAAgB,MAAM,OAAO,CAAC,EAAE,KAAA,MAAW,SAAS,SAAA,CAAU;AAE7G,UAAM,QAAQ,CAAC,UAAU;AACvB,UAAI,UAAU,UAAA,MAAgB,OAAO;AACnC,kBAAU,UAAU,KAAA;AAGpB,iBAAS,MAAM;AACb,0BAAgB,MAAM,MAAA;AACtB,6BAAmB,cAAc,KAAA,EAAO,QAAQ,CAAA,SAAQ,gBAAgB,MAAM,IAAI,IAAA,CAAoB;QACvG,CAAA;MACH;IACD,CAAA;AAED,UAAM,YAAY,CAAC,gBAAgB;AACjC,UAAA,CAAK,UAAU,WAAA,KAAgB,YAAY,MAAM,QAAQ,WAAA,MAAiB,EACxE,aAAY,QAAQ,YAAY,KAAA;IAEnC,CAAA;AAED,UAAM,CAAC,YAAY,MAAO,GAAE,CAAC,CAAC,WAAA,MAAiB;AAC7C,UAAA,CAAK,UAAU,WAAA,EACb,eAAc,QAAQ,EAAE,GAAG,kBAAkB;QAAE,OAAO;QAAa;MAAW,CAAA,EAAE;eAGzE,OAAO,OAAO,cAAc,KAAA,EAAO,MAAM,CAAA,UAAS,UAAU,IAAA,KAAS,UAAU,WAAA,EACtF,eAAc,QAAQ,EAAE,GAAG,gBAAgB;IAE9C,CAAA;AAED,UAAM,wBAAwB,IAAwB,IAAA;AAEtD,UAAM,sBAAsB,SAAS,MACnC,MAAM,KAAK,gBAAgB,KAAA,EAAO,UAAU,CAAA,OAAA;;AAC1C,gBAAG,aAAa,8BAAA,QACZ,2BAAsB,UAAtB,mBAA6B,aAAa;KAA+B,CAAC;AAElF,UAAM,uBAAuB,SAAS,MAAM;AAC1C,YAAM,OAAO,IAAI,UAAU,QAAQ,KAAK;AACxC,YAAM,gBAAgB,OAAO,IAAI,oBAAoB,QAAQ,IAAI,oBAAoB,QAAQ,gBAAgB,MAAM,OAAO;AAC1H,UAAI,cACF,QAAO;AACT,YAAM,iBAAiB,MAAM,KAAK,gBAAgB,KAAA,EAAO,oBAAoB,QAAQ,IAAA;AACrF,aAAO;IACR,CAAA;AAED,UAAM,uBAAuB,SAAS,MAAM;AAC1C,YAAM,OAAO,IAAI,UAAU,QAAQ,KAAK;AACxC,YAAM,gBAAgB,OAAO,IAAI,oBAAoB,QAAQ,IAAI,oBAAoB,QAAQ,gBAAgB,MAAM,OAAO;AAC1H,UAAI,cACF,QAAO;AAET,YAAM,iBAAiB,MAAM,KAAK,gBAAgB,KAAA,EAAO,oBAAoB,QAAQ,IAAA;AACrF,aAAO;IACR,CAAA;AAED,UAAM,MAAM,OAAA;AAEZ,aAAS,cAAc,GAAkB;;AACvC,UAAA,CAAK,uBAAuB,EAAE,GAAA,EAC5B;AACF,UAAI,EAAE,QAAQ,IAAI,WAChB,4BAAqB,UAArB,mBAA4B;AAC9B,UAAI,EAAE,QAAQ,IAAI,YAChB,4BAAqB,UAArB,mBAA4B;IAChC;AAEA,aAAS,kBAAkB,IAAiB;AAC1C,4BAAsB,QAAQ;IAChC;AAEA,gCAA4B;MAC1B,mBAAmB,uBAAuB;MAC1C;MACA;MACA;MACA;MACA;MACA,WAAWA,OAAM;MACjB;MACA;MACA;MACA;MACA,iBAAiB;MACjB,UAAU;MACV;MACA,YAAY;;AACV,mCAAqB,UAArB,mBAA4B;MAC7B;IACF,CAAA;AAED,aAAa,EAEX,kBACD,CAAA;;0BAIC,YA4BY,MAAA,SAAA,GA5BZ,WACUC,KA2BE,QA3BI;iBACV;QAAJ,KAAI;QACJ,MAAK;QACJ,iBAAe,MAAA,QAAA,IAAQ,OAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,gBAAc,UAAA,QAAS,KAAA;QACvB,KAAK,MAAA,GAAA;QACL,WAAO,SAAa,eAAa,CAAA,QAAA,OAAA,CAAA;;yBAElC,MAIE,CAJF,WAIE,KAAA,QAAA,WAAA;UAHC,YAAa,MAAA,UAAA;UACb,UAAU,gBAAA;UACV,WAAY,UAAA;YAGf,YAUE,MAAA,sBAAA,GAAA;UATC,IAAIC,KAAAA;UACL,IAAG;UACH,SAAQ;UACR,UAAS;UACR,OAAO,MAAA,UAAA,IAAa,MAAA,UAAA,EAAW,SAAA,IAAQ;UACvC,MAAMC,KAAAA;UACN,UAAU,MAAA,QAAA;UACV,UAAUC,KAAAA;UACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA;;AAAE,qCAAM,KAAK,gBAAA,KAAA,MAAX,mBAA0B,OAA1B,mBAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExShD,UAAMC,SAAQ;AAEd,UAAM,cAAc,2BAAA;AAEpB,UAAM,eAAe,IAAI,IAAA;AACzB,UAAM,cAAc,IAAI,KAAA;AAExB,UAAM,EACJ,oBACA,sBACA,WAAA,IACE,aAAa;MACf;MACA;MACA,aAAa,YAAY;MACzB,WAAW,YAAY;MACvB,MAAM,YAAY;MAClB,eAAe,YAAY;MAC3B,WAAW,YAAY;MACvB,MAAMA,OAAM;MACZ,UAAU,YAAY;MACtB,UAAU,YAAY;MACtB,WAAW,YAAY;MACvB,YAAY,YAAY;IACzB,CAAA;AAED,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,KAAA;AACrD,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,KAAA;AACrD,UAAM,YAAY,SAAS,MAAM,YAAY,UAAU,KAAA;;0BAIrD,YAqBY,MAAA,SAAA,GArBZ,WAqBY;QApBT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;SACH,MAAA,UAAA,GAAU;QACjB,iBAAiB,SAAA,SAAY,SAAA,QAAQ,QAAWC,KAAAA,SAAI;QACpD,gCAA8BA,KAAAA;QAC9B,iBAAe,SAAA,QAAQ,OAAA;QACvB,iBAAe,SAAA,QAAQ,OAAA;QACvB,iBAAe,SAAA,QAAQ,KAAA;QACvB,gBAAc,UAAA,QAAS,KAAA;QACvB,gBAAc,UAAA,QAAS,OAAA;SACxB,WAAMA,KAOC,SAPG,YAAA;mBAAoC,MAAA,kBAAA;iBAAmC,MAAA,oBAAA;;AAA8C,uBAAA,QAAY;QAAA;kBAA2B,MAAa;AAAe,gBAAA,WAAA,EAAY,kBAAkB,EAAE,MAAA;;;yBASlO,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;AE7BZ,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAkC,aAAA;;;;;;;;;;;;;;;;;;;;;;AAQtC,UAAMC,SAAQ;AAKd,UAAM,OAAO;AAWb,UAAM,EAAE,MAAA,IAAU,OAAOA,MAAA;AAEzB,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,iBAAiB,IAAA;AACvB,UAAM,kBAAkB,IAAI,KAAA;AAE5B,8BAA0B;MACxB,WAAW;MACX,WAAW;MACX;MACA;MACA,cAAc,CAAC,UAAU;AACvB,aAAK,QAAQ;MACd;MACD,cAAc,MAAM;AAClB,aAAK,QAAA,CAAS,KAAK;MACpB;MACD;MACA;IACD,CAAA;;0BAIC,YAKa,MAAA,kBAAA,GAAA,MAAA;yBAJX,MAGE,CAHF,WAGE,KAAA,QAAA,WAAA;UAFC,MAAM,MAAA,IAAA;UACN,OAAK,MAAQ,KAAA,QAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjFxB,UAAMC,SAAQ;AAEd,qBAAA;AACA,UAAM,cAAc,yBAAA;AAEpB,kBAAc,MAAM;AAClB,kBAAY,gBAAgB,QAAQ;IACrC,CAAA;AACD,gBAAY,MAAM;AAChB,kBAAY,gBAAgB,QAAQ;IACrC,CAAA;;0BAIC,YAEe,MAAA,oBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACzB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBZ,UAAMC,SAAQ;;0BAIZ,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC1B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEHZ,UAAMC,SAAQ;AAKd,qBAAA;;0BAIE,YAEc,MAAA,mBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACxB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZZ,UAAMC,SAAQ;;0BAIZ,YAEe,MAAA,oBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACzB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AE6CZ,IAAa,CAAC,6BAA6B,4BAAA,IACvC,cAAqC,gBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASzC,UAAMC,SAAQ;AAmBd,UAAM,QAAQ;AACd,UAAM,EACJ,QACA,UACA,UACA,iBACA,cACA,eACA,YACA,gBACA,iBACA,gBAAgB,qBAChB,mBAAmB,wBACnB,aACA,OACA,IACA,MACA,UACA,UACA,UACA,aACA,cACA,WACA,cACA,KAAK,SACL,MACA,cAAA,IACE,OAAOA,MAAA;AAEX,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAc,aAAa;MAC3B,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,cAAc,SAAS,MAAM,eAAe;MAChD,oBAAoBA,OAAM;MAC1B,aAAaA,OAAM;MACnB,cAAc,WAAW;MACzB,QAAQA,OAAM;IACf,CAAA,CAAC;AAEF,UAAM,cAAc,UAAUA,QAAO,eAAe,OAAO;MACzD,cAAcA,OAAM,sBAAsB,YAAY,MAAM,KAAA;MAC5D,SAAUA,OAAM,gBAAA;IACjB,CAAA;AAED,UAAM,OAAO,UAAUA,QAAO,QAAQ,OAAO;MAC3C,cAAc,YAAY;MAC1B,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,eAAe,IAAA;AAErB,UAAM,YAAY,CAAC,UAAU;AAC3B,UAAI,SAAS,MAAM,QAAQ,YAAY,KAAA,MAAW,EAChD,aAAY,QAAQ,MAAM,KAAA;AAE5B,UAAI,cAAc,MAChB,MAAK,QAAQ;IAEhB,CAAA;AAED,iCAA6B;MAC3B,mBAAmB,uBAAuB;MAC1C,gBAAgB,oBAAoB;MACpC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,aAAa,MAA6B;AACxC,YAAA,CAAK,QAAA,CAAS,WAAW,MACvB,YAAW,SAAQ,6BAAM,WAAM;kBAEvB,gBAAgB,SAAS,QAAQ,WAAW,MAAM,QAAQ,IAAA,MAAU,EAC5E,YAAW,QAAA;YAGX,YAAW,QAAQ,KAAK,KAAA;MAE3B;MACD,oBAAoB,MAAiB;AACnC,oBAAY,QAAQ,KAAK,KAAA;MAC1B;MACD;IACD,CAAA;;0BAIC,YAMc,MAAA,mBAAA,GAAA;QALJ,MAAM,MAAA,IAAA;6EAAA,KAAI,QAAA,SAAA;QACjB,gBAAc,MAAA,WAAA;QACd,OAAO,MAAA,KAAA;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AEnMZ,UAAM,cAAc,4BAAA;;0BAIlB,YAsCe,MAAA,oBAAA,GAtCf,WAsCe;wBApCmB,MAAA,WAAA,EAAY;2BAAyC,MAAA,WAAA,EAAY;kBAAmC,MAAA,WAAA,EAAY,SAAS;kBAAuB,MAAA,WAAA,EAAY,SAAS;gBAAqB,MAAA,WAAA,EAAY,OAAO;kBAAuB,MAAA,WAAA,EAAY,SAAS;yBAA8B,MAAA,WAAA,EAAY,gBAAgB;sBAA2B,MAAA,WAAA,EAAY,aAAa;uBAA4B,MAAA,WAAA,EAAY,cAAc;oBAAyB,MAAA,WAAA,EAAY,WAAW;wBAA6B,MAAA,WAAA,EAAY,eAAe;kBAAuB,MAAA,WAAA,EAAY,SAAS;yBAA8B,MAAA,WAAA,EAAY,gBAAgB;aAAkB,MAAA,WAAA,EAAY,IAAI;;QAgB5qB,eAAa,MAAA,WAAA,EAAY,WAAW;QACpC,aAAa,MAAA,WAAA,EAAY,YAAY;QACrC,UAAU;QACV,uBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAA2B;cAAiB,QAAQ,MAAA,WAAA,EAAY,WAAW,SAAS,MAAA,yCAAA,EAAW,MAAM,MAAA,WAAA,EAAY,WAAW,KAAA,EAAK;AAAgB,gBAAA,WAAA,EAAY,aAAa,IAAA;;QAI/L,wBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAAe;cAAiB,MAAA,yCAAA,EAAW,MAAM,MAAA,WAAA,EAAY,YAAY,KAAA,EAAK;AAAgB,gBAAA,WAAA,EAAY,oBAAoB,IAAA;;;yBAKpJ,CAOE,EApCQ,UAAU,MAAM,MAAM,cAAc,QAAQ,WAAA,MAAU,CA6BhE,WAOE,KAAA,QAAA,WAAA;UANO;UACA;UACK;UACK;UACR;UACK;;;;;;;;;;;;;;;;;;;;;;;;;;;AExCpB,UAAMC,SAAQ;;0BAIZ,YAEe,MAAA,oBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACzB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;;0BAKZ,YAKsB,MAAA,2BAAA,GAAA,eAAA,mBAHZA,MAAA,CAAK,GAAA;yBAEb,CAHQ,cAAS,CAGjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEL3B,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAM,cAAc,yBAAA;;0BAIlB,YAOY,MAAA,SAAA,GAAA;QANT,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,IAAIA,KAAAA;QACJ,YAAUD,OAAM;QAChB,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAY,KAAA;;yBAEhC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEpBZ,UAAME,SAAQ;;0BAIZ,YAEe,MAAA,oBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACzB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE2BZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,YAAY,gBAAgB,aAAaA,QAAO,aAAa,6BAAA,CAA8B;AACjG,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,cAAc,yBAAA;AACpB,mBAAA;;0BAIE,YAqCa,MAAA,kBAAA,GAAA;QApCX,YAAA;QACA,MAAA;QACC,SAASC,KAAAA;QACT,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;QACzC,oBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,kBAAmB,MAAA;;yBAE7C,MA6BmB,CA7BnB,YA6BmB,MAAA,wBAAA,GAAA;UA5BjB,YAAA;UACC,kCAAgCC,KAAAA;UAChC,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,sBAAuB,MAAA;UAClD,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,mBAAoB,MAAA;UAC3C,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;UACxC,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,gBAAiB,MAAA;UACrC,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAY,KAAA;;2BAElC,MAmBgB,CAnBhB,YAmBgB,MAAA,qBAAA,GAnBhB,WACU,MAkBM,SAAA,GAlBG;YAChB,IAAI,MAAA,WAAA,EAAY;YAChB,KAAK,MAAA,UAAA;YACL,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;YAClC,mBAAiB,MAAA,WAAA,EAAY;YAC7B,OAAO;;;;;;YASP;YACD,MAAK;;6BAEL,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7EhB,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,cAAc,yBAAA;AACpB,UAAM,yBAAyB,IAAI,KAAA;AAEnC,sBAAkB,IAAA;AAElB,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAE9C,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,kBAAc,cAAA;;0BAIZ,YA2BqB,4BA3BrB,WACU,MA0BW,SAAA,GA1BF;QAChB,KAAK,MAAA,UAAA;QACL,cAAY,MAAA,WAAA,EAAY,KAAK;QAC9B,kCAAA;QACC,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAkB,UAAK;;AAAe,gBAAK,kBAAmB,KAAA;eAAsB,uBAAA,MAAwB,aAAA,WAAA,EAAY,eAAe,UAA3B,mBAAkC;;QAO9J,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;AAAe,gBAAK,sBAAuB,KAAA;gBAAuB,gBAAgB,MAAM,OAAO;gBAA6B,gBAA0B,cAAc,WAAM,KAAU,cAAc,YAAO;gBAAyB,eAAe,cAAc,WAAM,KAAU;AAAwB,iCAAA,QAAyB;;QAYnW,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAd,MAAA;QAAsB,GAAA,CAAA,SAAA,CAAA;;yBAEtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzCZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,cAAc,yBAAA;AACpB,UAAM,0BAA0B,IAAI,KAAA;AACpC,UAAM,2BAA2B,IAAI,KAAA;AAErC,UAAM,YAAY,qBAAqBA,QAAO,KAAA;;0BAI5C,YAkDqB,4BAlDrB,WACU,MAiDW,SAAA,GAjDF;QAChB,cAAY;QACZ,kCAAgC;QAChC,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;;AAAe,gBAAK,kBAAmB,KAAA;eAAsB,MAAM,kBAAgB;iBAAmB,wBAAA,MAAyB,aAAA,WAAA,EAAY,eAAe,UAA3B,mBAAkC;AAAoH,kBAAM,eAAA;;AAAqC,kCAAA,QAAuB;AAAkB,mCAAA,QAAwB;;QAcha,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAgB,UAAK;;AAAe,gBAAK,mBAAoB,KAAA;eAAsB,MAAM,kBAAgB;AAAc,oCAAA,QAAuB;gBAAuB,MAAM,OAAO,cAAc,SAAI,cAAkC,0BAAA,QAAwB;;gBAAsO,SAAS,MAAM;gBAAqC,mBAAkB,WAAA,WAAA,EAAY,eAAe,UAA3B,mBAAkC,SAAS;cAAqB,gBAAiB,OAAM,eAAA;cAAmX,MAAM,OAAO,cAAc,SAAI,aAA4B,yBAAA,MAA+C,OAAM,eAAA;;;yBA+BrnC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1CZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,cAAc,yBAAA;AAEpB,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,sBAAA;;0BAIzC,YAeW,MAAA,gBAAA,GAAA,EAfA,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK,MAAA,GAAA;yBACjD,MAMsB,CALd,MAAA,WAAA,EAAY,MAAM,SAAA,UAAA,GAD1B,YAMsB,6BANtB,WAMsB,EAAA,KAAA,EAAA,GAJZ,MAAA,SAAA,GAAS,EAChB,KAAK,MAAA,UAAA,EAAU,CAAA,GAAA;2BAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;gCAEV,YAMyB,gCANzB,WAMyB,EAAA,KAAA,EAAA,GAJf,MAAA,SAAA,GAAS,EAChB,KAAK,MAAA,UAAA,EAAU,CAAA,GAAA;2BAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExCd,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEEZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,iBAAiB,SAAS,OAAO;MACrC,GAAGA;MACH,QAAA;IACD,EAAA;AACD,UAAM,YAAY,qBAAqB,gBAAgB,KAAA;;0BAIrD,YAcgB,MAAA,qBAAA,GAAA,eAAA,mBAdOC,KAAAA,MAAAA,CAAM,GAAA;yBAC3B,MAYiB,CAZjB,YAYiB,MAAA,sBAAA,GAZjB,WAYiB;UAAA,GAXF,MAAA,SAAA;UAAS,GAAKC,KAAAA;QAAM,GAAA,EAChC,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAE,CAAA,UAAK;AAAc,gBAAK,iBAAkB,KAAA;eAAqB,MAAM,oBAAoB,MAAM,QAAM;AAAc,kBAAA,0BAAA,EAA2B,MAAM,MAAA;AAAiC,kBAAM,eAAA;;;2BAS7M,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;AEhCd,UAAM,cAAc,4BAAA;;0BAIlB,YAkCgB,MAAA,qBAAA,GAlChB,WAkCgB;QAhCb,KAAK,MAAA,WAAA,EAAY;QACjB,eAAa,MAAA,WAAA,EAAY,WAAW;QACpC,aAAa,MAAA,WAAA,EAAY,YAAY;;YAClB,MAAA,WAAA,EAAY,GAAG;cAAmB,MAAA,WAAA,EAAY,KAAK;kBAAuB,MAAA,WAAA,EAAY,SAAS;kBAAuB,MAAA,WAAA,EAAY,SAAS;kBAAuB,MAAA,WAAA,EAAY,SAAS;kBAAuB,MAAA,WAAA,EAAY,SAAS;mBAAwB,MAAA,WAAA,EAAY,UAAU;qBAA0B,MAAA,WAAA,EAAY,YAAY;sBAA2B,MAAA,WAAA,EAAY,aAAa;gBAAqB,MAAA,WAAA,EAAY,OAAO;2BAAgC,MAAA,WAAA,EAAY;kBAAmC,MAAA,WAAA,EAAY,SAAS;aAAkB,MAAA,WAAA,EAAY,IAAI;cAAmB,MAAA,WAAA,EAAY,KAAK;;QAgB5lB,uBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAA2B;cAAiB,QAAQ,MAAA,WAAA,EAAY,WAAW,SAAS,KAAK,QAAQ,MAAA,WAAA,EAAY,WAAW,KAAA,MAAK,EAAA;AAAsB,gBAAA,WAAA,EAAY,aAAa,IAAA;;QAIjM,wBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAAe;cAAiB,KAAK,QAAQ,MAAA,WAAA,EAAY,YAAY,KAAA,MAAK,EAAA;AAAsB,gBAAA,WAAA,EAAY,oBAAoB,IAAA;;;yBAKtJ,CAGE,EAhCQ,UAAU,WAAA,MAAU,CA6B9B,WAGE,KAAA,QAAA,WAAA;UAFW;UACG;;;;;;;;;;;;;;;;;;;;;;;AEnCpB,UAAMC,SAAQ;;0BAIZ,YAEe,MAAA,oBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACzB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAEmB,MAAA,wBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC7B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAEmB,MAAA,wBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC7B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAEkB,MAAA,uBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC5B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAEmB,MAAA,wBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC7B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAEiB,MAAA,sBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC3B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAUZ,YAOkB,MAAA,uBAAA,GAAA,eAAA,mBALRA,MAAA,CAAK,GAAA;yBAEb,CAEO,EALG,aAAA,MAAY,CAGtB,WAEO,KAAA,QAAA,WAAA,EAFe,aAAY,GAAlC,MAEO,CAAA,gBAAA,gBADF,YAAA,GAAY,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEfrB,UAAMC,SAAQ;;0BAIZ,YAEiB,MAAA,sBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC3B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;;0BAMZ,YAKe,MAAA,oBAAA,GAAA,eAAA,mBAHLA,MAAA,CAAK,GAAA;yBAEb,CAHQ,cAAS,CAGjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B,UAAMC,SAAQ;;0BAKZ,YAKe,MAAA,oBAAA,GAAA,eAAA,mBAHLA,MAAA,CAAK,GAAA;yBAEb,CAHQ,cAAS,CAGjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEL3B,UAAMC,SAAQ;AAId,UAAM,cAAc,yBAAA;AAEpB,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AAEvD,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,sBAAA;AAC3C,cAAU,MAAM;AACd,kBAAY,eAAe,QAAQ,eAAe;IACnD,CAAA;;0BAIC,YAkBY,wBAjBL,MAAA,WAAA,EAAY,gBAAgB,QAAQ,MAAA,SAAA,IAAY,MAAA,oBAAA,CAAY,GAAA,EACjE,YAAA,GAAQ,GAAA;yBAER,MAaY,CAbZ,YAaY,MAAA,SAAA,GAAA;UAZT,IAAI,MAAA,WAAA,EAAY;UAChB,KAAK,MAAA,UAAA;UACL,MAAMC,KAAAA,OAAE,WAAA,WAAA;UACT,iBAAc;UACb,iBAAe,MAAA,WAAA,EAAY,KAAK;UAChC,iBAAe,MAAA,WAAA,EAAY;UAC3B,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;UAClC,IAAIA,KAAAA;UACJ,YAAUF,OAAM;UAChB,SAAO,MAAA,WAAA,EAAY;;2BAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnCd,UAAMG,SAAQ;AACd,UAAM,cAAc,4BAAA;;0BAIlB,YASiB,MAAA,sBAAA,GATjB,WASiB,EARf,gCAA6B,UAAS,GAC9BA,QAAK;QACZ,UAAU,MAAA,WAAA,EAAY,SAAS;QAC/B,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,MAAa;;AAAa,sBAAA,WAAA,EAAY,aAAa,UAAzB,mBAAgC,kBAAkB,EAAE;;;yBAIzF,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEwEZ,IAAa,CAAC,iCAAiC,gCAAA,IAC3C,cAAyC,oBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAa7C,UAAMC,SAAQ;AAOd,UAAM,QAAQ;AACd,UAAM,EAAE,UAAU,UAAU,mBAAmB,wBAAwB,KAAK,SAAS,QAAQ,WAAA,IAAe,OAAOA,MAAA;AACnH,UAAM,SAAS,UAAU,UAAA;AACzB,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,YAAY,iBAAiB,OAAO,OAAO,EAC/C,WAAW,mBAAmBA,OAAM,SAAA,EACrC,CAAA;AACD,UAAM,EAAE,kBAAkB,gBAAgB,cAAA,IACtC,oBAAA;AACJ,UAAM,kBAAkB,IAAsB,oBAAI,IAAA,CAAA;AAElD,cAAU,MAAM;AACd,yBAAmB,cAAc,KAAA,EAAO,QAAQ,CAAA,SAAQ,gBAAgB,MAAM,IAAI,IAAA,CAAoB;IACvG,CAAA;AAED,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM,gBAAgB;QAAE,OAAA;QAAkB,KAAA;MAAgB;MACxE,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,cAAc,eAAe;MACjC,oBAAoBA,OAAM;MAC1B,aAAaA,OAAM;MACnB,eAAc,gBAAW,UAAX,mBAAkB;MAChC,QAAQA,OAAM;IACf,CAAA;AAED,UAAM,cAAc,UAAUA,QAAO,eAAe,OAAO;MACzD,cAAcA,OAAM,sBAAsB,YAAY,KAAA;MACtD,SAAUA,OAAM,gBAAA;IACjB,CAAA;AAED,UAAM,OAAO,SAAS,MAAM,kBAAkBA,MAAA,CAAM;AAEpD,UAAM,sBAAsB,SAAS,MAAM;AACzC,UAAIA,OAAM,YACR,QAAA,CAAQ,QAAQ,YAAY,KAAA,IAAS,QAAQA,OAAM;AAErD,aAAO,QAAQ,YAAY,KAAA,IAAS,WAAW;IAChD,CAAA;AAED,UAAM,iBAAiB,SAAS,MAAM;;AACpC,UAAA,GAAKC,MAAA,WAAW,UAAX,gBAAAA,IAAkB,OACrB,QAAO;AAET,WAAIC,MAAA,uBAAuB,UAAvB,gBAAAA,IAAA,6BAA+B,WAAW,MAAM,OAClD,QAAO;AAET,UAAIF,OAAM,YAAY,SAAS,WAAW,MAAM,OAAOA,OAAM,QAAA,EAC3D,QAAO;AAET,UAAIA,OAAM,YAAY,SAASA,OAAM,UAAU,WAAW,MAAM,KAAA,EAC9D,QAAO;AAET,aAAO;IACR,CAAA;AAED,UAAM,eAAe,SAAS,MAAM;;AAClC,UAAA,GAAKC,MAAA,WAAW,UAAX,gBAAAA,IAAkB,KACrB,QAAO;AAET,WAAIC,MAAA,uBAAuB,UAAvB,gBAAAA,IAAA,6BAA+B,WAAW,MAAM,KAClD,QAAO;AAET,UAAIF,OAAM,YAAY,SAAS,WAAW,MAAM,KAAKA,OAAM,QAAA,EACzD,QAAO;AAET,UAAIA,OAAM,YAAY,SAASA,OAAM,UAAU,WAAW,MAAM,GAAA,EAC9D,QAAO;AAET,aAAO;IACR,CAAA;AAED,UAAM,YAAY,SAAS,MAAM;;AAC/B,UAAI,eAAe,SAAS,aAAa,MACvC,QAAO;AAET,UAAA,GAAKC,MAAA,WAAW,UAAX,gBAAAA,IAAkB,UAAA,GAAUC,MAAA,WAAW,UAAX,gBAAAA,IAAkB,KACjD,QAAO;AAET,UAAA,CAAK,eAAe,WAAW,MAAM,OAAO,WAAW,MAAM,GAAA,EAC3D,QAAO;AAET,UAAI,uBAAuB,UAAA,QAAqB;AAC9C,cAAM,WAAW,uBACf,WAAW,MAAM,OACjB,WAAW,MAAM,KACjB,uBAAuB,OAAA,MAAA;AAGzB,YAAA,CAAK,SACH,QAAO;MACX;AACA,aAAO;IACR,CAAA;AAED,UAAM,kBAAkB,wBAAwB,oBAAoB,KAAA;AAEpE,UAAM,qBAAqB,MAAqB,gBAAW,UAAX,mBAAkB,SAAQ,EAAE,GAAG,kBAAkB;MAAE,OAAO,WAAW,MAAM;MAAO;IAAW,CAAA,EAAG,IAAG,EAAE,GAAG,gBAAiB,CAAA;AACzK,UAAM,mBAAmB,MAAqB,gBAAW,UAAX,mBAAkB,OAAM,EAAE,GAAG,kBAAkB;MAAE,OAAO,WAAW,MAAM;MAAK;IAAW,CAAA,EAAG,IAAG,EAAE,GAAG,gBAAiB,CAAA;AAEnK,UAAM,sBAAsB,SAAS,MAAM,cAAc;MACvD,aAAa,oBAAoB;MACjC,SAAS,YAAY;MACrB;MACA,cAAcF,OAAM;MACpB,WAAWA,OAAM;MACjB,eAAe,mBAAmB;MAClC;IACD,CAAA,CAAC;AAEF,UAAM,oBAAoB,SAAS,MAAM,cAAc;MACrD,aAAa,oBAAoB;MACjC,SAAS,YAAY;MACrB;MACA,cAAcA,OAAM;MACpB,WAAWA,OAAM;MACjB,eAAe,iBAAiB;MAChC;IACD,CAAA,CAAC;AAEF,UAAM,kBAAkB,SAAS,OAAO;MACtC,OAAO,oBAAoB,MAAM;MACjC,KAAK,kBAAkB,MAAM;IAC9B,EAAA;AAED,UAAM,0BAA0B,SAAS,OAAO;MAAE,OAAO,gBAAgB,MAAM,MAAM,OAAO,CAAC,EAAE,KAAA,MAAW,SAAS,SAAA;MAAY,KAAK,gBAAgB,MAAM,IAAI,OAAO,CAAC,EAAE,KAAA,MAAW,SAAS,SAAA;IAAY,EAAA;AAExM,UAAM,aAAa,KAAI,sBAAW,UAAX,mBAAkB,UAAlB,mBAAyB,MAAM;AACtD,UAAM,WAAW,KAAI,sBAAW,UAAX,mBAAkB,QAAlB,mBAAuB,MAAM;AAElD,UAAM,CAAC,YAAY,QAAS,GAAE,CAAC,CAAC,aAAa,SAAA,MAAe;AAC1D,iBAAW,QAAQ;QAAE,OAAO,2CAAa;QAAQ,KAAK,uCAAW;MAAO;IACzE,CAAA;AAED,UAAM,YAAY,CAAC,gBAAgB;;AACjC,YAAM,kBAAiB,2CAAa,UAAS,WAAW,QACpD,YAAY,MAAM,QAAQ,WAAW,KAAA,MAAW,KAChD,2CAAa,WAAU,WAAW;AACtC,UAAI,eACF,YAAW,SAAQC,MAAA,2CAAa,UAAb,gBAAAA,IAAoB;AAGzC,YAAM,gBAAe,2CAAa,QAAO,SAAS,QAC9C,YAAY,IAAI,QAAQ,SAAS,KAAA,MAAW,KAC5C,2CAAa,SAAQ,SAAS;AAClC,UAAI,aACF,UAAS,SAAQC,MAAA,2CAAa,QAAb,gBAAAA,IAAkB;IAEtC,CAAA;AAED,UAAM,CAAC,YAAY,MAAO,GAAE,CAAC,CAAC,WAAA,MAAiB;AAC7C,UAAI,gBAAA,OACF,oBAAmB,QAAQ,EAAE,GAAG,kBAAkB;QAAE,OAAO;QAAa;MAAW,CAAA,EAAE;eAG9E,OAAO,OAAO,mBAAmB,KAAA,EAAO,MAAM,CAAA,UAAS,UAAU,IAAA,KAAS,gBAAA,OACjF,oBAAmB,QAAQ,EAAE,GAAG,gBAAgB;IAEnD,CAAA;AAED,UAAM,QAAQ,CAAC,UAAU;AACvB,UAAI,UAAU,UAAA,MAAgB,OAAO;AACnC,kBAAU,UAAU,KAAA;AAGpB,iBAAS,MAAM;AACb,0BAAgB,MAAM,MAAA;AACtB,6BAAmB,cAAc,KAAA,EAAO,QAAQ,CAAA,SAAQ,gBAAgB,MAAM,IAAI,IAAA,CAAoB;QACvG,CAAA;MACH;IACD,CAAA;AAED,UAAM,YAAY,CAAC,gBAAgB;AACjC,UAAI,eAAe,YAAY,UAAA,UAAuB,YAAY,MAAM,QAAQ,YAAY,KAAA,MAAW,EACrG,aAAY,QAAQ,YAAY,MAAM,KAAA;IACzC,CAAA;AAED,UAAM,CAAC,UAAU,MAAO,GAAE,CAAC,CAAC,SAAA,MAAe;AACzC,UAAI,cAAA,OACF,kBAAiB,QAAQ,EAAE,GAAG,kBAAkB;QAAE,OAAO;QAAW;MAAW,CAAA,EAAE;eAG1E,OAAO,OAAO,iBAAiB,KAAA,EAAO,MAAM,CAAA,UAAS,UAAU,IAAA,KAAS,cAAA,OAC/E,kBAAiB,QAAQ,EAAE,GAAG,gBAAgB;IAEjD,CAAA;AAED,UAAM,wBAAwB,IAAwB,IAAA;AAEtD,UAAM,sBAAsB,SAAS,MAAM,MAAM,KAAK,gBAAgB,KAAA,EAAO,UAAU,CAAA,OAAA;;AACrF,gBAAG,aAAa,8BAAA,QAAoCD,MAAA,sBAAsB,UAAtB,gBAAAA,IAA6B,aAAa,oCAC3F,GAAG,aAAa,yCAAA,QAA+CC,MAAA,sBAAsB,UAAtB,gBAAAA,IAA6B,aAAa;KAA0C,CAAC;AAEzJ,UAAM,uBAAuB,SAAS,MAAM;AAC1C,YAAM,OAAO,IAAI,UAAU,QAAQ,KAAK;AACxC,YAAM,gBAAgB,OAAO,IAAI,oBAAoB,QAAQ,IAAI,oBAAoB,QAAQ,gBAAgB,MAAM,OAAO;AAC1H,UAAI,cACF,QAAO;AACT,YAAM,iBAAiB,MAAM,KAAK,gBAAgB,KAAA,EAAO,oBAAoB,QAAQ,IAAA;AACrF,aAAO;IACR,CAAA;AAED,UAAM,uBAAuB,SAAS,MAAM;AAC1C,YAAM,OAAO,IAAI,UAAU,QAAQ,KAAK;AACxC,YAAM,gBAAgB,OAAO,IAAI,oBAAoB,QAAQ,IAAI,oBAAoB,QAAQ,gBAAgB,MAAM,OAAO;AAC1H,UAAI,cACF,QAAO;AAET,YAAM,iBAAiB,MAAM,KAAK,gBAAgB,KAAA,EAAO,oBAAoB,QAAQ,IAAA;AACrF,aAAO;IACR,CAAA;AAED,UAAM,MAAM,OAAA;AAEZ,aAAS,cAAc,GAAkB;;AACvC,UAAA,CAAK,uBAAuB,EAAE,GAAA,EAC5B;AACF,UAAI,EAAE,QAAQ,IAAI,WAChB,EAAAD,MAAA,qBAAqB,UAArB,gBAAAA,IAA4B;AAC9B,UAAI,EAAE,QAAQ,IAAI,YAChB,EAAAC,MAAA,qBAAqB,UAArB,gBAAAA,IAA4B;IAChC;AAEA,aAAS,kBAAkB,IAAiB;AAC1C,4BAAsB,QAAQ;IAChC;AAEA,qCAAiC;MAC/B,mBAAmB,uBAAuB;MAC1C;MACA;MACA;MACA;MACA;MACA;MACA,WAAWF,OAAM;MACjB;MACA;MACA,eAAe;QAAE,OAAO;QAAoB,KAAK;MAAkB;MACnE;MACA,iBAAiB;MACjB,UAAU;MACV;MACA,YAAY;;AACV,SAAAC,MAAA,qBAAqB,UAArB,gBAAAA,IAA4B;MAC7B;IACF,CAAA;AAED,aAAa,EACX,kBACD,CAAA;;0BAIC,YA2BY,MAAA,SAAA,GA3BZ,WACUE,KA0BE,QA1BI;iBACV;QAAJ,KAAI;QACJ,MAAK;QACJ,iBAAe,MAAA,QAAA,IAAQ,OAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,gBAAc,UAAA,QAAS,KAAA;QACvB,KAAK,MAAA,GAAA;QACL,WAAO,SAAa,eAAa,CAAA,QAAA,OAAA,CAAA;;yBAElC,MAAA;;AAGE,kBAHF,WAGE,KAAA,QAAA,WAAA;YAFC,YAAa,MAAA,UAAA;YACb,UAAU,gBAAA;cAGb,YAUE,MAAA,sBAAA,GAAA;YATC,IAAIC,KAAAA;YACL,IAAG;YACH,SAAQ;YACR,UAAS;YACR,OAAK,IAAKF,OAAAD,MAAA,MAAA,UAAA,MAAA,gBAAAA,IAAY,UAAZ,gBAAAC,IAAmB,UAAQ,OAAQG,OAAAC,MAAA,MAAA,UAAA,MAAA,gBAAAA,IAAY,QAAZ,gBAAAD,IAAiB,UAAQ;YACtE,MAAME,KAAAA;YACN,UAAU,MAAA,QAAA;YACV,UAAUC,KAAAA;YACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA;;AAAE,sBAAAN,OAAAD,MAAA,MAAM,KAAK,gBAAA,KAAA,MAAX,gBAAAA,IAA0B,OAA1B,gBAAAC,IAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1XhD,UAAMO,SAAQ;AAEd,UAAM,cAAc,gCAAA;AAEpB,UAAM,eAAe,IAAI,IAAA;AACzB,UAAM,cAAc,IAAI,KAAA;AAExB,UAAM,EACJ,oBACA,sBACA,WAAA,IACE,aAAa;MACf;MACA;MACA,aAAa,YAAY;MACzB,WAAW,YAAY;MACvB,MAAM,YAAY;MAClB,eAAe,YAAY,cAAcA,OAAM,IAAA;MAC/C,WAAW,YAAY;MACvB,MAAMA,OAAM;MACZ,UAAU,YAAY;MACtB,UAAU,YAAY;MACtB,WAAW,YAAY;MACvB,YAAYA,OAAM,SAAS,UAAU,YAAY,aAAa,YAAY;IAC3E,CAAA;AAED,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,KAAA;AACrD,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,KAAA;AACrD,UAAM,YAAY,SAAS,MAAM,YAAY,UAAU,KAAA;;0BAIrD,YAsBY,MAAA,SAAA,GAtBZ,WAsBY;QArBT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;SACH,MAAA,UAAA,GAAU;QACjB,iBAAiB,SAAA,SAAY,SAAA,QAAQ,QAAWC,KAAAA,SAAI;QACpD,gCAA8BA,KAAAA;QAC9B,iBAAe,SAAA,QAAQ,OAAA;QACvB,iBAAe,SAAA,QAAQ,OAAA;QACvB,iBAAe,SAAA,QAAQ,KAAA;QACvB,2CAAyCC,KAAAA;QACzC,gBAAc,UAAA,QAAS,KAAA;QACvB,gBAAc,UAAA,QAAS,OAAA;SACxB,WAAMD,KAOC,SAPG,YAAA;mBAAoC,MAAA,kBAAA;iBAAmC,MAAA,oBAAA;;AAA8C,uBAAA,QAAY;QAAA;kBAA2B,MAAa;AAAe,gBAAA,WAAA,EAAY,kBAAkB,EAAE,MAAA;;;yBASlO,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/DZ,UAAME,SAAQ;;0BAIZ,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC1B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;;0BAIZ,YAEe,MAAA,oBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACzB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEoDZ,IAAa,CAAC,kCAAkC,iCAAA,IAC5C,cAA0C,qBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU9C,UAAMC,SAAQ;AAsBd,UAAM,QAAQ;AACd,UAAM,EACJ,QACA,UACA,UACA,iBACA,cACA,eACA,YACA,gBACA,iBACA,gBAAgB,qBAChB,mBAAmB,wBACnB,qBAAqB,0BACrB,aACA,OACA,IACA,MACA,UACA,UACA,UACA,aACA,cACA,WACA,KAAK,UACL,0BACA,WACA,aACA,MACA,cAAA,IACE,OAAOA,MAAA;AAEX,UAAM,MAAM,aAAa,QAAA;AAEzB,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM,gBAAgB;QAAE,OAAA;QAAkB,KAAA;MAAgB;MACxE,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,cAAc,eAAe;MACjC,oBAAoBA,OAAM;MAC1B,aAAaA,OAAM;MACnB,eAAc,gBAAW,UAAX,mBAAkB;MAChC,QAAQA,OAAM;IACf,CAAA;AAED,UAAM,cAAc,UAAUA,QAAO,eAAe,OAAO;MACzD,cAAcA,OAAM,sBAAsB,YAAY,KAAA;MACtD,SAAUA,OAAM,gBAAA;IACjB,CAAA;AAED,UAAM,OAAO,UAAUA,QAAO,QAAQ,OAAO;MAC3C,cAAc,YAAY;MAC1B,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,eAAe,IAAA;AAErB,UAAM,YAAY,CAAC,UAAU;AAC3B,UAAI,SAAS,MAAM,SAAS,MAAM,MAAM,QAAQ,YAAY,KAAA,MAAW,EACrE,aAAY,QAAQ,MAAM,MAAM,KAAA;AAGlC,UAAI,MAAM,SAAS,MAAM,KACvB;YAAI,cAAc,MAChB,MAAK,QAAQ;MACf;IAEH,CAAA;AAED,sCAAkC;MAChC;MACA,mBAAmB,uBAAuB;MAC1C,gBAAgB,oBAAoB;MACpC,qBAAqB,yBAAyB;MAC9C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,mBAAmB,MAA6B;AAC9C,cAAM,qBAAqB,IAAA;MAC5B;MACD,aAAa,MAAiB;;AAC5B,mBAAW,QAAQ;UAAE,QAAOC,MAAA,KAAK,UAAL,gBAAAA,IAAY;UAAQ,MAAK,UAAK,QAAL,mBAAU;QAAO;MACvE;MACD,oBAAoB,MAAiB;AACnC,oBAAY,QAAQ,KAAK,KAAA;MAC1B;MACD;IACD,CAAA;;0BAIC,YASc,MAAA,mBAAA,GAAA;QARJ,MAAM,MAAA,IAAA;6EAAA,KAAI,QAAA,SAAA;QACjB,gBAAc,MAAA,WAAA;QACd,OAAO,MAAA,KAAA;;yBAER,MAGE,CAHF,WAGE,KAAA,QAAA,WAAA;UAFC,YAAa,MAAA,UAAA;UACb,MAAM,MAAA,IAAA;;;;;;;;;;;;;;AEtMb,SAAgB,sBAAsBC,QAA8B;AAClE,QAAM,iBAAiB,SAAS,MAAM;AACpC,QAAA,CAAKC,OAAM,MAAM,MACf,QAAO;AACT,QAAIA,OAAM,eAAeA,OAAM,MAAM,KAAA,EACnC,QAAO;AACT,WAAO;EACR,CAAA;AAED,QAAM,eAAe,SAAS,MAAM;AAClC,QAAA,CAAKA,OAAM,IAAI,MACb,QAAO;AACT,QAAIA,OAAM,eAAeA,OAAM,IAAI,KAAA,EACjC,QAAO;AACT,WAAO;EACR,CAAA;AAED,QAAM,YAAY,SAChB,MAAM;AACJ,QAAI,eAAe,SAAS,aAAa,MACvC,QAAO;AACT,QAAIA,OAAM,MAAM,SAASA,OAAM,IAAI,SAAS,SAASA,OAAM,IAAI,OAAOA,OAAM,MAAM,KAAA,EAChF,QAAO;AACT,WAAO;EACR,CAAA;AAGH,QAAM,mBAAmB,CAACC,SAAoB;AAC5C,QAAA,CAAKD,OAAM,MAAM,MACf,QAAO;AACT,WAAO,0CAAUA,OAAM,MAAM,OAAO,IAAA;EACrC;AAED,QAAM,iBAAiB,CAACC,SAAoB;AAC1C,QAAA,CAAKD,OAAM,IAAI,MACb,QAAO;AACT,WAAO,0CAAUA,OAAM,IAAI,OAAO,IAAA;EACnC;AAED,QAAM,aAAa,CAACC,SAAoB;AACtC,QAAID,OAAM,MAAM,SAAS,0CAAUA,OAAM,MAAM,OAAO,IAAA,EACpD,QAAO;AACT,QAAIA,OAAM,IAAI,SAAS,0CAAUA,OAAM,IAAI,OAAO,IAAA,EAChD,QAAO;AACT,QAAIA,OAAM,IAAI,SAASA,OAAM,MAAM,MACjC,QAAO,UAAU,MAAMA,OAAM,MAAM,OAAOA,OAAM,IAAI,KAAA;AAEtD,WAAO;EACR;AAGD,QAAM,sBAAsB,CAACC,SAAoB;;AAC/C,QAAID,OAAM,eAAe,IAAA,EACvB,QAAO;AAGT,SAAI,KAAAA,OAAM,gBAAN,mBAAmB,OAAO;AAC5B,UAAIA,OAAM,MAAM,SAASA,OAAM,IAAI,OAAO;AACxC,YAAIA,OAAM,UAAU,OAAO;AACzB,gBAAM,OAAO,eAAeA,OAAM,MAAM,OAAOA,OAAM,IAAI,KAAA,EAAO;AAChE,cAAI,QAAQA,OAAM,YAAY,OAAO;AACnC,kBAAM,WAAWA,OAAM,YAAY,QAAQ,OAAO;AAClD,kBAAM,aAAaA,OAAM,MAAM,MAAM,SAAS,EAAE,MAAM,SAAU,CAAA;AAChE,kBAAM,WAAWA,OAAM,IAAI,MAAM,IAAI,EAAE,MAAM,SAAU,CAAA;AACvD,mBAAA,CAAQ,UAAU,MAAM,YAAY,QAAA;UACrC;QACF;AACD,eAAO;MACR;AACD,UAAIA,OAAM,MAAM,OAAO;AACrB,cAAM,UAAUA,OAAM,MAAM,MAAM,IAAI,EAAE,MAAMA,OAAM,YAAY,MAAO,CAAA;AACvE,cAAM,UAAUA,OAAM,MAAM,MAAM,SAAS,EAAE,MAAMA,OAAM,YAAY,MAAO,CAAA;AAC5E,eAAA,CAAQ,UAAU,MAAM,SAAS,OAAA;MAClC;IACF;AAED,QAAA,CAAKA,OAAM,MAAM,SAASA,OAAM,IAAI,SAAS,0CAAUA,OAAM,MAAM,OAAO,IAAA,EACxE,QAAO;AAET,WAAO;EACR;AAED,QAAM,sBAAsB,CAACC,SAAoB;;AAC/C,SAAI,KAAAD,OAAM,wBAAN,wBAAAA,QAA4B,MAC9B,QAAO;AACT,WAAO;EACR;AAED,QAAM,mBAAmB,SAAS,MAAM;;AACtC,QAAIA,OAAM,MAAM,SAASA,OAAM,IAAI,SAAA,CAAUA,OAAM,UAAU,MAC3D,QAAO;AACT,QAAA,CAAKA,OAAM,MAAM,SAAA,CAAUA,OAAM,aAAa,MAC5C,QAAO;AAET,UAAM,uBAAuB,SAASA,OAAM,MAAM,OAAOA,OAAM,aAAa,KAAA;AAC5E,UAAM,QAAQ,uBAAuBA,OAAM,MAAM,QAAQA,OAAM,aAAa;AAC5E,UAAM,MAAM,uBAAuBA,OAAM,aAAa,QAAQA,OAAM,MAAM;AAE1E,QAAI,0CAAU,OAAO,GAAA,EACnB,QAAO;MACL;MACA;IACD;AAKH,UAAI,KAAAA,OAAM,gBAAN,mBAAmB,UAAA,CAAUA,OAAM,IAAI,OAAO;AAEhD,YAAM,YAAY,uBACd,MAAM,IAAI,EAAE,MAAMA,OAAM,YAAY,MAAO,CAAA,IAC3C,MAAM,SAAS,EAAE,MAAMA,OAAM,YAAY,MAAO,CAAA;AAEpD,aAAO;QACL;QACA,KAAK;MACN;IACF;AAED,UAAM,UAAU,uBAAuB,OAAO,KAAKA,OAAM,yBAAyB,QAAQ,MAAM,QAAQA,OAAM,mBAAmB,qBAAqBA,OAAM,mBAAA;AAC5J,QAAI,QACF,QAAO;MACL;MACA;IACD;AAEH,WAAO;EACR,CAAA;AAED,QAAM,qBAAqB,CAACC,SAAoB;AAC9C,QAAA,CAAK,iBAAiB,SAAA,CAAU,iBAAiB,MAAM,MACrD,QAAO;AACT,WAAO,0CAAU,iBAAiB,MAAM,OAAO,IAAA;EAChD;AAED,QAAM,mBAAmB,CAACA,SAAoB;AAC5C,QAAA,CAAK,iBAAiB,SAAA,CAAU,iBAAiB,MAAM,IACrD,QAAO;AACT,WAAO,0CAAU,iBAAiB,MAAM,KAAK,IAAA;EAC9C;AAED,SAAO;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,gBAAgB;EACjB;AACF;;;;;;;;;;;;;;;;;;;AClCD,IAAa,CAAC,gCAAgC,+BAAA,IAC1C,cAAwC,mBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5C,UAAMC,SAAQ;AAoBd,UAAM,QAAQ;AAqBd,UAAM,EACJ,UACA,UACA,cACA,iBACA,cACA,eACA,YACA,gBACA,iBACA,mBAAmB,wBACnB,qBAAqB,0BACrB,gBAAgB,qBAChB,eACA,UACA,UACA,KAAK,SACL,QAAQ,YACR,UAAU,eACV,UAAU,eACV,0BACA,+BACA,WACA,YAAA,IACE,OAAOA,MAAA;AAEX,UAAM,EAAE,kBAAkB,gBAAgB,cAAA,IACtC,oBAAA;AACJ,UAAM,MAAM,aAAa,OAAA;AACzB,UAAM,SAAS,UAAU,UAAA;AAEzB,UAAM,uBAAuB,IAAA;AAC7B,UAAM,eAAe,IAAA;AACrB,UAAM,YAAY,IAAI,KAAA;AAEtB,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM,gBAAgB;QAAE,OAAA;QAAkB,KAAA;MAAgB;MACxE,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,kBAAkB,IAAI,WAAW,KAAA;AAEvC,UAAM,iBAAiB,CAAC,UAAU;AAChC,YAAM,0BAA0B,KAAA;IACjC,CAAA;AAED,UAAM,cAAc,eAAe;MACjC,oBAAoBA,OAAM;MAC1B,cAAc,WAAW,MAAM;MAC/B,QAAQA,OAAM;IACf,CAAA;AAED,UAAM,aAAa,IAAI,WAAW,MAAM,KAAA;AAGxC,UAAM,WAAW,IAAI,WAAW,MAAM,GAAA;AAEtC,UAAM,cAAc,UAAUA,QAAO,eAAe,OAAO;MACzD,cAAcA,OAAM,sBAAsB,YAAY,KAAA;MACtD,SAAUA,OAAM,gBAAA;IACjB,CAAA;AAED,aAAS,oBAAoB,OAAkB;AAC7C,kBAAY,QAAQ,MAAM,KAAA;IAC5B;AAEA,UAAM,EACJ,mBACA,cACA,gBACA,mBACA,sBACA,sBACA,MACA,UACA,sBACA,UACA,UACA,UAAA,IACE,YAAY;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,gBAAgB,oBAAoB;MACpC,mBAAmB,uBAAuB;MAC1C;MACA,UAAU;MACV,UAAU;IACX,CAAA;AAED,UAAM,EACJ,WACA,YACA,qBACA,kBACA,kBACA,gBACA,oBACA,kBACA,gBAAgB,oBAAA,IACd,sBAAsB;MACxB,OAAO;MACP,KAAK;MACL;MACA;MACA,qBAAqB,yBAAyB;MAC9C;MACA;MACA;MACA;IACD,CAAA;AAED,UAAM,YAAY,CAAC,aAAa,eAAe;;AAC7C,UAAA,EACI,yCAAY,WAAS,2CAAa,UAAA,CAChC,eAAA,CACA,YAAY,SACZ,WAAW,SAAA,CAAU,0CAAW,YAAY,OAAO,WAAW,KAAA,EAElE,YAAW,SAAQ,sDAAa,UAAb,mBAAoB,SAApB;AAGrB,UAAA,EACI,yCAAY,QAAO,YAAY,OAAA,CAC7B,eAAA,CACA,YAAY,OACZ,SAAS,SAAA,CAAU,0CAAW,YAAY,KAAK,SAAS,KAAA,EAE5D,UAAS,SAAQ,sDAAa,QAAb,mBAAkB,SAAlB;IAEpB,CAAA;AAED,UAAM,YAAY,CAAC,gBAAgB;AACjC,UAAI,eAAA,CAAgB,0CAAW,aAAa,YAAY,KAAA,EACtD,qBAAoB,WAAA;AAEtB,YAAM,qBAAqB,WAAA;IAC5B,CAAA;AAED,UAAM,CAAC,YAAY,QAAS,GAAE,CAAC,CAAC,aAAa,SAAA,MAAe;;AAC1D,YAAM,QAAQ,WAAW;AAEzB,UACE,SACG,MAAM,SACN,MAAM,OACN,eACA,aACA,0CAAW,MAAM,OAAO,WAAA,KACxB,0CAAW,MAAM,KAAK,SAAA,EAEzB;AAGF,gBAAU,QAAQ;AAClB,UAAI,aAAa,aAAa;AAC5B,YAAI,SAAS,WAAW,WAAA,EACtB,YAAW,QAAQ;UACjB,OAAO,UAAU,KAAA;UACjB,KAAK,YAAY,KAAA;QACnB;YAGA,YAAW,QAAQ;UACjB,OAAO,YAAY,KAAA;UACnB,KAAK,UAAU,KAAA;QACjB;AAGF,kBAAU,QAAQ;AAClB,wBAAgB,QAAQ;UAAE,QAAO,gBAAW,MAAM,UAAjB,mBAAwB;UAAQ,MAAK,gBAAW,MAAM,QAAjB,mBAAsB;QAAO;MACrG,WAEM,YACF,YAAW,QAAQ;QACjB,OAAO,YAAY,KAAA;QACnB,KAAA;MACF;UAGA,YAAW,QAAQ;QACjB,OAAO,uCAAW;QAClB,KAAA;MACF;IAGL,CAAA;AAED,UAAM,MAAM,OAAA;AACZ,qBAAiB,WAAW,CAAC,OAAO;;AAClC,UAAI,GAAG,QAAQ,IAAI,UAAU,UAAU,OAAO;AAE5C,mBAAW,SAAQ,qBAAgB,MAAM,UAAtB,mBAA6B;AAChD,iBAAS,SAAQ,qBAAgB,MAAM,QAAtB,mBAA2B;MAC9C;IACD,CAAA;AAED,oCAAgC;MAC9B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,UAAU;MACV;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,gBAAgB;MAChB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;AAED,cAAU,MAAM;AACd,UAAI,aAAa,MACf,4BAA2B,cAAc,KAAA;IAC5C,CAAA;;0BAIC,YA0CY,MAAA,SAAA,GAAA;iBAzCN;QAAJ,KAAI;QACH,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,MAAK;QACJ,cAAY,MAAA,iBAAA;QACZ,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,gBAAc,MAAA,SAAA,IAAS,KAAA;QACvB,KAAK,MAAA,GAAA;;yBAEN,MAoBM,CApBN,gBAoBM,OApBNC,aAoBM,CANJ,gBAKM,OALNC,aAKM,gBADD,MAAA,iBAAA,CAAiB,GAAA,CAAA,CAAA,CAAA,GAIxB,WAQE,KAAA,QAAA,WAAA;UAPC,MAAM,MAAA,WAAA;UACN,MAAM,MAAA,IAAA;UACN,UAAW,MAAA,QAAA;UACX,cAAgB,MAAA,YAAA;UAChB,QAAQ,MAAA,MAAA;UACR,YAAa,MAAA,UAAA;UACb,YAAa,MAAA,UAAA;;;;;;;;;;;;;;;;;;;;;AEnepB,UAAM,cAAc,iCAAA;;;0BAIlB,YA4CoB,MAAA,yBAAA,GA5CpB,WA4CoB;kCA1CwB,MAAA,WAAA,EAAY,yBAAyB;wBAA6B,MAAA,WAAA,EAAY;2BAAyC,MAAA,WAAA,EAAY;6BAA8C,MAAA,WAAA,EAAY;gBAAmC,MAAA,WAAA,EAAY,OAAO;kBAAuB,MAAA,WAAA,EAAY,SAAS;yBAA8B,MAAA,WAAA,EAAY,gBAAgB;sBAA2B,MAAA,WAAA,EAAY,aAAa;uBAA4B,MAAA,WAAA,EAAY,cAAc;oBAAyB,MAAA,WAAA,EAAY,WAAW;wBAA6B,MAAA,WAAA,EAAY,eAAe;kBAAuB,MAAA,WAAA,EAAY,SAAS;yBAA8B,MAAA,WAAA,EAAY,gBAAgB;kBAAuB,MAAA,WAAA,EAAY,SAAS;kBAAuB,MAAA,WAAA,EAAY,SAAS;aAAkB,MAAA,WAAA,EAAY,IAAI;mBAAwB,MAAA,WAAA,EAAY,UAAU;sBAA0B,WAAA,WAAA,EAAY,gBAAZ,mBAAyB;;QAoBr5B,eAAa,MAAA,WAAA,EAAY,WAAW;QACpC,aAAa,MAAA,WAAA,EAAY,YAAY;QACrC,uBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAAI;AAAa,gBAAA,WAAA,EAAY,mBAAmB,IAAA;;QAGrE,uBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAAI;;cAAiB,KAAK,WAASC,MAAA,MAAA,WAAA,EAAY,WAAW,UAAvB,gBAAAA,IAA8B,UAAS,KAAK,SAAO,WAAA,WAAA,EAAY,WAAW,UAAvB,mBAA8B,QAAO,MAAA,yCAAA,EAAW,KAAK,QAAO,WAAA,WAAA,EAAY,WAAW,UAAvB,mBAA8B,KAAA,KAAU,MAAA,yCAAA,EAAW,KAAK,MAAK,WAAA,WAAA,EAAY,WAAW,UAAvB,mBAA8B,GAAA,EAAG;AAAgB,gBAAA,WAAA,EAAY,aAAa,IAAA;;QAI9S,wBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAAI;cAAiB,MAAA,yCAAA,EAAW,MAAM,MAAA,WAAA,EAAY,YAAY,KAAA,EAAK;AAAgB,gBAAA,WAAA,EAAY,oBAAoB,IAAA;;;yBAKzI,CAOE,EA1CQ,UAAU,MAAM,MAAM,cAAc,QAAQ,WAAA,MAAU,CAmChE,WAOE,KAAA,QAAA,WAAA;UANO;UACA;UACK;UACK;UACR;UACK;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvCpB,UAAM,cAAc,+BAAA;;;0BAIlB,YASY,MAAA,SAAA,GAAA;QART,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,MAAK;QACJ,iBAAe,MAAA,WAAA,EAAY,WAAWC,KAAAA,IAAAA,IAAI,OAAA;QAC1C,iBAAe,MAAA,WAAA,EAAY,eAAeA,KAAAA,IAAAA,OAAS,iBAAA,WAAA,GAAY,sBAAZ,4BAAgCA,KAAAA,UAAS,MAAA,WAAA,EAAY,8BAA8B;QACtI,iBAAe,MAAA,WAAA,EAAY,eAAeA,KAAAA,IAAAA,KAAS,MAAA,WAAA,EAAY,8BAA8B,QAAK,KAAA;;yBAEnG,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBZ,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,yBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE0CZ,UAAMC,SAAQ;AAGd,UAAM,cAAc,+BAAA;AAEpB,UAAM,MAAM,OAAA;AAEZ,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAE7C,UAAM,YAAY,SAAS,MAAM,YAAY,UAAU,OAAO,OAAOA,OAAM,GAAA,GAAM;MAC/E,SAAS;MACT,OAAO;MACP,KAAK;MACL,MAAM;IACP,CAAA,CAAC;AAEF,UAAM,gBAAgB,SAAS,MAAA;;AAAM,gCAAY,sBAAZ,qCAAgCA,OAAM,SAAQ;KAAA;AACnF,UAAM,iBAAiB,SAAS,MAAM,YAAY,WAAWA,OAAM,GAAA,CAAI;AACvE,UAAM,mBAAmB,SAAS,MAAM,YAAY,iBAAiBA,OAAM,GAAA,CAAI;AAC/E,UAAM,iBAAiB,SAAS,MAAM,YAAY,eAAeA,OAAM,GAAA,CAAI;AAC3E,UAAM,mBAAmB,SAAS,MAAM,YAAY,mBAAmBA,OAAM,GAAA,CAAI;AACjF,UAAM,iBAAiB,SAAS,MAAM,YAAY,iBAAiBA,OAAM,GAAA,CAAI;AAC7E,UAAM,gBAAgB,SAAS,MAAM,YAAY,iBAAiB,QAC9D,mBAAmBA,OAAM,KAAK,YAAY,iBAAiB,MAAM,OAAO,YAAY,iBAAiB,MAAM,GAAA,IAC3G,KAAA;AACJ,UAAM,2BAA2B,SAAS,MAAM,YAAY,yBAAyB,KAAA;AAErF,UAAM,cAAc,SAAS,MAAM;AACjC,aAAO,0CAAQA,OAAM,KAAK,0CAAA,CAAkB;IAC7C,CAAA;AACD,UAAM,gBAAgB,SAAS,MAAM;AACnC,aAAA,CAAQ,0CAAYA,OAAM,KAAKA,OAAM,KAAA;IACtC,CAAA;AACD,UAAM,uBAAuB,SAAS,MACpC,YAAY,qBAAqBA,OAAM,GAAA,CAAI;AAG7C,UAAM,aAAa,SAAS,MAAM,YAAY,eAAeA,OAAM,GAAA,KAAS,YAAY,8BAA8B,SAAS,cAAc,KAAA;AAE7I,UAAM,WAAW,SAAS,MAAMA,OAAM,IAAI,IAAI,eAAe,YAAY,OAAO,KAAA,CAAM;AAEtF,UAAM,gBAAgB,SAAS,MAAM;AACnC,aAAA,CAAQ,YAAY,SAAS,SAAS,0CAAUA,OAAM,KAAK,YAAY,YAAY,KAAA;IACpF,CAAA;AAED,aAAS,WAAW,GAA+B,MAAiB;;AAClE,UAAI,YAAY,SAAS,MACvB;AACF,UAAI,YAAY,eAAe,IAAA,OAAS,iBAAY,sBAAZ,qCAAgC,OACtE;AAEF,kBAAY,qBAAqB,QAAQ,KAAK,KAAA;AAE9C,UAAI,YAAY,WAAW,SAAS,YAAY,iBAAiB,UAAU,MACzE;YAAI,0CAAU,MAAM,YAAY,WAAW,KAAA,KAAM,CAAK,YAAY,gBAAgB,SAAA,CAAU,YAAY,SAAS,OAAO;AACtH,sBAAY,WAAW,QAAA;AACvB,sBAAY,oBAAoB,IAAA;AAChC;QACF,WAAA,CACU,YAAY,SAAS,OAAO;AACpC,YAAE,eAAA;AACF,cAAI,YAAY,qBAAqB,SAAS,0CAAU,YAAY,qBAAqB,OAAO,IAAA,EAC9F,aAAY,WAAW,QAAQ,KAAK,KAAA;AACtC;QACF;;AAGF,UAAI,YAAY,WAAW,SAAS,YAAY,SAAS,SAAS,0CAAU,YAAY,SAAS,OAAO,IAAA,KAAK,CAAK,YAAY,gBAAgB,OAAO;AACnJ,oBAAY,WAAW,QAAA;AACvB,oBAAY,SAAS,QAAA;AACrB,oBAAY,oBAAoB,IAAA;AAChC;MACF;AAEA,UAAA,CAAK,YAAY,WAAW,MAC1B,aAAY,WAAW,QAAQ,KAAK,KAAA;gBAE5B,YAAY,SAAS,MAC7B,aAAY,SAAS,QAAQ,KAAK,KAAA;eAE3B,YAAY,SAAS,SAAS,YAAY,WAAW,OAC5D;aAAK,YAAY,UAAU,OAAO;AAChC,sBAAY,SAAS,QAAA;AACrB,sBAAY,WAAW,QAAQ,KAAK,KAAA;QACtC,WACS,YAAY,UAAU,UAAU,QACvC,KAAI,KAAK,QAAQ,YAAY,WAAW,KAAA,IAAS,EAC/C,aAAY,WAAW,QAAQ,KAAK,KAAA;YAGpC,aAAY,SAAS,QAAQ,KAAK,KAAA;iBAG7B,YAAY,UAAU,UAAU,MACvC,KAAI,KAAK,QAAQ,YAAY,SAAS,KAAA,IAAS,EAC7C,aAAY,SAAS,QAAQ,KAAK,KAAA;YAGlC,aAAY,WAAW,QAAQ,KAAK,KAAA;MAExC;IAEJ;AAEA,aAAS,YAAY,GAAe;AAClC,UAAI,WAAW,MACb;AACF,iBAAW,GAAGA,OAAM,GAAA;IACtB;AAEA,aAAS,cAAc;;AACrB,UAAI,WAAW,WAAS,iBAAY,sBAAZ,qCAAgCA,OAAM,MAC5D;AACF,kBAAY,aAAa,QAAQA,OAAM,IAAI,KAAA;IAC7C;AAEA,aAAS,eAAe,GAAkB;AACxC,UAAI,WAAW,MACb;AACF,QAAE,eAAA;AACF,QAAE,gBAAA;AACF,YAAM,gBAAgB,YAAY,cAAc;AAChD,YAAM,sBAAsB;AAC5B,YAAM,OAAO,YAAY,IAAI,UAAU,QAAQ,KAAK;AACpD,cAAQ,EAAE,MAAV;QACE,KAAK,IAAI;AACP,qBAAW,eAAe,OAAO,IAAA;AACjC;QACF,KAAK,IAAI;AACP,qBAAW,eAAe,OAAA,CAAQ,IAAA;AAClC;QACF,KAAK,IAAI;AACP,qBAAW,eAAe,OAAA,CAAQ,mBAAA;AAClC;QACF,KAAK,IAAI;AACP,qBAAW,eAAe,OAAO,mBAAA;AACjC;QACF,KAAK,IAAI;QACT,KAAK,IAAI;AACP,qBAAW,GAAGA,OAAM,GAAA;MACxB;AAEA,eAAS,WAAW,MAAmB,KAAa;AAClD,cAAM,qBAAoC,mBAAmB,aAAA;AAC7D,YAAA,CAAK,mBAAmB,OACtB;AAEF,cAAM,QAAQ,mBAAmB,QAAQ,IAAA;AACzC,cAAM,WAAW,QAAQ;AAEzB,YAAI,YAAY,KAAK,WAAW,mBAAmB,QAAQ;AACzD,gBAAM,UAAU,mBAAmB,QAAA,EAAU,aAAa,YAAA;AAC1D,gBAAM,eAAe,uBAAuB,SAAU,YAAY,YAAY,KAAA;AAC9E,gBAAM,WAAW,YAAY,SAAS;AACtC,gBAAM,WAAW,YAAY,SAAS;AACtC,cAAK,YAAY,aAAa,QAAQ,QAAA,IAAY,KAAO,YAAY,aAAa,QAAQ,QAAA,IAAY,EACpG;AAEF,cAAI,mBAAmB,QAAA,EAAU,aAAa,eAAA,EAC5C,YAAW,mBAAmB,QAAA,GAAW,GAAA;AAE3C,sBAAY,oBAAoB,YAAA;AAChC,6BAAmB,QAAA,EAAU,MAAA;AAC7B;QACF;AAEA,YAAI,WAAW,GAAG;AAChB,cAAI,YAAY,qBAAA,EACd;AACF,sBAAY,SAAA;AACZ,mBAAS,MAAM;AACb,kBAAM,qBAAoC,mBAAmB,aAAA;AAC7D,gBAAA,CAAK,mBAAmB,OACtB;AACF,gBAAA,CAAK,YAAY,gBAAgB,SAAS,YAAY,eAAe,QAAQ,GAAG;AAE9E,oBAAM,eAAe,eAAe,YAAY,YAAY,KAAA;AAC5D,oBAAM,kBAAgB,eAAe,KAAK,IAAI,QAAA;AAC9C,kBAAI,mBAAmB,eAAA,EAAe,aAAa,eAAA,EACjD,YAAW,mBAAmB,eAAA,GAAgB,GAAA;AAEhD,oBAAM,YAAU,mBAAmB,eAAA,EAAe,aAAa,YAAA;AAC/D,0BAAY,oBAAoB,uBAAuB,WAAU,YAAY,YAAY,KAAA,CAAM;AAC/F,iCACE,eAAA,EACA,MAAA;AACF;YACF;AACA,kBAAM,gBAAgB,mBAAmB,SAAS,KAAK,IAAI,QAAA;AAC3D,gBAAI,mBAAmB,aAAA,EAAe,aAAa,eAAA,EACjD,YAAW,mBAAmB,aAAA,GAAgB,GAAA;AAEhD,kBAAM,UAAU,mBAAmB,aAAA,EAAe,aAAa,YAAA;AAC/D,wBAAY,oBAAoB,uBAAuB,SAAU,YAAY,YAAY,KAAA,CAAM;AAC/F,+BACE,aAAA,EACA,MAAA;UACH,CAAA;AACD;QACF;AAEA,YAAI,YAAY,mBAAmB,QAAQ;AACzC,cAAI,YAAY,qBAAA,EACd;AACF,sBAAY,SAAA;AACZ,mBAAS,MAAM;AACb,kBAAM,qBAAoC,mBAAmB,aAAA;AAC7D,gBAAA,CAAK,mBAAmB,OACtB;AAEF,gBAAA,CAAK,YAAY,gBAAgB,SAAS,YAAY,eAAe,QAAQ,GAAG;AAE9E,oBAAM,eAAe,eACnB,YAAY,YAAY,MAAM,IAAI,EAAE,QAAQ,YAAY,eAAe,QAAQ,EAAG,CAAA,CAAC;AAGrF,oBAAM,kBAAgB,WAAW,mBAAmB,UAAU,mBAAmB,SAAS;AAE1F,kBAAI,mBAAmB,eAAA,EAAe,aAAa,eAAA,EACjD,YAAW,mBAAmB,eAAA,GAAgB,GAAA;AAEhD,oBAAM,YAAU,mBAAmB,eAAA,EAAe,aAAa,YAAA;AAC/D,0BAAY,oBAAoB,uBAAuB,WAAU,YAAY,YAAY,KAAA,CAAM;AAC/F,iCAAmB,eAAA,EAAe,MAAA;AAClC;YACF;AAEA,kBAAM,gBAAgB,WAAW,mBAAmB;AACpD,gBAAI,mBAAmB,aAAA,EAAe,aAAa,eAAA,EACjD,YAAW,mBAAmB,aAAA,GAAgB,GAAA;AAGhD,kBAAM,UAAU,mBAAmB,aAAA,EAAe,aAAa,YAAA;AAC/D,wBAAY,oBAAoB,uBAAuB,SAAU,YAAY,YAAY,KAAA,CAAM;AAC/F,+BAAmB,aAAA,EAAe,MAAA;UACnC,CAAA;QACH;MACF;IACF;;0BAIE,YA4CY,MAAA,SAAA,GAAA;iBA3CN;QAAJ,KAAI;QACH,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,MAAK;QACJ,cAAY,UAAA;QACb,mCAAA;QACC,iBAAe,eAAA,UAAmB,yBAAA,SAAA,CAA6B,cAAA,SAAa,OAAA;QAC5E,iBAAe,WAAA,SAAc,cAAA,QAAa,OAAA;QAC1C,oBAAkB,cAAA,UAAkB,yBAAA,SAAA,CAA6B,cAAA,SAAa,KAAA;QAC9E,wBAAsB,iBAAA,QAAgB,OAAA;QACtC,sBAAoB,eAAA,QAAc,OAAA;QAClC,0BAAwB,iBAAA,QAAgB,OAAA;QACxC,wBAAsB,eAAA,QAAc,OAAA;QACpC,iBAAe,eAAA,UAAmB,yBAAA,SAAA,CAA6B,cAAA,SAAa,OAAA;QAC5E,6BAA2B,qBAAA,QAAoB,KAAA;QAC/C,cAAYC,KAAAA,IAAI,SAAA;QAChB,iBAAe,WAAA,QAAU,KAAA;QACzB,oBAAkB,cAAA,QAAa,KAAA;QAC/B,cAAY,YAAA,QAAW,KAAA;QACvB,qBAAmB,cAAA,QAAa,KAAA;QAChC,gBAAc,cAAA,QAAa,KAAA;QAC3B,UAAU,cAAA,QAAa,IAAO,cAAA,SAAiB,WAAA,QAAA,SAAsB;QACrE,SAAO;QACP,WAAS;QACT,cAAY;QACZ,WAAO,SAAiC,gBAAc;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA,CAAA;;yBAEvD,MAeO,CAfP,WAeO,KAAA,QAAA,WAAA;UAdJ,UAAW,SAAA;UACX,UAAU,WAAA;UACV,OAAO,YAAA;UACP,UAAU,eAAA;UACV,aAAc,cAAA;UACd,oBAAsB,qBAAA;UACtB,aAAa,cAAA;UACb,aAAa,cAAA,UAAkB,yBAAA,SAAA,CAA6B,cAAA;UAC5D,kBAAmB,iBAAA;UACnB,gBAAiB,eAAA;UACjB,gBAAiB,iBAAA;UACjB,cAAe,eAAA;WAZlB,MAeO,CAAA,gBAAA,gBADF,SAAA,KAAA,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3UjB,UAAMC,SAAQ;;0BAMZ,YAK2B,MAAA,gCAAA,GAAA,eAAA,mBAHjBA,MAAA,CAAK,GAAA;yBAEb,CAHQ,cAAS,CAGjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEV3B,UAAMC,SAAQ;;0BAIZ,YAEe,MAAA,oBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACzB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEGZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,iBAAiB,SAAS,OAAO;MACrC,GAAGA;MACH,QAAA;IACD,EAAA;AACD,UAAM,YAAY,qBAAqB,gBAAgB,KAAA;;0BAIrD,YAcgB,MAAA,qBAAA,GAAA,eAAA,mBAdOC,KAAAA,MAAAA,CAAM,GAAA;yBAC3B,MAYiB,CAZjB,YAYiB,MAAA,sBAAA,GAZjB,WAYiB;UAAA,GAXF,MAAA,SAAA;UAAS,GAAKC,KAAAA;QAAM,GAAA,EAChC,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAE,CAAA,UAAK;AAAc,gBAAK,iBAAkB,KAAA;eAAqB,MAAM,oBAAoB,MAAM,QAAM;AAAc,kBAAA,0BAAA,EAA2B,MAAM,MAAA;AAAiC,kBAAM,eAAA;;;2BAS7M,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;AEhCd,UAAM,cAAc,iCAAA;;0BAIlB,YAkCqB,MAAA,0BAAA,GAlCrB,WAkCqB;QAhClB,KAAK,MAAA,WAAA,EAAY;QACjB,eAAa,MAAA,WAAA,EAAY,WAAW;QACpC,aAAa,MAAA,WAAA,EAAY,YAAY;;YAClB,MAAA,WAAA,EAAY,GAAG;cAAmB,MAAA,WAAA,EAAY,KAAK;kBAAuB,MAAA,WAAA,EAAY,SAAS;kBAAuB,MAAA,WAAA,EAAY,SAAS;kBAAuB,MAAA,WAAA,EAAY,SAAS;kBAAuB,MAAA,WAAA,EAAY,SAAS;mBAAwB,MAAA,WAAA,EAAY,UAAU;qBAA0B,MAAA,WAAA,EAAY,YAAY;sBAA2B,MAAA,WAAA,EAAY,aAAa;gBAAqB,MAAA,WAAA,EAAY,OAAO;2BAAgC,MAAA,WAAA,EAAY;kBAAmC,MAAA,WAAA,EAAY,SAAS;aAAkB,MAAA,WAAA,EAAY,IAAI;cAAmB,MAAA,WAAA,EAAY,KAAK;;QAgB5lB,uBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAAI;cAAiB,KAAK,SAAS,MAAA,WAAA,EAAY,WAAW,MAAM,SAAS,KAAK,OAAO,MAAA,WAAA,EAAY,WAAW,MAAM,OAAO,KAAK,MAAM,QAAQ,MAAA,WAAA,EAAY,WAAW,MAAM,KAAA,MAAK,KAAW,KAAK,IAAI,QAAQ,MAAA,WAAA,EAAY,WAAW,MAAM,GAAA,MAAG,EAAA;AAAsB,gBAAA,WAAA,EAAY,aAAa,IAAA;;QAI9S,wBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,SAAI;cAAiB,MAAA,yCAAA,EAAW,MAAM,MAAA,WAAA,EAAY,YAAY,KAAA,KAAU,KAAK,QAAQ,MAAA,WAAA,EAAY,YAAY,KAAA,MAAK,EAAA;AAAsB,gBAAA,WAAA,EAAY,oBAAoB,IAAA;;;yBAK9L,CAGE,EAhCQ,UAAU,WAAA,MAAU,CA6B9B,WAGE,KAAA,QAAA,WAAA;UAFW;UACG;;;;;;;;;;;;;;;;;;;;;;;;AEhCpB,UAAMC,SAAQ;AAEd,UAAM,cAAc,+BAAA;AAEpB,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,QAAQ,OAAA,MAAA;AAC7D,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,QAAQ,OAAA,MAAA;;0BAI3D,YAUY,MAAA,SAAA,GAVZ,WACUA,QAAK;QACb,UAAS;QACT,MAAK;QACJ,iBAAe,SAAA;QACf,iBAAe,SAAA;QACf,iBAAe,SAAA,SAAQ;QACvB,iBAAe,SAAA,SAAQ;;yBAExB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBZ,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,yBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;;0BAIZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;;0BAIZ,YAEwB,MAAA,6BAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAClC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;;0BAIZ,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACb,eAAY,OAAM,CAAA,GAAA;yBAElB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AETZ,UAAMC,SAAQ;;0BAIZ,YAEwB,MAAA,6BAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAClC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;;0BAIZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;;0BAIZ,YAEuB,MAAA,4BAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACjC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;;0BAIZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;;0BAIZ,YAEwB,MAAA,6BAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAClC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;;0BAIZ,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;;0BAIZ,YAEsB,MAAA,2BAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAChC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEHZ,UAAMC,SAAQ;AAOd,UAAM,cAAc,+BAAA;;0BAIlB,YAOY,MAAA,SAAA,GAPZ,WACUA,QAAK,EACZ,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA,OAAA,CAAA,GAAA;yBAE1C,MAEO,CAFP,WAEO,KAAA,QAAA,WAAA,EAFA,cAAe,MAAA,WAAA,EAAY,aAAa,MAAA,GAA/C,MAEO,CAAA,gBAAA,gBADF,MAAA,WAAA,EAAY,aAAa,KAAA,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AElBvC,UAAMC,SAAQ;;0BAUZ,YAOuB,MAAA,4BAAA,GAAA,eAAA,mBALbA,MAAA,CAAK,GAAA;yBAEb,CAEO,EALG,aAAA,MAAY,CAGtB,WAEO,KAAA,QAAA,WAAA,EAFe,aAAY,GAAlC,MAEO,CAAA,gBAAA,gBADF,YAAA,GAAY,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfrB,UAAMC,SAAQ;;0BAIZ,YAEsB,MAAA,2BAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAChC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AESZ,UAAMC,SAAQ;AAGd,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,SAAS,YAAY,qBAAqBA,OAAM,QAAA,CAAS;AAE9G,UAAM,cAAc,+BAAA;;0BAIlB,YAaY,MAAA,SAAA,GAAA;QAZT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,cAAW;QACV,MAAMD,KAAAA,OAAE,WAAA,WAAA;QACR,iBAAe,SAAA,SAAA;QACf,iBAAe,SAAA,SAAA;QACf,UAAU,SAAA;QACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,SAASD,OAAM,QAAA;;yBAEnC,MAEO,CAFP,WAEO,KAAA,QAAA,WAAA,EAFA,UAAA,SAAA,MAAQ,GAAf,MAEO,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAFS,aAAA,EAEhB,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElCJ,UAAMG,SAAQ;;0BAKZ,YAKoB,MAAA,yBAAA,GAAA,eAAA,mBAHVA,MAAA,CAAK,GAAA;yBAEb,CAHQ,cAAS,CAGjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEI3B,UAAMC,SAAQ;AAGd,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,SAAS,YAAY,qBAAqBA,OAAM,QAAA,CAAS;AAE9G,UAAM,cAAc,+BAAA;;0BAIlB,YAaY,MAAA,SAAA,GAAA;QAZT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,cAAW;QACV,MAAMD,KAAAA,OAAE,WAAA,WAAA;QACR,iBAAe,SAAA,SAAA;QACf,iBAAe,SAAA,SAAA;QACf,UAAU,SAAA;QACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,SAASD,OAAM,QAAA;;yBAEnC,MAEO,CAFP,WAEO,KAAA,QAAA,WAAA,EAFA,UAAA,SAAA,MAAQ,GAAf,MAEO,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAFS,aAAA,EAEhB,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElCJ,UAAMG,SAAQ;;0BAKZ,YAKoB,MAAA,yBAAA,GAAA,eAAA,mBAHVA,MAAA,CAAK,GAAA;yBAEb,CAHQ,cAAS,CAGjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AET3B,UAAMC,SAAQ;AACd,UAAM,cAAc,iCAAA;;0BAIlB,YASiB,MAAA,sBAAA,GATjB,WASiB,EARf,gCAA6B,UAAS,GAC9BA,QAAK;QACZ,UAAU,MAAA,WAAA,EAAY,SAAS;QAC/B,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,MAAa;;AAAa,sBAAA,WAAA,EAAY,aAAa,UAAzB,mBAAgC,kBAAkB,EAAE;;;yBAIzF,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZZ,UAAMC,SAAQ;AAKd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEmB,MAAA,wBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBACnD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEDZ,IAAa,CAAC,+BAA+B,8BAAA,IACzC,cAAuC,kBAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAQ3C,UAAMC,SAAQ;AAId,UAAM,OAAO;AASb,qBAAA;AACA,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,iBAAiB,IAAA;AAEvB,UAAM,EAAE,OAAO,KAAK,QAAA,IAAY,OAAOA,MAAA;AACvC,UAAM,MAAM,aAAa,OAAA;AACzB,mCAA+B;MAC7B;MACA,cAAc,CAAC,UAAU;AACvB,aAAK,QAAQ;MACd;MACD,cAAc,MAAM;AAClB,aAAK,QAAA,CAAS,KAAK;MACpB;MACD,WAAW;MACX;MACA,WAAW;MACX;MACA;IACD,CAAA;;0BAIC,YAMW,MAAA,gBAAA,GAAA;QALD,MAAM,MAAA,IAAA;6EAAA,KAAI,QAAA,SAAA;QACjB,KAAK,MAAA,GAAA;QACL,OAAO,MAAA,KAAA;;yBAER,MAAqB,CAArB,WAAqB,KAAA,QAAA,WAAA,EAAd,MAAM,MAAA,IAAA,EAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5DrB,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,qBAAA;AAEA,UAAM,cAAc,8BAAA;AAEpB,UAAM,0BAA0B,IAAI,KAAA;AAEpC,aAAS,qBAAqB,OAAc;AAC1C,UAAI,MAAM,iBACR;AACF,UAAA,CAAK,wBAAwB,MAC3B,YAAW,MAAM;;AACf,0BAAY,eAAe,UAA3B,mBAAkC;MACnC,GAAE,CAAA;AAEL,8BAAwB,QAAQ;AAGhC,YAAM,eAAA;IACR;AAEA,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,4BAAA;;;0BAIzC,YA2Bc,MAAA,mBAAA,GA3Bd,WACU,MA0BI,SAAA,GA1BK;QAChB,IAAI,MAAA,WAAA,EAAY;QAChB,oBAAiB,WAAA,WAAA,MAAA,mBAAa;QAC9B,OAAO;;;;;;QAUP;QACA,kBAAkB;QAClB,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;;cAAiB,MAAM,iBAAgB;gBAAsB,gBAAgB,MAAM,OAAO;gBAA2C,gBAAgB,cAAc,WAAM,KAAU,cAAc,YAAO;gBAAuB,eAAe,cAAc,WAAM,KAAU;eAA0B,MAAA,WAAA,EAAY,MAAM,SAAS,aAAc,yBAAA,QAAuB;eAAmBC,MAAA,MAAA,WAAA,EAAY,eAAe,UAA3B,gBAAAA,IAAkC,SAAS,MAAM,QAAwB,OAAM,eAAA;;;yBAUje,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AE5DZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEW,MAAA,gBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBAC3C,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEXZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEoB,MAAA,yBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPZ,UAAMC,SAAQ;;0BAIZ,YAEa,MAAA,kBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACvB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AECZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEiB,MAAA,sBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBACjD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AETZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,qBAAA;;0BAIE,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFO,MAAA,SAAA,CAAS,CAAA,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEdZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC1B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AEAZ,UAAMC,SAAQ;AAGd,UAAM,OAAO;AASb,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,SAAUA,OAAM,SAAA;MAChB,cAAcA,OAAM,eAAe;IACpC,CAAA;AAED,qBAAA;;0BAIE,YAEU,MAAA,eAAA,GAAA;QAFO,MAAM,MAAA,IAAA;6EAAA,KAAI,QAAA,SAAA;;yBACzB,MAAqB,CAArB,WAAqB,KAAA,QAAA,WAAA,EAAd,MAAM,MAAA,IAAA,EAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtBrB,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,qBAAA;;0BAIE,YAeiB,MAAA,sBAAA,GAfjB,WACU,MAcO,SAAA,GAdE,EAChB,OAAO;;;;;;MAUP,EAAA,CAAA,GAAA;yBAED,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3BZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEiB,MAAA,sBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC3B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEEZ,UAAMC,SAAQ;AAId,UAAM,cAAc,8BAAA;AAEpB,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AAEvD,cAAU,MAAM;AACd,kBAAY,iBAAiB;IAC9B,CAAA;AAED,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,4BAAA;;0BAIzC,YAwCa,MAAA,kBAAA,GAAA,EAxCD,YAAA,GAAQ,GAAA;yBAClB,MAsCY,CAtCZ,YAsCY,MAAA,SAAA,GAAA;UArCT,IAAI,MAAA,WAAA,EAAY;UAChB,KAAK,MAAA,UAAA;UACL,MAAMC,KAAAA,OAAE,WAAA,WAAA;UACR,YAAUF,OAAM;UAChB,IAAIE,KAAAA;UACL,iBAAc;UACb,iBAAe,MAAA,WAAA,EAAY,KAAK;UAChC,iBAAe,MAAA,WAAA,EAAY,KAAK,QAAQ,MAAA,WAAA,EAAY,YAAA;UACpD,iBAAeC,KAAAA,WAAQ,KAAA;UACvB,UAAUA,KAAAA;UACV,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;UAClC,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,OAAkB,UAAK;;iBAA+MA,KAAAA,YAAY,MAAM,WAAM,KAAU,MAAM,YAAO,OAAA;AAA0B,0BAAA,WAAA,MAAA,mBAAa;oBAAkC,SAAA;kBAA6J,MAAA,WAAA,EAAY,KAAK,MAAO,OAAM,eAAA;;;UAa9hB,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,SAAA,CAAmC,UAAK;gBAAqBA,KAAAA,SAAQ;+BAAuC,SAAS,MAAM,GAAA,EAAM,OAAA,WAAA,EAAY,aAAA;gBAA8B,MAAM,QAAG,YAAkB,OAAA,WAAA,EAAY,aAAY,IAAA;;;;;cAAgM,SAAS,MAAM,GAAA,EAAkB,OAAM,eAAA;;;;;;;2BAY7c,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;AEHd,IAAa,CAAC,2BAA2B,0BAAA,IACrC,cAAmC,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcvC,UAAMC,SAAQ;AAWd,UAAM,QAAQ;AAkBd,UAAM,EACJ,IACA,MACA,cACA,mBACA,aAAa,iBACb,WACA,UACA,KAAK,SACL,YACA,gBACA,eACA,UACA,YACA,SAAA,IACE,OAAOA,MAAA;AAEX,UAAM,WAAW,IAAA;AACjB,UAAM,MAAM,aAAa,OAAA;AACzB,UAAM,YAAY,IAAI,kBAAkB,SAAS,KAAA;AAEjD,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAc,aAAa,SAAS;MACpC,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAE7C,UAAM,gBAAgB,eAAe,cAAA;AAErC,UAAM,cAAc,SAAS,MAAM;AACjC,aAAA,OAAc,gBAAgB,UAAU,WAAW;QAAE,MAAM,gBAAgB;QAAO,SAAS,gBAAgB;MAAO,IAAG,gBAAgB;IACtI,CAAA;AAED,UAAM,aAAa,IAAI,WAAW,KAAA;AAElC,UAAM,MAAM,WAAW,OAAO,MAAM;AAClC,iBAAW,QAAQ,WAAW;IAC/B,GAAE;MAAE,WAAW;MAAM,MAAM;IAAM,CAAA;AAElC,aAAS,SAAS;AAChB,gBAAU,QAAQ;AAClB,YAAM,gBAAgB,QAAA;IACxB;AAEA,aAAS,OAAO;AACd,gBAAU,QAAQ;AAClB,iBAAW,QAAQ,WAAW;AAE9B,YAAM,gBAAgB,MAAA;IACxB;AAEA,aAAS,SAAS;AAChB,iBAAW,QAAQ,WAAW;AAC9B,gBAAU,QAAQ;AAElB,YAAM,gBAAgB,QAAA;AACtB,YAAM,UAAU,WAAW,KAAA;IAC7B;AAEA,aAAS,gBAAgB;AACvB,UAAI,UAAU,MACZ,KAAI,WAAW,UAAU,UAAU,WAAW,UAAU,OACtD,QAAA;UAEA,QAAA;IAEN;AAEA,UAAM,qBAAqB,sBAAsB,MAAM,cAAA,GAAiB,gBAAgB,SAAA;AACxF,UAAM,eAAe,gBAAgB,MAAM,cAAA,GAAiB,gBAAgB,SAAA;AAE5E,UAAM,UAAU,SAAS,MAAM,WAAW,UAAU,EAAA;AAEpD,aAAa;MAEX;MAEA;MAEA;IACD,CAAA;AAED,+BAA2B;MACzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;;0BAIC,YA4BY,MAAA,SAAA,GA5BZ,WACUC,KA2BE,QA3BI;iBACV;QAAJ,KAAI;QACH,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,KAAK,MAAA,GAAA;QACN,0BAAA;wBACgB,MAAA,YAAA,EAAa;uBACd,MAAA,YAAA,EAAa;8BACN,MAAA,kBAAA,EAAmB;;yBAEzC,MAOE,CAPF,WAOE,KAAA,QAAA,WAAA;UANC,YAAa,MAAA,UAAA;UACb,WAAY,UAAA;UACZ,SAAU,QAAA;UACF;UACA;UACF;YAID,MAAA,aAAA,KAAiB,MAAA,IAAA,KAAI,UAAA,GAD7B,YAOE,MAAA,2BAAA,GAAA;;UALA,MAAK;UACJ,OAAO,MAAA,UAAA;UACP,MAAM,MAAA,IAAA;UACN,UAAU,MAAA,QAAA;UACV,UAAU,MAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5OjB,UAAMC,SAAQ;AAEd,UAAMC,WAAU,0BAAA;;0BAId,YAWY,MAAA,SAAA,GAXZ,WACUD,QAAK;QACZ,0BAAwB,MAAAC,QAAA,EAAQ,UAAU,QAAA,SAAiB;QAC3D,cAAY,MAAAA,QAAA,EAAQ,UAAU,QAAK,KAAA;QACnC,gBAAc,MAAAA,QAAA,EAAQ,UAAU,QAAK,KAAA;QACrC,cAAY,MAAAA,QAAA,EAAQ,QAAQ,QAAK,KAAA;QACjC,iBAAe,MAAAA,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,iBAAe,MAAAA,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,OAAO,MAAAA,QAAA,EAAQ,WAAW,QAAK,EAAA,SAAA,cAAA,IAAA;;yBAEhC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBZ,UAAMC,SAAQ;AAEd,UAAMC,WAAU,0BAAA;;0BAId,YAWY,MAAA,SAAA,GAXZ,WACUD,QAAK;QACb,cAAW;QACV,iBAAe,MAAAC,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,iBAAe,MAAAA,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,UAAU,MAAAA,QAAA,EAAQ,SAAS;QAC3B,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,QAAQ,MAAAD,QAAA,EAAQ,UAAU,QAAA,SAAiB;QAC3C,SAAO,MAAAA,QAAA,EAAQ;;yBAEhB,MAAmB,CAAnB,WAAmB,KAAA,QAAA,WAAA,CAAA,GAAnB,MAAmB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAb,QAAA,EAAM,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBhB,UAAME,SAAQ;AAEd,UAAMC,WAAU,0BAAA;;0BAId,YAWY,MAAA,SAAA,GAXZ,WACUD,QAAK;QACb,cAAW;QACV,iBAAe,MAAAC,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,iBAAe,MAAAA,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,UAAU,MAAAA,QAAA,EAAQ,SAAS;QAC3B,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,QAAQ,MAAAD,QAAA,EAAQ,UAAU,QAAK,KAAA;QAC/B,SAAO,MAAAA,QAAA,EAAQ;;yBAEhB,MAAiB,CAAjB,WAAiB,KAAA,QAAA,WAAA,CAAA,GAAjB,MAAiB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAX,MAAA,EAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbd,UAAME,SAAQ;AAId,UAAM,MAAM,OAAA;AAEZ,UAAMC,WAAU,0BAAA;AAEhB,UAAM,WAAW,SAAS,MAAMA,SAAQ,SAAS,KAAA;AAEjD,UAAM,cAAc,SAAS,MAAA;;AAAM,mBAAAA,SAAQ,YAAY,UAApB,mBAA2B;KAAA;AAE9D,UAAM,EAAE,kBAAkB,gBAAgB,SAAA,IAAa,oBAAA;AAEvD,cAAU,MAAM;;AACd,MAAAA,SAAQ,SAAS,QAAQ,SAAS;AAClC,UAAIA,SAAQ,kBAAkB,OAAO;AACnC,cAAAA,SAAQ,SAAS,UAAjB,mBAAwB,MAAM,EAAE,eAAe,KAAM;AACrD,YAAIA,SAAQ,cAAc,MACxB,OAAAA,SAAQ,SAAS,UAAjB,mBAAwB;MAC5B;IACD,CAAA;AAED,UAAMA,SAAQ,WAAW,CAAC,UAAU;AAClC,UAAI,MACF,UAAS,MAAM;;AACb,cAAAA,SAAQ,SAAS,UAAjB,mBAAwB,MAAM,EAAE,eAAe,KAAM;AACrD,YAAIA,SAAQ,cAAc,MACxB,OAAAA,SAAQ,SAAS,UAAjB,mBAAwB;MAC3B,CAAA;IAEJ,CAAA;AAED,aAAS,oBAAoB,OAAsB;AACjD,WAAKA,SAAQ,WAAW,UAAU,WAAWA,SAAQ,WAAW,UAAU,WAAW,MAAM,QAAQ,IAAI,SAAA,CAAU,MAAM,YAAA,CAAa,MAAM,QACxI,CAAAA,SAAQ,OAAA;IACZ;;0BAIE,YAkBY,MAAA,SAAA,GAlBZ,WAkBY;iBAjBN;QAAJ,KAAI;SACID,QAAK;QACZ,OAAO,MAAAC,QAAA,EAAQ,WAAW;QAC1B,aAAa,YAAA;QACb,UAAU,SAAA;QACV,WAAW,MAAAA,QAAA,EAAQ,UAAU;QAC7B,iBAAe,SAAA,QAAQ,KAAA;QACvB,iBAAe,MAAAA,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,UAAU,MAAAA,QAAA,EAAQ,SAAS;QAC5B,cAAW;QACV,QAAQ,MAAAA,QAAA,EAAQ,WAAW,QAAA,SAAA,CAAqB,MAAAA,QAAA,EAAQ,UAAU;QAClE,OAAO,MAAAA,QAAA,EAAQ,WAAW,QAAK;UAAA,KAAA;UAAA,UAAA;UAAA,YAAA,CAAiE,MAAAA,QAAA,EAAQ,UAAU,QAAK,WAAA;QAAuB,IAAA;QAC9I,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAAA,QAAA,EAAQ,WAAW,QAAQ,OAAO,OAAO;QAChD,WAAO,CAAA,SAAc,qBAAmB,CAAA,SAAA,OAAA,CAAA,GAAA,SAC3B,MAAAA,QAAA,EAAQ,QAAM,CAAA,KAAA,CAAA,CAAA;;yBAE5B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3DZ,UAAMC,SAAQ;AAEd,UAAMC,WAAU,0BAAA;AAEhB,UAAM,cAAc,SAAS,MAAA;;AAAM,mBAAAA,SAAQ,YAAY,UAApB,mBAA2B;KAAA;AAE9D,aAAS,cAAc;AACrB,UAAIA,SAAQ,eAAe,UAAU,QACnC,CAAAA,SAAQ,KAAA;IACZ;AACA,aAAS,oBAAoB;AAC3B,UAAIA,SAAQ,eAAe,UAAU,WACnC,CAAAA,SAAQ,KAAA;IACZ;;0BAIE,YAmBY,MAAA,SAAA,GAnBZ,WACUD,QAAK;QACb,UAAS;QACR,0BAAwB,MAAAC,QAAA,EAAQ,UAAU,QAAA,SAAiB;QAC3D,QAAQ,MAAAA,QAAA,EAAQ,WAAW,QAAA,SAAoB,MAAAA,QAAA,EAAQ,UAAU;QACjE,OAAO,MAAAA,QAAA,EAAQ,WAAW,QAAK;;;;sBAAiH,MAAAA,QAAA,EAAQ,UAAU,QAAK,WAAA;;;;QAQvK,WAAS;QACT,YAAU;;yBAEX,MAEO,CAFP,WAEO,KAAA,QAAA,WAAA,CAAA,GAFP,MAEO,CAAA,gBAAA,gBADF,MAAAA,QAAA,EAAQ,WAAW,SAAS,YAAA,KAAA,GAAW,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnChD,UAAMC,SAAQ;AAEd,UAAMC,WAAU,0BAAA;;0BAId,YAWY,MAAA,SAAA,GAXZ,WACUD,QAAK;QACb,cAAW;QACV,iBAAe,MAAAC,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,iBAAe,MAAAA,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,UAAU,MAAAA,QAAA,EAAQ,SAAS;QAC3B,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,QAAQ,MAAAD,QAAA,EAAQ,UAAU,QAAA,SAAiB;QAC3C,SAAO,MAAAA,QAAA,EAAQ;;yBAEhB,MAAmB,CAAnB,WAAmB,KAAA,QAAA,WAAA,CAAA,GAAnB,MAAmB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAb,QAAA,EAAM,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBhB,UAAME,SAAQ;AAKd,qBAAA;;0BAIE,YAEc,MAAA,mBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACxB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEWZ,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxC,UAAMC,SAAQ;AAMd,UAAM,OAAO;AASb,UAAM,EAAE,WAAW,WAAA,IAAe,OAAOA,MAAA;AAEzC,qBAAA;AACA,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,eAAe,IAAI,CAAA;AACzB,UAAM,gBAAgB,IAAI,CAAA;AAC1B,UAAM,kBAAkB,IAAI,KAAA;AAC5B,UAAM,4BAA4B,IAAI,KAAA;AACtC,UAAM,wBAAwB,IAAI,KAAA;AAClC,UAAM,iBAAiB,IAAA;AAEvB,aAAS,aAAa;AACpB,mBAAa,cAAc,KAAA;AAC3B,mBAAa,QAAQ,OAAO,WAAW,MAAM,KAAK,QAAQ,MAAM,UAAU,KAAA;IAC5E;AAEA,aAAS,cAAc;AACrB,mBAAa,aAAa,KAAA;AAC1B,UAAA,CAAK,gBAAgB,SAAA,CAAU,0BAA0B,MACvD,eAAc,QAAQ,OAAO,WAAW,MAAM,KAAK,QAAQ,OAAO,WAAW,KAAA;IACjF;AAEA,aAAS,gBAAgB;AACvB,WAAK,QAAQ;IACf;AAEA,gCAA4B;MAC1B;MACA,aAAa,OAAO;AAClB,aAAK,QAAQ;MACd;MACD,QAAQ;MACR,SAAS;MACT,WAAW;MACX;MACA;MACA;MACA;IACD,CAAA;;0BAIC,YAEa,MAAA,kBAAA,GAAA,MAAA;yBADX,MAAqB,CAArB,WAAqB,KAAA,QAAA,WAAA,EAAd,MAAM,MAAA,IAAA,EAAI,CAAA,CAAA,CAAA;;;;;;;;;AEtGrB,SAAgB,aAAaC,cAA0B;AACrD,SAAO,CAACC,UAAwB,MAAM,gBAAgB,UAAA,SAAsB,aAAA;AAC7E;AAMD,SAAgB,iBAAiBC,WAAwB;AACvD,QAAMC,QAAuB,CAAE;AAC/B,QAAM,SAAS,SAAS,iBAAiB,WAAW,WAAW,cAAc,EAC3E,YAAY,CAACC,SAAc;AAIzB,WAAO,KAAK,YAAY,IAAI,WAAW,gBAAgB,WAAW;EACnE,EACF,CAAA;AACD,SAAO,OAAO,SAAA,EAAY,OAAM,KAAK,OAAO,WAAA;AAC5C,SAAO;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFD,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,gBAAgBA,MAAA;AAElC,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AACvD,UAAM,cAAc,2BAAA;AACpB,UAAM,EAAE,oBAAoB,cAAA,IAAkB,aAAa,YAAY,gBAAgB,cAAA;AAEvF,YAAQ,YAAY,uBAAuB,oBAAoB,EAAE,WAAW,MAAO,CAAA;AAEnF,kBAAc,MAAM;AAClB,kBAAY,QAAA;IACb,CAAA;AAED,UAAM,mBAAmB,IAAI,KAAA;AAE7B,QAAI;AACJ,gBAAY,CAAC,cAAc;AACzB,UAAI,iBAAiB,OAAO;AAC1B,cAAM,OAAO,SAAS;AAGtB,iCAAyB,KAAK,MAAM,cAAc,KAAK,MAAM;AAE7D,aAAK,MAAM,aAAa;AACxB,aAAK,MAAM,mBAAmB;AAE9B,kBAAU,MAAM;AACd,eAAK,MAAM,aAAa;AACxB,eAAK,MAAM,mBAAmB;QAC/B,CAAA;MACH;IACD,CAAA;AAED,aAASC,mBAAkB;AACzB,uBAAiB,QAAQ;AACzB,kBAAY,0BAA0B,QAAQ;AAG9C,eAAS,MAAM;;AACb,cAAM,iBAAe,cAAS,aAAA,MAAT,mBAAyB,gBAAe;AAC7D,YAAI,aACF,aAAY,gBAAgB,QAAQ;MACvC,CAAA;IACH;AACA,cAAU,MAAM;AACd,UAAI,eAAe,OAAO;AACxB,iBAAS,iBAAiB,aAAaA,gBAAA;AAEvC,cAAM,YAAY,iBAAiB,eAAe,KAAA;AAClD,kBAAU,QAAQ,CAAA,aAAY,SAAS,aAAa,YAAY,IAAA,CAAK;MACvE;IACD,CAAA;AAED,gBAAY,MAAM;AAChB,eAAS,oBAAoB,aAAaA,gBAAA;AAC1C,kBAAY,gBAAgB,QAAQ;AACpC,kBAAY,0BAA0B,QAAQ;IAC/C,CAAA;;0BAIC,YAkCmB,MAAA,wBAAA,GAAA;QAjCjB,YAAA;QACC,kCAAgC;QAChC,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;QACxC,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,sBAAuB,MAAA;QAClD,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAA,WAAU,MAAK,gBAAiB,MAAA,GAAM,CAAA,SAAA,CAAA;QACnD,WAAS,MAAA,WAAA,EAAY;;yBAEtB,MAyBgB,CAzBhB,YAyBgB,MAAA,qBAAA,GAzBhB,WAyBgB;UAAA,GAxBD,MAAA,SAAA;UAAS,GAAKC,KAAAA;QAAM,GAAA;UAChC,KAAK,MAAA,UAAA;UACL,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;UAClC,OAAK;0BAA0B,iBAAA,QAAgB,SAAA;gCAAqF,iBAAA,QAAgB,SAAA;;;;;;;UAWpJ,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAmB;gBAAkE,MAAM,cAA8B,SAAS,MAAM,MAAA,EAAoC,kBAAA,QAAgB;AAA0B,kBAAA,WAAA,EAAY,gBAAgB,QAAK;AAAkB,kBAAA,WAAA,EAAY,0BAA0B,QAAK;;;2BASnU,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3Fd,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,cAAc,2BAAA;;0BAIlB,YAUW,MAAA,gBAAA,GAAA,EATR,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK,MAAA,GAAA;yBAEzC,MAMuB,CANvB,YAMuB,8BANvB,WACU,MAKa,SAAA,GALJ;UAChB,KAAK,MAAA,UAAA;UACL,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,YAAA,EAAa,MAAA,WAAA,EAAY,MAAA,EAAQ,MAAA;;2BAEhD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7Bd,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEEZ,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,cAAc,2BAAA;AACpB,gBAAY,iBAAiB;AAE7B,aAAS,cAAc;AACrB,iBAAW,MAAM;AACf,YAAA,CAAK,YAAY,sBAAsB,SAAA,CAAU,YAAY,KAAK,MAChE,aAAY,QAAA;MAEf,GAAE,CAAA;IACL;;0BAIE,YAiBe,MAAA,oBAAA,GAAA;QAhBb,YAAA;QACC,WAAWC,KAAAA;;yBAEZ,MAYY,CAZZ,YAYY,MAAA,SAAA,GAAA;UAXT,KAAK,MAAA,UAAA;UACL,YAAUC,KAAAA;UACV,IAAIC,KAAAA;UACJ,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;UACnC,2BAAA;UACC,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,YAAA,EAAa,MAAA,WAAA,EAAY,MAAA,EAAQ,MAAA;UAC/C,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,YAAA,EAAa,WAAA,EAAa,MAAA;UACxC,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,OAAA;UACnB,QAAI,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,QAAA;;2BAEnB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhCd,UAAMC,SAAQ;AAId,qBAAA;;0BAIE,YAQY,MAAA,SAAA,GARZ,WACUA,QAAK,EACZ,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;aAA6E,MAAM,oBAAoB,MAAM,SAAM,EAAM,OAAM,eAAA;;yBAKjJ,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBZ,UAAMC,SAAQ;AAKd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEmB,MAAA,wBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBACnD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEUZ,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAkC,aAAA;;;;;;;;;;;;;;;;;;;;;;;;AAStC,UAAMC,SAAQ;AAGd,UAAM,OAAO;AASb,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,EAAE,eAAA,IAAmB,cAAc;MAAE,KAAK;MAAW,YAAY;IAAM,CAAA;AAE7E,UAAM,aAAa,UAAUA,QAAO,cAAc,MAAM;MACtD,cAAcA,OAAM,gBAAgB;MACpC,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,mBAAmB,IAAmB,IAAA;AAE5C,UAAM,EAAE,KAAK,SAAS,KAAA,IAAS,OAAOA,MAAA;AACtC,UAAM,MAAM,aAAa,OAAA;AACzB,8BAA0B;MACxB;MACA;MACA;MACA,YAAY,CAAC,UAAU;AACrB,mBAAW,QAAQ;AACnB,yBAAiB,QAAQ;MAC1B;MACD,aAAa,MAAM;AACjB,mBAAW,QAAQ;MACpB;MACD,cAAc,CAAC,UAAU;AACvB,mBAAW,QAAQ,WAAW,QAAQ,KAAK;AAG3C,yBAAiB,QAAQ;MAC1B;IACF,CAAA;;0BAIC,YAeiB,MAAA,cAAA,GAAA,MAAA;yBAdf,MAamB,CAbnB,YAamB,MAAA,wBAAA,GAAA;UAZT,uBAAqB,iBAAA;6EAAA,iBAAgB,QAAA;UAC7C,aAAY;UACX,MAAM,MAAA,IAAA;UACN,KAAK,MAAA,GAAA;UACN,YAAA;;2BAEA,MAKY,CALZ,YAKY,MAAA,SAAA,GAAA;YAJT,KAAK,MAAA,UAAA;YACN,MAAK;;6BAEL,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;AEhFtC,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAkC,aAAA;;;;;;;;AAQtC,UAAMC,SAAQ;AAEd,UAAM,QAAQC,OAAMD,OAAM,KAAA;AAC1B,UAAM,cAAc,yBAAA;AACpB,qBAAA;AAEA,UAAM,iBAAiB,IAAA;AACvB,UAAM,4BAA4B,IAAI,KAAA;AAEtC,UAAM,OAAO,SAAS,MAAM,YAAY,WAAW,UAAU,KAAA;AAE7D,UAAM,MAAM,MAAM;AAChB,UAAA,CAAK,KAAK,MACR,2BAA0B,QAAQ;IACrC,CAAA;AAED,8BAA0B;MACxB;MACA;MACA,WAAW;MACX,WAAW;MACX;IACD,CAAA;;0BAIC,YAaW,MAAA,gBAAA,GAAA;QAZR,MAAM,KAAA;QACN,OAAO;QACP,KAAK,MAAA,WAAA,EAAY,IAAI;QACrB,iBAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,YAAK;eAAmJ,QAAO,OAAA,WAAA,EAAY,YAAA;;;yBAQjM,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnDZ,UAAME,SAAQ;AAGd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,qBAAA;AAEA,UAAM,cAAc,yBAAA;AACpB,UAAM,cAAc,yBAAA;AAEpB,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,sBAAA;AAE3C,UAAM,EAAE,SAAA,IAAa,cAAc,EAAE,KAAK,UAAW,CAAA;AAErD,UAAM,0BAA0B,IAAI,KAAA;AAEpC,aAAS,sBAAsB,OAAsB;AACnD,YAAM,SAAS,MAAM;AACrB,YAAM,qBAAqB,OAAO,aAChC,8BAAA;AAGF,YAAM,cAAc,YAAY,IAAI,UAAU,QAAQ,eAAe;AACrE,YAAM,YAAY,gBAAgB,MAAM;AACxC,YAAM,YAAA,CAAa;AAGnB,UAAI,aAAa,mBACf;AAEF,UAAI,kBAAkB,SAAA,EAAW,OAAO,CAAA,MAAK,EAAE,IAAI,QAAQ,aAAa,EAAA,EAAI,IAAI,CAAA,MAAK,EAAE,IAAI,QAAQ,KAAA;AACnG,UAAI,UACF,iBAAgB,QAAA;AAElB,YAAM,eAAe,gBAAgB,QAAQ,YAAY,KAAA;AAEzD,wBAAkB,YAAY,KAAK,QAC/B,UAAU,iBAAiB,eAAe,CAAA,IAC1C,gBAAgB,MAAM,eAAe,CAAA;AAEzC,YAAM,CAAC,SAAA,IAAa;AACpB,UAAI,UACF,aAAY,WAAW,SAAA;IAC3B;;0BAIE,YAyCc,MAAA,mBAAA,GAzCd,WACU,MAwCI,SAAA,GAxCK;QAChB,IAAI,MAAA,WAAA,EAAY;QACjB,6BAA0B;QACzB,mBAAiB,MAAA,WAAA,EAAY;QAC7B,OAAO;;;;;;QASP;QACA,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;;gBAAmB,cAAc,QAAQ,MAAA,WAAA,EAAY,WAAW,KAAA;eAAmB,eAAA,CAAgB,wBAAA,MAAmC,aAAA,WAAA,EAAY,eAAe,UAA3B,mBAAkC;AAAwB,kCAAA,QAAuB;AAA6G,gBAAM,eAAA;;QAUlW,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,SAAS,MAAM;gBAAmC,mBAAmB,MAAA,QAAA,EAAQ,EAAG,OAAO,CAAA,MAAK,EAAE,IAAI,QAAQ,aAAQ,EAAA,EAAS,KAAI,CAAE,MAAM,EAAE,IAAI,SAAS,MAAA,CAAM;cAAc,iBAAkB,OAAM,eAAA;;QAK1O,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAU,UAAK;AAAe,kCAAA,QAAuB;;QAKrE,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;eAAkB,MAAA,WAAA,EAAY,0BAA0B,MAAO,OAAM,eAAA;;QAGxF,WAAO,SAAyB,uBAAqB,CAAA,eAAA,YAAA,CAAA;;yBAEtD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AE9FZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEW,MAAA,gBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBAC3C,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AEXZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEoB,MAAA,yBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEY,MAAA,iBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPZ,UAAMC,SAAQ;;0BAIZ,YAEa,MAAA,kBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACvB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AECZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAEiB,MAAA,sBAAA,GAAA,eAAA,mBAAA;QAAA,GAFYA;QAAK,GAAK,MAAA,YAAA;MAAY,CAAA,CAAA,GAAA;yBACjD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AETZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,qBAAA;;0BAIE,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFO,MAAA,SAAA,CAAS,CAAA,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEdZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEgB,MAAA,qBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC1B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AEAZ,UAAMC,SAAQ;AAGd,UAAM,OAAO;AASb,qBAAA;AACA,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,cAAcA,OAAM,eAAe;MACnC,SAAUA,OAAM,SAAA;IACjB,CAAA;;0BAIC,YAEU,MAAA,eAAA,GAAA;QAFO,MAAM,MAAA,IAAA;6EAAA,KAAI,QAAA,SAAA;;yBACzB,MAAqB,CAArB,WAAqB,KAAA,QAAA,WAAA,EAAd,MAAM,MAAA,IAAA,EAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBrB,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,qBAAA;AAEA,UAAM,EAAE,SAAA,IAAa,cAAc,EAAE,KAAK,UAAW,CAAA;AAErD,UAAM,cAAc,yBAAA;AACpB,UAAM,cAAc,yBAAA;AAEpB,aAAS,sBAAsB,OAAsB;AACnD,YAAM,SAAS,MAAM;AACrB,YAAM,qBAAqB,OAAO,aAChC,8BAAA;AAIF,UAAI,mBACF;AAEF,UAAI,kBAAkB,SAAA,EAAW,OAAO,CAAA,MAAK,EAAE,IAAI,QAAQ,aAAa,EAAA,EAAI,IAAI,CAAA,MAAK,EAAE,IAAI,QAAQ,KAAA;AACnG,YAAM,eAAe,gBAAgB,QAAQ,YAAY,KAAA;AAEzD,wBAAkB,YAAY,KAAK,QAC/B,UAAU,iBAAiB,eAAe,CAAA,IAC1C,gBAAgB,MAAM,eAAe,CAAA;AAEzC,YAAM,CAAC,SAAA,IAAa;AACpB,UAAI,UACF,aAAY,WAAW,SAAA;IAC3B;;0BAIE,YAgBiB,MAAA,sBAAA,GAhBjB,WACU,MAeO,SAAA,GAfE;QACjB,6BAA0B;QACzB,OAAO;;;;;;QASP;QACA,WAAO,SAAc,uBAAqB,CAAA,aAAA,CAAA;;yBAE3C,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1DZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAKiB,MAAA,sBAAA,GALjB,WACUA,QAAK,EACb,gCAA6B,GAAE,CAAA,GAAA;yBAE/B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEKZ,UAAM,cAAc,yBAAA;AACpB,UAAM,cAAc,yBAAA;AAEpB,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AACvD,UAAM,EAAE,eAAA,IAAmB,cAAc,EAAE,KAAK,UAAW,CAAA;AAE3D,UAAM,YAAY,IAAI,KAAA;AAEtB,UAAM,OAAO,SAAS,MAAM,YAAY,WAAW,UAAU,YAAY,KAAA;AAEzE,cAAU,MAAM;AACd,kBAAY,iBAAiB;IAC9B,CAAA;;0BAIC,YAyDkB,MAAA,uBAAA,GAAA;QAxDhB,YAAA;QACC,WAAA,CAAYC,KAAAA;QACZ,eAAa,MAAA,WAAA,EAAY;;yBAE1B,MAmDiB,CAnDjB,YAmDiB,MAAA,cAAA,GAAA,MAAA;2BAlDf,MAiDa,CAjDb,YAiDa,MAAA,kBAAA,GAAA,EAjDD,YAAA,GAAQ,GAAA;6BAClB,MA+CY,CA/CZ,YA+CY,MAAA,SAAA,GAAA;cA9CT,IAAI,MAAA,WAAA,EAAY;cAChB,KAAK,MAAA,UAAA;cACL,IAAIC,KAAAA;cACJ,YAAUC,KAAAA;cACV,MAAMD,KAAAA,OAAE,WAAA,WAAA;cACT,MAAK;cACL,iBAAc;cACb,iBAAe,KAAA;cACf,iBAAe,KAAA,QAAO,MAAA,WAAA,EAAY,YAAA;cAClC,oBAAkB,UAAA,QAAS,KAAA;cAC3B,cAAY,KAAA,QAAI,SAAA;cAChB,iBAAeD,KAAAA,WAAQ,KAAA;cACvB,UAAUA,KAAAA;cACV,cAAY,MAAA,WAAA,EAAY;cACxB,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;qBAAqNA,KAAAA,YAAY,MAAM,WAAM,KAAU,MAAM,YAAO,OAAA;AAA4B,wBAAA,WAAA,EAAY,WAAW,MAAA,WAAA,EAAY,KAAA;uBAAiK,KAAA,MAAM,OAAM,eAAA;;;cAUngB,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;;sBAA4B,cAAc,QAAQ,MAAA,WAAA,EAAY,WAAW,KAAA;oBAAwB,eAAA,CAAgB,KAAA,OAAI;AAAkB,wBAAA,WAAA,EAAY,WAAW,MAAA,WAAA,EAAY,KAAA;AAAsB,8BAAA,cAAA,MAAA,mBAAgB;;;cAO5N,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,SAAA,CAA0B,UAAK;oBAAuBA,KAAAA,SAAQ;mCAAyC,SAAS,MAAM,GAAA,EAAM,OAAA,WAAA,EAAY,aAAa,MAAA,WAAA,EAAY,KAAA;oBAAwB,MAAM,QAAG,YAAkB,OAAA,WAAA,EAAY,WAAW,MAAA,WAAA,EAAY,KAAA;;;;;kBAAsM,SAAS,MAAM,GAAA,GAAG;AAAmB,wBAAA,WAAA,EAAY,0BAA0B,QAAK;AAAuB,wBAAM,eAAA;;;;;;;cAWjjB,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,UAAA,QAAS;cAChB,QAAI,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,UAAA,QAAS;;+BAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AELlB,IAAa,CAAC,6BAA6B,4BAAA,IACvC,cAAqC,CAAC,sBAAsB,mBAAoB,GAAE,uBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAetF,UAAMG,SAAQ;AAUd,UAAM,QAAQ;AASd,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM,gBAAgB;MACpC,SAAUA,OAAM,eAAA;IACjB,CAAA;AACD,UAAM,gBAAgB,IAAI,EAAA;AAE1B,UAAM,EAAE,YAAY,gBAAgB,mBAAA,IAAuB,iBAAA;AAE3D,UAAM,iBAAiB,IAAA;AACvB,UAAM,WAAW,IAAA;AACjB,UAAM,gBAAgB,IAAA;AAEtB,UAAM,EAAE,UAAU,eAAA,IAAmB,cAAc;MAAE,KAAK;MAAkB,YAAY;IAAM,CAAA;AAE9F,UAAM,EAAE,eAAe,mBAAmB,KAAK,SAAS,qBAAqB,qBAAqB,cAAA,IAAkB,OAAOA,MAAA;AAC3H,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,iBAAiB,aAAa,OAAO,iBAAA;AAC3C,UAAM,gBAAgB,SAAS,MAAM;AACnC,YAAM,SAAS,WAAW,UAAU;AACpC,UAAI,UAAU,eAAe,MAC3B,QAAO;UACJ,QAAO,cAAc;IAC3B,CAAA;AAED,UAAM,cAAc,cAAc,CAAC,QAAiB;AAElD,UAAA,OAAW,QAAQ,UAAU;AAC3B,sBAAc,QAAQ,WAAW;AACjC,mBAAW,QAAQ;MACrB;IACD,GAAE,aAAA;AAEH,gBAAY,MAAM;AAChB,UAAA,CAAK,WAAW,MACd;AAEF,YAAM,QAAQ,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA;AACpC,oBAAc,QAAQ,MAAM,KAAK,CAAA,SAC/B,KAAK,GAAG,SAAS,WAAW,KAAA,CAAM;IAErC,CAAA;AAED,iCAA6B;MAC3B,YAAY;MACZ;MACA;MACA,QAAQC,OAAA,QAAiB,sBAAA;MACzB;MACA;MACA;MACA;MACA,aAAaD,OAAM;MACnB;MACA;MACA;MACA,wBAAwB,CAAC,QAAQ;AAC/B,uBAAe,QAAQ;MACxB;MACD;MACA,kBAAkB,CAAC,QAAQ;AACzB,iBAAS,QAAQ;MAClB;MACD,gBAAgB,CAAC,QAAQ;AACvB,oBAAY,GAAA;MACb;MACD,gBAAgB,MAAM;AACpB,uBAAe,QAAQ;AACvB,oBAAY,EAAA;MACb;MACD,gBAAgB,MAAM;AACpB,oBAAA;MACD;MACD,gBAAgB,MAAM;AACpB,YAAA,CAAKA,OAAM,yBACT,aAAY,EAAA;MACf;MACD,cAAc,CAAC,QAAQ;AAErB,sBAAc,QAAQ,WAAW;AACjC,mBAAW,QAAQ;MACpB;MACD,eAAe,MAAM;AACnB,sBAAc,QAAQ,WAAW;AACjC,mBAAW,QAAQ;MACpB;IACF,CAAA;;0BAIC,YAYiB,MAAA,cAAA,GAAA,MAAA;yBAXf,MAUY,CAVZ,YAUY,MAAA,SAAA,GAAA;UATT,KAAK,MAAA,UAAA;UACN,cAAW;UACV,IAAIE,KAAAA;UACJ,YAAUC,KAAAA;UACV,oBAAkBC,KAAAA;UAClB,KAAK,MAAA,GAAA;UACN,6BAAA;;2BAEA,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AE1NpC,SAAgBC,cAAaC,MAAe;AAC1C,SAAO,OAAO,SAAS;AACxB;AAED,SAAgB,cAAcC,QAAgBC,OAAe;AAC3D,SAAO,GAAG,MAAA,YAAkB,KAAA;AAC7B;AAED,SAAgB,cAAcD,QAAgBC,OAAe;AAC3D,SAAO,GAAG,MAAA,YAAkB,KAAA;AAC7B;AAED,IAAa,cAAc;AAC3B,IAAa,6BAA6B;AAY1C,SAAgBC,uBAAsBC,WAAwB;AAC5D,QAAMC,QAAuB,CAAE;AAC/B,QAAM,SAAS,SAAS,iBAAiB,WAAW,WAAW,cAAc,EAC3E,YAAY,CAACC,SAAc;AACzB,UAAM,gBAAgB,KAAK,YAAY,WAAW,KAAK,SAAS;AAChE,QAAI,KAAK,YAAY,KAAK,UAAU,cAClC,QAAO,WAAW;AAIpB,WAAO,KAAK,YAAY,IACpB,WAAW,gBACX,WAAW;EAChB,EACF,CAAA;AACD,SAAO,OAAO,SAAA,EAAY,OAAM,KAAK,OAAO,WAAA;AAG5C,SAAO;AACR;AAED,SAAgBC,YAAWC,YAA2B;AACpD,QAAM,2BAA2B,iBAAA;AACjC,SAAO,WAAW,KAAK,CAAC,cAAc;AAEpC,QAAI,cAAc,yBAChB,QAAO;AACT,cAAU,MAAA;AACV,WAAO,iBAAA,MAAuB;EAC/B,CAAA;AACF;AAED,SAAgB,mBAAmBA,YAA2B;AAC5D,aAAW,QAAQ,CAAC,cAAc;AAChC,cAAU,QAAQ,WAAW,UAAU,aAAa,UAAA,KAAe;AACnE,cAAU,aAAa,YAAY,IAAA;EACpC,CAAA;AACD,SAAO,MAAM;AACX,eAAW,QAAQ,CAAC,cAAc;AAChC,YAAM,eAAe,UAAU,QAAQ;AACvC,gBAAU,aAAa,YAAY,YAAA;IACpC,CAAA;EACF;AACF;AAED,SAAgB,UAAkCC,SAA8B;AAC9E,SAAO,CAACC,UAAc,MAAM,gBAAgB,UAAU,QAAQ,KAAA,IAAM;AACrE;;;AClDD,IAAa,CAAC,iCAAiC,gCAAA,IAC3C,cAAyC,oBAAA;;;;;;;;;;;;;;;;;;;AAc7C,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAM,EAAE,SAAA,IAAa,cAAc,EAAE,KAAK,iBAAkB,CAAA;AAE5D,UAAMC,WAAU,4BAAA;AAEhB,UAAM,QAAQC,OAAMF,OAAM,KAAA;AAC1B,UAAMG,cAAa,IAAA;AACnB,UAAM,gBAAgB,IAAA;AAEtB,UAAM,YAAY,cAAcF,SAAQ,QAAQ,KAAA;AAEhD,QAAI,4BAAwC,OAAO,CAAE;AAErD,UAAM,oBAAoB,IAAI,KAAA;AAC9B,mBAAe,mBAAmB,OAAO,SAAS;AAChD,YAAM,KAAK,SAAS,eAAe,SAAA;AACnC,UAAI,IAAI;AACN,kCAAA;AACA,cAAM,aAAaG,uBAAsB,EAAA;AACzC,YAAI,WAAW,OACb,CAAAC,YAAW,SAAS,UAAU,aAAa,WAAW,QAAA,CAAS;MACnE;IACF;AAEA,aAAS,oBAAoB;AAC3B,YAAM,KAAK,SAAS,eAAe,SAAA;AACnC,UAAI,IAAI;AACN,cAAM,aAAaD,uBAAsB,EAAA;AACzC,YAAI,WAAW,OACb,6BAA4B,mBAAmB,UAAA;MACnD;IACF;AAEA,qCAAiC;MAC/B;MACA;MACA,YAAAD;MACA;MACA;MACA,gBAAgB;MAChB,mBAAmB;MACnB,uBAAuB;MACvB,oBAAoB;IACrB,CAAA;AAED,aAAS,cAAc;;AACrB,MAAAF,SAAQ,cAAA;AACR,YAAAE,YAAW,UAAX,mBAAkB;IACpB;AAEA,aAAS,cAAc,IAAmB;AACxC,YAAM,eAAe,iBAAA;AACrB,UAAI,GAAG,YAAY,MAAM,GAAG,QAAQ,QAClC,KAAIF,SAAQ,WAAW,UAAU,OAAO;AACtC,oBAAA;AACA,WAAG,eAAA;AACH;MACF,OACK;AACF,WAAG,OAAuB,MAAA;AAC3B,WAAG,eAAA;AACH;MACF;AAGF,YAAM,aAAa,SAAA,EAAW,OAAO,CAAA,MAAA;;AACnC,uBAAE,IAAI,kBAAN,mBAAqB,aAAa;OAAiB,EACnD,IAAI,CAAA,MAAK,EAAE,GAAA;AAGb,UAAA,CAAK,WAAW,SAAS,YAAA,EACvB;AAEF,YAAM,qBAAqB,mBAAmB,IAAI,cAAA,QAAyB;QACzE;QACA,MAAM;MACP,CAAA;AAED,UAAI,mBACF,0DAAoB;AAEtB,SAAG,eAAA;AACH,SAAG,gBAAA;IACL;;0BAIE,YAOY,MAAA,SAAA,GAAA;QANT,YAAUK,KAAAA;QACV,IAAIC,KAAAA;QACL,kBAAA;QACC,WAAO,SAAoC,eAAa;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA,CAAA;;yBAEzD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5GZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,EAAE,SAAA,IAAa,cAAc,EAAE,KAAK,iBAAkB,CAAA;AAC5D,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,cAAc,4BAAA;AACpB,UAAM,cAAc,gCAAA;AAEpB,UAAM,YAAY,cAAc,YAAY,QAAQ,YAAY,KAAA;AAChE,UAAM,YAAY,cAAc,YAAY,QAAQ,YAAY,KAAA;AAEhE,UAAM,yBAAyB,IAA4B,IAAA;AAC3D,UAAM,kBAAkB,SAAS,MAAM;AACrC,YAAM,SAAS,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,IAAI,GAAG,MAAM,UAAA,EAAY,CAAA,CAAA;AAC9D,UAAI,YAAY,IAAI,UAAU,MAC5B,QAAO,QAAA;AACT,YAAM,QAAQ,OAAO,QAAQ,YAAY,WAAW,KAAA;AACpD,YAAM,YAAY,OAAO,QAAQ,YAAY,cAAc,KAAA;AAC3D,YAAM,aAAa,YAAY,UAAU,YAAY,WAAW;AAChE,YAAM,cAAc,cAAc,OAAO,QAAQ,YAAY,KAAA;AAI7D,UAAA,CAAK,cAAA,CAAe,YAClB,QAAO,uBAAuB;AAEhC,YAAM,aAAa,MAAM;AAEvB,YAAI,UAAU,WAAW;AAEvB,cAAI,cAAc,cAAc,GAC9B,QAAO,QAAQ,YAAY,aAAa;AAE1C,cAAI,eAAe,UAAU,GAC3B,QAAO,QAAQ,YAAY,aAAa;QAC5C;AAGA,eAAO;MACR,GAAA;AAGD,6BAAuB,QAAQ;AAC/B,aAAO;IACR,CAAA;AAED,aAAS,mBAAmB,IAAuB;;AACjD,YAAM,gBAAgB,EAAA;AACtB,YAAM,mBAAmB,EAAA;AAEzB,YAAM,SAAS,GAAG,OAAO,cAAc;AACvC,UAAI,OAAO,aAAa,8BAAA,EACtB,IAAG,eAAA;AAEL,UAAA,CAAK,GAAG,kBAAkB;AACxB,oBAAY,sBAAA;AAEZ,cAAM,WAAS,GAAG;AAElB,aAAI,uBAAY,uBAAZ,mBAAgC,UAAhC,mBAAuC,SAAS,UAClD,IAAG,eAAA;MACP;IACF;AAEA,aAAS,yBAAyB,IAA6B;;AAC7D,YAAM,sBAAsB,EAAA;AAE5B,UAAA,CAAK,GAAG,kBAAkB;AACxB,cAAM,SAAS,GAAG;AAClB,cAAM,YAAY,SAAA,EAAW,KAAK,CAAA,MAChC,EAAE,IAAI,SAAS,MAAA,CAAO;AAExB,cAAM,iBACJ,YAAY,gBAAc,iBAAY,SAAS,UAArB,mBAA4B,SAAS;AAEjE,YAAI,aAAa,kBAAA,CAAmB,YAAY,WAC9C,IAAG,eAAA;MACP;IACF;AAEA,gBAAY,CAAC,cAAc;AACzB,YAAM,UAAU,eAAe;AAC/B,UAAI,YAAY,cAAc,SAAS;AAErC,cAAM,cAAc,MAAM;;AACxB,sBAAY,cAAA;AACZ,sBAAY,mBAAA;AACZ,cAAI,QAAQ,SAAS,iBAAA,CAAkB,EACrC,mBAAY,WAAW,UAAvB,mBAA8B;QAClC;AACA,gBAAQ,iBAAiB,4BAA4B,WAAA;AAErD,kBAAU,MACR,QAAQ,oBAAoB,4BAA4B,WAAA,CAAY;MAExE;IACD,CAAA;AAED,aAAS,oBAAoB,IAAmB;;AAC9C,YAAM,iBAAiB,EAAA;AAEvB,UAAA,CAAK,GAAG,kBAAkB;AACxB,oBAAY,cAAA;AACZ,gCAAY,eAAZ,mBAAwB,UAAxB,mBAA+B;AAC/B,oBAAY,kBAAkB,QAAQ;MACxC;IACF;AAEA,aAAS,cAAc,IAAmB;;AAExC,UAAK,GAAG,OAAuB,QAAQ,6BAAA,MAAmC,YAAY,mBAAmB,MACvG;AAEF,YAAM,YAAY,GAAG,UAAU,GAAG,WAAW,GAAG;AAChD,YAAM,WAAW,GAAG,QAAQ,SAAA,CAAU;AACtC,YAAM,aAAaC,uBAAsB,GAAG,aAAA;AAE5C,UAAI,UAAU;AACZ,cAAM,iBAAiB,iBAAA;AACvB,cAAM,QAAQ,WAAW,UACvB,CAAA,cAAa,cAAc,cAAA;AAE7B,cAAM,oBAAoB,GAAG;AAC7B,cAAM,iBAAiB,oBACnB,WAAW,MAAM,GAAG,KAAA,EAAO,QAAA,IAC3B,WAAW,MAAM,QAAQ,GAAG,WAAW,MAAA;AAE3C,YAAIC,YAAW,cAAA,EAEb,IAAG,eAAA;aAEA;AAIH,4BAAY,cAAc,UAA1B,mBAAiC;AACjC;QACF;MACF;AAEA,YAAM,qBAAqB,mBACzB,IACA,iBAAA,GAAkB,QAElB;QAAE,YAAY;QAAY,MAAM;QAAO,sBAAsB;MAAM,CAAA;AAErE,+DAAoB;IACtB;AAEA,aAAS,gBAAgB;;AACvB,YAAM,0BAA0B,IAAI,MAAM,4BAA4B;QACpE,SAAS;QACT,YAAY;MACb,CAAA;AACD,2BAAe,UAAf,mBAAsB,cAAc;IACtC;;0BAIE,YAemB,MAAA,wBAAA,GAfnB,WAemB;QAdhB,IAAI,MAAA,SAAA;QACJ,KAAK,MAAA,UAAA;QACL,mBAAiB,MAAA,SAAA;QACjB,eAAa,gBAAA;QACb,cAAY,MAAAC,aAAA,EAAa,MAAA,WAAA,EAAY,WAAW,UAAU,MAAA,WAAA,EAAY,KAAA;QACtE,oBAAkB,MAAA,WAAA,EAAY;SACvBH,QAAK;QACZ,WAAS;QACT,iBAAiB;QACjB,sBAAsB;QACtB,gBAAe;QACf,WAAS;;yBAEV,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjLZ,UAAMI,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,YAAY,qBAAqB,aAAaA,QAAO,YAAA,GAAe,KAAA;AAC1E,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,cAAc,4BAAA;AACpB,UAAM,cAAc,gCAAA;AAEpB,UAAM,OAAO,SAAS,MAAM,YAAY,UAAU,YAAY,WAAW,KAAA;AAIzE,UAAM,oBAAoB,SAAS,MAAM;AACvC,UAAI,YAAY,SAAS,OACvB;aAAK,YAAY,WAAW,SAAS,YAAY,cAAc,MAC7D,QAAQ,YAAY,cAAc,UAAU,YAAY;MAAK;AAEjE,aAAO;IACR,CAAA;;0BAIC,YA0BW,UAAA;QAzBR,IAAI,MAAA,QAAA,KAAY,MAAA,WAAA,EAAY,SAAS,QAAQ,MAAA,WAAA,EAAY,SAAS,QAAK;QACvE,UAAU,MAAA,QAAA,KAAY,MAAA,WAAA,EAAY,SAAS,QAAA,CAAS,MAAA,WAAA,EAAY,SAAS,QAAK;UAE/E,YAqBW,MAAA,gBAAA,GAAA;QAnBR,SAASC,KAAAA,cAAc,KAAA,SAAQ,kBAAA;QAC/B,eAAA,CAAc,MAAA,WAAA,EAAY,cAAc;;yBAEzC,CAe4B,EAnBlB,QAAA,MAAO,CAIjB,YAe4B,mCAf5B,WAe4B;UAdzB,KAAK,MAAA,UAAA;UACL,cAAY,MAAAC,aAAA,EAAa,KAAA,KAAA;UACzB,OAAK,EAAA,eAAA,CAA8B,KAAA,SAAQ,MAAA,WAAA,EAAY,aAAU,SAAA,OAAA;;aAGrDC,KAAAA;UAAM,GAAK,MAAA,SAAA;QAAS,GAAA;UAChC,QAAA,CAAS;UACT,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,eAAe,MAAA,WAAA,EAAY,KAAA;UACrD,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,SAAA,EAAS,MAAO,MAAA,WAAA,EAAY,eAAA,CAAc,EAAI,MAAA;UAC5D,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,sBAAuB,MAAA;UAClD,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,gBAAiB,MAAA;UACrC,mBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,mBAAoB,MAAA;;2BAE5C,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElDhB,UAAMC,SAAQ;AAEd,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,cAAc,4BAAA;AAEpB,UAAM,iBAAiB,IAAA;AACvB,UAAM,eAAe,SAAS,MAAM,YAAY,gBAAgB,YAAA;AAChE,UAAM,YAAY,SAAS,MAAA,CAAA,CAAQ,YAAY,WAAW,KAAA;AAC1D,UAAM,EAAE,cAAA,IAAkB;AAE1B,aAAS,uBAAuB;AAC9B,UAAA,CAAK,cAAc,MACjB;AAGF,qBAAe,QAAQ;QACrB,MAAM,aAAa,QACf,cAAc,MAAM,cACpB,cAAc,MAAM;QACxB,UAAU,aAAa,QACnB,cAAc,MAAM,aACpB,cAAc,MAAM;MAC1B;IACF;AAEA,gBAAY,MAAM;AAChB,UAAA,CAAK,YAAY,WAAW,MAC1B;AAEF,2BAAA;IACD,CAAA;AAED,sBAAkB,eAAe,oBAAA;AACjC,sBAAkB,YAAY,gBAAgB,oBAAA;;aAKpC,MAAA,WAAA,EAAY,eAAe,SAAA,UAAA,GADnC,YAuBW,UAAA;;QArBR,IAAI,MAAA,WAAA,EAAY,eAAe;UAEhC,YAkBW,MAAA,gBAAA,GAAA,EAlBA,SAASC,KAAAA,cAAc,UAAA,MAAA,GAAA;yBAChC,MAgBY,CAhBZ,YAgBY,MAAA,SAAA,GAhBZ,WAgBY;UAfT,KAAK,MAAA,UAAA;UACN,eAAY;UACX,cAAY,UAAA,QAAS,YAAA;UACrB,oBAAkB,MAAA,WAAA,EAAY;UAC9B,YAAUD,OAAM;UAChB,IAAIE,KAAAA;UACJ,OAAK,EAAA,GAAkB,eAAA,QAAc;wDAA6D,eAAA,MAAe,IAAA;4DAAsE,eAAA,MAAe,QAAA;;WAM/LC,KAAAA,MAAAA,GAAM;2BAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1DhB,UAAMC,SAAQ;AAId,UAAM,QAAQ;AAEd,UAAM,EAAE,eAAA,IAAmB,cAAc,EAAE,KAAK,iBAAkB,CAAA;AAClE,qBAAA;AAEA,mBAAe,YAAY,IAAgB;;AACzC,YAAM,kBAAkB,IAAI,YAAY,aAAa;QACnD,SAAS;QACT,YAAY;QACZ,QAAQ,EACN,eAAe,GAChB;MACF,CAAA;AACD,YAAM,UAAU,eAAA;AAEhB,UAAA,CAAK,gBAAgB,oBAAA,CAAqB,GAAG,SAAS;AACpD,cAAM,0BAA0B,IAAI,YAClC,4BACA;UACE,SAAS;UACT,YAAY;QACb,CAAA;AAEH,iBAAG,WAAH,mBAAW,cAAc;MAC3B;IACF;;0BAIE,YAUiB,MAAA,cAAA,GAAA,MAAA;yBATf,MAQY,CARZ,YAQY,MAAA,SAAA,GAAA;UAPT,IAAIC,KAAAA;UACJ,eAAaC,KAAAA,SAAM,KAAA;UACnB,gBAAcA,KAAAA,SAAM,SAAA;UACpB,YAAUF,OAAM;UAChB,SAAO;;2BAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9Cd,UAAMG,SAAQ;AAId,UAAM,cAAc,4BAAA;AACpB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,cAAU,MAAM;AACd,kBAAY,uBAAuB,eAAe,KAAA;IACnD,CAAA;;0BAIC,YAYY,MAAA,SAAA,GAAA;QAXT,KAAK,MAAA,UAAA;QACN,OAAA,EAAA,YAAA,WAA0B;;yBAE1B,MAOY,CAPZ,YAOY,MAAA,SAAA,GAPZ,WACUC,KAME,QANI;UACb,YAAUD,OAAM;UAChB,IAAIE,KAAAA;UACJ,oBAAkB,MAAA,WAAA,EAAY;;2BAE/B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPd,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AASd,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM,gBAAgB;MACpC,SAAUA,OAAM,eAAA;IACjB,CAAA;AACD,UAAM,gBAAgB,IAAI,EAAA;AAE1B,UAAM,cAAc,4BAAA;AACpB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,iBAAiB,IAAA;AACvB,UAAM,WAAW,IAAA;AACjB,UAAM,gBAAgB,IAAA;AAEtB,UAAM,EAAE,UAAU,eAAA,IAAmB,cAAc;MAAE,KAAK;MAAkB,YAAY;IAAM,CAAA;AAE9F,gBAAY,MAAM;AAChB,UAAA,CAAK,WAAW,MACd;AAEF,YAAM,QAAQ,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA;AACpC,oBAAc,QAAQ,MAAM,KAAK,CAAA,SAC/B,KAAK,GAAG,SAAS,WAAW,KAAA,CAAM;IAErC,CAAA;AAED,iCAA6B;MAC3B,GAAG;MACH,YAAY;MACZ;MACA;MACA;MACA,aAAaA,OAAM;MACnB,oBAAoB;MACpB;MACA,wBAAwB,CAAC,QAAQ;AAC/B,uBAAe,QAAQ;MACxB;MACD;MACA,kBAAkB,CAAC,QAAQ;AACzB,iBAAS,QAAQ;MAClB;MAED,gBAAgB,CAAC,QAAQ;AACvB,mBAAW,QAAQ;MACpB;MACD,gBAAgB,MAAM;MAErB;MACD,gBAAgB,MAAM;MAErB;MACD,gBAAgB,MAAM;MAErB;MACD,cAAc,CAAC,QAAQ;AACrB,mBAAW,QAAQ;MACpB;MACD,eAAe,MAAM;AACnB,mBAAW,QAAQ;MACpB;IACF,CAAA;;0BAIC,YAUiB,MAAA,cAAA,GAAA,MAAA;yBATf,MAQY,CARZ,YAQY,MAAA,SAAA,GAAA;UAPT,KAAK,MAAA,UAAA;UACL,oBAAkBC,KAAAA;UAClB,YAAUD,OAAM;UAChB,IAAIE,KAAAA;UACL,6BAAA;;2BAEA,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE3FpC,UAAMC,SAAQ;AAId,UAAM,cAAc,4BAAA;AACpB,UAAM,cAAc,gCAAA;AAEpB,UAAM,EAAE,eAAA,IAAmB,cAAc,EAAE,KAAK,iBAAkB,CAAA;AAClE,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AACvD,UAAM,YAAY,IAAI,EAAA;AACtB,UAAM,YAAY,IAAI,EAAA;AAEtB,UAAM,0BAA0B,aAAa,OAAO,GAAA;AACpD,UAAM,mBAAmB,IAAI,KAAA;AAE7B,UAAM,OAAO,SAAS,MAAM,YAAY,UAAU,YAAY,WAAW,KAAA;AAEzE,cAAU,MAAM;AACd,kBAAY,aAAa;AACzB,gBAAU,QAAQ,cAAc,YAAY,QAAQ,YAAY,KAAA;AAChE,gBAAU,QAAQ,cAAc,YAAY,QAAQ,YAAY,KAAA;IACjE,CAAA;AAED,aAAS,qBAAqB;AAC5B,UAAI,YAAY,oBAAoB,MAClC;AAEF,uBAAiB,QAAQ;AACzB,kBAAY,kBAAkB,QAAQ;IACxC;AAEA,aAASC,mBAAkB,IAAkB;AAC3C,UAAI,YAAY,oBAAoB,MAClC;AAEF,UAAI,GAAG,gBAAgB,SAAS;AAC9B,YACED,OAAM,YACH,iBAAiB,SACjB,YAAY,kBAAkB,SAC9B,wBAAwB,MAE3B;AAGF,oBAAY,eAAe,YAAY,KAAA;AACvC,gCAAwB,QAAQ;MAClC;IACF;AAEA,aAAS,mBAAmB,IAAkB;AAC5C,UAAI,YAAY,oBAAoB,MAClC;AAEF,UAAI,GAAG,gBAAgB,SAAS;AAC9B,YAAIA,OAAM,SACR;AACF,oBAAY,eAAA;AACZ,gCAAwB,QAAQ;MAClC;IACF;AAEA,aAAS,YAAY,OAAqB;AACxC,UAAI,MAAM,gBAAgB,WAAW,YAAY,oBAAoB,MACnE;AAGF,UAAI,wBAAwB,MAC1B;AAEF,UAAI,KAAK,MACP,aAAY,aAAa,EAAA;UACtB,aAAY,aAAa,YAAY,KAAA;AAE1C,uBAAiB,QAAQ,KAAK;IAChC;AAEA,aAAS,cAAc,IAAmB;AACxC,YAAM,mBAAmB,YAAY,IAAI,UAAU,QAAQ,cAAc;AACzE,YAAM,WAAW;QAAE,YAAY;QAAa,UAAU;MAAkB,EACtE,YAAY,WAAA;AAEd,UAAI,KAAK,SAAS,GAAG,QAAQ,UAAU;AACrC,oBAAY,eAAA;AAEZ,WAAG,eAAA;AACH,WAAG,gBAAA;MACL;IACF;AAEA,aAAS,iBAAiB,MAAa;AAErC,kBAAY,cAAc,QAAQ,aAAa,IAAA;AAC/C,aAAA;IACF;AAEA,aAAS,0BAA0B,IAAgB;AACjD,YAAM,UAAU,SAAS,eAAe,YAAY,SAAA;AACpD,YAAM,qBAAqB,GAAG;AAE9B,YAAM,oBAAoB,uBAAuB,eAAe;AAChE,YAAM,sBAAsB,mCAAS,SAAS;AAE9C,UAAI,qBAAA,CAAsB,oBACxB,aAAY,kBAAkB,oBAAoB,UAAU,KAAA;IAChE;;8DAIE,YAqBiB,MAAA,cAAA,GAAA,MAAA;yBApBf,MAmBY,CAnBZ,YAmBY,MAAA,SAAA,GAnBZ,WAmBY;UAlBT,IAAI,UAAA;UACJ,KAAK,MAAA,UAAA;UACL,UAAUE,KAAAA;UACV,iBAAeA,KAAAA,WAAQ,KAAA;UACvB,cAAY,MAAAC,aAAA,EAAa,KAAA,KAAA;UAC1B,gCAAA;UACC,iBAAe,KAAA;UACf,iBAAe,UAAA;UACf,YAAUH,OAAM;UAChB,IAAII,KAAAA;WACGC,KAAAA,QAAM;UACb,gBAAc;UACd,eAAaJ;UACb,gBAAc;UACd,SAAO;UACP,WAAS;;2BAEV,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;UAII,KAAA,SAAA,UAAA,GAAhB,mBAWW,UAAA,EAAA,KAAA,EAAA,GAAA,CAVT,YAKE,MAAA,sBAAA,GAAA;QAJC,KAAK;QACN,eAAY;QACX,UAAU;QACV,SAAO;UAGF,MAAA,WAAA,EAAY,YAAA,UAAA,GADpB,mBAGE,QAAA;;QADC,aAAW,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExIlB,UAAMK,SAAQ;AAId,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,cAAc,4BAAA;AACpB,UAAM,EAAE,eAAe,oBAAoB,WAAA,IAAe;AAE1D,UAAMC,QAAO,IAAA;AACb,UAAM,WAAW,IAAA;AAEjB,UAAM,OAAO,SAAS,MAAA,CAAA,CAAQ,YAAY,WAAW,KAAA;AAErD,UAAM,gBAAgB,MAAM;AAC1B,kBAAY,iBAAiB,eAAe,KAAA;IAC7C,CAAA;AAED,UAAM,UAAU,IAAA;AAEhB,UAAM,CAAC,YAAY,IAAK,GAAE,MAAM;AAC9B,eAAS,MAAM;AACb,YAAA,CAAK,eAAe,MAClB;AAEF,8BAAsB,MAAM;;AAC1B,gBAAM,MAAMC,MAAA,eAAe,UAAf,gBAAAA,IAAsC,cAAc;AAChE,kBAAQ,QAAQ;QACjB,CAAA;MACF,CAAA;IACF,GAAE,EAAE,WAAW,KAAM,CAAA;AAEtB,aAAS,iBAAiB;AACxB,UAAI,QAAQ,SAAS,cAAc,SAAS,mBAAmB,OAAO;AACpE,cAAM,YAAY,SAAS,gBAAgB;AAC3C,cAAM,aAAa,SAAS,gBAAgB;AAC5C,cAAM,WAAW,mBAAmB,MAAM,sBAAA;AAC1C,cAAM,OAAO,cAAc,MAAM,sBAAA;AACjC,cAAM,EAAE,aAAa,aAAA,IAAiB,QAAQ;AAG9C,cAAM,oBAAoB,KAAK,OAAO,SAAS;AAC/C,cAAM,mBAAmB,KAAK,MAAM,SAAS;AAG7C,YAAI,UAAU;AACd,YAAI,SAAS;AACb,gBAAQF,OAAM,OAAd;UACE,KAAK;AACH,sBAAU;AACV,qBAAS;AACT;UACF,KAAK;AACH,sBAAU,oBAAoB,cAAc,KAAK;AACjD,qBAAS,mBAAmB,eAAe,KAAK;AAChD;UACF;AAEE,sBAAU,oBAAoB,cAAc,IAAI,KAAK,QAAQ;AAC7D,qBAAS,mBAAmB,eAAe,IAAI,KAAK,SAAS;QACjE;AAEA,cAAM,eAAe;AAGrB,YAAI,UAAU,SAAS,OAAO,aAC5B,WAAU,eAAe,SAAS;AAIpC,cAAM,cAAc,UAAU,SAAS,OAAO;AAC9C,YAAI,cAAc,YAAY,cAAc;AAC1C,qBAAW,cAAc,YAAY;AAGrC,cAAI,UAAU,eAAe,SAAS,KAEpC,WAAU,eAAe,SAAS;QAEtC;AAGA,YAAI,SAAS,SAAS,MAAM,aAC1B,UAAS,eAAe,SAAS;AAInC,cAAM,eAAe,SAAS,SAAS,MAAM;AAC7C,YAAI,eAAe,aAAa,cAAc;AAC5C,oBAAU,eAAe,aAAa;AAGtC,cAAI,SAAS,eAAe,SAAS,IAEnC,UAAS,eAAe,SAAS;QAErC;AAGA,kBAAU,KAAK,MAAM,OAAA;AACrB,iBAAS,KAAK,MAAM,MAAA;AAEpB,iBAAS,QAAQ;UACf,MAAM;UACN,KAAK;QACP;MACF;IACF;AAEA,sBAAkB,SAAS,MAAM;AAC/B,UAAI,QAAQ,OAAO;AACjB,QAAAC,MAAK,QAAQ;UACX,OAAO,QAAQ,MAAM;UACrB,QAAQ,QAAQ,MAAM;QACxB;AACA,uBAAA;MACF;IACD,CAAA;AAED,sBAAkB,EAAC,gBAAW,aAAX,mBAAqB,MAAM,kBAAmB,GAAE,MAAM;AACvE,qBAAA;IACD,CAAA;;0BAIC,YA8BW,MAAA,gBAAA,GAAA;QA5BR,SAASE,KAAAA,cAAc,KAAA;QACvB,eAAA,CAAc,MAAA,WAAA,EAAY,cAAc;QACxC,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;AAAgB,UAAAF,MAAA,QAAA;AAAuB,mBAAA,QAAA;;;yBAKnD,CAoBY,EA5BF,QAAA,MAAO;;AAAA,kBAQjB,YAoBY,MAAA,SAAA,GApBZ,WACUG,KAmBE,QAnBI;YACb,KAAK,MAAA,UAAA;YACL,IAAIC,KAAAA;YACJ,YAAUC,KAAAA;YACV,cAAY,MAAAC,aAAA,EAAa,KAAA,KAAA;YACzB,oBAAkB,MAAA,WAAA,EAAY;YAC9B,OAAK;8BAA8E,KAAA,SAAQ,MAAA,WAAA,EAAY,aAAU,SAAA;yDAA0EN,MAAA,QAAI,IAAMC,MAAAD,MAAA,UAAA,gBAAAC,IAAM,KAAA,OAAK;0DAAsED,MAAA,QAAI,IAAM,KAAAA,MAAA,UAAA,mBAAM,MAAA,OAAM;wDAAoE,SAAA,QAAQ,IAAM,cAAA,UAAA,mBAAU,IAAA,OAAI;uDAAmE,SAAA,QAAQ,IAAM,cAAA,UAAA,mBAAU,GAAA,OAAG;;YAQ1e,QAAA,CAAS;YACT,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,eAAe,MAAA,WAAA,EAAY,WAAW,KAAA;YAChE,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,SAAA,EAAS,MAAO,MAAA,WAAA,EAAY,eAAA,CAAc,EAAI,MAAA;;6BAE7D,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;AE7Kd,IAAI,uCAAiB,oBAAI,IAAA;AAEzB,IAAI,4CAAsB;AAC1B,IAAI;AACF,8CAAuB,IAAI,KAAK,aAAa,SAAS;IAAC,aAAa;EAAY,CAAA,EAAI,gBAAe,EAAG,gBAAgB;AAExH,QAAQ;AAAC;AAET,IAAI,qCAAe;AACnB,IAAI;AACF,uCAAgB,IAAI,KAAK,aAAa,SAAS;IAAC,OAAO;IAAQ,MAAM;EAAQ,CAAA,EAAI,gBAAe,EAAG,UAAU;AAE/G,QAAQ;AAAC;AAKT,IAAM,8BAAQ;EACZ,QAAQ;IACN,QAAQ;MACN,SAAS;MACT,SAAS;MACT,SAAS;MACT,SAAS;IAGX;EACF;AACF;AAcO,IAAM,4CAAN,MAAM;;EAUX,OAAO,OAAuB;AAC5B,QAAI,MAAM;AACV,QAAI,CAAC,6CAAuB,KAAK,QAAQ,eAAe,KACtD,OAAM,0CAAgC,KAAK,iBAAiB,KAAK,QAAQ,aAAa,KAAA;QAEtF,OAAM,KAAK,gBAAgB,OAAO,KAAA;AAGpC,QAAI,KAAK,QAAQ,UAAU,UAAU,CAAC,oCAAc;UAKrC;AAJb,UAAI,EAAA,MAAK,cAAgB,SAAA,OAAe,IAAI,KAAK,gBAAe;AAChE,UAAI,CAAC,KACH,QAAO;AAET,UAAI,UAAS,cAAA,4BAAM,IAAA,OAAK,QAAX,gBAAA,SAAA,SAAA,YAAc,WAAA;AAC3B,aAAO,OAAO,MAAA,KAAW,OAAO;IAClC;AAEA,WAAO;EACT;;EAGA,cAAc,OAAwC;AAEpD,WAAO,KAAK,gBAAgB,cAAc,KAAA;EAC5C;;EAGA,YAAY,OAAe,KAAqB;AAC9C,QAAI,OAAO,KAAK,gBAAgB,gBAAgB,WAC9C,QAAO,KAAK,gBAAgB,YAAY,OAAO,GAAA;AAGjD,QAAI,MAAM,MACR,OAAM,IAAI,WAAW,gCAAA;AAIvB,WAAO,GAAG,KAAK,OAAO,KAAA,CAAA,MAAY,KAAK,OAAO,GAAA,CAAA;EAChD;;EAGA,mBAAmB,OAAe,KAAsC;AACtE,QAAI,OAAO,KAAK,gBAAgB,uBAAuB,WACrD,QAAO,KAAK,gBAAgB,mBAAmB,OAAO,GAAA;AAGxD,QAAI,MAAM,MACR,OAAM,IAAI,WAAW,gCAAA;AAGvB,QAAI,aAAa,KAAK,gBAAgB,cAAc,KAAA;AACpD,QAAI,WAAW,KAAK,gBAAgB,cAAc,GAAA;AAClD,WAAO;SACF,WAAW,IAAI,CAAA,OAAM;QAAC,GAAG;QAAG,QAAQ;MAAY,EAAA;MACnD;QAAC,MAAM;QAAW,OAAO;QAAO,QAAQ;MAAQ;SAC7C,SAAS,IAAI,CAAA,OAAM;QAAC,GAAG;QAAG,QAAQ;MAAU,EAAA;;EAEnD;;EAGA,kBAAoD;AAClD,QAAI,UAAU,KAAK,gBAAgB,gBAAe;AAClD,QAAI,CAAC,6CAAuB,KAAK,QAAQ,eAAe,KACtD,WAAU;MAAC,GAAG;MAAS,aAAa,KAAK,QAAQ;IAAW;AAG9D,QAAI,CAAC,sCAAgB,KAAK,QAAQ,UAAU,OAC1C,WAAU;MAAC,GAAG;MAAS,OAAO;MAAQ,MAAM,KAAK,QAAQ;MAAM,aAAa,KAAK,QAAQ;IAAW;AAGtG,WAAO;EACT;EA7EA,YAAY,QAAgB,UAA+B,CAAC,GAAG;AAC7D,SAAK,kBAAkB,+CAAyB,QAAQ,OAAA;AACxD,SAAK,UAAU;EACjB;AA2EF;AAEA,SAAS,+CAAyB,QAAgB,UAA+B,CAAC,GAAC;AACjF,MAAI,EAAA,gBAAgB,IAAI;AACxB,MAAI,mBAAmB,OAAO,SAAS,MAAA,GAAS;AAC9C,QAAI,CAAC,OAAO,SAAS,KAAA,EACnB,WAAU;AAEZ,cAAU,OAAO,eAAA;EACnB;AAEA,MAAI,QAAQ,UAAU,UAAU,CAAC,oCAAc;QAKxC;AAJL,QAAI,EAAA,MAAK,cAAgB,QAAA,IAAW;AACpC,QAAI,CAAC,KACH,OAAM,IAAI,MAAM,iDAAA;AAElB,QAAI,GAAC,cAAA,4BAAM,IAAA,OAAK,QAAX,gBAAA,SAAA,SAAA,YAAc,WAAA,GACjB,OAAM,IAAI,MAAM,oBAAoB,IAAA,uBAA2B,WAAA,EAAa;AAE9E,cAAU;MAAC,GAAG;MAAS,OAAO;IAAS;EACzC;AAEA,MAAI,WAAW,UAAU,UAAU,OAAO,QAAQ,OAAA,EAAS,KAAK,CAAC,GAAG,MAAM,EAAE,CAAA,IAAK,EAAE,CAAA,IAAK,KAAK,CAAA,EAAG,KAAI,IAAK;AACzG,MAAI,qCAAe,IAAI,QAAA,EACrB,QAAO,qCAAe,IAAI,QAAA;AAG5B,MAAI,kBAAkB,IAAI,KAAK,aAAa,QAAQ,OAAA;AACpD,uCAAe,IAAI,UAAU,eAAA;AAC7B,SAAO;AACT;AAGO,SAAS,0CAAgC,cAAiC,aAAqB,KAAW;AAC/G,MAAI,gBAAgB,OAClB,QAAO,aAAa,OAAO,GAAA;WAClB,gBAAgB,QACzB,QAAO,aAAa,OAAO,KAAK,IAAI,GAAA,CAAA;OAC/B;AACL,QAAI,oBAAoB;AACxB,QAAI,gBAAgB,SAClB,qBAAoB,MAAM,KAAK,OAAO,GAAG,KAAK,CAAA;aACrC,gBAAgB,cAAA;AACzB,UAAI,OAAO,GAAG,KAAK,EAAA,KAAO,OAAO,GAAG,KAAK,CAAA,EACvC,OAAM,KAAK,IAAI,GAAA;UAEf,qBAAoB,MAAM;;AAI9B,QAAI,mBAAmB;AACrB,UAAI,WAAW,aAAa,OAAO,CAAC,GAAA;AACpC,UAAI,SAAS,aAAa,OAAO,GAAA;AAEjC,UAAI,QAAQ,SAAS,QAAQ,QAAQ,EAAA,EAAI,QAAQ,iBAAiB,EAAA;AAClE,UAAI;WAAI;QAAO,WAAW,EACxB,SAAQ,KAAK,0EAAA;AAEf,UAAI,WAAW,SAAS,QAAQ,QAAQ,KAAA,EAAO,QAAQ,OAAO,GAAA,EAAK,QAAQ,OAAO,MAAA;AAClF,aAAO;IACT,MACE,QAAO,aAAa,OAAO,GAAA;EAE/B;AACF;;;AChLA,IAAM,4CAAsB,IAAI,OAAO,gBAAA;AACvC,IAAM,0CAAoB;EAAC;EAAQ;EAAQ;EAAW;EAAQ;EAAQ;;AAQ/D,IAAM,4CAAN,MAAM;;;;EAYX,MAAM,OAAuB;AAC3B,WAAO,0CAAoB,KAAK,QAAQ,KAAK,SAAS,KAAA,EAAO,MAAM,KAAA;EACrE;;;;;;EAOA,qBAAqB,OAAe,UAAmB,UAA4B;AACjF,WAAO,0CAAoB,KAAK,QAAQ,KAAK,SAAS,KAAA,EAAO,qBAAqB,OAAO,UAAU,QAAA;EACrG;;;;;;EAOA,mBAAmB,OAAuB;AACxC,WAAO,0CAAoB,KAAK,QAAQ,KAAK,SAAS,KAAA,EAAO,QAAQ;EACvE;EA5BA,YAAY,QAAgB,UAAoC,CAAC,GAAG;AAClE,SAAK,SAAS;AACd,SAAK,UAAU;EACjB;AA0BF;AAEA,IAAM,0CAAoB,oBAAI,IAAA;AAC9B,SAAS,0CAAoB,QAAgB,SAAmC,OAAa;AAE3F,MAAI,gBAAgB,4CAAsB,QAAQ,OAAA;AAIlD,MAAI,CAAC,OAAO,SAAS,MAAA,KAAW,CAAC,cAAc,qBAAqB,KAAA,GAAQ;AAC1E,aAAS,mBAAmB,wCAC1B,KAAI,oBAAoB,cAAc,QAAQ,iBAAiB;AAC7D,UAAI,SAAS,4CAAsB,UAAU,OAAO,SAAS,KAAA,IAAS,SAAS,YAAY,iBAAiB,OAAA;AAC5G,UAAI,OAAO,qBAAqB,KAAA,EAC9B,QAAO;IAEX;EAEJ;AAEA,SAAO;AACT;AAEA,SAAS,4CAAsB,QAAgB,SAAiC;AAC9E,MAAI,WAAW,UAAU,UAAU,OAAO,QAAQ,OAAA,EAAS,KAAK,CAAC,GAAG,MAAM,EAAE,CAAA,IAAK,EAAE,CAAA,IAAK,KAAK,CAAA,EAAG,KAAI,IAAK;AACzG,MAAI,SAAS,wCAAkB,IAAI,QAAA;AACnC,MAAI,CAAC,QAAQ;AACX,aAAS,IAAI,uCAAiB,QAAQ,OAAA;AACtC,4CAAkB,IAAI,UAAU,MAAA;EAClC;AAEA,SAAO;AACT;AAIA,IAAM,yCAAN,MAAM;EA6BJ,MAAM,OAAe;AAEnB,QAAI,sBAAsB,KAAK,SAAS,KAAA;AAExC,QAAI,KAAK,QAAQ;AAEf,4BAAsB,iCAAW,qBAAqB,KAAK,QAAQ,OAAO,EAAA;AAE5E,QAAI,KAAK,QAAQ,QACf,uBAAsB,oBAAoB,QAAQ,KAAK,QAAQ,SAAU,GAAA;AAE3E,QAAI,KAAK,QAAQ,UACf,uBAAsB,oBAAoB,QAAQ,KAAK,QAAQ,WAAY,GAAA;AAE7E,0BAAsB,oBAAoB,QAAQ,KAAK,QAAQ,SAAS,KAAK,QAAQ,KAAK;AAE1F,QAAI,KAAK,QAAQ,UAAU,WAAW;AAEpC,UAAI,aAAa,oBAAoB,QAAQ,GAAA;AAC7C,4BAAsB,oBAAoB,QAAQ,KAAK,EAAA;AACvD,4BAAsB,oBAAoB,QAAQ,KAAK,EAAA;AACvD,UAAI,QAAQ,oBAAoB,QAAQ,GAAA;AACxC,UAAI,UAAU,GACZ,SAAQ,oBAAoB;AAE9B,4BAAsB,oBAAoB,QAAQ,KAAK,EAAA;AACvD,UAAI,QAAQ,MAAM,EAChB,uBAAsB,KAAK,mBAAA;eAClB,QAAQ,MAAM,GACvB,uBAAsB,MAAM,mBAAA;eACnB,QAAQ,MAAM,GACvB,uBAAsB;UAEtB,uBAAsB,GAAG,oBAAoB,MAAM,GAAG,QAAQ,CAAA,CAAA,IAAM,oBAAoB,MAAM,QAAQ,CAAA,CAAA;AAExG,UAAI,aAAa,GACf,uBAAsB,IAAI,mBAAA;IAE9B;AAEA,QAAI,WAAW,sBAAsB,CAAC,sBAAsB;AAC5D,QAAI,MAAM,QAAA,EACR,QAAO;AAGT,QAAI,KAAK,QAAQ,UAAU,WAAW;UAKD,qCACA;AAJnC,UAAI,UAAU;QACZ,GAAG,KAAK;QACR,OAAO;QACP,uBAAuB,KAAK,MAAK,sCAAA,KAAK,QAAQ,2BAAqB,QAAlC,wCAAA,SAAA,sCAAsC,KAAK,GAAG,EAAA;QAC/E,uBAAuB,KAAK,MAAK,sCAAA,KAAK,QAAQ,2BAAqB,QAAlC,wCAAA,SAAA,sCAAsC,KAAK,GAAG,EAAA;MACjF;AACA,aAAQ,IAAI,0CAAa,KAAK,QAAQ,OAAA,EAAU,MAAM,KAAI,GAAA,2CAAgB,KAAK,QAAQ,OAAA,EAAS,OAAO,QAAA,CAAA;IACzG;AAGA,QAAI,KAAK,QAAQ,iBAAiB,gBAAgB,0CAAoB,KAAK,KAAA,EACzE,YAAW,KAAK;AAGlB,WAAO;EACT;EAEA,SAAS,OAAe;AAEtB,YAAQ,MAAM,QAAQ,KAAK,QAAQ,UAAU,EAAA;AAI7C,QAAI,KAAK,QAAQ,UACf,SAAQ,MAAM,QAAQ,KAAK,KAAK,QAAQ,SAAS;AAKnD,QAAI,KAAK,QAAQ,oBAAoB,QAAQ;AAC3C,UAAI,KAAK,QAAQ,SAAS;AACxB,gBAAQ,MAAM,QAAQ,KAAK,KAAK,QAAQ,OAAO;AAC/C,gBAAQ,MAAM,QAAQ,OAAO,aAAa,IAAA,GAAO,KAAK,QAAQ,OAAO;MACvE;AACA,UAAI,KAAK,QAAQ,MACf,SAAQ,iCAAW,OAAO,KAAK,KAAK,QAAQ,KAAK;IAErD;AAIA,QAAI,KAAK,QAAQ,UAAU,OAAO,MAAM,SAAS,GAAA,EAC/C,SAAQ,iCAAW,OAAO,KAAK,KAAK,QAAQ,KAAK;AAKnD,QAAI,KAAK,QAAQ,WAAW,WAAW,KAAK,QAAQ,OAAO;AACzD,cAAQ,iCAAW,OAAO,KAAK,KAAK,QAAQ,KAAK;AACjD,cAAQ,iCAAW,OAAO,WAAW,KAAK,QAAQ,KAAK;IACzD;AAEA,WAAO;EACT;EAEA,qBAAqB,OAAe,WAAmB,WAAW,WAAmB,UAAmB;AACtG,YAAQ,KAAK,SAAS,KAAA;AAGtB,QAAI,KAAK,QAAQ,aAAa,MAAM,WAAW,KAAK,QAAQ,SAAS,KAAK,WAAW,EACnF,SAAQ,MAAM,MAAM,KAAK,QAAQ,UAAU,MAAM;aACxC,KAAK,QAAQ,YAAY,MAAM,WAAW,KAAK,QAAQ,QAAQ,KAAK,WAAW,EACxF,SAAQ,MAAM,MAAM,KAAK,QAAQ,SAAS,MAAM;AAIlD,QAAI,KAAK,QAAQ,SAAS,MAAM,WAAW,KAAK,QAAQ,KAAK,EAC3D,QAAO;AAIT,QAAI,KAAK,QAAQ,WAAW,MAAM,QAAQ,KAAK,QAAQ,OAAO,IAAI,MAAM,KAAK,QAAQ,0BAA0B,EAC7G,QAAO;AAIT,QAAI,KAAK,QAAQ,MACf,SAAQ,iCAAW,OAAO,KAAK,QAAQ,OAAO,EAAA;AAEhD,YAAQ,MAAM,QAAQ,KAAK,QAAQ,SAAS,EAAA;AAC5C,QAAI,KAAK,QAAQ,QACf,SAAQ,MAAM,QAAQ,KAAK,QAAQ,SAAS,EAAA;AAI9C,WAAO,MAAM,WAAW;EAC1B;EA5JA,YAAY,QAAgB,UAAoC,CAAC,GAAG;AAClE,SAAK,SAAS;AAGd,QAAI,QAAQ,sBAAsB,KAAK,QAAQ,qBAAqB,MAAM;AACxE,UAAI,QAAQ,yBAAyB,QAAQ,QAAQ,yBAAyB,MAAM;AAClF,gBAAQ,wBAAwB;AAChC,gBAAQ,wBAAwB;MAClC,WAAW,QAAQ,yBAAyB,KAC1C,SAAQ,wBAAwB,QAAQ;eAC/B,QAAQ,yBAAyB,KAC1C,SAAQ,wBAAwB,QAAQ;IAG5C;AACA,SAAK,YAAY,IAAI,KAAK,aAAa,QAAQ,OAAA;AAC/C,SAAK,UAAU,KAAK,UAAU,gBAAe;AAC7C,SAAK,UAAU,iCAAW,QAAQ,KAAK,WAAW,KAAK,SAAS,OAAA;QACtB,qCAAkD;AAA5F,QAAI,KAAK,QAAQ,UAAU,gBAAe,sCAAA,KAAK,QAAQ,2BAAqB,QAAlC,wCAAA,SAAA,sCAAsC,KAAK,QAAO,sCAAA,KAAK,QAAQ,2BAAqB,QAAlC,wCAAA,SAAA,sCAAsC,KAAK,IACrI,SAAQ,KAAK,uHAAA;EAEjB;AAwIF;AAEA,IAAM,wCAAkB,oBAAI,IAAI;EAAC;EAAW;EAAY;EAAW;EAAa;EAAY;CAAQ;AAKpG,IAAM,sCAAgB;EACpB;EAAG;EAAG;EAAG;EAAG;EAAI;EAAI;EAAG;EAAG;EAAK;EAAI;EAAK;;AAG1C,SAAS,iCAAW,QAAgB,WAA8B,aAA+C,iBAAyC;MAexI,gBACD,mBAYD,oBACF;AA3BZ,MAAI,kBAAkB,IAAI,KAAK,aAAa,QAAQ;IAAC,GAAG;;IAEtD,0BAA0B;IAC1B,0BAA0B;IAC1B,mBAAmB;IACnB,kBAAkB;IAClB,cAAc;EAChB,CAAA;AAEA,MAAI,WAAW,gBAAgB,cAAc,UAAA;AAC7C,MAAI,cAAc,gBAAgB,cAAc,SAAA;AAChD,MAAI,cAAc,oCAAc,IAAI,CAAA,MAAK,gBAAgB,cAAc,CAAA,CAAA;MAEvD;AAAhB,MAAI,aAAY,wBAAA,iBAAA,SAAS,KAAK,CAAA,MAAK,EAAE,SAAS,WAAA,OAAA,QAA9B,mBAAA,SAAA,SAAA,eAA4C,WAAK,QAAjD,yBAAA,SAAA,uBAAqD;AACrE,MAAI,YAAW,oBAAA,YAAY,KAAK,CAAA,MAAK,EAAE,SAAS,UAAA,OAAA,QAAjC,sBAAA,SAAA,SAAA,kBAA8C;AAI7D,MAAI,CAAC,cAAa,oBAAA,QAAA,oBAAA,SAAA,SAAA,gBAAiB,iBAAgB,iBAAgB,oBAAA,QAAA,oBAAA,SAAA,SAAA,gBAAiB,iBAAgB,UAClG,YAAW;AAKb,MAAI,eAAe,IAAI,KAAK,aAAa,QAAQ;IAAC,GAAG;IAAa,uBAAuB;IAAG,uBAAuB;EAAC,CAAA,EAAG,cAAc,IAAA;AAErI,MAAI,WAAU,qBAAA,aAAa,KAAK,CAAA,MAAK,EAAE,SAAS,SAAA,OAAA,QAAlC,uBAAA,SAAA,SAAA,mBAA8C;AAC5D,MAAI,SAAQ,kBAAA,SAAS,KAAK,CAAA,MAAK,EAAE,SAAS,OAAA,OAAA,QAA9B,oBAAA,SAAA,SAAA,gBAAwC;AAIpD,MAAI,mBAAmB,SAAS,OAAO,CAAA,MAAK,CAAC,sCAAgB,IAAI,EAAE,IAAI,CAAA,EAAG,IAAI,CAAA,MAAK,kCAAY,EAAE,KAAK,CAAA;AACtG,MAAI,sBAAsB,YAAY,QAAQ,CAAA,MAAK,EAAE,OAAO,CAAAO,OAAK,CAAC,sCAAgB,IAAIA,GAAE,IAAI,CAAA,EAAG,IAAI,CAAAA,OAAK,kCAAYA,GAAE,KAAK,CAAA,CAAA;AAC3H,MAAI,iBAAiB;OAAI,oBAAI,IAAI;SAAI;SAAqB;KAAoB;IAAG,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AAEnH,MAAI,WAAW,eAAe,WAAW,IACrC,IAAI,OAAO,sBAAsB,IAAA,IACjC,IAAI,OAAO,GAAG,eAAe,KAAK,GAAA,CAAA,uBAA2B,IAAA;AAGjE,MAAI,WAAW;OAAI,IAAI,KAAK,aAAa,YAAY,QAAQ;MAAC,aAAa;IAAK,CAAA,EAAG,OAAO,UAAA;IAAa,QAAO;AAC9G,MAAI,UAAU,IAAI,IAAI,SAAS,IAAI,CAAC,GAAG,MAAM;IAAC;IAAG;GAAE,CAAA;AACnD,MAAI,UAAU,IAAI,OAAO,IAAI,SAAS,KAAK,EAAA,CAAA,KAAQ,GAAA;AACnD,MAAI,QAAQ,CAAA,MAAK,OAAO,QAAQ,IAAI,CAAA,CAAA;AAEpC,SAAO;;;;;;;;EAA8D;AACvE;AAEA,SAAS,iCAAW,KAAa,MAAuB,SAAe;AACrE,MAAI,IAAI,WACN,QAAO,IAAI,WAAW,MAAM,OAAA;AAG9B,SAAO,IAAI,MAAM,IAAA,EAAM,KAAK,OAAA;AAC9B;AAEA,SAAS,kCAAY,QAAc;AACjC,SAAO,OAAO,QAAQ,uBAAuB,MAAA;AAC/C;;;ACzUA,SAAgB,eAAeC,SAAuE;AACpG,QAAM,EAAE,SAAA,IAAa;AACrB,QAAM,UAAU,IAAA;AAChB,QAAM,cAAc,gBAAA;AACpB,QAAM,eAAe,MAAM,OAAO,aAAa,QAAQ,KAAA;AAEvD,QAAM,wBAAwB,CAACC,UAAkB;AAC/C,iBAAA;AACA,QAAI,SAAS,MACX;AAEF,gBAAY,QAAA;AAEZ,YAAQ,QAAQ,OAAO,WAAW,MAAM;AACtC,4BAAsB,EAAA;IACvB,GAAE,KAAA;EACJ;AAED,QAAM,mBAAmB,MAAM;AAC7B,0BAAsB,GAAA;EACvB;AAED,QAAM,iBAAiB,MAAM;AAC3B,iBAAA;EACD;AAGD,QAAM,YAAY,IAAI,KAAA;AACtB,QAAM,SAAS,SAAS,MAAM,aAAa,QAAQ,MAAA,CAAO;AAE1D,QAAM,eAAe,CAACC,UAAwB;AAE5C,QAAI,MAAM,WAAW,KAAK,UAAU,MAClC;AAEF,UAAM,eAAA;AACN,cAAU,QAAQ;AAClB,qBAAA;EACD;AAED,QAAM,iBAAiB,MAAM;AAC3B,cAAU,QAAQ;AAClB,mBAAA;EACD;AAED,MAAI,UAAU;AACZ,qBAAiB,UAAU,QAAQ,eAAe,YAAA;AAClD,qBAAiB,QAAQ,aAAa,cAAA;AACtC,qBAAiB,QAAQ,iBAAiB,cAAA;EAC3C;AAED,SAAO;IACL;IACA,WAAW,YAAY;EACxB;AACF;AAED,SAAgB,mBAAmBC,QAAqBC,UAAqD,IAAI,CAAE,CAAA,GAAG;AACpH,SAAO,iBAAiB,MAAM,IAAI,0CAAgB,OAAO,OAAO,QAAQ,KAAA,CAAA;AACzE;AAED,SAAgB,gBAAgBD,QAAqBC,UAAqD,IAAI,CAAE,CAAA,GAAG;AACjH,SAAO,iBAAiB,MAAM,IAAI,0CAAa,OAAO,OAAO,QAAQ,KAAA,CAAA;AACtE;AAED,SAAgB,uBAAuBC,UAAqBC,QAAgBC,QAAwB;AAClG,MAAI,SAAS,aAAa,MAAM,SAAS,SAAS,SAAS;AAG3D,MAAI,SAAS,MAAM,KAAK,SAAS,MAAM,GAAG;AACxC,UAAM,gBAAgB,OAAO,SAAA,EAAW,MAAM,GAAA;AAC9C,UAAM,gBAAgB,OAAO,SAAA,EAAW,MAAM,GAAA;AAC9C,UAAM,sBAAuB,cAAc,CAAA,KAAM,cAAc,CAAA,EAAG,UAAW;AAC7E,UAAM,sBAAuB,cAAc,CAAA,KAAM,cAAc,CAAA,EAAG,UAAW;AAC7E,UAAM,aAAa,MAAM,KAAK,IAAI,qBAAqB,mBAAA;AAGvD,aAAS,KAAK,MAAM,SAAS,UAAA;AAC7B,aAAS,KAAK,MAAM,SAAS,UAAA;AAG7B,aAAS,aAAa,MAAM,SAAS,SAAS,SAAS;AAGvD,cAAU;EACX;AAED,SAAO;AACR;;;AClCD,IAAa,CAAC,8BAA8B,6BAAA,IAAiC,cAAsC,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYnH,UAAMC,SAAQ;AAMd,UAAM,QAAQ;AACd,UAAM,EAAE,UAAU,UAAU,oBAAoB,mBAAmB,KAAAC,MAAK,KAAAC,MAAK,MAAM,cAAc,eAAe,IAAI,QAAQ,WAAA,IAAe,OAAOF,MAAA;AAElJ,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM;MACpB,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAE7C,UAAM,SAAS,UAAU,UAAA;AACzB,UAAM,gBAAgB,eAAe,cAAA;AACrC,UAAM,UAAU,IAAA;AAEhB,UAAM,qBAAqB,SAAS,MAAA,CACjC,UAAU,WAAW,KAAA,MACpB,gBAAgB,WAAW,KAAA,MAAWC,KAAI,SACtCA,KAAI,SAAA,CAAU,MAAM,WAAW,KAAA,IAE9B,uBAAuB,KAAK,WAAW,OAAO,KAAK,KAAA,IAASA,KAAI,QACjE,MAAA;AAER,UAAM,qBAAqB,SAAS,MAAA,CACjC,UAAU,WAAW,KAAA,MACpB,gBAAgB,WAAW,KAAA,MAAWC,KAAI,SACtCA,KAAI,SAAA,CAAU,MAAM,WAAW,KAAA,IAE9B,uBAAuB,KAAK,WAAW,OAAO,KAAK,KAAA,IAASA,KAAI,QACjE,MAAA;AAGR,aAAS,oBAAoB,MAA+B,aAAa,GAAG;;AAC1E,oBAAQ,UAAR,mBAAe;AACf,UAAIF,OAAM,YAAYA,OAAM,SAC1B;AACF,YAAM,oBAAoB,aAAa,QAAM,aAAQ,UAAR,mBAAe,UAAS,EAAA;AACrE,UAAI,MAAM,iBAAA,EACR,YAAW,QAAQC,KAAI,SAAS;eAG5B,SAAS,WACX,YAAW,QAAQ,gBAAgB,qBAAsB,KAAK,SAAS,KAAK,UAAA;UAE5E,YAAW,QAAQ,gBAAgB,qBAAsB,KAAK,SAAS,KAAK,UAAA;IAElF;AAEA,aAAS,eAAe,aAAa,GAAG;AACtC,0BAAoB,YAAY,UAAA;IAClC;AACA,aAAS,eAAe,aAAa,GAAG;AACtC,0BAAoB,YAAY,UAAA;IAClC;AAEA,aAAS,kBAAkB,MAAqB;AAC9C,UAAI,SAAS,SAASA,KAAI,UAAA,OACxB,YAAW,QAAQ,gBAAgBA,KAAI,KAAA;eAChC,SAAS,SAASC,KAAI,UAAA,OAC7B,YAAW,QAAQ,gBAAgBA,KAAI,KAAA;IAC3C;AAGA,UAAM,kBAAkB,mBAAmB,QAAQ,aAAA;AACnD,UAAM,eAAe,gBAAgB,QAAQ,aAAA;AAE7C,UAAM,YAAY,SAAsC,MAAM;AAK5D,YAAM,cAAc,gBAAgB,gBAAA,EAAkB,wBAAyB;AAE/E,aAAO,cAAc,YAAY;IAClC,CAAA;AAGD,UAAM,qBAAqB,mBAAmB,QAAQ,aAAA;AACtD,UAAM,YAAY,SAAS,MAAM,UAAU,WAAW,KAAA,KAAU,MAAM,WAAW,KAAA,IAAS,KAAK,mBAAmB,OAAO,WAAW,KAAA,CAAM;AAE1I,aAAS,SAAS,KAAa;AAC7B,aAAO,aAAa,qBAAqB,KAAKD,KAAI,OAAOC,KAAI,KAAA;IAC/D;AAEA,aAAS,cAAc,KAAa;AAClC,UAAI,QAAQ,MACV,SAAQ,MAAM,QAAQ;IAC1B;AAEA,aAAS,gBAAgB,KAAa;AAEpC,UAAI;AACJ,UAAI,KAAK,UAAA,UAAuB,MAAM,KAAK,KAAA,KAAM,CAAK,aAAa,MACjE,gBAAe,MAAM,KAAKD,KAAI,OAAOC,KAAI,KAAA;UAEzC,gBAAe,gBAAgB,KAAKD,KAAI,OAAOC,KAAI,OAAO,KAAK,KAAA;AAEjE,qBAAe,aAAa,MAAM,gBAAgB,OAAO,YAAA,CAAa;AACtE,aAAO;IACT;AAEA,aAAS,gBAAgB,KAAa;AACpC,YAAM,cAAc,aAAa,MAAM,GAAA;AACvC,iBAAW,QAAQ,MAAM,WAAA,IAAY,SAAe,gBAAgB,WAAA;AAEpE,UAAA,CAAK,IAAI,OACP,QAAO,cAAc,GAAA;AAGvB,UAAI,MAAM,WAAA,EACR,QAAO,cAAc,UAAU,KAAA;AAEjC,aAAO,cAAc,UAAU,KAAA;IACjC;AAEA,kCAA8B;MAC5B;MACA;MACA;MACA;MACA;MACA;MACA,gBAAgB,CAAA,OAAM,QAAQ,QAAQ;MACtC;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAA;MACA,KAAAD;MACA;MACA;MACA;IACD,CAAA;;0BAIC,YAuBY,MAAA,SAAA,GAvBZ,WACUE,KAsBE,QAtBI;iBACV;QAAJ,KAAI;QACJ,MAAK;QACJ,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;;yBAExB,MAGE,CAHF,WAGE,KAAA,QAAA,WAAA;UAFC,YAAa,MAAA,UAAA;UACb,WAAY,UAAA;YAIP,MAAA,aAAA,KAAiBC,KAAAA,QAAAA,UAAAA,GADzB,YAQE,MAAA,2BAAA,GAAA;;UANA,MAAK;UACJ,OAAO,MAAA,UAAA;UACP,MAAMA,KAAAA;UACN,UAAU,MAAA,QAAA;UACV,UAAU,MAAA,QAAA;UACV,UAAUC,KAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhOjB,UAAMC,SAAQ;AAId,UAAM,cAAc,6BAAA;AACpB,UAAM,aAAa,SAAS,MAAA;;AAAM,gCAAY,aAAZ,mBAAsB,UAAS,YAAY,SAAS,SAASA,OAAM,YAAY,YAAY,mBAAmB;KAAA;AAEhJ,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,UAAM,EAAE,WAAW,UAAA,IAAc,eAAe;MAAE,QAAQ;MAAgB,UAAU;IAAY,CAAA;AAEhG,cAAU,MAAM;AACd,kBAAY,eAAA;IACb,CAAA;;0BAIC,YAeY,MAAA,SAAA,GAfZ,WACUA,QAAK;iBACT;QAAJ,KAAI;QACJ,UAAS;QACT,cAAW;QACV,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,OAAK,EAAA,YAAsB,MAAA,SAAA,IAAS,SAAA,OAAA;QAGpC,UAAU,WAAA,QAAU,KAAA;QACpB,iBAAe,WAAA,QAAU,KAAA;QACzB,gBAAc,MAAA,SAAA,IAAS,SAAA;QACvB,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAZ,MAAA;QAAoB,GAAA,CAAA,SAAA,CAAA;;yBAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9BZ,UAAMC,SAAQ;AAId,UAAM,cAAc,6BAAA;AACpB,UAAM,aAAa,SAAS,MAAA;;AAAM,gCAAY,aAAZ,mBAAsB,UAAS,YAAY,SAAS,SAASA,OAAM,YAAY,YAAY,mBAAmB;KAAA;AAEhJ,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,UAAM,EAAE,WAAW,UAAA,IAAc,eAAe;MAAE,QAAQ;MAAgB,UAAU;IAAY,CAAA;AAEhG,cAAU,MAAM;AACd,kBAAY,eAAA;IACb,CAAA;;0BAIC,YAeY,MAAA,SAAA,GAfZ,WACUA,QAAK;iBACT;QAAJ,KAAI;QACJ,UAAS;QACT,cAAW;QACV,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,OAAK,EAAA,YAAsB,MAAA,SAAA,IAAS,SAAA,OAAA;QAGpC,UAAU,WAAA,QAAU,KAAA;QACpB,iBAAe,WAAA,QAAU,KAAA;QACzB,gBAAc,MAAA,SAAA,IAAS,SAAA;QACvB,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAZ,MAAA;QAAoB,GAAA,CAAA,SAAA,CAAA;;yBAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/BZ,UAAMC,SAAQ;AAId,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,UAAM,cAAc,6BAAA;AAEpB,aAAS,iBAAiB,OAAmB;AAC3C,UAAI,YAAY,mBAAmB,MACjC;AAGF,UAAI,MAAM,WAAW,iBAAA,EACnB;AAMF,UAAI,KAAK,IAAI,MAAM,MAAA,KAAW,KAAK,IAAI,MAAM,MAAA,EAC3C;AAEF,YAAM,eAAA;AACN,UAAI,MAAM,SAAS,EACjB,aAAY,kBAAkB,QAAQ,YAAY,eAAA,IAAmB,YAAY,eAAA;eAC1E,MAAM,SAAS,EACtB,aAAY,kBAAkB,QAAQ,YAAY,eAAA,IAAmB,YAAY,eAAA;IACrF;AAEA,cAAU,MAAM;AACd,kBAAY,eAAe,eAAe,KAAA;IAC3C,CAAA;AAED,UAAM,aAAa,IAAI,YAAY,UAAU,KAAA;AAC7C,UAAM,MAAM,YAAY,UAAU,OAAO,MAAM;AAC7C,iBAAW,QAAQ,YAAY,UAAU;IAC1C,GAAE;MAAE,WAAW;MAAM,MAAM;IAAM,CAAA;AAElC,aAAS,eAAe;AACtB,4BAAsB,MAAM;AAC1B,mBAAW,QAAQ,YAAY,UAAU;MAC1C,CAAA;IACH;;0BAIE,YA+CY,MAAA,SAAA,GA/CZ,WACUA,QAAK;QACZ,IAAI,MAAA,WAAA,EAAY,GAAG;iBAChB;QAAJ,KAAI;QACH,OAAO,WAAA;QACR,MAAK;QACL,MAAK;QACL,UAAS;QACR,WAAW,MAAA,WAAA,EAAY,UAAU;QACjC,UAAU,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;QACpC,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;QACzC,UAAU,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;QACpC,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;QAC1C,cAAa;QACb,aAAY;QACZ,YAAW;QACX,wBAAqB;QACpB,iBAAe,MAAA,WAAA,EAAY,WAAW;QACtC,iBAAe,MAAA,WAAA,EAAY,IAAI;QAC/B,iBAAe,MAAA,WAAA,EAAY,IAAI;QAC/B,WAAO;uEAAa,MAAA,WAAA,EAAY,eAAA,GAAc,CAAA,SAAA,CAAA,GAAA,CAAA,IAAA,CAAA;uEACxB,MAAA,WAAA,EAAY,eAAA,GAAc,CAAA,SAAA,CAAA,GAAA,CAAA,MAAA,CAAA;uEACvB,MAAA,WAAA,EAAY,eAAc,EAAA,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,SAAA,CAAA;uEACxB,MAAA,WAAA,EAAY,eAAc,EAAA,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,WAAA,CAAA;uEAC/B,MAAA,WAAA,EAAY,kBAAiB,KAAA,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,MAAA,CAAA;uEAC9B,MAAA,WAAA,EAAY,kBAAiB,KAAA,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA;;;AAkBnC,yBAAA,WAAA,EAAY,iBAAgB,YAAO,WAAP,mBAAe,KAAA;aAAK,CAAA,OAAA,CAAA;;QAjB/D,SAAO;QACP,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAiB;gBAAmB,SAAS,MAAM;cAAqC,YAAoB,OAAO,MAAM,MAAK,GAAI,OAAO,kBAAA,MAAA,KAA0C,MAAM,QAAI,MAAoB,OAAO,MAAM,MAAM,OAAO,gBAAA,MAAA;eAA0D,MAAA,WAAA,EAAY,SAAS,SAAA,EAAoB,OAAM,eAAA;;QAWlW,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAiB;gBAAmB,SAAS,MAAM;AAAiC,qBAAA,QAAa,OAAO;;QAIhH,UAAQ;QAER,QAAI,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA;;AAAE,uBAAA,WAAA,EAAY,iBAAgB,YAAO,WAAP,mBAAe,KAAA;;;yBAElD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/FZ,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACb,aAAU,WAAU,CAAA,GAAA;yBAEpB,MAAoB,CAApB,WAAoB,KAAA,QAAA,WAAA,CAAA,GAApB,MAAoB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAd,GAAA,EAAO,CAAA,CAAA,CAAA;;;;;;;;;AEqBjB,IAAa,CAAC,6BAA6B,4BAAA,IACvC,cAAqC,gBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQzC,UAAMC,SAAQ;AAOd,UAAM,QAAQ;AAWd,UAAM,EAAE,cAAc,UAAU,UAAA,IAAc,OAAOA,MAAA;AAErD,qBAAA;AACA,UAAM,OAAO,UAAUA,QAAO,QAAQ,OAAO;MAC3C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,YAAY,SAAS,MAAM,KAAK,IAAI,GAAG,KAAK,KAAKA,OAAM,SAASA,OAAM,gBAAgB,EAAA,CAAG,CAAC;AAEhG,iCAA6B;MAC3B;MACA,aAAa,OAAO;AAClB,aAAK,QAAQ;MACd;MACD;MACA;MACA;MACA;IACD,CAAA;;0BAIC,YAQY,MAAA,SAAA,GAAA;QAPT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;;yBAEX,MAGE,CAHF,WAGE,KAAA,QAAA,WAAA;UAFC,MAAM,MAAA,IAAA;UACN,WAAY,UAAA;;;;;;;;;;;;;;;;;;;;;;;;AEpFnB,UAAMC,SAAQ;AAEd,UAAM,cAAc,4BAAA;AACpB,qBAAA;AAEA,UAAM,WAAW,SAAS,MAAe,YAAY,KAAK,UAAU,KAAK,YAAY,SAAS,KAAA;;0BAI5F,YAQY,MAAA,SAAA,GARZ,WACUA,QAAK;QACb,cAAW;QACV,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,UAAA,SAAA;QACA,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,SAAA,SAAY,MAAA,WAAA,EAAY,aAAY,CAAA;;yBAE7C,MAAuB,CAAvB,WAAuB,KAAA,QAAA,WAAA,CAAA,GAAvB,MAAuB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAjB,YAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEhBpB,UAAMC,SAAQ;AAEd,UAAM,cAAc,4BAAA;AACpB,qBAAA;AAEA,UAAM,WAAW,SAAS,MAAe,YAAY,KAAK,UAAU,YAAY,UAAU,SAAS,YAAY,SAAS,KAAA;;0BAItH,YAQY,MAAA,SAAA,GARZ,WACUA,QAAK;QACb,cAAW;QACV,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,UAAA,SAAA;QACA,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,SAAA,SAAY,MAAA,WAAA,EAAY,aAAa,MAAA,WAAA,EAAY,UAAU,KAAA;;yBAEpE,MAAsB,CAAtB,WAAsB,KAAA,QAAA,WAAA,CAAA,GAAtB,MAAsB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAhB,WAAA,EAAS,CAAA,CAAA,CAAA;;;;;;;;;AExBnB,SAAS,MAAMC,OAAeC,KAAa;AACzC,QAAM,SAAS,MAAM,QAAQ;AAC7B,SAAO,MAAM,KAAK,EAAE,OAAQ,GAAE,CAAC,GAAG,QAAQ,MAAM,KAAA;AACjD;AAED,SAAgB,UAAUC,OAAmC;AAC3D,SAAO,MAAM,IAAI,CAAC,UAAU;AAC1B,QAAA,OAAW,UAAU,SACnB,QAAO;MAAE,MAAM;MAAQ;IAAO;AAChC,WAAO,EAAE,MAAM,WAAY;EAC5B,CAAA;AACF;AAED,IAAM,WAAW;AAEjB,SAAgB,SAASC,aAAqBC,WAAmBC,cAAsBC,WAAoB;AACzG,QAAM,iBAAiB;AACvB,QAAM,gBAAgB;AAEtB,QAAM,mBAAmB,KAAK,IAAI,cAAc,cAAc,cAAA;AAC9D,QAAM,oBAAoB,KAAK,IAAI,cAAc,cAAc,aAAA;AAE/D,MAAI,WAAW;AAUb,UAAM,mBAAmB,KAAK,IAAI,IAAI,eAAe,GAAG,SAAA;AAExD,UAAM,YAAY,mBAAmB;AAErC,UAAM,mBAEF,mBAAmB,iBAAiB,KAEjC,KAAK,IAAI,gBAAgB,YAAY,iBAAiB,CAAA,IAAK,KAE3D,KAAK,IAAI,mBAAmB,cAAA,IAAkB;AAErD,UAAM,oBAEF,oBAAoB,gBAAgB,KAEjC,KAAK,IAAI,gBAAgB,SAAA,IAAa,KAEtC,KAAK,IAAI,gBAAgB,iBAAA,IAAqB;AAErD,QAAA,CAAK,oBAAoB,mBAAmB;AAC1C,YAAM,YAAY,MAAM,GAAG,SAAA;AAE3B,aAAO;QAAC,GAAG;QAAW;QAAU;MAAc;IAC/C;AAED,QAAI,oBAAA,CAAqB,mBAAmB;AAC1C,YAAM,aAAa,MAAM,gBAAgB,YAAY,GAAG,aAAA;AAExD,aAAO;QAAC;QAAgB;QAAU,GAAG;MAAW;IACjD;AAED,QAAI,oBAAoB,mBAAmB;AACzC,YAAM,cAAc,MAAM,kBAAkB,iBAAA;AAE5C,aAAO;QAAC;QAAgB;QAAU,GAAG;QAAa;QAAU;MAAc;IAC3E;AAED,UAAM,YAAY,MAAM,gBAAgB,aAAA;AACxC,WAAO;EACR,OACI;AACH,UAAM,YAAY,eAAe,IAAI;AAErC,QAAI,YAAY,UACd,QAAO,MAAM,GAAG,aAAA;aAET,eAAgB,eAAe,EACtC,QAAO,MAAM,gBAAgB,SAAA;aAErB,YAAY,eAAgB,aACpC,QAAO,MAAM,YAAY,YAAY,GAAG,aAAA;QAGxC,QAAO,MAAM,kBAAkB,iBAAA;EAClC;AACF;;;;;;;;;;;;;;;;AC/ED,UAAMC,SAAQ;AASd,qBAAA;AACA,UAAM,cAAc,4BAAA;AAEpB,UAAM,mBAAmB,SAAS,MAAM;AACtC,aAAO,UACL,SACE,YAAY,KAAK,OACjB,YAAY,UAAU,OACtB,YAAY,aAAa,OACzB,YAAY,UAAU,KAAA,CACvB;IAEJ,CAAA;;0BAIC,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,OAAO,iBAAA,MAAgB,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AExBlC,UAAMC,SAAQ;AACd,qBAAA;AAEA,UAAM,cAAc,4BAAA;AACpB,UAAM,aAAa,SAAS,MAAM,YAAY,KAAK,UAAUA,OAAM,KAAA;AAEnE,UAAM,WAAW,SAAS,MAAe,YAAY,SAAS,KAAA;;0BAI5D,YAWY,MAAA,SAAA,GAXZ,WACUA,QAAK;QACb,aAAU;QACT,cAAU,QAAUC,KAAAA,KAAAA;QACpB,gBAAc,WAAA,QAAU,SAAA;QACxB,iBAAe,WAAA,QAAU,SAAA;QACzB,UAAA,SAAA;QACA,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,SAAA,SAAY,MAAA,WAAA,EAAY,aAAaD,KAAAA,KAAAA;;yBAE9C,MAAwB,CAAxB,WAAwB,KAAA,QAAA,WAAA,CAAA,GAAxB,MAAwB,CAAA,gBAAA,gBAAfA,KAAAA,KAAAA,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEvBlB,UAAME,SAAQ;AAEd,qBAAA;AACA,UAAM,cAAc,4BAAA;AAEpB,UAAM,WAAW,SAAS,MAAe,YAAY,KAAK,UAAU,YAAY,UAAU,SAAS,YAAY,SAAS,KAAA;;0BAItH,YAQY,MAAA,SAAA,GARZ,WACUA,QAAK;QACb,cAAW;QACV,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,UAAA,SAAA;QACA,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,SAAA,SAAY,MAAA,WAAA,EAAY,aAAa,MAAA,WAAA,EAAY,KAAK,QAAK,CAAA;;yBAEpE,MAAsB,CAAtB,WAAsB,KAAA,QAAA,WAAA,CAAA,GAAtB,MAAsB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAhB,WAAA,EAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEhBnB,UAAMC,SAAQ;AAEd,qBAAA;AACA,UAAM,cAAc,4BAAA;AAEpB,UAAM,WAAW,SAAS,MAAe,YAAY,KAAK,UAAU,KAAK,YAAY,SAAS,KAAA;;0BAI5F,YAQY,MAAA,SAAA,GARZ,WACUA,QAAK;QACb,cAAW;QACV,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,UAAA,SAAA;QACA,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,SAAA,SAAY,MAAA,WAAA,EAAY,aAAa,MAAA,WAAA,EAAY,KAAK,QAAK,CAAA;;yBAEpE,MAAsB,CAAtB,WAAsB,KAAA,QAAA,WAAA,CAAA,GAAtB,MAAsB,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAhB,WAAA,EAAS,CAAA,CAAA,CAAA;;;;;;;;;AEmCnB,IAAa,CAAC,2BAA2B,0BAAA,IACrC,cAAiD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWrD,UAAMC,SAAQ;AAId,UAAM,QAAQ;AASd,UAAM,EAAE,MAAM,KAAK,aAAa,MAAM,UAAU,KAAK,QAAA,IAAY,OAAOA,MAAA;AACxE,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM,gBAAgB,CAAE;MACtC,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,oBAAoB,SAAS,MAAM,MAAM,QAAQ,WAAW,KAAA,IAAS,CAAC,GAAG,WAAW,KAAM,IAAG,CAAE,CAAA;AAErG,UAAM,gBAAgB,IAA2B,oBAAI,IAAA,CAAA;AACrD,aAAS,qBAAqB,IAAsB;AAClD,oBAAc,MAAM,IAAI,EAAA;IAC1B;AAEA,UAAM,gBAAgB,SAAS,MAAMA,OAAM,SAAS,QAAA;AACpD,UAAM,cAAc,SAAS,MAAM;AACjC,YAAM,cAAc,kBAAkB,MAAM,OAAO,CAAA,MAAA,CAAA,CAAO,KAAM,cAAc,SAAS,MAAM,CAAA;AAC7F,aAAO,YAAY,WAAW,cAAc,MAAM;IACnD,CAAA;AAED,UAAM,YAAY,MAAM;AACtB,UAAI,YAAY,MACd,OAAM,YAAY,WAAW,KAAA;IAChC,GAAE,EAAE,MAAM,KAAM,CAAA;AAEjB,+BAA2B;MACzB;MACmB;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;;0BAIC,YAoBY,MAAA,SAAA,GApBZ,WACUC,KAmBE,QAnBI;QACb,KAAK,MAAA,UAAA;QACL,KAAK,MAAA,GAAA;QACL,iBAAe,YAAA,QAAW,KAAA;QAC1B,iBAAe,MAAA,QAAA,IAAQ,KAAA;;yBAExB,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,GAE9B,YAUE,6BAAA;UATC,IAAIC,KAAAA;UACL,IAAG;UACH,SAAQ;UACR,UAAS;UACR,OAAO,kBAAA,MAAkB,KAAI,EAAA;UAC7B,MAAMC,KAAAA,QAAI;UACV,UAAU,MAAA,QAAA;UACV,UAAUC,KAAAA;UACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA;;AAAE,qCAAM,KAAK,cAAA,KAAA,MAAX,mBAAwB,OAAxB,mBAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpI9C,UAAMC,SAAQ;AAId,UAAMC,WAAU,0BAAA;AAChB,UAAM,gBAAgB,SAAS,MAAM,MAAM,KAAKA,SAAQ,cAAe,KAAA,CAAM;AAC7E,UAAM,eAAe,SAAS,MAAMA,SAAQ,kBAAkB,MAAMD,OAAM,KAAA,CAAA;AAE1E,UAAM,WAAW,SAAS,MAAMA,OAAM,YAAYC,SAAQ,SAAS,KAAA;AACnE,UAAM,YAAY,SAAS,MAAMA,SAAQ,IAAI,KAAA;AAC7C,UAAM,iBAAiB,SAAS,MAAMA,SAAQ,KAAK,KAAA;AAEnD,UAAM,EAAE,kBAAkB,eAAA,IAAmB,oBAAA;AAC7C,aAAS,YAAY,OAAmB;;AACtC,YAAM,SAAS,MAAM;AAErB,aAAK,WAAM,SAAN,mBAAY,WAAU,KAAK,GAAG;AACjC,gCAAwB,OAAO,KAAA;AAC/B;MACF;AAEA,UAAIA,SAAQ,cAAc,SAAA,CAAU,QAAQ,KAAK,OAAO,KAAA,GAAQ;AAC9D,eAAO,QAAQ,OAAO,MAAM,QAAQ,OAAO,EAAA;AAC3C;MACF;AAEA,aAAO,QAAQ,MAAM,QAAQ;AAC7B,yBAAmBD,OAAM,OAAO,OAAO,KAAA;AAEvC,YAAM,SAAS,cAAc,MAAMA,OAAM,QAAQ,CAAA;AACjD,UAAI,OACF,QAAO,MAAA;IACX;AAEA,aAAS,mBAAmB;AAC1B,YAAM,SAAS,eAAe;AAC9B,eAAS,MAAM;AACb,YAAI,UAAA,CAAW,OAAO,MACpB,QAAO,cAAcC,SAAQ,YAAY;MAC5C,CAAA;IACH;AAEA,aAAS,cAAc,OAAsB;AAC3C,yBAAmB,OAAO,iBAAA,GAAkB,QAA4B;QACtE,YAAY,cAAc;QAC1B,OAAO;QACP,MAAM;QACN,iBAAiB;QACjB,KAAKA,SAAQ,IAAI;MAClB,CAAA;IACH;AAEA,aAAS,gBAAgB,OAAsB;AAC7C,YAAM,eAAA;AACN,YAAM,SAAS,MAAM;AACrB,YAAM,QAAQ,OAAO;AAErB,UAAI,MACF,oBAAmBD,OAAM,OAAO,EAAA;WAE7B;AACH,cAAM,SAAS,cAAc,MAAMA,OAAM,QAAQ,CAAA;AACjD,YAAI,QAAQ;AACV,iBAAO,MAAA;AACP,6BAAmBA,OAAM,QAAQ,GAAG,EAAA;QACtC;MACF;IACF;AAEA,aAAS,aAAa,OAAsB;AAC1C,UAAI,MAAM,QAAQ,UAAU;AAC1B,cAAM,eAAA;AACN,2BAAmBA,OAAM,OAAO,EAAA;MAClC;IACF;AAEA,aAAS,YAAY,OAAmB;AACtC,YAAM,SAAS,MAAM;AACrB,aAAO,kBAAkB,GAAG,CAAA;AAE5B,UAAA,CAAK,OAAO,MACV,QAAO,cAAc;IACzB;AAEA,aAAS,WAAW,OAAmB;AACrC,uBAAA;IACF;AAEA,aAAS,YAAY,OAAuB;AAC1C,YAAM,eAAA;AACN,YAAM,gBAAgB,MAAM;AAC5B,UAAA,CAAK,cACH;AAEF,YAAM,SAAS,cAAc,QAAQ,MAAA;AACrC,8BAAwB,MAAA;IAC1B;AAEA,aAAS,wBAAwB,QAAgB;;AAC/C,YAAM,iBAAiB,CAAC,GAAGC,SAAQ,kBAAkB,KAAM;AAC3D,YAAM,eAAe,OAAO,UAAU,cAAc,MAAM,SAAS,IAAID,OAAM;AAC7E,YAAM,YAAY,KAAK,IAAI,eAAe,OAAO,QAAQ,cAAc,MAAM,MAAA;AAC7E,eAAS,IAAI,cAAc,IAAI,WAAW,KAAK;AAC7C,cAAM,QAAQ,cAAc,MAAM,CAAA;AAClC,cAAM,QAAQ,OAAO,IAAI,YAAA;AACzB,YAAIC,SAAQ,cAAc,SAAA,CAAU,QAAQ,KAAK,KAAA,EAC/C;AAEF,uBAAe,CAAA,IAAK;AACpB,cAAM,MAAA;MACR;AACA,MAAAA,SAAQ,WAAW,QAAQ;AAC3B,0BAAc,MAAM,SAAA,MAApB,mBAAgC;IAClC;AAEA,aAAS,2BAA2B,OAAwD;AAC1F,UAAI,IAAI,MAAM,SAAS;AAEvB,aAAO,KAAK,KAAK,MAAM,CAAA,MAAO,IAAI;AAChC,cAAM,IAAA;AACN;MACF;AAEA,aAAO;IACT;AAEA,aAAS,mBAAmB,OAAe,OAAe;AACxD,YAAM,iBAAiB,CAAC,GAAGA,SAAQ,kBAAkB,KAAM;AAE3D,UAAIA,SAAQ,cAAc,OAAO;AAC/B,cAAM,MAAA,CAAO;AAEb,YAAI,UAAU,MAAM,MAAM,GAAA,EACxB,QAAO,eAAe,KAAA;YAGtB,gBAAe,KAAA,IAAS;MAE5B,MAEE,gBAAe,KAAA,IAAS;AAG1B,MAAAA,SAAQ,WAAW,QAAQ,2BAA2B,cAAA;IACxD;AAEA,UAAM,cAAc,MAAM;AACxB,UAAA,CAAK,aAAa,MAChB,kBAAA;IAEH,CAAA;AAED,cAAU,MAAM;AACd,MAAAA,SAAQ,qBAAqB,eAAe,KAAA;IAC7C,CAAA;AACD,gBAAY,MAAM;;AAChB,YAAAA,SAAQ,kBAAR,mBAAuB,MAAM,OAAO,eAAe;IACpD,CAAA;;0BAIC,YAwBY,MAAA,SAAA,GAAA;iBAvBN;QAAJ,KAAI;QACJ,gBAAe;QACd,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,cAAc,UAAA,QAAS,kBAAA;QACvB,MAAM,eAAA,QAAc,aAAA;QACpB,WAAW,MAAAF,QAAA,EAAQ,cAAc,QAAK,YAAA;QACtC,SAAS,MAAAA,QAAA,EAAQ,cAAc,QAAK,WAAA;QACpC,aAAa,MAAAA,QAAA,EAAQ,YAAY;QACjC,OAAO,aAAA;QACP,UAAU,SAAA;QACV,iBAAe,SAAA,QAAQ,KAAA;QACvB,iBAAe,MAAAA,QAAA,EAAQ,YAAY,QAAK,KAAA;QACxC,cAAU,aAAeG,KAAAA,QAAK,CAAA,OAAW,cAAA,MAAc,MAAA;QACvD,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,YAAY,MAAA;QACnB,WAAO;mBAA8B,eAAa;YAAA;YAAA;YAAA;YAAA;YAAA;YAAA;UAAA,CAAA;mBAC/B,iBAAe,CAAA,WAAA,CAAA;mBAClB,cAAY,CAAA,QAAA,CAAA;;QAC5B,SAAO;QACP,QAAM;QACN,SAAO;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AE7KZ,IAAM,cAAc;AAQpB,IAAa,CAAC,2BAA2B,0BAAA,IACrC,cAAmC,cAAA;AAIvC,IAAM,WAAW,CAAC,MAAA,OAA+B,MAAM;AAEvD,SAAS,cAAc,OAAYC,MAA4B;AAC7D,QAAM,oBACF,UAAU,KAAA,KACN,SAAS,KAAA,KAAM,CAAK,OAAO,MAAM,KAAA,KAAU,SAASA,QAAO,SAAS;AAE5E,MAAI,kBACF,QAAO;AAET,UAAQ,MAAM,qCAAqC,KAAA;;gDAEL,WAAA;;;wBAGxB;AACtB,SAAO;AACT;AAEA,SAAS,YAAYA,MAAqB;AACxC,QAAM,kBAAkB,SAASA,IAAA,KAAI,CAAK,OAAO,MAAMA,IAAA,KAAQA,OAAM;AAErE,MAAI,gBACF,QAAOA;AAET,UAAQ,MACN,mCAAmCA,IAAA,sGAAyG,WAAA,KAAgB;AAE9J,SAAO;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,UAAMC,SAAQ;AAMd,UAAM,OAAO;AASb,qBAAA;AACA,UAAM,aAAa,UAAUA,QAAO,cAAc,MAAM,EACtD,SAAUA,OAAM,eAAA,OACjB,CAAA;AAED,UAAMD,OAAM,UAAUC,QAAO,OAAO,MAAM,EACxC,SAAUA,OAAM,QAAA,OACjB,CAAA;AAGD,UACE,MAAM,WAAW,OACjB,OAAO,UAAU;AACf,YAAM,iBAAiB,cAAc,OAAOA,OAAM,GAAA;AAClD,UAAI,mBAAmB,OAAO;AAC5B,cAAM,SAAA;AACN,mBAAW,QAAQ;MACrB;IACD,GACD,EAAE,WAAW,KAAM,CAAA;AAGrB,UACE,MAAMA,OAAM,KACZ,CAAC,WAAW;AACV,YAAM,eAAe,YAAYA,OAAM,GAAA;AACvC,UAAI,iBAAiB,OACnB,CAAAD,KAAI,QAAQ;IACf,GACD,EAAE,WAAW,KAAM,CAAA;AAIrB,UAAM,gBAAgB,SAAwB,MAAM;AAClD,UAAI,UAAU,WAAW,KAAA,EACvB,QAAO;AACT,UAAI,WAAW,UAAUA,KAAI,MAC3B,QAAO;AACT,aAAO;IACR,CAAA;AAED,+BAA2B;MACzB;MACA,KAAAA;MACA;IACD,CAAA;;;0BAIC,YAcY,MAAA,SAAA,GAAA;QAbT,YAAUE,KAAAA;QACV,IAAIC,KAAAA;QACJ,iBAAe,MAAAH,IAAA;QACf,iBAAe;QACf,iBAAe,SAAS,MAAA,UAAA,CAAU,IAAI,MAAA,UAAA,IAAU;QAChD,mBAAgBI,UAAAA,iBAAAA,8BAAe,MAAA,UAAA,GAAY,MAAAJ,IAAA;QAC3C,cAAYK,KAAAA,cAAc,MAAA,UAAA,GAAY,MAAAL,IAAA,CAAG;QAC1C,MAAK;QACJ,cAAY,cAAA;QACZ,cAAY,MAAA,UAAA,KAAU;QACtB,YAAU,MAAAA,IAAA;;yBAEX,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjJlC,UAAMM,SAAQ;AAEd,UAAM,cAAc,0BAAA;AACpB,qBAAA;;;0BAIE,YAOY,MAAA,SAAA,GAPZ,WACUA,QAAK;QACZ,cAAY,MAAA,WAAA,EAAY,cAAc;QACtC,gBAAY,WAAA,WAAA,EAAY,eAAZ,mBAAwB,UAAA;QACpC,YAAU,MAAA,WAAA,EAAY,IAAI;;yBAE3B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;AEpBZ,IAAa,eAAe;AAE5B,SAAgB,aAAaC,OAAmBC,OAAoCC,UAAwC;AAC1H,QAAM,cAAc;IAAE,eAAe;IAAO;EAAO;AACnD,+BAA6B,cAAc,UAAU,WAAA;AACtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBD,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AASd,UAAM,UAAU,UAAUA,QAAO,WAAW,OAAO,EACjD,SAAUA,OAAM,YAAA,OACjB,CAAA;AAED,UAAM,EAAE,MAAA,IAAU,OAAOA,MAAA;AACzB,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AACvD,UAAM,gBAAgB,eAAe,cAAA;AAErC,UAAM,YAAY,SAAS,MAAA;;AAAM,aAAAA,OAAM,MAAM,eAAe,UAAS,cAAS,cAAc,SAASA,OAAM,EAAA,IAAM,MAA5C,mBAAoE,cAAaA,OAAM,QAAA;KAAA;AAE5J,aAAS,YAAY,OAAmB;AACtC,UAAIA,OAAM,SACR;AAEF,mBAAa,OAAOA,OAAM,OAAO,CAAC,OAAO;AACvC,cAAM,UAAU,EAAA;AAChB,YAAI,yBAAI,iBACN;AAEF,gBAAQ,QAAQ;AAChB,YAAI,cAAc,MAIhB,IAAG,gBAAA;MAEN,CAAA;IACH;;0BAIE,YA8BY,MAAA,SAAA,GA9BZ,WACUC,KA6BE,QA7BI;QACb,IAAIC,KAAAA;QACJ,KAAK,MAAA,UAAA;QACN,MAAK;QACJ,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,IAAIA,KAAAA;QACJ,gBAAc,MAAA,OAAA;QACd,cAAY,UAAA;QACZ,YAAUC,KAAAA;QACV,UAAUC,KAAAA,WAAQ,KAAA;QAClB,cAAY,MAAA,OAAA,IAAO,YAAA;QACnB,iBAAeA,KAAAA,WAAQ,KAAA;QACvB,OAAO,MAAA,KAAA;QACP,UAAUC,KAAAA;QACV,MAAMC,KAAAA;QACN,SAAK,cAAO,aAAW,CAAA,MAAA,CAAA;;yBAExB,MAA2B,CAA3B,WAA2B,KAAA,QAAA,WAAA,EAApB,SAAS,MAAA,OAAA,EAAO,CAAA,GAGf,MAAA,aAAA,KAAiBA,KAAAA,QAAAA,UAAAA,GADzB,YASE,MAAA,2BAAA,GAAA;;UAPA,MAAK;UACL,UAAS;UACR,OAAO,MAAA,KAAA;UACP,SAAA,CAAA,CAAW,MAAA,OAAA;UACX,MAAMA,KAAAA;UACN,UAAUF,KAAAA;UACV,UAAUC,KAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9DjB,IAAa,CAAC,6BAA6B,4BAAA,IACvC,cAAqC,gBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUzC,UAAME,SAAQ;AAOd,UAAM,QAAQ;AASd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM;MACpB,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,EAAE,UAAU,MAAM,aAAa,MAAM,UAAU,KAAK,QAAA,IAAY,OAAOA,MAAA;AAC7E,UAAM,MAAM,aAAa,OAAA;AACzB,UAAM,gBAAgB,eAAe,cAAA;AAErC,iCAA6B;MAC3B;MACA,kBAAkB,CAAC,UAAU;AAC3B,mBAAW,QAAQ;MACpB;MACD;MACA;MACA;MACA,MAAM,6BAAM;MACZ;IACD,CAAA;;0BAIC,YA0BmB,MAAA,wBAAA,GAAA;QAzBjB,YAAA;QACC,aAAa,MAAA,WAAA;QACb,KAAK,MAAA,GAAA;QACL,MAAM,MAAA,IAAA;;yBAEP,MAmBY,CAnBZ,YAmBY,MAAA,SAAA,GAAA;UAlBT,KAAK,MAAA,UAAA;UACN,MAAK;UACJ,iBAAe,MAAA,QAAA,IAAQ,KAAA;UACvB,YAAUC,KAAAA;UACV,IAAIC,KAAAA;UACJ,oBAAkB,MAAA,WAAA;UAClB,iBAAe,MAAA,QAAA;UACf,KAAK,MAAA,GAAA;;2BAEN,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,GAGtB,MAAA,aAAA,KAAiB,MAAA,IAAA,KAAI,UAAA,GAD7B,YAME,MAAA,2BAAA,GAAA;;YAJC,UAAU,MAAA,QAAA;YACV,UAAU,MAAA,QAAA;YACV,OAAO,MAAA,UAAA;YACP,MAAM,MAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjGf,IAAa,CAAC,6BAA6B,4BAAA,IACvC,cAAqC,gBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAezC,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AAad,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,cAAc,4BAAA;AAEpB,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,SAASA,OAAM,QAAA;AACpE,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,SAASA,OAAM,QAAA;AACpE,UAAM,UAAU,SAAS,MAAA;;AAAM,sBAAQ,iBAAY,eAAZ,mBAAwB,OAAOA,OAAM,KAAA;KAAM;AAElF,iCAA6B;MAAE;MAAU;IAAS,CAAA;AAElD,UAAM,oBAAoB,IAAI,KAAA;AAC9B,UAAMC,cAAa;MAAC;MAAW;MAAa;MAAa;IAAY;AAErE,qBAAiB,WAAW,CAAC,UAAU;AACrC,UAAIA,YAAW,SAAS,MAAM,GAAA,EAC5B,mBAAkB,QAAQ;IAC7B,CAAA;AACD,qBAAiB,SAAS,MAAM;AAC9B,wBAAkB,QAAQ;IAC3B,CAAA;AAED,aAAS,cAAc;AACrB,iBAAW,MAAM;;AAMf,YAAI,kBAAkB,MACpB,sBAAe,UAAf,mBAAsB;MACzB,GAAE,CAAA;IACL;;0BAIE,YAwBkB,MAAA,uBAAA,GAAA;QAvBf,SAAS,QAAA;QACT,UAAU,SAAA;QACX,YAAA;QACC,WAAA,CAAY,SAAA;QACZ,QAAQ,QAAA;;yBAET,MAgBQ,CAhBR,YAgBQ,eAhBR,WAgBQ;UAAA,GAfOC,KAAAA;UAAM,GAAKF;QAAK,GAAA;UAC5B,KAAK,MAAA,UAAA;UACL,SAAS,QAAA;UACT,UAAU,SAAA;UACV,UAAU,SAAA;UACV,oBAAc,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,iBAAiBG,KAAAA,KAAAA;UAC7C,UAAM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,UAAW,MAAA;UACxB,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,SAAA,cAAR,MAAA;UAAsB,GAAA,CAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;UACrB,SAAO;;2BAER,MAIE,CAJF,WAIE,KAAA,QAAA,WAAA;YAHC,SAAS,QAAA;YACT,UAAU,SAAA;YACV,UAAU,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpFnB,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,cAAc,4BAAA;;0BAIlB,YAaW,MAAA,gBAAA,GAAA,EAZR,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,QAAQ,MAAA,GAAA;yBAE5C,MASY,CATZ,YASY,MAAA,SAAA,GATZ,WASY;UART,KAAK,MAAA,UAAA;UACL,cAAY,MAAA,WAAA,EAAY,QAAQ,QAAK,YAAA;UACrC,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;UACzC,YAAUC,KAAAA;UACV,IAAIC,KAAAA;WACGC,KAAAA,MAAAA,GAAM;2BAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AEXd,IAAa,CAAC,6BAA6B,4BAAA,IACvC,cAAqC,gBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBzC,UAAMC,SAAQ;AAKd,UAAM,cAAc,IAAI,CAAA;AACxB,UAAM,eAAe,IAAI,CAAA;AACzB,UAAM,WAAW,IAAA;AACjB,UAAM,UAAU,IAAA;AAChB,UAAM,aAAa,IAAA;AACnB,UAAM,aAAa,IAAA;AACnB,UAAM,oBAAoB,IAAI,KAAA;AAC9B,UAAM,oBAAoB,IAAI,KAAA;AAE9B,UAAM,EAAE,MAAM,KAAK,SAAS,gBAAA,IAAoB,OAAOA,MAAA;AACvD,UAAM,MAAM,aAAa,OAAA;AAEzB,aAAS,YAAY;;AACnB,qBAAS,UAAT,mBAAgB,SAAS,EACvB,KAAK,EACN;IACH;AACA,aAAS,gBAAgB;;AACvB,qBAAS,UAAT,mBAAgB,SAAS;QACvB,KAAK;QACL,MAAM;MACP;IACH;AAEA,aAAa;MAEX;MAEA;MAEA;IACD,CAAA;AAED,UAAM,EAAE,YAAY,gBAAgB,WAAA,IAAe,iBAAA;AAEnD,iCAA6B;MAC3B;MACA;MACA;MACA;MACA;MACA,kBAAkB,CAAC,OAAO;AACxB,iBAAS,QAAQ,MAAA;MAClB;MACD;MACA,iBAAiB,CAAC,OAAO;AACvB,gBAAQ,QAAQ;MACjB;MACD;MACA;MACA;MACA;MACA,oBAAoB,CAAC,cAAc;AACjC,mBAAW,QAAQ,aAAA;MACpB;MACD,oBAAoB,CAAC,cAAc;AACjC,mBAAW,QAAQ,aAAA;MACpB;MACD,2BAA2B,CAAC,aAAa;AACvC,0BAAkB,QAAQ;MAC3B;MACD,2BAA2B,CAAC,aAAa;AACvC,0BAAkB,QAAQ;MAC3B;MACD,qBAAqB,CAAC,UAAU;AAC9B,oBAAY,QAAQ;MACrB;MACD,sBAAsB,CAAC,WAAW;AAChC,qBAAa,QAAQ;MACtB;IACF,CAAA;;0BAIC,YAaY,MAAA,SAAA,GAAA;QAZT,KAAK,MAAA,UAAA;QACL,YAAUA,OAAM;QAChB,IAAIC,KAAAA;QACJ,KAAK,MAAA,GAAA;QACL,OAAK,eAAA;;kDAAsK,YAAA,KAAA;mDAAuE,aAAA,KAAA;;;yBAOnP,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;AExIZ,UAAM,cAAc,4BAAA;AAEpB,UAAM,QAAQ,IAAI,CAAA;AAClB,UAAM,SAAS,IAAI,CAAA;AAEnB,UAAM,UAAU,SAAS,MAAA,CAAA,CAAQ,MAAM,SAAA,CAAA,CAAW,OAAO,KAAA;AAEzD,aAAS,kBAAkB;;AACzB,YAAM,iBAAe,iBAAY,WAAW,UAAvB,mBAA8B,iBAAgB;AACnE,kBAAY,qBAAqB,YAAA;AACjC,aAAO,QAAQ;IACjB;AACA,aAAS,iBAAiB;;AACxB,YAAM,gBAAc,iBAAY,WAAW,UAAvB,mBAA8B,gBAAe;AACjE,kBAAY,oBAAoB,WAAA;AAChC,YAAM,QAAQ;IAChB;AAEA,sBAAkB,YAAY,WAAW,OAAO,eAAA;AAChD,sBAAkB,YAAY,WAAW,OAAO,cAAA;AAGhD,UAAM,MAAM,YAAY,WAAW,OAAO,eAAA;AAC1C,UAAM,MAAM,YAAY,WAAW,OAAO,cAAA;;;aAKhC,QAAA,SAAA,UAAA,GADR,YAaY,MAAA,SAAA,GAbZ,WAaY;;QAXT,OAAK;oBAAoB,MAAA,KAAA;qBAA4B,OAAA,KAAA;;iBAAqD,MAAA,WAAA,EAAY,IAAI,UAAK,QAAA,IAAA;gBAAwC,MAAA,WAAA,EAAY,IAAI,UAAK,QAAA,IAAA;;;UAQrLC,UAAAA,YAAAA,mBAAS,MAAA,GAAM;yBAEvB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEjCZ,UAAMC,SAAQ;AAEd,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,cAAc,4BAAA;AAEpB,UAAM,2BAA2B,SAC/B,MAAA,CAAA,CAAQ,YAAY,WAAW,SAAA,CAAA,CAAW,YAAY,WAAW,KAAA;AAEnE,UAAM,YAAY,SAChB,MAAM,YAAY,KAAK,UAAU,YAAY,yBAAyB,KAAA;;aAM9D,UAAA,SAAA,UAAA,GADR,YAMuB,8BANvB,WAMuB,EAAA,KAAA,EAAA,GAJbA,QAAK,EACZ,KAAK,MAAA,UAAA,EAAU,CAAA,GAAA;yBAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AE3BZ,SAAS,YACPC,OACAC,QACA;AACA,SAAO,CAACC,UAAkB;AACxB,QAAI,MAAM,CAAA,MAAO,MAAM,CAAA,KAAM,OAAO,CAAA,MAAO,OAAO,CAAA,EAChD,QAAO,OAAO,CAAA;AAChB,UAAM,SAAS,OAAO,CAAA,IAAK,OAAO,CAAA,MAAO,MAAM,CAAA,IAAK,MAAM,CAAA;AAC1D,WAAO,OAAO,CAAA,IAAK,SAAS,QAAQ,MAAM,CAAA;EAC3C;AACF;AAED,SAAgB,aAAaC,OAAc;AACzC,QAAM,QAAQ,cAAc,MAAM,UAAU,MAAM,OAAA;AAClD,QAAM,mBACF,MAAM,UAAU,eAAe,MAAM,UAAU;AACnD,QAAM,aAAa,MAAM,UAAU,OAAO,oBAAoB;AAE9D,SAAO,KAAK,IAAI,WAAW,EAAA;AAC5B;AAED,SAAgB,cAAcC,cAAsBC,aAAqB;AACvE,QAAM,QAAQ,eAAe;AAC7B,SAAO,OAAO,MAAM,KAAA,IAAS,IAAI;AAClC;AAID,SAAgB,0BACdC,MACA,UAAU,MAAM;AAAE,GAClB;AACA,MAAI,eAAe;IAAE,MAAM,KAAK;IAAY,KAAK,KAAK;EAAW;AACjE,MAAI,MAAM;AACV,GAAC,SAAS,OAAO;AACf,UAAM,WAAW;MAAE,MAAM,KAAK;MAAY,KAAK,KAAK;IAAW;AAC/D,UAAM,qBAAqB,aAAa,SAAS,SAAS;AAC1D,UAAM,mBAAmB,aAAa,QAAQ,SAAS;AACvD,QAAI,sBAAsB,iBACxB,SAAA;AACF,mBAAe;AACf,UAAM,OAAO,sBAAsB,IAAA;EACpC,GAAA;AACD,SAAO,MAAM,OAAO,qBAAqB,GAAA;AAC1C;AAED,SAAgB,yBACdC,WACAJ,OACAK,MAAiB,OACjB;AACA,QAAM,cAAc,aAAa,KAAA;AACjC,QAAM,mBACF,MAAM,UAAU,eAAe,MAAM,UAAU;AACnD,QAAM,YAAY,MAAM,UAAU,OAAO;AACzC,QAAM,eAAe,MAAM,UAAU,MAAM;AAC3C,QAAM,cAAc,YAAY;AAChC,QAAM,mBACF,QAAQ,QAAQ,CAAC,GAAG,YAAa,IAAG,CAAC,eAAe,IAAI,CAAE;AAC9D,QAAM,wBAAwB,MAC5B,WACA,iBAAiB,CAAA,GACjB,iBAAiB,CAAA,CAAA;AAEnB,QAAM,cAAc,YAAY,CAAC,GAAG,YAAa,GAAE,CAAC,GAAG,WAAY,CAAA;AACnE,SAAO,YAAY,qBAAA;AACpB;AAED,SAAgB,MAAMC,OAAgB;AACpC,SAAO,QAAQ,OAAO,SAAS,OAAO,EAAA,IAAM;AAC7C;AAED,SAAgB,6BACdC,YACAC,eACAR,OACAK,MAAiB,OACjB;AACA,QAAM,cAAc,aAAa,KAAA;AACjC,QAAM,cAAc,cAAc;AAClC,QAAMI,UAAS,iBAAiB;AAChC,QAAM,qBAAqB,cAAcA;AACzC,QAAM,gBAAgB,MAAM,UAAU,eAAeA;AACrD,QAAM,gBACF,MAAM,UAAU,OAAO,MAAM,UAAU,aAAa;AACxD,QAAM,eAAe,MAAM,UAAU,MAAM;AAC3C,QAAM,cACF,QAAQ,QAAQ,CAAC,GAAG,YAAa,IAAG,CAAC,eAAe,IAAI,CAAE;AAC9D,QAAM,cAAc,YAClB,CAAC,eAAe,aAAc,GAC9B,WAAA;AAEF,SAAO,YAAY,UAAA;AACpB;AAED,SAAgB,iCACdL,WACAM,cACA;AACA,SAAO,YAAY,KAAK,YAAY;AACrC;;;;;;AChGD,UAAM,cAAc,4BAAA;AACpB,UAAM,0BAA0B,wCAAA;AAEhC,UAAM,EAAE,YAAY,gBAAgB,iBAAA,IAAqB,iBAAA;AAEzD,cAAU,MAAM;AACd,UAAI,iBAAiB,MACnB,aAAY,mBAAmB,iBAAiB,KAAA;IACnD,CAAA;AACD,UAAM,QAAQ,SAAS,MAAM,wBAAwB,MAAM,KAAA;;0BAIzD,YAa0B,iCAAA;QAZvB,KAAK,MAAA,UAAA;QACL,iBAAe;QAChB,oBAAiB;QAChB,OAAK,eAAA;;gBAAiC,MAAA,WAAA,EAAY,IAAI,UAAK,QAAA,yCAAA;iBAAsE,MAAA,WAAA,EAAY,IAAI,UAAK,QAAA,yCAAA;8CAA0G,MAAA,QAAK,GAAM,MAAA,YAAA,EAAa,MAAA,KAAA,CAAK,OAAA;;QAM7R,gBAAc,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,uBAAA,EAAwB,aAAa,OAAO,CAAA;;yBAE7D,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;AEzBZ,UAAM,cAAc,4BAAA;AACpB,UAAM,0BAA0B,wCAAA;AAEhC,UAAM,EAAE,YAAY,gBAAgB,iBAAA,IAAqB,iBAAA;AAEzD,cAAU,MAAM;AACd,UAAI,iBAAiB,MACnB,aAAY,mBAAmB,iBAAiB,KAAA;IACnD,CAAA;AAED,UAAM,QAAQ,SAAS,MAAM,wBAAwB,MAAM,KAAA;;0BAIzD,YAc0B,iCAAA;QAbvB,KAAK,MAAA,UAAA;QACL,iBAAe;QAChB,oBAAiB;QAChB,OAAK,eAAA;;iBAA+B,MAAA,WAAA,EAAY,IAAI,UAAK,QAAA,IAAA;gBAAwC,MAAA,WAAA,EAAY,IAAI,UAAK,QAAA,IAAA;;+CAAqI,MAAA,QAAK,GAAM,MAAA,YAAA,EAAa,MAAA,KAAA,CAAK,OAAA;;QAOxR,gBAAc,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,uBAAA,EAAwB,aAAa,OAAO,CAAA;;yBAE7D,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AElBZ,UAAM,cAAc,4BAAA;AACpB,UAAM,mBAAmB,iCAAA;AAEzB,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,UAAU,IAAI,KAAA;AAEpB,UAAM,eAAe,cAAc,MAAM;AACvC,UAAI,YAAY,SAAS,OAAO;AAC9B,cAAM,cACF,YAAY,SAAS,MAAM,cACzB,YAAY,SAAS,MAAM;AACjC,cAAM,cACF,YAAY,SAAS,MAAM,eACzB,YAAY,SAAS,MAAM;AAEjC,gBAAQ,QAAQ,iBAAiB,aAAa,QAC1C,cACA;MACN;IACD,GAAE,EAAA;AAEH,cAAU,MAAM,aAAA,CAAc;AAE9B,sBAAkB,YAAY,UAAU,YAAA;AACxC,sBAAkB,YAAY,SAAS,YAAA;;0BAIrC,YAQW,MAAA,gBAAA,GAAA,EARA,SAASC,KAAAA,cAAc,QAAA,MAAA,GAAA;yBAChC,MAM6B,CAN7B,YAM6B,oCAN7B,WACUC,KAKmB,QALb;UACb,KAAK,MAAA,UAAA;UACL,cAAY,QAAA,QAAO,YAAA;;2BAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;AEjCd,UAAM,cAAc,4BAAA;AAEpB,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,QAAI;AACJ,UAAM,UAAU,IAAI,KAAA;AAEpB,aAAS,qBAAqB;AAC5B,aAAO,aAAa,OAAA;AACpB,cAAQ,QAAQ;IAClB;AACA,aAAS,qBAAqB;AAC5B,gBAAU,OAAO,WAAW,MAAM;AAChC,gBAAQ,QAAQ;MACjB,GAAE,YAAY,gBAAgB,KAAA;IACjC;AAEA,cAAU,MAAM;AACd,YAAM,aAAa,YAAY,WAAW;AAE1C,UAAI,YAAY;AACd,mBAAW,iBAAiB,gBAAgB,kBAAA;AAC5C,mBAAW,iBAAiB,gBAAgB,kBAAA;MAC9C;IACD,CAAA;AAED,gBAAY,MAAM;AAChB,YAAM,aAAa,YAAY,WAAW;AAC1C,UAAI,YAAY;AACd,eAAO,aAAa,OAAA;AACpB,mBAAW,oBAAoB,gBAAgB,kBAAA;AAC/C,mBAAW,oBAAoB,gBAAgB,kBAAA;MACjD;IACD,CAAA;;0BAIC,YAQW,MAAA,gBAAA,GAAA,EARA,SAASC,KAAAA,cAAc,QAAA,MAAA,GAAA;yBAChC,MAM0B,CAN1B,YAM0B,iCAN1B,WACUC,KAKgB,QALV;UACb,KAAK,MAAA,UAAA;UACL,cAAY,QAAA,QAAO,YAAA;;2BAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;AE5Cd,UAAM,cAAc,4BAAA;AACpB,UAAM,mBAAmB,iCAAA;AAEzB,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,EAAE,OAAO,SAAA,IAAa,gBAAgB,UAAU;MACpD,QAAQ,EACN,QAAQ,YACT;MACD,WAAW;QACT,YAAY;QACZ,eAAe;MAChB;MACD,aAAa;QACX,QAAQ;QACR,eAAe;MAChB;MACD,MAAM;QACJ,MAAM;QACN,QAAQ;QACR,eAAe;MAChB;IACF,CAAA;AAED,UAAM,UAAU,SAAS,MAAM,MAAM,UAAU,QAAA;AAE/C,gBAAY,CAAC,cAAc;AACzB,UAAI,MAAM,UAAU,QAAQ;AAC1B,cAAM,SAAS,OAAO,WACpB,MAAM,SAAS,MAAA,GACf,YAAY,gBAAgB,KAAA;AAG9B,kBAAU,MAAM;AACd,iBAAO,aAAa,MAAA;QACrB,CAAA;MACH;IACD,CAAA;AAED,UAAM,oBAAoB,cAAc,MAAM,SAAS,YAAA,GAAe,GAAA;AAEtE,gBAAY,CAAC,cAAc;AACzB,YAAM,WAAW,YAAY,SAAS;AACtC,YAAM,kBAAkB,iBAAiB,aAAa,QAClD,eACA;AAEJ,UAAI,UAAU;AACZ,YAAI,gBAAgB,SAAS,eAAA;AAC7B,cAAM,eAAe,MAAM;AACzB,gBAAM,YAAY,SAAS,eAAA;AAC3B,gBAAM,8BAA8B,kBAAkB;AACtD,cAAI,6BAA6B;AAC/B,qBAAS,QAAA;AACT,8BAAA;UACF;AACA,0BAAgB;QAClB;AACA,iBAAS,iBAAiB,UAAU,YAAA;AAEpC,kBAAU,MAAM;AACd,mBAAS,oBAAoB,UAAU,YAAA;QACxC,CAAA;MACH;IACD,CAAA;;0BAIC,YAQW,MAAA,gBAAA,GAAA,EARA,SAASC,KAAAA,cAAc,QAAA,MAAA,GAAA;yBAChC,MAM6B,CAN7B,YAM6B,oCAN7B,WACUC,KAKmB,QALb;UACb,KAAK,MAAA,UAAA;UACL,cAAY,QAAA,QAAO,YAAA;;2BAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;AErEd,IAAa,CAAC,kCAAkC,iCAAA,IAC5C,cAAyC,qBAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAoB7C,UAAMC,SAAQ;AAKd,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,cAAc,4BAAA;AAEpB,UAAM,eAAe,SAAS,MAAMA,OAAM,gBAAgB,YAAA;AAE1D,UACE,cACA,MAAM;AACJ,UAAI,aAAa,MACf,aAAY,0BAA0B,IAAA;UACnC,aAAY,0BAA0B,IAAA;IAC5C,GACD,EAAE,WAAW,KAAM,CAAA;AAGrB,gBAAY,MAAM;AAChB,kBAAY,0BAA0B,KAAA;AACtC,kBAAY,0BAA0B,KAAA;IACvC,CAAA;AAED,UAAM,EAAE,aAAa,YAAY,SAAS,GAAA,IAAO,OAAOA,MAAA;AACxD,sCAAkC;MAChC;MACA;MACA;MACA;MACA;IACD,CAAA;;aAKS,MAAA,WAAA,EAAY,KAAK,UAAK,WAAA,UAAA,GAD9B,YAO2B,kCAP3B,WAO2B,EAAA,KAAA,EAAA,GALjBC,KAAAA,QAAM;QACb,KAAK,MAAA,UAAA;QACL,eAAa,MAAA,UAAA;;yBAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;iCAGG,MAAA,WAAA,EAAY,KAAK,UAAK,YAAA,UAAA,GADnC,YAO4B,mCAP5B,WAO4B,EAAA,KAAA,EAAA,GALlBA,KAAAA,QAAM;QACb,KAAK,MAAA,UAAA;QACL,eAAa,MAAA,UAAA;;yBAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;iCAGG,MAAA,WAAA,EAAY,KAAK,UAAK,UAAA,UAAA,GADnC,YAO0B,iCAP1B,WAO0B,EAAA,KAAA,EAAA,GALhBA,KAAAA,QAAM;QACb,KAAK,MAAA,UAAA;QACL,eAAa,MAAA,UAAA;;yBAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;iCAGG,MAAA,WAAA,EAAY,KAAK,UAAK,YAAA,UAAA,GADnC,YAO6B,oCAP7B,WAO6B,EAAA,KAAA,EAAA,GALnBA,KAAAA,QAAM;QACb,KAAK,MAAA,UAAA;QACN,cAAW;;yBAEX,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AE1FZ,IAAa,CAAC,yCAAyC,wCAAA,IACnD,cAAiD,4BAAA;;;;AAgBrD,UAAM,cAAc,4BAAA;AACpB,UAAM,mBAAmB,iCAAA;AACzB,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,QAAQ,IAAW;MACvB,SAAS;MACT,UAAU;MACV,WAAW;QAAE,MAAM;QAAG,cAAc;QAAG,YAAY;MAAG;IACvD,CAAA;AAED,UAAM,WAAW,SAAS,MAAM;AAC9B,YAAM,aAAa,cAAc,MAAM,MAAM,UAAU,MAAM,MAAM,OAAA;AACnE,aAAO,QAAQ,aAAa,KAAK,aAAa,CAAA;IAC/C,CAAA;AAED,UAAM,WAAW,IAAA;AACjB,UAAM,gBAAgB,IAAI,CAAA;AAE1B,aAAS,kBAAkB,OAAmB,SAAiB;AAC7D,UAAI,oBAAoB,OAAO;AAC7B,cAAM,YAAY,YAAY,SAAS,MAAO,aAAa,MAAM;AAEjE,oBAAY,SAAS,MAAO,aAAa;AAEzC,YAAI,iCAAiC,WAAW,OAAA,EAC9C,OAAM,eAAA;MACV,OACK;AACH,cAAM,YAAY,YAAY,SAAS,MAAO,YAAY,MAAM;AAEhE,oBAAY,SAAS,MAAO,YAAY;AAExC,YAAI,iCAAiC,WAAW,OAAA,EAC9C,OAAM,eAAA;MACV;IACF;AAEA,aAAS,gBAAgB,OAAmB,SAAmC;AAC7E,UAAI,oBAAoB,MACtB,eAAc,QAAQ,QAAQ;UAC3B,eAAc,QAAQ,QAAQ;IACrC;AACA,aAAS,cAAc,OAAmB;AACxC,oBAAc,QAAQ;IACxB;AAEA,aAAS,iBAAiB,SAAgB;AACxC,YAAM,QAAQ;IAChB;AAEA,aAAS,kBAAkB,YAAoB,KAAiB;AAC9D,aAAO,6BACL,YACA,cAAc,OACd,MAAM,OACN,GAAA;IAEJ;AAEA,UAAM,sBAAsB,SAC1B,MAAM,iBAAiB,aAAa,KAAA;AAGtC,aAAS,aAAa,SAAiB;AACrC,UAAI,oBAAoB,MACtB,aAAY,SAAS,MAAO,aAAa,kBACvC,SACA,YAAY,IAAI,KAAA;UAIlB,aAAY,SAAS,MAAO,YAAY,kBAAkB,OAAA;IAE9D;AAEA,aAAS,wBAAwB;AAC/B,UAAI,oBAAoB,OACtB;YAAI,YAAY,SAAS,SAAS,SAAS,OAAO;AAChD,gBAAM,YAAY,YAAY,SAAS,MAAM;AAC7C,gBAAMC,UAAS,yBACb,WACA,MAAM,OACN,YAAY,IAAI,KAAA;AAElB,mBAAS,MAAM,MAAM,YAAY,eAAeA,OAAA;QAClD;iBAGI,YAAY,SAAS,SAAS,SAAS,OAAO;AAChD,cAAM,YAAY,YAAY,SAAS,MAAM;AAC7C,cAAMA,UAAS,yBAAyB,WAAW,MAAM,KAAA;AACzD,iBAAS,MAAM,MAAM,YAAY,kBAAkBA,OAAA;MACrD;IAEJ;AACA,aAAS,cAAc,SAAsB;AAC3C,eAAS,QAAQ;IACnB;AAEA,6CAAyC;MACvC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;;aAKS,oBAAA,SAAA,UAAA,GADR,YAMuB,8BANvB,WAMuB,EAAA,KAAA,EAAA,GAJbC,KAAAA,QAAM,EACb,KAAK,MAAA,UAAA,EAAU,CAAA,GAAA;yBAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;8BAEV,YAMuB,8BANvB,WAMuB,EAAA,KAAA,EAAA,GAJbA,KAAAA,QAAM,EACb,KAAK,MAAA,UAAA,EAAU,CAAA,GAAA;yBAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;AE5IZ,UAAMC,SAAQ;AACd,UAAM,OAAO;AACb,UAAM,cAAc,4BAAA;AACpB,UAAM,0BAA0B,wCAAA;AAChC,UAAM,mBAAmB,iCAAA;AAEzB,UAAM,EAAE,YAAY,gBAAgB,UAAA,IAAc,iBAAA;AAClD,UAAM,0BAA0B,IAAI,EAAA;AACpC,UAAM,UAAU,IAAA;AAEhB,aAAS,iBAAiB,OAAmB;;AAC3C,UAAI,QAAQ,OAAO;AACjB,cAAM,IAAI,MAAM,YAAU,aAAQ,UAAR,mBAAe;AACzC,cAAM,IAAI,MAAM,YAAU,aAAQ,UAAR,mBAAe;AACzC,aAAK,gBAAgB;UAAE;UAAG;QAAG,CAAA;MAC/B;IACF;AAEA,aAASC,mBAAkB,OAAqB;AAC9C,YAAM,cAAc;AACpB,UAAI,MAAM,WAAW,aAAa;AAChC,cAAM,UAAU,MAAM;AACtB,gBAAQ,kBAAkB,MAAM,SAAA;AAChC,gBAAQ,QAAQ,UAAU,MAAO,sBAAA;AAIjC,gCAAwB,QAAQ,SAAS,KAAK,MAAM;AACpD,iBAAS,KAAK,MAAM,mBAAmB;AACvC,YAAI,YAAY,SACd,aAAY,SAAS,MAAO,MAAM,iBAAiB;AAErD,yBAAiB,KAAA;MACnB;IACF;AAEA,aAASC,mBAAkB,OAAqB;AAC9C,uBAAiB,KAAA;IACnB;AAEA,aAASC,iBAAgB,OAAqB;AAC5C,YAAM,UAAU,MAAM;AACtB,UAAI,QAAQ,kBAAkB,MAAM,SAAA,EAClC,SAAQ,sBAAsB,MAAM,SAAA;AAEtC,eAAS,KAAK,MAAM,mBAAmB,wBAAwB;AAC/D,UAAI,YAAY,SACd,aAAY,SAAS,MAAO,MAAM,iBAAiB;AAErD,cAAQ,QAAA;IACV;AAEA,aAAS,YAAY,OAAmB;;AACtC,YAAM,UAAU,MAAM;AACtB,YAAM,oBAAmB,eAAU,UAAV,mBAAiB,SAAS;AACnD,YAAM,eACF,wBAAwB,MAAM,MAAM,UAClC,wBAAwB,MAAM,MAAM;AAC1C,UAAI,iBACF,yBAAwB,kBAAkB,OAAO,YAAA;IACrD;AAEA,cAAU,MAAM;AACd,eAAS,iBAAiB,SAAS,aAAa,EAAE,SAAS,MAAO,CAAA;IACnE,CAAA;AACD,gBAAY,MAAM;AAChB,eAAS,oBAAoB,SAAS,WAAA;IACvC,CAAA;AAED,aAAS,mBAAmB;;AAC1B,UAAA,CAAK,UAAU,MACb;AACF,UAAIH,OAAM,aACR,yBAAwB,iBAAiB;QACvC,WAAS,iBAAY,SAAS,UAArB,mBAA4B,gBAAe;QACpD,YAAU,iBAAY,SAAS,UAArB,mBAA4B,gBAAe;QACrD,WAAW;UACT,MAAM,UAAU,MAAM,eAAe;UACrC,cAAc,MAAM,iBAAiB,UAAU,KAAA,EAAO,WAAA;UACtD,YAAY,MAAM,iBAAiB,UAAU,KAAA,EAAO,YAAA;QACrD;MACF,CAAA;UAGD,yBAAwB,iBAAiB;QACvC,WAAS,iBAAY,SAAS,UAArB,mBAA4B,iBAAgB;QACrD,YAAU,iBAAY,SAAS,UAArB,mBAA4B,iBAAgB;QACtD,WAAW;UACT,QAAM,eAAU,UAAV,mBAAiB,iBAAgB;UACvC,cAAc,MAAM,iBAAiB,UAAU,KAAA,EAAQ,WAAA;UACvD,YAAY,MAAM,iBAAiB,UAAU,KAAA,EAAQ,YAAA;QACtD;MACF,CAAA;IAEL;AAEA,sBAAkB,WAAW,gBAAA;AAC7B,sBAAkB,YAAY,SAAS,gBAAA;;0BAIrC,YAWY,MAAA,SAAA,GAAA;QAVT,KAAK,MAAA,UAAA;QACN,OAAA,EAAA,YAAA,WAA0B;QAC1B,sBAAA;QACC,IAAI,MAAA,gBAAA,EAAiB,GAAG;QACxB,YAAU,MAAA,gBAAA,EAAiB,QAAQ;QACnC,eAAaC;QACb,eAAaC;QACb,aAAWC;;yBAEZ,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEtHZ,UAAMC,SAAQ;AAEd,UAAM,cAAc,4BAAA;AACpB,UAAM,0BAA0B,wCAAA;AAEhC,aAASC,mBAAkB,OAAmB;AAC5C,YAAM,QAAQ,MAAM;AACpB,YAAM,YAAY,MAAM,sBAAA;AACxB,YAAM,IAAI,MAAM,UAAU,UAAU;AACpC,YAAM,IAAI,MAAM,UAAU,UAAU;AACpC,8BAAwB,gBAAgB,OAAO;QAAE;QAAG;MAAG,CAAA;IACzD;AAEA,aAASC,iBAAgB,OAAmB;AAC1C,8BAAwB,cAAc,KAAA;IACxC;AAEA,UAAM,EAAE,YAAY,gBAAgB,aAAA,IAAiB,iBAAA;AACrD,UAAM,kCAAkC,IAAA;AACxC,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,KAAA;AAErD,aAAS,eAAe;AACtB,UAAA,CAAK,gCAAgC,OAAO;AAC1C,cAAM,WAAW,0BACf,SAAS,OACT,wBAAwB,qBAAA;AAE1B,wCAAgC,QAAQ;AACxC,gCAAwB,sBAAA;MAC1B;IACF;AAEA,UAAM,QAAQ,SAAS,MAAM,wBAAwB,MAAM,KAAA;AAE3D,cAAU,OAAO,MAAM;AACrB,8BAAwB,cAAc,aAAa,KAAA;AACnD,UAAI,SAAS,OAAO;AAQlB,gCAAwB,sBAAA;AACxB,iBAAS,MAAM,iBAAiB,UAAU,YAAA;MAC5C;IACD,CAAA;AAED,gBAAY,MAAM;;AAChB,eAAS,MAAO,oBAAoB,UAAU,YAAA;AAC9C,wBAAY,SAAS,UAArB,mBAA4B,oBAAoB,UAAU;IAC3D,CAAA;;0BAIC,YAaY,MAAA,SAAA,GAAA;QAZT,KAAK,MAAA,UAAA;QACL,cAAY,MAAA,uBAAA,EAAwB,WAAQ,YAAA;QAC5C,OAAO;;;QAGP;QACA,YAAUF,OAAM;QAChB,IAAIG,KAAAA;QACJ,eAAaF;QACb,aAAWC;;yBAEZ,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7DZ,UAAME,SAAQ;AAEd,UAAM,EAAE,OAAO,UAAA,IAAc,OAAOA,MAAA;AACpC,UAAM,QAAQ,SAAS,SAAA;AAEvB,UAAM,cAAc,4BAAA;AAEpB,UAAM,kBAAkB,IAAA;AAExB,cAAU,MAAM;AACd,kBAAY,iBAAiB,gBAAgB,KAAA;AAC7C,kBAAY,gBAAgB,eAAe,KAAA;IAC5C,CAAA;AAED,aAAa,EACX,gBACD,CAAA;AACD,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;;8DAIrD,gBAsCM,OAtCN,WAsCM;iBArCA;QAAJ,KAAI;QACJ,kCAA+B;QAC9B,OAAK;qBAA6tB,MAAA,WAAA,EAAY,kBAAkB,QAAK,WAAA;qBAAyC,MAAA,WAAA,EAAY,kBAAkB,QAAK,WAAA;;SAe10BC,KAAAA,QAAM,EACb,UAAU,EAAC,CAAA,GAAA,CAEZ,YAgBY,MAAA,SAAA,GAAA;QAfT,KAAK,MAAA,UAAA;QACL,OAAK,eAAA,EAAA,UAA6X,MAAA,WAAA,EAAY,kBAAkB,QAAK,gBAAA,OAAA,CAAA;QAUra,YAAUD,OAAM;QAChB,IAAIE,KAAAA;;yBAEL,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;gBAGZ,YAeY,MAAA,SAAA,GAAA;QAdV,IAAG;QACF,OAAO,MAAA,KAAA;;yBACT,MAYD,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,gBAZC,gRAAA,CAYD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjFF,UAAMC,SAAQ;AACd,UAAM,gBAAgB,IAAA;AAGtB,UAAM,MAAMA,OAAM,OAAO,CAAC,KAAK,SAAS;AACtC,YAAM,cAAc,OAAO,kBAAkB;AAC7C,YAAM,aAAa,OAAO,yBACxB,aACA,OAAA;AAEF,YAAM,WAAW,WAAW;AAC5B,UAAI,QAAQ,QAAQ,YAAY,cAAc,OAAO;AACnD,cAAM,QAAQ,IAAI,MAAM,UAAU,EAAE,SAAS,KAAM,CAAA;AACnD,iBAAS,KAAK,cAAc,OAAO,GAAA;AACnC,sBAAc,MAAM,cAAc,KAAA;MACpC;IACD,CAAA;;0BAeC,YAOiB,MAAA,sBAAA,GAAA,EAPD,YAAA,GAAQ,GAAA;yBACtB,MAKS,CALT,gBAKS,UALT,WAKS;mBAJH;UAAJ,KAAI;WACIA,MAAA,GAAK,CAEb,WAAQ,KAAA,QAAA,SAAA,CAAA,GAAA,EAAA,CAAA,CAAA;;;;;;;;;AEjDd,IAAa,YAAY;EAAC;EAAK;EAAS;EAAW;AAAY;AAC/D,IAAaC,kBAAiB,CAAC,KAAK,OAAQ;AAC5C,IAAa,iBAAiB;AAE9B,SAAgBC,iBAAmBC,OAA4BC,cAAiBC,YAAiD;AAC/H,MAAI,UAAA,OACF,QAAO;WACA,MAAM,QAAQ,KAAA,EACrB,QAAO,MAAM,KAAK,CAAA,QAAOC,SAAQ,KAAK,cAAc,UAAA,CAAW;MAE/D,QAAOA,SAAQ,OAAO,cAAc,UAAA;AACvC;AAED,SAAgBA,SAAWC,OAAWC,cAAkBH,YAAiD;AACvG,MAAI,UAAA,UAAuB,iBAAA,OACzB,QAAO;AAET,MAAA,OAAW,UAAU,SACnB,QAAO,UAAU;AAEnB,MAAA,OAAW,eAAe,WACxB,QAAO,WAAW,OAAO,YAAA;AAE3B,MAAA,OAAW,eAAe,SACxB,SAAO,+BAAQ,kBAA2B,6CAAe;AAE3D,SAAO,QAAQ,OAAO,YAAA;AACvB;AAED,SAAgB,sBAAsBI,OAAsD;AAC1F,SAAO,UAAA,UAAuB,UAAU,QAAQ,UAAU,MAAO,MAAM,QAAQ,KAAA,KAAU,MAAM,WAAW;AAC3G;;;;;;;ACwBD,IAAa,CAAC,yBAAyB,wBAAA,IACnC,cAAkD,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAetD,UAAMC,SAAQ;AAId,UAAM,QAAQ;AAWd,UAAM,EAAE,UAAU,UAAU,UAAU,KAAK,QAAA,IAAY,OAAOA,MAAA;AAE9D,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MAEvD,cAAcA,OAAM,iBAAiB,SAAS,QAAQ,CAAE,IAAA;MACxD,SAAUA,OAAM,eAAA;MAChB,MAAM;IACP,CAAA;AAED,UAAM,OAAO,UAAUA,QAAO,QAAQ,OAAO;MAC3C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,iBAAiB,IAAA;AACvB,UAAM,eAAe,IAAA;AACrB,UAAM,2BAA2B,IAAI;MACnC,GAAG;MACH,GAAG;IACJ,CAAA;AAED,UAAM,oBAAoB,SAAS,MAAM;;AACvC,UAAI,SAAS,SAAS,MAAM,QAAQ,WAAW,KAAA,EAC7C,UAAO,gBAAW,UAAX,mBAAkB,YAAW;UAEpC,QAAO,UAAU,WAAW,KAAA;IAC/B,CAAA;AAED,kBAAc,EAAE,YAAY,KAAM,CAAA;AAClC,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,gBAAgB,eAAe,cAAA;AACrC,UAAM,aAAa,IAAuB,oBAAI,IAAA,CAAA;AAO9C,UAAM,kBAAkB,SAAS,MAAM;AACrC,aAAO,MAAM,KAAK,WAAW,KAAA,EAC1B,IAAI,CAAA,WAAU,OAAO,KAAA,EACrB,KAAK,GAAA;IACT,CAAA;AAED,aAAS,kBAAkB,OAAU;AACnC,UAAI,SAAS,OAAO;AAClB,cAAM,QAAQ,MAAM,QAAQ,WAAW,KAAA,IAAS,CAAC,GAAG,WAAW,KAAM,IAAG,CAAC;AACzE,cAAM,QAAQ,MAAM,UAAU,CAAA,MAAKC,SAAQ,GAAG,OAAOD,OAAM,EAAA,CAAG;AAC9D,kBAAU,KAAK,MAAM,KAAK,KAAA,IAAS,MAAM,OAAO,OAAO,CAAA;AACvD,mBAAW,QAAQ,CAAC,GAAG,KAAK;MAC9B,MAEE,YAAW,QAAQ;IAEvB;AAEA,aAAS,UAAU,OAA8B;AAC/C,aAAO,MAAM,KAAK,WAAW,KAAA,EAC1B,KAAK,CAAA,WAAUE,iBAAgB,OAAO,OAAO,OAAOF,OAAM,EAAA,CAAG;IAClE;AAEA,6BAAyB;MACvB;MACA,iBAAiB,CAAC,SAAS;AACzB,uBAAe,QAAQ;MACxB;MACD;MACA,sBAAsB,CAAC,SAAS;AAC9B,qBAAa,QAAQ;MACtB;MACD,WAAW;MACX;MAEA,eAAe;MAEf,IAAIA,OAAM;MACV;MACA;MACA;MACA,cAAc,CAAC,UAAU;AACvB,aAAK,QAAQ;MACd;MACD;MACA;MACA;MACA;MAEA;MACA,aAAa,CAAC,WAAW;AACvB,cAAM,iBAAiB,UAAU,OAAO,KAAA;AACxC,YAAI,eACF,YAAW,MAAM,OAAO,cAAA;AAG1B,mBAAW,MAAM,IAAI,MAAA;MACtB;MACD,gBAAgB,CAAC,WAAW;AAC1B,cAAM,iBAAiB,UAAU,OAAO,KAAA;AACxC,YAAI,eACF,YAAW,MAAM,OAAO,cAAA;MAE3B;IACF,CAAA;;0BAIC,YA4Ba,MAAA,kBAAA,GAAA,MAAA;yBA3BX,MAGE,CAHF,WAGE,KAAA,QAAA,WAAA;UAFC,YAAa,MAAA,UAAA;UACb,MAAM,MAAA,IAAA;YAID,MAAA,aAAA,KAAa,UAAA,GADrB,YAqBe,sBAAA;UAnBZ,KAAK,gBAAA;UACN,eAAY;UACZ,UAAS;UACR,UAAU,MAAA,QAAA;UACV,UAAU,MAAA,QAAA;UACV,MAAMG,KAAAA;UACN,cAAcC,KAAAA;UACd,UAAU,MAAA,QAAA;UACV,OAAO,MAAA,UAAA;;2BAER,MAGE,CAFM,MAAA,SAAA,EAAU,MAAA,UAAA,CAAU,KAAA,UAAA,GAD5B,mBAGE,UAHFC,WAAA,KAGE,mBAAA,QAAA,IAAA,IAAA,UAAA,IAAA,GACF,mBAIE,UAAA,MAAA,WAHiB,MAAM,KAAK,WAAA,KAAA,GAAU,CAA/B,WAAM;gCADf,mBAIE,UAJF,WAIE,EAFC,KAAK,OAAO,SAAK,GAAA,GAAA,EAAA,SAAA,KAAA,GACV,MAAA,GAAM,MAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElNtB,UAAMC,SAAQ;AAId,UAAM,YAAY,gBAAgBA,MAAA;;0BAIhC,YAgBgB,MAAA,qBAAA,GAhBhB,WACU,MAeM,SAAA,GAfG,EAChB,OAAO;;;;;;;MAWP,EAAA,CAAA,GAAA;yBAED,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEQZ,IAAa,mCAAyD;EACpE,kBAAkB,MAAM;EAAE;EAC1B,qBAAqB,MAAM;EAAE;EAC7B,iBAAiB,MAAM;EAAE;AAC3B;AAgCA,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBxC,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AAEd,UAAM,cAAc,wBAAA;AAEpB,mBAAA;AACA,sBAAkBA,OAAM,QAAA;AACxB,UAAM,EAAE,gBAAgB,SAAA,IAAa,cAAA;AAErC,UAAM,UAAU,IAAA;AAChB,kBAAc,OAAA;AAEd,UAAM,EAAE,QAAQ,sBAAA,IAA0B,aAAA;AAE1C,UAAM,WAAW,IAAA;AACjB,UAAM,eAAe,IAAA;AACrB,UAAM,mBAAmB,IAAA;AACzB,UAAM,eAAe,IAAI,KAAA;AACzB,UAAM,yBAAyB,IAAI,KAAA;AACnC,UAAM,mCAAmC,IAAI,KAAA;AAE7C,aAAS,oBAAoB;AAC3B,UAAI,aAAa,SAAS,QAAQ,MAChC,CAAAC,YAAW,CAAC,aAAa,OAAO,QAAQ,KAAM,CAAA;IAClD;AAEA,UAAM,cAAc,MAAM;AACxB,wBAAA;IACD,CAAA;AAID,UAAM,EAAE,cAAc,yBAAA,IAA6B;AACnD,gBAAY,CAAC,cAAc;AACzB,UAAA,CAAK,QAAQ,MACX;AACF,UAAI,mBAAmB;QAAE,GAAG;QAAG,GAAG;MAAE;AAEpC,YAAMC,qBAAoB,CAAC,UAAwB;;AACjD,2BAAmB;UACjB,GAAG,KAAK,IACN,KAAK,MAAM,MAAM,KAAA,OAAU,8BAAyB,UAAzB,mBAAgC,MAAK,EAAA;UAElE,GAAG,KAAK,IACN,KAAK,MAAM,MAAM,KAAA,OAAU,8BAAyB,UAAzB,mBAAgC,MAAK,EAAA;QAEpE;MACF;AACA,YAAMC,mBAAkB,CAAC,UAAwB;;AAG/C,YAAI,MAAM,gBAAgB,QACxB;AAGF,YAAI,iBAAiB,KAAK,MAAM,iBAAiB,KAAK,GACpD,OAAM,eAAA;oBAID,aAAQ,UAAR,mBAAe,SAAS,MAAM,SACjC,cAAa,KAAA;AAEjB,iBAAS,oBAAoB,eAAeD,kBAAA;AAC5C,iCAAyB,QAAQ;MACnC;AAEA,UAAI,yBAAyB,UAAU,MAAM;AAC3C,iBAAS,iBAAiB,eAAeA,kBAAA;AACzC,iBAAS,iBAAiB,aAAaC,kBAAiB;UACtD,SAAS;UACT,MAAM;QACP,CAAA;MACH;AAEA,gBAAU,MAAM;AACd,iBAAS,oBAAoB,eAAeD,kBAAA;AAC5C,iBAAS,oBAAoB,aAAaC,kBAAiB,EACzD,SAAS,KACV,CAAA;MACF,CAAA;IACF,CAAA;AAED,aAAS,cAAc,OAAsB;AAC3C,YAAM,gBAAgB,MAAM,WAAW,MAAM,UAAU,MAAM;AAG7D,UAAI,MAAM,QAAQ,MAChB,OAAM,eAAA;AAER,UAAA,CAAK,iBAAiB,MAAM,IAAI,WAAW,EACzC,uBAAsB,MAAM,KAAK,SAAA,CAAU;AAE7C,UAAI;QAAC;QAAW;QAAa;QAAQ;MAAM,EAAC,SAAS,MAAM,GAAA,GAAM;AAC/D,cAAM,kBAAkB,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA;AAC9C,YAAI,iBAAiB,CAAC,GAAG,eAAe;AAExC,YAAI,CAAC,WAAW,KAAM,EAAC,SAAS,MAAM,GAAA,EACpC,kBAAiB,eAAe,MAAA,EAAQ,QAAA;AAE1C,YAAI,CAAC,WAAW,WAAY,EAAC,SAAS,MAAM,GAAA,GAAM;AAChD,gBAAM,iBAAiB,MAAM;AAC7B,gBAAM,eAAe,eAAe,QAAQ,cAAA;AAC5C,2BAAiB,eAAe,MAAM,eAAe,CAAA;QACvD;AACA,mBAAW,MAAMF,YAAW,cAAA,CAAe;AAC3C,cAAM,eAAA;MACR;IACF;AAEA,UAAM,cAAc,SAAS,MAAM;AACjC,UAAID,OAAM,aAAa,SACrB,QAAOA;UACJ,QAAO,CAAC;IACd,CAAA;AAED,UAAM,iBAAiB,gBAAgB,YAAY,KAAA;AAEnD,gCAA4B;MAC1B;MACA;MACA,kBAAkB,CAAC,SAAS;AAC1B,iBAAS,QAAQ;MAClB;MACD,iBAAiB,CAAC,MAAM,OAAO,aAAa;AAC1C,cAAM,mBAAA,CAAoB,uBAAuB,SAAA,CAAU;AAC3D,cAAM,iBAAiBI,iBAAgB,YAAY,WAAW,OAAO,OAAO,YAAY,EAAA;AAExF,YAAI,YAAY,SAAS,OAAO;AAC9B,cAAI,iCAAiC,MACnC;AAEF,cAAI,kBAAkB,kBAAkB;AACtC,yBAAa,QAAQ;AAGrB,gBAAI,eACF,kCAAiC,QAAQ;UAE7C;QACF,WAEM,kBAAkB,iBACpB,cAAa,QAAQ;AAIzB,YAAI,iBACF,wBAAuB,QAAQ;MAElC;MACD;MACA;MACA,aAAa,MAAM;;AACjB,sBAAQ,UAAR,mBAAe;MAChB;MACD,qBAAqB,CAAC,MAAM,OAAO,aAAa;AAC9C,cAAM,mBAAA,CAAoB,uBAAuB,SAAA,CAAU;AAC3D,cAAM,iBAAiBA,iBAAgB,YAAY,WAAW,OAAO,OAAO,YAAY,EAAA;AAExF,YAAI,kBAAkB,iBACpB,kBAAiB,QAAQ;MAC5B;MACD;MACA,UAAUJ,OAAM;MAChB;MACA,WAAW;IACZ,CAAA;;0BAIC,YA0DiB,MAAA,cAAA,GAAA,MAAA;yBAzDf,MAwDa,CAxDb,YAwDa,MAAA,kBAAA,GAAA;UAvDX,YAAA;UACC,kBAAgB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAjB,MAAA;UAAyB,GAAA,CAAA,SAAA,CAAA;UACxB,oBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAY,UAAK;;AAAiB,kBAAK,kBAAmB,KAAA;gBAAsB,MAAM,iBAAgB;AAAoB,wBAAA,WAAA,EAAY,eAAe,UAA3B,mBAAkC,MAAK,EAAA,eAAA,KAAA;AAAqC,kBAAM,eAAA;;;2BAS/N,MA2CmB,CA3CnB,YA2CmB,MAAA,wBAAA,GAAA;YA1CjB,YAAA;YACA,kCAAA;YACC,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAd,MAAA;YAAsB,GAAA,CAAA,SAAA,CAAA;YACrB,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,aAAY,KAAA;YACjC,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;YACxC,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,sBAAuB,MAAA;;6BAEnD,MAkCY,EAAA,UAAA,GAlCZ,YAkCY,wBAjCQK,KAAAA,aAAQ,WAA8B,+BAAqC,iCAAA,GAD/F,WAkCY;cAAA,GA5BGC,KAAAA;cAAM,GAAK,MAAA,cAAA;YAAc,GAAA;cACrC,IAAI,MAAA,WAAA,EAAY;cAChB,KAAA,CAAmB,UAA8B;sBAA2B,KAAK,MAAA,YAAA,EAAa,KAAA;oBAAoG,yBAAI,aAAY,oCAAsD,SAAA,QAAU,GAAG;oBAAoE,SAAA,QAAU;;;cAWpW,MAAK;cACJ,cAAY,MAAA,WAAA,EAAY,KAAK,QAAK,SAAA;cAClC,KAAK,MAAA,WAAA,EAAY,IAAI;cACrB,OAAO;;;;cAMP;cACA,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAZ,MAAA;cAAoB,GAAA,CAAA,SAAA,CAAA;cACnB,UAAM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,aAAA,QAAY;cACpB,WAAU;;+BAEX,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;AEvTlB,IAAa,CAAC,wCAAwC,uCAAA,IAClD,cAAgD,2BAAA;;;;;;;;;;;;;;;;AAcpD,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAId,UAAM,EAAE,SAAA,IAAa,cAAA;AACrB,UAAM,cAAc,wBAAA;AACpB,UAAM,iBAAiB,2BAAA;AAEvB,UAAM,0BAA0B,IAAI,KAAA;AACpC,UAAM,sBAAsB,IAAI,IAAA;AAEhC,UAAM,wBAAwB,IAAA;AAC9B,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AAEvD,UAAM,EAAE,UAAU,cAAc,kBAAkB,kBAAA,IAC9C;AAEJ,aAAS,WAAW;AAClB,UACE,YAAY,eAAe,SACxB,YAAY,aAAa,SACzB,sBAAsB,SACtB,eAAe,UACf,qCAAU,WACV,6CAAc,WACd,qDAAkB,QACrB;AACA,cAAM,cAAc,YAAY,eAAe,MAAM,sBAAA;AAKrD,cAAM,cAAc,eAAe,MAAM,sBAAA;AACzC,cAAM,gBAAgB,YAAY,aAAa,MAAM,sBAAA;AACrD,cAAM,eAAe,iBAAiB,MAAM,sBAAA;AAE5C,YAAI,YAAY,IAAI,UAAU,OAAO;AACnC,gBAAM,iBAAiB,aAAa,OAAO,YAAY;AACvD,gBAAM,OAAO,cAAc,OAAO;AAClC,gBAAM,YAAY,YAAY,OAAO;AACrC,gBAAM,kBAAkB,YAAY,QAAQ;AAC5C,gBAAM,eAAe,KAAK,IAAI,iBAAiB,YAAY,KAAA;AAC3D,gBAAM,YAAY,OAAO,aAAa;AACtC,gBAAM,cAAc,MAAM,MAAM,gBAAgB,KAAK,IAAI,gBAAgB,YAAY,YAAA,CAAa;AAElG,gCAAsB,MAAM,MAAM,WAAW,GAAG,eAAA;AAChD,gCAAsB,MAAM,MAAM,OAAO,GAAG,WAAA;QAC9C,OACK;AACH,gBAAM,iBAAiB,YAAY,QAAQ,aAAa;AACxD,gBAAM,QAAQ,OAAO,aAAa,cAAc,QAAQ;AACxD,gBAAM,aAAa,OAAO,aAAa,YAAY,QAAQ;AAC3D,gBAAM,kBAAkB,YAAY,QAAQ;AAC5C,gBAAM,eAAe,KAAK,IAAI,iBAAiB,YAAY,KAAA;AAC3D,gBAAM,WAAW,OAAO,aAAa;AACrC,gBAAM,eAAe,MACnB,OACA,gBACA,KAAK,IAAI,gBAAgB,WAAW,YAAA,CAAa;AAGnD,gCAAsB,MAAM,MAAM,WAAW,GAAG,eAAA;AAChD,gCAAsB,MAAM,MAAM,QAAQ,GAAG,YAAA;QAC/C;AAKA,cAAM,QAAQ,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA;AACpC,cAAM,kBAAkB,OAAO,cAAc,iBAAiB;AAC9D,cAAM,cAAc,SAAS,MAAM;AAEnC,cAAM,gBAAgB,OAAO,iBAAiB,eAAe,KAAA;AAC7D,cAAM,wBAAwB,OAAO,SACnC,cAAc,gBACd,EAAA;AAEF,cAAM,oBAAoB,OAAO,SAAS,cAAc,YAAY,EAAA;AACpE,cAAM,2BAA2B,OAAO,SACtC,cAAc,mBACd,EAAA;AAEF,cAAM,uBAAuB,OAAO,SAClC,cAAc,eACd,EAAA;AAGF,cAAM,oBAAoB,wBAAwB,oBAAoB,cAAc,uBAAuB;AAC3G,cAAM,mBAAmB,KAAK,IAC5B,aAAa,MAAM,eAAe,GAClC,iBAAA;AAGF,cAAM,iBAAiB,OAAO,iBAAiB,SAAS,KAAA;AACxD,cAAM,qBAAqB,OAAO,SAAS,eAAe,YAAY,EAAA;AACtE,cAAM,wBAAwB,OAAO,SACnC,eAAe,eACf,EAAA;AAGF,cAAM,yBACF,YAAY,MAAM,YAAY,SAAS,IAAI;AAC/C,cAAM,4BAA4B,kBAAkB;AAEpD,cAAM,yBAAyB,aAAa,MAAM,eAAe;AACjE,cAAM,mBACF,aAAa,MAAM,YAAY;AACnC,cAAM,yBACF,wBAAwB,oBAAoB;AAChD,cAAM,4BACF,oBAAoB;AAExB,cAAM,8BACF,0BAA0B;AAE9B,YAAI,6BAA6B;AAC/B,gBAAM,aAAa,aAAa,UAAU,MAAM,MAAM,SAAS,CAAA;AAC/D,gCAAsB,MAAM,MAAM,SAAS;AAC3C,gBAAM,uBACF,eAAe,MAAM,eACnB,SAAS,MAAM,YACf,SAAS,MAAM;AACrB,gBAAM,mCAAmC,KAAK,IAC5C,2BACA,0BAEG,aAAa,wBAAwB,KACtC,uBACA,wBAAA;AAEJ,gBAAM,SAAS,yBAAyB;AACxC,gCAAsB,MAAM,MAAM,SAAS,GAAG,MAAA;QAChD,OACK;AACH,gBAAM,cAAc,aAAa,UAAU,MAAM,CAAA;AACjD,gCAAsB,MAAM,MAAM,MAAM;AACxC,gBAAM,gCAAgC,KAAK,IACzC,wBACA,wBACE,SAAS,MAAM,aAEd,cAAc,qBAAqB,KACpC,sBAAA;AAEJ,gBAAM,SAAS,gCAAgC;AAC/C,gCAAsB,MAAM,MAAM,SAAS,GAAG,MAAA;AAC9C,mBAAS,MAAM,YACX,yBACE,yBACA,SAAS,MAAM;QACvB;AAEA,8BAAsB,MAAM,MAAM,SAAS,GAAG,cAAA;AAC9C,8BAAsB,MAAM,MAAM,YAAY,GAAG,gBAAA;AACjD,8BAAsB,MAAM,MAAM,YAAY,GAAG,eAAA;AAGjD,cAAM,QAAA;AAIN,8BAAsB,MAAO,wBAAwB,QAAQ,IAAA;MAC/D;IACF;AAGA,UAAM,gBAAgB,IAAI,EAAA;AAE1B,cAAU,YAAY;AACpB,YAAM,SAAA;AACN,eAAA;AACA,UAAI,eAAe,MACjB,eAAc,QAAQ,OAAO,iBAAiB,eAAe,KAAA,EAAO;IACvE,CAAA;AAMD,aAAS,yBAAyB,MAA+B;AAC/D,UAAI,QAAQ,oBAAoB,UAAU,MAAM;AAC9C,iBAAA;AACA;AACA,4BAAoB,QAAQ;MAC9B;IACF;AAGA,sBAAkB,YAAY,gBAAgB,MAAM;AAClD,eAAA;IACD,CAAA;AAED,4CAAwC;MACtC,gBAAgB;MAChB;MACA,sBAAsB;IACvB,CAAA;;0BAIC,mBAsBM,OAAA;iBArBA;QAAJ,KAAI;QACH,OAAK,eAAA;;;;kBAAiG,cAAA;;UAOvG,YAYY,MAAA,SAAA,GAZZ,WAYY;QAXT,KAAK,MAAA,UAAA;QACL,OAAO;;;QAMP;;WACYC,KAAAA;QAAM,GAAKD;MAAK,CAAA,GAAA;yBAE7B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhPd,UAAME,SAAQ;AAKd,UAAM,cAAc,wBAAA;AACpB,UAAM,iBAAiB,2BAA2B,gCAAA;;aAKxC,MAAA,WAAA,EAAY,KAAK,SAAS,MAAA,cAAA,EAAe,aAAQ,YAAA,UAAA,GADzD,YAKc,MAAA,mBAAA,GAAA,eAAA,WAAA,EAAA,KAAA,EAAA,GAHJA,MAAA,CAAK,GAAA;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;AEfZ,UAAMC,SAAQ;AAId,6BAAyBA,OAAM,OAAA;AAC/B,gCAA4B,gCAAA;;aAI1B,WAAQ,KAAA,QAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEUV,UAAMC,SAAQ;AAEd,UAAM,QAAQ;AACd,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAE9C,UAAM,cAAc,wBAAA;AAEpB,UAAM,WAAW,IAAA;AACjB,cAAU,MAAM;AACd,eAAS,QAAQ,IAAI,iBAAA;IACtB,CAAA;AAED,UAAM,cAAc,IAAA;AAEpB,UAAM,UAAU,SAAS,MAAMA,OAAM,cAAc,YAAY,KAAK,KAAA;AACpE,UAAM,iBAAiB,IAAI,QAAQ,KAAA;AAEnC,UAAM,SAAS,MAAM;AAOnB,iBAAW,MAAM,eAAe,QAAQ,QAAQ,KAAA;IACjD,CAAA;;;aAKS,QAAA,SAAW,eAAA,WAAkB,iBAAA,UAAA,mBAAa,YAAA,UAAA,GADlD,YAQW,MAAA,gBAAA,GAAA;;iBANL;QAAJ,KAAI;QACH,SAAS,QAAA;;yBAEV,MAEoB,CAFpB,YAEoB,2BAAA,eAAA,mBAAA;UAAA,GAFY,MAAA,SAAA;UAAS,GAAKC,KAAAA;QAAM,CAAA,CAAA,GAAA;2BAClD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;4BAII,SAAA,SAAA,UAAA,GAAhB,mBAMM,OAAAC,aAAA,EAAA,UAAA,GALJ,YAIW,UAAA,EAJA,IAAI,SAAA,MAAQ,GAAA,CACrB,YAEiB,wBAAA,EAFA,SAAS,MAAA,WAAA,EAAW,GAAA;yBACnC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AE7DhB,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAkC,aAAA;;;;;;;;;;;;;;AAMtC,UAAMC,SAAQ;AAEd,UAAM,KAAKC,OAAA,QAAiB,mBAAA;AAC5B,8BAA0B,EAAE,GAAI,CAAA;;0BAI9B,YAMY,MAAA,SAAA,GANZ,WAMY,EALV,MAAK,QAAO,GACJD,QAAK,EACZ,mBAAiB,MAAA,EAAA,EAAE,CAAA,GAAA;yBAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;0BEdV,YAMY,MAAA,SAAA,GAAA;QALV,eAAY;QACX,IAAIE,KAAAA;QACJ,YAAUC,KAAAA;;yBAEX,MAAc,CAAd,WAAc,KAAA,QAAA,WAAA,CAAA,GAAd,MAAc,CAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,gBAAR,GAAA,EAAC,CAAA,CAAA,CAAA;;;;;;;;;AELX,IAAa,CAAC,yBAAyB,wBAAA,IACjC,cAAiC,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCvC,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,EAAE,SAAA,IAAa,OAAOA,MAAA;AAE5B,UAAM,cAAc,wBAAA;AACpB,UAAM,iBAAiB,2BAAA;AACvB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,EAAE,eAAA,IAAmB,cAAA;AAE3B,UAAM,aAAa,SAAS,MAAA;;AAAM,aAAAC,kBAAgB,iBAAY,eAAZ,mBAAwB,OAAOD,OAAM,OAAO,YAAY,EAAA;KAAG;AAC7G,UAAM,YAAY,IAAI,KAAA;AACtB,UAAM,YAAY,IAAIA,OAAM,aAAa,EAAA;AACzC,UAAM,SAASE,OAAA,QAAiB,uBAAA;AAEhC,UAAM,gBAAgB;AAEtB,mBAAe,wBAAwB,IAAkC;AACvE,UAAI,GAAG,iBACL;AAEF,YAAM,cAAc;QAAE,eAAe;QAAI,OAAOF,OAAM;MAAW;AACjE,mCAA6B,eAAeG,eAAc,WAAA;IAC5D;AAEA,mBAAeA,cAAa,IAAoB;AAC9C,YAAM,SAAA;AACN,YAAM,UAAU,EAAA;AAChB,UAAI,GAAG,iBACL;AAEF,UAAA,CAAK,SAAS,OAAO;AACnB,oBAAY,cAAcH,OAAM,KAAA;AAChC,YAAA,CAAK,YAAY,SAAS,MACxB,aAAY,aAAa,KAAA;MAC7B;IACF;AAEA,mBAAeI,mBAAkB,OAAqB;;AACpD,YAAM,SAAA;AACN,UAAI,MAAM,iBACR;AACF,UAAI,SAAS,MACX,sBAAe,gBAAf;UAKC,aAAM,kBAAN,mBAA4C,MAAM,EAAE,eAAe,KAAM;IAE9E;AAEA,mBAAe,mBAAmB,OAAqB;;AACrD,YAAM,SAAA;AACN,UAAI,MAAM,iBACR;AACF,UAAI,MAAM,kBAAkB,iBAAA,EAC1B,sBAAe,gBAAf;IACJ;AAEA,mBAAe,cAAc,OAAsB;;AACjD,YAAM,SAAA;AACN,UAAI,MAAM,iBACR;AACF,YAAM,kBAAgB,oBAAe,cAAf,mBAA0B,WAAU;AAC1D,UAAI,iBAAiB,MAAM,QAAQ,IACjC;AACF,UAAIC,gBAAe,SAAS,MAAM,GAAA,EAChC,yBAAwB,KAAA;AAE1B,UAAI,MAAM,QAAQ,IAChB,OAAM,eAAA;IACV;AAEA,QAAIL,OAAM,UAAU,GAClB,OAAM,IAAI,MACR,sLAAA;AAIJ,cAAU,MAAM;AACd,UAAA,CAAK,eAAe,MAClB;AACF,qBAAe,gBACb,eAAe,OACfA,OAAM,OACNA,OAAM,QAAA;IAET,CAAA;AAED,6BAAyB;MACvB,OAAOA,OAAM;MACb;MACA;MACA;MACA,kBAAkB,CAAC,SAAS;AAC1B,kBAAU,UAAU,UAAU,UAAS,6BAAM,iBAAgB,IAAI,KAAA;MAClE;IACF,CAAA;;0BAIC,YA0BiB,MAAA,cAAA,GAAA,EA1BA,OAAK,EAAA,WAAI,UAAA,MAAS,EAAA,GAAA;yBACjC,MAwBY,CAxBZ,YAwBY,MAAA,SAAA,GAAA;UAvBT,KAAK,MAAA,UAAA;UACN,MAAK;UACJ,mBAAiB,MAAA,MAAA;UACjB,oBAAkB,UAAA,QAAS,KAAA;UAC3B,iBAAe,WAAA;UACf,cAAY,WAAA,QAAU,YAAA;UACtB,iBAAe,MAAA,QAAA,KAAQ;UACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;UACvB,UAAU,MAAA,QAAA,IAAQ,SAAY;UAC9B,IAAIM,KAAAA;UACJ,YAAUC,KAAAA;UACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,UAAA,QAAS;UAChB,QAAI,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,UAAA,QAAS;UACf,aAAW;UACX,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;AAAgB,kBAAM,cAA8B,MAAK,EAAA,eAAA,KAAA,CAAA;;UAG5E,YAAQ,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAT,MAAA;UAAsB,GAAA,CAAA,WAAA,MAAA,CAAA;UACrB,eAAaH;UACb,gBAAc;UACd,WAAS;;2BAEV,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzKd,UAAMI,SAAQ;AAId,UAAM,cAAc,wBAAA;;aAKV,MAAA,WAAA,EAAY,WAAW,SAAA,UAAA,GAD/B,YAMY,MAAA,SAAA,GANZ,WAMY;;QAJV,eAAY;SACJA,MAAA,GAAK;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AELZ,UAAMC,SAAQ;AAId,UAAM,cAAc,wBAAA;AACpB,UAAM,iBAAiB,2BAAA;AACvB,UAAM,cAAc,wBAAA;AAEpB,UAAM,EAAE,YAAY,gBAAgB,gBAAA,IAAoB,iBAAA;AAExD,UAAM,cAAc,SAAS,MAAM;;AACjC,aAAO;QACL,OAAO,YAAY;QACnB,UAAU,YAAY,SAAS;QAC/B,eAAa,qBAAgB,UAAhB,mBAAuB,kBAAe,iBAAY,UAAZ,mBAAmB,eAAc;MACtF;IACD,CAAA;AAED,cAAU,MAAM;AACd,UAAA,CAAK,gBAAgB,MACnB;AACF,kBAAY,iBAAiB,gBAAgB,KAAA;AAC7C,qBAAe,oBACb,gBAAgB,OAChB,YAAY,OACZ,YAAY,SAAS,KAAA;AAEvB,kBAAY,YAAY,YAAY,KAAA;IACrC,CAAA;AAED,gBAAY,MAAM;AAChB,kBAAY,eAAe,YAAY,KAAA;IACxC,CAAA;;0BAIC,YAMY,MAAA,SAAA,GANZ,WAMY;QALT,IAAI,MAAA,WAAA,EAAY;QAChB,KAAK,MAAA,UAAA;;WACOA;QAAK,GAAKC,KAAAA;MAAM,CAAA,GAAA;yBAE7B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/CZ,UAAMC,SAAQ;AAId,UAAM,eAAe,yBAAyB,EAAE,IAAI,GAAI,CAAA;;0BAItD,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACZ,IAAI,MAAA,YAAA,EAAa,GAAA,CAAA,GAAA;yBAElB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfZ,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;AEHZ,UAAM,QAAQ;AACd,UAAM,EAAE,SAAA,IAAa,cAAA;AAErB,UAAM,iBAAiB,2BAAA;AACvB,UAAM,qBAAqB,IAAmB,IAAA;AAE9C,aAAS,uBAAuB;AAC9B,UAAI,mBAAmB,UAAU,MAAM;AACrC,eAAO,cAAc,mBAAmB,KAAA;AACxC,2BAAmB,QAAQ;MAC7B;IACF;AAEA,gBAAY,MAAM;AAChB,YAAM,aAAa,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA,EAAK,KAC5C,CAAA,SAAQ,SAAS,iBAAA,CAAkB;AAErC,+CAAY,eAAe,EAAE,OAAO,UAAW;IAChD,CAAA;AAED,aAASC,qBAAoB;AAC3B,UAAI,mBAAmB,UAAU,KAC/B,oBAAmB,QAAQ,OAAO,YAAY,MAAM;AAClD,cAAM,YAAA;MACP,GAAE,EAAA;IAEP;AAEA,aAASC,qBAAoB;;AAC3B,2BAAe,gBAAf;AACA,UAAI,mBAAmB,UAAU,KAC/B,oBAAmB,QAAQ,OAAO,YAAY,MAAM;AAClD,cAAM,YAAA;MACP,GAAE,EAAA;IAEP;AAEA,oBAAgB,MAAM,qBAAA,CAAsB;;;0BAI1C,YAeY,MAAA,SAAA,GAfZ,WAeY;QAdV,eAAY;QACX,OAAO,EAAA,YAAA,EAEP;UACOC,UAAAA,YAAAA,mBAAS,QAAM;QACtB,eAAaF;QACb,eAAaC;QACb,gBAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;AAAyB,+BAAA;;;yBAMtC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEnDZ,UAAM,iBAAiB,2BAAA;AACvB,UAAM,yBACF,eAAe,aAAa,iBAC1B,uCAAA,IAAuC;AAG7C,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,gBAAgB,IAAI,KAAA;AAE1B,gBAAY,CAAC,cAAc;;AACzB,YAAI,oBAAe,aAAf,mBAAyB,YAAS,oBAAe,iBAAf,mBAA6B,QAAO;AAGxE,YAAS,eAAT,WAAwB;AACtB,gBAAM,YAAY,SAAS,eAAe,SAAS;AAGnD,wBAAc,QAAQ,KAAK,KAAK,SAAS,SAAA,IAAa;QACxD;AAPA,cAAM,WAAW,eAAe,SAAS;AAQzC,qBAAA;AACA,iBAAS,iBAAiB,UAAU,YAAA;AAEpC,kBAAU,MAAM,SAAS,oBAAoB,UAAU,YAAA,CAAa;MACtE;IACD,CAAA;AAED,UAAM,gBAAgB,MAAM;AAC1B,UAAI,eAAe,MACjB,kEAAwB,qBAAqB,eAAe;IAC/D,CAAA;;aAKS,cAAA,SAAA,UAAA,GADR,YAayB,gCAAA;;QAXtB,KAAK,MAAA,UAAA;QACL,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;kBAAiC,UAAU,aAAA,IAAiB,MAAA,cAAA;eAA4B,qCAAU,WAAS,6CAAc,OAAmB,UAAS,MAAM,YAAY,SAAS,MAAM,YAAY,aAAa,MAAM;;;yBASjO,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AE9CZ,UAAM,iBAAiB,2BAAA;AACvB,UAAM,yBACF,eAAe,aAAa,iBAC1B,uCAAA,IAAuC;AAG7C,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,cAAc,IAAI,KAAA;AAExB,gBAAY,CAAC,cAAc;;AACzB,YAAI,oBAAe,aAAf,mBAAyB,YAAS,oBAAe,iBAAf,mBAA6B,QAAO;AAGxE,YAAS,eAAT,WAAwB;AACtB,sBAAY,QAAQ,SAAS,YAAY;QAC3C;AAJA,cAAM,WAAW,eAAe,SAAS;AAKzC,qBAAA;AACA,iBAAS,iBAAiB,UAAU,YAAA;AAEpC,kBAAU,MAAM,SAAS,oBAAoB,UAAU,YAAA,CAAa;MACtE;IACD,CAAA;AAED,UAAM,gBAAgB,MAAM;AAC1B,UAAI,eAAe,MACjB,kEAAwB,qBAAqB,eAAe;IAC/D,CAAA;;aAKS,YAAA,SAAA,UAAA,GADR,YAWyB,gCAAA;;QATtB,KAAK,MAAA,UAAA;QACL,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;kBAAwB,UAAU,aAAA,IAAiB,MAAA,cAAA;eAA0B,qCAAU,WAAS,6CAAc,OAAiB,UAAS,MAAM,YAAY,SAAS,MAAM,YAAY,aAAa,MAAM;;;yBAOpN,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AE/CZ,UAAME,SAAQ;;0BAIZ,YAKY,MAAA,SAAA,GALZ,WAKY,EAJV,eAAY,OAAM,GACVA,MAAA,GAAK;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEEZ,UAAMC,SAAQ;AAGd,UAAM,cAAc,wBAAA;AACpB,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AAEvD,UAAM,aAAa,SAAS,MAAA;;AAAM,gCAAY,aAAZ,mBAAsB,UAASA,OAAM;KAAA;AAEvE,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,qBAAA;AAC3C,cAAU,MAAM;AACd,kBAAY,gBAAgB,eAAe,KAAA;IAC5C,CAAA;AAED,UAAM,EAAE,SAAA,IAAa,cAAA;AACrB,UAAM,EAAE,QAAQ,uBAAuB,eAAA,IAAmB,aAAA;AAC1D,aAAS,aAAa;AACpB,UAAA,CAAK,WAAW,OAAO;AACrB,oBAAY,aAAa,IAAA;AAEzB,uBAAA;MACF;IACF;AAEA,aAAS,kBAAkB,OAAqB;AAC9C,iBAAA;AACA,kBAAY,yBAAyB,QAAQ;QAC3C,GAAG,KAAK,MAAM,MAAM,KAAA;QACpB,GAAG,KAAK,MAAM,MAAM,KAAA;MACtB;IACF;;0BAIE,YA6Ee,MAAA,oBAAA,GAAA;QA5Eb,YAAA;QACC,WAAWC,KAAAA;;yBAEZ,MAAA;;AAwEY,kBAxEZ,YAwEY,MAAA,SAAA,GAAA;YAvET,KAAK,MAAA,UAAA;YACN,MAAK;YACJ,MAAMC,KAAAA,OAAE,WAAA,WAAA;YACR,iBAAe,MAAA,WAAA,EAAY;YAC3B,iBAAe,MAAA,WAAA,EAAY,KAAK,SAAK;YACrC,kBAAe,WAAA,WAAA,EAAY,aAAZ,mBAAsB;YACtC,qBAAkB;YACjB,UAAU,WAAA;YACV,MAAK,WAAA,WAAA,MAAA,mBAAa,IAAI;YACtB,gBAAY,WAAA,WAAA,MAAA,mBAAa,KAAK,SAAK,SAAA;YACnC,iBAAe,WAAA,QAAU,KAAA;YACzB,oBAAkB,MAAA,qBAAA,GAAsB,WAAA,WAAA,EAAY,eAAZ,mBAAwB,KAAA,IAAK,KAAA;YACrE,YAAUC,KAAAA;YACV,IAAID,KAAAA;YACJ,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAY,UAAiB;;eAAkaE,MAAA,+BAAO,kBAAP,gBAAAA,IAAsC;;YAU1e,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAY,UAAmB;kBAA2H,MAAM,gBAAW,QAAA,QAAiC,MAAM,eAAA;oBAA6J,SAAS,MAAM;kBAAqC,OAAO,kBAAkB,MAAM,SAAA,EAA0B,QAAO,sBAAsB,MAAM,SAAA;kBAAgO,MAAM,WAAM,KAAU,MAAM,YAAO,OAAA;AAA0B,kCAAkB,KAAA;AAA0G,sBAAM,eAAA;;;YAuBz6B,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAoB,UAAmB;kBAA6I,MAAM,gBAAW,QAA0B,mBAAkB,KAAA;;YAQ1P,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAY,UAAK;oBAAuB,gBAAgB,MAAA,MAAA,MAAM;oBAAyB,gBAAgB,MAAM,WAAW,MAAM,UAAU,MAAM;mBAAwB,iBAAiB,MAAM,IAAI,WAAM,GAAA;oBAAwB,iBAAiB,MAAM,QAAG,IAAA;cAAA;AAA6B,oBAAA,qBAAA,EAAsB,MAAM,KAAK,MAAA,QAAA,EAAQ,CAAA;kBAAmB,MAAA,SAAA,EAAU,SAAS,MAAM,GAAA,GAAG;AAAiB,2BAAA;AAA0B,sBAAM,eAAA;;;;6BAeva,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9Gd,UAAMC,SAAQ;AAKd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,cAAc,wBAAA;AAEpB,cAAU,MAAM;AACd,kBAAY,eAAe;IAC5B,CAAA;AAED,UAAM,gBAAgB,SAAS,MAAM;;AACnC,UAAI,OAAiB,CAAC;AACtB,YAAM,UAAU,MAAM,KAAK,YAAY,WAAW,KAAA;AAClD,YAAM,YAAY,CAAC,UAA4B,QAAQ,KAAK,CAAA,WAAUC,iBAAgB,OAAO,OAAO,OAAO,YAAY,EAAA,CAAG;AAC1H,UAAI,MAAM,QAAQ,YAAY,WAAW,KAAA,EACvC,QAAO,YAAY,WAAW,MAAM,IAAI,CAAA,UAAA;;AAAS,iBAAAC,MAAA,UAAU,KAAA,MAAV,gBAAAA,IAAkB,gBAAe;OAAA;UAGlF,QAAO,GAAC,eAAU,YAAY,WAAW,KAAA,MAAjC,mBAAyC,gBAAe,EAAE;AAEpE,aAAO,KAAK,OAAO,OAAA;IACpB,CAAA;AAED,UAAM,WAAW,SAAS,MAAM;AAC9B,aAAO,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK,IAAA,IAAQF,OAAM;IAC5E,CAAA;;0BAIC,YAaY,MAAA,SAAA,GAAA;QAZT,KAAK,MAAA,UAAA;QACL,IAAIG,KAAAA;QACJ,YAAUC,KAAAA;QACV,OAAO,EAAA,eAAA,OAAyB;QAChC,oBAAkB,cAAA,MAAc,SAAA,SAAqBJ,OAAM;;yBAE5D,MAKO,CALP,WAKO,KAAA,QAAA,WAAA;UAJJ,eAAgB,cAAA;UAChB,YAAa,MAAA,WAAA,EAAY,WAAW;WAFvC,MAKO,CAAA,gBAAA,gBADF,SAAA,KAAA,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtCjB,UAAMK,SAAQ;AACd,UAAM,EAAE,OAAO,UAAA,IAAc,OAAOA,MAAA;AACpC,UAAM,QAAQ,SAAS,SAAA;AAEvB,UAAM,iBAAiB,2BAAA;AACvB,UAAM,yBACF,eAAe,aAAa,iBAC1B,uCAAA,IAAuC;AAG7C,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,cAAU,MAAM;AACd,uDAAgB,iBAAiB,eAAe;IACjD,CAAA;AAED,UAAM,mBAAmB,IAAI,CAAA;AAE7B,aAAS,aAAa,OAAmB;AACvC,YAAM,WAAW,MAAM;AACvB,YAAM,EAAE,yBAAyB,eAAA,IAAmB,0BAA0B,CAAC;AAC/E,WAAI,mEAAyB,WAAS,iDAAgB,QAAO;AAC3D,cAAM,aAAa,KAAK,IAAI,iBAAiB,QAAQ,SAAS,SAAA;AAC9D,YAAI,aAAa,GAAG;AAClB,gBAAM,kBAAkB,OAAO,cAAc,iBAAiB;AAC9D,gBAAM,eAAe,OAAO,WAC1B,eAAe,MAAM,MAAM,SAAA;AAE7B,gBAAM,YAAY,OAAO,WAAW,eAAe,MAAM,MAAM,MAAA;AAC/D,gBAAM,aAAa,KAAK,IAAI,cAAc,SAAA;AAE1C,cAAI,aAAa,iBAAiB;AAChC,kBAAM,aAAa,aAAa;AAChC,kBAAM,oBAAoB,KAAK,IAAI,iBAAiB,UAAA;AACpD,kBAAM,aAAa,aAAa;AAEhC,2BAAe,MAAM,MAAM,SAAS,GAAG,iBAAA;AACvC,gBAAI,eAAe,MAAM,MAAM,WAAW,OAAO;AAC/C,uBAAS,YAAY,aAAa,IAAI,aAAa;AAEnD,6BAAe,MAAM,MAAM,iBAAiB;YAC9C;UACF;QACF;MACF;AACA,uBAAiB,QAAQ,SAAS;IACpC;;8DAIE,YAgBY,MAAA,SAAA,GAhBZ,WAgBY;QAfT,KAAK,MAAA,UAAA;QACN,6BAAA;QACA,MAAK;;WACQC,KAAAA;QAAM,GAAKD;MAAK,GAAA;QAC5B,OAAO;;;;QAOP;QACA,UAAQ;;yBAET,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;cAEV,YAQY,MAAA,SAAA,GAAA;QAPV,IAAG;QACF,OAAO,MAAA,KAAA;;yBACT,MAKD,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,gBALC,yQAAA,CAKD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1EF,UAAME,SAAQ;AAId,UAAM,eAAe,CAAC,cAAc,UAAW;AAC/C,aAAS,mBAAmB,aAAkD;AAC5E,aAAO,aAAa,SAAS,WAAA;IAC/B;AAEA,UAAM,sBAAsB,SAAS,MACnC,mBAAmBA,OAAM,WAAA,IAAeA,OAAM,cAAc,YAAA;AAG9D,UAAM,kBAAkB,SAAS,MAC/B,oBAAoB,UAAU,aAAaA,OAAM,cAAA,MAAA;AAGnD,UAAM,gBAAgB,SAAS,MAC7BA,OAAM,aACF,EAAE,MAAM,OAAO,IACf;MAAE,oBAAoB,gBAAgB;MAAO,QAAQ;IAAa,CAAA;;0BAKtE,YAOY,MAAA,SAAA,GAPZ,WAOY;QANT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,oBAAkB,oBAAA;SACX,cAAA,KAAA,GAAa;yBAErB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7CZ,UAAMC,SAAQ;;0BAMZ,YAEgB,uBAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC1B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEEZ,SAAgB,oBAAoBC,aAAuB,CAAE,GAAEC,WAAmBC,SAAiB;AACjG,QAAM,aAAa,CAAC,GAAG,UAAW;AAClC,aAAW,OAAA,IAAW;AACtB,SAAO,WAAW,KAAK,CAAC,GAAG,MAAM,IAAI,CAAA;AACtC;AAED,SAAgB,yBAAyBC,OAAeC,MAAaC,MAAa;AAChF,QAAM,WAAWC,OAAMC;AACvB,QAAM,iBAAiB,MAAM;AAC7B,QAAM,aAAa,kBAAkB,QAAQA;AAC7C,SAAO,MAAM,YAAY,GAAG,GAAA;AAC7B;AAKD,SAAgB,SAASC,OAAeC,aAAqB;AAC3D,MAAI,cAAc,EAChB,QAAO,SAAS,QAAQ,CAAA,OAAQ,WAAA;WAEzB,gBAAgB,EACvB,QAAO,CAAC,WAAW,SAAU,EAAC,KAAA;MAG9B,QAAA;AACH;AAUD,SAAgB,qBAAqBC,QAAkBT,WAAmB;AACxE,MAAI,OAAO,WAAW,EACpB,QAAO;AACT,QAAM,YAAY,OAAO,IAAI,CAAA,UAAS,KAAK,IAAI,QAAQ,SAAA,CAAU;AACjE,QAAM,kBAAkB,KAAK,IAAI,GAAG,SAAA;AACpC,SAAO,UAAU,QAAQ,eAAA;AAC1B;AAMD,SAAgB,uBAAuBU,OAAeC,MAAcC,WAAmB;AACrF,QAAM,YAAY,QAAQ;AAC1B,QAAM,cAAc;AACpB,QAAMC,UAASC,aAAY,CAAC,GAAG,WAAY,GAAE,CAAC,GAAG,SAAU,CAAA;AAC3D,UAAQ,YAAYD,QAAO,IAAA,IAAQ,aAAa;AACjD;AASD,SAAgB,sBAAsBJ,QAAkB;AACtD,SAAO,OAAO,MAAM,GAAG,EAAA,EAAI,IAAI,CAAC,OAAO,UAAU,OAAO,QAAQ,CAAA,IAAK,KAAA;AACtE;AAcD,SAAgB,yBAAyBA,QAAkBM,uBAA+B;AACxF,MAAI,wBAAwB,GAAG;AAC7B,UAAM,qBAAqB,sBAAsB,MAAA;AACjD,UAAM,8BAA8B,KAAK,IAAI,GAAG,kBAAA;AAChD,WAAO,+BAA+B;EACvC;AACD,SAAO;AACR;AAGD,SAAgBD,aAAYE,OAAkCC,QAAmC;AAC/F,SAAO,CAACf,UAAkB;AACxB,QAAI,MAAM,CAAA,MAAO,MAAM,CAAA,KAAM,OAAO,CAAA,MAAO,OAAO,CAAA,EAChD,QAAO,OAAO,CAAA;AAChB,UAAM,SAAS,OAAO,CAAA,IAAK,OAAO,CAAA,MAAO,MAAM,CAAA,IAAK,MAAM,CAAA;AAC1D,WAAO,OAAO,CAAA,IAAK,SAAS,QAAQ,MAAM,CAAA;EAC3C;AACF;AAED,SAAgB,gBAAgBA,OAAe;AAC7C,UAAQ,OAAO,KAAA,EAAO,MAAM,GAAA,EAAK,CAAA,KAAM,IAAI;AAC5C;AAED,SAAgB,WAAWA,OAAegB,cAAsB;AAC9D,QAAM,UAAU,MAAM;AACtB,SAAO,KAAK,MAAM,QAAQ,OAAA,IAAW;AACtC;AAID,IAAa,YAAY,CAAC,UAAU,UAAW;AAC/C,IAAa,aAAa;EAAC;EAAW;EAAa;EAAa;AAAa;AAG7E,IAAaC,YAA8C;EACzD,aAAa;IAAC;IAAQ;IAAY;IAAa;EAAY;EAC3D,cAAc;IAAC;IAAQ;IAAY;IAAa;EAAa;EAC7D,eAAe;IAAC;IAAQ;IAAY;IAAa;EAAY;EAC7D,YAAY;IAAC;IAAQ;IAAU;IAAW;EAAY;AACvD;AAUD,IAAa,CAAC,gCAAgC,+BAAA,IAC1C,cAAiC,CAAC,kBAAkB,kBAAmB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrI3E,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,EAAE,KAAAC,MAAK,KAAAC,MAAK,KAAK,SAAA,IAAa,OAAOF,MAAA;AAE3C,UAAM,EAAE,YAAY,gBAAgB,cAAA,IAAkB,iBAAA;AACtD,UAAM,cAAc,wBAAA;AAEpB,UAAM,iBAAiB,IAAA;AACvB,UAAM,UAAU,IAAA;AAChB,UAAM,oBAAoB,SAAS,OAAO,2BAAK,WAAU,SAAA,CAAU,SAAS,UAAW,2BAAK,WAAU,SAAS,SAAS,KAAA;AAExH,aAAS,yBAAyB,OAAqB,YAAsB;AAC3E,YAAM,OAAO,QAAQ,SAAS,cAAc,MAAO,sBAAA;AAGnD,YAAM,QAAQ,CAAC,GAAG,YAAY,cAAc,KAAM,EAAC,YAAY,sBAAsB,KAAA;AACrF,YAAM,aAAa,YAAY,eAAe,UAAU,YAAY,MAAM,cAAc;AAGxF,UAAA,CAAK,eAAe,SAAA,CAAU,cAAc,YAAY,eAAe,UAAU,UAC/E,gBAAe,QAAQ,MAAM,UAAU,MAAM,sBAAA,EAAwB;AAIvE,YAAM,QAA0B,CAAC,GAAG,KAAK,QAAQ,UAAU;AAC3D,YAAM,SAA2B,kBAAkB,QAAQ,CAACE,KAAI,OAAOD,KAAI,KAAM,IAAG,CAACA,KAAI,OAAOC,KAAI,KAAK;AACzG,YAAM,QAAQC,aAAY,OAAO,MAAA;AAEjC,cAAQ,QAAQ;AAChB,YAAM,WAAW,aACb,MAAM,UAAU,KAAK,OAAO,aAAa,IACzC,MAAM,UAAU,KAAK,QAAQ,eAAe,SAAS;AAEzD,aAAO,MAAM,QAAA;IACf;AAEA,UAAM,YAAY,SAAS,MAAM,kBAAkB,QAAQ,SAAS,OAAA;AACpE,UAAM,UAAU,SAAS,MAAM,kBAAkB,QAAQ,UAAU,MAAA;AACnE,UAAM,YAAY,SAAS,MAAM,kBAAkB,QAAQ,IAAI,EAAA;AAE/D,oCAAgC;MAC9B;MACA;MACA;MACA,MAAM;IACP,CAAA;;0BAIC,YA8Ba,oBAAA;QA7BV,KAAK,MAAA,UAAA;QACL,KAAK,MAAA,GAAA;QACN,oBAAiB;QAChB,OAAK,eAAA,EAAA,CAAA,+BAAA,GAAA,CAA6D,kBAAA,SAAqB,MAAA,WAAA,EAAY,eAAe,UAAK,aAAA,oBAAA,mBAAA,CAAA;QAIvH,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,QAAQ,yBAAyB,OAAK,IAAA;AAAe,gBAAK,cAAe,KAAA;;QAI/G,aAAU,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,QAAQ,yBAAyB,KAAA;AAAc,gBAAK,aAAc,KAAA;;QAIvG,YAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;AAAgB,kBAAA,QAAA;AAA2B,yBAAA,QAAA;AAAiC,gBAAK,UAAA;;QAK1F,eAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,iBAAiB,kBAAA,QAAiB,cAAA;gBAA2C,YAAY,MAAA,SAAA,EAAU,cAAA,EAAgB,SAAS,MAAM,GAAA;AAAY,gBAAK,eAAgB,OAAO,YAAS,KAAA,CAAA;;QAK3N,cAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,cAAe,MAAA;QAClC,eAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,eAAgB,MAAA;;yBAErC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjFZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AACd,UAAM,EAAE,KAAAC,MAAK,KAAAC,MAAK,SAAA,IAAa,OAAOF,MAAA;AAEtC,UAAM,cAAc,wBAAA;AACpB,UAAM,EAAE,YAAY,gBAAgB,cAAA,IAAkB,iBAAA;AAEtD,UAAM,iBAAiB,IAAA;AACvB,UAAM,UAAU,IAAA;AAChB,UAAM,sBAAsB,SAAS,MAAA,CAAO,SAAS,KAAA;AAErD,aAAS,yBAAyB,OAAqB,YAAsB;AAC3E,YAAM,OAAO,QAAQ,SAAS,cAAc,MAAO,sBAAA;AAGnD,YAAM,QAAQ,CAAC,GAAG,YAAY,cAAc,KAAM,EAAC,YAAY,sBAAsB,KAAA;AACrF,YAAM,cAAc,YAAY,eAAe,UAAU,YAAY,MAAM,eAAe;AAG1F,UAAA,CAAK,eAAe,SAAA,CAAU,cAAc,YAAY,eAAe,UAAU,UAC/E,gBAAe,QAAQ,MAAM,UAAU,MAAM,sBAAA,EAAwB;AAIvE,YAAM,QAA0B,CAAC,GAAG,KAAK,SAAS,WAAW;AAC7D,YAAM,SAA2B,oBAAoB,QAAQ,CAACC,KAAI,OAAOC,KAAI,KAAM,IAAG,CAACA,KAAI,OAAOD,KAAI,KAAK;AAC3G,YAAM,QAAQE,aAAY,OAAO,MAAA;AAEjC,YAAM,WAAW,aACb,MAAM,UAAU,KAAK,MAAM,cAAc,IACzC,MAAM,UAAU,KAAK,OAAO,eAAe,SAAS;AAExD,cAAQ,QAAQ;AAChB,aAAO,MAAM,QAAA;IACf;AAEA,UAAM,YAAY,SAAS,MAAM,oBAAoB,QAAQ,WAAW,KAAA;AACxE,UAAM,UAAU,SAAS,MAAM,oBAAoB,QAAQ,QAAQ,QAAA;AACnE,UAAM,YAAY,SAAS,MAAM,oBAAoB,QAAQ,IAAI,EAAA;AAEjE,oCAAgC;MAC9B;MACA;MACA;MACA,MAAM;IACP,CAAA;;0BAIC,YA6Ba,oBAAA;QA5BV,KAAK,MAAA,UAAA;QACN,oBAAiB;QAChB,OAAK,eAAA,EAAA,CAAA,+BAAA,GAAA,CAA6D,oBAAA,SAAuB,MAAA,WAAA,EAAY,eAAe,UAAK,aAAA,qBAAA,kBAAA,CAAA;QAIzH,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,QAAQ,yBAAyB,OAAK,IAAA;AAAe,gBAAK,cAAe,KAAA;;QAI/G,aAAU,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,QAAQ,yBAAyB,KAAA;AAAc,gBAAK,aAAc,KAAA;;QAIvG,YAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;AAAgB,kBAAA,QAAA;AAA2B,yBAAA,QAAA;AAAiC,gBAAK,UAAA;;QAK1F,eAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,iBAAiB,oBAAA,QAAmB,gBAAA;gBAA2C,YAAY,MAAA,SAAA,EAAU,cAAA,EAAgB,SAAS,MAAM,GAAA;AAAY,gBAAK,eAAgB,OAAO,YAAS,KAAA,CAAA;;QAK7N,cAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,cAAe,MAAA;QAClC,eAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,eAAgB,MAAA;;yBAErC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEtBZ,IAAa,CAAC,yBAAyB,wBAAA,IACnC,cAAiC,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAerC,UAAMC,SAAQ;AAYd,UAAM,QAAQ;AASd,UAAM,EAAE,KAAAC,MAAK,KAAAC,MAAK,MAAM,uBAAuB,aAAa,UAAU,gBAAgB,KAAK,QAAA,IAAY,OAAOF,MAAA;AAC9G,UAAM,MAAM,aAAa,OAAA;AACzB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,gBAAgB,eAAe,cAAA;AAErC,UAAM,EAAE,eAAA,IAAmB,cAAc,EAAE,YAAY,KAAM,CAAA;AAE7D,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM;MACpB,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,oBAAoB,SAAS,MAAM,MAAM,QAAQ,WAAW,KAAA,IAAS,CAAC,GAAG,WAAW,KAAM,IAAG,CAAE,CAAA;AAErG,UAAM,wBAAwB,IAAI,CAAA;AAClC,UAAM,4BAA4B,IAAI,kBAAkB,KAAA;AAExD,aAAS,iBAAiB,OAAe;AACvC,YAAM,eAAe,qBAAqB,kBAAkB,OAAO,KAAA;AACnE,mBAAa,OAAO,YAAA;IACtB;AAEA,aAAS,gBAAgB,OAAe;AACtC,mBAAa,OAAO,sBAAsB,KAAA;IAC5C;AAEA,aAAS,iBAAiB;AACxB,YAAM,YAAY,0BAA0B,MAAM,sBAAsB,KAAA;AACxE,YAAM,YAAY,kBAAkB,MAAM,sBAAsB,KAAA;AAChE,YAAM,aAAa,cAAc;AACjC,UAAI,WACF,OAAM,eAAe,MAAM,kBAAkB,KAAA,CAAM;IACvD;AAEA,aAAS,aAAa,OAAe,SAAiB,EAAE,OAAA,IAAW,EAAE,QAAQ,MAAO,GAAE;;AACpF,YAAM,eAAe,gBAAgB,KAAK,KAAA;AAC1C,YAAM,aAAa,WAAW,KAAK,OAAO,QAAQC,KAAI,SAAS,KAAK,KAAA,IAAS,KAAK,QAAQA,KAAI,OAAO,YAAA;AACrG,YAAM,YAAY,MAAM,YAAYA,KAAI,OAAOC,KAAI,KAAA;AAEnD,YAAM,aAAa,oBAAoB,kBAAkB,OAAO,WAAW,OAAA;AAE3E,UAAI,yBAAyB,YAAY,sBAAsB,QAAQ,KAAK,KAAA,GAAQ;AAClF,8BAAsB,QAAQ,WAAW,QAAQ,SAAA;AACjD,cAAM,aAAa,OAAO,UAAA,MAAgB,OAAO,WAAW,KAAA;AAC5D,YAAI,cAAc,OAChB,OAAM,eAAe,UAAA;AAEvB,YAAI,YAAY;AACd,8BAAc,MAAM,sBAAsB,KAAA,MAA1C,mBAAkD;AAClD,qBAAW,QAAQ;QACrB;MACF;IACF;AAEA,UAAM,gBAAgB,IAAmB,CAAE,CAAA;AAC3C,6BAAyB;MACvB;MACA;MACA;MACA;MACA;MACA,KAAAD;MACA,KAAAC;MACA;MACA;IACD,CAAA;;0BAIC,YA6CiB,MAAA,cAAA,GAAA,MAAA;yBA5Cf,MA2CY,EAAA,UAAA,GA3CZ,YA2CY,wBA1CL,MAAA,WAAA,MAAW,eAAoB,2BAAmB,sBAAA,GADzD,WAEUC,KAyCE,QAzCI;UACb,KAAK,MAAA,UAAA;UACL,YAAUC,KAAAA;UACV,IAAIC,KAAAA;UACJ,KAAK,MAAAJ,IAAA;UACL,KAAK,MAAAC,IAAA;UACL,KAAK,MAAA,GAAA;UACL,UAAUI,KAAAA;UACV,iBAAe,MAAA,QAAA;UACf,iBAAe,MAAA,QAAA,IAAQ,KAAA;UACvB,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;iBAAuB,MAAA,QAAA,EAAU,2BAAA,QAA4B,kBAAA;;UAGxE,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,MAAA,QAAA,KAAY,iBAAiB,MAAA;UAC3C,aAAU,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,MAAA,QAAA,KAAY,gBAAgB,MAAA;UACzC,YAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,MAAA,QAAA,KAAY,eAAA;UACxB,eAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,MAAA,QAAA,KAAY,aAAa,MAAAL,IAAA,GAAG,GAAA,EAAA,QAAA,KAAA,CAAA;UAC5C,cAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,CAAG,MAAA,QAAA,KAAY,aAAa,MAAAC,IAAA,GAAK,kBAAA,MAAkB,SAAM,GAAA,EAAA,QAAA,KAAA,CAAA;UACrE,eAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,OAAO,cAAS;iBAAoB,MAAA,QAAA,GAAQ;oBAAoB,YAAY,MAAA,SAAA,EAAU,SAAS,MAAM,GAAA;oBAAsB,YAAY,aAAc,MAAM,YAAY,MAAA,UAAA,EAAW,SAAS,MAAM,GAAA;oBAAuB,aAAa,YAAS,KAAA;oBAA2B,UAAU,sBAAA;oBAAuC,QAAQ,kBAAA,MAAkB,OAAA;oBAA0B,kBAAkB,MAAA,IAAA,IAAO,aAAa;AAAqB,2BAAa,QAAQ,iBAAiB,SAAO,EAAA,QAAA,KAAA,CAAA;;;;2BAYve,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,GAGtB,MAAA,aAAA,KAAiBK,KAAAA,QAAAA,UAAAA,GADzB,YAQE,MAAA,2BAAA,GAAA;;YANA,MAAK;YACJ,OAAO,MAAA,UAAA;YACP,MAAMA,KAAAA;YACN,UAAUC,KAAAA;YACV,UAAU,MAAA,QAAA;YACV,MAAM,MAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhMf,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AACd,UAAM,cAAc,wBAAA;;0BAIlB,YA+CY,MAAA,SAAA,GA/CZ,WA+CY,EA9CV,oBAAA,GAAgB,GACRA,QAAK;QACZ,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;cAAiB,MAAM,QAAG,QAAA;AAAuB,kBAAK,eAAgB,KAAA;AAA0D,kBAAM,eAAA;qBAAyC,MAAM,QAAG,OAAA;AAAsB,kBAAK,cAAe,KAAA;AAAwD,kBAAM,eAAA;qBAAyC,MAAA,SAAA,EAAU,OAAO,MAAA,UAAA,CAAU,EAAE,SAAS,MAAM,GAAA,GAAG;AAAa,kBAAK,eAAgB,KAAA;AAAwE,kBAAM,eAAA;;;QAiBvf,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,SAAS,MAAM;AAA6B,iBAAO,kBAAkB,MAAM,SAAA;AAAiH,gBAAM,eAAA;cAAkM,MAAA,WAAA,EAAY,cAAc,MAAM,SAAS,MAAA,EAAmB,QAAO,MAAA;cAAsC,OAAK,cAAe,KAAA;;QAcviB,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,SAAS,MAAM;cAAiC,OAAO,kBAAkB,MAAM,SAAA,EAAY,OAAK,aAAc,KAAA;;QAIpJ,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;gBAAmB,SAAS,MAAM;cAAiC,OAAO,kBAAkB,MAAM,SAAA,GAAS;AAAa,mBAAO,sBAAsB,MAAM,SAAA;AAAoB,kBAAK,YAAa,KAAA;;;;yBAQnN,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AE5DZ,UAAM,cAAc,wBAAA;AACpB,UAAM,cAAc,+BAAA;AAEpB,qBAAA;AACA,UAAM,cAAc,SAAS,MAAM,YAAY,kBAAkB,MAAM,IAAI,CAAA,UACzE,yBAAyB,OAAO,YAAY,IAAI,OAAO,YAAY,IAAI,KAAA,CAAM,CAC9E;AAED,UAAM,cAAc,SAAS,MAAM,YAAY,kBAAkB,MAAM,SAAS,IAAI,KAAK,IAAI,GAAG,YAAY,KAAA,IAAU,CAAA;AACtH,UAAM,YAAY,SAAS,MAAM,MAAM,KAAK,IAAI,GAAG,YAAY,OAAO,CAAA,CAAE;;0BAItE,YAWY,MAAA,SAAA,GAAA;QAVT,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;QACzC,oBAAkB,MAAA,WAAA,EAAY,YAAY;QAC1C,YAAUC,KAAAA;QACV,IAAIC,KAAAA;QACJ,OAAK,eAAA;WAAW,MAAA,WAAA,EAAa,UAAU,KAAA,GAAK,GAAM,YAAA,KAAA;WAAuB,MAAA,WAAA,EAAa,QAAQ,KAAA,GAAK,GAAM,UAAA,KAAA;;;yBAK1G,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBZ,UAAMC,SAAQ;AAEd,UAAM,cAAc,wBAAA;AACpB,UAAM,cAAc,+BAAA;AAEpB,UAAM,EAAE,YAAY,gBAAgB,aAAA,IAAiB,iBAAA;AACrD,UAAM,EAAE,eAAA,IAAmB,cAAA;AAE3B,UAAM,QAAQ,SAAS,MAAA;;AAAM,qCAAY,eAAZ,mBAAwB,UAAxB,mBAAgCA,OAAM;KAAA;AACnE,UAAM,UAAU,SAAS,MAAM,MAAM,UAAA,SAAsB,IAAI,yBAAyB,MAAM,OAAO,YAAY,IAAI,SAAS,GAAG,YAAY,IAAI,SAAS,GAAA,CAAI;AAC9J,UAAM,QAAQ,SAAS,MAAA;;AAAM,sBAASA,OAAM,SAAO,uBAAY,eAAZ,mBAAwB,UAAxB,mBAA+B,WAAU,CAAA;KAAE;AAC9F,UAAMC,QAAO,QAAQ,YAAA;AACrB,UAAM,kBAAkB,SAAS,MAAMA,MAAK,YAAa,IAAA,EAAM,KAAA;AAC/D,UAAM,sBAAsB,SAAS,MAAM;AACzC,UAAI,YAAY,eAAe,UAAU,cAAA,CAAe,gBAAgB,MACtE,QAAO;UAGP,QAAO,uBAAuB,gBAAgB,OAAO,QAAQ,OAAO,YAAa,UAAU,KAAA;IAE9F,CAAA;AAED,UAAM,YAAY,WAAA;AAClB,cAAU,MAAM;AACd,kBAAY,cAAc,MAAM,KAAK,aAAa,KAAA;IACnD,CAAA;AACD,gBAAY,MAAM;AAChB,YAAM,IAAI,YAAY,cAAc,MAAM,UAAU,CAAA,QAAK,QAAM,aAAa,KAAA,KAAU;AACtF,kBAAY,cAAc,MAAM,OAAO,GAAG,CAAA;IAC3C,CAAA;;0BAIC,YAiCiB,MAAA,cAAA,GAAA,MAAA;yBAhCf,MA+BY,CA/BZ,YA+BY,MAAA,SAAA,GA/BZ,WACUC,KA8BE,QA9BI;UACb,KAAK,MAAA,UAAA;UACN,MAAK;UACJ,UAAU,MAAA,WAAA,EAAY,SAAS,QAAA,SAAiB;UAChD,cAAYA,KAAAA,OAAM,YAAA,KAAkB,MAAA;UACpC,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;UACzC,oBAAkB,MAAA,WAAA,EAAY,YAAY;UAC1C,iBAAe,MAAA;UACf,iBAAe,MAAA,WAAA,EAAY,IAAI;UAC/B,iBAAe,MAAA,WAAA,EAAY,IAAI;UAC/B,oBAAkB,MAAA,WAAA,EAAY,YAAY;UAC1C,YAAUC,KAAAA;UACV,IAAIC,KAAAA;UACJ,OAAK;;;aAAoG,MAAA,WAAA,EAAa,UAAU,KAAA,GAAK,QAAW,QAAA,KAAA,OAAc,oBAAA,KAAA;sBAAiY,MAAA,SAAA,KAAa,MAAA,UAAA,SAAmB,SAAA;;UAY/jB,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;AAAkB,kBAAA,WAAA,EAAY,sBAAsB,QAAQC,KAAAA;;;2BAIlE,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzEd,UAAMC,SAAQ;AAGd,UAAM,EAAE,SAAA,IAAa,cAAA;AAErB,UAAM,EAAE,YAAY,gBAAgB,aAAA,IAAiB,iBAAA;AAErD,UAAM,QAAQ,SAAS,MAAM,aAAa,QAAQ,SAAS,IAAA,EAAM,UAAU,CAAA,MAAK,EAAE,QAAQ,aAAa,KAAA,IAAS,EAAA;;0BAI9G,YAMkB,yBANlB,WAMkB,EALf,KAAK,MAAA,UAAA,EAAU,GACRA,QAAK,EACZ,OAAO,MAAA,MAAK,CAAA,GAAA;yBAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEfZ,UAAM,cAAc,wBAAA;AAEpB,qBAAA;;0BAIE,YAOY,MAAA,SAAA,GAAA;QANT,YAAUC,KAAAA;QACV,IAAIC,KAAAA;QACJ,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;QACzC,oBAAkB,MAAA,WAAA,EAAY,YAAY;;yBAE3C,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;AEzBZ,SAAgB,OACdC,mBACA,UAAU,qBACiB;AAC3B,MAAA,CAAK,mBAAmB;AACtB,YAAQ,MAAM,OAAA;AAEd,UAAM,IAAI,MAAM,OAAA;EACjB;AACF;;;ACkBD,SAAgB,qBACdC,IACAC,cAAwC,UACpB;;AACpB,MAAA,CAAK,UACH,QAAO;AAET,MACE,uBAAuB,iBACnB,gDAA6B,YAA7B,mBAAsC,kBAAiB,GAE3D,QAAO;AAIT,QAAM,UAAU,YAAY,cAC1B,2CAA2C,EAAA,IAAM;AAEnD,MAAI,QACF,QAAO;AAET,SAAO;AACR;AAED,SAAgB,uBACdD,IACAE,QAAkC,UACd;AACpB,MAAA,CAAK,UACH,QAAO;AACT,QAAM,UAAU,MAAM,cAAc,iCAAiC,EAAA,IAAM;AAC3E,MAAI,QACF,QAAO;AAET,SAAO;AACR;AAED,SAAgB,4BACdC,SACAH,IACAE,QAAkC,UACnB;AACf,MAAA,CAAK,UACH,QAAO;AACT,QAAM,UAAU,gCAAgC,SAAS,KAAA;AACzD,QAAM,QAAQ,QAAQ,UACpB,CAAA,WAAU,OAAO,aAAa,6BAAA,MAAmC,EAAA;AAEnE,SAAO,SAAS;AACjB;AAED,SAAgB,gCACdC,SACAD,QAAkC,UACnB;AACf,MAAA,CAAK,UACH,QAAO,CAAE;AACX,SAAO,MAAM,KACX,MAAM,iBACJ,sDAAsD,OAAA,IAAW,CAClE;AAEJ;AAED,SAAgB,wBACdC,SACAC,UACAC,aACAH,QAAkC,UACiB;;AACnD,QAAM,SAAS,uBAAuB,UAAU,KAAA;AAChD,QAAM,UAAU,gCAAgC,SAAS,KAAA;AACzD,QAAM,QAAQ,SAAS,QAAQ,QAAQ,MAAA,IAAU;AAEjD,QAAMI,aAA0B,iBAAY,KAAA,MAAZ,mBAAoB,OAAM;AAC1D,QAAMC,YAAyB,iBAAY,QAAQ,CAAA,MAApB,mBAAwB,OAAM;AAE7D,SAAO,CAAC,UAAU,OAAQ;AAC3B;;;ACvGD,SAAgB,UAAUC,OAA4C;AACpE,SAAO,MAAM,SAAS;AACvB;AAED,SAAgBC,cAAaD,OAAyC;AACpE,SAAO,MAAM,KAAK,WAAW,OAAA;AAC9B;AAED,SAAgB,aAAaA,OAAyC;AACpE,SAAO,MAAM,KAAK,WAAW,OAAA;AAC9B;AAED,SAAgB,0BAA0BA,OAAoB;AAC5D,MAAIC,cAAa,KAAA,EACf,QAAO;IACL,GAAG,MAAM;IACT,GAAG,MAAM;EACV;WAEM,aAAa,KAAA,GAAQ;AAC5B,UAAM,QAAQ,MAAM,QAAQ,CAAA;AAC5B,QAAI,SAAS,MAAM,WAAW,MAAM,QAClC,QAAO;MACL,GAAG,MAAM;MACT,GAAG,MAAM;IACV;EAEJ;AAED,SAAO;IACL,GAAG,OAAO;IACV,GAAG,OAAO;EACX;AACF;AAED,SAAgB,6BACdC,WACAF,OACQ;AACR,QAAM,eAAe,cAAc;AAEnC,QAAM,EAAE,GAAG,EAAA,IAAM,0BAA0B,KAAA;AAE3C,SAAO,eAAe,IAAI;AAC3B;;;ACxCD,SAAgB,8BACdG,OACAC,cACAC,WACAC,kBACAC,mBACQ;AACR,QAAM,eAAe,cAAc;AAEnC,QAAM,gBAAgB,uBAAuB,cAAc,iBAAA;AAC3D,SAAO,aAAA;AAEP,QAAM,UAAU,cAAc,aAAa,qBAAA;AAC3C,SAAO,OAAA;AAEP,QAAM,EAAE,sBAAA,IAA0B;AAElC,QAAM,iBAAiB,6BAA6B,WAAW,KAAA;AAE/D,QAAM,eAAe,qBAAqB,SAAS,iBAAA;AACnD,SAAO,YAAA;AAEP,QAAM,YAAY,aAAa,sBAAA;AAC/B,QAAM,oBAAoB,eAAe,UAAU,QAAQ,UAAU;AAErE,QAAM,eAAe,iBAAiB;AACtC,QAAM,mBAAoB,eAAe,oBAAqB;AAE9D,SAAO;AACR;AAGD,SAAgB,yBACdJ,OACAC,cACAC,WACAG,kBACAC,kBACAF,mBACQ;AACR,MAAI,UAAU,KAAA,GAAQ;AACpB,UAAM,eAAe,cAAc;AAEnC,QAAI,QAAQ;AACZ,QAAI,MAAM,SACR,SAAQ;QAER,SAAQ,oBAAoB;AAE9B,QAAI,WAAW;AACf,YAAQ,MAAM,KAAd;MACE,KAAK;AACH,mBAAW,eAAe,IAAI;AAC9B;MACF,KAAK;AACH,mBAAW,eAAA,CAAgB,QAAQ;AACnC;MACF,KAAK;AACH,mBAAW,eAAe,QAAQ;AAClC;MACF,KAAK;AACH,mBAAW,eAAe,IAAA,CAAK;AAC/B;MACF,KAAK;AACH,mBAAW;AACX;MACF,KAAK;AACH,mBAAW;AACX;IACH;AAED,WAAO;EACR,OACI;AACH,QAAI,oBAAoB,KACtB,QAAO;AAET,WAAO,8BACL,OACA,cACA,WACA,kBACA,iBAAA;EAEH;AACF;AAED,SAAgB,oBAAoB,EAClC,QACA,aACA,aAAA,GAKC;AACD,MAAI,iBAAiB;AACrB,MAAI,iBAAiB;AACrB,MAAI,eAAe;AACnB,MAAI,eAAe;AAEnB,QAAM,aAAa,aAAa,CAAA;AAChC,SAAO,cAAc,IAAA;AAGrB,cAAY,QAAQ,CAAC,WAAW,UAAU;AACxC,UAAM,EAAE,YAAA,IAAgB;AACxB,UAAM,EAAE,UAAU,KAAK,UAAU,EAAA,IAAM;AAEvC,QAAI,UAAU,YAAY;AACxB,uBAAiB;AACjB,uBAAiB;IAClB,OACI;AACH,sBAAgB;AAChB,sBAAgB;IACjB;EACF,CAAA;AAED,QAAM,WAAW,KAAK,IAAI,gBAAgB,MAAM,YAAA;AAChD,QAAM,WAAW,KAAK,IAAI,gBAAgB,MAAM,YAAA;AAEhD,QAAM,WAAW,OAAO,UAAA;AAExB,SAAO;IACL;IACA;IACA;EACD;AACF;AAED,SAAgB,6BAA6B,EAC3C,eAAA,GAGW;AACX,QAAMG,SAAmB,MAAM,KAAK,EAAE,QAAQ,eAAe,OAAQ,CAAA;AAErE,QAAM,wBAAwB,eAAe,IAC3C,CAAA,cAAa,UAAU,WAAA;AAGzB,MAAI,qBAAqB;AACzB,MAAI,gBAAgB;AAGpB,WAAS,QAAQ,GAAG,QAAQ,eAAe,QAAQ,SAAS;AAC1D,UAAM,mBAAmB,sBAAsB,KAAA;AAC/C,WAAO,gBAAA;AACP,UAAM,EAAE,YAAA,IAAgB;AAExB,QAAI,eAAe,MAAM;AACvB;AACA,aAAO,KAAA,IAAS;AAChB,uBAAiB;IAClB;EACF;AAGD,WAAS,QAAQ,GAAG,QAAQ,eAAe,QAAQ,SAAS;AAC1D,UAAM,mBAAmB,sBAAsB,KAAA;AAC/C,WAAO,gBAAA;AACP,UAAM,EAAE,YAAA,IAAgB;AAExB,QAAI,eAAe,KACjB;AAEF,UAAM,qBAAqB,eAAe,SAAS;AACnD,UAAMC,QAAO,gBAAgB;AAE7B;AACA,WAAO,KAAA,IAASA;AAChB,qBAAiBA;EAClB;AAED,SAAO;AACR;;;AClLD,SAAgB,mBACdC,aACAC,QACAC,8BACA;AACA,SAAO,QAAQ,CAACC,OAAM,UAAU;AAC9B,UAAM,YAAY,YAAY,KAAA;AAC9B,WAAO,SAAA;AAEP,UAAM,EAAE,WAAW,aAAa,IAAI,QAAA,IAAY;AAChD,UAAM,EAAE,gBAAgB,GAAG,YAAA,IAAgB;AAE3C,UAAM,mBAAmB,6BAA6B,OAAA;AACtD,QAAI,oBAAoB,QAAQA,UAAS,kBAAkB;AACzD,mCAA6B,OAAA,IAAWA;AAExC,YAAM,EAAE,YAAY,UAAU,SAAA,IAAa;AAE3C,UAAI,SACF,UAASA,OAAM,gBAAA;AAEjB,UAAI,gBAAgB,cAAc,WAAW;AAC3C,YACE,aACI,oBAAoB,QAAQ,qBAAqB,kBAClDA,UAAS,cAEZ,UAAA;AAGF,YACE,eACI,oBAAoB,QAAQ,qBAAqB,kBAClDA,UAAS,cAEZ,YAAA;MAEH;IACF;EACF,CAAA;AACF;;;AC5CD,SAAwBC,UACtBC,UACA,aAAa,IACb;AACA,MAAIC,YAAmC;AAEvC,QAAM,WAAW,IAAI,SAAc;AACjC,QAAI,cAAc,KAChB,cAAa,SAAA;AAEf,gBAAY,WAAW,MAAM;AAC3B,eAAS,GAAG,IAAA;IACb,GAAE,UAAA;EACJ;AAED,SAAO;AACR;;;AChBD,IAAa,YAAY;;;ACEzB,SAAgB,oBACdC,QACAC,UACAC,iBAAyB,WACjB;AACR,WAAS,OAAO,WAAW,OAAO,QAAQ,cAAA,CAAe;AACzD,aAAW,OAAO,WAAW,SAAS,QAAQ,cAAA,CAAe;AAE7D,QAAM,QAAQ,SAAS;AACvB,MAAI,UAAU,EACZ,QAAO;MAEP,QAAO,QAAQ,IAAI,IAAI;AAC1B;AAED,SAAgB,kBACdF,QACAC,UACAE,gBACS;AACT,SAAO,oBAAoB,QAAQ,UAAU,cAAA,MAAoB;AAClE;;;ACjBD,SAAgB,YAAY,EAC1B,kBAAkB,uBAClB,YACA,MAAAC,MAAA,GAKC;AACD,QAAM,mBAAmB,sBAAsB,UAAA;AAC/C,SAAO,oBAAoB,IAAA;AAE3B,QAAM,EAAE,gBAAgB,GAAG,aAAa,UAAU,KAAK,UAAU,EAAA,IAAM;AAEvE,MAAI,oBAAoBA,OAAM,OAAA,IAAW,EACvC,KAAI,aAAa;AAEf,UAAM,gBAAgB,gBAAgB,WAAW;AACjD,QAAI,oBAAoBA,OAAM,YAAA,IAAgB,EAC5C,CAAAA,QAAO;QAEP,CAAAA,QAAO;EACV,MAEC,CAAAA,QAAO;AAIX,EAAAA,QAAO,KAAK,IAAI,SAASA,KAAA;AACzB,EAAAA,QAAO,OAAO,WAAWA,MAAK,QAAQ,SAAA,CAAU;AAEhD,SAAOA;AACR;;;AChCD,SAAgB,eAAeC,GAAaC,GAAa;AACvD,MAAI,EAAE,WAAW,EAAE,OACjB,QAAO;MAGP,UAAS,QAAQ,GAAG,QAAQ,EAAE,QAAQ,QACpC,KAAI,EAAE,KAAA,MAAW,EAAE,KAAA,EACjB,QAAO;AAGb,SAAO;AACR;AAGD,SAAgB,oBAAoB,EAClC,OACA,QAAQ,YACR,kBAAkB,uBAClB,cACA,QAAA,GAOW;AACX,MAAI,kBAAkB,OAAO,CAAA,EAC3B,QAAO;AAET,QAAM,aAAa,CAAC,GAAG,UAAW;AAElC,QAAM,CAAC,iBAAiB,gBAAA,IAAoB;AAC5C,SAAO,mBAAmB,IAAA;AAC1B,SAAO,oBAAoB,IAAA;AAE3B,MAAI,eAAe;AAoBjB,MAAI,YAAY,YAAY;AAC1B;AAEE,YAAM,QAAQ,QAAQ,IAAI,mBAAmB;AAC7C,YAAM,mBAAmB,sBAAsB,KAAA;AAC/C,aAAO,gBAAA;AAIP,UAAI,iBAAiB,aAAa;AAChC,cAAM,WAAW,WAAW,KAAA;AAC5B,eAAO,YAAY,IAAA;AAEnB,cAAMC,qBAAmB,sBAAsB,KAAA;AAC/C,eAAOA,kBAAAA;AACP,cAAM,EAAE,gBAAgB,GAAG,UAAU,EAAA,IAAMA;AAE3C,YAAI,kBAAkB,UAAU,aAAA,GAAgB;AAC9C,gBAAM,aAAa,UAAU;AAG7B,cAAI,oBAAoB,YAAY,KAAK,IAAI,KAAA,CAAM,IAAI,EACrD,SAAQ,QAAQ,IAAI,IAAI,aAAa;QAExC;MACF;IACF;AAED;AAEE,YAAM,QAAQ,QAAQ,IAAI,kBAAkB;AAC5C,YAAM,mBAAmB,sBAAsB,KAAA;AAC/C,aAAO,gBAAA;AACP,YAAM,EAAE,YAAA,IAAgB;AAIxB,UAAI,aAAa;AACf,cAAM,WAAW,WAAW,KAAA;AAC5B,eAAO,YAAY,IAAA;AAEnB,cAAMA,qBAAmB,sBAAsB,KAAA;AAC/C,eAAOA,kBAAAA;AACP,cAAM,EAAE,gBAAgB,GAAG,UAAU,EAAA,IAAMA;AAE3C,YAAI,kBAAkB,UAAU,OAAA,GAAU;AACxC,gBAAM,aAAa,WAAW;AAG9B,cAAI,oBAAoB,YAAY,KAAK,IAAI,KAAA,CAAM,IAAI,EACrD,SAAQ,QAAQ,IAAI,IAAI,aAAa;QAExC;MACF;IACF;EACF;AAIH;AAOE,UAAM,YAAY,QAAQ,IAAI,IAAI;AAElC,QAAI,QAAQ,QAAQ,IAAI,mBAAmB;AAC3C,QAAI,oBAAoB;AAGxB,WAAO,MAAM;AACX,YAAM,WAAW,WAAW,KAAA;AAC5B,aAAO,YAAY,IAAA;AAEnB,YAAM,cAAc,YAAY;QAC9B,kBAAkB;QAClB,YAAY;QACZ,MAAM;MACP,CAAA;AACD,YAAMC,UAAQ,cAAc;AAG5B,2BAAqBA;AACrB,eAAS;AAET,UAAI,QAAQ,KAAK,SAAS,sBAAsB,OAC9C;IACH;AAGD,UAAM,cAAc,KAAK,IAAI,KAAK,IAAI,KAAA,GAAQ,KAAK,IAAI,iBAAA,CAAkB;AACzE,YAAQ,QAAQ,IAAI,IAAI,cAAc;EAGvC;AAED;AAGE,UAAM,aAAa,QAAQ,IAAI,kBAAkB;AACjD,QAAI,QAAQ;AACZ,WAAO,SAAS,KAAK,QAAQ,sBAAsB,QAAQ;AACzD,YAAM,iBAAiB,KAAK,IAAI,KAAA,IAAS,KAAK,IAAI,YAAA;AAElD,YAAM,WAAW,WAAW,KAAA;AAC5B,aAAO,YAAY,IAAA;AAEnB,YAAM,aAAa,WAAW;AAC9B,YAAM,WAAW,YAAY;QAC3B,kBAAkB;QAClB,YAAY;QACZ,MAAM;MACP,CAAA;AAED,UAAA,CAAK,kBAAkB,UAAU,QAAA,GAAW;AAC1C,wBAAgB,WAAW;AAE3B,mBAAW,KAAA,IAAS;AAEpB,YACE,aACG,YAAY,CAAA,EACZ,cAAc,KAAK,IAAI,KAAA,EAAO,YAAY,CAAA,GAAE,QAAa,EACxD,SAAS,KACV,CAAA,KAAK,EAER;MAEH;AAED,UAAI,QAAQ,EACV;UAEA;IACH;EACF;AAOD,MAAI,kBAAkB,cAAc,CAAA,EAElC,QAAO;AAGT;AAEE,UAAM,aAAa,QAAQ,IAAI,mBAAmB;AAElD,UAAM,WAAW,WAAW,UAAA;AAC5B,WAAO,YAAY,IAAA;AAEnB,UAAM,aAAa,WAAW;AAC9B,UAAM,WAAW,YAAY;MAC3B,kBAAkB;MAClB,YAAY;MACZ,MAAM;IACP,CAAA;AAGD,eAAW,UAAA,IAAc;AAGzB,QAAA,CAAK,kBAAkB,UAAU,UAAA,GAAa;AAC5C,UAAI,iBAAiB,aAAa;AAElC,YAAMC,eAAa,QAAQ,IAAI,mBAAmB;AAClD,UAAI,QAAQA;AACZ,aAAO,SAAS,KAAK,QAAQ,sBAAsB,QAAQ;AACzD,cAAMC,aAAW,WAAW,KAAA;AAC5B,eAAOA,cAAY,IAAA;AAEnB,cAAMC,eAAaD,aAAW;AAC9B,cAAME,aAAW,YAAY;UAC3B,kBAAkB;UAClB,YAAY;UACZ,MAAMD;QACP,CAAA;AAED,YAAA,CAAK,kBAAkBD,YAAUE,UAAAA,GAAW;AAC1C,4BAAkBA,aAAWF;AAE7B,qBAAW,KAAA,IAASE;QACrB;AAED,YAAI,kBAAkB,gBAAgB,CAAA,EACpC;AAEF,YAAI,QAAQ,EACV;YAEA;MACH;IACF;EACF;AAKD,QAAM,YAAY,WAAW,OAAO,CAAC,OAAOC,UAASA,QAAO,OAAO,CAAA;AAInE,MAAA,CAAK,kBAAkB,WAAW,GAAA,EAChC,QAAO;AAET,SAAO;AACR;;;AC/QD,SAAgB,sBACdC,SACAC,cACAC,mBAC2C;AAC3C,QAAM,QAAQ,4BACZ,SACA,cACA,iBAAA;AAGF,SAAO,SAAS,OAAO,CAAC,OAAO,QAAQ,CAAE,IAAG,CAAC,IAAI,EAAG;AACrD;;;ACPD,SAAgB,WACdC,SACAC,SACAC,QACS;AACT,MAAI,OACF,QACE,QAAQ,IAAI,QAAQ,IAAI,QAAQ,SAC7B,QAAQ,IAAI,QAAQ,QAAQ,QAAQ,KACpC,QAAQ,IAAI,QAAQ,IAAI,QAAQ,UAChC,QAAQ,IAAI,QAAQ,SAAS,QAAQ;MAI1C,QACE,QAAQ,KAAK,QAAQ,IAAI,QAAQ,SAC9B,QAAQ,IAAI,QAAQ,SAAS,QAAQ,KACrC,QAAQ,KAAK,QAAQ,IAAI,QAAQ,UACjC,QAAQ,IAAI,QAAQ,UAAU,QAAQ;AAG9C;;;ACjBD,SAAgBC,SAAQC,GAAgBC,GAAwB;AAC9D,MAAI,MAAM,EACR,OAAM,IAAI,MAAM,iCAAA;AAElB,QAAM,YAAY;IAChB,GAAG,aAAa,CAAA;IAChB,GAAG,aAAa,CAAA;EACjB;AAED,MAAI;AAGJ,SAAO,UAAU,EAAE,GAAG,EAAA,MAAQ,UAAU,EAAE,GAAG,EAAA,GAAK;AAChD,QAAI,UAAU,EAAE,IAAA;AAChB,QAAI,UAAU,EAAE,IAAA;AAEhB,sBAAkB;EACnB;AAED,SAAO,eAAA;AAEP,QAAM,YAAY;IAChB,GAAG,UAAU,oBAAoB,UAAU,CAAA,CAAE;IAC7C,GAAG,UAAU,oBAAoB,UAAU,CAAA,CAAE;EAC9C;AAED,MAAI,UAAU,MAAM,UAAU,GAAG;AAC/B,UAAM,WAAW,gBAAgB;AAEjC,UAAM,qBAAqB;MACzB,GAAG,UAAU,EAAE,GAAG,EAAA;MAClB,GAAG,UAAU,EAAE,GAAG,EAAA;IACnB;AAED,QAAI,IAAI,SAAS;AACjB,WAAO,KAAK;AACV,YAAM,QAAQ,SAAS,CAAA;AACvB,UAAI,UAAU,mBAAmB,EAC/B,QAAO;AACT,UAAI,UAAU,mBAAmB,EAC/B,QAAO;IACV;EACF;AAED,SAAO,KAAK,KAAK,UAAU,IAAI,UAAU,CAAA;AAC1C;AAED,IAAM,QACF;AAGJ,SAAS,WAAWC,MAAmB;AACrC,QAAM,UAAU,iBAAiB,UAAU,IAAA,CAAK,EAAE;AAClD,SAAO,YAAY,UAAU,YAAY;AAC1C;AAGD,SAAS,uBAAuBA,MAAmB;AACjD,QAAM,QAAQ,iBAAiB,IAAA;AAG/B,MAAI,MAAM,aAAa,QACrB,QAAO;AAMT,MACE,MAAM,WAAW,WACb,MAAM,aAAa,YAAY,WAAW,IAAA,GAE9C,QAAO;AAET,MAAA,CAAK,MAAM,UAAU,EACnB,QAAO;AACT,MAAI,eAAe,SAAS,MAAM,cAAc,OAC9C,QAAO;AACT,MAAI,qBAAqB,SAAS,MAAM,oBAAoB,OAC1D,QAAO;AACT,MAAI,kBAAkB,SAAS,MAAM,iBAAiB,SACpD,QAAO;AACT,MAAI,YAAY,SAAS,MAAM,WAAW,OACxC,QAAO;AACT,MAAI,kBAAkB,SAAS,MAAM,iBAAiB,OACpD,QAAO;AACT,MAAI,eAAe,SAAS,MAAM,cAAc,UAC9C,QAAO;AACT,MAAI,MAAM,KAAK,MAAM,UAAA,EACnB,QAAO;AAET,MAAI,MAAM,4BAA4B,QACpC,QAAO;AAET,SAAO;AACR;AAGD,SAAS,oBAAoBC,OAAsB;AACjD,MAAI,IAAI,MAAM;AAEd,SAAO,KAAK;AACV,UAAM,OAAO,MAAM,CAAA;AACnB,WAAO,IAAA;AACP,QAAI,uBAAuB,IAAA,EACzB,QAAO;EACV;AAED,SAAO;AACR;AAGD,SAAS,UAAUC,MAA0B;AAC3C,SAAQ,QAAQ,OAAO,iBAAiB,IAAA,EAAM,MAAA,KAAY;AAC3D;AAGD,SAAS,aAAaF,MAAmB;AACvC,QAAM,YAAY,CAAE;AAEpB,SAAO,MAAM;AACX,cAAU,KAAK,IAAA;AACf,WAAO,UAAU,IAAA;EAClB;AAED,SAAO;AACR;AAGD,SAAS,UAAUA,MAAmB;;AAEpC,SAAQ,KAAK,sBAAsB,sBAAoB,UAAK,eAAL,mBAAiB,SAAS,KAAK;AACvF;;;ACpHD,IAAa,0BAA0B;AACvC,IAAa,0BAA0B;AACvC,IAAa,wBAAwB;AACrC,IAAa,wBAAwB;AAErC,SAAS,eAA8C;AACrD,MAAA,OAAW,eAAe,WACxB,QAAO,WAAW,kBAAA,EAAoB,UAAU,WAAW;AAC9D;AAED,IAAM,kBAAkB,aAAA,MAAmB;AAE3C,IAAMG,sBAA2C,CAAE;AACnD,IAAI,gBAAgB;AACpB,IAAMC,sBAA6C,oBAAI,IAAA;AACvD,IAAMC,uBAA4C,oBAAI,IAAA;AAEtD,IAAM,2BAA2B,oBAAI,IAAA;AAErC,SAAgB,qBACdC,gBACAC,SACAC,WACAC,gBACAC,OACAC,uBACA;AACA,QAAM,EAAE,cAAA,IAAkB;AAE1B,QAAMC,OAA0B;IAC9B;IACA;IACA;IACA;IACA;EACD;AAED,QAAMC,SAAQ,oBAAoB,IAAI,aAAA,KAAkB;AACxD,sBAAoB,IAAI,eAAeA,SAAQ,CAAA;AAE/C,2BAAyB,IAAI,IAAA;AAE7B,kBAAA;AAEA,SAAO,SAAS,yBAAyB;AACvC,yBAAqB,OAAO,cAAA;AAC5B,6BAAyB,OAAO,IAAA;AAEhC,UAAMA,UAAQ,oBAAoB,IAAI,aAAA,KAAkB;AACxD,wBAAoB,IAAI,eAAeA,UAAQ,CAAA;AAE/C,oBAAA;AACA,2BAAA;AAEA,QAAIA,YAAU,EACZ,qBAAoB,OAAO,aAAA;EAC9B;AACF;AAED,SAAS,kBAAkBC,OAAoB;AAC7C,QAAM,EAAE,OAAA,IAAW;AACnB,QAAM,EAAE,GAAG,EAAA,IAAM,0BAA0B,KAAA;AAE3C,kBAAgB;AAEhB,iCAA+B;IAAE;IAAQ;IAAG;EAAG,CAAA;AAC/C,kBAAA;AAEA,MAAI,oBAAoB,SAAS,GAAG;AAClC,8BAA0B,QAAQ,KAAA;AAElC,UAAM,eAAA;EACP;AACF;AAED,SAAS,kBAAkBA,OAAoB;AAC7C,QAAM,EAAE,GAAG,EAAA,IAAM,0BAA0B,KAAA;AAE3C,MAAA,CAAK,eAAe;AAClB,UAAM,EAAE,OAAA,IAAW;AAKnB,mCAA+B;MAAE;MAAQ;MAAG;IAAG,CAAA;EAChD;AAED,4BAA0B,QAAQ,KAAA;AAGlC,eAAA;AAEA,MAAI,oBAAoB,SAAS,EAC/B,OAAM,eAAA;AACT;AAED,SAAS,gBAAgBA,OAAoB;AAC3C,QAAM,EAAE,OAAA,IAAW;AACnB,QAAM,EAAE,GAAG,EAAA,IAAM,0BAA0B,KAAA;AAE3C,uBAAqB,MAAA;AACrB,kBAAgB;AAEhB,MAAI,oBAAoB,SAAS,EAC/B,OAAM,eAAA;AAER,4BAA0B,MAAM,KAAA;AAChC,iCAA+B;IAAE;IAAQ;IAAG;EAAG,CAAA;AAC/C,eAAA;AAEA,kBAAA;AACD;AAED,SAAS,+BAA+B,EACtC,QACA,GACA,EAAA,GAKC;AACD,sBAAoB,OAAO,CAAA;AAE3B,MAAIC,gBAAoC;AACxC,MAAI,kBAAkB,YACpB,iBAAgB;AAElB,2BAAyB,QAAQ,CAAC,SAAS;AACzC,UAAM,EAAE,SAAS,mBAAmB,eAAA,IAAmB;AAEvD,UAAM,iBAAiB,kBAAkB,sBAAA;AACzC,UAAM,EAAE,QAAQ,MAAM,OAAO,IAAA,IAAQ;AAErC,UAAM,SAAS,kBACX,eAAe,SACf,eAAe;AAEnB,UAAM,kBACF,KAAK,OAAO,UACT,KAAK,QAAQ,UACb,KAAK,MAAM,UACX,KAAK,SAAS;AAErB,QAAI,iBAAiB;AAOnB,UACE,kBAAkB,QACf,sBAAsB,iBAAA,CACrB,kBAAkB,SAAS,aAAA,KAAc,CACzC,cAAc,SAAS,iBAAA,KAIxBC,SAAQ,eAAe,iBAAA,IAAqB,GAC/C;AAOA,YAAIC,iBAAqC;AACzC,YAAI,eAAe;AACnB,eAAO,gBAAgB;AACrB,cAAI,eAAe,SAAS,iBAAA,EAC1B;mBAGA,WACE,eAAe,sBAAA,GACf,gBACA,IAAA,GAEF;AACA,2BAAe;AACf;UACD;AAED,2BAAiB,eAAe;QACjC;AAED,YAAI,aACF;MACH;AAED,0BAAoB,KAAK,IAAA;IAC1B;EACF,CAAA;AACF;AAED,SAAgB,2BACdX,gBACAY,MACA;AACA,uBAAqB,IAAI,gBAAgB,IAAA;AAC1C;AAED,SAAS,eAAe;AACtB,MAAI,uBAAuB;AAC3B,MAAI,qBAAqB;AACzB,MAAIC;AAEJ,sBAAoB,QAAQ,CAAC,SAAS;AACpC,UAAM,EAAE,WAAW,OAAO,OAAA,IAAW;AAErC,QAAI,UAAU,UAAU,aACtB,wBAAuB;QAEvB,sBAAqB;AAEvB,YAAQ,OAAO;EAChB,CAAA;AAED,MAAI,kBAAkB;AACtB,uBAAqB,QAAQ,CAAC,SAAS;AACrC,uBAAmB;EACpB,CAAA;AAED,MAAI,wBAAwB,mBAC1B,sBAAqB,gBAAgB,iBAAiB,KAAA;WAC/C,qBACP,sBAAqB,cAAc,iBAAiB,KAAA;WAC7C,mBACP,sBAAqB,YAAY,iBAAiB,KAAA;MAElD,wBAAA;AACH;AAED,SAAS,kBAAkB;AACzB,sBAAoB,QAAQ,CAAC,GAAG,kBAAkB;AAChD,UAAM,EAAE,KAAA,IAAS;AAEjB,SAAK,oBAAoB,eAAe,eAAA;AACxC,SAAK,oBAAoB,aAAa,iBAAA;AACtC,SAAK,oBAAoB,cAAc,iBAAA;AACvC,SAAK,oBAAoB,aAAa,iBAAA;AACtC,SAAK,oBAAoB,aAAa,iBAAA;AACtC,SAAK,oBAAoB,cAAc,iBAAA;EACxC,CAAA;AAED,SAAO,oBAAoB,WAAW,eAAA;AACtC,SAAO,oBAAoB,eAAe,eAAA;AAC1C,SAAO,oBAAoB,YAAY,eAAA;AAEvC,MAAI,yBAAyB,OAAO,EAClC,KAAI,eAAe;AACjB,QAAI,oBAAoB,SAAS,EAC/B,qBAAoB,QAAQ,CAACN,QAAO,kBAAkB;AACpD,YAAM,EAAE,KAAA,IAAS;AAEjB,UAAIA,SAAQ,GAAG;AACb,aAAK,iBAAiB,eAAe,eAAA;AACrC,aAAK,iBAAiB,cAAc,iBAAA;AACpC,aAAK,iBAAiB,aAAa,iBAAA;AACnC,aAAK,iBAAiB,aAAa,mBAAmB,EACpD,SAAS,MACV,CAAA;MACF;IACF,CAAA;AAGH,WAAO,iBAAiB,WAAW,eAAA;AACnC,WAAO,iBAAiB,eAAe,eAAA;AACvC,WAAO,iBAAiB,YAAY,eAAA;EACrC,MAEC,qBAAoB,QAAQ,CAACA,QAAO,kBAAkB;AACpD,UAAM,EAAE,KAAA,IAAS;AAEjB,QAAIA,SAAQ,GAAG;AACb,WAAK,iBAAiB,aAAa,iBAAA;AACnC,WAAK,iBAAiB,aAAa,iBAAA;AACnC,WAAK,iBAAiB,aAAa,mBAAmB,EACpD,SAAS,MACV,CAAA;AACD,WAAK,iBAAiB,cAAc,iBAAA;IACrC;EACF,CAAA;AAGN;AAED,SAAS,0BACPO,QACAN,OACA;AACA,2BAAyB,QAAQ,CAAC,SAAS;AACzC,UAAM,EAAE,sBAAA,IAA0B;AAElC,UAAM,WAAW,oBAAoB,SAAS,IAAA;AAE9C,0BAAsB,QAAQ,UAAU,KAAA;EACzC,CAAA;AACF;;;AC1TD,IAAIO,qBAAoC;AACxC,IAAIC,eAAwC;AAE5C,SAAgB,eACdC,OACAC,iBACQ;AACR,MAAI,iBAAiB;AACnB,UAAM,iBAAiB,kBAAkB,6BAA6B;AACtE,UAAM,iBAAiB,kBAAkB,6BAA6B;AACtE,UAAM,eAAe,kBAAkB,2BAA2B;AAClE,UAAM,eAAe,kBAAkB,2BAA2B;AAElE,QAAI,cACF,KAAI,YACF,QAAO;aACA,YACP,QAAO;QAEP,QAAO;aAEF,cACP,KAAI,YACF,QAAO;aACA,YACP,QAAO;QAEP,QAAO;aAEF,YACP,QAAO;aAEA,YACP,QAAO;EAEV;AAED,UAAQ,OAAR;IACE,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;EACV;AACF;AAED,SAAgB,yBAAyB;AACvC,MAAI,iBAAiB,MAAM;AACzB,aAAS,KAAK,YAAY,YAAA;AAE1B,yBAAqB;AACrB,mBAAe;EAChB;AACF;AAED,SAAgB,qBACdD,OACAC,iBACAC,OACA;AACA,QAAM,QAAQ,eAAe,OAAO,eAAA;AAEpC,MAAI,uBAAuB,MACzB;AAEF,uBAAqB;AAErB,MAAI,iBAAiB,MAAM;AACzB,mBAAe,SAAS,cAAc,OAAA;AACtC,QAAI,MACF,cAAa,QAAQ;AACvB,aAAS,KAAK,YAAY,YAAA;EAC3B;AAED,eAAa,YAAY,aAAa,KAAA;AACvC;AAGD,SAAgB,yBAAyB,EACvC,aACA,WACA,QACA,WACA,YACA,YAAY,EAAA,GAQI;AAChB,QAAMC,QAAO,OAAO,UAAA;AAEpB,MAAI;AACJ,MAAIA,SAAQ,KAGV,YACI,gBAAA,SAA4B,YAAY,YAAY,SAAA,IAAa;WAE9D,UAAU,WAAW,EAE5B,YAAW;MAGX,YAAWA,MAAK,YAAY,SAAA;AAG9B,SAAO;IACL,WAAW;IACX;IACA,YAAY;IAGZ,UAAU;IAIV,eAAe,cAAc,OAAO,SAAA;EACrC;AACF;;;ACjID,SAAgB,yBAAyB,EACvC,QAAQ,YACR,iBAAA,GAIW;AACX,QAAM,aAAa,CAAC,GAAG,UAAW;AAClC,QAAM,sBAAsB,WAAW,OACrC,CAAC,aAAa,YAAY,cAAc,SACxC,CAAA;AAIF,MAAI,WAAW,WAAW,iBAAiB,OACzC,OAAM,IAAI,MACR,WAAW,iBAAiB,MAAA,kBAAwB,WACjD,IAAI,CAAAC,UAAQ,GAAGA,KAAA,GAAO,EACtB,KAAK,IAAA,CAAK,EAAE;YAGT,kBAAkB,qBAAqB,GAAA,GAAM;AAKnD,YAAQ,KACN,uCAAuC,WACpC,IAAI,CAAAA,UAAQ,GAAGA,KAAA,GAAO,EACtB,KAAK,IAAA,CAAK,yCAAyC;AAG1D,aAAS,QAAQ,GAAG,QAAQ,iBAAiB,QAAQ,SAAS;AAC5D,YAAM,aAAa,WAAW,KAAA;AAC9B,aAAO,cAAc,IAAA;AACrB,YAAM,WAAY,MAAM,sBAAuB;AAC/C,iBAAW,KAAA,IAAS;IACrB;EACF;AAED,MAAI,gBAAgB;AAGpB,WAAS,QAAQ,GAAG,QAAQ,iBAAiB,QAAQ,SAAS;AAC5D,UAAM,aAAa,WAAW,KAAA;AAC9B,WAAO,cAAc,IAAA;AAErB,UAAM,WAAW,YAAY;MAC3B;MACA,YAAY;MACZ,MAAM;IACP,CAAA;AAED,QAAI,eAAe,UAAU;AAC3B,uBAAiB,aAAa;AAE9B,iBAAW,KAAA,IAAS;IACrB;EACF;AAID,MAAA,CAAK,kBAAkB,eAAe,CAAA,EACpC,UAAS,QAAQ,GAAG,QAAQ,iBAAiB,QAAQ,SAAS;AAC5D,UAAM,WAAW,WAAW,KAAA;AAC5B,WAAO,YAAY,IAAA;AACnB,UAAM,aAAa,WAAW;AAC9B,UAAM,WAAW,YAAY;MAC3B;MACA,YAAY;MACZ,MAAM;IACP,CAAA;AAED,QAAI,aAAa,UAAU;AACzB,uBAAiB,WAAW;AAC5B,iBAAW,KAAA,IAAS;AAGpB,UAAI,kBAAkB,eAAe,CAAA,EACnC;IACH;EACF;AAGH,SAAO;AACR;;;AC/ED,SAAgB,oCAAoC,EAClD,gBACA,SACA,QACA,gBACA,mBACA,UAAA,GAUO;AACP,cAAY,CAAC,cAAc;AACzB,UAAM,qBAAqB,kBAAkB;AAC7C,QAAA,CAAK,mBACH;AAEF,UAAM,uBAAuB,gCAC3B,SACA,kBAAA;AAGF,aAAS,QAAQ,GAAG,QAAQ,eAAe,SAAS,GAAG,SAAS;AAC9D,YAAM,EAAE,UAAU,UAAU,SAAA,IAAa,oBAAoB;QAC3D,QAAQ,OAAO;QACf,aAAa;QACb,cAAc,CAAC,OAAO,QAAQ,CAAE;MACjC,CAAA;AAED,YAAM,sBAAsB,qBAAqB,KAAA;AACjD,UAAI,uBAAuB,MAAM;MAGhC,OACI;AACH,cAAM,YAAY,eAAe,KAAA;AACjC,eAAO,SAAA;AAEP,4BAAoB,aAAa,iBAAiB,UAAU,EAAA;AAC5D,4BAAoB,aAClB,iBACA,GAAG,KAAK,MAAM,QAAA,CAAS,EAAE;AAE3B,4BAAoB,aAClB,iBACA,GAAG,KAAK,MAAM,QAAA,CAAS,EAAE;AAE3B,4BAAoB,aAClB,iBACA,YAAY,OAAO,GAAG,KAAK,MAAM,QAAA,CAAS,KAAK,EAAA;MAElD;IACF;AAED,cAAU,MAAM;AACd,2BAAqB,QAAQ,CAAC,wBAAwB;AACpD,4BAAoB,gBAAgB,eAAA;AACpC,4BAAoB,gBAAgB,eAAA;AACpC,4BAAoB,gBAAgB,eAAA;AACpC,4BAAoB,gBAAgB,eAAA;MACrC,CAAA;IACF,CAAA;EACF,CAAA;AAED,cAAY,CAAC,cAAc;AACzB,UAAM,qBAAqB,kBAAkB;AAC7C,QAAA,CAAK,mBACH;AAEF,UAAM,cAAc,eAAe;AACnC,WAAO,WAAA;AAEP,UAAM,EAAE,gBAAA,iBAAA,IAAmB;AAC3B,UAAM,eAAe,qBAAqB,SAAS,kBAAA;AACnD,WAAO,gBAAgB,MAAM,0BAA0B,OAAA,GAAU;AAEjE,UAAM,UAAU,gCAAgC,SAAS,kBAAA;AACzD,WAAO,OAAA;AAEP,UAAM,mBAAmB,QAAQ,IAAI,CAAC,WAAW;AAC/C,YAAM,WAAW,OAAO,aAAa,6BAAA;AACrC,aAAO,QAAA;AAEP,YAAM,CAAC,UAAU,OAAA,IAAW,wBAC1B,SACA,UACAC,kBACA,kBAAA;AAEF,UAAI,YAAY,QAAQ,WAAW,KACjC,QAAO,MAAM;MAAE;AAEjB,YAAM,YAAY,CAACC,UAAyB;AAC1C,YAAI,MAAM,iBACR;AAEF,gBAAQ,MAAM,KAAd;UACE,KAAK,SAAS;AACZ,kBAAM,eAAA;AAEN,kBAAM,QAAQ,iBAAe,UAC3B,CAAA,cAAa,UAAU,OAAO,QAAA;AAEhC,gBAAI,SAAS,GAAG;AACd,oBAAM,YAAYD,iBAAe,KAAA;AACjC,qBAAO,SAAA;AAEP,oBAAME,QAAO,OAAO,MAAM,KAAA;AAE1B,oBAAM,EACJ,gBAAgB,GAChB,aACA,UAAU,EAAA,IACR,UAAU;AAEd,kBAAIA,SAAQ,QAAQ,aAAa;AAC/B,sBAAM,aAAa,oBAAoB;kBACrC,OAAO,kBAAkBA,OAAM,aAAA,IAC3B,UAAU,gBACV,gBAAgBA;kBACpB,QAAQ,OAAO;kBACf,kBAAkB,iBAAe,IAC/B,CAAA,gBAAaC,YAAU,WAAA;kBAEzB,cAAc,sBACZ,SACA,UACA,kBAAA;kBAEF,SAAS;gBACV,CAAA;AACD,oBAAI,OAAO,UAAU,WACnB,WAAU,UAAA;cACb;YACF;AACD;UACD;QACF;MACF;AAED,aAAO,iBAAiB,WAAW,SAAA;AACnC,aAAO,MAAM;AACX,eAAO,oBAAoB,WAAW,SAAA;MACvC;IACF,CAAA;AAED,cAAU,MAAM;AACd,uBAAiB,QAAQ,CAAA,oBAAmB,gBAAA,CAAiB;IAC9D,CAAA;EACF,CAAA;AACF;;;AChKD,SAAgB,yBAAyBC,eAAkC;AACzE,MAAI;AACF,QAAA,OAAW,iBAAiB,aAAa;AAEvC,oBAAc,UAAU,CAACC,SAAiB;AACxC,eAAO,aAAa,QAAQ,IAAA;MAC7B;AACD,oBAAc,UAAU,CAACA,MAAcC,UAAkB;AACvD,qBAAa,QAAQ,MAAM,KAAA;MAC5B;IACF,MAEC,OAAM,IAAI,UAAU,gDAAA;EAEvB,SACM,OAAO;AACZ,YAAQ,MAAM,KAAA;AAEd,kBAAc,UAAU,MAAM;AAC9B,kBAAc,UAAU,MAAM;IAAE;EACjC;AACF;AAaD,SAAS,iBAAiBC,YAA4B;AACpD,SAAO,QAAQ,UAAA;AAChB;AAMD,SAAS,YAAYC,QAA6B;AAChD,SAAO,OACJ,IAAI,CAAC,UAAU;AACd,UAAM,EAAE,aAAa,IAAI,eAAe,MAAA,IAAU;AAClD,QAAI,cACF,QAAO;QAGP,QAAO,QACH,GAAG,KAAA,IAAS,KAAK,UAAU,WAAA,CAAY,KACvC,KAAK,UAAU,WAAA;EAEtB,CAAA,EACA,KAAK,CAAC,GAAG,MAAM,EAAE,cAAc,CAAA,CAAE,EACjC,KAAK,GAAA;AACT;AAED,SAAS,8BACPD,YACAE,SACkC;AAClC,MAAI;AACF,UAAM,gBAAgB,iBAAiB,UAAA;AACvC,UAAM,aAAa,QAAQ,QAAQ,aAAA;AACnC,QAAI,YAAY;AACd,YAAM,SAAS,KAAK,MAAM,UAAA;AAC1B,UAAA,OAAW,WAAW,YAAY,UAAU,KAC1C,QAAO;IACV;EACF,SACM,OAAO;EAAE;AAEhB,SAAO;AACR;AAED,SAAgB,oBACdF,YACAC,QACAC,SACgC;AAChC,QAAM,QAAQ,8BAA8B,YAAY,OAAA,KAAY,CAAE;AACtE,QAAM,WAAW,YAAY,MAAA;AAC7B,SAAO,MAAM,QAAA,KAAa;AAC3B;AAED,SAAgB,oBACdF,YACAC,QACAE,0BACAC,OACAF,SACM;AACN,QAAM,gBAAgB,iBAAiB,UAAA;AACvC,QAAM,WAAW,YAAY,MAAA;AAC7B,QAAM,QAAQ,8BAA8B,YAAY,OAAA,KAAY,CAAE;AACtE,QAAM,QAAA,IAAY;IAChB,eAAe,OAAO,YAAY,yBAAyB,QAAA,CAAS;IACpE,QAAQ;EACT;AAED,MAAI;AACF,YAAQ,QAAQ,eAAe,KAAK,UAAU,KAAA,CAAM;EACrD,SACM,OAAO;AACZ,YAAQ,MAAM,KAAA;EACf;AACF;;;ACrFD,IAAM,kCAAkC;AAOxC,IAAM,iBAAoC;EACxC,SAAS,CAAC,SAAiB;AACzB,6BAAyB,cAAA;AACzB,WAAO,eAAe,QAAQ,IAAA;EAC/B;EACD,SAAS,CAAC,MAAc,UAAkB;AACxC,6BAAyB,cAAA;AACzB,mBAAe,QAAQ,MAAM,KAAA;EAC9B;AACH;AAwBA,IAAa,CAAC,yBAAyB,wBAAA,IAA4B,cAAiC,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BpG,UAAMG,SAAQ;AAKd,UAAM,QAAQ;AASd,UAAM,cAEF,CAAC;AAEL,UAAM,EAAE,UAAA,IAAc,OAAOA,MAAA;AAC7B,UAAM,UAAUC,OAAMD,OAAM,IAAI,qBAAA;AAChC,UAAM,MAAM,aAAA;AACZ,UAAM,EAAE,YAAY,gBAAgB,qBAAA,IAAyB,iBAAA;AAE7D,UAAM,YAAY,IAAsB,IAAA;AACxC,UAAM,SAAS,IAAc,CAAE,CAAA;AAC/B,UAAM,kCAAkC,IAA4B,CAAE,CAAA;AACtE,UAAM,6BAA6B,IAAyB,oBAAI,IAAA,CAAA;AAChE,UAAM,eAAe,IAAY,CAAA;AAEjC,UAAM,qBAAqB,SAAS,OAAO;MACzC,YAAYA,OAAM;MAClB,WAAWA,OAAM;MACjB,WAAW,UAAU;MACrB,IAAI;MACJ,kBAAkBA,OAAM;MACxB,SAASA,OAAM;IAChB,EAAA;AASD,UAAM,iBAAiB,IAIpB;MACD,QAAQ,OAAO;MACf,gBAAgB,CAAE;MAClB,uBAAuB;IACxB,CAAA;AAED,UAAM,YAAY,CAAC,QAAkB,OAAO,QAAQ;AAEpD,wCAAoC;MAClC;MACA;MACA;MACA,gBAAgB,eAAe,MAAM;MACrC;MACA,mBAAmB;IACpB,CAAA;AAED,gBAAY,MAAM;AAChB,YAAM,EAAE,eAAA,IAAmB,eAAe;AAC1C,YAAM,EAAE,WAAA,IAAeA;AAEvB,UAAI,YAAY;AACd,YAAI,OAAO,MAAM,WAAW,KAAK,OAAO,MAAM,WAAW,eAAe,OACtE;AAEF,YAAI,gBAAgB,YAAY,UAAA;AAGhC,YAAA,CAAK,eAAe;AAClB,0BAAgBE,UACd,qBACA,+BAAA;AAGF,sBAAY,UAAA,IAAc;QAC5B;AAIA,cAAM,uBAAuB,CAAC,GAAG,cAAc;AAC/C,cAAM,iCAAiC,IAAI,IACzC,2BAA2B,KAAA;AAG7B,sBACE,YACA,sBACA,gCACA,OAAO,OACPF,OAAM,OAAA;MAEV;IACD,CAAA;AAED,aAAS,cAAc,WAAsB,aAAiC;AAC5E,YAAM,EAAE,eAAA,IAAmB,eAAe;AAE1C,YAAM,aAAa,mBAAmB,gBAAgB,SAAA;AAEtD,aAAO,yBAAyB;QAC9B;QACA,WAAW,UAAU;QACrB,QAAQ,OAAO;QACf,WAAW;QACX;MACD,CAAA;IACH;AAEA,aAAS,cAAc,WAAsB;AAC3C,YAAM,EAAE,eAAA,IAAmB,eAAe;AAE1C,qBAAe,KAAK,SAAA;AACpB,qBAAe,KAAK,CAAC,QAAQ,WAAW;AACtC,cAAM,SAAS,OAAO;AACtB,cAAM,SAAS,OAAO;AACtB,YAAI,UAAU,QAAQ,UAAU,KAC9B,QAAO;iBACA,UAAU,KACjB,QAAO;iBACA,UAAU,KACjB,QAAO;YAEP,QAAO,SAAS;MACnB,CAAA;AAED,qBAAe,MAAM,wBAAwB;IAC/C;AAIA,UAAM,MAAM,eAAe,MAAM,uBAAuB,MAAM;AAC5D,UAAI,eAAe,MAAM,uBAAuB;AAC9C,uBAAe,MAAM,wBAAwB;AAE7C,cAAM,EAAE,YAAY,QAAA,IAAY,mBAAmB;AACnD,cAAM,EAAE,QAAQ,YAAY,eAAA,IAAmB,eAAe;AAI9D,YAAI,eAAgC;AACpC,YAAI,YAAY;AACd,gBAAM,QAAQ,oBAAoB,YAAY,gBAAgB,OAAA;AAC9D,cAAI,OAAO;AACT,uCAA2B,QAAQ,IAAI,IACrC,OAAO,QAAQ,MAAM,aAAA,CAAc;AAErC,2BAAe,MAAM;UACvB;QACF;AAEA,YAAI,iBAAiB,KACnB,gBAAe,6BAA6B,EAC1C,eACD,CAAA;AAKH,cAAM,aAAa,yBAAyB;UAC1C,QAAQ;UACR,kBAAkB,eAAe,IAC/B,CAAA,cAAa,UAAU,WAAA;QAE1B,CAAA;AAED,YAAA,CAAK,SAAS,YAAY,UAAA,GAAa;AACrC,oBAAU,UAAA;AAEV,yBAAe,MAAM,SAAS;AAC9B,gBAAM,UAAU,UAAA;AAEhB,6BACE,gBACA,YACA,gCAAgC,KAAA;QAEpC;MACF;IACD,CAAA;AAED,aAASG,sBAAqB,cAAsB;AAClD,aAAO,SAAS,cAAc,OAAoB;AAChD,cAAM,eAAA;AACN,cAAM,oBAAoB,qBAAqB;AAC/C,YAAA,CAAK,kBACH,QAAO,MAAM;AAEf,cAAM,EAAE,WAAA,aAAW,WAAA,aAAW,IAAI,WAAS,iBAAA,IAAqB,mBAAmB;AACnF,cAAM,EAAE,QAAQ,YAAY,eAAA,IAAmB,eAAe;AAE9D,cAAM,EAAE,cAAA,IAAkB,eAAa,CAAC;AAExC,cAAM,eAAe,sBACnB,WACA,cACA,iBAAA;AAGF,YAAI,QAAQ,yBACV,OACA,cACA,aACA,aACA,kBACA,iBAAA;AAEF,YAAI,UAAU,EACZ;AAGF,cAAM,eAAe,gBAAc;AACnC,YAAI,IAAI,UAAU,SAAS,aACzB,SAAA,CAAS;AAEX,cAAM,mBAAmB,eAAe,IAAI,CAAA,cAAa,UAAU,WAAA;AAEnE,cAAM,aAAa,oBAAoB;UACrC;UACA,QAAQ,iBAAiB;UACzB;UACA;UACA,SAAS,UAAU,KAAA,IAAS,aAAa;QAC1C,CAAA;AAED,cAAM,gBAAA,CAAiB,eAAe,YAAY,UAAA;AAIlD,YAAIC,cAAa,KAAA,KAAU,aAAa,KAAA,GAItC;cAAI,aAAa,UAAU,OAAO;AAChC,yBAAa,QAAQ;AAErB,gBAAA,CAAK,cAGH,KAAI,aACF,4BACE,cACA,QAAQ,IAAI,0BAA0B,uBAAA;gBAIxC,4BACE,cACA,QAAQ,IAAI,wBAAwB,qBAAA;gBAKxC,4BAA2B,cAAc,CAAA;UAE7C;;AAGF,YAAI,eAAe;AACjB,oBAAU,UAAA;AAEV,yBAAe,MAAM,SAAS;AAC9B,gBAAM,UAAU,UAAA;AAEhB,6BACE,gBACA,YACA,gCAAgC,KAAA;QAEpC;MACF;IACF;AAEA,aAASC,aAAY,WAAsB,iBAAyB;AAClE,YAAM,EAAE,QAAQ,YAAY,eAAA,IAAmB,eAAe;AAE9D,YAAM,wBAAwB,eAAe,IAAI,CAAA,gBAAa,YAAU,WAAA;AAExE,YAAM,EAAE,WAAW,aAAA,IAAiB,gBAClC,gBACA,WACA,UAAA;AAGF,aAAO,aAAa,IAAA;AAEpB,YAAM,cAAc,mBAAmB,gBAAgB,SAAA,MAAe,eAAe,SAAS;AAC9F,YAAM,QAAQ,cACV,YAAY,kBACZ,kBAAkB;AAEtB,YAAM,aAAa,oBAAoB;QACrC;QACA,QAAQ;QACR,kBAAkB;QAClB;QACA,SAAS;MACV,CAAA;AAED,UAAA,CAAK,eAAe,YAAY,UAAA,GAAa;AAC3C,kBAAU,UAAA;AAEV,uBAAe,MAAM,SAAS;AAC9B,cAAM,UAAU,UAAA;AAEhB,2BACE,gBACA,YACA,gCAAgC,KAAA;MAEpC;IACF;AAEA,aAAS,2BAA2B,WAAsB,iBAAmC;AAC3F,YAAM,EAAE,QAAA,UAAQ,eAAA,IAAmB,eAAe;AAClD,YAAM,QAAQ,mBAAmB,gBAAgB,SAAA;AACjD,qBAAe,KAAA,IAAS;AACxB,qBAAe,MAAM,wBAAwB;AAC7C,YAAM,EACJ,eAAe,oBAAoB,GACnC,aAAa,gBAAA,IACX;AAEJ,YAAM,EACJ,eAAe,oBAAoB,GACnC,aAAa,iBACb,SAAS,cAAc,KACvB,SAAS,cAAc,EAAA,IACrB,UAAU;AAEd,YAAM,EAAE,WAAW,cAAA,IAAkB,gBACnC,gBACA,WACA,QAAA;AAEF,UAAI,kBAAkB,KAEpB;AAGF,UACE,mBACG,mBACA,kBAAkB,mBAErB;YAAI,sBAAsB,kBACxB,CAAAA,aAAY,WAAW,iBAAA;MAIzB,WAEO,gBAAgB,YACvB,CAAAA,aAAY,WAAW,WAAA;eAEhB,gBAAgB,YACvB,CAAAA,aAAY,WAAW,WAAA;IAE3B;AAEA,aAAS,cAAc,cAAsB,OAAoB;AAC/D,YAAM,EAAE,WAAA,YAAA,IAAc,mBAAmB;AACzC,YAAM,EAAE,QAAA,SAAA,IAAW,eAAe;AAClC,UAAA,CAAK,qBAAqB,MACxB;AAEF,YAAM,gBAAgB,uBACpB,cACA,qBAAqB,KAAA;AAEvB,aAAO,aAAA;AAEP,YAAM,wBAAwB,6BAC5B,aACA,KAAA;AAGF,gBAAU,QAAQ;QAChB;QACA,gBAAgB,cAAc,sBAAA;QAC9B;QACA,eAAe;MACjB;IACF;AACA,aAAS,eAAe;AACtB,gBAAU,QAAQ;IACpB;AAEA,aAAS,gBAAgB,WAAsB;AAC7C,YAAM,EAAE,eAAA,IAAmB,eAAe;AAE1C,YAAM,QAAQ,mBAAmB,gBAAgB,SAAA;AACjD,UAAI,SAAS,GAAG;AACd,uBAAe,OAAO,OAAO,CAAA;AAM7B,eAAO,gCAAgC,MAAM,UAAU,EAAA;AAEvD,uBAAe,MAAM,wBAAwB;MAC/C;IACF;AAEA,aAAS,cAAc,WAAsB;AAC3C,YAAM,EAAE,QAAQ,YAAY,eAAA,IAAmB,eAAe;AAE9D,UAAI,UAAU,YAAY,aAAa;AACrC,cAAM,wBAAwB,eAAe,IAC3C,CAAA,gBAAa,YAAU,WAAA;AAGzB,cAAM,EACJ,gBAAgB,GAChB,WACA,aAAA,IACE,gBAAgB,gBAAgB,WAAW,UAAA;AAE/C,eACE,aAAa,MACb,mCAAmC,UAAU,EAAA,GAAK;AAGpD,YAAI,cAAc,eAAe;AAG/B,qCAA2B,MAAM,IAAI,UAAU,IAAI,SAAA;AAEnD,gBAAM,cACA,mBAAmB,gBAAgB,SAAA,MAC/B,eAAe,SAAS;AAClC,gBAAM,QAAQ,cACV,YAAY,gBACZ,gBAAgB;AAEpB,gBAAM,aAAa,oBAAoB;YACrC;YACA,QAAQ;YACR,kBAAkB;YAClB;YACA,SAAS;UACV,CAAA;AAED,cAAA,CAAK,eAAe,YAAY,UAAA,GAAa;AAC3C,sBAAU,UAAA;AAEV,2BAAe,MAAM,SAAS;AAE9B,kBAAM,UAAU,UAAA;AAEhB,+BACE,gBACA,YACA,gCAAgC,KAAA;UAEpC;QACF;MACF;IACF;AAEA,aAAS,YAAY,WAAsB;AACzC,YAAM,EAAE,QAAQ,YAAY,eAAA,IAAmB,eAAe;AAE9D,UAAI,UAAU,YAAY,aAAa;AACrC,cAAM,wBAAwB,eAAe,IAC3C,CAAA,gBAAa,YAAU,WAAA;AAGzB,cAAM,EACJ,gBAAgB,GAChB,WACA,UAAU,GACV,aAAA,IACE,gBAAgB,gBAAgB,WAAW,UAAA;AAE/C,YAAI,cAAc,eAAe;AAE/B,gBAAM,gBAAgB,2BAA2B,MAAM,IACrD,UAAU,EAAA;AAGZ,gBAAM,WACA,iBAAiB,QAAQ,iBAAiB,UACxC,gBACA;AAER,gBAAM,cACA,mBAAmB,gBAAgB,SAAA,MAC/B,eAAe,SAAS;AAClC,gBAAM,QAAQ,cAAc,YAAY,WAAW,WAAW;AAE9D,gBAAM,aAAa,oBAAoB;YACrC;YACA,QAAQ;YACR,kBAAkB;YAClB;YACA,SAAS;UACV,CAAA;AAED,cAAA,CAAK,eAAe,YAAY,UAAA,GAAa;AAC3C,sBAAU,UAAA;AAEV,2BAAe,MAAM,SAAS;AAE9B,kBAAM,UAAU,UAAA;AAEhB,+BACE,gBACA,YACA,gCAAgC,KAAA;UAEpC;QACF;MACF;IACF;AAEA,aAAS,aAAa,WAAsB;AAC1C,YAAM,EAAE,QAAA,UAAQ,eAAA,IAAmB,eAAe;AAElD,YAAM,EAAE,UAAA,IAAc,gBAAgB,gBAAgB,WAAW,QAAA;AAEjE,aACE,aAAa,MACb,mCAAmC,UAAU,EAAA,GAAK;AAGpD,aAAO;IACT;AAEA,aAAS,iBAAiB,WAAsB;AAC9C,YAAM,EAAE,QAAA,UAAQ,eAAA,IAAmB,eAAe;AAElD,YAAM,EACJ,gBAAgB,GAChB,aACA,UAAA,IACE,gBAAgB,gBAAgB,WAAW,QAAA;AAE/C,UAAA,CAAK,YACH,QAAO;AAGT,UAAI,cAAA,OACF,QAAO,UAAU,YAAY,gBAAgB,UAAU,YAAY;UAGnE,QAAO,cAAc;IAEzB;AAEA,aAAS,gBAAgB,WAAsB;AAC7C,YAAM,EAAE,QAAA,UAAQ,eAAA,IAAmB,eAAe;AAElD,YAAM,EACJ,gBAAgB,GAChB,aACA,UAAA,IACE,gBAAgB,gBAAgB,WAAW,QAAA;AAE/C,aACE,aAAa,MACb,mCAAmC,UAAU,EAAA,GAAK;AAGpD,aAAA,CAAQ,eAAe,YAAY;IACrC;AAEA,6BAAyB;MACvB;MACA,WAAW,UAAU;MACrB;MACA;MACA;MACA,sBAAAF;MACA,aAAAE;MACA;MACA;MACA;MACA,mBAAmB;MAEnB;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;AAED,aAAS,mBAAmB,gBAA6B,WAAsB;AAC7E,aAAO,eAAe,UACpB,CAAA,kBACE,kBAAkB,aAAa,cAAc,OAAO,UAAU,EAAA;IAEpE;AAEA,aAAS,gBACP,gBACA,WACA,UACA;AACA,YAAM,aAAa,mBAAmB,gBAAgB,SAAA;AAEtD,YAAM,cAAc,eAAe,eAAe,SAAS;AAC3D,YAAM,eAAe,cACjB,CAAC,aAAa,GAAG,UAAU,IAC3B,CAAC,YAAY,aAAa,CAAC;AAE/B,YAAM,YAAY,SAAO,UAAA;AAEzB,aAAO;QACL,GAAG,UAAU;QACb;QACA;MACF;IACF;;0BAIE,YAgBY,MAAA,SAAA,GAAA;QAfT,KAAK,MAAA,UAAA;QACL,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,OAAK,eAAA;;yBAAgD,MAAA,SAAA,MAAS,eAAA,QAAA;;;;;QAO/D,oBAAiB;QAChB,oBAAkB,MAAA,SAAA;QAClB,uBAAqB,MAAA,OAAA;;yBAEtB,MAAyB,CAAzB,WAAyB,KAAA,QAAA,WAAA,EAAlB,QAAQ,OAAA,MAAM,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/pBzB,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAiBd,UAAM,oBAAoB,wBAAA;AAC1B,QAAI,sBAAsB,KACxB,OAAM,IAAI,MACR,4EAAA;AAIJ,UAAM,EAAE,eAAe,aAAa,cAAc,eAAe,kBAAkB,aAAAC,cAAa,SAAS,4BAA4B,eAAe,gBAAA,IAAoB;AACxK,UAAM,UAAUC,OAAMF,OAAM,IAAI,qBAAA;AAEhC,UAAM,eAAe,SAAS,OAAO;MACnC,WAAW;QACT,YAAY,MAAM,MAAM,UAAA;QACxB,UAAU,MAAM,MAAM,QAAA;QACtB,UAAU,IAAI,SAAS,MAAM,UAAU,GAAG,IAAA;MAC3C;MACD,aAAa;QACX,eAAeA,OAAM,iBAAiB,OAAO,WAAWA,OAAM,cAAc,QAAQ,SAAA,CAAU;QAC9F,aAAaA,OAAM;QACnB,aAAaA,OAAM;QAGnB,SAASA,OAAM;QACf,SAASA,OAAM;MAChB;MACD,IAAI;MACJ,eAAeA,OAAM,OAAA;MACrB,OAAOA,OAAM;IACd,EAAA;AAED,UAAM,MAAM,aAAa,MAAM,aAAa,CAAC,aAAa,oBAAoB;AAG5E,UACE,gBAAgB,kBAAkB,YAAY,iBAC3C,gBAAgB,gBAAgB,YAAY,eAC5C,gBAAgB,YAAY,YAAY,WACxC,gBAAgB,YAAY,YAAY,QAE3C,4BAA2B,aAAa,OAAO,eAAA;IAElD,GAAE,EAAE,MAAM,KAAM,CAAA;AAEjB,cAAU,MAAM;AACd,oBAAc,aAAa,KAAA;IAC5B,CAAA;AAED,gBAAY,MAAM;AAChB,sBAAgB,aAAa,KAAA;IAC9B,CAAA;AAED,UAAM,QAAQ,SAAS,MAAM,cAAc,aAAa,OAAOA,OAAM,WAAA,CAAY;AAGjF,UAAM,cAAc,SAAS,MAAM,iBAAiB,aAAa,KAAA,CAAM;AACvE,UAAM,aAAa,SAAS,MAAA,CAAO,YAAY,KAAA;AAE/C,aAAS,WAAW;AAClB,oBAAc,aAAa,KAAA;IAC7B;AAEA,aAAS,SAAS;AAChB,kBAAY,aAAa,KAAA;IAC3B;AAEA,aAAS,OAAOG,OAAc;AAC5B,MAAAF,aAAY,aAAa,OAAOE,KAAA;IAClC;AAEA,aAAa;MAEX;MAEA;MAEA,UAAU;AACR,eAAO,aAAa,aAAa,KAAA;MAClC;MAED;MAEA;MAEA;IACD,CAAA;;0BAIC,YAmBY,MAAA,SAAA,GAAA;QAlBT,IAAI,MAAA,OAAA;QACJ,OAAK,eAAE,MAAA,KAAA;QACP,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,cAAW;QACV,0BAAwBC,KAAAA,eAAAA;QACxB,uBAAqB,MAAA,OAAA;QACrB,iBAAe,MAAA,OAAA;QACf,mBAAkB,OAAO,WAAU,GAAI,MAAA,MAAM,QAAA,EAAQ,EAAI,QAAO,CAAA;QAChE,cAAYA,KAAAA,cAAc,YAAA,QAAW,cAAA,aAAA;;yBAEtC,MAME,CANF,WAME,KAAA,QAAA,WAAA;UALC,aAAc,YAAA;UACd,YAAa,WAAA;UACL;UACE;UACF;;;;;;;;;;;;;;;;;;;;AEtLf,SAAgB,uCAAuC,EACrD,UACA,UACA,eACA,kBAAA,GAMO;AACP,cAAY,CAAC,cAAc;AACzB,UAAM,qBAAqB,kBAAkB;AAC7C,QAAI,SAAS,SAAS,cAAc,UAAU,QAAQ,uBAAuB,KAC3E;AAEF,UAAM,gBAAgB,uBAAuB,UAAU,kBAAA;AACvD,QAAI,iBAAiB,KACnB;AAEF,UAAM,YAAY,CAACC,UAAyB;;AAC1C,UAAI,MAAM,iBACR;AAEF,cAAQ,MAAM,KAAd;QACE,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK,QAAQ;AACX,gBAAM,eAAA;AAEN,8BAAc,UAAd,uCAAsB;AACtB;QACD;QACD,KAAK,MAAM;AACT,gBAAM,eAAA;AAEN,gBAAM,UAAU,cAAc,aAAa,qBAAA;AAC3C,iBAAO,OAAA;AAEP,gBAAM,UAAU,gCACd,SACA,kBAAA;AAEF,gBAAM,QAAQ,4BACZ,SACA,UACA,kBAAA;AAGF,iBAAO,UAAU,IAAA;AAEjB,gBAAM,YAAY,MAAM,WACpB,QAAQ,IACN,QAAQ,IACR,QAAQ,SAAS,IACnB,QAAQ,IAAI,QAAQ,SAClB,QAAQ,IACR;AAEN,gBAAM,aAAa,QAAQ,SAAA;AAC3B,qBAAW,MAAA;AAEX;QACD;MACF;IACF;AAED,kBAAc,iBAAiB,WAAW,SAAA;AAC1C,cAAU,MAAM;AACd,oBAAc,oBAAoB,WAAW,SAAA;IAC9C,CAAA;EACF,CAAA;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CD,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,EAAE,SAAA,IAAa,OAAOA,MAAA;AAE5B,UAAM,oBAAoB,wBAAA;AAC1B,QAAI,sBAAsB,KACxB,OAAM,IAAI,MACR,6EAAA;AAIJ,UAAM,EACJ,WACA,SACA,sBAAsB,qCACtB,eACA,cACA,kBAAA,IACE;AAEJ,UAAM,iBAAiBC,OAAMD,OAAM,IAAI,6BAAA;AACvC,UAAM,QAAQ,IAAwB,UAAA;AACtC,UAAM,YAAY,IAAI,KAAA;AACtB,UAAM,gBAAgB,IAA0B,IAAA;AAChD,UAAM,EAAE,OAAO,UAAA,IAAc,OAAOA,MAAA;AACpC,UAAM,QAAQ,SAAS,SAAA;AAEvB,UAAM,UAAU,MAAM;AACpB,UAAA,CAAK,UACH;AACF,UAAI,SAAS,MACX,eAAc,QAAQ;UAEtB,eAAc,QAAQ,oCAAoC,cAAA;IAC7D,GAAE,EAAE,WAAW,KAAM,CAAA;AAEtB,gBAAY,CAAC,cAAc;;AACzB,UAAI,SAAS,SAAS,cAAc,UAAU,KAC5C;AAEF,YAAM,UAAU,eAAe;AAC/B,UAAA,CAAK,QACH;AAEF,aAAO,OAAA;AAEP,YAAM,wBAAwB,CAC5B,QACA,UACA,UACG;;AACH,YAAI,SACF,SAAQ,QAAR;UACE,KAAK,QAAQ;AACX,kBAAM,QAAQ;AAEd,0BAAc,gBAAgB,KAAA;AAC9B,kBAAM,YAAY,IAAA;AAClB;UACF;UACA,KAAK,QAAQ;AACX,gBAAI,MAAM,UAAU,OAClB,OAAM,QAAQ;AAEhB,aAAAE,MAAA,cAAc,UAAd,gBAAAA,IAAA,oBAAsB;AACtB;UACF;UACA,KAAK,MAAM;AACT,kBAAM,QAAQ;AAEd,yBAAA;AACA,kBAAM,YAAY,KAAA;AAClB;UACF;QACF;YAGA,OAAM,QAAQ;MAElB;AAEA,gBAAU,qBACR,gBACA,SACA,WACA;QAEE,UAAQ,KAAAF,OAAM,mBAAN,mBAAsB,WAAU;QAExC,QAAM,KAAAA,OAAM,mBAAN,mBAAsB,SAAQ;MACrC,GACD,OACA,qBAAA,CACD;IACF,CAAA;AAED,2CAAuC;MACrC;MACA;MACA,UAAU;MACV;IACD,CAAA;;0BAIC,YAwBY,MAAA,SAAA,GAAA;QAvBT,IAAI,MAAA,cAAA;QACJ,KAAK,MAAA,UAAA;QACL,OAAO;;;QAGP;QACA,IAAIG,KAAAA;QACJ,YAAUC,KAAAA;QACX,MAAK;QACL,sBAAmB;QAClB,UAAUC,KAAAA;QACV,cAAY,MAAA;QACZ,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,oBAAkB,MAAA,SAAA;QAClB,uBAAqB,MAAA,OAAA;QACrB,6BAA2B,MAAA,UAAK,SAAA,YAA0B,UAAA,QAAS,aAAA;QACnE,4BAA0B,MAAA;QAC1B,oCAAA,CAAmC,MAAA,QAAA;QACnC,+BAA8B,MAAA,cAAA;QAC9B,QAAI,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,UAAA,QAAS;QACf,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,UAAA,QAAS;;yBAEjB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhIZ,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAkC,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAItC,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AA6Bd,UAAM,EAAE,KAAK,SAAS,aAAa,iBAAiB,OAAA,IAAW,OAAOA,MAAA;AACtE,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,oBAAoB,IAAsB,oBAAI,IAAA,CAAA;AAEpD,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM;MACpB,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,yBAAyB,SAAS,MAAM,MAAM,KAAK,kBAAkB,KAAA,CAAM;AAEjF,UAAM,cAAc,SAAS,MAAM,WAAW,UAAU,CAAA;AACxD,UAAM,aAAa,SAAS,MAAM,WAAW,UAAU,uBAAuB,MAAM,MAAA;AAEpF,UAAM,aAAa,SAAS,MAAM,kBAAkB,MAAM,IAAA;AAE1D,aAAS,SAAS,MAAc;AAC9B,UAAI,OAAO,WAAW,MACpB;AAEF,UAAI,OAAO,EACT;AAEF,UAAI,kBAAkB,MAAM,QAAA,CAAA,CAAU,uBAAuB,MAAM,IAAA,KAAA,CAAA,CAAW,uBAAuB,MAAM,IAAA,EAAM,aAAa,UAAA,EAC5H;AAEF,UAAI,OAAO,OACT;YAAI,QAAQ,WAAW,SAAS,KAAK,EACnC;MAAK;AAGT,iBAAW,QAAQ;IACrB;AAEA,aAAS,WAAW;AAClB,gBAAU,WAAW,SAAS,KAAK,CAAA;IACrC;AAEA,aAAS,WAAW;AAClB,gBAAU,WAAW,SAAS,KAAK,CAAA;IACrC;AAEA,aAAS,UAAU;AACjB,cAAQ,WAAW,SAAS,KAAK,WAAW;IAC9C;AAEA,aAAS,UAAU;AACjB,cAAQ,WAAW,SAAS,KAAK;IACnC;AAEA,UAAM,kBAAkB,IAAwB,IAAA;AAChD,UAAM,kBAAkB,IAAwB,IAAA;AAChD,UAAM,iBAAiB,SAAS,MAAM,gBAAgB,QAAQ,gBAAgB,MAAM,aAAa,UAAA,MAAgB,KAAK,IAAA;AACtH,UAAM,iBAAiB,SAAS,MAAM,gBAAgB,QAAQ,gBAAgB,MAAM,aAAa,UAAA,MAAgB,KAAK,IAAA;AAEtH,UAAM,YAAY,YAAY;AAC5B,YAAM,SAAS,MAAM;AACnB,wBAAgB,QAAQ,uBAAuB,MAAM,UAAU,WAAW,QAAS,uBAAuB,MAAM,SAAS,uBAAuB,MAAM,WAAW,KAAA,IAAU;AAC3K,wBAAgB,QAAQ,uBAAuB,MAAM,UAAU,WAAW,QAAS,IAAI,uBAAuB,MAAM,WAAW,QAAS,CAAA,IAAK;MAC9I,CAAA;IACF,CAAA;AACD,UAAM,wBAAwB,YAAY;AACxC,YAAM,SAAS,MAAM;AACnB,wBAAgB,QAAQ,uBAAuB,MAAM,UAAU,WAAW,QAAS,uBAAuB,MAAM,SAAS,uBAAuB,MAAM,WAAW,KAAA,IAAU;AAC3K,wBAAgB,QAAQ,uBAAuB,MAAM,UAAU,WAAW,QAAS,IAAI,uBAAuB,MAAM,WAAW,QAAS,CAAA,IAAK;MAC9I,CAAA;IACF,CAAA;AAED,8BAA0B;MACxB;MACA,kBAAkB,CAAC,UAAkB;AACnC,mBAAW,QAAQ;MACpB;MACD,aAAa;MACb;MACA;MACA;IACD,CAAA;AAED,aAAa;MACX;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACD,CAAA;AAED,qBAAA;;0BAIE,YAoCY,MAAA,SAAA,GAAA;QAnCV,MAAK;QACL,cAAW;QACV,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,eAAa,MAAA,MAAA,IAAM,KAAA;QACnB,oBAAkBC,KAAAA;;yBAEnB,MAYE,CAZF,WAYE,KAAA,QAAA,WAAA;UAXC,YAAa,MAAA,UAAA;UACb,YAAa,kBAAA,MAAkB;UAC/B,gBAAkB,eAAA;UAClB,gBAAkB,eAAA;UAClB,aAAe,YAAA;UACf,YAAc,WAAA;UACF;UACD;UACA;UACD;UACA;YAGb,gBAaM,OAbNC,aAWC,WACM,gBAAG,MAAA,UAAA,CAAU,IAAG,SAAI,gBAAG,kBAAA,MAAkB,IAAA,GAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;AE7MxD,IAAa,CAAC,0BAA0B,yBAAA,IAA6B,cAAkC,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBvG,UAAMC,SAAQ;AAYd,UAAM,EAAE,UAAU,MAAM,UAAA,IAAc,OAAOA,MAAA;AAE7C,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,cAAc,yBAAA;AAEpB,UAAM,UAAUC,OAAA,QAAiB,yBAAA;AACjC,UAAM,gBAAgBA,OAAA,QAAiB,+BAAA;AAEvC,UAAM,YAAY,SAAS,MAAM;AAC/B,UAAI,UAAU,MACZ,QAAO;AACT,UAAI,YAAY,WAAW,UAAU,KAAK,MACxC,QAAO;AACT,UAAI,YAAY,WAAW,QAAS,KAAK,MACvC,QAAO;AACT,aAAO;IACR,CAAA;AAED,UAAM,cAAc,SAAS,MAAM;AACjC,UAAI,SAAS,MACX,QAAO;AACT,UAAI,YAAY,OAAO,MACrB,QAAO,KAAK,SAAS,YAAY,WAAW,SAAU,KAAK,UAAU,YAAY,WAAW,QAAS;AAEvG,aAAO;IACR,CAAA;AAED,8BAA0B;MACxB;MACA;MACA,OAAO;MACP;MACA;MACA;IACD,CAAA;;0BAIC,YAWY,MAAA,SAAA,GAAA;QAVT,KAAK,MAAA,UAAA;QACL,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,gBAAc,UAAA,UAAS,WAAA,SAAA;QACvB,cAAY,UAAA;QACZ,UAAU,MAAA,QAAA,KAAQ,CAAK,YAAA,QAAW,KAAA;QAClC,iBAAe,MAAA,QAAA,KAAQ,CAAK,YAAA,QAAW,KAAA;QACvC,oBAAkB,MAAA,WAAA,EAAY,YAAY;;yBAE3C,MAA2B,CAA3B,WAA2B,KAAA,QAAA,WAAA,EAApB,OAAO,UAAA,MAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnF3B,UAAMC,SAAQ;AAEd,qBAAA;AACA,UAAM,cAAc,yBAAA;;0BAIlB,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACZ,IAAI,MAAA,WAAA,EAAY,cAAA,CAAA,GAAA;yBAEjB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AEXZ,UAAMC,SAAQ;AASd,UAAM,cAAc,yBAAA;AACpB,qBAAA;;0BAIE,YAMY,MAAA,SAAA,GAAA,eAAA,mBALFA,MAAA,CAAK,GAAA;yBAEb,MAEO,CAFP,WAEO,KAAA,QAAA,WAAA,EAFA,MAAM,MAAA,WAAA,EAAY,KAAK,MAAA,GAA9B,MAEO,CAAA,gBAF8B,WAC9B,gBAAG,MAAA,WAAA,EAAY,KAAK,KAAA,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBpC,UAAMC,SAAQ;AAEd,UAAM,cAAc,yBAAA;AACpB,UAAM,cAAc,yBAAA;AAEpB,qBAAA;;0BAIE,YAOY,MAAA,iBAAA,GAPZ,WACUA,QAAK;QACb,YAAA;QACC,aAAa,MAAA,WAAA,EAAY,YAAY;QACrC,cAAY,MAAA,WAAA,EAAY,MAAM;;yBAE/B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEfZ,UAAMC,SAAQ;AACd,UAAM,cAAc,yBAAA;AACpB,qBAAA;;0BAIE,YAKY,MAAA,SAAA,GALZ,WACUA,QAAK,EACZ,IAAI,MAAA,WAAA,EAAY,QAAA,CAAA,GAAA;yBAEjB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AEHZ,UAAM,cAAc,yBAAA;AACpB,UAAM,cAAc,yBAAA;AAEpB,UAAM,MAAM,OAAA;AACZ,UAAM,eAAe,SAAS,MAAM,MAAM,KAAK,YAAY,kBAAkB,KAAA,CAAM;AAEnF,aAAS,gBAAgB,OAAmB;AAC1C,UAAI,YAAY,SAAS,MACvB;AACF,UAAI,YAAY,OAAO,OACrB;YAAI,YAAY,KAAK,SAAS,YAAY,WAAW,SAAU,YAAY,KAAK,UAAU,YAAY,WAAW,QAAS,GACxH;cAAI,MAAM,YAAY,OAAO;AAC3B,wBAAY,iBAAiB,YAAY,KAAK,KAAA;AAC9C;UACF;;MACF,WAGI,MAAM,YAAY,OAAO;AAC3B,oBAAY,iBAAiB,YAAY,KAAK,KAAA;AAC9C;MACF;AAIF,YAAM,eAAA;IACR;AAEA,aAAS,cAAc,OAAsB;AAC3C,YAAM,eAAA;AAEN,UAAI,YAAY,SAAS,MACvB;AAEF,WAAK,MAAM,QAAQ,IAAI,SAAS,MAAM,QAAQ,IAAI,UAAA,CAAW,MAAM,WAAA,CAAY,MAAM,SACnF,aAAY,iBAAiB,YAAY,KAAK,KAAA;AAEhD,UAAI;QAAC,IAAI;QAAY,IAAI;QAAa,IAAI;QAAU,IAAI;MAAW,EAAC,SAAS,MAAM,GAAA,EACjF,oBAAmB,OAAO,iBAAA,GAAkB,QAA4B;QACtE,YAAY,aAAa;QACzB,OAAO;QACP,MAAM;QACN,iBAAiB,YAAY,YAAY;QACzC,KAAK,YAAY,IAAI;MACtB,CAAA;IAEL;AAEA,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,cAAU,MAAM;AACd,kBAAY,kBAAkB,MAAM,IAAI,eAAe,KAAA;IACxD,CAAA;AAED,gBAAY,MAAM;AAChB,kBAAY,kBAAkB,MAAM,OAAO,eAAe,KAAA;IAC3D,CAAA;;0BAIC,YAgBY,MAAA,SAAA,GAAA;QAfT,KAAK,MAAA,UAAA;QACL,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,IAAIA,KAAAA;QACJ,YAAUC,KAAAA;QACV,cAAY,MAAA,WAAA,EAAY,MAAM;QAC9B,UAAU,MAAA,WAAA,EAAY,SAAS,SAAA,CAAU,MAAA,WAAA,EAAY,YAAY,QAAK,KAAA;QACtE,iBAAe,MAAA,WAAA,EAAY,SAAS,SAAA,CAAU,MAAA,WAAA,EAAY,YAAY,QAAK,KAAA;QAC3E,oBAAkB,MAAA,WAAA,EAAY,YAAY;QAC1C,UAAU,MAAA,WAAA,EAAY,YAAY,QAAK,IAAA;QACvC,oBAAkB,MAAA,WAAA,EAAY;QAC9B,mBAAiB,MAAA,WAAA,EAAY;QAC7B,aAAS,cAAO,iBAAe,CAAA,MAAA,CAAA;QAC/B,WAAO,SAAiC,eAAa;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA,CAAA;;yBAEtD,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;AEhEZ,IAAa,CAAC,yBAAyB,wBAAA,IACnC,cAAiC,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASrC,UAAMC,SAAQ;AAKd,UAAM,OAAO;AASb,UAAM,EAAE,SAAA,IAAa,OAAOA,MAAA;AAE5B,UAAM,aAAa,UAAUA,QAAO,cAAc,MAAM;MACtD,cAAcA,OAAM;MACpB,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,aAAS,cAAc;AACrB,UAAI,SAAS,MACX;AAEF,iBAAW,QAAA,CAAS,WAAW;IACjC;AAEA,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,gBAAgB,eAAe,cAAA;AACrC,UAAM,YAAY,SAAS,MAAA;;AAAM,aAAAA,OAAM,MAAM,eAAe,SAAS,cAAS,cAAc,SAASA,OAAM,EAAA,IAAM,MAA5C,mBAAoE,YAAA;KAAA;AAEzI,6BAAyB;MACvB;MACA;MACA;IACD,CAAA;;0BAIC,YA6BY,MAAA,SAAA,GA7BZ,WACUC,KA4BE,QA5BI;QACb,IAAIC,KAAAA;QACJ,KAAK,MAAA,UAAA;QACN,MAAK;QACJ,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,OAAOC,KAAAA;QACP,cAAYH,KAAAA,OAAM,YAAA,KAAkB,UAAA;QACpC,gBAAc,MAAA,UAAA;QACd,iBAAeI,KAAAA;QACf,cAAY,MAAA,UAAA,IAAU,YAAA;QACtB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,YAAUC,KAAAA;QACV,IAAIH,KAAAA;QACJ,UAAU,MAAA,QAAA;QACV,SAAO;QACP,WAAO,SAAA,cAAgB,aAAW,CAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;;yBAEnC,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,GAGtB,MAAA,aAAA,KAAiBI,KAAAA,QAAAA,UAAAA,GADzB,YAQE,MAAA,2BAAA,GAAA;;UANA,MAAK;UACJ,MAAMA,KAAAA;UACN,UAAU,MAAA,QAAA;UACV,UAAUF,KAAAA;UACV,OAAOD,KAAAA;UACP,SAAA,CAAA,CAAW,MAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7FlB,UAAM,cAAc,wBAAA;AAEpB,qBAAA;;;0BAIE,YAOY,MAAA,SAAA,GAAA;QANT,gBAAY,WAAA,WAAA,EAAY,eAAZ,mBAAwB,SAAK,YAAA;QACzC,iBAAe,MAAA,WAAA,EAAY,SAAS,QAAK,KAAA;QACzC,YAAUI,KAAAA;QACV,IAAIC,KAAAA;;yBAEL,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;AE2BZ,IAAa,CAAC,uBAAuB,sBAAA,IACjC,cAA+B,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnC,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AASd,UAAM,EAAE,aAAa,eAAe,KAAK,QAAA,IAAY,OAAOA,MAAA;AAC5D,UAAM,MAAM,aAAa,OAAA;AACzB,qBAAA;AAEA,UAAM,aAAa,UAA+DA,QAAO,cAAc,OAAO;MAC5G,cAAcA,OAAM;MACpB,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,WAAW,IAAA;AAEjB,2BAAuB;MACrB;MACA,kBAAkB,CAAC,UAA0B;AAC3C,mBAAW,QAAQ;MACpB;MACD;MACA;MACA;MACA,gBAAgBA,OAAM;MACtB,QAAQC,OAAA,QAAiB,WAAA;MACzB;IACD,CAAA;;0BAIC,YAOY,MAAA,SAAA,GAAA;QANT,KAAK,MAAA,GAAA;QACL,oBAAkB,MAAA,WAAA;QAClB,YAAUC,KAAAA;QACV,IAAIC,KAAAA;;yBAEL,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,CAAA,CAAA;;;;;;;;;;;;;;AExGlC,SAAgBC,eAAcC,QAAgBC,OAAuB;AACnE,SAAO,GAAG,MAAA,YAAkB,KAAA;AAC7B;AAED,SAAgBC,eAAcF,QAAgBC,OAAuB;AACnE,SAAO,GAAG,MAAA,YAAkB,KAAA;AAC7B;;;;;;;;;;;;;;;;;;;;;;;;ACeD,UAAME,SAAQ;AAEd,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,cAAc,sBAAA;AACpB,UAAM,YAAY,SAAS,MAAMC,eAAc,YAAY,QAAQD,OAAM,KAAA,CAAM;AAC/E,UAAM,YAAY,SAAS,MAAME,eAAc,YAAY,QAAQF,OAAM,KAAA,CAAM;AAE/E,UAAM,aAAa,SAAS,MAAMA,OAAM,UAAU,YAAY,WAAW,KAAA;AAEzE,UAAM,+BAA+B,IAAI,WAAW,KAAA;AAEpD,cAAU,MAAM;AACd,4BAAsB,MAAM;AAC1B,qCAA6B,QAAQ;MACtC,CAAA;IACF,CAAA;;0BAIC,YAsBW,MAAA,gBAAA,GAAA;QApBR,SAASG,KAAAA,cAAc,WAAA;QACxB,eAAA;;yBAEA,CAgBY,EApBF,QAAA,MAAO,CAIjB,YAgBY,MAAA,SAAA,GAAA;UAfT,IAAI,UAAA;UACJ,KAAK,MAAA,UAAA;UACL,YAAUC,KAAAA;UACV,IAAIC,KAAAA;UACL,MAAK;UACJ,cAAY,WAAA,QAAU,WAAA;UACtB,oBAAkB,MAAA,WAAA,EAAY,YAAY;UAC1C,mBAAiB,UAAA;UACjB,QAAA,CAAS;UACV,UAAS;UACR,OAAK,eAAA,EAAA,mBAA+B,6BAAA,QAA4B,OAAA,OAAA,CAAA;;2BAIjE,MAAgE,EAApD,MAAA,WAAA,EAAY,cAAc,QAAQ,UAAO,QAArD,WAAgE,KAAA,QAAA,WAAA,EAAA,KAAA,EAAA,CAAA,IAAA,mBAAA,QAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjDtE,UAAMC,SAAQ;AACd,UAAMC,WAAU,sBAAA;AAChB,qBAAA;AAMA,UAAM,YAAY,IAAA;AAClB,UAAM,iBAAiB,IAAoB;MACzC,MAAM;MACN,UAAU;IACX,CAAA;AAED,UAAM,MAAM,CAACA,SAAQ,WAAW,OAAOA,YAAA,gBAAAA,SAAS,IAAI,KAAM,GAAE,YAAY;AACtE,YAAM,SAAA;AACN,2BAAA;IACD,GAAE,EAAE,WAAW,KAAM,CAAA;AAEtB,sBAAkB,CAACA,SAAQ,UAAU,SAAU,GAAE,oBAAA;AAEjD,aAAS,uBAAuB;;AAC9B,gBAAU,SAAQ,KAAAA,SAAQ,SAAS,UAAjB,mBAAwB,cAAiC;AAE3E,UAAA,CAAK,UAAU,MACb;AAEF,UAAIA,SAAQ,YAAY,UAAU,aAChC,gBAAe,QAAQ;QACrB,MAAM,UAAU,MAAM;QACtB,UAAU,UAAU,MAAM;MAC5B;UAGA,gBAAe,QAAQ;QACrB,MAAM,UAAU,MAAM;QACtB,UAAU,UAAU,MAAM;MAC5B;IAEJ;;oBAKiB,eAAA,MAAe,SAAI,YAAA,UAAA,GADlC,YASY,MAAA,SAAA,GATZ,WASY,EAAA,KAAA,EAAA,GAPFD,QAAK,EACZ,OAAK;yCAA2C,eAAA,MAAe,IAAA;6CAAqD,eAAA,MAAe,QAAA;;yBAKpI,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhDZ,UAAME,SAAQ;AAGd,UAAM,EAAE,KAAA,IAAS,OAAOA,MAAA;AAExB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAMC,WAAU,sBAAA;AAEhB,IAAAA,SAAQ,WAAW;;0BAIjB,YAemB,MAAA,wBAAA,GAAA;QAdjB,YAAA;QACC,aAAa,MAAAA,QAAA,EAAQ,YAAY;QACjC,KAAK,MAAAA,QAAA,EAAQ,IAAI;QACjB,MAAM,MAAA,IAAA;;yBAEP,MAQY,CARZ,YAQY,MAAA,SAAA,GAAA;UAPT,KAAK,MAAA,UAAA;UACN,MAAK;UACJ,YAAUC,KAAAA;UACV,IAAIC,KAAAA;UACJ,oBAAkB,MAAAF,QAAA,EAAQ,YAAY;;2BAEvC,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBd,UAAMG,SAAQ;AAKd,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,cAAc,sBAAA;AAEpB,UAAM,YAAY,SAAS,MAAMC,eAAc,YAAY,QAAQD,OAAM,KAAA,CAAM;AAC/E,UAAM,YAAY,SAAS,MAAME,eAAc,YAAY,QAAQF,OAAM,KAAA,CAAM;AAE/E,UAAM,aAAa,SAAS,MAAMA,OAAM,UAAU,YAAY,WAAW,KAAA;;0BAIvE,YAyCkB,MAAA,uBAAA,GAAA;QAxChB,YAAA;QACC,WAAA,CAAYG,KAAAA;QACZ,QAAQ,WAAA;;yBAET,MAmCY,CAnCZ,YAmCY,MAAA,SAAA,GAAA;UAlCT,IAAI,UAAA;UACJ,KAAK,MAAA,UAAA;UACN,MAAK;UACJ,MAAMC,KAAAA,OAAE,WAAA,WAAA;UACR,IAAIA,KAAAA;UACJ,YAAUC,KAAAA;UACV,iBAAe,WAAA,QAAU,SAAA;UACzB,iBAAe,UAAA;UACf,cAAY,WAAA,QAAU,WAAA;UACtB,UAAUF,KAAAA;UACV,iBAAeA,KAAAA,WAAQ,KAAA;UACvB,oBAAkB,MAAA,WAAA,EAAY,YAAY;UAC1C,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAQ,UAAK;iBAAyMA,KAAAA,YAAY,MAAM,YAAO,MAAwB,OAAA,WAAA,EAAY,iBAAiBG,KAAAA,KAAAA;gBAAqG,OAAM,eAAA;;UAWxZ,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,SAAA,CAAA,WAAc,MAAA,WAAA,EAAY,iBAAiBA,KAAAA,KAAAA,GAAK,CAAA,SAAA,OAAA,CAAA;UACvD,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;kBAA0H,wBAAwB,MAAA,WAAA,EAAY,mBAAc;iBAA4B,WAAA,SAAA,CAAeH,KAAAA,YAAY,sBAAmC,OAAA,WAAA,EAAY,iBAAiBG,KAAAA,KAAAA;;;2BASzS,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AERd,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASxC,UAAMC,SAAQ;AAMd,UAAM,QAAQ;AASd,UAAM,EAAE,YAAY,UAAU,WAAW,KAAAC,MAAK,IAAI,KAAK,SAAS,WAAW,SAAA,IAAa,OAAOD,MAAA;AAC/F,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM;MACpB,SAAS;MACT,MAAM;IACP,CAAA;AAED,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,EAAE,QAAA,IAAY,eAAe,cAAA;AACnC,UAAM,gBAAgB,eAAe,cAAA;AAErC,UAAM,EAAE,UAAU,eAAA,IAAmB,cAAc,EAAE,YAAY,KAAM,CAAA;AAEvE,UAAM,kBAAkB,IAAA;AACxB,UAAM,iBAAiB,IAAI,KAAA;AAE3B,UAAM,oBAAoB,SAAS,MAAM,MAAM,QAAQ,WAAW,KAAA,IAAS,CAAC,GAAG,WAAW,KAAM,IAAG,CAAE,CAAA;AAErG,aAAS,gBAAgB,OAAe;AACtC,UAAI,UAAU,IAAI;AAChB,cAAM,aAAa,SAAA,EAAW,OAAO,CAAA,MAAK,EAAE,IAAI,QAAQ,aAAa,EAAA;AACrE,mBAAW,QAAQ,WAAW,MAAM,OAAO,CAAC,GAAG,MAAM,MAAM,KAAA;AAC3D,cAAM,aAAa,WAAW,KAAA,EAAO,KAAA;MACvC;IACF;AAEA,gCAA4B;MAC1B;MACA,YAAY,CAAC,aAAa;AACxB,cAAM,QAAQ,CAAC,GAAG,kBAAkB,KAAK;AACzC,cAAM,qBAAqB,MAAM,SAAS,KAAA,OAAY,MAAM,CAAA,MAAO;AACnE,cAAM,uBAAuB,MAAM,SAAS,KAAA,OAAYA,OAAM,aAAa,CAAA,MAAO;AAIlF,aAAK,sBAAsB,yBAAA,OAAgCA,OAAM,iBAAiB,WAChF,OAAM,IAAI,MAAM,0EAAA;AAClB,cAAM,UAAUA,OAAM,eAAeA,OAAM,aAAa,QAAA,IAAY;AAEpE,YAAK,MAAM,UAAUC,KAAI,SAAA,CAAA,CAAYA,KAAI,OAAO;AAC9C,gBAAM,WAAW,OAAA;AACjB,iBAAO;QACT;AAEA,YAAID,OAAM,WAAW;AACnB,qBAAW,QAAQ,CAAC,GAAG,OAAO,OAAO;AACrC,gBAAM,UAAU,OAAA;AAChB,iBAAO;QACT,OACK;AACH,gBAAM,QAAQ,MAAM,SAAS,OAAA;AAC7B,cAAA,CAAK,OAAO;AACV,uBAAW,QAAQ,CAAC,GAAG,OAAO,OAAO;AACrC,kBAAM,UAAU,OAAA;AAChB,mBAAO;UACT,MAEE,gBAAe,QAAQ;QAE3B;AACA,cAAM,WAAW,OAAA;AACjB,eAAO;MACR;MACD,eAAe;MACf,gBAAgB,CAAC,UAAU;AACzB,cAAM,SAAS,MAAM;AACrB,cAAM,aAAa,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA,EAAK,OAAO,CAAA,MAAK,EAAE,QAAQ,aAAa,EAAA;AACjF,YAAA,CAAK,WAAW,OACd;AACF,cAAM,UAAU,WAAW,GAAG,EAAA;AAC9B,gBAAQ,MAAM,KAAd;UACE,KAAK;UACL,KAAK,aAAa;AAChB,gBAAI,OAAO,mBAAmB,KAAK,OAAO,iBAAiB,EACzD;AAEF,gBAAI,gBAAgB,OAAO;AACzB,oBAAM,QAAQ,WAAW,UAAU,CAAA,MAAK,MAAM,gBAAgB,KAAA;AAC9D,8BAAgB,KAAA;AAChB,8BAAgB,QAAQ,gBAAgB,UAAU,UAAU,WAAW,GAAG,QAAQ,CAAA,IAAK,WAAW,GAAG,QAAQ,CAAA;AAC7G,oBAAM,eAAA;YACR,WACS,MAAM,QAAQ,aAAa;AAClC,8BAAgB,QAAQ;AACxB,oBAAM,eAAA;YACR;AACA;UACF;UACA,KAAK;UACL,KAAK;UACL,KAAK;UACL,KAAK,aAAa;AAChB,kBAAM,eAAgB,MAAM,QAAQ,gBAAgB,IAAI,UAAU,SAAW,MAAM,QAAQ,eAAe,IAAI,UAAU;AACxH,kBAAM,cAAA,CAAe;AAErB,gBAAI,OAAO,mBAAmB,KAAK,OAAO,iBAAiB,EACzD;AAGF,gBAAI,eAAA,CAAgB,gBAAgB,OAAO;AACzC,8BAAgB,QAAQ;AACxB,oBAAM,eAAA;YACR,WAES,gBAAgB,WAAW,gBAAgB,UAAU,SAAS;AACrE,8BAAgB,QAAA;AAChB,oBAAM,eAAA;YACR,WACS,gBAAgB,OAAO;AAC9B,oBAAM,KAAK,mBAAmB,OAAO,gBAAgB,OAAA,QAAkB;gBACrE,YAAY;gBACZ,MAAM;gBACN,KAAK,IAAI;cACV,CAAA;AACD,kBAAI,GACF,iBAAgB,QAAQ;AAC1B,oBAAM,eAAA;YACR;AACA;UACF;UACA,KAAK;UACL,KAAK,aAAa;AAChB,gBAAI,gBAAgB,MAClB,OAAM,eAAA;AACR;UACF;UACA;AACE,4BAAgB,QAAA;QAEpB;MACD;MACD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAC;MACA;MACA,cAAcD,OAAM;IACrB,CAAA;;0BAIC,YAoBiB,MAAA,cAAA,GAAA,MAAA;yBAnBf,MAkBY,CAlBZ,YAkBY,MAAA,SAAA,GAAA;UAjBT,KAAK,MAAA,UAAA;UACL,KAAK,MAAA,GAAA;UACL,IAAIE,KAAAA;UACJ,YAAUC,KAAAA;UACV,gBAAc,eAAA,QAAc,KAAA;UAC5B,iBAAe,MAAA,QAAA,IAAQ,KAAA;UACvB,gBAAc,MAAA,OAAA,IAAO,KAAA;;2BAEtB,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,GAGtB,MAAA,aAAA,KAAiBC,KAAAA,QAAAA,UAAAA,GADzB,YAME,MAAA,2BAAA,GAAA;;YAJC,MAAMA,KAAAA;YACN,OAAO,MAAA,UAAA;YACP,UAAUC,KAAAA;YACV,UAAU,MAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErPnB,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAMC,WAAU,2BAAA;AAEhB,aAAS,eAAe;AACtB,UAAIA,SAAQ,SAAS,MACnB;AACF,MAAAA,SAAQ,WAAW,QAAQ,CAAC;IAC9B;;0BAIE,YAOY,MAAA,SAAA,GAPZ,WACUD,QAAK;QACZ,MAAME,KAAAA,OAAE,WAAA,WAAA;QACR,iBAAe,MAAAD,QAAA,EAAQ,SAAS,QAAK,KAAA;QACrC,SAAO;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbZ,UAAME,SAAQ;AAId,UAAMC,WAAU,2BAAA;AAChB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,aAAS,WAAW,OAAc;AAChC,MAAAA,SAAQ,gBAAgB,QAAA;AAExB,UAAA,CAAKA,SAAQ,UAAU,MACrB;AAEF,YAAM,SAAS,MAAM;AACrB,UAAA,CAAK,OAAO,MACV;AAEF,YAAM,UAAUA,SAAQ,WAAW,OAAO,KAAA;AAC1C,UAAI,QACF,QAAO,QAAQ;IACnB;AAEA,aAAS,UAAU,OAAc;AAC/B,UAAA,CAAKA,SAAQ,SAAS,MACpB;AAEF,0BAAoB,KAAA;IACtB;AAEA,UAAM,cAAc,IAAI,KAAA;AACxB,aAAS,qBAAqB;AAC5B,kBAAY,QAAQ;IACtB;AACA,aAAS,mBAAmB;AAC1B,eAAS,MAAM;AACb,oBAAY,QAAQ;MACrB,CAAA;IACH;AACA,mBAAe,oBAAoB,OAAc;AAC/C,UAAI,YAAY,MACd;AACF,YAAM,SAAA;AAEN,UAAI,MAAM,iBACR;AAEF,YAAM,SAAS,MAAM;AACrB,UAAA,CAAK,OAAO,MACV;AAEF,YAAM,UAAUA,SAAQ,WAAW,OAAO,KAAA;AAC1C,UAAI,QACF,QAAO,QAAQ;AAGjB,YAAM,eAAA;IACR;AAEA,aAAS,YAAY,OAAmB;AACtC,MAAAA,SAAQ,eAAe,QAAQ;AAC/B,UAAI,MAAM,SAAS,KACjB;AAEF,YAAM,YAAYA,SAAQ,UAAU;AACpC,YAAM,mBAAmB,cAAc,MAAM,QAAS,qBAAqB,UAAU,UAAU,KAAK,MAAM,IAAA;AAC1G,UAAI,kBAAkB;AACpB,cAAM,SAAS,MAAM;AACrB,eAAO,QAAQ,OAAO,MAAM,QAAQ,WAAW,EAAA;AAE/C,YAAI,OAAO,MAAM,KAAA,MAAW,IAAI;AAC9B,iBAAO,QAAQ;AACf;QACF;AAEA,cAAM,UAAUA,SAAQ,WAAW,OAAO,KAAA;AAC1C,YAAI,QACF,QAAO,QAAQ;MACnB;IACF;AAEA,aAAS,YAAY,OAAuB;AAC1C,UAAIA,SAAQ,WAAW,OAAO;AAC5B,cAAM,eAAA;AACN,cAAM,gBAAgB,MAAM;AAC5B,YAAA,CAAK,cACH;AAEF,cAAM,QAAQ,cAAc,QAAQ,MAAA;AACpC,YAAIA,SAAQ,UAAU,OAAO;AAC3B,gBAAM,aAAa,MAAM,MAAMA,SAAQ,UAAU,KAAA;AACjD,qBAAW,QAAQ,CAAC,MAAM;AACxB,YAAAA,SAAQ,WAAW,CAAA;UACpB,CAAA;QACH,MAEE,CAAAA,SAAQ,WAAW,KAAA;MAEvB;IACF;AAEA,cAAU,MAAM;AACd,YAAM,UAAU,eAAe,MAAM,aAAa,UAC9C,eAAe,QACf,eAAe,MAAM,cAAc,OAAA;AAEvC,UAAA,CAAK,QACH;AAEF,iBAAW,MAAM;AAEf,YAAID,OAAM,UACR,oCAAS;MACZ,GAAE,CAAA;IACJ,CAAA;;;0BAIC,YAuBY,MAAA,SAAA,GAAA;QAtBT,KAAI,WAAAC,QAAA,EAAQ,OAAR,mBAAY;QAChB,KAAK,MAAA,UAAA;QACN,MAAK;QACL,cAAa;QACb,aAAY;QACZ,gBAAe;QACd,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACV,WAAWC,KAAAA;QACX,aAAaC,KAAAA;QACb,UAAU,MAAAJ,QAAA,EAAQ,SAAS;QAC3B,gBAAc,MAAAA,QAAA,EAAQ,eAAe,QAAK,KAAA;QAC1C,SAAO;QACP,WAAO;mBAAQ,qBAAmB,CAAA,OAAA,CAAA;mBACrB,WAAS,CAAA,KAAA,CAAA;UAEb,MAAAA,QAAA,EAAQ;;QADjB,QAAM;QAEN,oBAAkB;QAClB,kBAAgB;QAChB,SAAO;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;AEvIZ,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;;;;;;;;;AAOxC,UAAMK,SAAQ;AACd,UAAM,EAAE,MAAA,IAAU,OAAOA,MAAA;AAEzB,UAAMC,WAAU,2BAAA;AAChB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,EAAE,eAAA,IAAmB,cAAA;AAE3B,UAAM,aAAa,SAAS,MAAMA,SAAQ,gBAAgB,UAAU,eAAe,KAAA;AAEnF,UAAM,WAAW,SAAS,MAAMD,OAAM,YAAYC,SAAQ,SAAS,KAAA;AAEnE,UAAM,cAAc,4BAA4B;MAC9C;MACA;MACA;MACA,QAAQ;MACR,cAAc,SAAS,MAAMA,SAAQ,aAAa,MAAM,KAAA,CAAM;IAC/D,CAAA;;0BAIC,YAYiB,MAAA,cAAA,GAAA,EAZA,OAAO,MAAA,KAAA,EAAK,GAAA;yBAC3B,MAUY,CAVZ,YAUY,MAAA,SAAA,GAAA;UATT,KAAK,MAAA,UAAA;UACL,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,mBAAiB,MAAA,WAAA,EAAY;UAC7B,gBAAc,WAAA;UACd,iBAAe,SAAA,QAAQ,KAAA;UACvB,cAAY,WAAA,QAAU,WAAA;;2BAEvB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhDd,UAAMC,SAAQ;AAId,qBAAA;AACA,UAAMC,WAAU,2BAAA;AAChB,UAAM,cAAc,2BAAA;AAEpB,UAAM,WAAW,SAAS,MAAA;;AAAM,gCAAY,aAAZ,mBAAsB,UAASA,SAAQ,SAAS;KAAA;AAEhF,aAAS,eAAe;AACtB,UAAI,SAAS,MACX;AACF,YAAM,QAAQA,SAAQ,WAAW,MAAM,UAAU,CAAA,MAAK,QAAQ,GAAG,YAAY,MAAM,KAAA,CAAM;AACzF,MAAAA,SAAQ,cAAc,KAAA;IACxB;;0BAIE,YAWY,MAAA,SAAA,GAXZ,WAWY,EAVV,UAAS,KAAI,GACLD,QAAK;QACZ,mBAAiB,MAAA,WAAA,EAAY;QAC7B,gBAAc,MAAA,WAAA,EAAY,WAAW;QACrC,cAAY,MAAA,WAAA,EAAY,WAAW,QAAK,WAAA;QACxC,iBAAe,SAAA,QAAQ,KAAA;QACvB,MAAME,KAAAA,OAAE,WAAA,WAAA;QACR,SAAO;;yBAER,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhCZ,UAAMC,SAAQ;AAId,UAAM,cAAc,2BAAA;AACpB,qBAAA;AAEA,gBAAY,WAAZ,YAAY,SAAWC,OAAA,QAAiB,2BAAA;;0BAItC,YAKY,MAAA,SAAA,GALZ,WACUD,QAAK,EACZ,IAAI,MAAA,WAAA,EAAY,OAAA,CAAA,GAAA;yBAEjB,MAAiD,CAAjD,WAAiD,KAAA,QAAA,WAAA,CAAA,GAAjD,MAAiD,CAAA,gBAAA,gBAAxC,MAAA,WAAA,EAAY,aAAa,KAAA,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;AEuD3C,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;AAExC,SAAS,aAAa,OAAkB,OAAkB,0CAAM,0CAAA,CAAkB,GAAG;AACnF,MAAI,SAAS,SAAS,MACpB,QAAO;AAGT,SAAO,0CAAmB,MAAM,KAAA;AAClC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,UAAME,SAAQ;AAOd,UAAM,QAAQ;AAYd,UAAM,EAAE,UAAU,UAAU,aAAa,cAAc,UAAU,UAAU,KAAK,SAAS,QAAQ,WAAA,IAAe,OAAOA,MAAA;AACvH,UAAM,SAAS,UAAU,UAAA;AACzB,UAAM,MAAM,aAAa,OAAA;AAEzB,UAAM,YAAY,iBAAiB,OAAO,OAAO,EAC/C,WAAW,mBAAmBA,OAAM,SAAA,EACrC,CAAA;AACD,UAAM,EAAE,kBAAkB,gBAAgB,cAAA,IACtC,oBAAA;AACJ,UAAM,kBAAkB,IAAsB,oBAAI,IAAA,CAAA;AAElD,UAAM,OAAO,SAAS,MAAM,kBAAkBA,MAAA,CAAM;AAEpD,UAAM,oBAAoB,SAAS,MAAM,SAAS,QAAQ,aAAa,SAAS,KAAA,IAAM,MAAA;AACtF,UAAM,oBAAoB,SAAS,MAAM,SAAS,QAAQ,aAAa,SAAS,KAAA,IAAM,MAAA;AAEtF,cAAU,MAAM;AACd,kCAA4B,cAAc,KAAA,EAAO,QAAQ,CAAA,SAAQ,gBAAgB,MAAM,IAAI,IAAA,CAAoB;IAChH,CAAA;AAED,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAc,aAAa;MAC3B,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,UAAM,sBAAsB,SAAS;MACnC,MAAM;AACJ,YAAI,UAAU,WAAW,KAAA,EACvB,QAAO,WAAW;AACpB,eAAO,aAAa,WAAW,KAAA;MAChC;MACD,IAAI,UAAU;;AACZ,YAAI,SACF,YAAW,QAAQ,WAAW,SAAS,SAAS,WAAW,QAAQ,WAAW,IAAI,yCAAK,SAAS,MAAM,SAAS,QAAQ,SAAS,SAAQ,gBAAW,UAAX,mBAAkB,WAAA;YAG1J,YAAW,QAAQ;AAErB,eAAO;MACR;IACF,CAAA;AAED,UAAM,cAAc,eAAe;MACjC,oBAAoBA,OAAM;MAC1B,cAAc,WAAW;IAC1B,CAAA;AAED,UAAM,cAAc,UAAUA,QAAO,eAAe,OAAO;MACzD,cAAcA,OAAM,sBAAsB,YAAY,KAAA;MACtD,SAAUA,OAAM,gBAAA;IACjB,CAAA;AAED,UAAM,uBAAuB,SAAS;MACpC,MAAM;AACJ,eAAO,aAAa,YAAY,KAAA;MACjC;MACD,IAAI,UAAU;;AACZ,YAAI,SACF,aAAY,QAAQ,SAAS,YAAY,QAAQ,SAAS,KAAA,IAAS,IAAI,yCAAK,SAAS,MAAM,SAAS,QAAQ,SAAS,SAAQ,iBAAY,UAAZ,mBAAmB,WAAA;AAClJ,eAAO;MACR;IACF,CAAA;AAED,UAAM,sBAAsB,SAAS,MAAM;AACzC,UAAI,YAAY,MACd,QAAO,YAAY;AAErB,aAAO;IACR,CAAA;AAED,UAAM,YAAY,SAAS,MAAM;AAC/B,UAAA,CAAK,WAAW,MACd,QAAO;AAET,UAAI,kBAAkB,SAAS,SAAS,oBAAoB,OAAO,kBAAkB,KAAA,EACnF,QAAO;AAET,UAAI,kBAAkB,SAAS,SAAS,kBAAkB,OAAO,oBAAoB,KAAA,EACnF,QAAO;AAET,aAAO;IACR,CAAA;AAED,UAAM,kBAAkB,4BAA4B,oBAAoB,KAAA;AAExE,UAAM,gBAAgB,IAAqB,WAAW,QAAQ,EAAE,GAAG,sBAAsB;MAAE,OAAO,oBAAoB;MAAO;IAAW,CAAA,EAAG,IAAG,EAAE,GAAG,gBAAiB,CAAA;AAEpK,UAAM,oBAAoB,SAAS,MAAM,cAAc;MACrD,aAAa,oBAAoB;MACjC,SAAS,qBAAqB;MAC9B;MACA,cAAcA,OAAM;MACpB,WAAWA,OAAM;MACjB,eAAe,cAAc;MAC7B;MACA,aAAa;IACd,CAAA,CAAC;AAEF,UAAM,kBAAkB,SAAS,MAAM,kBAAkB,MAAM,GAAA;AAE/D,UAAM,0BAA0B,SAAS,MAAM,gBAAgB,MAAM,OAAO,CAAC,EAAE,KAAA,MAAW,SAAS,SAAA,CAAU;AAE7G,UAAM,QAAQ,CAAC,UAAU;AACvB,UAAI,UAAU,UAAA,MAAgB,OAAO;AACnC,kBAAU,UAAU,KAAA;AAGpB,iBAAS,MAAM;AACb,0BAAgB,MAAM,MAAA;AACtB,sCAA4B,cAAc,KAAA,EAAO,QAAQ,CAAA,SAAQ,gBAAgB,MAAM,IAAI,IAAA,CAAoB;QAChH,CAAA;MACH;IACD,CAAA;AAED,UAAM,qBAAqB,CAAC,gBAAgB;AAC1C,UAAA,CAAK,UAAU,WAAA,MAAY,CAAM,0CAAW,qBAAqB,OAAO,WAAA,KAAgB,qBAAqB,MAAM,QAAQ,WAAA,MAAiB,GAC1I,aAAY,QAAQ,YAAY,KAAA;IACnC,CAAA;AAED,UAAM,CAAC,qBAAqB,MAAO,GAAE,CAAC,CAAC,WAAA,MAAiB;AACtD,UAAA,CAAK,UAAU,WAAA,EACb,eAAc,QAAQ,EAAE,GAAG,sBAAsB;QAAE,OAAO;QAAa;MAAW,CAAA,EAAE;eAG7E,OAAO,OAAO,cAAc,KAAA,EAAO,MAAM,CAAA,UAAS,UAAU,IAAA,KAAS,UAAU,WAAA,EACtF,eAAc,QAAQ,EAAE,GAAG,gBAAgB;IAE9C,CAAA;AAED,UAAM,wBAAwB,IAAwB,IAAA;AAEtD,UAAM,sBAAsB,SAAS,MACnC,MAAM,KAAK,gBAAgB,KAAA,EAAO,UAAU,CAAA,OAAA;;AAC1C,gBAAG,aAAa,8BAAA,QACZ,2BAAsB,UAAtB,mBAA6B,aAAa;KAA+B,CAAC;AAElF,UAAM,uBAAuB,SAAS,MAAM;AAC1C,YAAM,OAAO,IAAI,UAAU,QAAQ,KAAK;AACxC,YAAM,gBAAgB,OAAO,IAAI,oBAAoB,QAAQ,IAAI,oBAAoB,QAAQ,gBAAgB,MAAM,OAAO;AAC1H,UAAI,cACF,QAAO;AACT,YAAM,iBAAiB,MAAM,KAAK,gBAAgB,KAAA,EAAO,oBAAoB,QAAQ,IAAA;AACrF,aAAO;IACR,CAAA;AAED,UAAM,uBAAuB,SAAS,MAAM;AAC1C,YAAM,OAAO,IAAI,UAAU,QAAQ,KAAK;AACxC,YAAM,gBAAgB,OAAO,IAAI,oBAAoB,QAAQ,IAAI,oBAAoB,QAAQ,gBAAgB,MAAM,OAAO;AAC1H,UAAI,cACF,QAAO;AAET,YAAM,iBAAiB,MAAM,KAAK,gBAAgB,KAAA,EAAO,oBAAoB,QAAQ,IAAA;AACrF,aAAO;IACR,CAAA;AAED,UAAM,MAAM,OAAA;AAEZ,aAAS,cAAc,GAAkB;;AACvC,UAAA,CAAK,uBAAuB,EAAE,GAAA,EAC5B;AACF,UAAI,EAAE,QAAQ,IAAI,WAChB,4BAAqB,UAArB,mBAA4B;AAC9B,UAAI,EAAE,QAAQ,IAAI,YAChB,4BAAqB,UAArB,mBAA4B;IAChC;AAEA,aAAS,kBAAkB,IAAiB;AAC1C,4BAAsB,QAAQ;IAChC;AAEA,gCAA4B;MAC1B;MACA,YAAY;MACZ,aAAa;MACb;MACA;MACA,WAAWA,OAAM;MACjB;MACA;MACA;MACA;MACA,iBAAiB;MACjB,UAAU;MACV;MACA,YAAY;;AACV,mCAAqB,UAArB,mBAA4B;MAC7B;IACF,CAAA;AAED,aAAa,EAEX,kBACD,CAAA;;0BAIC,YA4BY,MAAA,SAAA,GA5BZ,WACUC,KA2BE,QA3BI;iBACV;QAAJ,KAAI;QACJ,MAAK;QACJ,iBAAe,MAAA,QAAA,IAAQ,OAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,iBAAe,MAAA,QAAA,IAAQ,KAAA;QACvB,gBAAc,UAAA,QAAS,KAAA;QACvB,KAAK,MAAA,GAAA;QACL,WAAO,SAAa,eAAa,CAAA,QAAA,OAAA,CAAA;;yBAElC,MAIE,CAJF,WAIE,KAAA,QAAA,WAAA;UAHC,YAAa,MAAA,UAAA;UACb,UAAU,gBAAA;UACV,WAAY,UAAA;YAGf,YAUE,MAAA,sBAAA,GAAA;UATC,IAAIC,KAAAA;UACL,IAAG;UACH,SAAQ;UACR,UAAS;UACR,OAAO,MAAA,UAAA,IAAa,MAAA,UAAA,EAAW,SAAA,IAAQ;UACvC,MAAMC,KAAAA;UACN,UAAU,MAAA,QAAA;UACV,UAAUC,KAAAA;UACV,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA;;AAAE,qCAAM,KAAK,gBAAA,KAAA,MAAX,mBAA0B,OAA1B,mBAAkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzUhD,UAAMC,SAAQ;AAEd,UAAM,cAAc,2BAAA;AAEpB,UAAM,eAAe,IAAI,IAAA;AACzB,UAAM,cAAc,IAAI,KAAA;AAExB,UAAM,EACJ,oBACA,sBACA,WAAA,IACE,aAAa;MACf;MACA;MACA,aAAa,YAAY;MACzB,WAAW,YAAY;MACvB,MAAM,YAAY;MAClB,eAAe,YAAY;MAC3B,WAAW,YAAY;MACvB,MAAMA,OAAM;MACZ,UAAU,YAAY;MACtB,UAAU,YAAY;MACtB,WAAW,YAAY;MACvB,YAAY,YAAY;IACzB,CAAA;AAED,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,KAAA;AACrD,UAAM,WAAW,SAAS,MAAM,YAAY,SAAS,KAAA;AACrD,UAAM,YAAY,SAAS,MAAM,YAAY,UAAU,KAAA;;0BAIrD,YAqBY,MAAA,SAAA,GArBZ,WAqBY;QApBT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;SACH,MAAA,UAAA,GAAU;QACjB,iBAAiB,SAAA,SAAY,SAAA,QAAQ,QAAWC,KAAAA,SAAI;QACpD,gCAA8BA,KAAAA;QAC9B,iBAAe,SAAA,QAAQ,OAAA;QACvB,iBAAe,SAAA,QAAQ,OAAA;QACvB,iBAAe,SAAA,QAAQ,KAAA;QACvB,gBAAc,UAAA,QAAS,KAAA;QACvB,gBAAc,UAAA,QAAS,OAAA;SACxB,WAAMA,KAOC,SAPG,YAAA;mBAAoC,MAAA,kBAAA;iBAAmC,MAAA,oBAAA;;AAA8C,uBAAA,QAAY;QAAA;kBAA2B,MAAa;AAAe,gBAAA,WAAA,EAAY,kBAAkB,EAAE,MAAA;;;yBASlO,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BEpDV,YAOY,MAAA,SAAA,GAAA;QANT,IAAIC,KAAAA;QACJ,YAAUC,KAAAA;QACX,oCAAiC;QAChC,gCAA8BC,KAAAA,WAAAA;;yBAE/B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;AEuBZ,IAAa,CAAC,4BAA4B,2BAAA,IACtC,cAAoC,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUxC,UAAMC,SAAQ;AAMd,UAAM,EAAE,OAAO,UAAU,gBAAgB,eAAA,IAAmB,OAAOA,MAAA;AACnE,kBAAc,EAAE,YAAY,KAAM,CAAA;AAElC,UAAM,WAAW,IAAA;AACjB,UAAM,aAAa,IAAI,CAAA;AACvB,UAAM,iCAAiC,IAAI,KAAA;AAC3C,UAAM,mBAAmB,IAAI,KAAA;AAE7B,QAAIA,OAAM,SAAA,OAAgBA,OAAM,UAAU,YAAA,CAAaA,OAAM,MAAM,KAAA,GAAQ;AACzE,YAAM,QAAQ;AACd,YAAM,IAAI,MAAM,KAAA;IAClB;AAEA,gCAA4B;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA,iBAAiB,IAAI;AACnB,iBAAS,QAAQ;MAClB;MACD,aAAa;AACX,mBAAW;MACZ;MACD,gBAAgB;AACd,mBAAW;MACZ;MACD;MACA;IAED,CAAA;;aAIC,WAAQ,KAAA,QAAA,SAAA;;;;;;;;;;AE1FV,UAAM,kBAAkB,2BAAA;AAExB,UAAM,cAAc,WAAW,GAAA;AAC/B,UAAM,qBAAqB,IAAI,KAAA;AAE/B,aAAS,MAAM;AACb,yBAAmB,QAAQ;IAC5B,CAAA;;aAIuB,MAAA,WAAA,KAAe,mBAAA,SAAA,UAAA,GAArC,YAGiB,MAAA,sBAAA,GAAA,EAAA,KAAA,EAAA,GAAA;yBAFf,MAAiC,CAAA,gBAAA,gBAA9B,MAAA,eAAA,EAAgB,MAAM,KAAA,IAAQ,KACjC,CAAA,GAAA,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AEpBZ,IAAa,oBAAoB;AACjC,IAAa,mBAAmB;AAChC,IAAa,qBAAqB;AAClC,IAAa,kBAAkB;AAI/B,IAAa,iBAAiB;AAC9B,IAAa,kBAAkB;AAS/B,SAAgBC,8BAIdC,MACAC,SACAC,QAGA;AACA,QAAM,gBAAgB,OAAO,cAAc;AAC3C,QAAM,QAAQ,IAAI,YAAY,MAAM;IAClC,SAAS;IACT,YAAY;IACZ;EACD,CAAA;AACD,MAAI,QACF,eAAc,iBAAiB,MAAM,SAA0B,EAAE,MAAM,KAAM,CAAA;AAE/E,gBAAc,cAAc,KAAA;AAC7B;AAED,SAAgB,mBAAmBC,OAAiCC,WAA2B,YAAY,GAAG;AAC5G,QAAM,SAAS,KAAK,IAAI,MAAM,CAAA;AAC9B,QAAM,SAAS,KAAK,IAAI,MAAM,CAAA;AAC9B,QAAM,WAAW,SAAS;AAC1B,MAAI,cAAc,UAAU,cAAc,QACxC,QAAO,YAAY,SAAS;MAE5B,QAAA,CAAQ,YAAY,SAAS;AAChC;AAED,SAAgBC,eAAcC,MAAgC;AAC5D,SAAO,KAAK,aAAa,KAAK;AAC/B;AAED,SAAgB,uBAAuBC,WAAwB;AAC7D,QAAMC,cAAwB,CAAE;AAChC,QAAM,aAAa,MAAM,KAAK,UAAU,UAAA;AAExC,aAAW,QAAQ,CAAC,SAAS;AAC3B,QAAI,KAAK,aAAa,KAAK,aAAa,KAAK,YAC3C,aAAY,KAAK,KAAK,WAAA;AACxB,QAAIH,eAAc,IAAA,GAAO;AACvB,YAAMI,YAAW,KAAK,cAAc,KAAK,UAAU,KAAK,MAAM,YAAY;AAC1E,YAAM,aAAa,KAAK,QAAQ,6BAA6B;AAE7D,UAAA,CAAKA,UACH,KAAI,YAAY;AACd,cAAM,UAAU,KAAK,QAAQ;AAC7B,YAAI,QACF,aAAY,KAAK,OAAA;MACpB,MAEC,aAAY,KAAK,GAAG,uBAAuB,IAAA,CAAK;IAGrD;EACF,CAAA;AAGD,SAAO;AACR;;;ACpCD,IAAa,CAAC,wBAAwB,uBAAA,IAClC,cAAuC,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAe3C,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AAEd,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,EAAE,eAAA,IAAmB,cAAA;AAE3B,UAAM,kBAAkB,2BAAA;AACxB,UAAM,kBAAkB,IAAqC,IAAA;AAC7D,UAAM,gBAAgB,IAAqC,IAAA;AAC3D,UAAM,WAAW,SACf,MAAA,OAAaA,OAAM,aAAa,WAC5BA,OAAM,WACN,gBAAgB,SAAS,KAAA;AAG/B,UAAM,yBAAyB,IAAI,CAAA;AACnC,UAAM,6BAA6B,IAAI,SAAS,KAAA;AAChD,UAAM,gBAAgB,IAAI,CAAA;AAC1B,UAAM,gBAAgB,IAAI,SAAS,KAAA;AAEnC,UAAM,eAAe,SAAS,MAAM;AAClC,YAAM,eAAc,oBAAI,KAAA,GAAO,QAAA,IAAY,uBAAuB;AAClE,oBAAc,QAAQ,KAAK,IAAI,2BAA2B,QAAQ,aAAa,CAAA;IAChF,GAAE,EAAE,UAAU,GAAI,CAAA;AAEnB,aAAS,WAAW,YAAkB;AACpC,UAAI,cAAY,KAAK,eAAa,OAAO,kBACvC;AAIF,UAAA,CAAK,SACH;AACF,aAAO,aAAa,cAAc,KAAA;AAClC,6BAAuB,SAAQ,oBAAI,KAAA,GAAO,QAAA;AAC1C,oBAAc,QAAQ,OAAO,WAAW,aAAa,UAAA;IACvD;AAEA,aAAS,YAAY,OAAsB;;AACzC,YAAM,qBAAoB,+BAAO,iBAAgB;AAKjD,YAAM,kBAAiB,oBAAe,UAAf,mBAAsB,SAAS,iBAAA;AACtD,UAAI,kBAAkB,kBACpB,uBAAgB,SAAS,UAAzB,mBAAgC;AAElC,UAAI,kBAEF,iBAAgB,iBAAiB,QAAQ;AAG3C,YAAM,OAAA;IACR;AAEA,UAAM,sBAAsB,SAAS,MAAM,eAAe,QAAQ,uBAAuB,eAAe,KAAA,IAAS,IAAA;AAEjH,QAAIA,OAAM,QAAA,CAAS,CAAC,cAAc,YAAa,EAAC,SAASA,OAAM,IAAA,GAAO;AACpE,YAAM,QAAQ;AACd,YAAM,IAAI,MAAM,KAAA;IAClB;AAEA,gBAAY,CAAC,cAAc;AACzB,YAAM,WAAW,gBAAgB,SAAS;AAC1C,UAAI,UAAU;AACZ,cAAM,eAAe,MAAM;AACzB,qBAAW,2BAA2B,KAAA;AACtC,uBAAa,OAAA;AACb,gBAAM,QAAA;QACR;AACA,cAAM,cAAc,MAAM;AACxB,gBAAM,eAAc,oBAAI,KAAA,GAAO,QAAA,IAAY,uBAAuB;AAClE,qCAA2B,QAAQ,2BAA2B,QAAQ;AACtE,iBAAO,aAAa,cAAc,KAAA;AAClC,uBAAa,MAAA;AACb,gBAAM,OAAA;QACR;AACA,iBAAS,iBAAiB,gBAAgB,WAAA;AAC1C,iBAAS,iBAAiB,iBAAiB,YAAA;AAC3C,eAAO,MAAM;AACX,mBAAS,oBAAoB,gBAAgB,WAAA;AAC7C,mBAAS,oBAAoB,iBAAiB,YAAA;QAChD;MACF;IACD,CAAA;AAKD,UAAM,MAAM,CAACA,OAAM,MAAM,SAAS,KAAM,GAAE,MAAM;AAE9C,iCAA2B,QAAQ,SAAS;AAE5C,UAAIA,OAAM,QAAA,CAAS,gBAAgB,iBAAiB,MAClD,YAAW,SAAS,KAAA;IACvB,GAAE,EAAE,WAAW,KAAM,CAAA;AAEtB,gBAAY,UAAU,CAAC,UAAU;AAC/B,YAAM,iBAAiB,KAAA;AACvB,UAAA,CAAK,MAAM,kBAAkB;AAC3B,wBAAgB,+BAA+B,QAAQ;AACvD,oBAAA;MACF;IACD,CAAA;AAED,cAAU,MAAM;AACd,sBAAgB,WAAA;IACjB,CAAA;AACD,gBAAY,MAAM;AAChB,sBAAgB,cAAA;IACjB,CAAA;AAED,4BAAwB,EAAE,SAAS,YAAa,CAAA;;8DAKtC,oBAAA,SAAA,UAAA,GADR,YAOgB,uBAAA;;QALd,MAAK;QACJ,aAAWC,KAAAA,SAAI,eAAA,cAAA;QAChB,eAAY;;yBAEZ,MAAyB,CAAA,gBAAA,gBAAtB,oBAAA,KAAA,GAAmB,CAAA,CAAA,CAAA;;gEAIhB,MAAA,eAAA,EAAgB,SAAS,SAAA,UAAA,GADjC,YAkFW,UAAA;;QAhFR,IAAI,MAAA,eAAA,EAAgB,SAAS;UAE9B,YA6EiB,MAAA,cAAA,GAAA,MAAA;yBA5Ef,MA2EY,CA3EZ,YA2EY,MAAA,SAAA,GA3EZ,WA2EY;UA1ET,KAAK,MAAA,UAAA;UACN,MAAK;UACL,aAAU;UACV,eAAY;UACZ,UAAS;WACDC,KAAAA,QAAM;UACb,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,cAAYC,KAAAA,OAAI,SAAA;UAChB,wBAAsB,MAAA,eAAA,EAAgB,eAAe;UACrD,OAAO;YAAA,YAAA;YAAA,aAAA;UAA2C;UAClD,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAQ,UAAmB;AAAiB,4BAAA,QAAe;cAAA,GAAQ,MAAM;cAAO,GAAK,MAAM;YAAO;;UAG7G,eAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAmB;iBAAsB,gBAAA,MAAe;kBAA0B,IAAI,MAAM,UAAU,gBAAA,MAAgB;kBAAmB,IAAI,MAAM,UAAU,gBAAA,MAAgB;kBAAmB,sBAAsB,QAAQ,cAAA,KAAA;kBAAgC,oBAAiB,CAAA,QAAA,OAAA,EAAqB,SAAS,MAAA,eAAA,EAAgB,eAAe,KAAA;kBAAwBC,SAAK,CAAA,QAAA,IAAA,EAAkB,SAAS,MAAA,eAAA,EAAgB,eAAe,KAAA,IAAqB,KAAK,MAAkB,KAAK;kBAAqB,WAAW,oBAAoBA,OAAK,GAAI,CAAA,IAAC;kBAAuB,WAAA,CAAY,oBAAoBA,OAAK,GAAI,CAAA,IAAC;kBAAuB,kBAAkB,MAAM,gBAAW,UAAA,KAAA;kBAAuC,QAAK;cAAA,GAAQ;cAAQ,GAAK;YAAQ;kBAAoB,cAAW;cAAA,eAAoB;cAAO;YAAK;gBAAkB,qBAAmB;AAAgB,4BAAA,QAAgB;AAAmB,oBAAAC,6BAAA,EAA6B,MAAA,gBAAA,GAAgB,CAAG,OAAmB,MAAK,aAAc,EAAA,GAAK,WAAA;uBAA6C,MAAA,kBAAA,EAAmB,OAAO,MAAA,eAAA,EAAgB,eAAe,OAAO,eAAA,GAAe;AAAiB,4BAAA,QAAgB;AAAmB,oBAAAA,6BAAA,EAA6B,MAAA,iBAAA,GAAiB,CAAG,OAAmB,MAAK,cAAe,EAAA,GAAK,WAAA;AAA2B,oBAAM,OAAuB,kBAAkB,MAAM,SAAA;uBAA2C,KAAK,IAAI,CAAA,IAAK,mBAAmB,KAAK,IAAI,CAAA,IAAK,gBAAqK,iBAAA,QAAe;;UA6BjkD,aAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAmB;kBAAuB,QAAQ,cAAA;kBAA+B,SAAS,MAAM;gBAAqC,OAAO,kBAAkB,MAAM,SAAA,EAA0B,QAAO,sBAAsB,MAAM,SAAA;AAAkC,0BAAA,QAAa;AAAmB,4BAAA,QAAe;gBAAuB,OAAK;oBAAsB,QAAQ,MAAM;oBAAiC,cAAW;gBAAA,eAAoB;gBAAO;cAAK;kBAAmC,MAAA,kBAAA,EAAmB,OAAO,MAAA,eAAA,EAAgB,eAAe,OAAO,MAAA,eAAA,EAAgB,eAAe,KAAA,EAAqC,OAAAA,6BAAA,EAA6B,MAAA,eAAA,GAAe,CAAG,OAAmB,MAAK,YAAa,EAAA,GAAK,WAAA;kBAA6D,OAAAA,6BAAA,EAA6B,MAAA,kBAAA,GAAkB,CAAG,OAAmB,MAAK,eAAgB,EAAA,GAAK,WAAA;AAA+K,6CAAO,iBAAgB,SAAA,CAAW,YAAU,QAAM,eAAA,GAAc,EAAA,MAAA,KAAA;;;;2BA2BtlC,MAGE,CAHF,WAGE,KAAA,QAAA,WAAA;YAFC,WAAW,cAAA;YACX,UAAU,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/PrB,UAAMC,SAAQ;AAId,UAAM,cAAc,uBAAA;AACpB,UAAM,EAAE,WAAA,IAAe,iBAAA;;0BAIrB,YASuB,8BAAA,EATD,YAAA,GAAQ,GAAA;yBAC5B,MAOY,CAPZ,YAOY,MAAA,SAAA,GAPZ,WACUA,QAAK;UACZ,KAAK,MAAA,UAAA;UACL,MAAMC,KAAAA,OAAE,WAAA,WAAA;UACR,SAAO,MAAA,WAAA,EAAY;;2BAEpB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AETd,UAAMC,SAAQ;AAEd,QAAA,CAAKA,OAAM,QACT,OAAM,IAAI,MAAM,kDAAA;AAElB,UAAM,EAAE,WAAA,IAAe,iBAAA;;aAKbC,KAAAA,WAAAA,UAAAA,GADR,YAYuB,8BAAA;;QAVpB,YAAUA,KAAAA;QACX,YAAA;;yBAEA,MAMa,CANb,YAMa,oBAAA;UALV,KAAK,MAAA,UAAA;UACL,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;;2BAEX,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AE5Bd,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPZ,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEYZ,UAAMC,SAAQ;AAOd,UAAM,QAAQ;AAad,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,OAAO,UAAUA,QAAO,QAAQ,OAAO;MAC3C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;;0BAIC,YA6DW,MAAA,gBAAA,GAAA,EA7DA,SAASC,KAAAA,cAAc,MAAA,IAAA,EAAI,GAAA;yBACpC,MA2DgB,CA3DhB,YA2DgB,uBA3DhB,WA2DgB;UA1Db,KAAK,MAAA,UAAA;UAEL,MAAM,MAAA,IAAA;UACN,MAAMC,KAAAA;UACN,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,UAAUC,KAAAA;WACHC,KAAAA,QAAM;UACb,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,KAAA,QAAI;UACX,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,OAAA;UACZ,UAAM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,QAAA;UACb,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;UACxC,cAAW,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;AAAe,kBAAK,cAAe,KAAA;iBAAqB,MAAM,iBAA+B,OAAM,cAA8B,aAAY,cAAA,OAAA;;UAMhK,aAAU,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;AAAe,kBAAK,aAAc,KAAA;iBAAqB,MAAM,kBAAgB;sBAAsB,GAAG,EAAA,IAAM,MAAM,OAAO;oBAAuB,SAAS,MAAM;AAAuC,qBAAO,aAAY,cAAA,MAAA;AAAkC,qBAAO,MAAM,YAAW,6BAAA,GAAiC,CAAA,IAAC;AAAiB,qBAAO,MAAM,YAAW,6BAAA,GAAiC,CAAA,IAAC;;;UAUlZ,eAAY,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;AAAe,kBAAK,eAAgB,KAAA;iBAAqB,MAAM,kBAAgB;oBAAoB,SAAS,MAAM;AAAuC,qBAAO,aAAY,cAAA,QAAA;AAAoC,qBAAO,MAAM,eAAc,2BAAA;AAAyC,qBAAO,MAAM,eAAc,2BAAA;AAAyC,qBAAO,MAAM,eAAc,0BAAA;AAAwC,qBAAO,MAAM,eAAc,0BAAA;;;UAW1c,YAAS,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;AAAe,kBAAK,YAAa,KAAA;iBAAqB,MAAM,kBAAgB;sBAAsB,GAAG,EAAA,IAAM,MAAM,OAAO;oBAAuB,SAAS,MAAM;AAAuC,qBAAO,aAAY,cAAA,KAAA;AAAiC,qBAAO,MAAM,eAAc,2BAAA;AAAyC,qBAAO,MAAM,eAAc,2BAAA;AAAyC,qBAAO,MAAM,YAAW,4BAAA,GAAgC,CAAA,IAAC;AAAiB,qBAAO,MAAM,YAAW,4BAAA,GAAgC,CAAA,IAAC;AAAiB,mBAAA,QAAI;;;;2BAc3iB,CAIE,EAxDQ,WAAS,UAAY,UAAA,MAAS,CAoDxC,WAIE,KAAA,QAAA,WAAA;YAHY;YACX,UAAU;YACV,MAAM,MAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtGf,UAAMC,SAAQ;AACd,qBAAA;;0BAIE,YAEY,MAAA,SAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;AEZZ,UAAM,QAAQ;AAId,UAAM,kBAAkB,2BAAA;;0BAItB,YAWiB,MAAA,sBAAA,GAAA;QAVf,eAAY;QACZ,UAAS;QACT,OAAA,EAAA,YAAA,QAAuB;QACtB,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAiB;;gBAAmB,qBAAqB,MAAM;gBAAiD,6BAAA,GAA8B,WAAA,eAAA,EAAgB,SAAS,UAAzB,mBAAgC,SAAS;cAA+B,2BAA4B,OAAK,0BAAA;;;yBAMhQ,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEcZ,UAAMC,SAAQ;AAKd,UAAM,EAAE,QAAQ,MAAA,IAAU,OAAOA,MAAA;AAEjC,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,EAAE,gBAAgB,SAAA,IAAa,cAAA;AACrC,UAAM,kBAAkB,2BAAA;AACxB,UAAM,YAAY,SAAS,MAAM,gBAAgB,WAAW,QAAQ,CAAA;AACpE,UAAM,oBAAoB,IAAA;AAC1B,UAAM,oBAAoB,IAAA;AAE1B,UAAM,gBAAgB,SAAS,MAAM,OAAO,MAAM,KAAK,GAAA,EAAK,QAAQ,QAAQ,EAAA,EAAI,QAAQ,UAAU,EAAA,CAAG;AAErG,gBAAY,OAAO,OAAO,MAAM;AAC9B,qBAAe,MAAM,MAAA;IACtB,CAAA;AAED,cAAU,MAAM;AACd,sBAAgB,iBAAiB,eAAe,KAAA;IACjD,CAAA;AAED,gBAAY,CAAC,cAAc;AACzB,YAAM,WAAW,eAAe;AAChC,UAAI,UAAU,SAAS,UAAU;AAC/B,cAAM,cAAc,MAAM;AACxB,cAAA,CAAK,gBAAgB,iBAAiB,OAAO;AAC3C,kBAAM,aAAa,IAAI,YAAY,cAAA;AACnC,qBAAS,cAAc,UAAA;AACvB,4BAAgB,iBAAiB,QAAQ;UAC3C;QACF;AAEA,cAAM,eAAe,MAAM;AACzB,cAAI,gBAAgB,iBAAiB,OAAO;AAC1C,kBAAM,cAAc,IAAI,YAAY,eAAA;AACpC,qBAAS,cAAc,WAAA;AACvB,4BAAgB,iBAAiB,QAAQ;UAC3C;QACF;AAEA,cAAM,uBAAuB,CAAC,UAAsB;AAClD,gBAAM,uBAAA,CAAwB,SAAS,SAAS,MAAM,aAAA;AACtD,cAAI,qBACF,cAAA;QACJ;AAEA,cAAM,2BAA2B,MAAM;AACrC,gBAAM,gBAAgB,SAAS,SAAS,iBAAA,CAAkB;AAC1D,cAAA,CAAK,cACH,cAAA;QACJ;AAKA,cAAM,gBAAgB,CAAC,UAAyB;;AAC9C,gBAAM,YAAY,MAAM,UAAU,MAAM,WAAW,MAAM;AACzD,gBAAM,WAAW,MAAM,QAAQ,SAAA,CAAU;AAEzC,cAAI,UAAU;AACZ,kBAAM,iBAAiB,iBAAA;AACvB,kBAAM,qBAAqB,MAAM;AACjC,kBAAM,mBAAmB,MAAM,WAAW;AAI1C,gBAAI,oBAAoB,oBAAoB;AAC1C,sCAAkB,UAAlB,mBAAyB;AACzB;YACF;AAEA,kBAAM,mBAAmB,qBAAqB,cAAc;AAC5D,kBAAM,mBAAmB,4BAA4B,EAAE,iBAAkB,CAAA;AACzE,kBAAM,QAAQ,iBAAiB,UAAU,CAAA,cAAa,cAAc,cAAA;AACpE,gBAAI,WAAW,iBAAiB,MAAM,QAAQ,CAAA,CAAE,EAC9C,OAAM,eAAA;gBAMN,uBACI,uBAAkB,UAAlB,mBAAyB,WACzB,uBAAkB,UAAlB,mBAAyB;UAEjC;QACF;AAEA,iBAAS,iBAAiB,WAAW,WAAA;AACrC,iBAAS,iBAAiB,YAAY,oBAAA;AACtC,iBAAS,iBAAiB,eAAe,WAAA;AACzC,iBAAS,iBAAiB,gBAAgB,wBAAA;AAC1C,iBAAS,iBAAiB,WAAW,aAAA;AACrC,eAAO,iBAAiB,QAAQ,WAAA;AAChC,eAAO,iBAAiB,SAAS,YAAA;AAEjC,kBAAU,MAAM;AACd,mBAAS,oBAAoB,WAAW,WAAA;AACxC,mBAAS,oBAAoB,YAAY,oBAAA;AACzC,mBAAS,oBAAoB,eAAe,WAAA;AAC5C,mBAAS,oBAAoB,gBAAgB,wBAAA;AAC7C,mBAAS,oBAAoB,WAAW,aAAA;AACxC,iBAAO,oBAAoB,QAAQ,WAAA;AACnC,iBAAO,oBAAoB,SAAS,YAAA;QACrC,CAAA;MACH;IACD,CAAA;AAED,aAAS,4BAA4B,EAAE,iBAAA,GAAoE;AACzG,YAAM,aAAa,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA;AACzC,YAAM,qBAAqB,WAAW,IAAI,CAAC,cAAc;AACvD,cAAM,0BAA0B,CAAC,WAAW,GAAG,sBAAsB,SAAA,CAAU;AAC/E,eAAO,qBAAqB,aACxB,0BACA,wBAAwB,QAAA;MAC7B,CAAA;AACD,cACE,qBAAqB,aAAa,mBAAmB,QAAA,IAAY,oBACjE,KAAA;IACJ;;0BAIE,YA+CyB,MAAA,8BAAA,GAAA;QA9CvB,MAAK;QACJ,cAAA,OAAmB,MAAA,KAAA,MAAK,WAAgB,MAAA,KAAA,EAAM,QAAO,YAAa,cAAA,KAAA,IAAiB,MAAA,KAAA,EAAM,cAAA,KAAA;QAC1F,UAAS;QACR,OAAK,eAAA,EAAA,eAA2L,UAAA,QAAA,SAAqB,OAAA,CAAA;;yBAMtN,MAYE;UAXM,UAAA,SAAA,UAAA,GADR,YAYE,oBAAA;;YAVC,KAAG,CAAG,SAA6B;AAAe,gCAAA,QAAoB,MAAA,YAAA,EAAa,IAAA;;;YAInF,4BAA2B,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;oBAAwB,qBAAqB,4BAA2B,EAAA,kBAAA,WAAA,CAAA;AAA8D,oBAAA,UAAA,EAAW,kBAAA;;;UAO/K,YAUiB,MAAA,cAAA,GAAA,MAAA;6BATf,MAQY,CARZ,YAQY,MAAA,SAAA,GARZ,WAQY;cAPT,KAAK,MAAA,UAAA;cACN,UAAS;cACR,IAAIC,KAAAA;cACJ,YAAUC,KAAAA;eACHC,KAAAA,MAAAA,GAAM;+BAEd,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;UAIJ,UAAA,SAAA,UAAA,GADR,YAYE,oBAAA;;YAVC,KAAG,CAAG,SAA6B;AAAe,gCAAA,QAAoB,MAAA,YAAA,EAAa,IAAA;;;YAInF,4BAA2B,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,MAAA;oBAAwB,qBAAqB,4BAA2B,EAAA,kBAAA,YAAA,CAAA;AAA+D,oBAAA,UAAA,EAAW,kBAAA;;;;;;;;;;;;AEtKpL,IAAa,CAAC,8BAA8B,6BAAA,IACxC,cAAsC,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS1C,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AASd,UAAM,EAAE,MAAM,aAAa,UAAU,KAAK,QAAA,IAAY,OAAOA,MAAA;AAC7D,UAAM,MAAM,aAAa,OAAA;AACzB,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,EAAE,YAAY,kBAAkB,SAAA,IAAa,yBAAyBA,QAAO,KAAA;AACnF,UAAM,gBAAgB,eAAe,cAAA;AAErC,kCAA8B;MAC5B;MACA;MACA;MACA;MACA,aAAaA,OAAM;MACnB;MACA;MACA;IACD,CAAA;;0BAIC,YAsBY,wBArBL,MAAA,WAAA,IAAc,MAAA,wBAAA,IAAmB,MAAA,SAAA,CAAS,GAAA;QAC/C,YAAA;QACC,aAAa,MAAA,WAAA,IAAcC,KAAAA,cAAAA;QAC3B,KAAK,MAAA,GAAA;QACL,MAAM,MAAA,WAAA,IAAc,MAAA,IAAA,IAAI;;yBAEzB,MAcY,CAdZ,YAcY,MAAA,SAAA,GAAA;UAbT,KAAK,MAAA,UAAA;UACN,MAAK;UACJ,YAAUC,KAAAA;UACV,IAAIC,KAAAA;;2BAEL,MAAkC,CAAlC,WAAkC,KAAA,QAAA,WAAA,EAA3B,YAAa,MAAA,UAAA,EAAU,CAAA,GAGtB,MAAA,aAAA,KAAiBC,KAAAA,QAAAA,UAAAA,GADzB,YAKE,6BAAA;;YAHC,MAAMA,KAAAA;YACN,UAAUC,KAAAA;YACV,OAAO,MAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE/DhB,UAAMC,SAAQ;AAMd,UAAM,QAAQ;AAed,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AACvC,UAAM,qBAAqB,6BAA6B,IAAA;AAExD,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MACvD,cAAcA,OAAM;MACpB,SAAUA,OAAM,eAAA;IACjB,CAAA;AAED,aAAS,gBAAgB;AACvB,iBAAW,QAAA,CAAS,WAAW;IACjC;AAEA,UAAM,YAAY,SAAoB,MAAM;AAC1C,aAAO,WAAW,QAAQ,OAAO;IAClC,CAAA;AAED,UAAM,gBAAgB,eAAe,cAAA;;0BAInC,YAyBY,MAAA,SAAA,GAAA;QAxBT,KAAK,MAAA,UAAA;QACL,MAAMC,KAAAA,OAAE,WAAA,WAAA;QACR,YAAUD,OAAM;QAChB,IAAIC,KAAAA;QACJ,gBAAc,MAAA,UAAA;QACd,cAAY,UAAA;QACZ,iBAAeC,KAAAA,WAAQ,KAAA;QACvB,UAAUA,KAAAA;QACV,SAAO;;yBAER,MAKE,CALF,WAKE,KAAA,QAAA,WAAA;UAJC,YAAa,MAAA,UAAA;UACb,UAAUA,KAAAA;UACV,SAAS,MAAA,UAAA;UACT,OAAO,UAAA;YAIF,MAAA,aAAA,KAAiBC,KAAAA,QAAAA,CAAS,MAAA,kBAAA,KAAkB,UAAA,GADpD,YAME,6BAAA;;UAJA,MAAK;UACJ,MAAMA,KAAAA;UACN,OAAO,MAAA,UAAA;UACP,UAAUC,KAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhFjB,UAAMC,SAAQ;AAId,UAAM,cAAc,6BAAA;AACpB,UAAM,WAAW,SAAS,MAAA;;AAAM,gCAAY,aAAZ,mBAAsB,UAASA,OAAM;KAAA;AACrE,UAAM,UAAU,SAAS,MAAM,oBAAoB,YAAY,WAAW,OAAOA,OAAM,KAAA,CAAM;AAE7F,UAAM,EAAE,WAAA,IAAe,iBAAA;;0BAIrB,YAeY,wBAdL,MAAA,WAAA,EAAY,YAAY,QAAQ,MAAA,uBAAA,IAAkB,MAAA,SAAA,CAAS,GADlE,WAeY,EAbV,YAAA,GAAQ,GACA,MAAA,WAAA,EAAY,YAAY,QAAK;QAAA,WAAA,CAAiB,SAAA;QAAQ,QAAU,QAAA;MAAO,IAAA,CAAA,CAAA,GAAA;yBAE/E,MASS,CATT,YASS,MAAA,cAAA,GATT,WACUA,QAAK;UACZ,KAAK,MAAA,UAAA;UAEL,UAAU,SAAA;UACV,eAAa,QAAA;UACb,uBAAkB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,iBAAiBC,KAAAA,KAAAA;;2BAElD,CALQ,cAAS,CAKjB,WAA2B,KAAA,QAAA,WAAA,eAAA,mBAAb,SAAA,CAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhC7B,UAAMC,SAAQ;AACd,UAAM,EAAE,WAAA,IAAe,iBAAA;;0BAIrB,YAWkB,MAAA,uBAAA,GAAA;QAVhB,YAAA;QACC,WAAA,CAAYC,KAAAA;;yBAEb,MAMY,CANZ,YAMY,MAAA,SAAA,GANZ,WAMY;UALT,KAAK,MAAA,UAAA;UACL,MAAMC,KAAAA,OAAE,WAAA,WAAA;WACDF,MAAA,GAAK;2BAEb,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;AEhBd,UAAMG,SAAQ;AACd,UAAM,EAAE,WAAA,IAAe,iBAAA;;0BAIrB,YAakB,MAAA,uBAAA,GAAA;QAZhB,YAAA;QACA,WAAA;;yBAEA,MAQY,CARZ,YAQY,MAAA,SAAA,GARZ,WACUA,QAAK;UACZ,KAAK,MAAA,UAAA;UACL,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAoB;;gBAAmB,MAAM,QAAG,IAAW,aAAM,kBAAN,mBAAqC;;;2BAI3G,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;AEPd,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAAkC,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtC,UAAMC,SAAQ;AAGd,UAAM,EAAE,aAAa,KAAK,QAAA,IAAY,OAAOA,MAAA;AAC7C,UAAM,MAAM,aAAa,OAAA;AACzB,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,8BAA0B;MAAE;MAAa;IAAK,CAAA;;0BAI5C,YAemB,MAAA,wBAAA,GAAA;QAdjB,YAAA;QACC,aAAa,MAAA,WAAA;QACb,KAAK,MAAA,GAAA;QACL,MAAMC,KAAAA;;yBAEP,MAQY,CARZ,YAQY,MAAA,SAAA,GAAA;UAPT,KAAK,MAAA,UAAA;UACN,MAAK;UACJ,oBAAkB,MAAA,WAAA;UAClB,YAAUC,KAAAA;UACV,IAAIC,KAAAA;;2BAEL,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1Cd,UAAMC,SAAQ;AAEd,UAAM,cAAc,yBAAA;AACpB,qBAAA;;0BAIE,YAMgB,uBAAA;QALb,aAAa,MAAA,WAAA,EAAY,YAAY;QACrC,YAAUA,OAAM;QAChB,IAAIC,KAAAA;;yBAEL,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPZ,UAAMC,SAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,cAAc,yBAAA;AAEpB,UAAM,eAAe,eAAe,KAAA;AACpC,qBAAA;;0BAIE,YAOkB,MAAA,uBAAA,GAPlB,WAOkB;QAAA,GANHA;QAAK,GAAK,MAAA,YAAA;MAAY,GAAA;QAClC,oBAAkB,MAAA,WAAA,EAAY,YAAY;QAC1C,KAAK,MAAA,WAAA,EAAY,IAAI;QACrB,gBAAc;;yBAEf,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErBZ,UAAMC,SAAQ;AACd,UAAM,EAAE,WAAA,IAAe,iBAAA;;0BAIrB,YAOgB,uBAAA,EAPD,YAAA,GAAQ,GAAA;yBACrB,MAKkB,CALlB,YAKkB,MAAA,uBAAA,GALlB,WACUA,QAAK,EACZ,KAAK,MAAA,UAAA,EAAU,CAAA,GAAA;2BAEhB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEGd,UAAMC,SAAQ;AAKd,qBAAA;;0BAIE,YAEc,MAAA,mBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBACxB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;AElBZ,IAAa,CAAC,8BAA8B,6BAAA,IACxC,cAAsC,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+C1C,UAAMC,SAAQ;AAMd,UAAM,EAAE,eAAe,mBAAmB,yBAAyB,uBAAuB,wBAAwB,SAAA,IAAa,OAAOA,MAAA;AACtI,qBAAA;AAEA,UAAM,gBAAgB,IAAI,IAAA;AAE1B,UAAM,wBAAwB,IAAI,KAAA;AAElC,UAAM,EAAE,OAAO,YAAY,MAAM,WAAA,IAAe,aAAa,MAAM;AACjE,oBAAc,QAAQ;IACvB,GAAE,mBAAmB,EAAE,WAAW,MAAO,CAAA;AAE1C,kCAA8B;MAC5B;MACA;MACA,SAAS;AACP,mBAAA;AACA,sBAAc,QAAQ;MACvB;MACD,UAAU;AACR,mBAAA;MACD;MACD;MACA;MACA;MACA;MACA;IACD,CAAA;;aAIC,WAAQ,KAAA,QAAA,SAAA;;;;;;;AEpGV,IAAa,eAAe;;;ACoE5B,IAAa,CAAC,0BAA0B,yBAAA,IACpC,cAA8B,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUlC,UAAMC,SAAQ;AAUd,UAAM,OAAO;AASb,qBAAA;AACA,UAAM,kBAAkB,6BAAA;AAExB,UAAM,0BAA0B,SAAS,MAAMA,OAAM,2BAA2B,gBAAgB,wBAAwB,KAAA;AACxH,UAAM,wBAAwB,SAAS,MAAMA,OAAM,yBAAyB,gBAAgB,sBAAsB,KAAA;AAClH,UAAM,iBAAiB,SAAS,MAAMA,OAAM,YAAY,gBAAgB,SAAS,KAAA;AAEjF,UAAM,gBAAgB,SAAS,MAAMA,OAAM,iBAAiB,gBAAgB,cAAc,KAAA;AAC1F,UAAM,yBAAyB,SAAS,MAAMA,OAAM,0BAA0B,gBAAgB,uBAAuB,KAAA;AAErH,UAAM,OAAO,UAAUA,QAAO,QAAQ,MAAM;MAC1C,cAAcA,OAAM;MACpB,SAAUA,OAAM,SAAA;IACjB,CAAA;AAED,UAAM,MAAM,CAAC,WAAW;AACtB,UAAA,CAAK,gBAAgB,QACnB;AACF,UAAI,QAAQ;AACV,wBAAgB,OAAA;AAGhB,iBAAS,cAAc,IAAI,YAAY,YAAA,CAAA;MACzC,MAEE,iBAAgB,QAAA;IAEnB,CAAA;AAED,UAAM,oBAAoB,IAAI,KAAA;AAC9B,UAAM,UAAU,IAAA;AAEhB,UAAM,iBAAiB,SAAS,MAAM;AACpC,UAAA,CAAK,KAAK,MACR,QAAO;AACT,aAAO,kBAAkB,QAAQ,iBAAiB;IACnD,CAAA;AAED,UAAM,EAAE,OAAO,YAAY,MAAM,WAAA,IAAe,aAAa,MAAM;AACjE,wBAAkB,QAAQ;AAC1B,WAAK,QAAQ;IACd,GAAE,eAAe,EAAE,WAAW,MAAO,CAAA;AAEtC,aAAS,aAAa;AACpB,iBAAA;AACA,wBAAkB,QAAQ;AAC1B,WAAK,QAAQ;IACf;AACA,aAAS,cAAc;AACrB,iBAAA;AACA,WAAK,QAAQ;IACf;AACA,aAAS,oBAAoB;AAC3B,iBAAA;IACF;AAEA,8BAA0B;MACxB,WAAW;MACX;MACA;MACA;MACA,gBAAgB,IAAI;AAClB,gBAAQ,QAAQ;MACjB;MACD,iBAAiB;AACf,YAAI,gBAAgB,cAAc,MAChC,mBAAA;YACG,YAAA;MACN;MACD,iBAAiB;AACf,YAAI,wBAAwB,MAC1B,aAAA;YAIA,YAAA;MAEH;MACD,QAAQ;MACR,SAAS;MACT;MACA;MACA,UAAU;MACV;IACD,CAAA;;0BAIC,YAEa,MAAA,kBAAA,GAAA,MAAA;yBADX,MAAqB,CAArB,WAAqB,KAAA,QAAA,WAAA,EAAd,MAAM,MAAA,IAAA,EAAI,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExIrB,UAAMC,SAAQ;AAWd,UAAM,QAAQ;AAEd,UAAM,cAAc,yBAAA;AAEpB,UAAM,EAAE,WAAA,IAAe,iBAAA;AACvB,UAAM,OAAO,SAAA;AACb,UAAM,cAAc,SAAS,MAAA;;AAAM,wBAAK,YAAL,8BAAe,CAAE;KAAC;AACrD,UAAM,YAAY,SAAS,MAAM;;AAC/B,UAAIA,OAAM,UACR,QAAOA,OAAM;AACf,UAAI,UAAU;AAEd,eAAS,oBAAoB,MAAa;AACxC,YAAA,OAAW,KAAK,aAAa,YAAY,KAAK,SAAS,QACrD,YAAW,KAAK;iBACT,MAAM,QAAQ,KAAK,QAAA,EAC1B,MAAK,SAAS,QAAQ,CAAA,UAAS,oBAAoB,KAAA,CAAe;MACtE;AAEA,wBAAY,UAAZ,mBAAmB,QAAQ,CAAC,SAAgB,oBAAoB,IAAA;AAChE,aAAO;IACR,CAAA;AAED,UAAM,qBAAqB,SAAS,MAAM;AACxC,YAAM,EAAE,WAAW,GAAG,GAAG,UAAA,IAAcA;AACvC,aAAO;IACR,CAAA;AAED,cAAU,MAAM;AAEd,uBAAiB,QAAQ,UAAU,CAAC,UAAU;AAC5C,cAAM,SAAS,MAAM;AACrB,YAAI,iCAAQ,SAAS,YAAY,QAAQ,OACvC,aAAY,QAAA;MACf,CAAA;AAED,uBAAiB,QAAQ,cAAc,YAAY,OAAA;IACpD,CAAA;;0BAIC,YAiCmB,MAAA,wBAAA,GAAA;QAhCjB,YAAA;QACC,kCAAgC;QAChC,iBAAe,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAK,iBAAkB,MAAA;QACxC,sBAAoB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAG,UAAK;;cAAiB,MAAA,WAAA,EAAY,sBAAsB,WAAS,WAAA,WAAA,EAAY,QAAQ,UAApB,mBAA2B,SAAS,MAAM,SAAgC,OAAM,eAAA;AAAwB,gBAAK,sBAAuB,KAAA;;QAM5N,gBAAa,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAd,MAAA;QAAsB,GAAA,CAAA,SAAA,CAAA;QACrB,WAAO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAE,MAAA,WAAA,EAAY,QAAA;;yBAEtB,MAmBgB,CAnBhB,YAmBgB,MAAA,qBAAA,GAnBhB,WAmBgB;UAlBb,KAAK,MAAA,UAAA;UACL,cAAY,MAAA,WAAA,EAAY,eAAe;;aAC3BC,KAAAA;UAAM,GAAK,mBAAA;QAAkB,GAAA,EACzC,OAAO;;;;;;QAMP,EAAA,CAAA,GAAA;2BAED,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,GACR,YAKiB,MAAA,sBAAA,GAAA;YAJd,IAAI,MAAA,WAAA,EAAY;YACjB,MAAK;;6BAEL,MAAe,CAAA,gBAAA,gBAAZ,UAAA,KAAA,GAAS,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9HpB,UAAMC,SAAQ;AACd,UAAM,iBAAiB,gBAAgBA,MAAA;AACvC,UAAM,EAAE,YAAY,eAAA,IAAmB,iBAAA;AAEvC,UAAM,EAAE,SAAS,QAAA,IAAY,yBAAA;AAC7B,UAAM,kBAAkB,6BAAA;AAExB,UAAM,EAAE,oBAAoB,cAAA,IAAkB,aAAa,SAAS,cAAA;AAEpE,oBAAgB,wBAAwB;AACxC,kBAAc,MAAM;AAClB,cAAA;IACD,CAAA;;0BAIC,YAKqB,4BALrB,WAKqB,EAJlB,KAAK,MAAA,UAAA,EAAU,GACR,MAAA,cAAA,CAAc,GAAA;yBAEtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AENZ,UAAMC,SAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,cAAc,yBAAA;AACpB,UAAM,YAAY,qBAAqBA,QAAO,KAAA;AAC9C,UAAM,EAAE,WAAA,IAAe,iBAAA;;0BAIrB,YAQW,MAAA,gBAAA,GAAA,EARA,SAASC,KAAAA,cAAc,MAAA,WAAA,EAAY,KAAK,MAAA,GAAA;yBACjD,MAMY,EAAA,UAAA,GANZ,YAMY,wBALL,MAAA,WAAA,EAAY,wBAAwB,QAAQ,6BAAqB,+BAAA,GADxE,WAMY,EAJT,KAAK,MAAA,UAAA,EAAU,GACR,MAAA,SAAA,CAAS,GAAA;2BAEjB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7Bd,UAAMC,SAAQ;;0BAIZ,YAEoB,MAAA,gBAAA,GAAA,eAAA,mBAFOA,MAAA,CAAK,GAAA;yBAC9B,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AEOZ,UAAMC,SAAQ;AAGd,UAAM,cAAc,yBAAA;AACpB,UAAM,kBAAkB,6BAAA;AAExB,gBAAY,cAAZ,YAAY,YAAcC,OAAA,QAAiB,sBAAA;AAE3C,UAAM,EAAE,YAAY,gBAAgB,eAAA,IAAmB,iBAAA;AAEvD,UAAMC,iBAAgB,IAAI,KAAA;AAC1B,UAAM,uBAAuB,IAAI,KAAA;AAEjC,UAAM,mBAAmB,SAAS,MAAM;AACtC,UAAI,YAAY,SAAS,MACvB,QAAO,CAAC;AAEV,aAAO;QACL,OAAO;QACP,OAAO;QACP,aAAaC;QACb,cAAc;QACd,aAAaC;QACb,MAAM;MACR;IACD,CAAA;AAED,cAAU,MAAM;AACd,kBAAY,gBAAgB,eAAe,KAAA;IAC5C,CAAA;AAED,aAASC,mBAAkB;AACzB,iBAAW,MAAM;AACf,QAAAH,eAAc,QAAQ;MACvB,GAAE,CAAA;IACL;AAEA,aAASE,qBAAoB;AAC3B,UAAI,YAAY,QAAA,CAAS,YAAY,sBAAsB,MACzD,aAAY,QAAA;AAEd,MAAAF,eAAc,QAAQ;AACtB,eAAS,iBAAiB,aAAaG,kBAAiB,EAAE,MAAM,KAAM,CAAA;IACxE;AAEA,aAASF,mBAAkB,OAAqB;AAC9C,UAAI,MAAM,gBAAgB,QACxB;AACF,UAAA,CACG,qBAAqB,SAAA,CAAU,gBAAgB,sBAAsB,OACtE;AACA,oBAAY,eAAA;AACZ,6BAAqB,QAAQ;MAC/B;IACF;AAEA,aAAS,qBAAqB;AAC5B,kBAAY,eAAA;AACZ,2BAAqB,QAAQ;IAC/B;AAEA,aAAS,YAAY,OAAmB;;AACtC,UAAID,eAAc,MAChB;AAEF,UAAI,YAAY,uBAAuB,SAAA,GAAW,iBAAM,QAAuB,YAA7B,4BAAuC,mBACvF;AAEF,kBAAY,OAAA;IACd;AAEA,aAAS,aAAa;AACpB,kBAAY,QAAA;IACd;AAEA,aAAS,cAAc;AACrB,UAAA,CAAK,YAAY,sBAAsB,MACrC,aAAY,QAAA;IAChB;;0BAIE,YAiBe,MAAA,oBAAA,GAAA;QAhBb,YAAA;QACC,WAAWI,KAAAA;;yBAEZ,MAYY,CAZZ,YAYY,MAAA,SAAA,GAZZ,WAYY;UAXT,KAAK,MAAA,UAAA;UACL,oBAA2B,MAAA,WAAA,EAAY,KAAK,QAAQ,MAAA,WAAA,EAAY,YAAA;UAGhE,cAAY,MAAA,WAAA,EAAY,eAAe;UACvC,IAAIC,KAAAA;UACJ,YAAUP,OAAM;UACjB,2BAAA;WACA,WAAM,iBAAiB,KAAA,CAAD,GAAA;2BAEtB,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AEtHd,SAAgB,QAA0CQ,OAAiB;AACzE,SAAO,MAAM,OAAO,CAACC,KAAYC,SAAY;AAC3C,QAAI,KAAK,IAAA;AAET,QAAI,KAAK,SACP,KAAI,KAAK,GAAG,QAAQ,KAAK,QAAA,CAAS;AAEpC,WAAO;EACR,GAAE,CAAE,CAAA;AACN;;;ACiED,IAAa,CAAC,uBAAuB,sBAAA,IAA0B,cAAoC,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAanG,UAAMC,SAAQ;AAKd,UAAM,QAAQ;AAUd,UAAM,EAAE,OAAO,UAAU,UAAU,iBAAiB,KAAK,SAAS,aAAA,IAAiB,OAAOA,MAAA;AAC1F,UAAM,EAAE,sBAAA,IAA0B,aAAA;AAClC,UAAM,MAAM,aAAa,OAAA;AACzB,UAAM,sBAAsB,IAAA;AAG5B,UAAM,YAAY,IAAI,KAAA;AACtB,UAAM,qBAAqB,gBAAA;AAE3B,UAAM,aAAa,UAAUA,QAAO,cAAc,OAAO;MAEvD,cAAcA,OAAM,iBAAiB,SAAS,QAAQ,CAAE,IAAA;MACxD,SAAS;MACT,MAAM;IACP,CAAA;AAED,UAAM,WAAW,UAAUA,QAAO,YAAY,OAAO;MAEnD,cAAcA,OAAM,mBAAmB,CAAE;MACzC,SAAUA,OAAM,aAAA;MAChB,MAAM;IACP,CAAA;AAED,UAAM,EAAE,cAAc,sBAAA,IAA0B,qBAAqB,YAAYA,MAAA;AAEjF,UAAM,eAAe,SAAS,MAAM;AAClC,UAAI,SAAS,SAAS,MAAM,QAAQ,WAAW,KAAA,EAC7C,QAAO,WAAW,MAAM,IAAI,CAAA,MAAKA,OAAM,OAAO,CAAA,CAAS;UAEvD,QAAO,CAACA,OAAM,OAAO,WAAW,SAAgB,CAAE,CAAA,CAAC;IACtD,CAAA;AAED,aAAS,aAAa,SAAY,QAAgB,GAAG,YAAoC;AACvF,aAAO,QAAM,OAAO,CAAC,KAAyB,MAAS,UAAkB;AACvE,cAAM,MAAMA,OAAM,OAAO,IAAA;AACzB,cAAM,WAAWA,OAAM,YAAY,IAAA;AACnC,cAAM,aAAa,SAAS,MAAM,SAAS,GAAA;AAE3C,cAAM,gBAAkC;UACtC,KAAK;UACL,OAAO;UACP;UACA;UACA;UACA,aAAA,CAAA,CAAe;UACf,MAAM;YACJ,SAAS;YACT;YACA,gBAAgB,QAAM;YACtB,iBAAiB,QAAQ;UAC1B;QACH;AACA,YAAI,KAAK,aAAA;AAET,YAAI,YAAY,WACd,KAAI,KAAK,GAAG,aAAa,UAAU,QAAQ,GAAG,IAAA,CAAK;AAErD,eAAO;MACR,GAAE,CAAE,CAAA;IACP;AAEA,UAAM,gBAAgB,SAAS,MAAM;AACnC,YAAM,UAAQA,OAAM;AACpB,YAAM,eAAe,SAAS,MAAM,IAAI,CAAA,MAAK,CAAA;AAC7C,aAAO,aAAa,WAAS,CAAE,CAAA;IAChC,CAAA;AAED,aAAS,cAAc,OAAsB;;AAC3C,UAAI,UAAU,MACZ,oBAAmB,QAAQ,KAAA;WAExB;AACH,cAAM,gBAAc,yBAAoB,UAApB,mBAA2B,eAAc,CAAC;AAC9D,8BAAsB,MAAM,KAAK,WAAA;MACnC;IACF;AAEA,aAAS,wBAAwB,OAAsB;AACrD,UAAI,UAAU,MACZ;AAEF,YAAM,SAAS,wBAAwB,MAAM,GAAA;AAC7C,eAAS,MAAM;;AACb,8BACE,QACA,iBAAA,IACA,yBAAoB,UAApB,mBAA2B,UAC3B,cAAc,MAAM,IAAI,CAAA,MAAK,EAAE,KAAA,CAAM;MAExC,CAAA;IACH;AAEA,aAAS,mBAAmB,MAAwB;;AAClD,UAAI,KAAK,cAAc,QAAQ,MAAM,QAAQ,WAAW,KAAA,KAAUA,OAAM,UAAU;AAChF,cAAM,aAAa,cAAc,MAAM,KAAK,CAAC,MAAM;AACjD,iBAAO,KAAK,cAAc,QAAQA,OAAM,OAAO,EAAE,KAAA,MAAWA,OAAM,OAAO,KAAK,UAAA;QAC/E,CAAA;AAED,YAAI,cAAc,MAAM;AACtB,gBAAM,iCAAgC,KAAAA,OAAM,YAAY,WAAW,KAAA,MAA7B,mBAAqC,MAAM,CAAA,MAAK,WAAW,MAAM,KAAK,CAAC,MAAWA,OAAM,OAAO,CAAA,MAAOA,OAAM,OAAO,CAAA,CAAE;AAE3J,cAAI,8BACF,YAAW,QAAQ,CAAC,GAAG,WAAW,OAAO,WAAW,KAAY;cAGhE,YAAW,QAAQ,WAAW,MAAM,OAAO,CAAC,MAAWA,OAAM,OAAO,CAAA,MAAOA,OAAM,OAAO,WAAW,KAAA,CAAM;AAG3G,6BAAmB,UAAA;QACrB;MACF;IACF;AAEA,2BAAuB;MACrB;MACA;MACA,UAAU,CAAC,QAAQ;;AACjB,cAAM,YAAY,CAAC,cAAiBA,OAAM,OAAO,aAAoB,CAAE,CAAA,MAAMA,OAAM,OAAO,GAAA;AAC1F,cAAM,QAAQA,OAAM,YAAY,MAAM,QAAQ,WAAW,KAAA,MAAS,gBAAW,UAAX,mBAAkB,UAAU,gBAAe,KAAA;AAC7G,qBAAa,KAAK,SAAA;AAElB,YAAIA,OAAM,gBAAgBA,OAAM,YAAY,MAAM,QAAQ,WAAW,KAAA,GAAQ;AAC3E,gBAAM,OAAO,cAAc,MAAM,KAAK,CAAC,MAAM;AAC3C,mBAAOA,OAAM,OAAO,EAAE,KAAA,MAAWA,OAAM,OAAO,GAAA;UAC/C,CAAA;AACD,cAAI,QAAQ,KACV,oBAAmB,IAAA;QAEvB;AAEA,YAAIA,OAAM,mBAAmBA,OAAM,YAAY,MAAM,QAAQ,WAAW,KAAA,GAAQ;AAC9E,gBAAM,WAAW,QAAgBA,OAAM,YAAY,GAAA,KAAQ,CAAE,CAAA;AAE7D,cAAI,MAEF,YAAW,QAAQ,CAAC,GAAG,WAAW,KAAK,EACpC,OAAO,CAAA,MAAA,CAAM,SAAS,KAAK,CAAA,UAASA,OAAM,OAAO,KAAY,CAAE,CAAA,MAAMA,OAAM,OAAO,KAAA,CAAa,CAAC;cAInG,YAAW,QAAQ,CAAC,GAAG,WAAW,OAAO,GAAG,QAAQ;QAExD;MACD;MACD;MACA,SAAS,KAAK;AACZ,cAAM,WAAW,MAAMA,OAAM,YAAY,GAAA,IAAI;AAC7C,YAAA,CAAK,SACH;AAEF,cAAM,MAAMA,OAAM,OAAO,GAAA,KAAQ;AACjC,YAAI,SAAS,MAAM,SAAS,GAAA,EAC1B,UAAS,QAAQ,SAAS,MAAM,OAAO,CAAA,UAAO,UAAQ,GAAA;YAEtD,UAAS,MAAM,KAAK,GAAA;MACvB;MACD,QAAQA,OAAM;MACd,aAAaA,OAAM;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;IACD,CAAA;;0BAIC,YAoBmB,MAAA,wBAAA,GAAA;iBAnBb;QAAJ,KAAI;QACJ,YAAA;QACA,aAAY;QACX,KAAK,MAAA,GAAA;;yBAEN,MAaY,CAbZ,YAaY,MAAA,SAAA,GAAA;UAZV,MAAK;UACJ,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,wBAAsB,MAAA,QAAA,IAAQ,OAAA;UAC9B,WAAO,CAAE,eAAA,SAAA,cACc,yBAAuB,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,MAAA,CAAA,CAAA;;2BAE/C,MAIE,CAJF,WAIE,KAAA,QAAA,WAAA;YAHC,cAAe,cAAA;YACf,YAAa,MAAA,UAAA;YACb,UAAU,MAAA,QAAA;;;;;;;;;;;;;;;;;AElRnB,IAAM,cAAc;AACpB,IAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;AAiBpB,UAAMC,SAAQ;AAId,UAAM,QAAQ;AAWd,UAAM,cAAc,sBAAA;AACpB,UAAM,EAAE,SAAA,IAAa,cAAA;AAErB,UAAM,cAAc,SAAS,MAAA,CAAA,CAAQ,YAAY,YAAYA,OAAM,KAAA,CAAM;AAEzE,UAAM,aAAa,SAAS,MAAM;AAChC,YAAM,MAAM,YAAY,OAAOA,OAAM,KAAA;AACrC,aAAO,YAAY,SAAS,MAAM,SAAS,GAAA;IAC5C,CAAA;AAED,UAAM,aAAa,SAAS,MAAM;AAChC,YAAM,MAAM,YAAY,OAAOA,OAAM,KAAA;AACrC,aAAO,YAAY,aAAa,MAAM,SAAS,GAAA;IAChD,CAAA;AAED,UAAMC,mBAAkB,SAAS,MAAM;AACrC,UAAI,YAAY,aAAa,SAAS,YAAY,SAAS,MAAM,QAAQ,YAAY,WAAW,KAAA,GAAQ;AACtG,cAAM,WAAW,QAAgB,YAAY,YAAYD,OAAM,KAAA,KAAU,CAAE,CAAA;AAE3E,eAAO,SAAS,KAAK,CAAA,UAAS,YAAY,WAAW,MAAM,KAAK,CAAC,MAAW,YAAY,OAAO,CAAA,MAAO,YAAY,OAAO,KAAA,CAAM,CAAC,KAAA,CAC1H,SAAS,MAAM,CAAA,UAAS,YAAY,WAAW,MAAM,KAAK,CAAC,MAAW,YAAY,OAAO,CAAA,MAAO,YAAY,OAAO,KAAA,CAAM,CAAC;MAClI,WACS,YAAY,gBAAgB,SAAS,WAAW,SAAS,YAAY,SAAS,MAAM,QAAQ,YAAY,WAAW,KAAA,GAAQ;AAClI,cAAM,WAAW,QAAgB,YAAY,YAAYA,OAAM,KAAA,KAAU,CAAE,CAAA;AAE3E,eAAA,CAAQ,SAAS,MAAM,CAAA,UAAS,YAAY,WAAW,MAAM,KAAK,CAAC,MAAW,YAAY,OAAO,CAAA,MAAO,YAAY,OAAO,KAAA,CAAM,CAAC;MACpI,MAEE,QAAA;IAEH,CAAA;AAED,aAAS,mBAAmB,IAAmB;AAC7C,UAAA,CAAK,YAAY,MACf;AAEF,UAAI,WAAW,OAAO;AAEpB,cAAM,aAAa,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA;AACzC,cAAM,iBAAiB,iBAAA;AACvB,cAAM,eAAe,WAAW,QAAQ,cAAA;AACxC,cAAM,OAAO,CAAC,GAAG,UAAW,EAAC,MAAM,YAAA;AACnC,cAAM,cAAc,KAAK,KAAK,CAAA,OAAM,OAAO,GAAG,aAAa,aAAA,CAAc,MAAOA,OAAM,QAAQ,CAAA;AAE9F,YAAI,YACF,aAAY,MAAA;MAChB,MAGE,yBAAwB,EAAA;IAE5B;AAEA,aAAS,kBAAkB,IAAmB;AAC5C,UAAI,WAAW,MAEb,yBAAwB,EAAA;WAErB;AAEH,cAAM,aAAa,SAAA,EAAW,IAAI,CAAA,MAAK,EAAE,GAAA;AACzC,cAAM,iBAAiB,iBAAA;AACvB,cAAM,eAAe,WAAW,QAAQ,cAAA;AACxC,cAAM,OAAO,CAAC,GAAG,UAAW,EAAC,MAAM,GAAG,YAAA,EAAc,QAAA;AACpD,cAAM,gBAAgB,KAAK,KAAK,CAAA,OAAM,OAAO,GAAG,aAAa,aAAA,CAAc,MAAOA,OAAM,QAAQ,CAAA;AAEhG,YAAI,cACF,eAAc,MAAA;MAClB;IACF;AAEA,mBAAeE,cAAa,IAAoB;AAC9C,YAAM,UAAU,EAAA;AAChB,UAAI,yBAAI,iBACN;AAEF,kBAAY,SAASF,OAAM,KAAA;IAC7B;AACA,mBAAe,aAAa,IAAoB;AAC9C,YAAM,UAAU,EAAA;AAChB,UAAI,yBAAI,iBACN;AAEF,kBAAY,SAASA,OAAM,KAAA;IAC7B;AAEA,mBAAe,wBAAwB,IAAmC;AACxE,UAAA,CAAK,GACH;AAEF,YAAM,cAAc;QAAE,eAAe;QAAI,OAAOA,OAAM;QAAO,YAAY,WAAW;QAAO,YAAY,WAAW;MAAM;AACxH,mCAA6B,aAAaE,eAAc,WAAA;IAC1D;AAEA,mBAAe,wBAAwB,IAAmC;AACxE,UAAA,CAAK,GACH;AAEF,YAAM,cAAc;QAAE,eAAe;QAAI,OAAOF,OAAM;QAAO,YAAY,WAAW;QAAO,YAAY,WAAW;MAAM;AACxH,mCAA6B,aAAa,cAAc,WAAA;IAC1D;AAEA,aAAa;MACX;MACA;MACA,iBAAAC;MACA,cAAc,MAAM,YAAY,SAASD,OAAM,KAAA;MAC/C,cAAc,MAAM,YAAY,SAASA,OAAM,KAAA;IAChD,CAAA;;0BAIC,YAgCkB,MAAA,uBAAA,GAAA;QA/BhB,YAAA;QACC,OAAOG,KAAAA;QACR,mBAAA;;yBAEA,MA0BY,CA1BZ,YA0BY,MAAA,SAAA,GA1BZ,WACUC,KAyBE,QAzBI;UACd,MAAK;UACJ,IAAIC,KAAAA;UACJ,YAAUC,KAAAA;UACV,iBAAe,WAAA;UACf,iBAAe,YAAA,QAAc,WAAA,QAAA;UAC7B,cAAYC,KAAAA;UACZ,eAAaA,KAAAA;UACb,iBAAe,WAAA,QAAU,KAAA;UACzB,iBAAe,WAAA,QAAU,KAAA;UACzB,WAAO;mCAA2B,yBAAuB,CAAA,QAAA,SAAA,CAAA,GAAA,CAAA,SAAA,OAAA,CAAA;8DACjC,OAAO,MAAA,WAAA,EAAY,IAAI,UAAK,QAAa,mBAAmB,EAAA,IAAM,kBAAkB,EAAA,GAAE,CAAA,SAAA,CAAA,GAAA,CAAA,OAAA,CAAA;8DACvF,OAAO,MAAA,WAAA,EAAY,IAAI,UAAK,QAAa,kBAAkB,EAAA,IAAM,mBAAmB,EAAA,GAAE,CAAA,SAAA,CAAA,GAAA,CAAA,MAAA,CAAA;;UAC7G,SAAK,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,cAAA,CAAQ,OAAE;AAAe,oCAAwB,EAAA;AAAY,oCAAwB,EAAA;;;2BAK3F,MAME,CANF,WAME,KAAA,QAAA,WAAA;YALC,YAAa,WAAA;YACb,YAAa,WAAA;YACb,iBAAkBN,iBAAA;YAClB,cAAa,MAAQ,MAAA,WAAA,EAAY,SAASE,KAAAA,KAAAA;YAC1C,cAAa,MAAQ,MAAA,WAAA,EAAY,SAASA,KAAAA,KAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AExKnD,UAAMK,SAAQ;AAUd,UAAM,QAAQ,SAAA;AACd,UAAM,cAAc,sBAAA;AACpB,UAAM,WAAW,iBAAA;AACjB,UAAM,EAAE,SAAA,IAAa,cAAA;AAGrB,UAAM,SAAS,aAAa,IAAI,GAAA;AAChC,UAAM,sBAAsB,SAAS,MAAM;AACzC,YAAM,mBAAmB,CAAC,WAAgC;AACxD,YAAIA,OAAM,YACR,QAAOA,OAAM,YAAY,MAAA;YAEzB,QAAO,OAAO,SAAA,EAAW,YAAA;MAC7B;AAEA,aAAO,YAAY,cAAc,MAAM,IAAI,CAAC,QAAQ,WAAW;QAC7D;QACA,aAAa,iBAAiB,OAAO,KAAA;MACtC,EAAA;IACF,CAAA;AAGD,gBAAY,UAAU,QAAQ;AAE9B,UAAM,UAAU,SAAS,MAAM;AAC7B,YAAM,KAAK,SAAS;AACpB,UAAA,CAAK,GACH,QAAO;QAAE,OAAO;QAAG,KAAK;MAAE;WAEvB;AACH,cAAM,SAAS,OAAO,iBAAiB,EAAA;AACvC,eAAO;UACL,OAAO,OAAO,WAAW,OAAO,qBAAqB,OAAO,UAAA;UAC5D,KAAK,OAAO,WAAW,OAAO,mBAAmB,OAAO,aAAA;QAC1D;MACF;IACD,CAAA;AAED,UAAM,cAAc,eAClB;MACE,IAAI,qBAAqB;AAAE,eAAO,QAAQ,MAAM;MAAO;MACvD,IAAI,mBAAmB;AAAE,eAAO,QAAQ,MAAM;MAAK;MACnD,IAAI,QAAQ;AAAE,eAAO,YAAY,cAAc,MAAM,UAAU;MAAG;MAClE,IAAI,aAAa;AAAE,eAAO;MAAO;MACjC,WAAW,OAAO;AAChB,eAAO,QAAQ,YAAY,OAAO,YAAY,cAAc,MAAM,KAAA,EAAO,KAAA;MAC1E;MACD,eAAe;AACb,eAAOA,OAAM,gBAAgB;MAC9B;MACD,mBAAmB;AAAE,eAAO,SAAS;MAAO;MAC5C,UAAUA,OAAM,YAAY;IAC7B,CAAA;AAGH,UAAM,mBAAmB,SAAS,MAAM,YAAY,MAAM,gBAAA,EAAkB,IAAI,CAAC,SAAS;AACxF,aAAO;QACL;QACA,IAAI,WAAW,MAAM,QAAS;UAC5B,MAAM,YAAY,cAAc,MAAM,KAAK,KAAA;UAC3C,aAAa,YAAY;UACzB,aAAa;QACd,CAAA,EAAG,CAAA,GAAI;UACN,cAAc,KAAK;UACnB,SAAS;YACP,UAAU;YACV,KAAK;YACL,MAAM;YACN,WAAW,cAAc,KAAK,KAAA;YAC9B,gBAAgB;UACjB;QACF,CAAA;MACH;IACD,CAAA,CAAC;AAEF,aAAS,sBAAsB,OAAe;AAC5C,kBAAY,MAAM,cAAc,OAAO,EAAE,OAAO,QAAS,CAAA;AACzD,4BAAsB,MAAM;AAC1B,cAAM,OAAO,SAAS,MAAM,cAAc,gBAAgB,KAAA,IAAS;AACnE,YAAI,gBAAgB,YAClB,MAAK,MAAA;MACR,CAAA;IACH;AAEA,gBAAY,mBAAmB,GAAG,CAAC,UAAU;;AAC3C,YAAM,YAAY,MAAM,UAAU,MAAM,WAAW,MAAM;AACzD,YAAM,WAAW,MAAM,QAAQ,SAAA,CAAU;AACzC,UAAI,SACF;AAEF,YAAM,SAAS,wBAAwB,MAAM,GAAA;AAE7C,UAAI,CAAC,SAAS,MAAO,EAAC,SAAS,MAAA,GAAS;AACtC,cAAM,eAAA;AAEN,cAAM,QAAQ,WAAW,UAAU,IAAI,YAAY,cAAc,MAAM,SAAS;AAChF,oBAAY,MAAM,cAAc,KAAA;AAChC,8BAAsB,MAAM;AAC1B,gBAAM,QAAQ,SAAA;AACd,gBAAM,OAAO,WAAW,UAAU,MAAM,CAAA,IAAK,MAAM,MAAM,SAAS,CAAA;AAClE,eAAK,IAAI,MAAA;QACV,CAAA;MACH,WACS,WAAW,UAAU,MAAM,QAAQ,WAAW;AACrD,cAAM,iBAAiB,iBAAA;AACvB,cAAM,eAAe,OAAO,eAAe,aAAa,YAAA,CAAa;AACrE,cAAM,eAAe,OAAO,eAAe,aAAa,aAAA,CAAc;AACtE,cAAM,OAAO,YAAY,cAAc,MAAM,MAAM,GAAG,YAAA,EAAc,IAAI,CAAC,MAAM,WAAW;UAAE,GAAG;UAAM;QAAO,EAAA,EAAG,QAAA;AAE/G,cAAM,aAAa,KAAK,KAAK,CAAA,SAAQ,KAAK,UAAW,eAAe,CAAA;AACpE,YAAI,WACF,uBAAsB,WAAW,KAAA;MACrC,WAAA,CACU,UAAA,CAAW,WAAW;AAC9B,eAAO,SAAS,MAAM;AACtB,cAAM,eAAe,QAAO,sBAAA,MAAA,mBAAoB,aAAa,aAAa;AAC1E,cAAM,eAAe,oBAAoB,MAAM,YAAA,EAAc;AAC7D,cAAM,kBAAkB,oBAAoB,MAAM,IAAI,CAAA,MAAK,EAAE,WAAA;AAC7D,cAAM,OAAO,aAAa,iBAAiB,OAAO,OAAO,YAAA;AAEzD,cAAM,YAAY,oBAAoB,MAAM,KAAK,CAAA,WAAU,OAAO,gBAAgB,IAAA;AAClF,YAAI,UACF,uBAAsB,UAAU,KAAA;MACpC;AAEA,eAAS,MAAM;AACb,YAAI,MAAM,YAAY,OACpB,aAAY,sBAAsB,QAAQ,iBAAA,GAAoB,UAAU,YAAY,cAAc,MAAM,IAAI,CAAA,MAAK,EAAE,KAAA,CAAM;MAC5H,CAAA;IACF,CAAA;;0BAIC,mBAaM,OAAA;QAZJ,yBAAA;QACC,OAAK,eAAA;;;qBAAsE,MAAA,WAAA,EAAY,aAAA,CAAY;;4BAMpG,mBAIE,UAAA,MAAA,WAFuB,iBAAA,OAAgB,CAAA,EAA9B,IAAI,KAAA,MAAI;4BAFnB,YAIE,wBAHK,EAAA,GAAE,EAEN,KAAK,KAAK,IAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;AEjKjB,UAAMC,SAAQ;AACd,UAAM,EAAE,WAAA,IAAe,iBAAA;AAEvB,UAAM,EAAE,OAAO,UAAA,IAAc,OAAOA,MAAA;AACpC,UAAM,QAAQ,SAAS,SAAA;;8DAIrB,YAeY,MAAA,SAAA,GAfZ,WAeY;QAAA,GAdGC,KAAAA;QAAM,GAAKD;MAAK,GAAA;QAC5B,KAAK,MAAA,UAAA;QACN,sBAAA;QACA,MAAK;QACJ,OAAO;;;;QAOP;;yBAED,MAAQ,CAAR,WAAQ,KAAA,QAAA,SAAA,CAAA,CAAA;;cAEV,YAQY,MAAA,SAAA,GAAA;QAPV,IAAG;QACF,OAAO,MAAA,KAAA;;yBACT,MAKD,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,gBALC,2PAAA,CAKD,EAAA;;;;;;;;",
  "names": ["arrayA: any[]", "arrayB: any[]", "array: T[]", "start: T", "end: T", "value: number", "min: number", "max: number", "max", "min", "step: number", "min: number | undefined", "max: number | undefined", "providerComponentName: string | string[]", "contextName?: string", "injectionKey: InjectionKey<ContextValue | null>", "fallback?: T", "context", "contextValue: ContextValue", "name: string", "handler: ((event: E) => void) | undefined", "detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D>\n    ? D\n    : never)", "value: any", "base: T | T[] | undefined", "current: T | T[] | undefined", "children?: VNode[]", "e: KeyboardEvent", "currentElement: HTMLElement", "parentElement: HTMLElement | undefined", "options: ArrowNavigationOptions", "focus", "allCollectionItems: HTMLElement[]", "item: HTMLElement | null", "elements: HTMLElement[]", "options: FindNextFocusableElementOptions", "props", "c", "context", "stopTouchMoveListener: Fn | null", "e: TouchEvent", "initialState?: boolean | undefined", "ele: Element", "rawEvent: TouchEvent", "date", "offset", "min", "max", "round", "res", "ms", "min", "max", "offset", "offset", "c", "min", "max", "dateStr: string", "referenceVal: DateValue", "dateValue: DateValue", "tz: string", "date: Date | DateValue", "dateToCompare: DateValue", "referenceDate: DateValue", "date: DateValue", "start: DateValue", "end: DateValue", "date: T", "firstDayOfWeek: number", "locale: string", "isUnavailable: Matcher | undefined", "isDisabled: Matcher | undefined", "isHighlightable?: Matcher | undefined", "props: GetDefaultDateProps", "props", "calendarDateTimeGranularities", "props: GetDefaultTimeProps", "arr: T[]", "size: number", "size", "granularity: Granularity", "hourCycle: HourCycle", "isTimeValue: boolean", "opts: Intl.DateTimeFormatOptions", "props?: GetDefaultDateStepProps", "props", "calendar: HTMLElement", "start: DateValue", "end: DateValue", "days: DateValue[]", "props: CreateMonthProps", "props", "props: SetMonthProps", "props", "months: Grid<DateValue>[]", "initialLocale: string", "opts: DateFormatterOptions", "newLocale: string", "date: Date", "options: DateFormatterOptions", "date: DateValue", "options?: DateFormatterOptions", "length: DateFormatterOptions['weekday']", "defaultPartOptions: DateFormatterOptions", "dateObj: DateValue", "type: Intl.DateTimeFormatPartTypes", "opts", "part", "dir?: Ref<Direction | undefined>", "context", "emit: (name: Name, ...args: any[]) => void", "result: Record<string, any>", "options?: MaybeRef<Intl.CollatorOptions>", "string: string", "substring: string", "el: MaybeElementRef", "toValue", "localExpose: Record<string, any> | null", "ret: Record<string, any>", "ref: Element | T | null", "ref", "props: MaybeRefOrGetter<T>", "props", "props: MaybeRefOrGetter<T>", "emit?: (name: Name, ...args: any[]) => void", "props", "triggerElement: Ref<HTMLElement | undefined>", "containerElement: Ref<HTMLElement | undefined>", "event: PointerEvent", "hoverTarget: HTMLElement", "_a", "point: Point", "rect: DOMRect", "exitPoint: Point", "exitSide: Side", "paddedExitPoints: Point[]", "polygon: Polygon", "points: Readonly<Array<P>>", "newPoints: Array<P>", "a: Point", "b: Point", "upperHull: Array<P>", "lowerHull: Array<P>", "target: MaybeElementRef", "undo: ReturnType<typeof hideOthers>", "count", "useId", "deterministicId?: string | null | undefined", "locale?: Ref<string | undefined>", "context", "modelValue: Ref<T | T[]>", "props: UnwrapNestedRefs<{ multiple?: boolean, selectionBehavior?: 'toggle' | 'replace' }>", "val: T", "condition: (existingValue: T) => boolean", "props", "intent: 'first' | 'last' | 'prev' | 'next'", "currentElement: HTMLElement | Element | null", "getItems: () => { ref: HTMLElement, value?: any }[]", "options: any[]", "value: T[] | null", "element: MaybeElementRef", "size", "width: number", "height: number", "initialState: MachineState<M>", "machine: M & Machine<MachineState<M>>", "event: MachineEvent<M>", "callback?: (search: string) => void", "key: string", "items: { ref: HTMLElement, value?: any }[]", "array: T[]", "startIndex: number", "values: string[]", "search: string", "currentMatch?: string", "WrappedComponent: T", "options?: MountingOptions<any>", "present: Ref<boolean>", "node: Ref<HTMLElement | undefined>", "timeoutId: number | undefined", "name: 'enter' | 'after-enter' | 'leave' | 'after-leave'", "_a", "event: AnimationEvent", "node?: HTMLElement", "props", "props", "props", "as", "props", "useId", "forceMount", "$attrs", "as", "props", "as", "props: P", "emits: (name: Name, ...args: any[]) => void", "props", "value: AcceptableValue", "props", "asChild", "as", "props", "props", "as", "props", "props", "useId", "props", "props", "as", "layerElement: HTMLElement", "targetElement: HTMLElement", "onPointerDownOutside?: (event: PointerDownOutsideEvent) => void", "element?: Ref<HTMLElement | undefined>", "enabled: MaybeRefOrGetter<boolean>", "ownerDocument: Document", "handlePointerDown", "event: PointerEvent", "onFocusOutside?: (event: FocusOutsideEvent) => void", "event: FocusEvent", "props", "asChild", "as", "props", "focusScope: FocusScopeAPI", "array: T[]", "item: T", "items: HTMLElement[]", "candidates: HTMLElement[]", "container: HTMLElement", "nodes: HTMLElement[]", "node: any", "elements: HTMLElement[]", "node: HTMLElement", "element: any", "element?: FocusableTarget | null", "props", "asChild", "as", "SUB_OPEN_KEYS: Record<Direction, string[]>", "SUB_CLOSE_KEYS: Record<Direction, string[]>", "open: boolean", "checked?: CheckedState", "checked: CheckedState", "focusFirst", "candidates: HTMLElement[]", "isPointInPolygon", "point: Point", "polygon: Polygon", "event: PointerEvent", "area?: Polygon", "props", "useId", "as", "asChild", "disableOutsidePointerEvents", "$attrs", "props", "props", "props", "forceMount", "$attrs", "props", "as", "asChild", "forceMount", "$attrs", "as", "asChild", "forceMount", "to", "disabled", "defer", "props", "props", "props", "useId", "as", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "asChild", "as", "$attrs", "asChild", "as", "props", "asChild", "as", "image: HTMLImageElement | null", "src?: string", "src: Ref<string>", "status: ImageLoadingStatus", "props", "asChild", "as", "part: unknown", "part: string", "placeholders: PlaceholderMap", "locale: SupportedLocale | (string & {})", "field: Field", "value: string", "locale: string", "field: unknown", "props: SyncTimeSegmentValuesProps", "props", "props: SyncDateSegmentValuesProps", "granularity: 'hour' | 'minute' | 'second'", "granularity: Granularity", "props: CreateContentObjProps", "part: DateSegmentPart | TimeSegmentPart", "props: CreateContentArrProps", "props: CreateContentProps", "key: string", "value: string", "parentElement: HTMLElement", "props: SegmentAttrProps", "props", "_props: SegmentAttrProps", "props: UseDateFieldProps", "min", "max", "cycleArgs: [keyof TimeFields, number]", "prevValue: number | null", "cycleArgs: [keyof DateFields | keyof TimeFields, number, CycleTimeOptions?]", "cycleArgs", "cycleArgs: [keyof DateFields, number]", "max: number", "num: number", "prev: number | null", "e: KeyboardEvent", "e: MouseEvent", "props: UseCalendarStateProps", "dateObj: DateValue", "props", "lastPeriodInView: DateValue", "nextPageFunc: (date: DateValue) => DateValue", "duration: DateFields", "firstPeriodInView: DateValue", "prevPageFunc: (date: DateValue) => DateValue", "date: DateValue", "props: UseCalendarProps", "options: DateFormatterOptions", "nextPageFunc?: (date: DateValue) => DateValue", "firstPeriodOfNextPage", "prevPageFunc?: (date: DateValue) => DateValue", "lastPeriodOfPrevPage", "newDate", "newGrid", "props", "as", "asChild", "as", "asChild", "date", "calendar: HTMLElement", "props", "day", "props", "props", "props", "props", "props", "props", "props", "props", "as", "props", "as", "options: { key?: string, isProvider?: boolean }", "context: CollectionContext<ItemData>", "context", "props", "key", "EVENT_OPTIONS", "MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent>", "key: string", "dir?: Direction", "event: KeyboardEvent", "orientation?: Orientation", "focusFirst", "candidates: HTMLElement[]", "wrapArray", "array: T[]", "startIndex: number", "props", "EVENT_OPTIONS", "focusFirst", "as", "asChild", "props", "context", "useId", "wrapArray", "focusFirst", "active", "focusable", "as", "asChild", "as", "asChild", "feature", "props", "$attrs", "props", "name", "$attrs", "value", "props", "as", "asChild", "name", "required", "isIndeterminate", "checked?: CheckedState", "checked: CheckedState", "props", "isIndeterminate", "$attrs", "id", "asChild", "as", "required", "name", "value", "forceMount", "isIndeterminate", "asChild", "as", "$attrs", "props", "as", "asChild", "props", "width", "height", "asChild", "rounded", "_hoisted_1", "_hoisted_2", "value: T | null", "options: {\n  arrowWidth: number\n  arrowHeight: number\n}", "placement: Placement", "clamp", "platform", "max", "offset", "clamp", "platform", "placements", "sides", "side", "placement", "overflow", "platform", "x", "y", "min", "max", "clamp", "offset", "getComputedStyle", "getComputedStyle", "offset", "shift", "flip", "size", "hide", "arrow", "limitShift", "computePosition", "unwrapElement", "toValue", "arrow", "computePosition", "props", "offset", "flip", "shift", "limitShift", "size", "arrow", "hide", "$attrs", "as", "$attrs", "as", "asChild", "rounded", "width", "height", "reference", "asChild", "as", "$attrs", "parentEl: HTMLElement | null", "value: T | T[] | undefined", "currentValue: T", "comparator?: string | ((a: T, b: T) => boolean)", "value?: T", "currentValue?: T", "props", "as", "asChild", "name", "required", "as", "asChild", "props", "as", "asChild", "props", "useId", "props", "props", "useId", "handleSelect", "value", "$attrs", "as", "asChild", "props", "range", "offset", "size", "offset", "opts", "count", "min", "size", "range", "options", "props", "props", "_a", "_b", "_c", "$attrs", "as", "asChild", "name", "required", "props", "disableOutsidePointerEvents", "$attrs", "props", "props", "as", "props", "useId", "forceMount", "$attrs", "props", "props", "useId", "context", "props", "as", "asChild", "autoFocus", "disabled", "props", "useId", "disabled", "value", "props", "props", "useId", "props", "props", "props", "as", "nonce?: Ref<string | undefined>", "context", "props", "$attrs", "props", "props", "props", "props", "props", "focusFirst", "handlePointerMove", "as", "asChild", "side", "sideOffset", "align", "alignOffset", "avoidCollisions", "collisionBoundary", "collisionPadding", "arrowPadding", "prioritizePosition", "positionStrategy", "updatePositionStrategy", "sticky", "hideWhenDetached", "reference", "props", "handlePointerMove", "textValue", "$attrs", "as", "asChild", "disabled", "props", "handleSelect", "disabled", "forceMount", "as", "asChild", "props", "props", "props", "props", "forceMount", "$attrs", "props", "props", "props", "props", "props", "props", "props", "props", "useId", "forceMount", "props", "useId", "handlePointerMove", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "event: PointerEvent", "props", "handlePointerDown", "as", "asChild", "$attrs", "props", "$attrs", "id", "name", "required", "props", "as", "asChild", "part", "props", "props", "props", "props", "props", "props", "props", "props", "props", "as", "props", "props", "trapFocus", "disableOutsidePointerEvents", "props", "props", "props", "useId", "forceMount", "props", "props", "portal", "$attrs", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "useId", "as", "props", "props", "_a", "_b", "$attrs", "id", "_d", "_c", "name", "required", "props", "as", "asChild", "part", "type", "props", "props", "props", "_a", "props: UseRangeCalendarProps", "props", "date: DateValue", "props", "as", "asChild", "_hoisted_1", "_hoisted_2", "_a", "as", "asChild", "date", "props", "props", "as", "asChild", "day", "props", "props", "props", "portal", "$attrs", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "as", "asChild", "props", "props", "as", "asChild", "props", "props", "props", "props", "props", "props", "useId", "_a", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "useId", "as", "disabled", "props", "$attrs", "as", "asChild", "props", "context", "props", "context", "as", "props", "context", "as", "props", "context", "props", "context", "props", "context", "as", "props", "props", "eventHandler: () => void", "event: PointerEvent", "container: HTMLElement", "nodes: HTMLElement[]", "node: any", "props", "handlePointerUp", "$attrs", "props", "forceMount", "props", "reference", "asChild", "as", "props", "props", "props", "props", "props", "useId", "props", "useId", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "props", "disabled", "as", "asChild", "props", "useId", "as", "asChild", "orientation", "getOpenState", "open: boolean", "baseId: string", "value: string", "getTabbableCandidates", "container: HTMLElement", "nodes: HTMLElement[]", "node: any", "focusFirst", "candidates: HTMLElement[]", "handler: (event?: E) => void", "event: E", "props", "context", "useId", "triggerRef", "getTabbableCandidates", "focusFirst", "asChild", "as", "props", "getTabbableCandidates", "focusFirst", "getOpenState", "props", "forceMount", "getOpenState", "$attrs", "props", "forceMount", "as", "$attrs", "props", "as", "active", "props", "$attrs", "as", "props", "orientation", "as", "props", "handlePointerMove", "disabled", "getOpenState", "as", "$attrs", "props", "size", "_a", "forceMount", "$attrs", "as", "asChild", "getOpenState", "p", "options: { target?: MaybeComputedElementRef, disabled: Ref<boolean> }", "delay: number", "event: PointerEvent", "locale: Ref<string>", "options: Ref<Intl.NumberFormatOptions | undefined>", "operator: '-' | '+'", "value1: number", "value2: number", "props", "min", "max", "$attrs", "as", "asChild", "name", "required", "props", "as", "props", "as", "props", "props", "props", "as", "asChild", "props", "as", "props", "as", "start: number", "end: number", "items: (string | number)[]", "currentPage: number", "pageCount: number", "siblingCount: number", "showEdges: boolean", "props", "props", "value", "as", "props", "as", "props", "as", "props", "$attrs", "id", "name", "required", "props", "context", "as", "asChild", "index", "max", "props", "asChild", "as", "getValueText", "getValueLabel", "props", "event: MouseEvent", "value: AcceptableValue | undefined", "callback: (event: SelectEvent) => void", "props", "$attrs", "id", "as", "asChild", "disabled", "required", "name", "props", "asChild", "as", "props", "ARROW_KEYS", "$attrs", "value", "forceMount", "asChild", "as", "$attrs", "props", "as", "$parent", "props", "input: readonly [number, number]", "output: readonly [number, number]", "value: number", "sizes: Sizes", "viewportSize: number", "contentSize: number", "node: HTMLElement", "scrollPos: number", "dir: Direction", "value?: string", "pointerPos: number", "pointerOffset: number", "offset", "maxScrollPos: number", "forceMount", "$attrs", "forceMount", "$attrs", "forceMount", "$attrs", "props", "$attrs", "offset", "$attrs", "props", "handlePointerDown", "handlePointerMove", "handlePointerUp", "props", "handlePointerDown", "handlePointerUp", "as", "props", "$attrs", "as", "props", "SELECTION_KEYS", "valueComparator", "value: T | T[] | undefined", "currentValue: T", "comparator?: string | ((a: T, b: T) => boolean)", "compare", "value?: T", "currentValue?: T", "value?: AcceptableValue | AcceptableValue[]", "props", "compare", "valueComparator", "name", "autocomplete", "_hoisted_1", "props", "props", "focusFirst", "handlePointerMove", "handlePointerUp", "valueComparator", "position", "$attrs", "props", "$attrs", "props", "props", "props", "$attrs", "_hoisted_1", "props", "useId", "as", "asChild", "props", "valueComparator", "useId", "handleSelect", "handlePointerMove", "SELECTION_KEYS", "as", "asChild", "props", "props", "$attrs", "props", "props", "handlePointerDown", "handlePointerMove", "$parent", "props", "props", "useId", "reference", "as", "asChild", "_a", "props", "valueComparator", "_a", "as", "asChild", "props", "$attrs", "props", "as", "asChild", "props", "prevValues: number[]", "nextValue: number", "atIndex: number", "value: number", "min: number", "max: number", "max", "min", "index: number", "totalValues: number", "values: number[]", "width: number", "left: number", "direction: number", "offset", "linearScale", "minStepsBetweenValues: number", "input: readonly [number, number]", "output: readonly [number, number]", "decimalCount: number", "BACK_KEYS: Record<SlideDirection, string[]>", "props", "max", "min", "linearScale", "props", "max", "min", "linearScale", "props", "min", "max", "$attrs", "asChild", "as", "inverted", "name", "required", "props", "asChild", "as", "props", "size", "$attrs", "asChild", "as", "index", "props", "asChild", "as", "expectedCondition: any", "id: string", "rootElement: ParentNode | HTMLElement", "scope: ParentNode | HTMLElement", "groupId: string", "handleId: string", "panelsArray: PanelData[]", "idBefore: string | null", "idAfter: string | null", "event: ResizeEvent", "isMouseEvent", "direction: Direction", "event: ResizeEvent", "dragHandleId: string", "direction: Direction", "initialDragState: DragState", "panelGroupElement: HTMLElement", "initialDragState: DragState | null", "keyboardResizeBy: number | null", "layout: number[]", "size", "panelsArray: PanelData[]", "layout: number[]", "panelIdToLastNotifiedSizeMap: Record<string, number>", "size", "debounce", "callback: T", "timeoutId: NodeJS.Timeout | null", "actual: number", "expected: number", "fractionDigits: number", "fractionDigits?: number", "size", "a: number[]", "b: number[]", "panelConstraints", "delta", "pivotIndex", "prevSize", "unsafeSize", "safeSize", "size", "groupId: string", "dragHandleId: string", "panelGroupElement: ParentNode", "rectOne: Rectangle", "rectTwo: Rectangle", "strict: boolean", "compare", "a: HTMLElement", "b: HTMLElement", "node: HTMLElement", "nodes: HTMLElement[]", "node: HTMLElement | null", "intersectingHandles: ResizeHandlerData[]", "ownerDocumentCounts: Map<Document, number>", "panelConstraintFlags: Map<string, number>", "resizeHandleId: string", "element: HTMLElement", "direction: Ref<Direction>", "hitAreaMargins: PointerHitAreaMargins", "nonce: Ref<string | undefined>", "setResizeHandlerState: SetResizeHandlerState", "data: ResizeHandlerData", "count", "event: ResizeEvent", "targetElement: HTMLElement | null", "compare", "currentElement: HTMLElement | null", "flag: number", "nonce: string | undefined", "action: ResizeHandlerAction", "currentCursorStyle: string | null", "styleElement: HTMLStyleElement | null", "state: CursorState", "constraintFlags: number", "nonce?: string", "size", "size", "panelDataArray", "event: KeyboardEvent", "size", "panelData", "storageObject: PanelGroupStorage", "name: string", "value: string", "autoSaveId: string", "panels: PanelData[]", "storage: PanelGroupStorage", "panelSizesBeforeCollapse: Map<string, number>", "sizes: number[]", "props", "useId", "debounce", "registerResizeHandle", "isMouseEvent", "resizePanel", "as", "asChild", "props", "resizePanel", "useId", "size", "as", "asChild", "collapsible", "event: KeyboardEvent", "props", "useId", "_a", "as", "asChild", "tabindex", "props", "as", "asChild", "orientation", "_hoisted_1", "props", "useId", "as", "asChild", "props", "props", "props", "props", "as", "asChild", "props", "$attrs", "id", "as", "value", "required", "asChild", "name", "asChild", "as", "props", "useId", "asChild", "as", "makeTriggerId", "baseId: string", "value: StringOrNumber", "makeContentId", "props", "makeTriggerId", "makeContentId", "forceMount", "asChild", "as", "props", "context", "props", "context", "asChild", "as", "props", "makeTriggerId", "makeContentId", "disabled", "as", "asChild", "value", "props", "max", "as", "asChild", "name", "required", "props", "context", "as", "props", "context", "as", "asChild", "maxLength", "placeholder", "props", "context", "as", "asChild", "props", "context", "as", "props", "useId", "props", "$attrs", "id", "name", "required", "props", "as", "asChild", "part", "as", "asChild", "altText", "props", "handleAndDispatchCustomEvent", "name: string", "handler: ((event: E) => void) | undefined", "detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D>\n    ? D\n    : never)", "delta: { x: number, y: number }", "direction: SwipeDirection", "isHTMLElement", "node: any", "container: HTMLElement", "textContent: string[]", "isHidden", "props", "type", "$attrs", "as", "asChild", "open", "clamp", "handleAndDispatchCustomEvent", "props", "as", "props", "altText", "as", "asChild", "props", "props", "props", "forceMount", "type", "as", "asChild", "duration", "$attrs", "props", "props", "as", "asChild", "$attrs", "props", "orientation", "asChild", "as", "name", "required", "props", "as", "disabled", "name", "required", "props", "value", "props", "disabled", "as", "props", "props", "loop", "asChild", "as", "props", "as", "props", "props", "props", "props", "props", "props", "$attrs", "props", "props", "forceMount", "props", "props", "useId", "isPointerDown", "handlePointerMove", "handlePointerDown", "handlePointerUp", "reference", "as", "items: T[]", "acc: any[]", "item: T", "props", "as", "asChild", "props", "isIndeterminate", "handleSelect", "value", "$attrs", "as", "asChild", "level", "props", "props", "$attrs"]
}
